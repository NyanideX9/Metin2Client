; Listing generated by Microsoft (R) Optimizing Compiler Version 19.43.34808.0 

	TITLE	C:\Marty 5.5\Src-Client\Client\SphereLib\Distribute\frustum.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?BuildViewFrustum@Frustum@@QAEXAAUD3DXMATRIX@@@Z ; Frustum::BuildViewFrustum
PUBLIC	?BuildViewFrustum2@Frustum@@QAEXAAUD3DXMATRIX@@MMMMABUD3DXVECTOR3@@1@Z ; Frustum::BuildViewFrustum2
PUBLIC	?ViewVolumeTest@Frustum@@QBE?AW4ViewState@@ABVVector3d@@M@Z ; Frustum::ViewVolumeTest
PUBLIC	__real@3f000000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	_sqrt:PROC
EXTRN	_tan:PROC
EXTRN	_D3DXPlaneNormalize@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\SphereLib\frustum.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\SphereLib\frustum.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\SphereLib\frustum.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\SphereLib\frustum.cpp
;	COMDAT ?ViewVolumeTest@Frustum@@QBE?AW4ViewState@@ABVVector3d@@M@Z
_TEXT	SEGMENT
_distance$ = -28					; size = 24
_center$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_c_v3Center$ = 8					; size = 4
_c_fRadius$ = 12					; size = 4
?ViewVolumeTest@Frustum@@QBE?AW4ViewState@@ABVVector3d@@M@Z PROC ; Frustum::ViewVolumeTest, COMDAT
; _this$ = ecx

; 26   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _c_v3Center$[ebp]
  00013	8b d1		 mov	 edx, ecx

; 27   : 	if (m_bUsingSphere)

  00015	f3 0f 10 5d 0c	 movss	 xmm3, DWORD PTR _c_fRadius$[ebp]
  0001a	80 3a 00	 cmp	 BYTE PTR [edx], 0
  0001d	74 46		 je	 SHORT $LN9@ViewVolume

; 28   : 	{
; 29   : 		D3DXVECTOR3 v(

  0001f	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00024	f3 0f 5c 42 08	 subss	 xmm0, DWORD PTR [edx+8]
  00029	f3 0f 10 10	 movss	 xmm2, DWORD PTR [eax]
  0002d	f3 0f 5c 52 04	 subss	 xmm2, DWORD PTR [edx+4]
  00032	f3 0f 10 48 08	 movss	 xmm1, DWORD PTR [eax+8]
  00037	f3 0f 5c 4a 0c	 subss	 xmm1, DWORD PTR [edx+12]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0003c	f3 0f 59 c0	 mulss	 xmm0, xmm0
  00040	f3 0f 59 d2	 mulss	 xmm2, xmm2
  00044	f3 0f 59 c9	 mulss	 xmm1, xmm1
  00048	f3 0f 58 d0	 addss	 xmm2, xmm0
; File C:\Marty 5.5\Src-Client\Client\SphereLib\frustum.cpp

; 34   : 		if ((c_fRadius + m_fRadius) * (c_fRadius + m_fRadius) < D3DXVec3LengthSq(&v))

  0004c	0f 28 c3	 movaps	 xmm0, xmm3
  0004f	f3 0f 58 42 10	 addss	 xmm0, DWORD PTR [edx+16]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00054	f3 0f 58 d1	 addss	 xmm2, xmm1
; File C:\Marty 5.5\Src-Client\Client\SphereLib\frustum.cpp

; 34   : 		if ((c_fRadius + m_fRadius) * (c_fRadius + m_fRadius) < D3DXVec3LengthSq(&v))

  00058	f3 0f 59 c0	 mulss	 xmm0, xmm0
  0005c	0f 2f d0	 comiss	 xmm2, xmm0
  0005f	0f 87 9f 00 00
	00		 ja	 $LN21@ViewVolume
$LN9@ViewVolume:

; 35   : 		{
; 36   : 			return VS_OUTSIDE;
; 37   : 		}
; 38   : 	}
; 39   : 
; 40   : 	const int count=6;
; 41   : 
; 42   : 	D3DXVECTOR3 center = c_v3Center;

  00065	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  00069	0f 28 d3	 movaps	 xmm2, xmm3
  0006c	8b 40 08	 mov	 eax, DWORD PTR [eax+8]

; 43   : 	//center.y *=-1;
; 44   : 
; 45   : 	int i;
; 46   : 
; 47   : 	float distance[count];
; 48   : 	for(i=0;i<count;i++)

  0006f	33 c9		 xor	 ecx, ecx
  00071	0f 57 15 00 00
	00 00		 xorps	 xmm2, DWORD PTR __xmm@80000000800000008000000080000000
  00078	66 0f d6 45 f0	 movq	 QWORD PTR _center$[ebp], xmm0
  0007d	f3 0f 10 6d f4	 movss	 xmm5, DWORD PTR _center$[ebp+4]
  00082	f3 0f 10 75 f0	 movss	 xmm6, DWORD PTR _center$[ebp]
  00087	89 45 f8	 mov	 DWORD PTR _center$[ebp+8], eax
  0008a	8d 42 1c	 lea	 eax, DWORD PTR [edx+28]
  0008d	f3 0f 10 65 f8	 movss	 xmm4, DWORD PTR _center$[ebp+8]
$LL4@ViewVolume:
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1647 :     return pP->a * pV->x + pP->b * pV->y + pP->c * pV->z + pP->d;

  00092	0f 28 c6	 movaps	 xmm0, xmm6
  00095	0f 28 cd	 movaps	 xmm1, xmm5
  00098	f3 0f 59 48 fc	 mulss	 xmm1, DWORD PTR [eax-4]
  0009d	f3 0f 59 40 f8	 mulss	 xmm0, DWORD PTR [eax-8]
  000a2	f3 0f 58 c8	 addss	 xmm1, xmm0
  000a6	0f 28 c4	 movaps	 xmm0, xmm4
  000a9	f3 0f 59 00	 mulss	 xmm0, DWORD PTR [eax]
  000ad	f3 0f 58 c8	 addss	 xmm1, xmm0
  000b1	f3 0f 58 48 04	 addss	 xmm1, DWORD PTR [eax+4]
; File C:\Marty 5.5\Src-Client\Client\SphereLib\frustum.cpp

; 51   : 		if (distance[i]<=-c_fRadius)

  000b6	0f 2f d1	 comiss	 xmm2, xmm1
  000b9	f3 0f 11 4c 8d
	e4		 movss	 DWORD PTR _distance$[ebp+ecx*4], xmm1
  000bf	73 43		 jae	 SHORT $LN21@ViewVolume

; 43   : 	//center.y *=-1;
; 44   : 
; 45   : 	int i;
; 46   : 
; 47   : 	float distance[count];
; 48   : 	for(i=0;i<count;i++)

  000c1	41		 inc	 ecx
  000c2	83 c0 10	 add	 eax, 16			; 00000010H
  000c5	83 f9 06	 cmp	 ecx, 6
  000c8	7c c8		 jl	 SHORT $LL4@ViewVolume

; 52   : 			return VS_OUTSIDE;
; 53   : 	}
; 54   : 
; 55   : 	//return VS_INSIDE;
; 56   : 
; 57   : 	for(i=0;i<count;i++)

  000ca	33 c0		 xor	 eax, eax
  000cc	0f 1f 40 00	 npad	 4
$LL7@ViewVolume:

; 58   : 	{
; 59   : 		if (distance[i]<=c_fRadius)

  000d0	0f 2f 5c 85 e4	 comiss	 xmm3, DWORD PTR _distance$[ebp+eax*4]
  000d5	73 18		 jae	 SHORT $LN22@ViewVolume

; 52   : 			return VS_OUTSIDE;
; 53   : 	}
; 54   : 
; 55   : 	//return VS_INSIDE;
; 56   : 
; 57   : 	for(i=0;i<count;i++)

  000d7	40		 inc	 eax
  000d8	83 f8 06	 cmp	 eax, 6
  000db	7c f3		 jl	 SHORT $LL7@ViewVolume

; 61   : 	}
; 62   : 
; 63   : 	return VS_INSIDE;

  000dd	33 c0		 xor	 eax, eax

; 64   : }

  000df	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e2	33 cd		 xor	 ecx, ebp
  000e4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e9	8b e5		 mov	 esp, ebp
  000eb	5d		 pop	 ebp
  000ec	c2 08 00	 ret	 8
$LN22@ViewVolume:

; 60   : 			return VS_PARTIAL;

  000ef	b8 01 00 00 00	 mov	 eax, 1

; 64   : }

  000f4	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f7	33 cd		 xor	 ecx, ebp
  000f9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000fe	8b e5		 mov	 esp, ebp
  00100	5d		 pop	 ebp
  00101	c2 08 00	 ret	 8
$LN21@ViewVolume:
  00104	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00107	b8 02 00 00 00	 mov	 eax, 2
  0010c	33 cd		 xor	 ecx, ebp
  0010e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00113	8b e5		 mov	 esp, ebp
  00115	5d		 pop	 ebp
  00116	c2 08 00	 ret	 8
?ViewVolumeTest@Frustum@@QBE?AW4ViewState@@ABVVector3d@@M@Z ENDP ; Frustum::ViewVolumeTest
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\SphereLib\frustum.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\SphereLib\frustum.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File D:\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_math.h
; File C:\Marty 5.5\Src-Client\Client\SphereLib\frustum.cpp
; File D:\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_math.h
; File C:\Marty 5.5\Src-Client\Client\SphereLib\frustum.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File D:\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_math.h
; File C:\Marty 5.5\Src-Client\Client\SphereLib\frustum.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\SphereLib\frustum.cpp
;	COMDAT ?BuildViewFrustum2@Frustum@@QAEXAAUD3DXMATRIX@@MMMMABUD3DXVECTOR3@@1@Z
_TEXT	SEGMENT
tv505 = -8						; size = 8
_mat$ = 8						; size = 4
_fNear$ = 12						; size = 4
_fFar$ = 16						; size = 4
_fFov$ = 20						; size = 4
_fH$ = 20						; size = 4
tv402 = 20						; size = 4
_fAspect$ = 24						; size = 4
_vCamera$ = 28						; size = 4
_vLook$ = 32						; size = 4
?BuildViewFrustum2@Frustum@@QAEXAAUD3DXMATRIX@@MMMMABUD3DXVECTOR3@@1@Z PROC ; Frustum::BuildViewFrustum2, COMDAT
; _this$ = ecx

; 82   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 83   : 	float fViewLen = fFar-fNear;

  00006	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fFar$[ebp]
  0000b	f3 0f 5c 45 0c	 subss	 xmm0, DWORD PTR _fNear$[ebp]
  00010	56		 push	 esi

; 84   : 	float fH = fViewLen * tan(fFov*0.5f);

  00011	83 ec 08	 sub	 esp, 8
  00014	8b f1		 mov	 esi, ecx
  00016	f3 0f 11 45 10	 movss	 DWORD PTR _fFar$[ebp], xmm0
  0001b	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fFov$[ebp]
  00020	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
  00028	0f 5a c0	 cvtps2pd xmm0, xmm0
  0002b	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00030	e8 00 00 00 00	 call	 _tan
  00035	f3 0f 10 6d 10	 movss	 xmm5, DWORD PTR _fFar$[ebp]
  0003a	0f 57 db	 xorps	 xmm3, xmm3
  0003d	0f 5a c5	 cvtps2pd xmm0, xmm5

; 86   : 	D3DXVECTOR3 P(0.0f, 0.0f, fNear+fViewLen*0.5f);

  00040	0f 28 e5	 movaps	 xmm4, xmm5
  00043	0f 57 d2	 xorps	 xmm2, xmm2
  00046	f3 0f 59 25 00
	00 00 00	 mulss	 xmm4, DWORD PTR __real@3f000000
  0004e	f2 0f 11 45 f8	 movsd	 QWORD PTR tv505[ebp], xmm0
  00053	dc 4d f8	 fmul	 QWORD PTR tv505[ebp]
  00056	f3 0f 58 65 0c	 addss	 xmm4, DWORD PTR _fNear$[ebp]
  0005b	d9 5d 14	 fstp	 DWORD PTR _fH$[ebp]
  0005e	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fH$[ebp]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00063	f3 0f 5c e5	 subss	 xmm4, xmm5
; File C:\Marty 5.5\Src-Client\Client\SphereLib\frustum.cpp

; 85   : 	float fW = fH*fAspect;

  00067	f3 0f 59 45 18	 mulss	 xmm0, DWORD PTR _fAspect$[ebp]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0006c	f3 0f 5c 55 14	 subss	 xmm2, DWORD PTR _fH$[ebp]
  00071	f3 0f 5c d8	 subss	 xmm3, xmm0

; 1239 :     return sqrtf(pV->x * pV->x + pV->y * pV->y + pV->z * pV->z);

  00075	f3 0f 59 e4	 mulss	 xmm4, xmm4
  00079	f3 0f 59 d2	 mulss	 xmm2, xmm2
  0007d	f3 0f 59 db	 mulss	 xmm3, xmm3
  00081	f3 0f 58 da	 addss	 xmm3, xmm2
  00085	f3 0f 58 dc	 addss	 xmm3, xmm4
; File D:\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_math.h

; 808  :             return (float)sqrt(_X);

  00089	0f 5a c3	 cvtps2pd xmm0, xmm3
  0008c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00091	e8 00 00 00 00	 call	 _sqrt
; File C:\Marty 5.5\Src-Client\Client\SphereLib\frustum.cpp

; 90   : 	m_v3Center = vCamera + vLook * (fNear+fViewLen*0.5f);

  00096	f3 0f 10 55 10	 movss	 xmm2, DWORD PTR _fFar$[ebp]
; File D:\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_math.h

; 808  :             return (float)sqrt(_X);

  0009b	83 c4 08	 add	 esp, 8
; File C:\Marty 5.5\Src-Client\Client\SphereLib\frustum.cpp

; 90   : 	m_v3Center = vCamera + vLook * (fNear+fViewLen*0.5f);

  0009e	f3 0f 59 15 00
	00 00 00	 mulss	 xmm2, DWORD PTR __real@3f000000

; 91   : 	BuildViewFrustum(mat);

  000a6	8b ce		 mov	 ecx, esi
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  000a8	8b 45 20	 mov	 eax, DWORD PTR _vLook$[ebp]
; File D:\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_math.h

; 808  :             return (float)sqrt(_X);

  000ab	d9 5d 14	 fstp	 DWORD PTR tv402[ebp]
; File C:\Marty 5.5\Src-Client\Client\SphereLib\frustum.cpp

; 89   : 	m_fRadius = D3DXVec3Length(&PQ);

  000ae	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR tv402[ebp]

; 90   : 	m_v3Center = vCamera + vLook * (fNear+fViewLen*0.5f);

  000b3	f3 0f 58 55 0c	 addss	 xmm2, DWORD PTR _fNear$[ebp]

; 91   : 	BuildViewFrustum(mat);

  000b8	ff 75 08	 push	 DWORD PTR _mat$[ebp]
  000bb	f3 0f 11 46 10	 movss	 DWORD PTR [esi+16], xmm0
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  000c0	0f 28 ca	 movaps	 xmm1, xmm2
  000c3	0f 28 c2	 movaps	 xmm0, xmm2
  000c6	f3 0f 59 08	 mulss	 xmm1, DWORD PTR [eax]
  000ca	f3 0f 59 40 04	 mulss	 xmm0, DWORD PTR [eax+4]
  000cf	f3 0f 59 50 08	 mulss	 xmm2, DWORD PTR [eax+8]

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  000d4	8b 45 1c	 mov	 eax, DWORD PTR _vCamera$[ebp]
  000d7	f3 0f 58 08	 addss	 xmm1, DWORD PTR [eax]
  000db	f3 0f 58 40 04	 addss	 xmm0, DWORD PTR [eax+4]
  000e0	f3 0f 58 50 08	 addss	 xmm2, DWORD PTR [eax+8]
; File C:\Marty 5.5\Src-Client\Client\SphereLib\frustum.cpp

; 90   : 	m_v3Center = vCamera + vLook * (fNear+fViewLen*0.5f);

  000e5	f3 0f 11 4e 04	 movss	 DWORD PTR [esi+4], xmm1
  000ea	f3 0f 11 46 08	 movss	 DWORD PTR [esi+8], xmm0
  000ef	f3 0f 11 56 0c	 movss	 DWORD PTR [esi+12], xmm2

; 91   : 	BuildViewFrustum(mat);

  000f4	e8 00 00 00 00	 call	 ?BuildViewFrustum@Frustum@@QAEXAAUD3DXMATRIX@@@Z ; Frustum::BuildViewFrustum

; 92   : 	m_bUsingSphere = true;

  000f9	c6 06 01	 mov	 BYTE PTR [esi], 1
  000fc	5e		 pop	 esi

; 93   : }

  000fd	8b e5		 mov	 esp, ebp
  000ff	5d		 pop	 ebp
  00100	c2 1c 00	 ret	 28			; 0000001cH
?BuildViewFrustum2@Frustum@@QAEXAAUD3DXMATRIX@@MMMMABUD3DXVECTOR3@@1@Z ENDP ; Frustum::BuildViewFrustum2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\SphereLib\frustum.cpp
;	COMDAT ?BuildViewFrustum@Frustum@@QAEXAAUD3DXMATRIX@@@Z
_TEXT	SEGMENT
_mat$ = 8						; size = 4
?BuildViewFrustum@Frustum@@QAEXAAUD3DXMATRIX@@@Z PROC	; Frustum::BuildViewFrustum, COMDAT
; _this$ = ecx

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 68   : 	m_bUsingSphere = false;
; 69   : 	m_plane[0] = D3DXPLANE(          mat._13,           mat._23,           mat._33,           mat._43);

  00003	8b 45 08	 mov	 eax, DWORD PTR _mat$[ebp]
  00006	c6 01 00	 mov	 BYTE PTR [ecx], 0
  00009	56		 push	 esi
  0000a	8d 71 14	 lea	 esi, DWORD PTR [ecx+20]
  0000d	f3 0f 10 58 08	 movss	 xmm3, DWORD PTR [eax+8]
  00012	f3 0f 10 50 18	 movss	 xmm2, DWORD PTR [eax+24]
  00017	f3 0f 10 48 28	 movss	 xmm1, DWORD PTR [eax+40]
  0001c	f3 0f 10 40 38	 movss	 xmm0, DWORD PTR [eax+56]
  00021	f3 0f 11 1e	 movss	 DWORD PTR [esi], xmm3
  00025	f3 0f 11 56 04	 movss	 DWORD PTR [esi+4], xmm2
  0002a	f3 0f 11 4e 08	 movss	 DWORD PTR [esi+8], xmm1
  0002f	f3 0f 11 46 0c	 movss	 DWORD PTR [esi+12], xmm0

; 70   : 	m_plane[1] = D3DXPLANE(mat._14 - mat._13, mat._24 - mat._23, mat._34 - mat._33, mat._44 - mat._43);

  00034	f3 0f 10 58 0c	 movss	 xmm3, DWORD PTR [eax+12]
  00039	f3 0f 5c 58 08	 subss	 xmm3, DWORD PTR [eax+8]
  0003e	f3 0f 10 50 1c	 movss	 xmm2, DWORD PTR [eax+28]
  00043	f3 0f 5c 50 18	 subss	 xmm2, DWORD PTR [eax+24]
  00048	f3 0f 10 48 2c	 movss	 xmm1, DWORD PTR [eax+44]
  0004d	f3 0f 5c 48 28	 subss	 xmm1, DWORD PTR [eax+40]
  00052	f3 0f 10 40 3c	 movss	 xmm0, DWORD PTR [eax+60]
  00057	f3 0f 5c 40 38	 subss	 xmm0, DWORD PTR [eax+56]
  0005c	f3 0f 11 59 24	 movss	 DWORD PTR [ecx+36], xmm3
  00061	f3 0f 11 51 28	 movss	 DWORD PTR [ecx+40], xmm2
  00066	f3 0f 11 49 2c	 movss	 DWORD PTR [ecx+44], xmm1
  0006b	57		 push	 edi
  0006c	f3 0f 11 41 30	 movss	 DWORD PTR [ecx+48], xmm0
  00071	bf 06 00 00 00	 mov	 edi, 6

; 71   : 	//m_plane[0] = D3DXPLANE(mat._14 + mat._13, mat._24 + mat._23, mat._34 + mat._33, mat._44 + mat._43);
; 72   : 	m_plane[2] = D3DXPLANE(mat._14 + mat._11, mat._24 + mat._21, mat._34 + mat._31, mat._44 + mat._41);

  00076	f3 0f 10 58 0c	 movss	 xmm3, DWORD PTR [eax+12]
  0007b	f3 0f 58 18	 addss	 xmm3, DWORD PTR [eax]
  0007f	f3 0f 10 50 1c	 movss	 xmm2, DWORD PTR [eax+28]
  00084	f3 0f 58 50 10	 addss	 xmm2, DWORD PTR [eax+16]
  00089	f3 0f 10 48 2c	 movss	 xmm1, DWORD PTR [eax+44]
  0008e	f3 0f 58 48 20	 addss	 xmm1, DWORD PTR [eax+32]
  00093	f3 0f 10 40 30	 movss	 xmm0, DWORD PTR [eax+48]
  00098	f3 0f 58 40 3c	 addss	 xmm0, DWORD PTR [eax+60]
  0009d	f3 0f 11 59 34	 movss	 DWORD PTR [ecx+52], xmm3
  000a2	f3 0f 11 51 38	 movss	 DWORD PTR [ecx+56], xmm2
  000a7	f3 0f 11 49 3c	 movss	 DWORD PTR [ecx+60], xmm1
  000ac	f3 0f 11 41 40	 movss	 DWORD PTR [ecx+64], xmm0

; 73   : 	m_plane[3] = D3DXPLANE(mat._14 - mat._11, mat._24 - mat._21, mat._34 - mat._31, mat._44 - mat._41);

  000b1	f3 0f 10 58 0c	 movss	 xmm3, DWORD PTR [eax+12]
  000b6	f3 0f 5c 18	 subss	 xmm3, DWORD PTR [eax]
  000ba	f3 0f 10 50 1c	 movss	 xmm2, DWORD PTR [eax+28]
  000bf	f3 0f 5c 50 10	 subss	 xmm2, DWORD PTR [eax+16]
  000c4	f3 0f 10 48 2c	 movss	 xmm1, DWORD PTR [eax+44]
  000c9	f3 0f 5c 48 20	 subss	 xmm1, DWORD PTR [eax+32]
  000ce	f3 0f 10 40 3c	 movss	 xmm0, DWORD PTR [eax+60]
  000d3	f3 0f 5c 40 30	 subss	 xmm0, DWORD PTR [eax+48]
  000d8	f3 0f 11 59 44	 movss	 DWORD PTR [ecx+68], xmm3
  000dd	f3 0f 11 51 48	 movss	 DWORD PTR [ecx+72], xmm2
  000e2	f3 0f 11 49 4c	 movss	 DWORD PTR [ecx+76], xmm1
  000e7	f3 0f 11 41 50	 movss	 DWORD PTR [ecx+80], xmm0

; 74   : 	m_plane[4] = D3DXPLANE(mat._14 + mat._12, mat._24 + mat._22, mat._34 + mat._32, mat._44 + mat._42);

  000ec	f3 0f 10 58 0c	 movss	 xmm3, DWORD PTR [eax+12]
  000f1	f3 0f 10 50 1c	 movss	 xmm2, DWORD PTR [eax+28]
  000f6	f3 0f 58 58 04	 addss	 xmm3, DWORD PTR [eax+4]
  000fb	f3 0f 10 48 2c	 movss	 xmm1, DWORD PTR [eax+44]
  00100	f3 0f 58 50 14	 addss	 xmm2, DWORD PTR [eax+20]
  00105	f3 0f 10 40 34	 movss	 xmm0, DWORD PTR [eax+52]
  0010a	f3 0f 58 48 24	 addss	 xmm1, DWORD PTR [eax+36]
  0010f	f3 0f 58 40 3c	 addss	 xmm0, DWORD PTR [eax+60]
  00114	f3 0f 11 59 54	 movss	 DWORD PTR [ecx+84], xmm3
  00119	f3 0f 11 51 58	 movss	 DWORD PTR [ecx+88], xmm2
  0011e	f3 0f 11 49 5c	 movss	 DWORD PTR [ecx+92], xmm1
  00123	f3 0f 11 41 60	 movss	 DWORD PTR [ecx+96], xmm0

; 75   : 	m_plane[5] = D3DXPLANE(mat._14 - mat._12, mat._24 - mat._22, mat._34 - mat._32, mat._44 - mat._42);

  00128	f3 0f 10 58 0c	 movss	 xmm3, DWORD PTR [eax+12]
  0012d	f3 0f 10 50 1c	 movss	 xmm2, DWORD PTR [eax+28]
  00132	f3 0f 10 48 2c	 movss	 xmm1, DWORD PTR [eax+44]
  00137	f3 0f 5c 58 04	 subss	 xmm3, DWORD PTR [eax+4]
  0013c	f3 0f 10 40 3c	 movss	 xmm0, DWORD PTR [eax+60]
  00141	f3 0f 5c 50 14	 subss	 xmm2, DWORD PTR [eax+20]
  00146	f3 0f 5c 48 24	 subss	 xmm1, DWORD PTR [eax+36]
  0014b	f3 0f 5c 40 34	 subss	 xmm0, DWORD PTR [eax+52]
  00150	f3 0f 11 59 64	 movss	 DWORD PTR [ecx+100], xmm3
  00155	f3 0f 11 51 68	 movss	 DWORD PTR [ecx+104], xmm2
  0015a	f3 0f 11 49 6c	 movss	 DWORD PTR [ecx+108], xmm1
  0015f	f3 0f 11 41 70	 movss	 DWORD PTR [ecx+112], xmm0
$LL4@BuildViewF:

; 78   : 		D3DXPlaneNormalize(&m_plane[i],&m_plane[i]);

  00164	56		 push	 esi
  00165	56		 push	 esi
  00166	e8 00 00 00 00	 call	 _D3DXPlaneNormalize@8
  0016b	83 c6 10	 add	 esi, 16			; 00000010H
  0016e	83 ef 01	 sub	 edi, 1
  00171	75 f1		 jne	 SHORT $LL4@BuildViewF

; 76   : 
; 77   : 	for(int i=0;i<6;i++)

  00173	5f		 pop	 edi
  00174	5e		 pop	 esi

; 79   : }

  00175	5d		 pop	 ebp
  00176	c2 04 00	 ret	 4
?BuildViewFrustum@Frustum@@QAEXAAUD3DXMATRIX@@@Z ENDP	; Frustum::BuildViewFrustum
_TEXT	ENDS
END

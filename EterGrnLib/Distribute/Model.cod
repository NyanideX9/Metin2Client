; Listing generated by Microsoft (R) Optimizing Compiler Version 19.43.34808.0 

	TITLE	C:\Marty 5.5\Src-Client\Client\eterGrnLib\Distribute\Model.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_ECGrannyMesh@@UAEPAXI@Z			; CGrannyMesh::`vector deleting destructor'
PUBLIC	??0CGrannyModel@@QAE@XZ				; CGrannyModel::CGrannyModel
PUBLIC	??1CGrannyModel@@UAE@XZ				; CGrannyModel::~CGrannyModel
PUBLIC	?IsEmpty@CGrannyModel@@QBE_NXZ			; CGrannyModel::IsEmpty
PUBLIC	?CreateFromGrannyModelPointer@CGrannyModel@@QAE_NPAUgranny_model@@@Z ; CGrannyModel::CreateFromGrannyModelPointer
PUBLIC	?CreateDeviceObjects@CGrannyModel@@QAE_NXZ	; CGrannyModel::CreateDeviceObjects
PUBLIC	?DestroyDeviceObjects@CGrannyModel@@QAEXXZ	; CGrannyModel::DestroyDeviceObjects
PUBLIC	?Destroy@CGrannyModel@@QAEXXZ			; CGrannyModel::Destroy
PUBLIC	?GetRigidVertexCount@CGrannyModel@@QBEHXZ	; CGrannyModel::GetRigidVertexCount
PUBLIC	?GetDeformVertexCount@CGrannyModel@@QBEHXZ	; CGrannyModel::GetDeformVertexCount
PUBLIC	?GetVertexCount@CGrannyModel@@QBEHXZ		; CGrannyModel::GetVertexCount
PUBLIC	?CanDeformPNTVertices@CGrannyModel@@QBE_NXZ	; CGrannyModel::CanDeformPNTVertices
PUBLIC	?DeformPNTVertices@CGrannyModel@@QBEXPAXPAUD3DXMATRIX@@ABV?$vector@PAUmesh_binding@granny@@V?$allocator@PAUmesh_binding@granny@@@std@@@std@@@Z ; CGrannyModel::DeformPNTVertices
PUBLIC	?GetIdxCount@CGrannyModel@@QAEHXZ		; CGrannyModel::GetIdxCount
PUBLIC	?GetMeshCount@CGrannyModel@@QBEHXZ		; CGrannyModel::GetMeshCount
PUBLIC	?GetMeshPointer@CGrannyModel@@QAEPAVCGrannyMesh@@H@Z ; CGrannyModel::GetMeshPointer
PUBLIC	?GetGrannyModelPointer@CGrannyModel@@QAEPAUgranny_model@@XZ ; CGrannyModel::GetGrannyModelPointer
PUBLIC	?GetMeshPointer@CGrannyModel@@QBEPBVCGrannyMesh@@H@Z ; CGrannyModel::GetMeshPointer
PUBLIC	?GetPNTD3DVertexBuffer@CGrannyModel@@QBEPAUIDirect3DVertexBuffer8@@XZ ; CGrannyModel::GetPNTD3DVertexBuffer
PUBLIC	?GetD3DIndexBuffer@CGrannyModel@@QBEPAUIDirect3DIndexBuffer8@@XZ ; CGrannyModel::GetD3DIndexBuffer
PUBLIC	?GetMeshNodeList@CGrannyModel@@QBEPBUSMeshNode@1@W4EType@CGrannyMesh@@W43CGrannyMaterial@@@Z ; CGrannyModel::GetMeshNodeList
PUBLIC	?LockVertices@CGrannyModel@@QBE_NPAPAX0@Z	; CGrannyModel::LockVertices
PUBLIC	?UnlockVertices@CGrannyModel@@QBEXXZ		; CGrannyModel::UnlockVertices
PUBLIC	?GetMaterialPalette@CGrannyModel@@QBEABVCGrannyMaterialPalette@@XZ ; CGrannyModel::GetMaterialPalette
PUBLIC	?LoadMeshs@CGrannyModel@@IAE_NXZ		; CGrannyModel::LoadMeshs
PUBLIC	?LoadPNTVertices@CGrannyModel@@IAE_NXZ		; CGrannyModel::LoadPNTVertices
PUBLIC	?LoadIndices@CGrannyModel@@IAE_NXZ		; CGrannyModel::LoadIndices
PUBLIC	?Initialize@CGrannyModel@@IAEXXZ		; CGrannyModel::Initialize
PUBLIC	?CheckMeshIndex@CGrannyModel@@IBEHH@Z		; CGrannyModel::CheckMeshIndex
PUBLIC	?AppendMeshNode@CGrannyModel@@IAEXW4EType@CGrannyMesh@@W42CGrannyMaterial@@H@Z ; CGrannyModel::AppendMeshNode
PUBLIC	?__LoadVertices@CGrannyModel@@IAE_NXZ		; CGrannyModel::__LoadVertices
PUBLIC	??_GCGrannyModel@@UAEPAXI@Z			; CGrannyModel::`scalar deleting destructor'
PUBLIC	??_7CGrannyModel@@6B@				; CGrannyModel::`vftable'
PUBLIC	??_C@_08GCJNLIKG@Position@			; `string'
PUBLIC	??_C@_06EFAGIKOH@Normal@			; `string'
PUBLIC	??_C@_0BE@MAKBLMOM@TextureCoordinates0@		; `string'
PUBLIC	??_C@_0BE@NJLKINKN@TextureCoordinates1@		; `string'
PUBLIC	??_R4CGrannyModel@@6B@				; CGrannyModel::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCGrannyModel@@@8			; CGrannyModel `RTTI Type Descriptor'
PUBLIC	??_R3CGrannyModel@@8				; CGrannyModel::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGrannyModel@@8				; CGrannyModel::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGrannyModel@@8			; CGrannyModel::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CReferenceObject@@8		; CReferenceObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCReferenceObject@@@8			; CReferenceObject `RTTI Type Descriptor'
PUBLIC	??_R3CReferenceObject@@8			; CReferenceObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CReferenceObject@@8			; CReferenceObject::`RTTI Base Class Array'
EXTRN	??_L@YGXPAXIIP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	__imp__GrannyGetTotalTypeSize@4:PROC
EXTRN	__imp__GrannyGetMeshVertexCount@4:PROC
EXTRN	__imp__GrannyMeshIsRigid@4:PROC
EXTRN	__imp__GrannyGetMeshIndexCount@4:PROC
EXTRN	??0CGraphicVertexBuffer@@QAE@XZ:PROC		; CGraphicVertexBuffer::CGraphicVertexBuffer
EXTRN	??1CGraphicVertexBuffer@@UAE@XZ:PROC		; CGraphicVertexBuffer::~CGraphicVertexBuffer
EXTRN	?Destroy@CGraphicVertexBuffer@@QAEXXZ:PROC	; CGraphicVertexBuffer::Destroy
EXTRN	?CreateDeviceObjects@CGraphicVertexBuffer@@QAE_NXZ:PROC ; CGraphicVertexBuffer::CreateDeviceObjects
EXTRN	?DestroyDeviceObjects@CGraphicVertexBuffer@@QAEXXZ:PROC ; CGraphicVertexBuffer::DestroyDeviceObjects
EXTRN	?Lock@CGraphicVertexBuffer@@QBE_NPAPAX@Z:PROC	; CGraphicVertexBuffer::Lock
EXTRN	?Unlock@CGraphicVertexBuffer@@QBE_NXZ:PROC	; CGraphicVertexBuffer::Unlock
EXTRN	?Unlock@CGraphicVertexBuffer@@QAE_NXZ:PROC	; CGraphicVertexBuffer::Unlock
EXTRN	??0CGraphicIndexBuffer@@QAE@XZ:PROC		; CGraphicIndexBuffer::CGraphicIndexBuffer
EXTRN	??1CGraphicIndexBuffer@@UAE@XZ:PROC		; CGraphicIndexBuffer::~CGraphicIndexBuffer
EXTRN	?Destroy@CGraphicIndexBuffer@@QAEXXZ:PROC	; CGraphicIndexBuffer::Destroy
EXTRN	?Create@CGraphicIndexBuffer@@QAE_NHW4_D3DFORMAT@@@Z:PROC ; CGraphicIndexBuffer::Create
EXTRN	?CreateDeviceObjects@CGraphicIndexBuffer@@QAE_NXZ:PROC ; CGraphicIndexBuffer::CreateDeviceObjects
EXTRN	?DestroyDeviceObjects@CGraphicIndexBuffer@@QAEXXZ:PROC ; CGraphicIndexBuffer::DestroyDeviceObjects
EXTRN	?Lock@CGraphicIndexBuffer@@QBE_NPAPAX@Z:PROC	; CGraphicIndexBuffer::Lock
EXTRN	?Unlock@CGraphicIndexBuffer@@QBEXXZ:PROC	; CGraphicIndexBuffer::Unlock
EXTRN	?Lock@CGraphicIndexBuffer@@QAE_NPAPAX@Z:PROC	; CGraphicIndexBuffer::Lock
EXTRN	?Unlock@CGraphicIndexBuffer@@QAEXXZ:PROC	; CGraphicIndexBuffer::Unlock
EXTRN	?GetD3DIndexBuffer@CGraphicIndexBuffer@@QBEPAUIDirect3DIndexBuffer8@@XZ:PROC ; CGraphicIndexBuffer::GetD3DIndexBuffer
EXTRN	??0CReferenceObject@@QAE@XZ:PROC		; CReferenceObject::CReferenceObject
EXTRN	??1CReferenceObject@@UAE@XZ:PROC		; CReferenceObject::~CReferenceObject
EXTRN	?AddReference@CReferenceObject@@QAEXXZ:PROC	; CReferenceObject::AddReference
EXTRN	?OnConstruct@CReferenceObject@@MAEXXZ:PROC	; CReferenceObject::OnConstruct
EXTRN	?OnSelfDestruct@CReferenceObject@@MAEXXZ:PROC	; CReferenceObject::OnSelfDestruct
EXTRN	??0CGrannyMaterialPalette@@QAE@XZ:PROC		; CGrannyMaterialPalette::CGrannyMaterialPalette
EXTRN	??1CGrannyMaterialPalette@@UAE@XZ:PROC		; CGrannyMaterialPalette::~CGrannyMaterialPalette
EXTRN	?Clear@CGrannyMaterialPalette@@QAEXXZ:PROC	; CGrannyMaterialPalette::Clear
EXTRN	??0CGrannyMesh@@QAE@XZ:PROC			; CGrannyMesh::CGrannyMesh
EXTRN	??1CGrannyMesh@@UAE@XZ:PROC			; CGrannyMesh::~CGrannyMesh
EXTRN	?CreateFromGrannyMeshPointer@CGrannyMesh@@QAE_NPAUgranny_skeleton@@PAUgranny_mesh@@HHAAVCGrannyMaterialPalette@@@Z:PROC ; CGrannyMesh::CreateFromGrannyMeshPointer
EXTRN	?LoadIndices@CGrannyMesh@@QAEXPAX@Z:PROC	; CGrannyMesh::LoadIndices
EXTRN	?LoadPNTVertices@CGrannyMesh@@QAEXPAX@Z:PROC	; CGrannyMesh::LoadPNTVertices
EXTRN	?NEW_LoadVertices@CGrannyMesh@@QAEXPAX@Z:PROC	; CGrannyMesh::NEW_LoadVertices
EXTRN	?SetPNT2Mesh@CGrannyMesh@@QAEXXZ:PROC		; CGrannyMesh::SetPNT2Mesh
EXTRN	?DeformPNTVertices@CGrannyMesh@@QBEXPAXPAUD3DXMATRIX@@PAUmesh_binding@granny@@@Z:PROC ; CGrannyMesh::DeformPNTVertices
EXTRN	?CanDeformPNTVertices@CGrannyMesh@@QBE_NXZ:PROC	; CGrannyMesh::CanDeformPNTVertices
EXTRN	?GetTriGroupNodeList@CGrannyMesh@@QBEPBUSTriGroupNode@1@W4EType@CGrannyMaterial@@@Z:PROC ; CGrannyMesh::GetTriGroupNodeList
EXTRN	?RebuildTriGroupNodeList@CGrannyMesh@@QAEXXZ:PROC ; CGrannyMesh::RebuildTriGroupNodeList
EXTRN	??_ECGrannyModel@@UAEPAXI@Z:PROC		; CGrannyModel::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT ??_R2CReferenceObject@@8
rdata$r	SEGMENT
??_R2CReferenceObject@@8 DD FLAT:??_R1A@?0A@EA@CReferenceObject@@8 ; CReferenceObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CReferenceObject@@8
rdata$r	SEGMENT
??_R3CReferenceObject@@8 DD 00H				; CReferenceObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CReferenceObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCReferenceObject@@@8
data$rs	SEGMENT
??_R0?AVCReferenceObject@@@8 DD FLAT:??_7type_info@@6B@	; CReferenceObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCReferenceObject@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CReferenceObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CReferenceObject@@8 DD FLAT:??_R0?AVCReferenceObject@@@8 ; CReferenceObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CReferenceObject@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGrannyModel@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGrannyModel@@8 DD FLAT:??_R0?AVCGrannyModel@@@8 ; CGrannyModel::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGrannyModel@@8
rdata$r	ENDS
;	COMDAT ??_R2CGrannyModel@@8
rdata$r	SEGMENT
??_R2CGrannyModel@@8 DD FLAT:??_R1A@?0A@EA@CGrannyModel@@8 ; CGrannyModel::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CReferenceObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CGrannyModel@@8
rdata$r	SEGMENT
??_R3CGrannyModel@@8 DD 00H				; CGrannyModel::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CGrannyModel@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGrannyModel@@@8
data$rs	SEGMENT
??_R0?AVCGrannyModel@@@8 DD FLAT:??_7type_info@@6B@	; CGrannyModel `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGrannyModel@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CGrannyModel@@6B@
rdata$r	SEGMENT
??_R4CGrannyModel@@6B@ DD 00H				; CGrannyModel::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCGrannyModel@@@8
	DD	FLAT:??_R3CGrannyModel@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BE@NJLKINKN@TextureCoordinates1@
CONST	SEGMENT
??_C@_0BE@NJLKINKN@TextureCoordinates1@ DB 'TextureCoordinates1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MAKBLMOM@TextureCoordinates0@
CONST	SEGMENT
??_C@_0BE@MAKBLMOM@TextureCoordinates0@ DB 'TextureCoordinates0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06EFAGIKOH@Normal@
CONST	SEGMENT
??_C@_06EFAGIKOH@Normal@ DB 'Normal', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08GCJNLIKG@Position@
CONST	SEGMENT
??_C@_08GCJNLIKG@Position@ DB 'Position', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CGrannyModel@@6B@
CONST	SEGMENT
??_7CGrannyModel@@6B@ DD FLAT:??_R4CGrannyModel@@6B@	; CGrannyModel::`vftable'
	DD	FLAT:??_ECGrannyModel@@UAEPAXI@Z
	DD	FLAT:?OnConstruct@CReferenceObject@@MAEXXZ
	DD	FLAT:?OnSelfDestruct@CReferenceObject@@MAEXXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?LoadMeshs@CGrannyModel@@IAE_NXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadMeshs@CGrannyModel@@IAE_NXZ$0
__ehfuncinfo$?LoadMeshs@CGrannyModel@@IAE_NXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?LoadMeshs@CGrannyModel@@IAE_NXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CGrannyModel@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CGrannyModel@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CGrannyModel@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CGrannyModel@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CGrannyModel@@QAE@XZ$2
__ehfuncinfo$??0CGrannyModel@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0CGrannyModel@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECGrannyMesh@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCGrannyModel@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCGrannyModel@@UAEPAXI@Z PROC			; CGrannyModel::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CGrannyModel@@UAE@XZ	; CGrannyModel::~CGrannyModel
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN5@scalar
  00011	68 90 00 00 00	 push	 144			; 00000090H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN5@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCGrannyModel@@UAEPAXI@Z ENDP			; CGrannyModel::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\Model.cpp
;	COMDAT ?__LoadVertices@CGrannyModel@@IAE_NXZ
_TEXT	SEGMENT
tv203 = -8						; size = 4
_vertices$ = -4						; size = 4
?__LoadVertices@CGrannyModel@@IAE_NXZ PROC		; CGrannyModel::__LoadVertices, COMDAT
; _this$ = ecx

; 363  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx

; 364  : 	if (m_rigidVtxCount <= 0)

  00009	8b 4e 60	 mov	 ecx, DWORD PTR [esi+96]
  0000c	85 c9		 test	 ecx, ecx
  0000e	7f 07		 jg	 SHORT $LN5@LoadVertic

; 365  : 		return true;

  00010	b0 01		 mov	 al, 1
  00012	5e		 pop	 esi

; 387  : }

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
$LN5@LoadVertic:

; 366  : 
; 367  : 	assert(m_meshs != NULL);
; 368  : 
; 369  : //	assert((m_dwFvF & (D3DFVF_XYZ|D3DFVF_NORMAL|D3DFVF_TEX1)) == m_dwFvF);
; 370  : 
; 371  : //	if (!m_pntVtxBuf.Create(m_rigidVtxCount, D3DFVF_XYZ|D3DFVF_NORMAL|D3DFVF_TEX1, D3DUSAGE_WRITEONLY, D3DPOOL_MANAGED))
; 372  : 	if (!m_pntVtxBuf.Create(m_rigidVtxCount, m_dwFvF, D3DUSAGE_WRITEONLY, D3DPOOL_MANAGED))

  00017	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  0001a	53		 push	 ebx
  0001b	6a 01		 push	 1
  0001d	8d 5e 14	 lea	 ebx, DWORD PTR [esi+20]
  00020	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00023	6a 08		 push	 8
  00025	ff b6 8c 00 00
	00		 push	 DWORD PTR [esi+140]
  0002b	89 5d f8	 mov	 DWORD PTR tv203[ebp], ebx
  0002e	51		 push	 ecx
  0002f	8b cb		 mov	 ecx, ebx
  00031	ff d0		 call	 eax
  00033	84 c0		 test	 al, al
  00035	74 48		 je	 SHORT $LN13@LoadVertic

; 373  : 		return false;
; 374  : 
; 375  : 	void* vertices;
; 376  : 	if (!m_pntVtxBuf.Lock(&vertices))

  00037	8b 03		 mov	 eax, DWORD PTR [ebx]
  00039	8d 4d fc	 lea	 ecx, DWORD PTR _vertices$[ebp]
  0003c	51		 push	 ecx
  0003d	8b cb		 mov	 ecx, ebx
  0003f	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00042	ff d0		 call	 eax
  00044	84 c0		 test	 al, al
  00046	74 37		 je	 SHORT $LN13@LoadVertic

; 378  : 
; 379  : 	for (int m = 0; m < m_pgrnModel->MeshBindingCount; ++m)

  00048	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0004b	33 db		 xor	 ebx, ebx
  0004d	39 58 4c	 cmp	 DWORD PTR [eax+76], ebx
  00050	7e 1d		 jle	 SHORT $LN3@LoadVertic
  00052	57		 push	 edi
  00053	33 ff		 xor	 edi, edi
$LL4@LoadVertic:

; 380  : 	{
; 381  : 		CGrannyMesh& rMesh = m_meshs[m];

  00055	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]

; 382  : 		rMesh.NEW_LoadVertices(vertices);

  00058	ff 75 fc	 push	 DWORD PTR _vertices$[ebp]
  0005b	03 cf		 add	 ecx, edi
  0005d	e8 00 00 00 00	 call	 ?NEW_LoadVertices@CGrannyMesh@@QAEXPAX@Z ; CGrannyMesh::NEW_LoadVertices
  00062	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00065	43		 inc	 ebx
  00066	83 c7 38	 add	 edi, 56			; 00000038H
  00069	3b 58 4c	 cmp	 ebx, DWORD PTR [eax+76]
  0006c	7c e7		 jl	 SHORT $LL4@LoadVertic

; 378  : 
; 379  : 	for (int m = 0; m < m_pgrnModel->MeshBindingCount; ++m)

  0006e	5f		 pop	 edi
$LN3@LoadVertic:

; 383  : 	}
; 384  : 
; 385  : 	m_pntVtxBuf.Unlock();

  0006f	8b 4d f8	 mov	 ecx, DWORD PTR tv203[ebp]
  00072	e8 00 00 00 00	 call	 ?Unlock@CGraphicVertexBuffer@@QAE_NXZ ; CGraphicVertexBuffer::Unlock
  00077	5b		 pop	 ebx

; 386  : 	return true;

  00078	b0 01		 mov	 al, 1
  0007a	5e		 pop	 esi

; 387  : }

  0007b	8b e5		 mov	 esp, ebp
  0007d	5d		 pop	 ebp
  0007e	c3		 ret	 0
$LN13@LoadVertic:
  0007f	5b		 pop	 ebx

; 377  : 		return false;

  00080	32 c0		 xor	 al, al
  00082	5e		 pop	 esi

; 387  : }

  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c3		 ret	 0
?__LoadVertices@CGrannyModel@@IAE_NXZ ENDP		; CGrannyModel::__LoadVertices
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\Model.cpp
;	COMDAT ?AppendMeshNode@CGrannyModel@@IAEXW4EType@CGrannyMesh@@W42CGrannyMaterial@@H@Z
_TEXT	SEGMENT
_eMeshType$ = 8						; size = 4
_eMtrlType$ = 12					; size = 4
_iMesh$ = 16						; size = 4
?AppendMeshNode@CGrannyModel@@IAEXW4EType@CGrannyMesh@@W42CGrannyMaterial@@H@Z PROC ; CGrannyModel::AppendMeshNode, COMDAT
; _this$ = ecx

; 275  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b f9		 mov	 edi, ecx

; 276  : 	assert(m_meshNodeSize < m_meshNodeCapacity);
; 277  : 
; 278  : 	TMeshNode& rMeshNode = m_meshNodes[m_meshNodeSize++];

  00007	8b 77 6c	 mov	 esi, DWORD PTR [edi+108]
  0000a	8b 47 48	 mov	 eax, DWORD PTR [edi+72]
  0000d	8d 14 76	 lea	 edx, DWORD PTR [esi+esi*2]
  00010	8d 14 90	 lea	 edx, DWORD PTR [eax+edx*4]
  00013	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  00016	89 47 6c	 mov	 DWORD PTR [edi+108], eax

; 279  : 
; 280  : 	rMeshNode.iMesh = iMesh;

  00019	8b 45 10	 mov	 eax, DWORD PTR _iMesh$[ebp]
  0001c	89 02		 mov	 DWORD PTR [edx], eax

; 281  : 	rMeshNode.pMesh = m_meshs + iMesh;

  0001e	8d 0c c5 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*8]
  00025	2b c8		 sub	 ecx, eax
  00027	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0002a	8d 04 c8	 lea	 eax, DWORD PTR [eax+ecx*8]

; 282  : 	rMeshNode.pNextMeshNode = m_meshNodeLists[eMeshType][eMtrlType];

  0002d	8b 4d 0c	 mov	 ecx, DWORD PTR _eMtrlType$[ebp]
  00030	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00033	8b 45 08	 mov	 eax, DWORD PTR _eMeshType$[ebp]
  00036	8d 04 41	 lea	 eax, DWORD PTR [ecx+eax*2]
  00039	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]
  0003c	8b 41 4c	 mov	 eax, DWORD PTR [ecx+76]

; 283  : 	m_meshNodeLists[eMeshType][eMtrlType] = &rMeshNode;

  0003f	5f		 pop	 edi
  00040	89 42 08	 mov	 DWORD PTR [edx+8], eax
  00043	89 51 4c	 mov	 DWORD PTR [ecx+76], edx
  00046	5e		 pop	 esi

; 284  : }

  00047	5d		 pop	 ebp
  00048	c2 0c 00	 ret	 12			; 0000000cH
?AppendMeshNode@CGrannyModel@@IAEXW4EType@CGrannyMesh@@W42CGrannyMaterial@@H@Z ENDP ; CGrannyModel::AppendMeshNode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\Model.cpp
;	COMDAT ?CheckMeshIndex@CGrannyModel@@IBEHH@Z
_TEXT	SEGMENT
_iIndex$ = 8						; size = 4
?CheckMeshIndex@CGrannyModel@@IBEHH@Z PROC		; CGrannyModel::CheckMeshIndex, COMDAT
; _this$ = ecx

; 265  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 55 08	 mov	 edx, DWORD PTR _iIndex$[ebp]

; 266  : 	if (iIndex < 0)

  00006	33 c0		 xor	 eax, eax
  00008	85 d2		 test	 edx, edx
  0000a	78 06		 js	 SHORT $LN1@CheckMeshI

; 267  : 		return FALSE;
; 268  : 	if (iIndex >= m_meshNodeSize)

  0000c	3b 51 6c	 cmp	 edx, DWORD PTR [ecx+108]
  0000f	0f 9c c0	 setl	 al
$LN1@CheckMeshI:

; 269  : 		return FALSE;
; 270  : 
; 271  : 	return TRUE;
; 272  : }

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?CheckMeshIndex@CGrannyModel@@IBEHH@Z ENDP		; CGrannyModel::CheckMeshIndex
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\Model.cpp
;	COMDAT ?Initialize@CGrannyModel@@IAEXXZ
_TEXT	SEGMENT
?Initialize@CGrannyModel@@IAEXXZ PROC			; CGrannyModel::Initialize, COMDAT
; _this$ = ecx

; 390  : {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 391  : 	memset(m_meshNodeLists, 0, sizeof(m_meshNodeLists));

  00003	0f 11 41 4c	 movups	 XMMWORD PTR [ecx+76], xmm0

; 392  : 
; 393  : 	m_pgrnModel = NULL;

  00007	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0

; 394  : 	m_meshs = NULL;

  0000e	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0

; 395  : 	m_meshNodes = NULL;

  00015	c7 41 48 00 00
	00 00		 mov	 DWORD PTR [ecx+72], 0

; 396  : 
; 397  : 	m_meshNodeSize = 0;

  0001c	c7 41 6c 00 00
	00 00		 mov	 DWORD PTR [ecx+108], 0

; 398  : 	m_meshNodeCapacity = 0;

  00023	c7 41 70 00 00
	00 00		 mov	 DWORD PTR [ecx+112], 0

; 399  : 
; 400  : 	m_rigidVtxCount = 0;

  0002a	c7 41 60 00 00
	00 00		 mov	 DWORD PTR [ecx+96], 0

; 401  : 	m_deformVtxCount = 0;

  00031	c7 41 5c 00 00
	00 00		 mov	 DWORD PTR [ecx+92], 0

; 402  : 	m_vtxCount = 0;

  00038	c7 41 64 00 00
	00 00		 mov	 DWORD PTR [ecx+100], 0

; 403  : 	m_idxCount = 0;

  0003f	c7 41 68 00 00
	00 00		 mov	 DWORD PTR [ecx+104], 0

; 404  : 
; 405  : 	m_canDeformPNVertices = false;

  00046	c6 41 74 00	 mov	 BYTE PTR [ecx+116], 0

; 406  : 
; 407  : 	m_dwFvF = 0;

  0004a	c7 81 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+140], 0

; 408  : 	m_bHaveBlendThing = false;

  00054	c6 81 88 00 00
	00 00		 mov	 BYTE PTR [ecx+136], 0

; 409  : }

  0005b	c3		 ret	 0
?Initialize@CGrannyModel@@IAEXXZ ENDP			; CGrannyModel::Initialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\Model.cpp
;	COMDAT ?LoadIndices@CGrannyModel@@IAE_NXZ
_TEXT	SEGMENT
tv189 = -8						; size = 4
_indices$ = -4						; size = 4
?LoadIndices@CGrannyModel@@IAE_NXZ PROC			; CGrannyModel::LoadIndices, COMDAT
; _this$ = ecx

; 130  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx

; 131  : 	//assert(m_idxCount > 0);
; 132  : 	if (m_idxCount <= 0)

  00009	8b 46 68	 mov	 eax, DWORD PTR [esi+104]
  0000c	85 c0		 test	 eax, eax
  0000e	7f 07		 jg	 SHORT $LN5@LoadIndice

; 133  : 		return true;

  00010	b0 01		 mov	 al, 1
  00012	5e		 pop	 esi

; 151  : }

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
$LN5@LoadIndice:
  00017	53		 push	 ebx

; 134  : 
; 135  : 	if (!m_idxBuf.Create(m_idxCount, D3DFMT_INDEX16))

  00018	8d 5e 34	 lea	 ebx, DWORD PTR [esi+52]
  0001b	6a 65		 push	 101			; 00000065H
  0001d	50		 push	 eax
  0001e	8b cb		 mov	 ecx, ebx
  00020	89 5d f8	 mov	 DWORD PTR tv189[ebp], ebx
  00023	e8 00 00 00 00	 call	 ?Create@CGraphicIndexBuffer@@QAE_NHW4_D3DFORMAT@@@Z ; CGraphicIndexBuffer::Create
  00028	84 c0		 test	 al, al
  0002a	74 46		 je	 SHORT $LN13@LoadIndice

; 136  : 		return false;
; 137  : 
; 138  : 	void * indices;
; 139  : 
; 140  : 	if (!m_idxBuf.Lock((void**)&indices))

  0002c	8d 45 fc	 lea	 eax, DWORD PTR _indices$[ebp]
  0002f	8b cb		 mov	 ecx, ebx
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ?Lock@CGraphicIndexBuffer@@QAE_NPAPAX@Z ; CGraphicIndexBuffer::Lock
  00037	84 c0		 test	 al, al
  00039	74 37		 je	 SHORT $LN13@LoadIndice

; 142  : 
; 143  : 	for (int m = 0; m < m_pgrnModel->MeshBindingCount; ++m)

  0003b	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0003e	33 db		 xor	 ebx, ebx
  00040	39 58 4c	 cmp	 DWORD PTR [eax+76], ebx
  00043	7e 1d		 jle	 SHORT $LN3@LoadIndice
  00045	57		 push	 edi
  00046	33 ff		 xor	 edi, edi
$LL4@LoadIndice:

; 144  : 	{
; 145  : 		CGrannyMesh& rMesh = m_meshs[m];

  00048	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]

; 146  : 		rMesh.LoadIndices(indices);

  0004b	ff 75 fc	 push	 DWORD PTR _indices$[ebp]
  0004e	03 cf		 add	 ecx, edi
  00050	e8 00 00 00 00	 call	 ?LoadIndices@CGrannyMesh@@QAEXPAX@Z ; CGrannyMesh::LoadIndices
  00055	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00058	43		 inc	 ebx
  00059	83 c7 38	 add	 edi, 56			; 00000038H
  0005c	3b 58 4c	 cmp	 ebx, DWORD PTR [eax+76]
  0005f	7c e7		 jl	 SHORT $LL4@LoadIndice

; 142  : 
; 143  : 	for (int m = 0; m < m_pgrnModel->MeshBindingCount; ++m)

  00061	5f		 pop	 edi
$LN3@LoadIndice:

; 147  : 	}
; 148  : 
; 149  : 	m_idxBuf.Unlock();

  00062	8b 4d f8	 mov	 ecx, DWORD PTR tv189[ebp]
  00065	e8 00 00 00 00	 call	 ?Unlock@CGraphicIndexBuffer@@QAEXXZ ; CGraphicIndexBuffer::Unlock
  0006a	5b		 pop	 ebx

; 150  : 	return true;

  0006b	b0 01		 mov	 al, 1
  0006d	5e		 pop	 esi

; 151  : }

  0006e	8b e5		 mov	 esp, ebp
  00070	5d		 pop	 ebp
  00071	c3		 ret	 0
$LN13@LoadIndice:
  00072	5b		 pop	 ebx

; 141  : 		return false;

  00073	32 c0		 xor	 al, al
  00075	5e		 pop	 esi

; 151  : }

  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c3		 ret	 0
?LoadIndices@CGrannyModel@@IAE_NXZ ENDP			; CGrannyModel::LoadIndices
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\Model.cpp
;	COMDAT ?LoadPNTVertices@CGrannyModel@@IAE_NXZ
_TEXT	SEGMENT
tv203 = -8						; size = 4
_vertices$ = -4						; size = 4
?LoadPNTVertices@CGrannyModel@@IAE_NXZ PROC		; CGrannyModel::LoadPNTVertices, COMDAT
; _this$ = ecx

; 106  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx

; 107  : 	if (m_rigidVtxCount <= 0)

  00009	8b 4e 60	 mov	 ecx, DWORD PTR [esi+96]
  0000c	85 c9		 test	 ecx, ecx
  0000e	7f 07		 jg	 SHORT $LN5@LoadPNTVer

; 108  : 		return true;

  00010	b0 01		 mov	 al, 1
  00012	5e		 pop	 esi

; 127  : }

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
$LN5@LoadPNTVer:

; 109  : 
; 110  : 	assert(m_meshs != NULL);
; 111  : 
; 112  : 	if (!m_pntVtxBuf.Create(m_rigidVtxCount, m_dwFvF, D3DUSAGE_WRITEONLY, D3DPOOL_MANAGED))

  00017	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  0001a	53		 push	 ebx
  0001b	6a 01		 push	 1
  0001d	8d 5e 14	 lea	 ebx, DWORD PTR [esi+20]
  00020	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00023	6a 08		 push	 8
  00025	ff b6 8c 00 00
	00		 push	 DWORD PTR [esi+140]
  0002b	89 5d f8	 mov	 DWORD PTR tv203[ebp], ebx
  0002e	51		 push	 ecx
  0002f	8b cb		 mov	 ecx, ebx
  00031	ff d0		 call	 eax
  00033	84 c0		 test	 al, al
  00035	74 48		 je	 SHORT $LN13@LoadPNTVer

; 113  : 		return false;
; 114  : 
; 115  : 	void* vertices;
; 116  : 	if (!m_pntVtxBuf.Lock(&vertices))

  00037	8b 03		 mov	 eax, DWORD PTR [ebx]
  00039	8d 4d fc	 lea	 ecx, DWORD PTR _vertices$[ebp]
  0003c	51		 push	 ecx
  0003d	8b cb		 mov	 ecx, ebx
  0003f	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00042	ff d0		 call	 eax
  00044	84 c0		 test	 al, al
  00046	74 37		 je	 SHORT $LN13@LoadPNTVer

; 118  : 
; 119  : 	for (int m = 0; m < m_pgrnModel->MeshBindingCount; ++m)

  00048	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0004b	33 db		 xor	 ebx, ebx
  0004d	39 58 4c	 cmp	 DWORD PTR [eax+76], ebx
  00050	7e 1d		 jle	 SHORT $LN3@LoadPNTVer
  00052	57		 push	 edi
  00053	33 ff		 xor	 edi, edi
$LL4@LoadPNTVer:

; 120  : 	{
; 121  : 		CGrannyMesh& rMesh = m_meshs[m];

  00055	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]

; 122  : 		rMesh.LoadPNTVertices(vertices);

  00058	ff 75 fc	 push	 DWORD PTR _vertices$[ebp]
  0005b	03 cf		 add	 ecx, edi
  0005d	e8 00 00 00 00	 call	 ?LoadPNTVertices@CGrannyMesh@@QAEXPAX@Z ; CGrannyMesh::LoadPNTVertices
  00062	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00065	43		 inc	 ebx
  00066	83 c7 38	 add	 edi, 56			; 00000038H
  00069	3b 58 4c	 cmp	 ebx, DWORD PTR [eax+76]
  0006c	7c e7		 jl	 SHORT $LL4@LoadPNTVer

; 118  : 
; 119  : 	for (int m = 0; m < m_pgrnModel->MeshBindingCount; ++m)

  0006e	5f		 pop	 edi
$LN3@LoadPNTVer:

; 123  : 	}
; 124  : 
; 125  : 	m_pntVtxBuf.Unlock();

  0006f	8b 4d f8	 mov	 ecx, DWORD PTR tv203[ebp]
  00072	e8 00 00 00 00	 call	 ?Unlock@CGraphicVertexBuffer@@QAE_NXZ ; CGraphicVertexBuffer::Unlock
  00077	5b		 pop	 ebx

; 126  : 	return true;

  00078	b0 01		 mov	 al, 1
  0007a	5e		 pop	 esi

; 127  : }

  0007b	8b e5		 mov	 esp, ebp
  0007d	5d		 pop	 ebp
  0007e	c3		 ret	 0
$LN13@LoadPNTVer:
  0007f	5b		 pop	 ebx

; 117  : 		return false;

  00080	32 c0		 xor	 al, al
  00082	5e		 pop	 esi

; 127  : }

  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c3		 ret	 0
?LoadPNTVertices@CGrannyModel@@IAE_NXZ ENDP		; CGrannyModel::LoadPNTVertices
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\Model.cpp
;	COMDAT ?LoadMeshs@CGrannyModel@@IAE_NXZ
_TEXT	SEGMENT
tv220 = -76						; size = 4
$T2 = -72						; size = 4
tv656 = -72						; size = 4
tv657 = -72						; size = 4
_m$1$ = -68						; size = 4
_blendPNTMeshNodeCount$1$ = -64				; size = 4
_pgrnMesh$1$ = -60					; size = 4
_i$1$ = -56						; size = 4
_pgrnSkeleton$1$ = -52					; size = 4
_vtxPos$1$ = -48					; size = 4
_vtxDeformPos$1$ = -44					; size = 4
$T3 = -40						; size = 4
_this$1$ = -36						; size = 4
_diffusePNTMeshNodeCount$1$ = -32			; size = 4
_vtxRigidPos$1$ = -28					; size = 4
_idxPos$1$ = -24					; size = 4
_rMesh$1$ = -20						; size = 4
_grni32xTypeCount$1$ = -16				; size = 4
__$EHRec$ = -12						; size = 12
?LoadMeshs@CGrannyModel@@IAE_NXZ PROC			; CGrannyModel::LoadMeshs, COMDAT
; _this$ = ecx

; 154  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadMeshs@CGrannyModel@@IAE_NXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 40	 sub	 esp, 64			; 00000040H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f9		 mov	 edi, ecx
  0002a	89 7d dc	 mov	 DWORD PTR _this$1$[ebp], edi

; 155  : 	assert(m_meshs == NULL);
; 156  : 	assert(m_pgrnModel != NULL);
; 157  : 
; 158  : 	if (m_pgrnModel->MeshBindingCount <= 0)

  0002d	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00030	83 78 4c 00	 cmp	 DWORD PTR [eax+76], 0
  00034	0f 8e f0 03 00
	00		 jle	 $LN78@LoadMeshs

; 159  : 		return true;
; 160  : 
; 161  : 	granny_skeleton * pgrnSkeleton = m_pgrnModel->Skeleton;

  0003a	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0003d	89 45 cc	 mov	 DWORD PTR _pgrnSkeleton$1$[ebp], eax

; 162  : 
; 163  : 	int vtxRigidPos = 0;

  00040	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _vtxRigidPos$1$[ebp], 0

; 164  : 	int vtxDeformPos = 0;

  00047	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _vtxDeformPos$1$[ebp], 0

; 165  : 	int vtxPos = 0;

  0004e	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _vtxPos$1$[ebp], 0

; 166  : 	int idxPos = 0;

  00055	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _idxPos$1$[ebp], 0

; 167  : 
; 168  : 	int diffusePNTMeshNodeCount = 0;

  0005c	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _diffusePNTMeshNodeCount$1$[ebp], 0

; 169  : 	int blendPNTMeshNodeCount = 0;

  00063	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _blendPNTMeshNodeCount$1$[ebp], 0

; 170  : 	int blendPNT2MeshNodeCount = 0;
; 171  : 
; 172  : 	int meshCount = GetMeshCount();

  0006a	e8 00 00 00 00	 call	 ?GetMeshCount@CGrannyModel@@QBEHXZ ; CGrannyModel::GetMeshCount
  0006f	8b d8		 mov	 ebx, eax

; 173  : 	m_meshs = new CGrannyMesh[meshCount];

  00071	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  00076	f7 e1		 mul	 ecx
  00078	b9 ff ff ff ff	 mov	 ecx, -1
  0007d	89 5d d8	 mov	 DWORD PTR $T3[ebp], ebx
  00080	0f 42 c1	 cmovb	 eax, ecx
  00083	83 c0 04	 add	 eax, 4
  00086	0f 42 c1	 cmovb	 eax, ecx
  00089	50		 push	 eax
  0008a	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0008f	83 c4 04	 add	 esp, 4
  00092	89 45 b8	 mov	 DWORD PTR $T2[ebp], eax
  00095	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0009c	85 c0		 test	 eax, eax
  0009e	74 1a		 je	 SHORT $LN33@LoadMeshs
  000a0	68 00 00 00 00	 push	 OFFSET ??1CGrannyMesh@@UAE@XZ ; CGrannyMesh::~CGrannyMesh
  000a5	68 00 00 00 00	 push	 OFFSET ??0CGrannyMesh@@QAE@XZ ; CGrannyMesh::CGrannyMesh
  000aa	53		 push	 ebx
  000ab	8d 70 04	 lea	 esi, DWORD PTR [eax+4]
  000ae	89 18		 mov	 DWORD PTR [eax], ebx
  000b0	6a 38		 push	 56			; 00000038H
  000b2	56		 push	 esi
  000b3	e8 00 00 00 00	 call	 ??_L@YGXPAXIIP6EX0@Z1@Z
  000b8	eb 02		 jmp	 SHORT $LN34@LoadMeshs
$LN33@LoadMeshs:
  000ba	33 f6		 xor	 esi, esi
$LN34@LoadMeshs:

; 174  : 
; 175  : 	m_dwFvF = 0;
; 176  : 
; 177  : 	for (int m = 0; m < meshCount; ++m)

  000bc	33 c9		 xor	 ecx, ecx
  000be	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c5	89 77 10	 mov	 DWORD PTR [edi+16], esi
  000c8	c7 87 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+140], 0
  000d2	89 4d bc	 mov	 DWORD PTR _m$1$[ebp], ecx
  000d5	85 db		 test	 ebx, ebx
  000d7	0f 8e 76 02 00
	00		 jle	 $LN76@LoadMeshs

; 173  : 	m_meshs = new CGrannyMesh[meshCount];

  000dd	33 d2		 xor	 edx, edx
  000df	89 55 b8	 mov	 DWORD PTR tv657[ebp], edx
$LL4@LoadMeshs:

; 178  : 	{
; 179  : 		CGrannyMesh& rMesh = m_meshs[m];

  000e2	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  000e5	03 c2		 add	 eax, edx
  000e7	89 45 ec	 mov	 DWORD PTR _rMesh$1$[ebp], eax

; 180  : 		granny_mesh* pgrnMesh = m_pgrnModel->MeshBindings[m].Mesh;

  000ea	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  000ed	8b 40 50	 mov	 eax, DWORD PTR [eax+80]
  000f0	8b 34 88	 mov	 esi, DWORD PTR [eax+ecx*4]

; 181  : 
; 182  : 		if (GrannyMeshIsRigid(pgrnMesh))

  000f3	56		 push	 esi
  000f4	89 75 c4	 mov	 DWORD PTR _pgrnMesh$1$[ebp], esi
  000f7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GrannyMeshIsRigid@4
  000fd	8b 4d ec	 mov	 ecx, DWORD PTR _rMesh$1$[ebp]
  00100	84 c0		 test	 al, al
  00102	8d 47 78	 lea	 eax, DWORD PTR [edi+120]
  00105	50		 push	 eax
  00106	8b 45 e8	 mov	 eax, DWORD PTR _idxPos$1$[ebp]
  00109	50		 push	 eax
  0010a	74 22		 je	 SHORT $LN14@LoadMeshs

; 183  : 		{
; 184  : 			if (!rMesh.CreateFromGrannyMeshPointer(pgrnSkeleton, pgrnMesh, vtxRigidPos, idxPos, m_kMtrlPal))

  0010c	8b 45 e4	 mov	 eax, DWORD PTR _vtxRigidPos$1$[ebp]
  0010f	50		 push	 eax
  00110	56		 push	 esi
  00111	ff 75 cc	 push	 DWORD PTR _pgrnSkeleton$1$[ebp]
  00114	e8 00 00 00 00	 call	 ?CreateFromGrannyMeshPointer@CGrannyMesh@@QAE_NPAUgranny_skeleton@@PAUgranny_mesh@@HHAAVCGrannyMaterialPalette@@@Z ; CGrannyMesh::CreateFromGrannyMeshPointer
  00119	84 c0		 test	 al, al
  0011b	0f 84 1e 02 00
	00		 je	 $LN42@LoadMeshs

; 185  : 				return false;
; 186  : 
; 187  : 			vtxRigidPos += GrannyGetMeshVertexCount(pgrnMesh);

  00121	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp__GrannyGetMeshVertexCount@4
  00126	56		 push	 esi
  00127	ff d0		 call	 eax
  00129	01 45 e4	 add	 DWORD PTR _vtxRigidPos$1$[ebp], eax

; 188  : 		}

  0012c	eb 35		 jmp	 SHORT $LN15@LoadMeshs
$LN14@LoadMeshs:

; 189  : 		else
; 190  : 		{
; 191  : 			if (!rMesh.CreateFromGrannyMeshPointer(pgrnSkeleton, pgrnMesh, vtxDeformPos, idxPos, m_kMtrlPal))

  0012e	8b 5d d4	 mov	 ebx, DWORD PTR _vtxDeformPos$1$[ebp]
  00131	53		 push	 ebx
  00132	56		 push	 esi
  00133	ff 75 cc	 push	 DWORD PTR _pgrnSkeleton$1$[ebp]
  00136	e8 00 00 00 00	 call	 ?CreateFromGrannyMeshPointer@CGrannyMesh@@QAE_NPAUgranny_skeleton@@PAUgranny_mesh@@HHAAVCGrannyMaterialPalette@@@Z ; CGrannyMesh::CreateFromGrannyMeshPointer
  0013b	84 c0		 test	 al, al
  0013d	0f 84 fc 01 00
	00		 je	 $LN42@LoadMeshs

; 193  : 
; 194  : 			vtxDeformPos += GrannyGetMeshVertexCount(pgrnMesh);

  00143	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp__GrannyGetMeshVertexCount@4
  00148	56		 push	 esi
  00149	ff d0		 call	 eax

; 195  : 			m_canDeformPNVertices |= rMesh.CanDeformPNTVertices();

  0014b	8b 4d ec	 mov	 ecx, DWORD PTR _rMesh$1$[ebp]
  0014e	03 d8		 add	 ebx, eax
  00150	89 5d d4	 mov	 DWORD PTR _vtxDeformPos$1$[ebp], ebx
  00153	8a 5f 74	 mov	 bl, BYTE PTR [edi+116]
  00156	e8 00 00 00 00	 call	 ?CanDeformPNTVertices@CGrannyMesh@@QBE_NXZ ; CGrannyMesh::CanDeformPNTVertices
  0015b	0a c3		 or	 al, bl
  0015d	8b 5d d8	 mov	 ebx, DWORD PTR $T3[ebp]
  00160	88 47 74	 mov	 BYTE PTR [edi+116], al
$LN15@LoadMeshs:

; 196  : 		}
; 197  : 		m_bHaveBlendThing |= rMesh.HaveBlendThing();

  00163	8b 45 ec	 mov	 eax, DWORD PTR _rMesh$1$[ebp]
  00166	8a 40 36	 mov	 al, BYTE PTR [eax+54]
  00169	08 87 88 00 00
	00		 or	 BYTE PTR [edi+136], al

; 198  : 
; 199  : 		granny_int32x grni32xTypeCount = GrannyGetTotalTypeSize(pgrnMesh->PrimaryVertexData->VertexType) / 32;

  0016f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00172	ff 30		 push	 DWORD PTR [eax]
  00174	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GrannyGetTotalTypeSize@4
  0017a	99		 cdq
  0017b	83 e2 1f	 and	 edx, 31			; 0000001fH

; 200  : 		int i = 0;

  0017e	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _i$1$[ebp], 0
  00185	03 c2		 add	 eax, edx
  00187	c1 f8 05	 sar	 eax, 5
  0018a	89 45 f0	 mov	 DWORD PTR _grni32xTypeCount$1$[ebp], eax

; 201  : 		while (i < grni32xTypeCount)

  0018d	85 c0		 test	 eax, eax
  0018f	0f 8e 49 01 00
	00		 jle	 $LN6@LoadMeshs

; 196  : 		}
; 197  : 		m_bHaveBlendThing |= rMesh.HaveBlendThing();

  00195	33 db		 xor	 ebx, ebx
  00197	8b c8		 mov	 ecx, eax
  00199	0f 1f 80 00 00
	00 00		 npad	 7
$LL5@LoadMeshs:

; 202  : 		{
; 203  : 			if (NULL == pgrnMesh->PrimaryVertexData->VertexType[i].Name || 0 == strlen(pgrnMesh->PrimaryVertexData->VertexType[i].Name))

  001a0	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  001a3	8b 00		 mov	 eax, DWORD PTR [eax]
  001a5	8b 74 18 04	 mov	 esi, DWORD PTR [eax+ebx+4]
  001a9	85 f6		 test	 esi, esi
  001ab	0f 84 15 01 00
	00		 je	 $LN26@LoadMeshs
  001b1	8b ce		 mov	 ecx, esi
  001b3	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL56@LoadMeshs:
  001b6	8a 01		 mov	 al, BYTE PTR [ecx]
  001b8	41		 inc	 ecx
  001b9	84 c0		 test	 al, al
  001bb	75 f9		 jne	 SHORT $LL56@LoadMeshs
  001bd	2b ca		 sub	 ecx, edx
  001bf	0f 84 fe 00 00
	00		 je	 $LN75@LoadMeshs

; 204  : 			{
; 205  : 				++i;
; 206  : 				continue;
; 207  : 			}
; 208  : 			if ( 0 == strcmp(pgrnMesh->PrimaryVertexData->VertexType[i].Name, GrannyVertexPositionName) )

  001c5	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_08GCJNLIKG@Position@
  001ca	8b c6		 mov	 eax, esi
  001cc	0f 1f 40 00	 npad	 4
$LL57@LoadMeshs:
  001d0	8a 10		 mov	 dl, BYTE PTR [eax]
  001d2	3a 11		 cmp	 dl, BYTE PTR [ecx]
  001d4	75 1a		 jne	 SHORT $LN58@LoadMeshs
  001d6	84 d2		 test	 dl, dl
  001d8	74 12		 je	 SHORT $LN59@LoadMeshs
  001da	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  001dd	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  001e0	75 0e		 jne	 SHORT $LN58@LoadMeshs
  001e2	83 c0 02	 add	 eax, 2
  001e5	83 c1 02	 add	 ecx, 2
  001e8	84 d2		 test	 dl, dl
  001ea	75 e4		 jne	 SHORT $LL57@LoadMeshs
$LN59@LoadMeshs:
  001ec	33 c0		 xor	 eax, eax
  001ee	eb 05		 jmp	 SHORT $LN60@LoadMeshs
$LN58@LoadMeshs:
  001f0	1b c0		 sbb	 eax, eax
  001f2	83 c8 01	 or	 eax, 1
$LN60@LoadMeshs:
  001f5	85 c0		 test	 eax, eax
  001f7	75 0c		 jne	 SHORT $LN20@LoadMeshs

; 209  : 				m_dwFvF |= D3DFVF_XYZ;

  001f9	83 8f 8c 00 00
	00 02		 or	 DWORD PTR [edi+140], 2
  00200	e9 be 00 00 00	 jmp	 $LN75@LoadMeshs
$LN20@LoadMeshs:

; 210  : 			else if ( 0 == strcmp(pgrnMesh->PrimaryVertexData->VertexType[i].Name, GrannyVertexNormalName) )

  00205	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_06EFAGIKOH@Normal@
  0020a	8b c6		 mov	 eax, esi
  0020c	0f 1f 40 00	 npad	 4
$LL61@LoadMeshs:
  00210	8a 10		 mov	 dl, BYTE PTR [eax]
  00212	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00214	75 1a		 jne	 SHORT $LN62@LoadMeshs
  00216	84 d2		 test	 dl, dl
  00218	74 12		 je	 SHORT $LN63@LoadMeshs
  0021a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0021d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00220	75 0e		 jne	 SHORT $LN62@LoadMeshs
  00222	83 c0 02	 add	 eax, 2
  00225	83 c1 02	 add	 ecx, 2
  00228	84 d2		 test	 dl, dl
  0022a	75 e4		 jne	 SHORT $LL61@LoadMeshs
$LN63@LoadMeshs:
  0022c	33 c0		 xor	 eax, eax
  0022e	eb 05		 jmp	 SHORT $LN64@LoadMeshs
$LN62@LoadMeshs:
  00230	1b c0		 sbb	 eax, eax
  00232	83 c8 01	 or	 eax, 1
$LN64@LoadMeshs:
  00235	85 c0		 test	 eax, eax
  00237	75 0c		 jne	 SHORT $LN22@LoadMeshs

; 211  : 				m_dwFvF |= D3DFVF_NORMAL;

  00239	83 8f 8c 00 00
	00 10		 or	 DWORD PTR [edi+140], 16	; 00000010H
  00240	e9 7e 00 00 00	 jmp	 $LN75@LoadMeshs
$LN22@LoadMeshs:

; 212  : 			else if ( 0 == strcmp(pgrnMesh->PrimaryVertexData->VertexType[i].Name, GrannyVertexTextureCoordinatesName"0") )

  00245	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0BE@MAKBLMOM@TextureCoordinates0@
  0024a	8b c6		 mov	 eax, esi
  0024c	0f 1f 40 00	 npad	 4
$LL65@LoadMeshs:
  00250	8a 10		 mov	 dl, BYTE PTR [eax]
  00252	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00254	75 1a		 jne	 SHORT $LN66@LoadMeshs
  00256	84 d2		 test	 dl, dl
  00258	74 12		 je	 SHORT $LN67@LoadMeshs
  0025a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0025d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00260	75 0e		 jne	 SHORT $LN66@LoadMeshs
  00262	83 c0 02	 add	 eax, 2
  00265	83 c1 02	 add	 ecx, 2
  00268	84 d2		 test	 dl, dl
  0026a	75 e4		 jne	 SHORT $LL65@LoadMeshs
$LN67@LoadMeshs:
  0026c	33 c0		 xor	 eax, eax
  0026e	eb 05		 jmp	 SHORT $LN68@LoadMeshs
$LN66@LoadMeshs:
  00270	1b c0		 sbb	 eax, eax
  00272	83 c8 01	 or	 eax, 1
$LN68@LoadMeshs:
  00275	85 c0		 test	 eax, eax
  00277	75 0c		 jne	 SHORT $LN24@LoadMeshs

; 213  : 				m_dwFvF |= D3DFVF_TEX1;

  00279	81 8f 8c 00 00
	00 00 01 00 00	 or	 DWORD PTR [edi+140], 256 ; 00000100H
  00283	eb 3e		 jmp	 SHORT $LN75@LoadMeshs
$LN24@LoadMeshs:

; 214  : 			else if ( 0 == strcmp(pgrnMesh->PrimaryVertexData->VertexType[i].Name, GrannyVertexTextureCoordinatesName"1") )

  00285	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BE@NJLKINKN@TextureCoordinates1@
  0028a	66 0f 1f 44 00
	00		 npad	 6
$LL69@LoadMeshs:
  00290	8a 0e		 mov	 cl, BYTE PTR [esi]
  00292	3a 08		 cmp	 cl, BYTE PTR [eax]
  00294	75 1a		 jne	 SHORT $LN70@LoadMeshs
  00296	84 c9		 test	 cl, cl
  00298	74 12		 je	 SHORT $LN71@LoadMeshs
  0029a	8a 4e 01	 mov	 cl, BYTE PTR [esi+1]
  0029d	3a 48 01	 cmp	 cl, BYTE PTR [eax+1]
  002a0	75 0e		 jne	 SHORT $LN70@LoadMeshs
  002a2	83 c6 02	 add	 esi, 2
  002a5	83 c0 02	 add	 eax, 2
  002a8	84 c9		 test	 cl, cl
  002aa	75 e4		 jne	 SHORT $LL69@LoadMeshs
$LN71@LoadMeshs:
  002ac	33 c0		 xor	 eax, eax
  002ae	eb 05		 jmp	 SHORT $LN72@LoadMeshs
$LN70@LoadMeshs:
  002b0	1b c0		 sbb	 eax, eax
  002b2	83 c8 01	 or	 eax, 1
$LN72@LoadMeshs:
  002b5	85 c0		 test	 eax, eax
  002b7	75 0a		 jne	 SHORT $LN75@LoadMeshs

; 215  : 				m_dwFvF |= D3DFVF_TEX2;

  002b9	81 8f 8c 00 00
	00 00 02 00 00	 or	 DWORD PTR [edi+140], 512 ; 00000200H
$LN75@LoadMeshs:

; 201  : 		while (i < grni32xTypeCount)

  002c3	8b 4d f0	 mov	 ecx, DWORD PTR _grni32xTypeCount$1$[ebp]
$LN26@LoadMeshs:
  002c6	8b 45 c8	 mov	 eax, DWORD PTR _i$1$[ebp]
  002c9	83 c3 20	 add	 ebx, 32			; 00000020H
  002cc	8b 75 c4	 mov	 esi, DWORD PTR _pgrnMesh$1$[ebp]
  002cf	40		 inc	 eax
  002d0	89 45 c8	 mov	 DWORD PTR _i$1$[ebp], eax
  002d3	3b c1		 cmp	 eax, ecx
  002d5	0f 8c c5 fe ff
	ff		 jl	 $LL5@LoadMeshs
  002db	8b 5d d8	 mov	 ebx, DWORD PTR $T3[ebp]
$LN6@LoadMeshs:

; 216  : 			++i;
; 217  : 		}
; 218  : 
; 219  : 		vtxPos += GrannyGetMeshVertexCount(pgrnMesh);

  002de	56		 push	 esi
  002df	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GrannyGetMeshVertexCount@4
  002e5	01 45 d0	 add	 DWORD PTR _vtxPos$1$[ebp], eax

; 220  : 		idxPos += GrannyGetMeshIndexCount(pgrnMesh);

  002e8	56		 push	 esi
  002e9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GrannyGetMeshIndexCount@4

; 221  : 
; 222  : 		if (rMesh.GetTriGroupNodeList(CGrannyMaterial::TYPE_DIFFUSE_PNT))

  002ef	8b 4d ec	 mov	 ecx, DWORD PTR _rMesh$1$[ebp]
  002f2	01 45 e8	 add	 DWORD PTR _idxPos$1$[ebp], eax
  002f5	6a 00		 push	 0
  002f7	e8 00 00 00 00	 call	 ?GetTriGroupNodeList@CGrannyMesh@@QBEPBUSTriGroupNode@1@W4EType@CGrannyMaterial@@@Z ; CGrannyMesh::GetTriGroupNodeList

; 223  : 			++diffusePNTMeshNodeCount;
; 224  : 
; 225  : 		if (rMesh.GetTriGroupNodeList(CGrannyMaterial::TYPE_BLEND_PNT))

  002fc	8b 4d e0	 mov	 ecx, DWORD PTR _diffusePNTMeshNodeCount$1$[ebp]
  002ff	85 c0		 test	 eax, eax
  00301	6a 01		 push	 1
  00303	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  00306	0f 44 d1	 cmove	 edx, ecx
  00309	8b 4d ec	 mov	 ecx, DWORD PTR _rMesh$1$[ebp]
  0030c	89 55 e0	 mov	 DWORD PTR _diffusePNTMeshNodeCount$1$[ebp], edx
  0030f	e8 00 00 00 00	 call	 ?GetTriGroupNodeList@CGrannyMesh@@QBEPBUSTriGroupNode@1@W4EType@CGrannyMaterial@@@Z ; CGrannyMesh::GetTriGroupNodeList
  00314	8b 55 c0	 mov	 edx, DWORD PTR _blendPNTMeshNodeCount$1$[ebp]
  00317	85 c0		 test	 eax, eax
  00319	8b 4d bc	 mov	 ecx, DWORD PTR _m$1$[ebp]
  0031c	8d 72 01	 lea	 esi, DWORD PTR [edx+1]
  0031f	0f 44 f2	 cmove	 esi, edx
  00322	8b 55 b8	 mov	 edx, DWORD PTR tv657[ebp]
  00325	41		 inc	 ecx
  00326	89 75 c0	 mov	 DWORD PTR _blendPNTMeshNodeCount$1$[ebp], esi
  00329	83 c2 38	 add	 edx, 56			; 00000038H
  0032c	89 4d bc	 mov	 DWORD PTR _m$1$[ebp], ecx
  0032f	89 55 b8	 mov	 DWORD PTR tv657[ebp], edx
  00332	3b cb		 cmp	 ecx, ebx
  00334	0f 8c a8 fd ff
	ff		 jl	 $LL4@LoadMeshs

; 189  : 		else
; 190  : 		{
; 191  : 			if (!rMesh.CreateFromGrannyMeshPointer(pgrnSkeleton, pgrnMesh, vtxDeformPos, idxPos, m_kMtrlPal))

  0033a	8b 45 e0	 mov	 eax, DWORD PTR _diffusePNTMeshNodeCount$1$[ebp]
  0033d	eb 18		 jmp	 SHORT $LN3@LoadMeshs
$LN42@LoadMeshs:

; 192  : 				return false;

  0033f	32 c0		 xor	 al, al

; 261  : 	return true;
; 262  : }

  00341	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00344	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0034b	59		 pop	 ecx
  0034c	5f		 pop	 edi
  0034d	5e		 pop	 esi
  0034e	5b		 pop	 ebx
  0034f	8b e5		 mov	 esp, ebp
  00351	5d		 pop	 ebp
  00352	c3		 ret	 0
$LN76@LoadMeshs:

; 174  : 
; 175  : 	m_dwFvF = 0;
; 176  : 
; 177  : 	for (int m = 0; m < meshCount; ++m)

  00353	33 c0		 xor	 eax, eax
  00355	33 f6		 xor	 esi, esi
$LN3@LoadMeshs:

; 226  : 			++blendPNTMeshNodeCount;
; 227  : 	}
; 228  : 
; 229  : 	m_meshNodeCapacity = diffusePNTMeshNodeCount + blendPNTMeshNodeCount + blendPNT2MeshNodeCount;

  00357	03 c6		 add	 eax, esi

; 230  : 	m_meshNodes = new TMeshNode[m_meshNodeCapacity];

  00359	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0035e	89 47 70	 mov	 DWORD PTR [edi+112], eax
  00361	f7 e1		 mul	 ecx
  00363	b9 ff ff ff ff	 mov	 ecx, -1
  00368	0f 42 c1	 cmovb	 eax, ecx
  0036b	50		 push	 eax
  0036c	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00371	83 c4 04	 add	 esp, 4
  00374	89 47 48	 mov	 DWORD PTR [edi+72], eax
  00377	33 f6		 xor	 esi, esi

; 231  : 
; 232  : 	for (int n = 0; n < meshCount; ++n)

  00379	85 db		 test	 ebx, ebx
  0037b	7e 69		 jle	 SHORT $LN8@LoadMeshs

; 226  : 			++blendPNTMeshNodeCount;
; 227  : 	}
; 228  : 
; 229  : 	m_meshNodeCapacity = diffusePNTMeshNodeCount + blendPNTMeshNodeCount + blendPNT2MeshNodeCount;

  0037d	33 c0		 xor	 eax, eax
  0037f	89 45 b8	 mov	 DWORD PTR tv656[ebp], eax
$LL9@LoadMeshs:

; 233  : 	{
; 234  : 		CGrannyMesh& rMesh = m_meshs[n];

  00382	8b 5f 10	 mov	 ebx, DWORD PTR [edi+16]
  00385	03 d8		 add	 ebx, eax

; 235  : 		granny_mesh* pgrnMesh = m_pgrnModel->MeshBindings[n].Mesh;

  00387	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  0038a	8b 40 50	 mov	 eax, DWORD PTR [eax+80]

; 236  : 
; 237  : 		CGrannyMesh::EType eMeshType = GrannyMeshIsRigid(pgrnMesh) ? CGrannyMesh::TYPE_RIGID : CGrannyMesh::TYPE_DEFORM;

  0038d	ff 34 b0	 push	 DWORD PTR [eax+esi*4]
  00390	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GrannyMeshIsRigid@4
  00396	0f b6 f8	 movzx	 edi, al

; 238  : 
; 239  : 		if (rMesh.GetTriGroupNodeList(CGrannyMaterial::TYPE_DIFFUSE_PNT))

  00399	8b cb		 mov	 ecx, ebx
  0039b	6a 00		 push	 0
  0039d	83 f7 01	 xor	 edi, 1
  003a0	e8 00 00 00 00	 call	 ?GetTriGroupNodeList@CGrannyMesh@@QBEPBUSTriGroupNode@1@W4EType@CGrannyMaterial@@@Z ; CGrannyMesh::GetTriGroupNodeList
  003a5	85 c0		 test	 eax, eax
  003a7	74 0c		 je	 SHORT $LN29@LoadMeshs

; 240  : 			AppendMeshNode(eMeshType, CGrannyMaterial::TYPE_DIFFUSE_PNT, n);

  003a9	8b 4d dc	 mov	 ecx, DWORD PTR _this$1$[ebp]
  003ac	56		 push	 esi
  003ad	6a 00		 push	 0
  003af	57		 push	 edi
  003b0	e8 00 00 00 00	 call	 ?AppendMeshNode@CGrannyModel@@IAEXW4EType@CGrannyMesh@@W42CGrannyMaterial@@H@Z ; CGrannyModel::AppendMeshNode
$LN29@LoadMeshs:

; 241  : 
; 242  : 		if (rMesh.GetTriGroupNodeList(CGrannyMaterial::TYPE_BLEND_PNT))

  003b5	6a 01		 push	 1
  003b7	8b cb		 mov	 ecx, ebx
  003b9	e8 00 00 00 00	 call	 ?GetTriGroupNodeList@CGrannyMesh@@QBEPBUSTriGroupNode@1@W4EType@CGrannyMaterial@@@Z ; CGrannyMesh::GetTriGroupNodeList
  003be	85 c0		 test	 eax, eax
  003c0	74 10		 je	 SHORT $LN73@LoadMeshs

; 243  : 			AppendMeshNode(eMeshType, CGrannyMaterial::TYPE_BLEND_PNT, n);

  003c2	56		 push	 esi
  003c3	6a 01		 push	 1
  003c5	57		 push	 edi
  003c6	8b 7d dc	 mov	 edi, DWORD PTR _this$1$[ebp]
  003c9	8b cf		 mov	 ecx, edi
  003cb	e8 00 00 00 00	 call	 ?AppendMeshNode@CGrannyModel@@IAEXW4EType@CGrannyMesh@@W42CGrannyMaterial@@H@Z ; CGrannyModel::AppendMeshNode
  003d0	eb 03		 jmp	 SHORT $LN7@LoadMeshs
$LN73@LoadMeshs:

; 241  : 
; 242  : 		if (rMesh.GetTriGroupNodeList(CGrannyMaterial::TYPE_BLEND_PNT))

  003d2	8b 7d dc	 mov	 edi, DWORD PTR _this$1$[ebp]
$LN7@LoadMeshs:

; 231  : 
; 232  : 	for (int n = 0; n < meshCount; ++n)

  003d5	8b 45 b8	 mov	 eax, DWORD PTR tv656[ebp]
  003d8	46		 inc	 esi
  003d9	8b 5d d8	 mov	 ebx, DWORD PTR $T3[ebp]
  003dc	83 c0 38	 add	 eax, 56			; 00000038H
  003df	89 45 b8	 mov	 DWORD PTR tv656[ebp], eax
  003e2	3b f3		 cmp	 esi, ebx
  003e4	7c 9c		 jl	 SHORT $LL9@LoadMeshs
$LN8@LoadMeshs:

; 244  : 	}
; 245  : 
; 246  : 	// For Dungeon Block
; 247  : 	if ((D3DFVF_XYZ|D3DFVF_NORMAL|D3DFVF_TEX1|D3DFVF_TEX2) == m_dwFvF)

  003e6	81 bf 8c 00 00
	00 12 03 00 00	 cmp	 DWORD PTR [edi+140], 786 ; 00000312H
  003f0	75 20		 jne	 SHORT $LN11@LoadMeshs

; 248  : 	{
; 249  : 		for (int n = 0; n < meshCount; ++n)

  003f2	85 db		 test	 ebx, ebx
  003f4	7e 1c		 jle	 SHORT $LN11@LoadMeshs
  003f6	33 f6		 xor	 esi, esi
  003f8	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL12@LoadMeshs:

; 250  : 		{
; 251  : 			CGrannyMesh& rMesh = m_meshs[n];

  00400	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  00403	03 ce		 add	 ecx, esi

; 252  : 			rMesh.SetPNT2Mesh();

  00405	e8 00 00 00 00	 call	 ?SetPNT2Mesh@CGrannyMesh@@QAEXXZ ; CGrannyMesh::SetPNT2Mesh
  0040a	83 c6 38	 add	 esi, 56			; 00000038H
  0040d	83 eb 01	 sub	 ebx, 1
  00410	75 ee		 jne	 SHORT $LL12@LoadMeshs
$LN11@LoadMeshs:

; 253  : 		}
; 254  : 	}
; 255  : 
; 256  : 	m_rigidVtxCount = vtxRigidPos;

  00412	8b 45 e4	 mov	 eax, DWORD PTR _vtxRigidPos$1$[ebp]
  00415	89 47 60	 mov	 DWORD PTR [edi+96], eax

; 257  : 	m_deformVtxCount = vtxDeformPos;

  00418	8b 45 d4	 mov	 eax, DWORD PTR _vtxDeformPos$1$[ebp]
  0041b	89 47 5c	 mov	 DWORD PTR [edi+92], eax

; 258  : 
; 259  : 	m_vtxCount = vtxPos;

  0041e	8b 45 d0	 mov	 eax, DWORD PTR _vtxPos$1$[ebp]
  00421	89 47 64	 mov	 DWORD PTR [edi+100], eax

; 260  : 	m_idxCount = idxPos;

  00424	8b 45 e8	 mov	 eax, DWORD PTR _idxPos$1$[ebp]
  00427	89 47 68	 mov	 DWORD PTR [edi+104], eax
$LN78@LoadMeshs:

; 261  : 	return true;
; 262  : }

  0042a	b0 01		 mov	 al, 1
  0042c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0042f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00436	59		 pop	 ecx
  00437	5f		 pop	 edi
  00438	5e		 pop	 esi
  00439	5b		 pop	 ebx
  0043a	8b e5		 mov	 esp, ebp
  0043c	5d		 pop	 ebp
  0043d	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadMeshs@CGrannyModel@@IAE_NXZ$0:
  00000	8b 45 d8	 mov	 eax, DWORD PTR $T3[ebp]
  00003	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  00008	f7 e1		 mul	 ecx
  0000a	8b c8		 mov	 ecx, eax
  0000c	b8 ff ff ff ff	 mov	 eax, -1
  00011	0f 42 c8	 cmovb	 ecx, eax
  00014	83 c1 04	 add	 ecx, 4
  00017	b8 ff ff ff ff	 mov	 eax, -1
  0001c	0f 42 c8	 cmovb	 ecx, eax
  0001f	51		 push	 ecx
  00020	8b 45 b8	 mov	 eax, DWORD PTR $T2[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  00029	83 c4 08	 add	 esp, 8
  0002c	c3		 ret	 0
  0002d	cc		 int	 3
  0002e	cc		 int	 3
  0002f	cc		 int	 3
  00030	cc		 int	 3
  00031	cc		 int	 3
__ehhandler$?LoadMeshs@CGrannyModel@@IAE_NXZ:
  00032	90		 npad	 1
  00033	90		 npad	 1
  00034	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00038	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003b	8b 4a b0	 mov	 ecx, DWORD PTR [edx-80]
  0003e	33 c8		 xor	 ecx, eax
  00040	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00045	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadMeshs@CGrannyModel@@IAE_NXZ
  0004a	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadMeshs@CGrannyModel@@IAE_NXZ ENDP			; CGrannyModel::LoadMeshs
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\Model.cpp
;	COMDAT ?GetMaterialPalette@CGrannyModel@@QBEABVCGrannyMaterialPalette@@XZ
_TEXT	SEGMENT
?GetMaterialPalette@CGrannyModel@@QBEABVCGrannyMaterialPalette@@XZ PROC ; CGrannyModel::GetMaterialPalette, COMDAT
; _this$ = ecx

; 7    : 	return m_kMtrlPal;

  00000	8d 41 78	 lea	 eax, DWORD PTR [ecx+120]

; 8    : }

  00003	c3		 ret	 0
?GetMaterialPalette@CGrannyModel@@QBEABVCGrannyMaterialPalette@@XZ ENDP ; CGrannyModel::GetMaterialPalette
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\Model.cpp
;	COMDAT ?UnlockVertices@CGrannyModel@@QBEXXZ
_TEXT	SEGMENT
?UnlockVertices@CGrannyModel@@QBEXXZ PROC		; CGrannyModel::UnlockVertices, COMDAT
; _this$ = ecx

; 100  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 101  : 	m_idxBuf.Unlock();

  00003	8d 4e 34	 lea	 ecx, DWORD PTR [esi+52]
  00006	e8 00 00 00 00	 call	 ?Unlock@CGraphicIndexBuffer@@QBEXXZ ; CGraphicIndexBuffer::Unlock

; 102  : 	m_pntVtxBuf.Unlock();

  0000b	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  0000e	5e		 pop	 esi
  0000f	e9 00 00 00 00	 jmp	 ?Unlock@CGraphicVertexBuffer@@QBE_NXZ ; CGraphicVertexBuffer::Unlock
?UnlockVertices@CGrannyModel@@QBEXXZ ENDP		; CGrannyModel::UnlockVertices
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\Model.cpp
;	COMDAT ?LockVertices@CGrannyModel@@QBE_NPAPAX0@Z
_TEXT	SEGMENT
_indicies$ = 8						; size = 4
_vertices$ = 12						; size = 4
?LockVertices@CGrannyModel@@QBE_NPAPAX0@Z PROC		; CGrannyModel::LockVertices, COMDAT
; _this$ = ecx

; 86   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 87   : 	if (!m_idxBuf.Lock(indicies))

  00005	ff 75 08	 push	 DWORD PTR _indicies$[ebp]
  00008	8b f9		 mov	 edi, ecx
  0000a	8d 4f 34	 lea	 ecx, DWORD PTR [edi+52]
  0000d	e8 00 00 00 00	 call	 ?Lock@CGraphicIndexBuffer@@QBE_NPAPAX@Z ; CGraphicIndexBuffer::Lock
  00012	84 c0		 test	 al, al
  00014	74 17		 je	 SHORT $LN7@LockVertic

; 88   : 		return false;
; 89   : 
; 90   : 	if (!m_pntVtxBuf.Lock(vertices))

  00016	ff 75 0c	 push	 DWORD PTR _vertices$[ebp]
  00019	8d 4f 14	 lea	 ecx, DWORD PTR [edi+20]
  0001c	e8 00 00 00 00	 call	 ?Lock@CGraphicVertexBuffer@@QBE_NPAPAX@Z ; CGraphicVertexBuffer::Lock
  00021	84 c0		 test	 al, al
  00023	75 10		 jne	 SHORT $LN3@LockVertic

; 91   : 	{
; 92   : 		m_idxBuf.Unlock();

  00025	8d 4f 34	 lea	 ecx, DWORD PTR [edi+52]
  00028	e8 00 00 00 00	 call	 ?Unlock@CGraphicIndexBuffer@@QBEXXZ ; CGraphicIndexBuffer::Unlock
$LN7@LockVertic:

; 97   : }

  0002d	5f		 pop	 edi
  0002e	32 c0		 xor	 al, al
  00030	5e		 pop	 esi
  00031	5d		 pop	 ebp
  00032	c2 08 00	 ret	 8
$LN3@LockVertic:
  00035	5f		 pop	 edi

; 93   : 		return false;
; 94   : 	}
; 95   : 
; 96   : 	return true;

  00036	b0 01		 mov	 al, 1

; 97   : }

  00038	5e		 pop	 esi
  00039	5d		 pop	 ebp
  0003a	c2 08 00	 ret	 8
?LockVertices@CGrannyModel@@QBE_NPAPAX0@Z ENDP		; CGrannyModel::LockVertices
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\Model.cpp
;	COMDAT ?GetMeshNodeList@CGrannyModel@@QBEPBUSMeshNode@1@W4EType@CGrannyMesh@@W43CGrannyMaterial@@@Z
_TEXT	SEGMENT
_eMeshType$ = 8						; size = 4
_eMtrlType$ = 12					; size = 4
?GetMeshNodeList@CGrannyModel@@QBEPBUSMeshNode@1@W4EType@CGrannyMesh@@W43CGrannyMaterial@@@Z PROC ; CGrannyModel::GetMeshNodeList, COMDAT
; _this$ = ecx

; 11   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 12   : 	return m_meshNodeLists[eMeshType][eMtrlType];

  00003	8b 55 0c	 mov	 edx, DWORD PTR _eMtrlType$[ebp]
  00006	8b 45 08	 mov	 eax, DWORD PTR _eMeshType$[ebp]
  00009	8d 04 42	 lea	 eax, DWORD PTR [edx+eax*2]
  0000c	8b 44 81 4c	 mov	 eax, DWORD PTR [ecx+eax*4+76]

; 13   : }

  00010	5d		 pop	 ebp
  00011	c2 08 00	 ret	 8
?GetMeshNodeList@CGrannyModel@@QBEPBUSMeshNode@1@W4EType@CGrannyMesh@@W43CGrannyMaterial@@@Z ENDP ; CGrannyModel::GetMeshNodeList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\Model.cpp
;	COMDAT ?GetD3DIndexBuffer@CGrannyModel@@QBEPAUIDirect3DIndexBuffer8@@XZ
_TEXT	SEGMENT
?GetD3DIndexBuffer@CGrannyModel@@QBEPAUIDirect3DIndexBuffer8@@XZ PROC ; CGrannyModel::GetD3DIndexBuffer, COMDAT
; _this$ = ecx

; 77   : 	return m_idxBuf.GetD3DIndexBuffer();

  00000	83 c1 34	 add	 ecx, 52			; 00000034H
  00003	e9 00 00 00 00	 jmp	 ?GetD3DIndexBuffer@CGraphicIndexBuffer@@QBEPAUIDirect3DIndexBuffer8@@XZ ; CGraphicIndexBuffer::GetD3DIndexBuffer
?GetD3DIndexBuffer@CGrannyModel@@QBEPAUIDirect3DIndexBuffer8@@XZ ENDP ; CGrannyModel::GetD3DIndexBuffer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\Model.cpp
;	COMDAT ?GetPNTD3DVertexBuffer@CGrannyModel@@QBEPAUIDirect3DVertexBuffer8@@XZ
_TEXT	SEGMENT
?GetPNTD3DVertexBuffer@CGrannyModel@@QBEPAUIDirect3DVertexBuffer8@@XZ PROC ; CGrannyModel::GetPNTD3DVertexBuffer, COMDAT
; _this$ = ecx

; 82   : 	return m_pntVtxBuf.GetD3DVertexBuffer();

  00000	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]

; 83   : }

  00003	c3		 ret	 0
?GetPNTD3DVertexBuffer@CGrannyModel@@QBEPAUIDirect3DVertexBuffer8@@XZ ENDP ; CGrannyModel::GetPNTD3DVertexBuffer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\Model.cpp
;	COMDAT ?GetMeshPointer@CGrannyModel@@QBEPBVCGrannyMesh@@H@Z
_TEXT	SEGMENT
_iMesh$ = 8						; size = 4
?GetMeshPointer@CGrannyModel@@QBEPBVCGrannyMesh@@H@Z PROC ; CGrannyModel::GetMeshPointer, COMDAT
; _this$ = ecx

; 24   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 25   : 	assert(CheckMeshIndex(iMesh));
; 26   : 	assert(m_meshs != NULL);
; 27   : 
; 28   : 	return m_meshs + iMesh;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iMesh$[ebp]
  00006	8d 14 c5 00 00
	00 00		 lea	 edx, DWORD PTR [eax*8]
  0000d	2b d0		 sub	 edx, eax
  0000f	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00012	8d 04 d0	 lea	 eax, DWORD PTR [eax+edx*8]

; 29   : }

  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?GetMeshPointer@CGrannyModel@@QBEPBVCGrannyMesh@@H@Z ENDP ; CGrannyModel::GetMeshPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\Model.cpp
;	COMDAT ?GetGrannyModelPointer@CGrannyModel@@QAEPAUgranny_model@@XZ
_TEXT	SEGMENT
?GetGrannyModelPointer@CGrannyModel@@QAEPAUgranny_model@@XZ PROC ; CGrannyModel::GetGrannyModelPointer, COMDAT
; _this$ = ecx

; 72   : 	return m_pgrnModel;

  00000	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]

; 73   : }

  00003	c3		 ret	 0
?GetGrannyModelPointer@CGrannyModel@@QAEPAUgranny_model@@XZ ENDP ; CGrannyModel::GetGrannyModelPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\Model.cpp
;	COMDAT ?GetMeshPointer@CGrannyModel@@QAEPAVCGrannyMesh@@H@Z
_TEXT	SEGMENT
_iMesh$ = 8						; size = 4
?GetMeshPointer@CGrannyModel@@QAEPAVCGrannyMesh@@H@Z PROC ; CGrannyModel::GetMeshPointer, COMDAT
; _this$ = ecx

; 16   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 17   : 	assert(CheckMeshIndex(iMesh));
; 18   : 	assert(m_meshs != NULL);
; 19   : 
; 20   : 	return m_meshs + iMesh;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iMesh$[ebp]
  00006	8d 14 c5 00 00
	00 00		 lea	 edx, DWORD PTR [eax*8]
  0000d	2b d0		 sub	 edx, eax
  0000f	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00012	8d 04 d0	 lea	 eax, DWORD PTR [eax+edx*8]

; 21   : }

  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?GetMeshPointer@CGrannyModel@@QAEPAVCGrannyMesh@@H@Z ENDP ; CGrannyModel::GetMeshPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\Model.cpp
;	COMDAT ?GetMeshCount@CGrannyModel@@QBEHXZ
_TEXT	SEGMENT
?GetMeshCount@CGrannyModel@@QBEHXZ PROC			; CGrannyModel::GetMeshCount, COMDAT
; _this$ = ecx

; 67   : 	return m_pgrnModel ? m_pgrnModel->MeshBindingCount : 0;

  00000	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00003	85 c0		 test	 eax, eax
  00005	74 04		 je	 SHORT $LN3@GetMeshCou
  00007	8b 40 4c	 mov	 eax, DWORD PTR [eax+76]

; 68   : }

  0000a	c3		 ret	 0
$LN3@GetMeshCou:

; 67   : 	return m_pgrnModel ? m_pgrnModel->MeshBindingCount : 0;

  0000b	33 c0		 xor	 eax, eax

; 68   : }

  0000d	c3		 ret	 0
?GetMeshCount@CGrannyModel@@QBEHXZ ENDP			; CGrannyModel::GetMeshCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\Model.cpp
;	COMDAT ?GetIdxCount@CGrannyModel@@QAEHXZ
_TEXT	SEGMENT
?GetIdxCount@CGrannyModel@@QAEHXZ PROC			; CGrannyModel::GetIdxCount, COMDAT
; _this$ = ecx

; 308  : 	return m_idxCount;

  00000	8b 41 68	 mov	 eax, DWORD PTR [ecx+104]

; 309  : }

  00003	c3		 ret	 0
?GetIdxCount@CGrannyModel@@QAEHXZ ENDP			; CGrannyModel::GetIdxCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\Model.cpp
;	COMDAT ?DeformPNTVertices@CGrannyModel@@QBEXPAXPAUD3DXMATRIX@@ABV?$vector@PAUmesh_binding@granny@@V?$allocator@PAUmesh_binding@granny@@@std@@@std@@@Z
_TEXT	SEGMENT
_this$1$ = -8						; size = 4
_meshCount$1$ = -4					; size = 4
_dstBaseVertices$ = 8					; size = 4
_boneMatrices$ = 12					; size = 4
_c_rvct_pgrnMeshBinding$ = 16				; size = 4
?DeformPNTVertices@CGrannyModel@@QBEXPAXPAUD3DXMATRIX@@ABV?$vector@PAUmesh_binding@granny@@V?$allocator@PAUmesh_binding@granny@@@std@@@std@@@Z PROC ; CGrannyModel::DeformPNTVertices, COMDAT
; _this$ = ecx

; 37   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	8b d9		 mov	 ebx, ecx
  00009	56		 push	 esi
  0000a	89 5d f8	 mov	 DWORD PTR _this$1$[ebp], ebx

; 38   : 	int meshCount = GetMeshCount();

  0000d	e8 00 00 00 00	 call	 ?GetMeshCount@CGrannyModel@@QBEHXZ ; CGrannyModel::GetMeshCount
  00012	33 f6		 xor	 esi, esi
  00014	89 45 fc	 mov	 DWORD PTR _meshCount$1$[ebp], eax

; 39   : 
; 40   : 	for (int iMesh = 0; iMesh < meshCount; ++iMesh)

  00017	85 c0		 test	 eax, eax
  00019	7e 37		 jle	 SHORT $LN3@DeformPNTV

; 38   : 	int meshCount = GetMeshCount();

  0001b	57		 push	 edi
  0001c	33 ff		 xor	 edi, edi
  0001e	66 90		 npad	 2
$LL4@DeformPNTV:

; 41   : 	{
; 42   : 		assert(iMesh < c_rvct_pgrnMeshBinding.size());
; 43   : 
; 44   : 		CGrannyMesh & rMesh = m_meshs[iMesh];

  00020	8b 5b 10	 mov	 ebx, DWORD PTR [ebx+16]
  00023	03 df		 add	 ebx, edi

; 45   : 		if (rMesh.CanDeformPNTVertices())

  00025	8b cb		 mov	 ecx, ebx
  00027	e8 00 00 00 00	 call	 ?CanDeformPNTVertices@CGrannyMesh@@QBE_NXZ ; CGrannyMesh::CanDeformPNTVertices
  0002c	84 c0		 test	 al, al
  0002e	74 15		 je	 SHORT $LN2@DeformPNTV

; 46   : 			rMesh.DeformPNTVertices(dstBaseVertices, boneMatrices, c_rvct_pgrnMeshBinding[iMesh]);

  00030	8b 45 10	 mov	 eax, DWORD PTR _c_rvct_pgrnMeshBinding$[ebp]
  00033	8b cb		 mov	 ecx, ebx
  00035	8b 00		 mov	 eax, DWORD PTR [eax]
  00037	ff 34 b0	 push	 DWORD PTR [eax+esi*4]
  0003a	ff 75 0c	 push	 DWORD PTR _boneMatrices$[ebp]
  0003d	ff 75 08	 push	 DWORD PTR _dstBaseVertices$[ebp]
  00040	e8 00 00 00 00	 call	 ?DeformPNTVertices@CGrannyMesh@@QBEXPAXPAUD3DXMATRIX@@PAUmesh_binding@granny@@@Z ; CGrannyMesh::DeformPNTVertices
$LN2@DeformPNTV:

; 39   : 
; 40   : 	for (int iMesh = 0; iMesh < meshCount; ++iMesh)

  00045	8b 5d f8	 mov	 ebx, DWORD PTR _this$1$[ebp]
  00048	46		 inc	 esi
  00049	83 c7 38	 add	 edi, 56			; 00000038H
  0004c	3b 75 fc	 cmp	 esi, DWORD PTR _meshCount$1$[ebp]
  0004f	7c cf		 jl	 SHORT $LL4@DeformPNTV
  00051	5f		 pop	 edi
$LN3@DeformPNTV:
  00052	5e		 pop	 esi

; 47   : 	}
; 48   : }

  00053	5b		 pop	 ebx
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 0c 00	 ret	 12			; 0000000cH
?DeformPNTVertices@CGrannyModel@@QBEXPAXPAUD3DXMATRIX@@ABV?$vector@PAUmesh_binding@granny@@V?$allocator@PAUmesh_binding@granny@@@std@@@std@@@Z ENDP ; CGrannyModel::DeformPNTVertices
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\Model.cpp
;	COMDAT ?CanDeformPNTVertices@CGrannyModel@@QBE_NXZ
_TEXT	SEGMENT
?CanDeformPNTVertices@CGrannyModel@@QBE_NXZ PROC	; CGrannyModel::CanDeformPNTVertices, COMDAT
; _this$ = ecx

; 33   : 	return m_canDeformPNVertices;

  00000	8a 41 74	 mov	 al, BYTE PTR [ecx+116]

; 34   : }

  00003	c3		 ret	 0
?CanDeformPNTVertices@CGrannyModel@@QBE_NXZ ENDP	; CGrannyModel::CanDeformPNTVertices
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\Model.cpp
;	COMDAT ?GetVertexCount@CGrannyModel@@QBEHXZ
_TEXT	SEGMENT
?GetVertexCount@CGrannyModel@@QBEHXZ PROC		; CGrannyModel::GetVertexCount, COMDAT
; _this$ = ecx

; 62   : 	return m_vtxCount;

  00000	8b 41 64	 mov	 eax, DWORD PTR [ecx+100]

; 63   : }

  00003	c3		 ret	 0
?GetVertexCount@CGrannyModel@@QBEHXZ ENDP		; CGrannyModel::GetVertexCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\Model.cpp
;	COMDAT ?GetDeformVertexCount@CGrannyModel@@QBEHXZ
_TEXT	SEGMENT
?GetDeformVertexCount@CGrannyModel@@QBEHXZ PROC		; CGrannyModel::GetDeformVertexCount, COMDAT
; _this$ = ecx

; 57   : 	return m_deformVtxCount;

  00000	8b 41 5c	 mov	 eax, DWORD PTR [ecx+92]

; 58   : }

  00003	c3		 ret	 0
?GetDeformVertexCount@CGrannyModel@@QBEHXZ ENDP		; CGrannyModel::GetDeformVertexCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\Model.cpp
;	COMDAT ?GetRigidVertexCount@CGrannyModel@@QBEHXZ
_TEXT	SEGMENT
?GetRigidVertexCount@CGrannyModel@@QBEHXZ PROC		; CGrannyModel::GetRigidVertexCount, COMDAT
; _this$ = ecx

; 52   : 	return m_rigidVtxCount;

  00000	8b 41 60	 mov	 eax, DWORD PTR [ecx+96]

; 53   : }

  00003	c3		 ret	 0
?GetRigidVertexCount@CGrannyModel@@QBEHXZ ENDP		; CGrannyModel::GetRigidVertexCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\Model.cpp
;	COMDAT ?Destroy@CGrannyModel@@QAEXXZ
_TEXT	SEGMENT
?Destroy@CGrannyModel@@QAEXXZ PROC			; CGrannyModel::Destroy, COMDAT
; _this$ = ecx

; 347  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 348  : 	m_kMtrlPal.Clear();

  00003	8d 4e 78	 lea	 ecx, DWORD PTR [esi+120]
  00006	e8 00 00 00 00	 call	 ?Clear@CGrannyMaterialPalette@@QAEXXZ ; CGrannyMaterialPalette::Clear

; 349  : 
; 350  : 	if (m_meshNodes)

  0000b	8b 46 48	 mov	 eax, DWORD PTR [esi+72]
  0000e	85 c0		 test	 eax, eax
  00010	74 09		 je	 SHORT $LN2@Destroy

; 351  : 		delete [] m_meshNodes;

  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00018	83 c4 04	 add	 esp, 4
$LN2@Destroy:

; 352  : 
; 353  : 	if (m_meshs)

  0001b	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0001e	85 c9		 test	 ecx, ecx
  00020	74 1c		 je	 SHORT $LN6@Destroy

; 354  : 		delete [] m_meshs;

  00022	83 79 fc 00	 cmp	 DWORD PTR [ecx-4], 0
  00026	8d 41 fc	 lea	 eax, DWORD PTR [ecx-4]
  00029	74 08		 je	 SHORT $LN5@Destroy
  0002b	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002d	6a 03		 push	 3
  0002f	ff 10		 call	 DWORD PTR [eax]
  00031	eb 0b		 jmp	 SHORT $LN6@Destroy
$LN5@Destroy:
  00033	6a 04		 push	 4
  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0003b	83 c4 08	 add	 esp, 8
$LN6@Destroy:

; 355  : 
; 356  : 	m_pntVtxBuf.Destroy();

  0003e	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  00041	e8 00 00 00 00	 call	 ?Destroy@CGraphicVertexBuffer@@QAEXXZ ; CGraphicVertexBuffer::Destroy

; 357  : 	m_idxBuf.Destroy();

  00046	8d 4e 34	 lea	 ecx, DWORD PTR [esi+52]
  00049	e8 00 00 00 00	 call	 ?Destroy@CGraphicIndexBuffer@@QAEXXZ ; CGraphicIndexBuffer::Destroy

; 358  : 
; 359  : 	Initialize();

  0004e	8b ce		 mov	 ecx, esi
  00050	5e		 pop	 esi
  00051	e9 00 00 00 00	 jmp	 ?Initialize@CGrannyModel@@IAEXXZ ; CGrannyModel::Initialize
?Destroy@CGrannyModel@@QAEXXZ ENDP			; CGrannyModel::Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\Model.cpp
;	COMDAT ?DestroyDeviceObjects@CGrannyModel@@QAEXXZ
_TEXT	SEGMENT
?DestroyDeviceObjects@CGrannyModel@@QAEXXZ PROC		; CGrannyModel::DestroyDeviceObjects, COMDAT
; _this$ = ecx

; 333  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 334  : 	m_pntVtxBuf.DestroyDeviceObjects();

  00003	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  00006	e8 00 00 00 00	 call	 ?DestroyDeviceObjects@CGraphicVertexBuffer@@QAEXXZ ; CGraphicVertexBuffer::DestroyDeviceObjects

; 335  : 	m_idxBuf.DestroyDeviceObjects();

  0000b	8d 4e 34	 lea	 ecx, DWORD PTR [esi+52]
  0000e	5e		 pop	 esi
  0000f	e9 00 00 00 00	 jmp	 ?DestroyDeviceObjects@CGraphicIndexBuffer@@QAEXXZ ; CGraphicIndexBuffer::DestroyDeviceObjects
?DestroyDeviceObjects@CGrannyModel@@QAEXXZ ENDP		; CGrannyModel::DestroyDeviceObjects
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\Model.cpp
;	COMDAT ?CreateDeviceObjects@CGrannyModel@@QAE_NXZ
_TEXT	SEGMENT
?CreateDeviceObjects@CGrannyModel@@QAE_NXZ PROC		; CGrannyModel::CreateDeviceObjects, COMDAT
; _this$ = ecx

; 312  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 313  : 	if (m_rigidVtxCount > 0)

  00003	83 7e 60 00	 cmp	 DWORD PTR [esi+96], 0
  00007	7e 0c		 jle	 SHORT $LN6@CreateDevi

; 314  : 		if (!m_pntVtxBuf.CreateDeviceObjects())

  00009	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  0000c	e8 00 00 00 00	 call	 ?CreateDeviceObjects@CGraphicVertexBuffer@@QAE_NXZ ; CGraphicVertexBuffer::CreateDeviceObjects
  00011	84 c0		 test	 al, al
  00013	74 12		 je	 SHORT $LN14@CreateDevi
$LN6@CreateDevi:

; 315  : 			return false;
; 316  : 
; 317  : 	if (m_idxCount > 0)

  00015	83 7e 68 00	 cmp	 DWORD PTR [esi+104], 0
  00019	7e 10		 jle	 SHORT $LN8@CreateDevi

; 318  : 		if (!m_idxBuf.CreateDeviceObjects())

  0001b	8d 4e 34	 lea	 ecx, DWORD PTR [esi+52]
  0001e	e8 00 00 00 00	 call	 ?CreateDeviceObjects@CGraphicIndexBuffer@@QAE_NXZ ; CGraphicIndexBuffer::CreateDeviceObjects
  00023	84 c0		 test	 al, al
  00025	75 04		 jne	 SHORT $LN8@CreateDevi
$LN14@CreateDevi:

; 319  : 			return false;

  00027	32 c0		 xor	 al, al
  00029	5e		 pop	 esi

; 330  : }

  0002a	c3		 ret	 0
$LN8@CreateDevi:
  0002b	53		 push	 ebx

; 320  : 
; 321  : 	int meshCount = GetMeshCount();

  0002c	8b ce		 mov	 ecx, esi
  0002e	e8 00 00 00 00	 call	 ?GetMeshCount@CGrannyModel@@QBEHXZ ; CGrannyModel::GetMeshCount
  00033	8b d8		 mov	 ebx, eax

; 322  : 
; 323  : 	for (int i = 0; i < meshCount; ++i)

  00035	85 db		 test	 ebx, ebx
  00037	7e 1a		 jle	 SHORT $LN3@CreateDevi

; 320  : 
; 321  : 	int meshCount = GetMeshCount();

  00039	57		 push	 edi
  0003a	33 ff		 xor	 edi, edi
  0003c	0f 1f 40 00	 npad	 4
$LL4@CreateDevi:

; 324  : 	{
; 325  : 		CGrannyMesh& rMesh = m_meshs[i];

  00040	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00043	03 cf		 add	 ecx, edi

; 326  : 		rMesh.RebuildTriGroupNodeList();

  00045	e8 00 00 00 00	 call	 ?RebuildTriGroupNodeList@CGrannyMesh@@QAEXXZ ; CGrannyMesh::RebuildTriGroupNodeList
  0004a	83 c7 38	 add	 edi, 56			; 00000038H
  0004d	83 eb 01	 sub	 ebx, 1
  00050	75 ee		 jne	 SHORT $LL4@CreateDevi

; 322  : 
; 323  : 	for (int i = 0; i < meshCount; ++i)

  00052	5f		 pop	 edi
$LN3@CreateDevi:

; 327  : 	}
; 328  : 
; 329  : 	return true;

  00053	5b		 pop	 ebx
  00054	b0 01		 mov	 al, 1
  00056	5e		 pop	 esi

; 330  : }

  00057	c3		 ret	 0
?CreateDeviceObjects@CGrannyModel@@QAE_NXZ ENDP		; CGrannyModel::CreateDeviceObjects
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\Model.cpp
;	COMDAT ?CreateFromGrannyModelPointer@CGrannyModel@@QAE_NPAUgranny_model@@@Z
_TEXT	SEGMENT
_pgrnModel$ = 8						; size = 4
?CreateFromGrannyModelPointer@CGrannyModel@@QAE_NPAUgranny_model@@@Z PROC ; CGrannyModel::CreateFromGrannyModelPointer, COMDAT
; _this$ = ecx

; 287  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 288  : 	assert(IsEmpty());
; 289  : 
; 290  : 	m_pgrnModel = pgrnModel;

  00003	8b 45 08	 mov	 eax, DWORD PTR _pgrnModel$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	89 46 0c	 mov	 DWORD PTR [esi+12], eax

; 291  : 
; 292  : 	if (!LoadMeshs())

  0000c	e8 00 00 00 00	 call	 ?LoadMeshs@CGrannyModel@@IAE_NXZ ; CGrannyModel::LoadMeshs
  00011	84 c0		 test	 al, al
  00013	74 24		 je	 SHORT $LN6@CreateFrom

; 293  : 		return false;
; 294  : 
; 295  : 	if (!__LoadVertices())

  00015	8b ce		 mov	 ecx, esi
  00017	e8 00 00 00 00	 call	 ?__LoadVertices@CGrannyModel@@IAE_NXZ ; CGrannyModel::__LoadVertices
  0001c	84 c0		 test	 al, al
  0001e	74 19		 je	 SHORT $LN6@CreateFrom

; 296  : 		return false;
; 297  : 
; 298  : 	if (!LoadIndices())

  00020	8b ce		 mov	 ecx, esi
  00022	e8 00 00 00 00	 call	 ?LoadIndices@CGrannyModel@@IAE_NXZ ; CGrannyModel::LoadIndices
  00027	84 c0		 test	 al, al
  00029	74 0e		 je	 SHORT $LN6@CreateFrom

; 300  : 
; 301  : 	AddReference();

  0002b	8b ce		 mov	 ecx, esi
  0002d	e8 00 00 00 00	 call	 ?AddReference@CReferenceObject@@QAEXXZ ; CReferenceObject::AddReference

; 302  : 
; 303  : 	return true;

  00032	b0 01		 mov	 al, 1
  00034	5e		 pop	 esi

; 304  : }

  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
$LN6@CreateFrom:

; 299  : 		return false;

  00039	32 c0		 xor	 al, al
  0003b	5e		 pop	 esi

; 304  : }

  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
?CreateFromGrannyModelPointer@CGrannyModel@@QAE_NPAUgranny_model@@@Z ENDP ; CGrannyModel::CreateFromGrannyModelPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\Model.cpp
;	COMDAT ?IsEmpty@CGrannyModel@@QBE_NXZ
_TEXT	SEGMENT
?IsEmpty@CGrannyModel@@QBE_NXZ PROC			; CGrannyModel::IsEmpty, COMDAT
; _this$ = ecx

; 340  : 	if (m_pgrnModel)

  00000	83 79 0c 00	 cmp	 DWORD PTR [ecx+12], 0
  00004	0f 94 c0	 sete	 al

; 341  : 		return false;
; 342  : 
; 343  : 	return true;
; 344  : }

  00007	c3		 ret	 0
?IsEmpty@CGrannyModel@@QBE_NXZ ENDP			; CGrannyModel::IsEmpty
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\Model.cpp
;	COMDAT ??1CGrannyModel@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CGrannyModel@@UAE@XZ PROC				; CGrannyModel::~CGrannyModel, COMDAT
; _this$ = ecx

; 417  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CGrannyModel@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CGrannyModel@@6B@

; 418  : 	Destroy();

  0002b	e8 00 00 00 00	 call	 ?Destroy@CGrannyModel@@QAEXXZ ; CGrannyModel::Destroy

; 419  : }

  00030	8d 4e 78	 lea	 ecx, DWORD PTR [esi+120]
  00033	e8 00 00 00 00	 call	 ??1CGrannyMaterialPalette@@UAE@XZ ; CGrannyMaterialPalette::~CGrannyMaterialPalette
  00038	8d 4e 34	 lea	 ecx, DWORD PTR [esi+52]
  0003b	e8 00 00 00 00	 call	 ??1CGraphicIndexBuffer@@UAE@XZ ; CGraphicIndexBuffer::~CGraphicIndexBuffer
  00040	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  00043	e8 00 00 00 00	 call	 ??1CGraphicVertexBuffer@@UAE@XZ ; CGraphicVertexBuffer::~CGraphicVertexBuffer
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ??1CReferenceObject@@UAE@XZ ; CReferenceObject::~CReferenceObject
  0004f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00052	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00059	59		 pop	 ecx
  0005a	5e		 pop	 esi
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
  0005f	cc		 int	 3
  00060	cc		 int	 3
  00061	cc		 int	 3
  00062	cc		 int	 3
  00063	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CGrannyModel@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CGrannyModel@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CGrannyModel@@UAE@XZ ENDP				; CGrannyModel::~CGrannyModel
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\Model.cpp
;	COMDAT ??0CGrannyModel@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CGrannyModel@@QAE@XZ PROC				; CGrannyModel::CGrannyModel, COMDAT
; _this$ = ecx

; 412  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CGrannyModel@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00029	e8 00 00 00 00	 call	 ??0CReferenceObject@@QAE@XZ ; CReferenceObject::CReferenceObject
  0002e	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  00031	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00038	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CGrannyModel@@6B@
  0003e	e8 00 00 00 00	 call	 ??0CGraphicVertexBuffer@@QAE@XZ ; CGraphicVertexBuffer::CGraphicVertexBuffer
  00043	8d 4e 34	 lea	 ecx, DWORD PTR [esi+52]
  00046	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0004a	e8 00 00 00 00	 call	 ??0CGraphicIndexBuffer@@QAE@XZ ; CGraphicIndexBuffer::CGraphicIndexBuffer
  0004f	8d 4e 78	 lea	 ecx, DWORD PTR [esi+120]
  00052	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00056	e8 00 00 00 00	 call	 ??0CGrannyMaterialPalette@@QAE@XZ ; CGrannyMaterialPalette::CGrannyMaterialPalette

; 413  : 	Initialize();

  0005b	8b ce		 mov	 ecx, esi
  0005d	e8 00 00 00 00	 call	 ?Initialize@CGrannyModel@@IAEXXZ ; CGrannyModel::Initialize

; 414  : }

  00062	8b c6		 mov	 eax, esi
  00064	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00067	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006e	59		 pop	 ecx
  0006f	5e		 pop	 esi
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CGrannyModel@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CReferenceObject@@UAE@XZ ; CReferenceObject::~CReferenceObject
__unwindfunclet$??0CGrannyModel@@QAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 14	 add	 ecx, 20			; 00000014H
  0000e	e9 00 00 00 00	 jmp	 ??1CGraphicVertexBuffer@@UAE@XZ ; CGraphicVertexBuffer::~CGraphicVertexBuffer
__unwindfunclet$??0CGrannyModel@@QAE@XZ$2:
  00013	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	83 c1 34	 add	 ecx, 52			; 00000034H
  00019	e9 00 00 00 00	 jmp	 ??1CGraphicIndexBuffer@@UAE@XZ ; CGraphicIndexBuffer::~CGraphicIndexBuffer
  0001e	cc		 int	 3
  0001f	cc		 int	 3
  00020	cc		 int	 3
  00021	cc		 int	 3
  00022	cc		 int	 3
__ehhandler$??0CGrannyModel@@QAE@XZ:
  00023	90		 npad	 1
  00024	90		 npad	 1
  00025	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00029	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002c	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0002f	33 c8		 xor	 ecx, eax
  00031	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00036	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CGrannyModel@@QAE@XZ
  0003b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CGrannyModel@@QAE@XZ ENDP				; CGrannyModel::CGrannyModel
; Function compile flags: /Ogtp
;	COMDAT ??_ECGrannyMesh@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECGrannyMesh@@UAEPAXI@Z PROC				; CGrannyMesh::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECGrannyMesh@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002a	8b f8		 mov	 edi, eax
  0002c	83 e7 01	 and	 edi, 1
  0002f	a8 02		 test	 al, 2
  00031	74 49		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CGrannyMesh@@UAE@XZ ; CGrannyMesh::~CGrannyMesh
  00038	ff 76 fc	 push	 DWORD PTR [esi-4]
  0003b	8d 5e fc	 lea	 ebx, DWORD PTR [esi-4]
  0003e	6a 38		 push	 56			; 00000038H
  00040	56		 push	 esi
  00041	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00046	85 ff		 test	 edi, edi
  00048	74 1c		 je	 SHORT $LN3@vector
  0004a	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  0004c	8d 14 cd 00 00
	00 00		 lea	 edx, DWORD PTR [ecx*8]
  00053	2b d1		 sub	 edx, ecx
  00055	8d 0c d5 04 00
	00 00		 lea	 ecx, DWORD PTR [edx*8+4]
  0005c	51		 push	 ecx
  0005d	53		 push	 ebx
  0005e	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  00063	83 c4 08	 add	 esp, 8
$LN3@vector:
  00066	8b c3		 mov	 eax, ebx
  00068	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00072	59		 pop	 ecx
  00073	5f		 pop	 edi
  00074	5e		 pop	 esi
  00075	5b		 pop	 ebx
  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c2 04 00	 ret	 4
$LN2@vector:
  0007c	e8 00 00 00 00	 call	 ??1CGrannyMesh@@UAE@XZ	; CGrannyMesh::~CGrannyMesh
  00081	85 ff		 test	 edi, edi
  00083	74 0b		 je	 SHORT $LN4@vector
  00085	6a 38		 push	 56			; 00000038H
  00087	56		 push	 esi
  00088	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0008d	83 c4 08	 add	 esp, 8
$LN4@vector:
  00090	8b c6		 mov	 eax, esi
  00092	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00095	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009c	59		 pop	 ecx
  0009d	5f		 pop	 edi
  0009e	5e		 pop	 esi
  0009f	5b		 pop	 ebx
  000a0	8b e5		 mov	 esp, ebp
  000a2	5d		 pop	 ebp
  000a3	c2 04 00	 ret	 4
  000a6	cc		 int	 3
  000a7	cc		 int	 3
  000a8	cc		 int	 3
  000a9	cc		 int	 3
  000aa	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECGrannyMesh@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECGrannyMesh@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECGrannyMesh@@UAEPAXI@Z ENDP				; CGrannyMesh::`vector deleting destructor'
END

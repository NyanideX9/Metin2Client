; Listing generated by Microsoft (R) Optimizing Compiler Version 19.43.34808.0 

	TITLE	C:\Marty 5.5\Src-Client\Client\eterGrnLib\Distribute\ModelInstanceModel.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??0D3DXMATRIX@@QAE@XZ				; D3DXMATRIX::D3DXMATRIX
PUBLIC	?Clear@CGrannyModelInstance@@QAEXXZ		; CGrannyModelInstance::Clear
PUBLIC	?SetMainModelPointer@CGrannyModelInstance@@QAEXPAVCGrannyModel@@PAVCGraphicVertexBuffer@@@Z ; CGrannyModelInstance::SetMainModelPointer
PUBLIC	?SetLinkedModelPointer@CGrannyModelInstance@@QAEXPAVCGrannyModel@@PAVCGraphicVertexBuffer@@PAPAV1@@Z ; CGrannyModelInstance::SetLinkedModelPointer
PUBLIC	?GetDeformableVertexCount@CGrannyModelInstance@@QAEKXZ ; CGrannyModelInstance::GetDeformableVertexCount
PUBLIC	?GetVertexCount@CGrannyModelInstance@@QAEKXZ	; CGrannyModelInstance::GetVertexCount
PUBLIC	?GetBoneMatrixPointer@CGrannyModelInstance@@QBEPBMH@Z ; CGrannyModelInstance::GetBoneMatrixPointer
PUBLIC	?GetCompositeBoneMatrixPointer@CGrannyModelInstance@@QBEPBMH@Z ; CGrannyModelInstance::GetCompositeBoneMatrixPointer
PUBLIC	?GetBoneIndexByName@CGrannyModelInstance@@QBE_NPBDPAH@Z ; CGrannyModelInstance::GetBoneIndexByName
PUBLIC	?ReloadTexture@CGrannyModelInstance@@QAEXXZ	; CGrannyModelInstance::ReloadTexture
PUBLIC	?__DestroyModelInstance@CGrannyModelInstance@@IAEXXZ ; CGrannyModelInstance::__DestroyModelInstance
PUBLIC	?__DestroyMeshMatrices@CGrannyModelInstance@@IAEXXZ ; CGrannyModelInstance::__DestroyMeshMatrices
PUBLIC	?__DestroyDynamicVertexBuffer@CGrannyModelInstance@@IAEXXZ ; CGrannyModelInstance::__DestroyDynamicVertexBuffer
PUBLIC	?__CreateModelInstance@CGrannyModelInstance@@IAEXXZ ; CGrannyModelInstance::__CreateModelInstance
PUBLIC	?__CreateMeshMatrices@CGrannyModelInstance@@IAEXXZ ; CGrannyModelInstance::__CreateMeshMatrices
PUBLIC	?__CreateDynamicVertexBuffer@CGrannyModelInstance@@IAEXXZ ; CGrannyModelInstance::__CreateDynamicVertexBuffer
PUBLIC	?__DestroyWorldPose@CGrannyModelInstance@@IAEXXZ ; CGrannyModelInstance::__DestroyWorldPose
PUBLIC	?__CreateWorldPose@CGrannyModelInstance@@IAEXPAV1@@Z ; CGrannyModelInstance::__CreateWorldPose
PUBLIC	?__CreateMeshBindingVector@CGrannyModelInstance@@IAE_NPAV1@@Z ; CGrannyModelInstance::__CreateMeshBindingVector
PUBLIC	?__DestroyMeshBindingVector@CGrannyModelInstance@@IAEXXZ ; CGrannyModelInstance::__DestroyMeshBindingVector
PUBLIC	?__GetMeshBoneIndices@CGrannyModelInstance@@IBEPBHI@Z ; CGrannyModelInstance::__GetMeshBoneIndices
PUBLIC	?__IsDeformableVertexBuffer@CGrannyModelInstance@@IAE_NXZ ; CGrannyModelInstance::__IsDeformableVertexBuffer
PUBLIC	?__SetSharedDeformableVertexBuffer@CGrannyModelInstance@@IAEXPAVCGraphicVertexBuffer@@@Z ; CGrannyModelInstance::__SetSharedDeformableVertexBuffer
PUBLIC	?__GetDeformableD3DVertexBufferPtr@CGrannyModelInstance@@IAEPAUIDirect3DVertexBuffer8@@XZ ; CGrannyModelInstance::__GetDeformableD3DVertexBufferPtr
PUBLIC	?__GetDeformableVertexBufferRef@CGrannyModelInstance@@IAEAAVCGraphicVertexBuffer@@XZ ; CGrannyModelInstance::__GetDeformableVertexBufferRef
PUBLIC	?__GetWorldPosePtr@CGrannyModelInstance@@IBEPAUworld_pose@granny@@XZ ; CGrannyModelInstance::__GetWorldPosePtr
PUBLIC	?_Change_array@?$vector@PAUmesh_binding@granny@@V?$allocator@PAUmesh_binding@granny@@@std@@@std@@AAEXQAPAUmesh_binding@granny@@II@Z ; std::vector<granny::mesh_binding *,std::allocator<granny::mesh_binding *> >::_Change_array
PUBLIC	?_Xlength@?$vector@PAUmesh_binding@granny@@V?$allocator@PAUmesh_binding@granny@@@std@@@std@@CAXXZ ; std::vector<granny::mesh_binding *,std::allocator<granny::mesh_binding *> >::_Xlength
PUBLIC	??$_Copy_memmove@PAPAUmesh_binding@granny@@PAPAU12@@std@@YAPAPAUmesh_binding@granny@@PAPAU12@00@Z ; std::_Copy_memmove<granny::mesh_binding * *,granny::mesh_binding * *>
PUBLIC	??$_Copy_memmove_tail@PAPAUmesh_binding@granny@@@std@@YAPAPAUmesh_binding@granny@@QBDQAPAU12@II@Z ; std::_Copy_memmove_tail<granny::mesh_binding * *>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	__imp__GrannyInstantiateModel@4:PROC
EXTRN	__imp__GrannyFreeModelInstance@4:PROC
EXTRN	__imp__GrannyGetSourceSkeleton@4:PROC
EXTRN	__imp__GrannyNewMeshBinding@12:PROC
EXTRN	__imp__GrannyFreeMeshBinding@4:PROC
EXTRN	__imp__GrannyGetMeshBindingToBoneIndices@4:PROC
EXTRN	__imp__GrannyFindBoneByName@12:PROC
EXTRN	__imp__GrannyNewWorldPose@4:PROC
EXTRN	__imp__GrannyFreeWorldPose@4:PROC
EXTRN	__imp__GrannyGetWorldPose4x4@8:PROC
EXTRN	__imp__GrannyGetWorldPoseComposite4x4@8:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?AddReference@CReferenceObject@@QAEXXZ:PROC	; CReferenceObject::AddReference
EXTRN	?Release@CReferenceObject@@QAEXXZ:PROC		; CReferenceObject::Release
EXTRN	?Destroy@CGraphicVertexBuffer@@QAEXXZ:PROC	; CGraphicVertexBuffer::Destroy
EXTRN	?IsEmpty@CGraphicVertexBuffer@@QBE_NXZ:PROC	; CGraphicVertexBuffer::IsEmpty
EXTRN	?Clear@CGrannyMaterialPalette@@QAEXXZ:PROC	; CGrannyMaterialPalette::Clear
EXTRN	?Copy@CGrannyMaterialPalette@@QAEXABV1@@Z:PROC	; CGrannyMaterialPalette::Copy
EXTRN	?GetDeformVertexCount@CGrannyModel@@QBEHXZ:PROC	; CGrannyModel::GetDeformVertexCount
EXTRN	?GetVertexCount@CGrannyModel@@QBEHXZ:PROC	; CGrannyModel::GetVertexCount
EXTRN	?GetMeshCount@CGrannyModel@@QBEHXZ:PROC		; CGrannyModel::GetMeshCount
EXTRN	?GetGrannyModelPointer@CGrannyModel@@QAEPAUgranny_model@@XZ:PROC ; CGrannyModel::GetGrannyModelPointer
EXTRN	?GetMaterialPalette@CGrannyModel@@QBEABVCGrannyMaterialPalette@@XZ:PROC ; CGrannyModel::GetMaterialPalette
EXTRN	?DestroyDeviceObjects@CGrannyModelInstance@@QAEXXZ:PROC ; CGrannyModelInstance::DestroyDeviceObjects
EXTRN	?ResetLocalTime@CGrannyModelInstance@@QAEHXZ:PROC ; CGrannyModelInstance::ResetLocalTime
EXTRN	?__Initialize@CGrannyModelInstance@@IAEXXZ:PROC	; CGrannyModelInstance::__Initialize
EXTRN	__CxxThrowException@8:PROC
EXTRN	_memmove:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xutility
;	COMDAT ??$_Copy_memmove_tail@PAPAUmesh_binding@granny@@@std@@YAPAPAUmesh_binding@granny@@QBDQAPAU12@II@Z
_TEXT	SEGMENT
__First_ch$ = 8						; size = 4
__Dest$ = 12						; size = 4
__Byte_count$ = 16					; size = 4
__Object_count$ = 20					; size = 4
??$_Copy_memmove_tail@PAPAUmesh_binding@granny@@@std@@YAPAPAUmesh_binding@granny@@QBDQAPAU12@II@Z PROC ; std::_Copy_memmove_tail<granny::mesh_binding * *>, COMDAT

; 4763 :     const char* const _First_ch, const _OutCtgIt _Dest, const size_t _Byte_count, const size_t _Object_count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 4764 :     _STL_INTERNAL_CHECK(_Byte_count == _Object_count * sizeof(*_Dest));
; 4765 :     const auto _Dest_ptr = _STD _To_address(_Dest);
; 4766 :     const auto _Dest_ch  = const_cast<char*>(reinterpret_cast<const volatile char*>(_Dest_ptr));
; 4767 :     _CSTD memmove(_Dest_ch, _First_ch, _Byte_count);

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 10	 mov	 edi, DWORD PTR __Byte_count$[ebp]
  0000b	57		 push	 edi
  0000c	ff 75 08	 push	 DWORD PTR __First_ch$[ebp]
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 _memmove
  00015	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4768 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4769 :         (void) _Object_count;
; 4770 :         // CodeQL [SM02986] This cast is correct: we're bypassing pointer arithmetic for performance.
; 4771 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Byte_count);

  00018	8d 04 3e	 lea	 eax, DWORD PTR [esi+edi]
  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi

; 4772 :     } else {
; 4773 :         return _Dest + static_cast<_Iter_diff_t<_OutCtgIt>>(_Object_count);
; 4774 :     }
; 4775 : }

  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??$_Copy_memmove_tail@PAPAUmesh_binding@granny@@@std@@YAPAPAUmesh_binding@granny@@QBDQAPAU12@II@Z ENDP ; std::_Copy_memmove_tail<granny::mesh_binding * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAUmesh_binding@granny@@PAPAU12@@std@@YAPAPAUmesh_binding@granny@@PAPAU12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAUmesh_binding@granny@@PAPAU12@@std@@YAPAPAUmesh_binding@granny@@PAPAU12@00@Z PROC ; std::_Copy_memmove<granny::mesh_binding * *,granny::mesh_binding * *>, COMDAT

; 4778 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4779 :     _STL_INTERNAL_CHECK(_First <= _Last);
; 4780 :     const auto _First_ptr    = _STD _To_address(_First);
; 4781 :     const auto _Last_ptr     = _STD _To_address(_Last);
; 4782 :     const auto _Object_count = static_cast<size_t>(_Last_ptr - _First_ptr);

  00003	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	2b ca		 sub	 ecx, edx
  0000b	8b c1		 mov	 eax, ecx
  0000d	c1 f8 02	 sar	 eax, 2

; 4783 :     const auto _First_ch     = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First_ptr));
; 4784 :     const auto _Last_ch      = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last_ptr));
; 4785 :     const auto _Byte_count   = static_cast<size_t>(_Last_ch - _First_ch);
; 4786 :     return _STD _Copy_memmove_tail(_First_ch, _STD move(_Dest), _Byte_count, _Object_count);

  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00015	52		 push	 edx
  00016	e8 00 00 00 00	 call	 ??$_Copy_memmove_tail@PAPAUmesh_binding@granny@@@std@@YAPAPAUmesh_binding@granny@@QBDQAPAU12@II@Z ; std::_Copy_memmove_tail<granny::mesh_binding * *>
  0001b	83 c4 10	 add	 esp, 16			; 00000010H

; 4787 : }

  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
??$_Copy_memmove@PAPAUmesh_binding@granny@@PAPAU12@@std@@YAPAPAUmesh_binding@granny@@PAPAU12@00@Z ENDP ; std::_Copy_memmove<granny::mesh_binding * *,granny::mesh_binding * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
;	COMDAT ?_Xlength@?$vector@PAUmesh_binding@granny@@V?$allocator@PAUmesh_binding@granny@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAUmesh_binding@granny@@V?$allocator@PAUmesh_binding@granny@@@std@@@std@@CAXXZ PROC ; std::vector<granny::mesh_binding *,std::allocator<granny::mesh_binding *> >::_Xlength, COMDAT

; 2169 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAUmesh_binding@granny@@V?$allocator@PAUmesh_binding@granny@@@std@@@std@@CAXXZ ENDP ; std::vector<granny::mesh_binding *,std::allocator<granny::mesh_binding *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
;	COMDAT ?_Change_array@?$vector@PAUmesh_binding@granny@@V?$allocator@PAUmesh_binding@granny@@@std@@@std@@AAEXQAPAUmesh_binding@granny@@II@Z
_TEXT	SEGMENT
__Newvec$ = 8						; size = 4
__Newsize$ = 12						; size = 4
__Newcapacity$ = 16					; size = 4
?_Change_array@?$vector@PAUmesh_binding@granny@@V?$allocator@PAUmesh_binding@granny@@@std@@@std@@AAEXQAPAUmesh_binding@granny@@II@Z PROC ; std::vector<granny::mesh_binding *,std::allocator<granny::mesh_binding *> >::_Change_array, COMDAT
; _this$ = ecx

; 2044 :         const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 2045 :         // orphan all iterators, discard old array, acquire new array
; 2046 :         auto& _Al         = _Getal();
; 2047 :         auto& _My_data    = _Mypair._Myval2;
; 2048 :         pointer& _Myfirst = _My_data._Myfirst;
; 2049 :         pointer& _Mylast  = _My_data._Mylast;
; 2050 :         pointer& _Myend   = _My_data._Myend;
; 2051 : 
; 2052 :         _My_data._Orphan_all();
; 2053 : 
; 2054 :         if (_Myfirst) { // destroy and deallocate old array

  00006	8b 06		 mov	 eax, DWORD PTR [esi]
  00008	85 c0		 test	 eax, eax
  0000a	74 2c		 je	 SHORT $LN10@Change_arr

; 2055 :             _STD _Destroy_range(_Myfirst, _Mylast, _Al);
; 2056 :             _ASAN_VECTOR_REMOVE;
; 2057 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0000c	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0000f	2b c8		 sub	 ecx, eax
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 981  :         _STD _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00011	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 284  :         if (_Bytes >= _Big_allocation_threshold) {

  00014	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0001a	72 12		 jb	 SHORT $LN21@Change_arr

; 205  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0001c	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0001f	83 c1 23	 add	 ecx, 35			; 00000023H

; 206  : 
; 207  :     // If the following asserts, it likely means that we are performing
; 208  :     // an aligned delete on memory coming from an unaligned allocation.
; 209  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 210  : 
; 211  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 212  :     // in range [_Min_back_shift, _Non_user_size]
; 213  : #ifdef _DEBUG
; 214  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 215  : #else // ^^^ defined(_DEBUG) / !defined(_DEBUG) vvv
; 216  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 217  : #endif // ^^^ !defined(_DEBUG) ^^^
; 218  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00022	2b c2		 sub	 eax, edx

; 219  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00024	83 c0 fc	 add	 eax, -4			; fffffffcH
  00027	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0002a	77 28		 ja	 SHORT $LN18@Change_arr

; 220  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0002c	8b c2		 mov	 eax, edx
$LN21@Change_arr:

; 289  :         ::operator delete(_Ptr, _Bytes);

  0002e	51		 push	 ecx
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00035	83 c4 08	 add	 esp, 8
$LN10@Change_arr:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 2060 :         _Myfirst = _Newvec;

  00038	8b 4d 08	 mov	 ecx, DWORD PTR __Newvec$[ebp]

; 2061 :         _Mylast  = _Newvec + _Newsize;

  0003b	8b 45 0c	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0003e	89 0e		 mov	 DWORD PTR [esi], ecx
  00040	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  00043	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 2062 :         _Myend   = _Newvec + _Newcapacity;

  00046	8b 45 10	 mov	 eax, DWORD PTR __Newcapacity$[ebp]
  00049	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  0004c	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0004f	5e		 pop	 esi

; 2064 :     }

  00050	5d		 pop	 ebp
  00051	c2 0c 00	 ret	 12			; 0000000cH
$LN18@Change_arr:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 219  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00054	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN28@Change_arr:
  00059	cc		 int	 3
?_Change_array@?$vector@PAUmesh_binding@granny@@V?$allocator@PAUmesh_binding@granny@@@std@@@std@@AAEXQAPAUmesh_binding@granny@@II@Z ENDP ; std::vector<granny::mesh_binding *,std::allocator<granny::mesh_binding *> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?__GetWorldPosePtr@CGrannyModelInstance@@IBEPAUworld_pose@granny@@XZ
_TEXT	SEGMENT
?__GetWorldPosePtr@CGrannyModelInstance@@IBEPAUworld_pose@granny@@XZ PROC ; CGrannyModelInstance::__GetWorldPosePtr, COMDAT
; _this$ = ecx

; 67   : 	if (m_pgrnWorldPoseReal)

  00000	8b 41 3c	 mov	 eax, DWORD PTR [ecx+60]
  00003	85 c0		 test	 eax, eax
  00005	75 13		 jne	 SHORT $LN1@GetWorldPo

; 68   : 		return m_pgrnWorldPoseReal;
; 69   : 
; 70   : 	if (m_ppkSkeletonInst && *m_ppkSkeletonInst)

  00007	8b 41 74	 mov	 eax, DWORD PTR [ecx+116]
  0000a	85 c0		 test	 eax, eax
  0000c	74 0a		 je	 SHORT $LN3@GetWorldPo
  0000e	8b 00		 mov	 eax, DWORD PTR [eax]
  00010	85 c0		 test	 eax, eax
  00012	74 04		 je	 SHORT $LN3@GetWorldPo

; 71   : 		return (*m_ppkSkeletonInst)->m_pgrnWorldPoseReal;

  00014	8b 40 3c	 mov	 eax, DWORD PTR [eax+60]

; 75   : }

  00017	c3		 ret	 0
$LN3@GetWorldPo:

; 72   : 
; 73   : 	assert(m_ppkSkeletonInst!=NULL && "__GetWorldPosePtr - NO HAVE SKELETON");
; 74   : 	return NULL;

  00018	33 c0		 xor	 eax, eax
$LN1@GetWorldPo:

; 75   : }

  0001a	c3		 ret	 0
?__GetWorldPosePtr@CGrannyModelInstance@@IBEPAUworld_pose@granny@@XZ ENDP ; CGrannyModelInstance::__GetWorldPosePtr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?__GetDeformableVertexBufferRef@CGrannyModelInstance@@IAEAAVCGraphicVertexBuffer@@XZ
_TEXT	SEGMENT
?__GetDeformableVertexBufferRef@CGrannyModelInstance@@IAEAAVCGraphicVertexBuffer@@XZ PROC ; CGrannyModelInstance::__GetDeformableVertexBufferRef, COMDAT
; _this$ = ecx

; 224  : 	if (m_pkSharedDeformableVertexBuffer)

  00000	8b 51 4c	 mov	 edx, DWORD PTR [ecx+76]
  00003	8d 41 50	 lea	 eax, DWORD PTR [ecx+80]
  00006	85 d2		 test	 edx, edx
  00008	0f 45 c2	 cmovne	 eax, edx

; 225  : 		return *m_pkSharedDeformableVertexBuffer;
; 226  : 
; 227  : 	return m_kLocalDeformableVertexBuffer;
; 228  : }

  0000b	c3		 ret	 0
?__GetDeformableVertexBufferRef@CGrannyModelInstance@@IAEAAVCGraphicVertexBuffer@@XZ ENDP ; CGrannyModelInstance::__GetDeformableVertexBufferRef
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?__GetDeformableD3DVertexBufferPtr@CGrannyModelInstance@@IAEPAUIDirect3DVertexBuffer8@@XZ
_TEXT	SEGMENT
?__GetDeformableD3DVertexBufferPtr@CGrannyModelInstance@@IAEPAUIDirect3DVertexBuffer8@@XZ PROC ; CGrannyModelInstance::__GetDeformableD3DVertexBufferPtr, COMDAT
; _this$ = ecx

; 219  : 	return __GetDeformableVertexBufferRef().GetD3DVertexBuffer();

  00000	e8 00 00 00 00	 call	 ?__GetDeformableVertexBufferRef@CGrannyModelInstance@@IAEAAVCGraphicVertexBuffer@@XZ ; CGrannyModelInstance::__GetDeformableVertexBufferRef
  00005	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 220  : }

  00008	c3		 ret	 0
?__GetDeformableD3DVertexBufferPtr@CGrannyModelInstance@@IAEPAUIDirect3DVertexBuffer8@@XZ ENDP ; CGrannyModelInstance::__GetDeformableD3DVertexBufferPtr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?__SetSharedDeformableVertexBuffer@CGrannyModelInstance@@IAEXPAVCGraphicVertexBuffer@@@Z
_TEXT	SEGMENT
_pkSharedDeformableVertexBuffer$ = 8			; size = 4
?__SetSharedDeformableVertexBuffer@CGrannyModelInstance@@IAEXPAVCGraphicVertexBuffer@@@Z PROC ; CGrannyModelInstance::__SetSharedDeformableVertexBuffer, COMDAT
; _this$ = ecx

; 205  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 206  : 	m_pkSharedDeformableVertexBuffer = pkSharedDeformableVertexBuffer;

  00003	8b 45 08	 mov	 eax, DWORD PTR _pkSharedDeformableVertexBuffer$[ebp]
  00006	89 41 4c	 mov	 DWORD PTR [ecx+76], eax

; 207  : }

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?__SetSharedDeformableVertexBuffer@CGrannyModelInstance@@IAEXPAVCGraphicVertexBuffer@@@Z ENDP ; CGrannyModelInstance::__SetSharedDeformableVertexBuffer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?__IsDeformableVertexBuffer@CGrannyModelInstance@@IAE_NXZ
_TEXT	SEGMENT
?__IsDeformableVertexBuffer@CGrannyModelInstance@@IAE_NXZ PROC ; CGrannyModelInstance::__IsDeformableVertexBuffer, COMDAT
; _this$ = ecx

; 211  : 	if (m_pkSharedDeformableVertexBuffer)

  00000	83 79 4c 00	 cmp	 DWORD PTR [ecx+76], 0
  00004	74 03		 je	 SHORT $LN2@IsDeformab

; 212  : 		return true;

  00006	b0 01		 mov	 al, 1

; 215  : }

  00008	c3		 ret	 0
$LN2@IsDeformab:

; 213  : 
; 214  : 	return m_kLocalDeformableVertexBuffer.IsEmpty();

  00009	83 c1 50	 add	 ecx, 80			; 00000050H
  0000c	e9 00 00 00 00	 jmp	 ?IsEmpty@CGraphicVertexBuffer@@QBE_NXZ ; CGraphicVertexBuffer::IsEmpty
?__IsDeformableVertexBuffer@CGrannyModelInstance@@IAE_NXZ ENDP ; CGrannyModelInstance::__IsDeformableVertexBuffer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?__GetMeshBoneIndices@CGrannyModelInstance@@IBEPBHI@Z
_TEXT	SEGMENT
_iMeshBinding$ = 8					; size = 4
?__GetMeshBoneIndices@CGrannyModelInstance@@IBEPBHI@Z PROC ; CGrannyModelInstance::__GetMeshBoneIndices, COMDAT
; _this$ = ecx

; 84   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1929 :         return _My_data._Myfirst[_Pos];

  00003	8b 49 40	 mov	 ecx, DWORD PTR [ecx+64]
  00006	8b 45 08	 mov	 eax, DWORD PTR _iMeshBinding$[ebp]
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp

; 86   : 	return GrannyGetMeshBindingToBoneIndices(m_vct_pgrnMeshBinding[iMeshBinding]);

  00009	ff 34 81	 push	 DWORD PTR [ecx+eax*4]
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GrannyGetMeshBindingToBoneIndices@4

; 87   : }

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?__GetMeshBoneIndices@CGrannyModelInstance@@IBEPBHI@Z ENDP ; CGrannyModelInstance::__GetMeshBoneIndices
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\algorithm
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?__DestroyMeshBindingVector@CGrannyModelInstance@@IAEXXZ
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
?__DestroyMeshBindingVector@CGrannyModelInstance@@IAEXXZ PROC ; CGrannyModelInstance::__DestroyMeshBindingVector, COMDAT
; _this$ = ecx

; 114  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8b c1		 mov	 eax, ecx
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 46   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 78 44	 mov	 edi, DWORD PTR [eax+68]
  0000e	8b 70 40	 mov	 esi, DWORD PTR [eax+64]
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\algorithm

; 371  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f7		 cmp	 esi, edi
  00013	74 1a		 je	 SHORT $LN23@DestroyMes
  00015	53		 push	 ebx
  00016	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__GrannyFreeMeshBinding@4
  0001c	0f 1f 40 00	 npad	 4
$LL24@DestroyMes:

; 372  :         _Func(*_UFirst);

  00020	ff 36		 push	 DWORD PTR [esi]
  00022	ff d3		 call	 ebx
  00024	83 c6 04	 add	 esi, 4
  00027	3b f7		 cmp	 esi, edi
  00029	75 f5		 jne	 SHORT $LL24@DestroyMes
  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]

; 371  :     for (; _UFirst != _ULast; ++_UFirst) {

  0002e	5b		 pop	 ebx
$LN23@DestroyMes:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1797 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  0002f	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	3b 48 44	 cmp	 ecx, DWORD PTR [eax+68]
  00037	74 03		 je	 SHORT $LN26@DestroyMes

; 1798 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1799 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1800 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1801 :             return;
; 1802 :         }
; 1803 : 
; 1804 :         _My_data._Orphan_all();
; 1805 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1806 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1807 :         _Mylast = _Myfirst;

  00039	89 48 44	 mov	 DWORD PTR [eax+68], ecx
$LN26@DestroyMes:
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp

; 117  : }

  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
?__DestroyMeshBindingVector@CGrannyModelInstance@@IAEXXZ ENDP ; CGrannyModelInstance::__DestroyMeshBindingVector
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?__CreateMeshBindingVector@CGrannyModelInstance@@IAE_NPAV1@@Z
_TEXT	SEGMENT
_pgrnModel$1$ = -24					; size = 4
__Newsize$1$ = -20					; size = 4
$T2 = -16						; size = 4
tv998 = -12						; size = 4
__Oldsize$1$ = -12					; size = 4
_iMeshBinding$1$ = -8					; size = 4
__Newcapacity$1$ = -8					; size = 4
_pgrnDstSkeleton$1$ = -4				; size = 4
_pkDstModelInst$ = 8					; size = 4
__Size$1$ = 8						; size = 4
__Whereptr$1$ = 8					; size = 4
?__CreateMeshBindingVector@CGrannyModelInstance@@IAE_NPAV1@@Z PROC ; CGrannyModelInstance::__CreateMeshBindingVector, COMDAT
; _this$ = ecx

; 90   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	53		 push	 ebx
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx

; 91   : 	assert(m_vct_pgrnMeshBinding.empty());
; 92   : 
; 93   : 	if (!m_pModel)

  0000a	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0000d	85 c9		 test	 ecx, ecx
  0000f	0f 84 17 02 00
	00		 je	 $LN202@CreateMesh

; 94   : 		return false;
; 95   : 
; 96   : 	granny_model* pgrnModel = m_pModel->GetGrannyModelPointer();

  00015	e8 00 00 00 00	 call	 ?GetGrannyModelPointer@CGrannyModel@@QAEPAUgranny_model@@XZ ; CGrannyModel::GetGrannyModelPointer
  0001a	8b d8		 mov	 ebx, eax
  0001c	89 5d e8	 mov	 DWORD PTR _pgrnModel$1$[ebp], ebx

; 97   : 	if (!pgrnModel)

  0001f	85 db		 test	 ebx, ebx
  00021	0f 84 05 02 00
	00		 je	 $LN202@CreateMesh

; 99   : 
; 100  : 	granny_skeleton* pgrnDstSkeleton = pgrnModel->Skeleton;

  00027	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0002a	56		 push	 esi

; 101  : 	if (pkDstModelInst && pkDstModelInst->m_pModel && pkDstModelInst->m_pModel->GetGrannyModelPointer())

  0002b	8b 75 08	 mov	 esi, DWORD PTR _pkDstModelInst$[ebp]
  0002e	89 45 fc	 mov	 DWORD PTR _pgrnDstSkeleton$1$[ebp], eax
  00031	85 f6		 test	 esi, esi
  00033	74 1e		 je	 SHORT $LN7@CreateMesh
  00035	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00038	85 c9		 test	 ecx, ecx
  0003a	74 17		 je	 SHORT $LN7@CreateMesh
  0003c	e8 00 00 00 00	 call	 ?GetGrannyModelPointer@CGrannyModel@@QAEPAUgranny_model@@XZ ; CGrannyModel::GetGrannyModelPointer
  00041	85 c0		 test	 eax, eax
  00043	74 0e		 je	 SHORT $LN7@CreateMesh

; 102  : 		pgrnDstSkeleton = pkDstModelInst->m_pModel->GetGrannyModelPointer()->Skeleton;

  00045	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00048	e8 00 00 00 00	 call	 ?GetGrannyModelPointer@CGrannyModel@@QAEPAUgranny_model@@XZ ; CGrannyModel::GetGrannyModelPointer
  0004d	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00050	89 45 fc	 mov	 DWORD PTR _pgrnDstSkeleton$1$[ebp], eax
$LN7@CreateMesh:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1909 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00053	8b 47 48	 mov	 eax, DWORD PTR [edi+72]
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp

; 104  : 	m_vct_pgrnMeshBinding.reserve(pgrnModel->MeshBindingCount);

  00056	8d 77 40	 lea	 esi, DWORD PTR [edi+64]
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1909 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00059	8b 16		 mov	 edx, DWORD PTR [esi]
  0005b	2b c2		 sub	 eax, edx
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp

; 104  : 	m_vct_pgrnMeshBinding.reserve(pgrnModel->MeshBindingCount);

  0005d	8b 4b 4c	 mov	 ecx, DWORD PTR [ebx+76]
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1909 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00060	c1 f8 02	 sar	 eax, 2
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp

; 104  : 	m_vct_pgrnMeshBinding.reserve(pgrnModel->MeshBindingCount);

  00063	89 4d f8	 mov	 DWORD PTR __Newcapacity$1$[ebp], ecx
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1710 :         if (_Newcapacity > capacity()) { // something to do (reserve() never shrinks)

  00066	3b c8		 cmp	 ecx, eax
  00068	0f 86 97 00 00
	00		 jbe	 $LN198@CreateMesh

; 1711 :             if (_Newcapacity > max_size()) {

  0006e	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  00074	0f 87 c6 01 00
	00		 ja	 $LN192@CreateMesh

; 1634 :         const auto _Size = static_cast<size_type>(_Mylast - _Myfirst);

  0007a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0007d	2b c2		 sub	 eax, edx
  0007f	c1 f8 02	 sar	 eax, 2
  00082	89 45 08	 mov	 DWORD PTR __Size$1$[ebp], eax
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 122  :     return _Count * _Ty_size;

  00085	8d 04 8d 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*4]

; 227  :     if (_Bytes == 0) {

  0008c	85 c0		 test	 eax, eax
  0008e	75 04		 jne	 SHORT $LN28@CreateMesh

; 228  :         return nullptr;

  00090	33 ff		 xor	 edi, edi
  00092	eb 19		 jmp	 SHORT $LN27@CreateMesh
$LN28@CreateMesh:

; 229  :     }
; 230  : 
; 231  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 232  :     if (_STD is_constant_evaluated()) {
; 233  :         return _Traits::_Allocate(_Bytes);
; 234  :     }
; 235  : #endif // _HAS_CXX20
; 236  : 
; 237  : #ifdef __cpp_aligned_new
; 238  :     if constexpr (_Align > __STDCPP_DEFAULT_NEW_ALIGNMENT__) {
; 239  :         size_t _Passed_align = _Align;
; 240  : #if defined(_M_IX86) || defined(_M_X64)
; 241  :         if (_Bytes >= _Big_allocation_threshold) {
; 242  :             // boost the alignment of big allocations to help autovectorization
; 243  :             _Passed_align = (_STD max)(_Align, _Big_allocation_alignment);
; 244  :         }
; 245  : #endif // defined(_M_IX86) || defined(_M_X64)
; 246  :         return _Traits::_Allocate_aligned(_Bytes, _Passed_align);
; 247  :     } else
; 248  : #endif // defined(__cpp_aligned_new)
; 249  :     {
; 250  : #if defined(_M_IX86) || defined(_M_X64)
; 251  :         if (_Bytes >= _Big_allocation_threshold) {

  00094	50		 push	 eax
  00095	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0009a	72 07		 jb	 SHORT $LN29@CreateMesh

; 253  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0009c	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  000a1	eb 05		 jmp	 SHORT $LN224@CreateMesh
$LN29@CreateMesh:

; 136  :         return ::operator new(_Bytes);

  000a3	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
$LN224@CreateMesh:

; 1955 :             _STD _Copy_memmove(_UFirst, _ULast, _STD _Unfancy(_Dest));

  000a8	8b f8		 mov	 edi, eax
  000aa	83 c4 04	 add	 esp, 4
$LN27@CreateMesh:
  000ad	57		 push	 edi
  000ae	ff 76 04	 push	 DWORD PTR [esi+4]
  000b1	ff 36		 push	 DWORD PTR [esi]
  000b3	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAUmesh_binding@granny@@PAPAU12@@std@@YAPAPAUmesh_binding@granny@@PAPAU12@00@Z ; std::_Copy_memmove<granny::mesh_binding * *,granny::mesh_binding * *>
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 2054 :         if (_Myfirst) { // destroy and deallocate old array

  000b8	8b 06		 mov	 eax, DWORD PTR [esi]
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 1955 :             _STD _Copy_memmove(_UFirst, _ULast, _STD _Unfancy(_Dest));

  000ba	83 c4 0c	 add	 esp, 12			; 0000000cH
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 2054 :         if (_Myfirst) { // destroy and deallocate old array

  000bd	85 c0		 test	 eax, eax
  000bf	74 30		 je	 SHORT $LN55@CreateMesh

; 2055 :             _STD _Destroy_range(_Myfirst, _Mylast, _Al);
; 2056 :             _ASAN_VECTOR_REMOVE;
; 2057 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000c1	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000c4	2b c8		 sub	 ecx, eax
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 981  :         _STD _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000c6	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 284  :         if (_Bytes >= _Big_allocation_threshold) {

  000c9	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000cf	72 16		 jb	 SHORT $LN66@CreateMesh

; 205  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000d1	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000d4	83 c1 23	 add	 ecx, 35			; 00000023H

; 206  : 
; 207  :     // If the following asserts, it likely means that we are performing
; 208  :     // an aligned delete on memory coming from an unaligned allocation.
; 209  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 210  : 
; 211  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 212  :     // in range [_Min_back_shift, _Non_user_size]
; 213  : #ifdef _DEBUG
; 214  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 215  : #else // ^^^ defined(_DEBUG) / !defined(_DEBUG) vvv
; 216  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 217  : #endif // ^^^ !defined(_DEBUG) ^^^
; 218  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000d7	2b c2		 sub	 eax, edx

; 219  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000d9	83 c0 fc	 add	 eax, -4			; fffffffcH
  000dc	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000df	0f 87 51 01 00
	00		 ja	 $LN63@CreateMesh

; 220  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000e5	8b c2		 mov	 eax, edx
$LN66@CreateMesh:

; 289  :         ::operator delete(_Ptr, _Bytes);

  000e7	51		 push	 ecx
  000e8	50		 push	 eax
  000e9	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000ee	83 c4 08	 add	 esp, 8
$LN55@CreateMesh:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 2061 :         _Mylast  = _Newvec + _Newsize;

  000f1	8b 45 08	 mov	 eax, DWORD PTR __Size$1$[ebp]
  000f4	89 3e		 mov	 DWORD PTR [esi], edi
  000f6	8d 04 87	 lea	 eax, DWORD PTR [edi+eax*4]
  000f9	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 2062 :         _Myend   = _Newvec + _Newcapacity;

  000fc	8b 45 f8	 mov	 eax, DWORD PTR __Newcapacity$1$[ebp]
  000ff	8d 04 87	 lea	 eax, DWORD PTR [edi+eax*4]
  00102	89 46 08	 mov	 DWORD PTR [esi+8], eax
$LN198@CreateMesh:
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp

; 107  : 	for (iMeshBinding = 0; iMeshBinding != pgrnModel->MeshBindingCount; ++iMeshBinding)

  00105	33 c9		 xor	 ecx, ecx
  00107	89 4d f8	 mov	 DWORD PTR _iMeshBinding$1$[ebp], ecx
  0010a	39 4b 4c	 cmp	 DWORD PTR [ebx+76], ecx
  0010d	0f 84 0e 01 00
	00		 je	 $LN3@CreateMesh
$LL4@CreateMesh:

; 108  : 		m_vct_pgrnMeshBinding.push_back(GrannyNewMeshBinding(pgrnModel->MeshBindings[iMeshBinding].Mesh, pgrnModel->Skeleton, pgrnDstSkeleton));

  00113	ff 75 fc	 push	 DWORD PTR _pgrnDstSkeleton$1$[ebp]
  00116	8b 43 50	 mov	 eax, DWORD PTR [ebx+80]
  00119	ff 73 04	 push	 DWORD PTR [ebx+4]
  0011c	ff 34 88	 push	 DWORD PTR [eax+ecx*4]
  0011f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GrannyNewMeshBinding@12
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 829  :         if (_Mylast != _My_data._Myend) {

  00125	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp

; 108  : 		m_vct_pgrnMeshBinding.push_back(GrannyNewMeshBinding(pgrnModel->MeshBindings[iMeshBinding].Mesh, pgrnModel->Skeleton, pgrnDstSkeleton));

  00128	8b d0		 mov	 edx, eax
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 829  :         if (_Mylast != _My_data._Myend) {

  0012a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp

; 108  : 		m_vct_pgrnMeshBinding.push_back(GrannyNewMeshBinding(pgrnModel->MeshBindings[iMeshBinding].Mesh, pgrnModel->Skeleton, pgrnDstSkeleton));

  0012d	89 55 f0	 mov	 DWORD PTR $T2[ebp], edx
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 829  :         if (_Mylast != _My_data._Myend) {

  00130	89 45 08	 mov	 DWORD PTR __Whereptr$1$[ebp], eax
  00133	3b c1		 cmp	 eax, ecx
  00135	74 0b		 je	 SHORT $LN99@CreateMesh

; 845  :             _STD _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  00137	89 10		 mov	 DWORD PTR [eax], edx

; 846  :         } else {
; 847  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 848  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 849  :             _ASAN_VECTOR_RELEASE_GUARD;
; 850  :         }
; 851  : 
; 852  :         _Orphan_range(_Mylast, _Mylast);
; 853  :         _Ty& _Result = *_Mylast;
; 854  :         ++_Mylast;

  00139	83 46 04 04	 add	 DWORD PTR [esi+4], 4

; 830  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0013d	e9 cf 00 00 00	 jmp	 $LN2@CreateMesh
$LN99@CreateMesh:

; 869  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00142	8b 16		 mov	 edx, DWORD PTR [esi]
  00144	2b c2		 sub	 eax, edx
  00146	c1 f8 02	 sar	 eax, 2
  00149	89 45 f4	 mov	 DWORD PTR __Oldsize$1$[ebp], eax

; 870  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);
; 871  : 
; 872  :         if (_Oldsize == max_size()) {

  0014c	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00151	0f 84 e9 00 00
	00		 je	 $LN192@CreateMesh

; 1909 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00157	2b ca		 sub	 ecx, edx

; 876  :         const size_type _Newsize = _Oldsize + 1;

  00159	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1909 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0015c	c1 f9 02	 sar	 ecx, 2

; 1996 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  0015f	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  00164	8b d1		 mov	 edx, ecx

; 876  :         const size_type _Newsize = _Oldsize + 1;

  00166	89 7d ec	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1996 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00169	d1 ea		 shr	 edx, 1
  0016b	2b c2		 sub	 eax, edx
  0016d	3b c8		 cmp	 ecx, eax
  0016f	76 12		 jbe	 SHORT $LN110@CreateMesh

; 1997 :             return _Max; // geometric growth would overflow

  00171	b8 fc ff ff ff	 mov	 eax, -4			; fffffffcH
  00176	bb ff ff ff 3f	 mov	 ebx, 1073741823		; 3fffffffH
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 253  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0017b	50		 push	 eax
  0017c	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00181	eb 3a		 jmp	 SHORT $LN225@CreateMesh
$LN110@CreateMesh:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 2000 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00183	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 117  :         if (_Count > _Max_possible) {

  00186	8b df		 mov	 ebx, edi
  00188	3b c7		 cmp	 eax, edi
  0018a	0f 43 d8	 cmovae	 ebx, eax
  0018d	81 fb ff ff ff
	3f		 cmp	 ebx, 1073741823		; 3fffffffH
  00193	0f 87 a2 00 00
	00		 ja	 $LN193@CreateMesh

; 122  :     return _Count * _Ty_size;

  00199	8d 04 9d 00 00
	00 00		 lea	 eax, DWORD PTR [ebx*4]

; 227  :     if (_Bytes == 0) {

  001a0	85 c0		 test	 eax, eax
  001a2	75 04		 jne	 SHORT $LN125@CreateMesh

; 228  :         return nullptr;

  001a4	33 ff		 xor	 edi, edi
  001a6	eb 1a		 jmp	 SHORT $LN124@CreateMesh
$LN125@CreateMesh:

; 229  :     }
; 230  : 
; 231  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 232  :     if (_STD is_constant_evaluated()) {
; 233  :         return _Traits::_Allocate(_Bytes);
; 234  :     }
; 235  : #endif // _HAS_CXX20
; 236  : 
; 237  : #ifdef __cpp_aligned_new
; 238  :     if constexpr (_Align > __STDCPP_DEFAULT_NEW_ALIGNMENT__) {
; 239  :         size_t _Passed_align = _Align;
; 240  : #if defined(_M_IX86) || defined(_M_X64)
; 241  :         if (_Bytes >= _Big_allocation_threshold) {
; 242  :             // boost the alignment of big allocations to help autovectorization
; 243  :             _Passed_align = (_STD max)(_Align, _Big_allocation_alignment);
; 244  :         }
; 245  : #endif // defined(_M_IX86) || defined(_M_X64)
; 246  :         return _Traits::_Allocate_aligned(_Bytes, _Passed_align);
; 247  :     } else
; 248  : #endif // defined(__cpp_aligned_new)
; 249  :     {
; 250  : #if defined(_M_IX86) || defined(_M_X64)
; 251  :         if (_Bytes >= _Big_allocation_threshold) {

  001a8	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  001ad	72 08		 jb	 SHORT $LN126@CreateMesh

; 253  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  001af	50		 push	 eax
  001b0	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  001b5	eb 06		 jmp	 SHORT $LN225@CreateMesh
$LN126@CreateMesh:

; 136  :         return ::operator new(_Bytes);

  001b7	50		 push	 eax
  001b8	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
$LN225@CreateMesh:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 885  :         _Alty_traits::construct(_Al, _STD _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  001bd	8b f8		 mov	 edi, eax
  001bf	83 c4 04	 add	 esp, 4
$LN124@CreateMesh:
  001c2	8b 45 f4	 mov	 eax, DWORD PTR __Oldsize$1$[ebp]
  001c5	8b 4d f0	 mov	 ecx, DWORD PTR $T2[ebp]
  001c8	8d 04 87	 lea	 eax, DWORD PTR [edi+eax*4]
  001cb	89 08		 mov	 DWORD PTR [eax], ecx

; 886  :         _Constructed_first = _Newvec + _Whereoff;
; 887  : 
; 888  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  001cd	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  001d0	8b 16		 mov	 edx, DWORD PTR [esi]
  001d2	89 45 f4	 mov	 DWORD PTR tv998[ebp], eax
  001d5	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$1$[ebp]
  001d8	3b c1		 cmp	 eax, ecx
  001da	75 04		 jne	 SHORT $LN105@CreateMesh
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 1955 :             _STD _Copy_memmove(_UFirst, _ULast, _STD _Unfancy(_Dest));

  001dc	8b c7		 mov	 eax, edi
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 894  :         } else { // provide basic guarantee

  001de	eb 17		 jmp	 SHORT $LN154@CreateMesh
$LN105@CreateMesh:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 1955 :             _STD _Copy_memmove(_UFirst, _ULast, _STD _Unfancy(_Dest));

  001e0	57		 push	 edi
  001e1	50		 push	 eax
  001e2	52		 push	 edx
  001e3	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAUmesh_binding@granny@@PAPAU12@@std@@YAPAPAUmesh_binding@granny@@PAPAU12@00@Z ; std::_Copy_memmove<granny::mesh_binding * *,granny::mesh_binding * *>
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 897  :             _STD _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  001e8	8b 45 f4	 mov	 eax, DWORD PTR tv998[ebp]
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 1955 :             _STD _Copy_memmove(_UFirst, _ULast, _STD _Unfancy(_Dest));

  001eb	83 c4 0c	 add	 esp, 12			; 0000000cH
  001ee	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$1$[ebp]
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 897  :             _STD _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  001f1	83 c0 04	 add	 eax, 4
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 1955 :             _STD _Copy_memmove(_UFirst, _ULast, _STD _Unfancy(_Dest));

  001f4	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
$LN154@CreateMesh:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 900  :         _Guard._New_begin = nullptr;

  001f7	50		 push	 eax
  001f8	51		 push	 ecx
  001f9	52		 push	 edx
  001fa	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAUmesh_binding@granny@@PAPAU12@@std@@YAPAPAUmesh_binding@granny@@PAPAU12@00@Z ; std::_Copy_memmove<granny::mesh_binding * *,granny::mesh_binding * *>
  001ff	83 c4 0c	 add	 esp, 12			; 0000000cH

; 901  :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  00202	8b ce		 mov	 ecx, esi
  00204	53		 push	 ebx
  00205	ff 75 ec	 push	 DWORD PTR __Newsize$1$[ebp]
  00208	57		 push	 edi
  00209	e8 00 00 00 00	 call	 ?_Change_array@?$vector@PAUmesh_binding@granny@@V?$allocator@PAUmesh_binding@granny@@@std@@@std@@AAEXQAPAUmesh_binding@granny@@II@Z ; std::vector<granny::mesh_binding *,std::allocator<granny::mesh_binding *> >::_Change_array
  0020e	8b 5d e8	 mov	 ebx, DWORD PTR _pgrnModel$1$[ebp]
$LN2@CreateMesh:
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp

; 107  : 	for (iMeshBinding = 0; iMeshBinding != pgrnModel->MeshBindingCount; ++iMeshBinding)

  00211	8b 4d f8	 mov	 ecx, DWORD PTR _iMeshBinding$1$[ebp]
  00214	41		 inc	 ecx
  00215	89 4d f8	 mov	 DWORD PTR _iMeshBinding$1$[ebp], ecx
  00218	3b 4b 4c	 cmp	 ecx, DWORD PTR [ebx+76]
  0021b	0f 85 f2 fe ff
	ff		 jne	 $LL4@CreateMesh
$LN3@CreateMesh:

; 109  : 
; 110  : 	return true;

  00221	5e		 pop	 esi
  00222	5f		 pop	 edi
  00223	b0 01		 mov	 al, 1

; 111  : }

  00225	5b		 pop	 ebx
  00226	8b e5		 mov	 esp, ebp
  00228	5d		 pop	 ebp
  00229	c2 04 00	 ret	 4
$LN202@CreateMesh:
  0022c	5f		 pop	 edi

; 98   : 		return false;

  0022d	32 c0		 xor	 al, al

; 111  : }

  0022f	5b		 pop	 ebx
  00230	8b e5		 mov	 esp, ebp
  00232	5d		 pop	 ebp
  00233	c2 04 00	 ret	 4
$LN63@CreateMesh:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 219  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00236	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN193@CreateMesh:

; 118  :             _Throw_bad_array_new_length(); // multiply overflow

  0023b	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN192@CreateMesh:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 873  :             _Xlength();

  00240	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAUmesh_binding@granny@@V?$allocator@PAUmesh_binding@granny@@@std@@@std@@CAXXZ ; std::vector<granny::mesh_binding *,std::allocator<granny::mesh_binding *> >::_Xlength
$LN223@CreateMesh:
  00245	cc		 int	 3
?__CreateMeshBindingVector@CGrannyModelInstance@@IAE_NPAV1@@Z ENDP ; CGrannyModelInstance::__CreateMeshBindingVector
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?__CreateWorldPose@CGrannyModelInstance@@IAEXPAV1@@Z
_TEXT	SEGMENT
_pkSkeletonInst$ = 8					; size = 4
?__CreateWorldPose@CGrannyModelInstance@@IAEXPAV1@@Z PROC ; CGrannyModelInstance::__CreateWorldPose, COMDAT
; _this$ = ecx

; 123  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 124  : 	assert(m_pgrnModelInstance != NULL);
; 125  : 	assert(m_pgrnWorldPoseReal == NULL);
; 126  : 
; 127  : 	// WORK
; 128  : 	if (pkSkeletonInst)

  00003	83 7d 08 00	 cmp	 DWORD PTR _pkSkeletonInst$[ebp], 0
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	75 15		 jne	 SHORT $LN1@CreateWorl

; 129  : 		return;
; 130  : 	// END_OF_WORK
; 131  : 
; 132  : 	granny_skeleton * pgrnSkeleton = GrannyGetSourceSkeleton(m_pgrnModelInstance);

  0000c	ff 76 08	 push	 DWORD PTR [esi+8]
  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GrannyGetSourceSkeleton@4

; 133  : 
; 134  : 	// WORK
; 135  : 	m_pgrnWorldPoseReal = GrannyNewWorldPose(pgrnSkeleton->BoneCount);

  00015	ff 70 04	 push	 DWORD PTR [eax+4]
  00018	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GrannyNewWorldPose@4
  0001e	89 46 3c	 mov	 DWORD PTR [esi+60], eax
$LN1@CreateWorl:
  00021	5e		 pop	 esi

; 136  : 	// END_OF_WORK
; 137  : }

  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
?__CreateWorldPose@CGrannyModelInstance@@IAEXPAV1@@Z ENDP ; CGrannyModelInstance::__CreateWorldPose
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?__DestroyWorldPose@CGrannyModelInstance@@IAEXXZ
_TEXT	SEGMENT
?__DestroyWorldPose@CGrannyModelInstance@@IAEXXZ PROC	; CGrannyModelInstance::__DestroyWorldPose, COMDAT
; _this$ = ecx

; 140  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 141  : 	if (!m_pgrnWorldPoseReal)

  00003	8b 46 3c	 mov	 eax, DWORD PTR [esi+60]
  00006	85 c0		 test	 eax, eax
  00008	74 0e		 je	 SHORT $LN1@DestroyWor

; 142  : 		return;
; 143  : 
; 144  : 	GrannyFreeWorldPose(m_pgrnWorldPoseReal);

  0000a	50		 push	 eax
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GrannyFreeWorldPose@4

; 145  : 	m_pgrnWorldPoseReal = NULL;

  00011	c7 46 3c 00 00
	00 00		 mov	 DWORD PTR [esi+60], 0
$LN1@DestroyWor:

; 146  : }

  00018	5e		 pop	 esi
  00019	c3		 ret	 0
?__DestroyWorldPose@CGrannyModelInstance@@IAEXXZ ENDP	; CGrannyModelInstance::__DestroyWorldPose
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?__CreateDynamicVertexBuffer@CGrannyModelInstance@@IAEXXZ
_TEXT	SEGMENT
?__CreateDynamicVertexBuffer@CGrannyModelInstance@@IAEXXZ PROC ; CGrannyModelInstance::__CreateDynamicVertexBuffer, COMDAT
; _this$ = ecx

; 231  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 232  : 	assert(m_pModel != NULL);
; 233  : 	assert(m_kLocalDeformableVertexBuffer.IsEmpty());
; 234  : 
; 235  : 	int vtxCount = m_pModel->GetDeformVertexCount();

  00003	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00006	e8 00 00 00 00	 call	 ?GetDeformVertexCount@CGrannyModel@@QBEHXZ ; CGrannyModel::GetDeformVertexCount

; 236  : 
; 237  : 	if (0 != vtxCount)

  0000b	85 c0		 test	 eax, eax
  0000d	74 13		 je	 SHORT $LN3@CreateDyna

; 238  : 	{
; 239  : 		if (!m_kLocalDeformableVertexBuffer.Create(vtxCount,

  0000f	8b 56 50	 mov	 edx, DWORD PTR [esi+80]
  00012	8d 4e 50	 lea	 ecx, DWORD PTR [esi+80]
  00015	6a 01		 push	 1
  00017	6a 08		 push	 8
  00019	68 12 01 00 00	 push	 274			; 00000112H
  0001e	50		 push	 eax
  0001f	ff 52 04	 call	 DWORD PTR [edx+4]
$LN3@CreateDyna:

; 240  : 									   D3DFVF_XYZ|D3DFVF_NORMAL|D3DFVF_TEX1,
; 241  : 									   //D3DUSAGE_DYNAMIC, D3DPOOL_SYSTEMMEM
; 242  : 
; 243  : 									   D3DUSAGE_WRITEONLY, D3DPOOL_MANAGED
; 244  : 		))
; 245  : 			return;
; 246  : 	}
; 247  : }

  00022	5e		 pop	 esi
  00023	c3		 ret	 0
?__CreateDynamicVertexBuffer@CGrannyModelInstance@@IAEXXZ ENDP ; CGrannyModelInstance::__CreateDynamicVertexBuffer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?__CreateMeshMatrices@CGrannyModelInstance@@IAEXXZ
_TEXT	SEGMENT
$T1 = -4						; size = 4
$T2 = -4						; size = 4
?__CreateMeshMatrices@CGrannyModelInstance@@IAEXXZ PROC	; CGrannyModelInstance::__CreateMeshMatrices, COMDAT
; _this$ = ecx

; 167  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 168  : 	assert(m_pModel != NULL);
; 169  : 
; 170  : 	if (m_pModel->GetMeshCount() <= 0)

  00007	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0000a	e8 00 00 00 00	 call	 ?GetMeshCount@CGrannyModel@@QBEHXZ ; CGrannyModel::GetMeshCount
  0000f	85 c0		 test	 eax, eax
  00011	7e 29		 jle	 SHORT $LN1@CreateMesh

; 171  : 		return;
; 172  : 
; 173  : 	int meshCount = m_pModel->GetMeshCount();

  00013	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00016	e8 00 00 00 00	 call	 ?GetMeshCount@CGrannyModel@@QBEHXZ ; CGrannyModel::GetMeshCount

; 174  : 	m_meshMatrices = new D3DXMATRIX[meshCount];

  0001b	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  0001e	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00023	f7 e1		 mul	 ecx
  00025	b9 ff ff ff ff	 mov	 ecx, -1
  0002a	0f 42 c1	 cmovb	 eax, ecx
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00033	83 c4 04	 add	 esp, 4
  00036	89 45 fc	 mov	 DWORD PTR $T2[ebp], eax
  00039	89 46 14	 mov	 DWORD PTR [esi+20], eax
$LN1@CreateMesh:
  0003c	5e		 pop	 esi

; 175  : }

  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
?__CreateMeshMatrices@CGrannyModelInstance@@IAEXXZ ENDP	; CGrannyModelInstance::__CreateMeshMatrices
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?__CreateModelInstance@CGrannyModelInstance@@IAEXXZ
_TEXT	SEGMENT
?__CreateModelInstance@CGrannyModelInstance@@IAEXXZ PROC ; CGrannyModelInstance::__CreateModelInstance, COMDAT
; _this$ = ecx

; 149  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 150  : 	assert(m_pModel != NULL);
; 151  : 	assert(m_pgrnModelInstance == NULL);
; 152  : 
; 153  : 	const granny_model * pgrnModel = m_pModel->GetGrannyModelPointer();

  00003	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00006	e8 00 00 00 00	 call	 ?GetGrannyModelPointer@CGrannyModel@@QAEPAUgranny_model@@XZ ; CGrannyModel::GetGrannyModelPointer

; 154  : 	m_pgrnModelInstance = GrannyInstantiateModel(pgrnModel);

  0000b	50		 push	 eax
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GrannyInstantiateModel@4
  00012	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00015	5e		 pop	 esi

; 155  : }

  00016	c3		 ret	 0
?__CreateModelInstance@CGrannyModelInstance@@IAEXXZ ENDP ; CGrannyModelInstance::__CreateModelInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?__DestroyDynamicVertexBuffer@CGrannyModelInstance@@IAEXXZ
_TEXT	SEGMENT
?__DestroyDynamicVertexBuffer@CGrannyModelInstance@@IAEXXZ PROC ; CGrannyModelInstance::__DestroyDynamicVertexBuffer, COMDAT
; _this$ = ecx

; 250  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 251  : 	m_kLocalDeformableVertexBuffer.Destroy();

  00003	8d 4e 50	 lea	 ecx, DWORD PTR [esi+80]
  00006	e8 00 00 00 00	 call	 ?Destroy@CGraphicVertexBuffer@@QAEXXZ ; CGraphicVertexBuffer::Destroy

; 252  : 	m_pkSharedDeformableVertexBuffer = NULL;

  0000b	c7 46 4c 00 00
	00 00		 mov	 DWORD PTR [esi+76], 0
  00012	5e		 pop	 esi

; 253  : }

  00013	c3		 ret	 0
?__DestroyDynamicVertexBuffer@CGrannyModelInstance@@IAEXXZ ENDP ; CGrannyModelInstance::__DestroyDynamicVertexBuffer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?__DestroyMeshMatrices@CGrannyModelInstance@@IAEXXZ
_TEXT	SEGMENT
?__DestroyMeshMatrices@CGrannyModelInstance@@IAEXXZ PROC ; CGrannyModelInstance::__DestroyMeshMatrices, COMDAT
; _this$ = ecx

; 178  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 179  : 	if (!m_meshMatrices)

  00003	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00006	85 c0		 test	 eax, eax
  00008	74 10		 je	 SHORT $LN1@DestroyMes

; 180  : 		return;
; 181  : 
; 182  : 	delete [] m_meshMatrices;

  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00010	83 c4 04	 add	 esp, 4

; 183  : 	m_meshMatrices = NULL;

  00013	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
$LN1@DestroyMes:

; 184  : }

  0001a	5e		 pop	 esi
  0001b	c3		 ret	 0
?__DestroyMeshMatrices@CGrannyModelInstance@@IAEXXZ ENDP ; CGrannyModelInstance::__DestroyMeshMatrices
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?__DestroyModelInstance@CGrannyModelInstance@@IAEXXZ
_TEXT	SEGMENT
?__DestroyModelInstance@CGrannyModelInstance@@IAEXXZ PROC ; CGrannyModelInstance::__DestroyModelInstance, COMDAT
; _this$ = ecx

; 158  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 159  : 	if (!m_pgrnModelInstance)

  00003	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00006	85 c0		 test	 eax, eax
  00008	74 0e		 je	 SHORT $LN1@DestroyMod

; 160  : 		return;
; 161  : 
; 162  : 	GrannyFreeModelInstance(m_pgrnModelInstance);

  0000a	50		 push	 eax
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GrannyFreeModelInstance@4

; 163  : 	m_pgrnModelInstance = NULL;

  00011	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN1@DestroyMod:

; 164  : }

  00018	5e		 pop	 esi
  00019	c3		 ret	 0
?__DestroyModelInstance@CGrannyModelInstance@@IAEXXZ ENDP ; CGrannyModelInstance::__DestroyModelInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?ReloadTexture@CGrannyModelInstance@@QAEXXZ
_TEXT	SEGMENT
?ReloadTexture@CGrannyModelInstance@@QAEXXZ PROC	; CGrannyModelInstance::ReloadTexture, COMDAT
; _this$ = ecx

; 288  : 	assert("Not currently used - CGrannyModelInstance::ReloadTexture()");
; 289  : /*
; 290  : 	assert(m_pModel != NULL);
; 291  : 	const CGrannyMaterialPalette & c_rGrannyMaterialPalette = m_pModel->GetMaterialPalette();
; 292  : 	DWORD dwMaterialCount = c_rGrannyMaterialPalette.GetMaterialCount();
; 293  : 	for (DWORD dwMtrIndex = 0; dwMtrIndex < dwMaterialCount; ++dwMtrIndex)
; 294  : 	{
; 295  : 		const CGrannyMaterial & c_rGrannyMaterial = c_rGrannyMaterialPalette.GetMaterialRef(dwMtrIndex);
; 296  : 		CGraphicImage * pImageStage0 = c_rGrannyMaterial.GetImagePointer(0);
; 297  : 		if (pImageStage0)
; 298  : 			pImageStage0->Reload();
; 299  : 		CGraphicImage * pImageStage1 = c_rGrannyMaterial.GetImagePointer(1);
; 300  : 		if (pImageStage1)
; 301  : 			pImageStage1->Reload();
; 302  : 	}
; 303  : */
; 304  : }

  00000	c2 00 00	 ret	 0
?ReloadTexture@CGrannyModelInstance@@QAEXXZ ENDP	; CGrannyModelInstance::ReloadTexture
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?GetBoneIndexByName@CGrannyModelInstance@@QBE_NPBDPAH@Z
_TEXT	SEGMENT
_c_szBoneName$ = 8					; size = 4
_pBoneIndex$ = 12					; size = 4
?GetBoneIndexByName@CGrannyModelInstance@@QBE_NPBDPAH@Z PROC ; CGrannyModelInstance::GetBoneIndexByName, COMDAT
; _this$ = ecx

; 258  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 259  : 	assert(m_pgrnModelInstance != NULL);
; 260  : 
; 261  : 	granny_skeleton * pgrnSkeleton = GrannyGetSourceSkeleton(m_pgrnModelInstance);

  00003	ff 71 08	 push	 DWORD PTR [ecx+8]
  00006	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GrannyGetSourceSkeleton@4

; 262  : 
; 263  : 	if (!GrannyFindBoneByName(pgrnSkeleton, c_szBoneName, pBoneIndex))

  0000c	ff 75 0c	 push	 DWORD PTR _pBoneIndex$[ebp]
  0000f	ff 75 08	 push	 DWORD PTR _c_szBoneName$[ebp]
  00012	50		 push	 eax
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GrannyFindBoneByName@12
  00019	84 c0		 test	 al, al
  0001b	0f 95 c0	 setne	 al

; 264  : 		return false;
; 265  : 
; 266  : 	return true;
; 267  : }

  0001e	5d		 pop	 ebp
  0001f	c2 08 00	 ret	 8
?GetBoneIndexByName@CGrannyModelInstance@@QBE_NPBDPAH@Z ENDP ; CGrannyModelInstance::GetBoneIndexByName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?GetCompositeBoneMatrixPointer@CGrannyModelInstance@@QBEPBMH@Z
_TEXT	SEGMENT
_iBone$ = 8						; size = 4
?GetCompositeBoneMatrixPointer@CGrannyModelInstance@@QBEPBMH@Z PROC ; CGrannyModelInstance::GetCompositeBoneMatrixPointer, COMDAT
; _this$ = ecx

; 282  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 283  : 	return GrannyGetWorldPoseComposite4x4(__GetWorldPosePtr(), iBone);

  00003	ff 75 08	 push	 DWORD PTR _iBone$[ebp]
  00006	e8 00 00 00 00	 call	 ?__GetWorldPosePtr@CGrannyModelInstance@@IBEPAUworld_pose@granny@@XZ ; CGrannyModelInstance::__GetWorldPosePtr
  0000b	50		 push	 eax
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GrannyGetWorldPoseComposite4x4@8

; 284  : }

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?GetCompositeBoneMatrixPointer@CGrannyModelInstance@@QBEPBMH@Z ENDP ; CGrannyModelInstance::GetCompositeBoneMatrixPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?GetBoneMatrixPointer@CGrannyModelInstance@@QBEPBMH@Z
_TEXT	SEGMENT
_iBone$ = 8						; size = 4
?GetBoneMatrixPointer@CGrannyModelInstance@@QBEPBMH@Z PROC ; CGrannyModelInstance::GetBoneMatrixPointer, COMDAT
; _this$ = ecx

; 270  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 271  : 	const float* bones = GrannyGetWorldPose4x4(__GetWorldPosePtr(), iBone);

  00004	ff 75 08	 push	 DWORD PTR _iBone$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	e8 00 00 00 00	 call	 ?__GetWorldPosePtr@CGrannyModelInstance@@IBEPAUworld_pose@granny@@XZ ; CGrannyModelInstance::__GetWorldPosePtr
  0000e	50		 push	 eax
  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GrannyGetWorldPose4x4@8

; 272  : 	if (!bones)

  00015	85 c0		 test	 eax, eax
  00017	75 0a		 jne	 SHORT $LN1@GetBoneMat

; 273  : 	{
; 274  : 		granny_model* pModel = m_pModel->GetGrannyModelPointer();

  00019	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001c	e8 00 00 00 00	 call	 ?GetGrannyModelPointer@CGrannyModel@@QAEPAUgranny_model@@XZ ; CGrannyModel::GetGrannyModelPointer

; 275  : 		//TraceError("GrannyModelInstance(%s).GetBoneMatrixPointer(boneIndex(%d)).NOT_FOUND_BONE", pModel->Name, iBone);
; 276  : 		return NULL;

  00021	33 c0		 xor	 eax, eax
$LN1@GetBoneMat:
  00023	5e		 pop	 esi

; 277  : 	}
; 278  : 	return bones;
; 279  : }

  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?GetBoneMatrixPointer@CGrannyModelInstance@@QBEPBMH@Z ENDP ; CGrannyModelInstance::GetBoneMatrixPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?GetVertexCount@CGrannyModelInstance@@QAEKXZ
_TEXT	SEGMENT
?GetVertexCount@CGrannyModelInstance@@QAEKXZ PROC	; CGrannyModelInstance::GetVertexCount, COMDAT
; _this$ = ecx

; 196  : 	if (!m_pModel)

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	85 c9		 test	 ecx, ecx
  00005	75 03		 jne	 SHORT $LN2@GetVertexC

; 197  : 		return 0;

  00007	33 c0		 xor	 eax, eax

; 200  : }

  00009	c3		 ret	 0
$LN2@GetVertexC:

; 198  : 
; 199  : 	return m_pModel->GetVertexCount();

  0000a	e9 00 00 00 00	 jmp	 ?GetVertexCount@CGrannyModel@@QBEHXZ ; CGrannyModel::GetVertexCount
?GetVertexCount@CGrannyModelInstance@@QAEKXZ ENDP	; CGrannyModelInstance::GetVertexCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?GetDeformableVertexCount@CGrannyModelInstance@@QAEKXZ
_TEXT	SEGMENT
?GetDeformableVertexCount@CGrannyModelInstance@@QAEKXZ PROC ; CGrannyModelInstance::GetDeformableVertexCount, COMDAT
; _this$ = ecx

; 188  : 	if (!m_pModel)

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	85 c9		 test	 ecx, ecx
  00005	75 03		 jne	 SHORT $LN2@GetDeforma

; 189  : 		return 0;

  00007	33 c0		 xor	 eax, eax

; 192  : }

  00009	c3		 ret	 0
$LN2@GetDeforma:

; 190  : 
; 191  : 	return m_pModel->GetDeformVertexCount();

  0000a	e9 00 00 00 00	 jmp	 ?GetDeformVertexCount@CGrannyModel@@QBEHXZ ; CGrannyModel::GetDeformVertexCount
?GetDeformableVertexCount@CGrannyModelInstance@@QAEKXZ ENDP ; CGrannyModelInstance::GetDeformableVertexCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?SetLinkedModelPointer@CGrannyModelInstance@@QAEXPAVCGrannyModel@@PAVCGraphicVertexBuffer@@PAPAV1@@Z
_TEXT	SEGMENT
_pkModel$ = 8						; size = 4
_pkSharedDeformableVertexBuffer$ = 12			; size = 4
_ppkSkeletonInst$ = 16					; size = 4
?SetLinkedModelPointer@CGrannyModelInstance@@QAEXPAVCGrannyModel@@PAVCGraphicVertexBuffer@@PAPAV1@@Z PROC ; CGrannyModelInstance::SetLinkedModelPointer, COMDAT
; _this$ = ecx

; 26   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f1		 mov	 esi, ecx

; 27   : 	Clear();

  00008	e8 00 00 00 00	 call	 ?Clear@CGrannyModelInstance@@QAEXXZ ; CGrannyModelInstance::Clear

; 28   : 
; 29   : 	if (m_pModel)

  0000d	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00010	85 c9		 test	 ecx, ecx
  00012	74 05		 je	 SHORT $LN2@SetLinkedM

; 30   : 		m_pModel->Release();

  00014	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release
$LN2@SetLinkedM:

; 31   : 
; 32   : 	m_pModel = pkModel;

  00019	8b 5d 08	 mov	 ebx, DWORD PTR _pkModel$[ebp]

; 33   : 
; 34   : 	m_pModel->AddReference();

  0001c	8b cb		 mov	 ecx, ebx
  0001e	89 5e 04	 mov	 DWORD PTR [esi+4], ebx
  00021	e8 00 00 00 00	 call	 ?AddReference@CReferenceObject@@QAEXXZ ; CReferenceObject::AddReference

; 35   : 
; 36   : 	if (pkSharedDeformableVertexBuffer)

  00026	8b 45 0c	 mov	 eax, DWORD PTR _pkSharedDeformableVertexBuffer$[ebp]
  00029	8b ce		 mov	 ecx, esi
  0002b	85 c0		 test	 eax, eax
  0002d	74 08		 je	 SHORT $LN3@SetLinkedM

; 37   : 		__SetSharedDeformableVertexBuffer(pkSharedDeformableVertexBuffer);

  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 ?__SetSharedDeformableVertexBuffer@CGrannyModelInstance@@IAEXPAVCGraphicVertexBuffer@@@Z ; CGrannyModelInstance::__SetSharedDeformableVertexBuffer
  00035	eb 05		 jmp	 SHORT $LN4@SetLinkedM
$LN3@SetLinkedM:

; 38   : 	else
; 39   : 		__CreateDynamicVertexBuffer();

  00037	e8 00 00 00 00	 call	 ?__CreateDynamicVertexBuffer@CGrannyModelInstance@@IAEXXZ ; CGrannyModelInstance::__CreateDynamicVertexBuffer
$LN4@SetLinkedM:

; 40   : 
; 41   : 	__CreateModelInstance();

  0003c	8b ce		 mov	 ecx, esi
  0003e	e8 00 00 00 00	 call	 ?__CreateModelInstance@CGrannyModelInstance@@IAEXXZ ; CGrannyModelInstance::__CreateModelInstance

; 42   : 
; 43   : 	// WORK
; 44   : 	if (ppkSkeletonInst && *ppkSkeletonInst)

  00043	8b 7d 10	 mov	 edi, DWORD PTR _ppkSkeletonInst$[ebp]
  00046	85 ff		 test	 edi, edi
  00048	74 15		 je	 SHORT $LN5@SetLinkedM
  0004a	83 3f 00	 cmp	 DWORD PTR [edi], 0
  0004d	74 10		 je	 SHORT $LN5@SetLinkedM

; 45   : 	{
; 46   : 		m_ppkSkeletonInst = ppkSkeletonInst;

  0004f	89 7e 74	 mov	 DWORD PTR [esi+116], edi

; 47   : 		__CreateWorldPose(*ppkSkeletonInst);

  00052	8b ce		 mov	 ecx, esi
  00054	ff 37		 push	 DWORD PTR [edi]
  00056	e8 00 00 00 00	 call	 ?__CreateWorldPose@CGrannyModelInstance@@IAEXPAV1@@Z ; CGrannyModelInstance::__CreateWorldPose

; 48   : 		__CreateMeshBindingVector(*ppkSkeletonInst);

  0005b	8b 07		 mov	 eax, DWORD PTR [edi]

; 49   : 	}

  0005d	eb 0b		 jmp	 SHORT $LN6@SetLinkedM
$LN5@SetLinkedM:

; 50   : 	else
; 51   : 	{
; 52   : 		__CreateWorldPose(NULL);

  0005f	6a 00		 push	 0
  00061	8b ce		 mov	 ecx, esi
  00063	e8 00 00 00 00	 call	 ?__CreateWorldPose@CGrannyModelInstance@@IAEXPAV1@@Z ; CGrannyModelInstance::__CreateWorldPose

; 53   : 		__CreateMeshBindingVector(NULL);

  00068	33 c0		 xor	 eax, eax
$LN6@SetLinkedM:

; 54   : 	}
; 55   : 	// END_OF_WORK
; 56   : 
; 57   : 	__CreateMeshMatrices();

  0006a	50		 push	 eax
  0006b	8b ce		 mov	 ecx, esi
  0006d	e8 00 00 00 00	 call	 ?__CreateMeshBindingVector@CGrannyModelInstance@@IAE_NPAV1@@Z ; CGrannyModelInstance::__CreateMeshBindingVector
  00072	8b ce		 mov	 ecx, esi
  00074	e8 00 00 00 00	 call	 ?__CreateMeshMatrices@CGrannyModelInstance@@IAEXXZ ; CGrannyModelInstance::__CreateMeshMatrices

; 58   : 
; 59   : 	ResetLocalTime();

  00079	8b ce		 mov	 ecx, esi
  0007b	e8 00 00 00 00	 call	 ?ResetLocalTime@CGrannyModelInstance@@QAEHXZ ; CGrannyModelInstance::ResetLocalTime

; 60   : 
; 61   : 	m_kMtrlPal.Copy(pkModel->GetMaterialPalette());

  00080	8b cb		 mov	 ecx, ebx
  00082	e8 00 00 00 00	 call	 ?GetMaterialPalette@CGrannyModel@@QBEABVCGrannyMaterialPalette@@XZ ; CGrannyModel::GetMaterialPalette
  00087	50		 push	 eax
  00088	8d 4e 2c	 lea	 ecx, DWORD PTR [esi+44]
  0008b	e8 00 00 00 00	 call	 ?Copy@CGrannyMaterialPalette@@QAEXABV1@@Z ; CGrannyMaterialPalette::Copy
  00090	5f		 pop	 edi
  00091	5e		 pop	 esi
  00092	5b		 pop	 ebx

; 62   : }

  00093	5d		 pop	 ebp
  00094	c2 0c 00	 ret	 12			; 0000000cH
?SetLinkedModelPointer@CGrannyModelInstance@@QAEXPAVCGrannyModel@@PAVCGraphicVertexBuffer@@PAPAV1@@Z ENDP ; CGrannyModelInstance::SetLinkedModelPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?SetMainModelPointer@CGrannyModelInstance@@QAEXPAVCGrannyModel@@PAVCGraphicVertexBuffer@@@Z
_TEXT	SEGMENT
_pModel$ = 8						; size = 4
_pkSharedDeformableVertexBuffer$ = 12			; size = 4
?SetMainModelPointer@CGrannyModelInstance@@QAEXPAVCGrannyModel@@PAVCGraphicVertexBuffer@@@Z PROC ; CGrannyModelInstance::SetMainModelPointer, COMDAT
; _this$ = ecx

; 21   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 22   : 	SetLinkedModelPointer(pModel, pkSharedDeformableVertexBuffer, NULL);

  00003	6a 00		 push	 0
  00005	ff 75 0c	 push	 DWORD PTR _pkSharedDeformableVertexBuffer$[ebp]
  00008	ff 75 08	 push	 DWORD PTR _pModel$[ebp]
  0000b	e8 00 00 00 00	 call	 ?SetLinkedModelPointer@CGrannyModelInstance@@QAEXPAVCGrannyModel@@PAVCGraphicVertexBuffer@@PAPAV1@@Z ; CGrannyModelInstance::SetLinkedModelPointer

; 23   : }

  00010	5d		 pop	 ebp
  00011	c2 08 00	 ret	 8
?SetMainModelPointer@CGrannyModelInstance@@QAEXPAVCGrannyModel@@PAVCGraphicVertexBuffer@@@Z ENDP ; CGrannyModelInstance::SetMainModelPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterGrnLib\ModelInstanceModel.cpp
;	COMDAT ?Clear@CGrannyModelInstance@@QAEXXZ
_TEXT	SEGMENT
?Clear@CGrannyModelInstance@@QAEXXZ PROC		; CGrannyModelInstance::Clear, COMDAT
; _this$ = ecx

; 6    : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 7    : 	m_kMtrlPal.Clear();

  00003	8d 4e 2c	 lea	 ecx, DWORD PTR [esi+44]
  00006	e8 00 00 00 00	 call	 ?Clear@CGrannyMaterialPalette@@QAEXXZ ; CGrannyMaterialPalette::Clear

; 8    : 
; 9    : 	DestroyDeviceObjects();

  0000b	8b ce		 mov	 ecx, esi
  0000d	e8 00 00 00 00	 call	 ?DestroyDeviceObjects@CGrannyModelInstance@@QAEXXZ ; CGrannyModelInstance::DestroyDeviceObjects

; 10   : 	// WORK
; 11   : 	__DestroyMeshBindingVector();

  00012	8b ce		 mov	 ecx, esi
  00014	e8 00 00 00 00	 call	 ?__DestroyMeshBindingVector@CGrannyModelInstance@@IAEXXZ ; CGrannyModelInstance::__DestroyMeshBindingVector

; 12   : 	// END_OF_WORK
; 13   : 	__DestroyMeshMatrices();

  00019	8b ce		 mov	 ecx, esi
  0001b	e8 00 00 00 00	 call	 ?__DestroyMeshMatrices@CGrannyModelInstance@@IAEXXZ ; CGrannyModelInstance::__DestroyMeshMatrices

; 14   : 	__DestroyModelInstance();

  00020	8b ce		 mov	 ecx, esi
  00022	e8 00 00 00 00	 call	 ?__DestroyModelInstance@CGrannyModelInstance@@IAEXXZ ; CGrannyModelInstance::__DestroyModelInstance

; 15   : 	__DestroyWorldPose();

  00027	8b ce		 mov	 ecx, esi
  00029	e8 00 00 00 00	 call	 ?__DestroyWorldPose@CGrannyModelInstance@@IAEXXZ ; CGrannyModelInstance::__DestroyWorldPose

; 16   : 
; 17   : 	__Initialize();

  0002e	8b ce		 mov	 ecx, esi
  00030	5e		 pop	 esi
  00031	e9 00 00 00 00	 jmp	 ?__Initialize@CGrannyModelInstance@@IAEXXZ ; CGrannyModelInstance::__Initialize
?Clear@CGrannyModelInstance@@QAEXXZ ENDP		; CGrannyModelInstance::Clear
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.h
;	COMDAT ??0D3DXMATRIX@@QAE@XZ
_TEXT	SEGMENT
??0D3DXMATRIX@@QAE@XZ PROC				; D3DXMATRIX::D3DXMATRIX, COMDAT
; _this$ = ecx

; 177  :     D3DXMATRIX() {};

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0D3DXMATRIX@@QAE@XZ ENDP				; D3DXMATRIX::D3DXMATRIX
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 182  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 183  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 184  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 185  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 136  :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 186  :         _Throw_bad_array_new_length(); // add overflow
; 187  :     }
; 188  : 
; 189  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 136  :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 190  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 191  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 192  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 193  : 
; 194  : #ifdef _DEBUG
; 195  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 196  : #endif // defined(_DEBUG)
; 197  :     return _Ptr;
; 198  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 190  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 107  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 108  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 90   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 91   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN18@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN18@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 73   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 72   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 74   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 91   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 144  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 145  :     }

  00003	8b c1		 mov	 eax, ecx

; 66   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 67   :     {
; 68   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 144  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 145  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 90   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 91   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN13@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN13@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 73   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 72   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 74   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 90   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 91   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN8@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN8@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 96   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 97   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 91   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 92   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 73   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 74   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 75   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END

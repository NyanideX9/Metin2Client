; Listing generated by Microsoft (R) Optimizing Compiler Version 19.37.32822.0 

	TITLE	C:\Marty 5.5\Src-Client\Client\eterPythonLib\Distribute\PythonSlotWindow.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
?_Fake_alloc@std@@3U_Fake_allocator@1@B	ORG $+1		; std::_Fake_alloc
CONST	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__snprintf
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	?OnChangePosition@CWindow@UI@@UAEXXZ		; UI::CWindow::OnChangePosition
PUBLIC	?SetColor@CWindow@UI@@UAEXK@Z			; UI::CWindow::SetColor
PUBLIC	?IsWindow@CWindow@UI@@UAEHXZ			; UI::CWindow::IsWindow
PUBLIC	?Type@CSlotWindow@UI@@SAKXZ			; UI::CSlotWindow::Type
PUBLIC	??1?$list@USSlot@CSlotWindow@UI@@V?$allocator@USSlot@CSlotWindow@UI@@@std@@@std@@QAE@XZ ; std::list<UI::CSlotWindow::SSlot,std::allocator<UI::CSlotWindow::SSlot> >::~list<UI::CSlotWindow::SSlot,std::allocator<UI::CSlotWindow::SSlot> >
PUBLIC	??0CSlotWindow@UI@@QAE@PAU_object@@@Z		; UI::CSlotWindow::CSlotWindow
PUBLIC	??1CSlotWindow@UI@@UAE@XZ			; UI::CSlotWindow::~CSlotWindow
PUBLIC	?Destroy@CSlotWindow@UI@@QAEXXZ			; UI::CSlotWindow::Destroy
PUBLIC	?SetSlotType@CSlotWindow@UI@@QAEXK@Z		; UI::CSlotWindow::SetSlotType
PUBLIC	?SetSlotStyle@CSlotWindow@UI@@QAEXK@Z		; UI::CSlotWindow::SetSlotStyle
PUBLIC	?AppendSlot@CSlotWindow@UI@@QAEXKHHHH@Z		; UI::CSlotWindow::AppendSlot
PUBLIC	?SetCoverButton@CSlotWindow@UI@@QAEXKPBD000HH@Z	; UI::CSlotWindow::SetCoverButton
PUBLIC	?SetSlotBaseImage@CSlotWindow@UI@@QAEXPBDMMMM@Z	; UI::CSlotWindow::SetSlotBaseImage
PUBLIC	?AppendSlotButton@CSlotWindow@UI@@QAEXPBD00@Z	; UI::CSlotWindow::AppendSlotButton
PUBLIC	?AppendRequirementSignImage@CSlotWindow@UI@@QAEXPBD@Z ; UI::CSlotWindow::AppendRequirementSignImage
PUBLIC	?EnableCoverButton@CSlotWindow@UI@@QAEXK@Z	; UI::CSlotWindow::EnableCoverButton
PUBLIC	?DisableCoverButton@CSlotWindow@UI@@QAEXK@Z	; UI::CSlotWindow::DisableCoverButton
PUBLIC	?SetAlwaysRenderCoverButton@CSlotWindow@UI@@QAEXK_N@Z ; UI::CSlotWindow::SetAlwaysRenderCoverButton
PUBLIC	?ShowSlotBaseImage@CSlotWindow@UI@@QAEXK@Z	; UI::CSlotWindow::ShowSlotBaseImage
PUBLIC	?HideSlotBaseImage@CSlotWindow@UI@@QAEXK@Z	; UI::CSlotWindow::HideSlotBaseImage
PUBLIC	?IsDisableCoverButton@CSlotWindow@UI@@QAEHK@Z	; UI::CSlotWindow::IsDisableCoverButton
PUBLIC	?HasSlot@CSlotWindow@UI@@QAEHK@Z		; UI::CSlotWindow::HasSlot
PUBLIC	?ClearAllSlot@CSlotWindow@UI@@QAEXXZ		; UI::CSlotWindow::ClearAllSlot
PUBLIC	?ClearSlot@CSlotWindow@UI@@QAEXK@Z		; UI::CSlotWindow::ClearSlot
PUBLIC	?SetSlot@CSlotWindow@UI@@QAEXKKEEPAVCGraphicImage@@AAUD3DXCOLOR@@@Z ; UI::CSlotWindow::SetSlot
PUBLIC	?SetSlotCount@CSlotWindow@UI@@QAEXKK@Z		; UI::CSlotWindow::SetSlotCount
PUBLIC	?SetSlotCountNew@CSlotWindow@UI@@QAEXKKK@Z	; UI::CSlotWindow::SetSlotCountNew
PUBLIC	?SetSlotCoolTime@CSlotWindow@UI@@QAEXKMM@Z	; UI::CSlotWindow::SetSlotCoolTime
PUBLIC	?ActivateSlot@CSlotWindow@UI@@QAEXKABUD3DXCOLOR@@@Z ; UI::CSlotWindow::ActivateSlot
PUBLIC	?DeactivateSlot@CSlotWindow@UI@@QAEXK@Z		; UI::CSlotWindow::DeactivateSlot
PUBLIC	?RefreshSlot@CSlotWindow@UI@@QAEXXZ		; UI::CSlotWindow::RefreshSlot
PUBLIC	?GetSlotCoolTime@CSlotWindow@UI@@QAEMKPAM@Z	; UI::CSlotWindow::GetSlotCoolTime
PUBLIC	?IsActivatedSlot@CSlotWindow@UI@@QAE_NK@Z	; UI::CSlotWindow::IsActivatedSlot
PUBLIC	?GetSlotCount@CSlotWindow@UI@@QAEKXZ		; UI::CSlotWindow::GetSlotCount
PUBLIC	?LockSlot@CSlotWindow@UI@@QAEXK@Z		; UI::CSlotWindow::LockSlot
PUBLIC	?UnlockSlot@CSlotWindow@UI@@QAEXK@Z		; UI::CSlotWindow::UnlockSlot
PUBLIC	?SetCantUseSlot@CSlotWindow@UI@@QAEXK@Z		; UI::CSlotWindow::SetCantUseSlot
PUBLIC	?SetUseSlot@CSlotWindow@UI@@QAEXK@Z		; UI::CSlotWindow::SetUseSlot
PUBLIC	?EnableSlot@CSlotWindow@UI@@QAEXK@Z		; UI::CSlotWindow::EnableSlot
PUBLIC	?DisableSlot@CSlotWindow@UI@@QAEXK@Z		; UI::CSlotWindow::DisableSlot
PUBLIC	?ClearSelected@CSlotWindow@UI@@QAEXXZ		; UI::CSlotWindow::ClearSelected
PUBLIC	?SelectSlot@CSlotWindow@UI@@QAEXK@Z		; UI::CSlotWindow::SelectSlot
PUBLIC	?isSelectedSlot@CSlotWindow@UI@@QAEHK@Z		; UI::CSlotWindow::isSelectedSlot
PUBLIC	?GetSelectedSlotCount@CSlotWindow@UI@@QAEKXZ	; UI::CSlotWindow::GetSelectedSlotCount
PUBLIC	?GetSelectedSlotNumber@CSlotWindow@UI@@QAEKK@Z	; UI::CSlotWindow::GetSelectedSlotNumber
PUBLIC	?ShowSlotButton@CSlotWindow@UI@@QAEXK@Z		; UI::CSlotWindow::ShowSlotButton
PUBLIC	?HideAllSlotButton@CSlotWindow@UI@@QAEXXZ	; UI::CSlotWindow::HideAllSlotButton
PUBLIC	?OnPressedSlotButton@CSlotWindow@UI@@QAEXKKH@Z	; UI::CSlotWindow::OnPressedSlotButton
PUBLIC	?ShowRequirementSign@CSlotWindow@UI@@QAEXK@Z	; UI::CSlotWindow::ShowRequirementSign
PUBLIC	?HideRequirementSign@CSlotWindow@UI@@QAEXK@Z	; UI::CSlotWindow::HideRequirementSign
PUBLIC	?OnOverInItem@CSlotWindow@UI@@QAEHK@Z		; UI::CSlotWindow::OnOverInItem
PUBLIC	?OnOverOutItem@CSlotWindow@UI@@QAEXXZ		; UI::CSlotWindow::OnOverOutItem
PUBLIC	?SetUseMode@CSlotWindow@UI@@QAEXH@Z		; UI::CSlotWindow::SetUseMode
PUBLIC	?SetUsableItem@CSlotWindow@UI@@QAEXH@Z		; UI::CSlotWindow::SetUsableItem
PUBLIC	?ReserveDestroyCoolTimeFinishEffect@CSlotWindow@UI@@QAEXK@Z ; UI::CSlotWindow::ReserveDestroyCoolTimeFinishEffect
PUBLIC	?__Initialize@CSlotWindow@UI@@IAEXXZ		; UI::CSlotWindow::__Initialize
PUBLIC	?__CreateToggleSlotImage@CSlotWindow@UI@@IAEXXZ	; UI::CSlotWindow::__CreateToggleSlotImage
PUBLIC	?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::__CreateSlotEnableEffect
PUBLIC	?__CreateFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z ; UI::CSlotWindow::__CreateFinishCoolTimeEffect
PUBLIC	?__CreateBaseImage@CSlotWindow@UI@@IAEXPBDMMMM@Z ; UI::CSlotWindow::__CreateBaseImage
PUBLIC	?__DestroyToggleSlotImage@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::__DestroyToggleSlotImage
PUBLIC	?__DestroySlotEnableEffect@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::__DestroySlotEnableEffect
PUBLIC	?__DestroyFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z ; UI::CSlotWindow::__DestroyFinishCoolTimeEffect
PUBLIC	?__DestroyBaseImage@CSlotWindow@UI@@IAEXXZ	; UI::CSlotWindow::__DestroyBaseImage
PUBLIC	?OnUpdate@CSlotWindow@UI@@MAEXXZ		; UI::CSlotWindow::OnUpdate
PUBLIC	?OnRender@CSlotWindow@UI@@MAEXXZ		; UI::CSlotWindow::OnRender
PUBLIC	?OnMouseLeftButtonDown@CSlotWindow@UI@@MAEHXZ	; UI::CSlotWindow::OnMouseLeftButtonDown
PUBLIC	?OnMouseLeftButtonUp@CSlotWindow@UI@@MAEHXZ	; UI::CSlotWindow::OnMouseLeftButtonUp
PUBLIC	?OnMouseRightButtonDown@CSlotWindow@UI@@MAEHXZ	; UI::CSlotWindow::OnMouseRightButtonDown
PUBLIC	?OnMouseLeftButtonDoubleClick@CSlotWindow@UI@@MAEHXZ ; UI::CSlotWindow::OnMouseLeftButtonDoubleClick
PUBLIC	?OnMouseOverOut@CSlotWindow@UI@@MAEXXZ		; UI::CSlotWindow::OnMouseOverOut
PUBLIC	?OnMouseOver@CSlotWindow@UI@@MAEXXZ		; UI::CSlotWindow::OnMouseOver
PUBLIC	?RenderSlotBaseImage@CSlotWindow@UI@@IAEXXZ	; UI::CSlotWindow::RenderSlotBaseImage
PUBLIC	?RenderLockedSlot@CSlotWindow@UI@@IAEXXZ	; UI::CSlotWindow::RenderLockedSlot
PUBLIC	?OnRenderPickingSlot@CSlotWindow@UI@@MAEXXZ	; UI::CSlotWindow::OnRenderPickingSlot
PUBLIC	?OnRenderSelectedSlot@CSlotWindow@UI@@MAEXXZ	; UI::CSlotWindow::OnRenderSelectedSlot
PUBLIC	?OnSelectEmptySlot@CSlotWindow@UI@@IAEXH@Z	; UI::CSlotWindow::OnSelectEmptySlot
PUBLIC	?OnSelectItemSlot@CSlotWindow@UI@@IAEXH@Z	; UI::CSlotWindow::OnSelectItemSlot
PUBLIC	?OnUnselectEmptySlot@CSlotWindow@UI@@IAEXH@Z	; UI::CSlotWindow::OnUnselectEmptySlot
PUBLIC	?OnUnselectItemSlot@CSlotWindow@UI@@IAEXH@Z	; UI::CSlotWindow::OnUnselectItemSlot
PUBLIC	?OnUseSlot@CSlotWindow@UI@@IAEXXZ		; UI::CSlotWindow::OnUseSlot
PUBLIC	?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
PUBLIC	?GetSelectedSlotPointer@CSlotWindow@UI@@IAEHPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSelectedSlotPointer
PUBLIC	?GetPickedSlotPointer@CSlotWindow@UI@@MAEHPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetPickedSlotPointer
PUBLIC	?ClearSlot@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z	; UI::CSlotWindow::ClearSlot
PUBLIC	?OnRefreshSlot@CSlotWindow@UI@@MAEXXZ		; UI::CSlotWindow::OnRefreshSlot
PUBLIC	?OnIsType@CSlotWindow@UI@@MAEHK@Z		; UI::CSlotWindow::OnIsType
PUBLIC	??1?$list@KV?$allocator@K@std@@@std@@QAE@XZ	; std::list<unsigned long,std::allocator<unsigned long> >::~list<unsigned long,std::allocator<unsigned long> >
PUBLIC	?_Xlen@?$deque@KV?$allocator@K@std@@@std@@ABEXXZ ; std::deque<unsigned long,std::allocator<unsigned long> >::_Xlen
PUBLIC	?_Growmap@?$deque@KV?$allocator@K@std@@@std@@AAEXI@Z ; std::deque<unsigned long,std::allocator<unsigned long> >::_Growmap
PUBLIC	?_Tidy@?$deque@KV?$allocator@K@std@@@std@@AAEXXZ ; std::deque<unsigned long,std::allocator<unsigned long> >::_Tidy
PUBLIC	??_GCSlotWindow@UI@@UAEPAXI@Z			; UI::CSlotWindow::`scalar deleting destructor'
PUBLIC	??1CSlotButton@CSlotWindow@UI@@UAE@XZ		; UI::CSlotWindow::CSlotButton::~CSlotButton
PUBLIC	?OnMouseLeftButtonDown@CSlotButton@CSlotWindow@UI@@UAEHXZ ; UI::CSlotWindow::CSlotButton::OnMouseLeftButtonDown
PUBLIC	?OnMouseLeftButtonUp@CSlotButton@CSlotWindow@UI@@UAEHXZ ; UI::CSlotWindow::CSlotButton::OnMouseLeftButtonUp
PUBLIC	?OnMouseOverIn@CSlotButton@CSlotWindow@UI@@UAEXXZ ; UI::CSlotWindow::CSlotButton::OnMouseOverIn
PUBLIC	?OnMouseOverOut@CSlotButton@CSlotWindow@UI@@UAEXXZ ; UI::CSlotWindow::CSlotButton::OnMouseOverOut
PUBLIC	??_GCSlotButton@CSlotWindow@UI@@UAEPAXI@Z	; UI::CSlotWindow::CSlotButton::`scalar deleting destructor'
PUBLIC	??1CCoverButton@CSlotWindow@UI@@UAE@XZ		; UI::CSlotWindow::CCoverButton::~CCoverButton
PUBLIC	?OnRender@CCoverButton@CSlotWindow@UI@@UAEXXZ	; UI::CSlotWindow::CCoverButton::OnRender
PUBLIC	?OnMouseLeftButtonDown@CCoverButton@CSlotWindow@UI@@UAEHXZ ; UI::CSlotWindow::CCoverButton::OnMouseLeftButtonDown
PUBLIC	?OnMouseLeftButtonUp@CCoverButton@CSlotWindow@UI@@UAEHXZ ; UI::CSlotWindow::CCoverButton::OnMouseLeftButtonUp
PUBLIC	?OnMouseRightButtonDown@CCoverButton@CSlotWindow@UI@@UAEHXZ ; UI::CSlotWindow::CCoverButton::OnMouseRightButtonDown
PUBLIC	?OnMouseRightButtonUp@CCoverButton@CSlotWindow@UI@@UAEHXZ ; UI::CSlotWindow::CCoverButton::OnMouseRightButtonUp
PUBLIC	??_GCCoverButton@CSlotWindow@UI@@UAEPAXI@Z	; UI::CSlotWindow::CCoverButton::`scalar deleting destructor'
PUBLIC	??1CCoolTimeFinishEffect@CSlotWindow@UI@@UAE@XZ	; UI::CSlotWindow::CCoolTimeFinishEffect::~CCoolTimeFinishEffect
PUBLIC	?OnEndFrame@CCoolTimeFinishEffect@CSlotWindow@UI@@UAEXXZ ; UI::CSlotWindow::CCoolTimeFinishEffect::OnEndFrame
PUBLIC	??_GCCoolTimeFinishEffect@CSlotWindow@UI@@UAEPAXI@Z ; UI::CSlotWindow::CCoolTimeFinishEffect::`scalar deleting destructor'
PUBLIC	??_9CWindow@UI@@$B3AE				; UI::CWindow::`vcall'{4}'
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@KPAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<unsigned long,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<unsigned long,void *> > >
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CSlotWindow::SSlot,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CSlotWindow::SSlot,void *> > >
PUBLIC	??$uninitialized_copy@PAPAKPAPAK@std@@YAPAPAKQAPAK0PAPAK@Z ; std::uninitialized_copy<unsigned long * *,unsigned long * *>
PUBLIC	??$_Uninitialized_value_construct_n_unchecked1@PAPAKI@std@@YAPAPAKPAPAKI@Z ; std::_Uninitialized_value_construct_n_unchecked1<unsigned long * *,unsigned int>
PUBLIC	??$_Zero_range@PAPAK@std@@YAPAPAKQAPAK0@Z	; std::_Zero_range<unsigned long * *>
PUBLIC	??$_Copy_memmove@PAPAKPAPAK@std@@YAPAPAKPAPAK00@Z ; std::_Copy_memmove<unsigned long * *,unsigned long * *>
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7CSlotWindow@UI@@6B@				; UI::CSlotWindow::`vftable'
PUBLIC	??_7CSlotButton@CSlotWindow@UI@@6B@		; UI::CSlotWindow::CSlotButton::`vftable'
PUBLIC	??_7CCoverButton@CSlotWindow@UI@@6B@		; UI::CSlotWindow::CCoverButton::`vftable'
PUBLIC	??_7CCoolTimeFinishEffect@CSlotWindow@UI@@6B@	; UI::CSlotWindow::CCoolTimeFinishEffect::`vftable'
PUBLIC	??_C@_02DPKJAMEF@?$CFd@				; `string'
PUBLIC	??_C@_03CIOACFJF@m?$CFd@			; `string'
PUBLIC	??_C@_03EHFNMFPB@g?$CFd@			; `string'
PUBLIC	??_C@_01JBBJJEPG@p@				; `string'
PUBLIC	??_C@_03LIHNMIHG@?$CIi?$CJ@			; `string'
PUBLIC	??_C@_0BC@JJECHKOF@OnSelectEmptySlot@		; `string'
PUBLIC	??_C@_0BB@PFHJJJ@OnSelectItemSlot@		; `string'
PUBLIC	??_C@_0BE@GMADJAFC@OnUnselectEmptySlot@		; `string'
PUBLIC	??_C@_0BD@EONLJJMO@OnUnselectItemSlot@		; `string'
PUBLIC	??_C@_09HJIBPFCA@OnUseSlot@			; `string'
PUBLIC	??_C@_0N@CBOPEHFH@OnOverInItem@			; `string'
PUBLIC	??_C@_02HCKGKOFO@?$CI?$CJ@			; `string'
PUBLIC	??_C@_0O@IBCIPGEP@OnOverOutItem@		; `string'
PUBLIC	??_C@_0BE@MBGDMPNF@OnPressedSlotButton@		; `string'
PUBLIC	??_C@_0M@DKKKJBKL@CSlotWindow@			; `string'
PUBLIC	??_C@_0CH@JJGPDFBJ@d?3?1ymir?5work?1ui?1public?1slot_tog@ ; `string'
PUBLIC	??_C@_0CP@LLEDDNBJ@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0CP@HABPOOLM@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0CP@PGILJMBC@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0CP@DNNHEPLH@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0CP@CANCHPAP@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0CP@OLIOKMKK@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0CP@GNBKNOAE@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0CP@KGEGANKB@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0CP@FHBALPHE@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0CP@JMEMGMNB@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0CP@BNDEDGKN@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0CP@NGGIOFAI@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0CP@FAPMJHKG@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@FHBGNIHM@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@JMEKALNJ@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@BKNOHJHH@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@NBICKKNC@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@MMIHJKGK@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@HNLEJMP@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@IBEPDLGB@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@EKBDOIME@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@LLEFFKBB@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@HABJIJLE@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@PBGBNDMI@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@DKDNAAGN@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@LMKJHCMD@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@EAGNMMDP@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@ILDBBPJK@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@NKFGNDE@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@MGPJLOJB@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@NLPMIOCJ@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@BAKAFNIM@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@JGDECPCC@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@FNGIPMIH@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@KMDOEOFC@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@GHGCJNPH@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@OGBKMHIL@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@CNEGBECO@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DF@KLNCGGIA@d?3?1ymir?5work?1ui?1public?1slotacti@ ; `string'
PUBLIC	??_C@_0DH@EECLJILE@d?3?1ymir?5work?1ui?1public?1slotfini@ ; `string'
PUBLIC	??_C@_0DH@IPHHELBB@d?3?1ymir?5work?1ui?1public?1slotfini@ ; `string'
PUBLIC	??_C@_0DH@JODDJLP@d?3?1ymir?5work?1ui?1public?1slotfini@ ; `string'
PUBLIC	??_C@_0DH@MCLPOKBK@d?3?1ymir?5work?1ui?1public?1slotfini@ ; `string'
PUBLIC	??_C@_0DH@NPLKNKKC@d?3?1ymir?5work?1ui?1public?1slotfini@ ; `string'
PUBLIC	??_C@_0DH@BEOGAJAH@d?3?1ymir?5work?1ui?1public?1slotfini@ ; `string'
PUBLIC	??_C@_0DH@JCHCHLKJ@d?3?1ymir?5work?1ui?1public?1slotfini@ ; `string'
PUBLIC	??_C@_0DH@FJCOKIAM@d?3?1ymir?5work?1ui?1public?1slotfini@ ; `string'
PUBLIC	??_C@_0DH@KIHIBKNJ@d?3?1ymir?5work?1ui?1public?1slotfini@ ; `string'
PUBLIC	??_C@_0DH@GDCEMJHM@d?3?1ymir?5work?1ui?1public?1slotfini@ ; `string'
PUBLIC	??_C@_0DH@OCFMJDAA@d?3?1ymir?5work?1ui?1public?1slotfini@ ; `string'
PUBLIC	??_C@_0O@NKNMEGII@list?5too?5long@		; `string'
PUBLIC	??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@	; `string'
PUBLIC	??_R1A@?0A@EA@CWindow@UI@@8			; UI::CWindow::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCWindow@UI@@@8				; UI::CWindow `RTTI Type Descriptor'
PUBLIC	??_R3CWindow@UI@@8				; UI::CWindow::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWindow@UI@@8				; UI::CWindow::`RTTI Base Class Array'
PUBLIC	??_R4CSlotWindow@UI@@6B@			; UI::CSlotWindow::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCSlotWindow@UI@@@8			; UI::CSlotWindow `RTTI Type Descriptor'
PUBLIC	??_R3CSlotWindow@UI@@8				; UI::CSlotWindow::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CSlotWindow@UI@@8				; UI::CSlotWindow::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CSlotWindow@UI@@8			; UI::CSlotWindow::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CSlotButton@CSlotWindow@UI@@6B@		; UI::CSlotWindow::CSlotButton::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCSlotButton@CSlotWindow@UI@@@8		; UI::CSlotWindow::CSlotButton `RTTI Type Descriptor'
PUBLIC	??_R3CSlotButton@CSlotWindow@UI@@8		; UI::CSlotWindow::CSlotButton::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CSlotButton@CSlotWindow@UI@@8		; UI::CSlotWindow::CSlotButton::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CSlotButton@CSlotWindow@UI@@8	; UI::CSlotWindow::CSlotButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CButton@UI@@8			; UI::CButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCButton@UI@@@8				; UI::CButton `RTTI Type Descriptor'
PUBLIC	??_R3CButton@UI@@8				; UI::CButton::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CButton@UI@@8				; UI::CButton::`RTTI Base Class Array'
PUBLIC	??_R4CCoverButton@CSlotWindow@UI@@6B@		; UI::CSlotWindow::CCoverButton::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCCoverButton@CSlotWindow@UI@@@8		; UI::CSlotWindow::CCoverButton `RTTI Type Descriptor'
PUBLIC	??_R3CCoverButton@CSlotWindow@UI@@8		; UI::CSlotWindow::CCoverButton::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCoverButton@CSlotWindow@UI@@8		; UI::CSlotWindow::CCoverButton::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCoverButton@CSlotWindow@UI@@8	; UI::CSlotWindow::CCoverButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CCoolTimeFinishEffect@CSlotWindow@UI@@6B@	; UI::CSlotWindow::CCoolTimeFinishEffect::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCCoolTimeFinishEffect@CSlotWindow@UI@@@8 ; UI::CSlotWindow::CCoolTimeFinishEffect `RTTI Type Descriptor'
PUBLIC	??_R3CCoolTimeFinishEffect@CSlotWindow@UI@@8	; UI::CSlotWindow::CCoolTimeFinishEffect::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCoolTimeFinishEffect@CSlotWindow@UI@@8	; UI::CSlotWindow::CCoolTimeFinishEffect::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCoolTimeFinishEffect@CSlotWindow@UI@@8 ; UI::CSlotWindow::CCoolTimeFinishEffect::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CAniImageBox@UI@@8		; UI::CAniImageBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCAniImageBox@UI@@@8			; UI::CAniImageBox `RTTI Type Descriptor'
PUBLIC	??_R3CAniImageBox@UI@@8				; UI::CAniImageBox::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CAniImageBox@UI@@8				; UI::CAniImageBox::`RTTI Base Class Array'
PUBLIC	__real@00000000
PUBLIC	__real@3f800000
PUBLIC	__real@41800000
PUBLIC	__xmm@3f8000003f8000003f8000003f800000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_abort:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	___stdio_common_vsprintf:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	__imp__Py_BuildValue:PROC
EXTRN	?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z:PROC ; PyCallClassMemberFunc
EXTRN	?GetCurrentSecond@CTimer@@QAEMXZ:PROC		; CTimer::GetCurrentSecond
EXTRN	?GetCRC32@@YAKPBDI@Z:PROC			; GetCRC32
EXTRN	?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z:PROC ; CResourceManager::GetResourcePointer
EXTRN	?Render@CGraphicImageInstance@@QAEXXZ:PROC	; CGraphicImageInstance::Render
EXTRN	?SetDiffuseColor@CGraphicImageInstance@@QAEXMMMM@Z:PROC ; CGraphicImageInstance::SetDiffuseColor
EXTRN	?SetPosition@CGraphicImageInstance@@QAEXMM@Z:PROC ; CGraphicImageInstance::SetPosition
EXTRN	?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z:PROC ; CGraphicImageInstance::SetImagePointer
EXTRN	?New@CGraphicImageInstance@@SAPAV1@XZ:PROC	; CGraphicImageInstance::New
EXTRN	?Delete@CGraphicImageInstance@@SAXPAV1@@Z:PROC	; CGraphicImageInstance::Delete
EXTRN	?RenderBar2d@CScreen@@QAEXMMMMM@Z:PROC		; CScreen::RenderBar2d
EXTRN	?SetDiffuseColor@CScreen@@QAEXMMMM@Z:PROC	; CScreen::SetDiffuseColor
EXTRN	?RenderCoolTimeBox@CPythonGraphic@@QAEXMMMM@Z:PROC ; CPythonGraphic::RenderCoolTimeBox
EXTRN	?GetMousePosition@CWindowManager@UI@@QAEXAAJ0@Z:PROC ; UI::CWindowManager::GetMousePosition
EXTRN	?IsDragging@CWindowManager@UI@@QAEHXZ:PROC	; UI::CWindowManager::IsDragging
EXTRN	?SetParent@CWindowManager@UI@@QAEXPAVCWindow@2@0@Z:PROC ; UI::CWindowManager::SetParent
EXTRN	?DestroyWindow@CWindowManager@UI@@QAEXPAVCWindow@2@@Z:PROC ; UI::CWindowManager::DestroyWindow
EXTRN	?IsAttaching@CWindowManager@UI@@QAEHXZ:PROC	; UI::CWindowManager::IsAttaching
EXTRN	?DeattachIcon@CWindowManager@UI@@QAEXXZ:PROC	; UI::CWindowManager::DeattachIcon
EXTRN	?IsType@CWindow@UI@@QAEHK@Z:PROC		; UI::CWindow::IsType
EXTRN	??0CWindow@UI@@QAE@PAU_object@@@Z:PROC		; UI::CWindow::CWindow
EXTRN	??1CWindow@UI@@UAE@XZ:PROC			; UI::CWindow::~CWindow
EXTRN	?Update@CWindow@UI@@QAEXXZ:PROC			; UI::CWindow::Update
EXTRN	?Render@CWindow@UI@@QAEXXZ:PROC			; UI::CWindow::Render
EXTRN	?SetPosition@CWindow@UI@@QAEXJJ@Z:PROC		; UI::CWindow::SetPosition
EXTRN	?GetMouseLocalPosition@CWindow@UI@@QAEXAAJ0@Z:PROC ; UI::CWindow::GetMouseLocalPosition
EXTRN	?Show@CWindow@UI@@QAEXXZ:PROC			; UI::CWindow::Show
EXTRN	?Hide@CWindow@UI@@QAEXXZ:PROC			; UI::CWindow::Hide
EXTRN	?IsRendering@CWindow@UI@@QAE_NXZ:PROC		; UI::CWindow::IsRendering
EXTRN	?SetTop@CWindow@UI@@QAEXPAV12@@Z:PROC		; UI::CWindow::SetTop
EXTRN	?IsIn@CWindow@UI@@QAE_NXZ:PROC			; UI::CWindow::IsIn
EXTRN	?OnSetFocus@CWindow@UI@@UAEXXZ:PROC		; UI::CWindow::OnSetFocus
EXTRN	?OnKillFocus@CWindow@UI@@UAEXXZ:PROC		; UI::CWindow::OnKillFocus
EXTRN	?OnMouseDrag@CWindow@UI@@UAEXJJ@Z:PROC		; UI::CWindow::OnMouseDrag
EXTRN	?OnMouseOverIn@CWindow@UI@@UAEXXZ:PROC		; UI::CWindow::OnMouseOverIn
EXTRN	?OnMouseOverOut@CWindow@UI@@UAEXXZ:PROC		; UI::CWindow::OnMouseOverOut
EXTRN	?OnMouseOver@CWindow@UI@@UAEXXZ:PROC		; UI::CWindow::OnMouseOver
EXTRN	?OnDrop@CWindow@UI@@UAEXXZ:PROC			; UI::CWindow::OnDrop
EXTRN	?OnTop@CWindow@UI@@UAEXXZ:PROC			; UI::CWindow::OnTop
EXTRN	?OnIMEUpdate@CWindow@UI@@UAEXXZ:PROC		; UI::CWindow::OnIMEUpdate
EXTRN	?OnMoveWindow@CWindow@UI@@UAEXJJ@Z:PROC		; UI::CWindow::OnMoveWindow
EXTRN	?OnIMETabEvent@CWindow@UI@@UAEHXZ:PROC		; UI::CWindow::OnIMETabEvent
EXTRN	?OnIMEReturnEvent@CWindow@UI@@UAEHXZ:PROC	; UI::CWindow::OnIMEReturnEvent
EXTRN	?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z:PROC	; UI::CWindow::OnIMEKeyDownEvent
EXTRN	?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ:PROC	; UI::CWindow::OnIMEChangeCodePage
EXTRN	?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ:PROC ; UI::CWindow::OnIMEOpenCandidateListEvent
EXTRN	?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ:PROC ; UI::CWindow::OnIMECloseCandidateListEvent
EXTRN	?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ:PROC ; UI::CWindow::OnIMEOpenReadingWndEvent
EXTRN	?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ:PROC ; UI::CWindow::OnIMECloseReadingWndEvent
EXTRN	?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ:PROC	; UI::CWindow::OnMouseLeftButtonDown
EXTRN	?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ:PROC	; UI::CWindow::OnMouseLeftButtonUp
EXTRN	?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ:PROC ; UI::CWindow::OnMouseLeftButtonDoubleClick
EXTRN	?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ:PROC	; UI::CWindow::OnMouseRightButtonDown
EXTRN	?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ:PROC	; UI::CWindow::OnMouseRightButtonUp
EXTRN	?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ:PROC ; UI::CWindow::OnMouseRightButtonDoubleClick
EXTRN	?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ:PROC ; UI::CWindow::OnMouseMiddleButtonDown
EXTRN	?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ:PROC	; UI::CWindow::OnMouseMiddleButtonUp
EXTRN	?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z:PROC	; UI::CWindow::OnMouseWheelScroll
EXTRN	?SetScrollable@CWindow@UI@@UAEXXZ:PROC		; UI::CWindow::SetScrollable
EXTRN	?OnKeyDown@CWindow@UI@@UAEHH@Z:PROC		; UI::CWindow::OnKeyDown
EXTRN	?OnKeyUp@CWindow@UI@@UAEHH@Z:PROC		; UI::CWindow::OnKeyUp
EXTRN	?OnPressEscapeKey@CWindow@UI@@UAEHXZ:PROC	; UI::CWindow::OnPressEscapeKey
EXTRN	?OnPressExitKey@CWindow@UI@@UAEHXZ:PROC		; UI::CWindow::OnPressExitKey
EXTRN	?OnIsType@CWindow@UI@@UAEHK@Z:PROC		; UI::CWindow::OnIsType
EXTRN	??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z:PROC	; UI::CNumberLine::CNumberLine
EXTRN	?SetHorizontalAlign@CNumberLine@UI@@QAEXH@Z:PROC ; UI::CNumberLine::SetHorizontalAlign
EXTRN	?SetNumber@CNumberLine@UI@@QAEXPBD@Z:PROC	; UI::CNumberLine::SetNumber
EXTRN	??0CImageBox@UI@@QAE@PAU_object@@@Z:PROC	; UI::CImageBox::CImageBox
EXTRN	?LoadImageA@CImageBox@UI@@QAEHPBD@Z:PROC	; UI::CImageBox::LoadImageA
EXTRN	??0CAniImageBox@UI@@QAE@PAU_object@@@Z:PROC	; UI::CAniImageBox::CAniImageBox
EXTRN	??1CAniImageBox@UI@@UAE@XZ:PROC			; UI::CAniImageBox::~CAniImageBox
EXTRN	?SetDelay@CAniImageBox@UI@@QAEXH@Z:PROC		; UI::CAniImageBox::SetDelay
EXTRN	?SetDiffuseColor@CAniImageBox@UI@@QAEXABUD3DXCOLOR@@@Z:PROC ; UI::CAniImageBox::SetDiffuseColor
EXTRN	?AppendImage@CAniImageBox@UI@@QAEXPBD@Z:PROC	; UI::CAniImageBox::AppendImage
EXTRN	?SetRenderingMode@CAniImageBox@UI@@QAEXH@Z:PROC	; UI::CAniImageBox::SetRenderingMode
EXTRN	?ResetFrame@CAniImageBox@UI@@QAEXXZ:PROC	; UI::CAniImageBox::ResetFrame
EXTRN	?OnUpdate@CAniImageBox@UI@@MAEXXZ:PROC		; UI::CAniImageBox::OnUpdate
EXTRN	?OnRender@CAniImageBox@UI@@MAEXXZ:PROC		; UI::CAniImageBox::OnRender
EXTRN	?OnChangePosition@CAniImageBox@UI@@MAEXXZ:PROC	; UI::CAniImageBox::OnChangePosition
EXTRN	?OnIsType@CAniImageBox@UI@@MAEHK@Z:PROC		; UI::CAniImageBox::OnIsType
EXTRN	??0CButton@UI@@QAE@PAU_object@@@Z:PROC		; UI::CButton::CButton
EXTRN	??1CButton@UI@@UAE@XZ:PROC			; UI::CButton::~CButton
EXTRN	?SetUpVisual@CButton@UI@@QAEHPBD@Z:PROC		; UI::CButton::SetUpVisual
EXTRN	?SetOverVisual@CButton@UI@@QAEHPBD@Z:PROC	; UI::CButton::SetOverVisual
EXTRN	?SetDownVisual@CButton@UI@@QAEHPBD@Z:PROC	; UI::CButton::SetDownVisual
EXTRN	?SetDisableVisual@CButton@UI@@QAEHPBD@Z:PROC	; UI::CButton::SetDisableVisual
EXTRN	?Enable@CButton@UI@@QAEXXZ:PROC			; UI::CButton::Enable
EXTRN	?Disable@CButton@UI@@QAEXXZ:PROC		; UI::CButton::Disable
EXTRN	?SetUp@CButton@UI@@QAEXXZ:PROC			; UI::CButton::SetUp
EXTRN	?Down@CButton@UI@@QAEXXZ:PROC			; UI::CButton::Down
EXTRN	?IsDisable@CButton@UI@@QAEHXZ:PROC		; UI::CButton::IsDisable
EXTRN	?IsPressed@CButton@UI@@QAEHXZ:PROC		; UI::CButton::IsPressed
EXTRN	?OnUpdate@CButton@UI@@MAEXXZ:PROC		; UI::CButton::OnUpdate
EXTRN	?OnRender@CButton@UI@@MAEXXZ:PROC		; UI::CButton::OnRender
EXTRN	?OnChangePosition@CButton@UI@@MAEXXZ:PROC	; UI::CButton::OnChangePosition
EXTRN	?OnMouseLeftButtonDown@CButton@UI@@MAEHXZ:PROC	; UI::CButton::OnMouseLeftButtonDown
EXTRN	?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ:PROC ; UI::CButton::OnMouseLeftButtonDoubleClick
EXTRN	?OnMouseLeftButtonUp@CButton@UI@@MAEHXZ:PROC	; UI::CButton::OnMouseLeftButtonUp
EXTRN	?IsEnable@CButton@UI@@IAEHXZ:PROC		; UI::CButton::IsEnable
EXTRN	?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z:PROC ; UI::CButton::SetCurrentVisual
EXTRN	??_ECSlotWindow@UI@@UAEPAXI@Z:PROC		; UI::CSlotWindow::`vector deleting destructor'
EXTRN	??_ECSlotButton@CSlotWindow@UI@@UAEPAXI@Z:PROC	; UI::CSlotWindow::CSlotButton::`vector deleting destructor'
EXTRN	??_ECCoverButton@CSlotWindow@UI@@UAEPAXI@Z:PROC	; UI::CSlotWindow::CCoverButton::`vector deleting destructor'
EXTRN	??_ECCoolTimeFinishEffect@CSlotWindow@UI@@UAEPAXI@Z:PROC ; UI::CSlotWindow::CCoolTimeFinishEffect::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A DD 01H DUP (?) ; CSingleton<CTimer>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A DD 01H DUP (?) ; CSingleton<CResourceManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A DD 01H DUP (?) ; CSingleton<CPythonGraphic>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A DD 01H DUP (?) ; CSingleton<UI::CWindowManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?s_Type@?1??Type@CSlotWindow@UI@@SAKXZ@4HA
_BSS	SEGMENT
?s_Type@?1??Type@CSlotWindow@UI@@SAKXZ@4HA DD 01H DUP (?) ; `UI::CSlotWindow::Type'::`2'::s_Type
_BSS	ENDS
;	COMDAT ?$TSS0@?1??Type@CSlotWindow@UI@@SAKXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??Type@CSlotWindow@UI@@SAKXZ@4HA DD 01H DUP (?) ; `UI::CSlotWindow::Type'::`2'::$TSS0
_BSS	ENDS
;	COMDAT __xmm@3f8000003f8000003f8000003f800000
CONST	SEGMENT
__xmm@3f8000003f8000003f8000003f800000 DB 00H, 00H, 080H, '?', 00H, 00H, 080H
	DB	'?', 00H, 00H, 080H, '?', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __real@41800000
CONST	SEGMENT
__real@41800000 DD 041800000r			; 16
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R2CAniImageBox@UI@@8
rdata$r	SEGMENT
??_R2CAniImageBox@UI@@8 DD FLAT:??_R1A@?0A@EA@CAniImageBox@UI@@8 ; UI::CAniImageBox::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CAniImageBox@UI@@8
rdata$r	SEGMENT
??_R3CAniImageBox@UI@@8 DD 00H				; UI::CAniImageBox::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CAniImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCAniImageBox@UI@@@8
data$rs	SEGMENT
??_R0?AVCAniImageBox@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CAniImageBox `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCAniImageBox@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CAniImageBox@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CAniImageBox@UI@@8 DD FLAT:??_R0?AVCAniImageBox@UI@@@8 ; UI::CAniImageBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CAniImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CCoolTimeFinishEffect@CSlotWindow@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCoolTimeFinishEffect@CSlotWindow@UI@@8 DD FLAT:??_R0?AVCCoolTimeFinishEffect@CSlotWindow@UI@@@8 ; UI::CSlotWindow::CCoolTimeFinishEffect::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCoolTimeFinishEffect@CSlotWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CCoolTimeFinishEffect@CSlotWindow@UI@@8
rdata$r	SEGMENT
??_R2CCoolTimeFinishEffect@CSlotWindow@UI@@8 DD FLAT:??_R1A@?0A@EA@CCoolTimeFinishEffect@CSlotWindow@UI@@8 ; UI::CSlotWindow::CCoolTimeFinishEffect::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CAniImageBox@UI@@8
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CCoolTimeFinishEffect@CSlotWindow@UI@@8
rdata$r	SEGMENT
??_R3CCoolTimeFinishEffect@CSlotWindow@UI@@8 DD 00H	; UI::CSlotWindow::CCoolTimeFinishEffect::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CCoolTimeFinishEffect@CSlotWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCoolTimeFinishEffect@CSlotWindow@UI@@@8
data$rs	SEGMENT
??_R0?AVCCoolTimeFinishEffect@CSlotWindow@UI@@@8 DD FLAT:??_7type_info@@6B@ ; UI::CSlotWindow::CCoolTimeFinishEffect `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCoolTimeFinishEffect@CSlotWindow@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CCoolTimeFinishEffect@CSlotWindow@UI@@6B@
rdata$r	SEGMENT
??_R4CCoolTimeFinishEffect@CSlotWindow@UI@@6B@ DD 00H	; UI::CSlotWindow::CCoolTimeFinishEffect::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCoolTimeFinishEffect@CSlotWindow@UI@@@8
	DD	FLAT:??_R3CCoolTimeFinishEffect@CSlotWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CCoverButton@CSlotWindow@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCoverButton@CSlotWindow@UI@@8 DD FLAT:??_R0?AVCCoverButton@CSlotWindow@UI@@@8 ; UI::CSlotWindow::CCoverButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCoverButton@CSlotWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CCoverButton@CSlotWindow@UI@@8
rdata$r	SEGMENT
??_R2CCoverButton@CSlotWindow@UI@@8 DD FLAT:??_R1A@?0A@EA@CCoverButton@CSlotWindow@UI@@8 ; UI::CSlotWindow::CCoverButton::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CSlotButton@CSlotWindow@UI@@8
	DD	FLAT:??_R1A@?0A@EA@CButton@UI@@8
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CCoverButton@CSlotWindow@UI@@8
rdata$r	SEGMENT
??_R3CCoverButton@CSlotWindow@UI@@8 DD 00H		; UI::CSlotWindow::CCoverButton::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CCoverButton@CSlotWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCoverButton@CSlotWindow@UI@@@8
data$rs	SEGMENT
??_R0?AVCCoverButton@CSlotWindow@UI@@@8 DD FLAT:??_7type_info@@6B@ ; UI::CSlotWindow::CCoverButton `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCoverButton@CSlotWindow@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CCoverButton@CSlotWindow@UI@@6B@
rdata$r	SEGMENT
??_R4CCoverButton@CSlotWindow@UI@@6B@ DD 00H		; UI::CSlotWindow::CCoverButton::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCoverButton@CSlotWindow@UI@@@8
	DD	FLAT:??_R3CCoverButton@CSlotWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CButton@UI@@8
rdata$r	SEGMENT
??_R2CButton@UI@@8 DD FLAT:??_R1A@?0A@EA@CButton@UI@@8	; UI::CButton::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CButton@UI@@8
rdata$r	SEGMENT
??_R3CButton@UI@@8 DD 00H				; UI::CButton::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCButton@UI@@@8
data$rs	SEGMENT
??_R0?AVCButton@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CButton `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCButton@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CButton@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CButton@UI@@8 DD FLAT:??_R0?AVCButton@UI@@@8 ; UI::CButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CSlotButton@CSlotWindow@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CSlotButton@CSlotWindow@UI@@8 DD FLAT:??_R0?AVCSlotButton@CSlotWindow@UI@@@8 ; UI::CSlotWindow::CSlotButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CSlotButton@CSlotWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CSlotButton@CSlotWindow@UI@@8
rdata$r	SEGMENT
??_R2CSlotButton@CSlotWindow@UI@@8 DD FLAT:??_R1A@?0A@EA@CSlotButton@CSlotWindow@UI@@8 ; UI::CSlotWindow::CSlotButton::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CButton@UI@@8
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CSlotButton@CSlotWindow@UI@@8
rdata$r	SEGMENT
??_R3CSlotButton@CSlotWindow@UI@@8 DD 00H		; UI::CSlotWindow::CSlotButton::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CSlotButton@CSlotWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCSlotButton@CSlotWindow@UI@@@8
data$rs	SEGMENT
??_R0?AVCSlotButton@CSlotWindow@UI@@@8 DD FLAT:??_7type_info@@6B@ ; UI::CSlotWindow::CSlotButton `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCSlotButton@CSlotWindow@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CSlotButton@CSlotWindow@UI@@6B@
rdata$r	SEGMENT
??_R4CSlotButton@CSlotWindow@UI@@6B@ DD 00H		; UI::CSlotWindow::CSlotButton::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCSlotButton@CSlotWindow@UI@@@8
	DD	FLAT:??_R3CSlotButton@CSlotWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CSlotWindow@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CSlotWindow@UI@@8 DD FLAT:??_R0?AVCSlotWindow@UI@@@8 ; UI::CSlotWindow::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CSlotWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CSlotWindow@UI@@8
rdata$r	SEGMENT
??_R2CSlotWindow@UI@@8 DD FLAT:??_R1A@?0A@EA@CSlotWindow@UI@@8 ; UI::CSlotWindow::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CSlotWindow@UI@@8
rdata$r	SEGMENT
??_R3CSlotWindow@UI@@8 DD 00H				; UI::CSlotWindow::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CSlotWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCSlotWindow@UI@@@8
data$rs	SEGMENT
??_R0?AVCSlotWindow@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CSlotWindow `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCSlotWindow@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CSlotWindow@UI@@6B@
rdata$r	SEGMENT
??_R4CSlotWindow@UI@@6B@ DD 00H				; UI::CSlotWindow::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCSlotWindow@UI@@@8
	DD	FLAT:??_R3CSlotWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CWindow@UI@@8
rdata$r	SEGMENT
??_R2CWindow@UI@@8 DD FLAT:??_R1A@?0A@EA@CWindow@UI@@8	; UI::CWindow::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CWindow@UI@@8
rdata$r	SEGMENT
??_R3CWindow@UI@@8 DD 00H				; UI::CWindow::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWindow@UI@@@8
data$rs	SEGMENT
??_R0?AVCWindow@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CWindow `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWindow@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CWindow@UI@@8 DD FLAT:??_R0?AVCWindow@UI@@@8 ; UI::CWindow::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@
CONST	SEGMENT
??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@ DB 'deque<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NKNMEGII@list?5too?5long@
CONST	SEGMENT
??_C@_0O@NKNMEGII@list?5too?5long@ DB 'list too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@OCFMJDAA@d?3?1ymir?5work?1ui?1public?1slotfini@
CONST	SEGMENT
??_C@_0DH@OCFMJDAA@d?3?1ymir?5work?1ui?1public?1slotfini@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotfinishcooltimeeffect/10.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@GDCEMJHM@d?3?1ymir?5work?1ui?1public?1slotfini@
CONST	SEGMENT
??_C@_0DH@GDCEMJHM@d?3?1ymir?5work?1ui?1public?1slotfini@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotfinishcooltimeeffect/09.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@KIHIBKNJ@d?3?1ymir?5work?1ui?1public?1slotfini@
CONST	SEGMENT
??_C@_0DH@KIHIBKNJ@d?3?1ymir?5work?1ui?1public?1slotfini@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotfinishcooltimeeffect/08.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@FJCOKIAM@d?3?1ymir?5work?1ui?1public?1slotfini@
CONST	SEGMENT
??_C@_0DH@FJCOKIAM@d?3?1ymir?5work?1ui?1public?1slotfini@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotfinishcooltimeeffect/07.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@JCHCHLKJ@d?3?1ymir?5work?1ui?1public?1slotfini@
CONST	SEGMENT
??_C@_0DH@JCHCHLKJ@d?3?1ymir?5work?1ui?1public?1slotfini@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotfinishcooltimeeffect/06.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@BEOGAJAH@d?3?1ymir?5work?1ui?1public?1slotfini@
CONST	SEGMENT
??_C@_0DH@BEOGAJAH@d?3?1ymir?5work?1ui?1public?1slotfini@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotfinishcooltimeeffect/05.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@NPLKNKKC@d?3?1ymir?5work?1ui?1public?1slotfini@
CONST	SEGMENT
??_C@_0DH@NPLKNKKC@d?3?1ymir?5work?1ui?1public?1slotfini@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotfinishcooltimeeffect/04.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@MCLPOKBK@d?3?1ymir?5work?1ui?1public?1slotfini@
CONST	SEGMENT
??_C@_0DH@MCLPOKBK@d?3?1ymir?5work?1ui?1public?1slotfini@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotfinishcooltimeeffect/03.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@JODDJLP@d?3?1ymir?5work?1ui?1public?1slotfini@
CONST	SEGMENT
??_C@_0DH@JODDJLP@d?3?1ymir?5work?1ui?1public?1slotfini@ DB 'd:/ymir work'
	DB	'/ui/public/slotfinishcooltimeeffect/02.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@IPHHELBB@d?3?1ymir?5work?1ui?1public?1slotfini@
CONST	SEGMENT
??_C@_0DH@IPHHELBB@d?3?1ymir?5work?1ui?1public?1slotfini@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotfinishcooltimeeffect/01.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@EECLJILE@d?3?1ymir?5work?1ui?1public?1slotfini@
CONST	SEGMENT
??_C@_0DH@EECLJILE@d?3?1ymir?5work?1ui?1public?1slotfini@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotfinishcooltimeeffect/00.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@KLNCGGIA@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@KLNCGGIA@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot3/12.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@CNEGBECO@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@CNEGBECO@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot3/11.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@OGBKMHIL@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@OGBKMHIL@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot3/10.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@GHGCJNPH@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@GHGCJNPH@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot3/09.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@KMDOEOFC@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@KMDOEOFC@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot3/08.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@FNGIPMIH@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@FNGIPMIH@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot3/07.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@JGDECPCC@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@JGDECPCC@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot3/06.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@BAKAFNIM@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@BAKAFNIM@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot3/05.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@NLPMIOCJ@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@NLPMIOCJ@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot3/04.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@MGPJLOJB@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@MGPJLOJB@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot3/03.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@NKFGNDE@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@NKFGNDE@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir work'
	DB	'/ui/public/slotactiveeffect/slot3/02.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@ILDBBPJK@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@ILDBBPJK@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot3/01.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@EAGNMMDP@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@EAGNMMDP@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot3/00.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@LMKJHCMD@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@LMKJHCMD@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot2/12.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@DKDNAAGN@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@DKDNAAGN@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot2/11.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@PBGBNDMI@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@PBGBNDMI@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot2/10.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@HABJIJLE@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@HABJIJLE@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot2/09.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@LLEFFKBB@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@LLEFFKBB@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot2/08.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@EKBDOIME@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@EKBDOIME@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot2/07.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@IBEPDLGB@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@IBEPDLGB@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot2/06.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@HNLEJMP@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@HNLEJMP@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir work'
	DB	'/ui/public/slotactiveeffect/slot2/05.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@MMIHJKGK@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@MMIHJKGK@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot2/04.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@NBICKKNC@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@NBICKKNC@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot2/03.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@BKNOHJHH@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@BKNOHJHH@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot2/02.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@JMEKALNJ@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@JMEKALNJ@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot2/01.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@FHBGNIHM@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0DF@FHBGNIHM@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/slot2/00.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@FAPMJHKG@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0CP@FAPMJHKG@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/12.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@NGGIOFAI@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0CP@NGGIOFAI@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/11.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@BNDEDGKN@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0CP@BNDEDGKN@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/10.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@JMEMGMNB@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0CP@JMEMGMNB@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/09.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@FHBALPHE@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0CP@FHBALPHE@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/08.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@KGEGANKB@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0CP@KGEGANKB@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/07.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@GNBKNOAE@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0CP@GNBKNOAE@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/06.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@OLIOKMKK@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0CP@OLIOKMKK@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/05.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@CANCHPAP@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0CP@CANCHPAP@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/04.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@DNNHEPLH@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0CP@DNNHEPLH@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/03.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@PGILJMBC@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0CP@PGILJMBC@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/02.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@HABPOOLM@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0CP@HABPOOLM@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/01.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@LLEDDNBJ@d?3?1ymir?5work?1ui?1public?1slotacti@
CONST	SEGMENT
??_C@_0CP@LLEDDNBJ@d?3?1ymir?5work?1ui?1public?1slotacti@ DB 'd:/ymir wor'
	DB	'k/ui/public/slotactiveeffect/00.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@JJGPDFBJ@d?3?1ymir?5work?1ui?1public?1slot_tog@
CONST	SEGMENT
??_C@_0CH@JJGPDFBJ@d?3?1ymir?5work?1ui?1public?1slot_tog@ DB 'd:/ymir wor'
	DB	'k/ui/public/slot_toggle.sub', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DKKKJBKL@CSlotWindow@
CONST	SEGMENT
??_C@_0M@DKKKJBKL@CSlotWindow@ DB 'CSlotWindow', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MBGDMPNF@OnPressedSlotButton@
CONST	SEGMENT
??_C@_0BE@MBGDMPNF@OnPressedSlotButton@ DB 'OnPressedSlotButton', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IBCIPGEP@OnOverOutItem@
CONST	SEGMENT
??_C@_0O@IBCIPGEP@OnOverOutItem@ DB 'OnOverOutItem', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02HCKGKOFO@?$CI?$CJ@
CONST	SEGMENT
??_C@_02HCKGKOFO@?$CI?$CJ@ DB '()', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CBOPEHFH@OnOverInItem@
CONST	SEGMENT
??_C@_0N@CBOPEHFH@OnOverInItem@ DB 'OnOverInItem', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09HJIBPFCA@OnUseSlot@
CONST	SEGMENT
??_C@_09HJIBPFCA@OnUseSlot@ DB 'OnUseSlot', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EONLJJMO@OnUnselectItemSlot@
CONST	SEGMENT
??_C@_0BD@EONLJJMO@OnUnselectItemSlot@ DB 'OnUnselectItemSlot', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GMADJAFC@OnUnselectEmptySlot@
CONST	SEGMENT
??_C@_0BE@GMADJAFC@OnUnselectEmptySlot@ DB 'OnUnselectEmptySlot', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PFHJJJ@OnSelectItemSlot@
CONST	SEGMENT
??_C@_0BB@PFHJJJ@OnSelectItemSlot@ DB 'OnSelectItemSlot', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JJECHKOF@OnSelectEmptySlot@
CONST	SEGMENT
??_C@_0BC@JJECHKOF@OnSelectEmptySlot@ DB 'OnSelectEmptySlot', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03LIHNMIHG@?$CIi?$CJ@
CONST	SEGMENT
??_C@_03LIHNMIHG@?$CIi?$CJ@ DB '(i)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01JBBJJEPG@p@
CONST	SEGMENT
??_C@_01JBBJJEPG@p@ DB 'p', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_03EHFNMFPB@g?$CFd@
CONST	SEGMENT
??_C@_03EHFNMFPB@g?$CFd@ DB 'g%d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CIOACFJF@m?$CFd@
CONST	SEGMENT
??_C@_03CIOACFJF@m?$CFd@ DB 'm%d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02DPKJAMEF@?$CFd@
CONST	SEGMENT
??_C@_02DPKJAMEF@?$CFd@ DB '%d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CCoolTimeFinishEffect@CSlotWindow@UI@@6B@
CONST	SEGMENT
??_7CCoolTimeFinishEffect@CSlotWindow@UI@@6B@ DD FLAT:??_R4CCoolTimeFinishEffect@CSlotWindow@UI@@6B@ ; UI::CSlotWindow::CCoolTimeFinishEffect::`vftable'
	DD	FLAT:??_ECCoolTimeFinishEffect@CSlotWindow@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CAniImageBox@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CAniImageBox@UI@@MAEXXZ
	DD	FLAT:?OnChangePosition@CAniImageBox@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CAniImageBox@UI@@MAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnEndFrame@CCoolTimeFinishEffect@CSlotWindow@UI@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7CCoverButton@CSlotWindow@UI@@6B@
CONST	SEGMENT
??_7CCoverButton@CSlotWindow@UI@@6B@ DD FLAT:??_R4CCoverButton@CSlotWindow@UI@@6B@ ; UI::CSlotWindow::CCoverButton::`vftable'
	DD	FLAT:??_ECCoverButton@CSlotWindow@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CCoverButton@CSlotWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdate@CButton@UI@@MAEXXZ
	DD	FLAT:?OnChangePosition@CButton@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CSlotButton@CSlotWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CSlotButton@CSlotWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CCoverButton@CSlotWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CCoverButton@CSlotWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CCoverButton@CSlotWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CCoverButton@CSlotWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
CONST	ENDS
;	COMDAT ??_7CSlotButton@CSlotWindow@UI@@6B@
CONST	SEGMENT
??_7CSlotButton@CSlotWindow@UI@@6B@ DD FLAT:??_R4CSlotButton@CSlotWindow@UI@@6B@ ; UI::CSlotWindow::CSlotButton::`vftable'
	DD	FLAT:??_ECSlotButton@CSlotWindow@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CButton@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CButton@UI@@MAEXXZ
	DD	FLAT:?OnChangePosition@CButton@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CSlotButton@CSlotWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CSlotButton@CSlotWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CSlotButton@CSlotWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CSlotButton@CSlotWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
CONST	ENDS
;	COMDAT ??_7CSlotWindow@UI@@6B@
CONST	SEGMENT
??_7CSlotWindow@UI@@6B@ DD FLAT:??_R4CSlotWindow@UI@@6B@ ; UI::CSlotWindow::`vftable'
	DD	FLAT:??_ECSlotWindow@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CSlotWindow@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CSlotWindow@UI@@MAEXXZ
	DD	FLAT:?OnChangePosition@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CSlotWindow@UI@@MAEXXZ
	DD	FLAT:?OnMouseOver@CSlotWindow@UI@@MAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CSlotWindow@UI@@MAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CSlotWindow@UI@@MAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CSlotWindow@UI@@MAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CSlotWindow@UI@@MAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CSlotWindow@UI@@MAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnRenderPickingSlot@CSlotWindow@UI@@MAEXXZ
	DD	FLAT:?OnRenderSelectedSlot@CSlotWindow@UI@@MAEXXZ
	DD	FLAT:?GetPickedSlotPointer@CSlotWindow@UI@@MAEHPAPAUSSlot@12@@Z
	DD	FLAT:?OnRefreshSlot@CSlotWindow@UI@@MAEXXZ
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0ABUSSlot@CSlotWindow@UI@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@1@ABUSSlot@CSlotWindow@UI@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0ABUSSlot@CSlotWindow@UI@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@1@ABUSSlot@CSlotWindow@UI@@@Z$0
__ehfuncinfo$??$?0ABUSSlot@CSlotWindow@UI@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@1@ABUSSlot@CSlotWindow@UI@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0ABUSSlot@CSlotWindow@UI@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@1@ABUSSlot@CSlotWindow@UI@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0ABK@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@KPAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@KPAX@std@@@1@ABK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0ABK@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@KPAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@KPAX@std@@@1@ABK@Z$0
__ehfuncinfo$??$?0ABK@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@KPAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@KPAX@std@@@1@ABK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0ABK@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@KPAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@KPAX@std@@@1@ABK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace@ABUSSlot@CSlotWindow@UI@@@?$list@USSlot@CSlotWindow@UI@@V?$allocator@USSlot@CSlotWindow@UI@@@std@@@std@@QAEPAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@1@QAU21@ABUSSlot@CSlotWindow@UI@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace@ABUSSlot@CSlotWindow@UI@@@?$list@USSlot@CSlotWindow@UI@@V?$allocator@USSlot@CSlotWindow@UI@@@std@@@std@@QAEPAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@1@QAU21@ABUSSlot@CSlotWindow@UI@@@Z$1
__ehfuncinfo$??$_Emplace@ABUSSlot@CSlotWindow@UI@@@?$list@USSlot@CSlotWindow@UI@@V?$allocator@USSlot@CSlotWindow@UI@@@std@@@std@@QAEPAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@1@QAU21@ABUSSlot@CSlotWindow@UI@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Emplace@ABUSSlot@CSlotWindow@UI@@@?$list@USSlot@CSlotWindow@UI@@V?$allocator@USSlot@CSlotWindow@UI@@@std@@@std@@QAEPAU?$_List_node@USSlot@CSlotWindow@UI@@PAX@1@QAU21@ABUSSlot@CSlotWindow@UI@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace@ABK@?$list@KV?$allocator@K@std@@@std@@QAEPAU?$_List_node@KPAX@1@QAU21@ABK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace@ABK@?$list@KV?$allocator@K@std@@@std@@QAEPAU?$_List_node@KPAX@1@QAU21@ABK@Z$1
__ehfuncinfo$??$_Emplace@ABK@?$list@KV?$allocator@K@std@@@std@@QAEPAU?$_List_node@KPAX@1@QAU21@ABK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Emplace@ABK@?$list@KV?$allocator@K@std@@@std@@QAEPAU?$_List_node@KPAX@1@QAU21@ABK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?push_back@?$list@KV?$allocator@K@std@@@std@@QAEXABK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?push_back@?$list@KV?$allocator@K@std@@@std@@QAEXABK@Z$1
__ehfuncinfo$?push_back@?$list@KV?$allocator@K@std@@@std@@QAEXABK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?push_back@?$list@KV?$allocator@K@std@@@std@@QAEXABK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?__CreateFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?__CreateFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z$0
__ehfuncinfo$?__CreateFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?__CreateFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXXZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXXZ$2
__ehfuncinfo$?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXXZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?__CreateToggleSlotImage@CSlotWindow@UI@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?__CreateToggleSlotImage@CSlotWindow@UI@@IAEXXZ$0
__ehfuncinfo$?__CreateToggleSlotImage@CSlotWindow@UI@@IAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?__CreateToggleSlotImage@CSlotWindow@UI@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SelectSlot@CSlotWindow@UI@@QAEXK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SelectSlot@CSlotWindow@UI@@QAEXK@Z$1
__ehfuncinfo$?SelectSlot@CSlotWindow@UI@@QAEXK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SelectSlot@CSlotWindow@UI@@QAEXK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetSlotCountNew@CSlotWindow@UI@@QAEXKKK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetSlotCountNew@CSlotWindow@UI@@QAEXKKK@Z$0
__ehfuncinfo$?SetSlotCountNew@CSlotWindow@UI@@QAEXKKK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetSlotCountNew@CSlotWindow@UI@@QAEXKKK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetSlotCount@CSlotWindow@UI@@QAEXKK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetSlotCount@CSlotWindow@UI@@QAEXKK@Z$0
__ehfuncinfo$?SetSlotCount@CSlotWindow@UI@@QAEXKK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetSlotCount@CSlotWindow@UI@@QAEXKK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AppendRequirementSignImage@CSlotWindow@UI@@QAEXPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AppendRequirementSignImage@CSlotWindow@UI@@QAEXPBD@Z$0
__ehfuncinfo$?AppendRequirementSignImage@CSlotWindow@UI@@QAEXPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AppendRequirementSignImage@CSlotWindow@UI@@QAEXPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AppendSlotButton@CSlotWindow@UI@@QAEXPBD00@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AppendSlotButton@CSlotWindow@UI@@QAEXPBD00@Z$0
__ehfuncinfo$?AppendSlotButton@CSlotWindow@UI@@QAEXPBD00@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AppendSlotButton@CSlotWindow@UI@@QAEXPBD00@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetCoverButton@CSlotWindow@UI@@QAEXKPBD000HH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetCoverButton@CSlotWindow@UI@@QAEXKPBD000HH@Z$0
__ehfuncinfo$?SetCoverButton@CSlotWindow@UI@@QAEXKPBD000HH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetCoverButton@CSlotWindow@UI@@QAEXKPBD000HH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AppendSlot@CSlotWindow@UI@@QAEXKHHHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AppendSlot@CSlotWindow@UI@@QAEXKHHHH@Z$1
__ehfuncinfo$?AppendSlot@CSlotWindow@UI@@QAEXKHHHH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AppendSlot@CSlotWindow@UI@@QAEXKHHHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CSlotWindow@UI@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CSlotWindow@UI@@QAE@PAU_object@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CSlotWindow@UI@@QAE@PAU_object@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CSlotWindow@UI@@QAE@PAU_object@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CSlotWindow@UI@@QAE@PAU_object@@@Z$2
__ehfuncinfo$??0CSlotWindow@UI@@QAE@PAU_object@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0CSlotWindow@UI@@QAE@PAU_object@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?push_back@?$list@USSlot@CSlotWindow@UI@@V?$allocator@USSlot@CSlotWindow@UI@@@std@@@std@@QAEXABUSSlot@CSlotWindow@UI@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?push_back@?$list@USSlot@CSlotWindow@UI@@V?$allocator@USSlot@CSlotWindow@UI@@@std@@@std@@QAEXABUSSlot@CSlotWindow@UI@@@Z$1
__ehfuncinfo$?push_back@?$list@USSlot@CSlotWindow@UI@@V?$allocator@USSlot@CSlotWindow@UI@@@std@@@std@@QAEXABUSSlot@CSlotWindow@UI@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?push_back@?$list@USSlot@CSlotWindow@UI@@V?$allocator@USSlot@CSlotWindow@UI@@@std@@@std@@QAEXABUSSlot@CSlotWindow@UI@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Type@CSlotWindow@UI@@SAKXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Type@CSlotWindow@UI@@SAKXZ$0
__ehfuncinfo$?Type@CSlotWindow@UI@@SAKXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Type@CSlotWindow@UI@@SAKXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAKPAPAK@std@@YAPAPAKPAPAK00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAKPAPAK@std@@YAPAPAKPAPAK00@Z PROC	; std::_Copy_memmove<unsigned long * *,unsigned long * *>, COMDAT

; 4526 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4527 :     auto _FirstPtr              = _To_address(_First);
; 4528 :     auto _LastPtr               = _To_address(_Last);
; 4529 :     auto _DestPtr               = _To_address(_Dest);
; 4530 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4531 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4532 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4535 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4536 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4537 :     } else {
; 4538 :         return _Dest + (_LastPtr - _FirstPtr);
; 4539 :     }
; 4540 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAKPAPAK@std@@YAPAPAKPAPAK00@Z ENDP	; std::_Copy_memmove<unsigned long * *,unsigned long * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Zero_range@PAPAK@std@@YAPAPAKQAPAK0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Zero_range@PAPAK@std@@YAPAPAKQAPAK0@Z PROC		; std::_Zero_range<unsigned long * *>, COMDAT

; 2017 : _Ptr _Zero_range(const _Ptr _First, const _Ptr _Last) { // fill [_First, _Last) with zeroes

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2018 :     char* const _First_ch = reinterpret_cast<char*>(_To_address(_First));
; 2019 :     char* const _Last_ch  = reinterpret_cast<char*>(_To_address(_Last));
; 2020 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

  00003	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	2b ca		 sub	 ecx, edx
  0000b	51		 push	 ecx
  0000c	6a 00		 push	 0
  0000e	52		 push	 edx
  0000f	e8 00 00 00 00	 call	 _memset

; 2021 :     return _Last;

  00014	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00017	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2022 : }

  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??$_Zero_range@PAPAK@std@@YAPAPAKQAPAK0@Z ENDP		; std::_Zero_range<unsigned long * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n_unchecked1@PAPAKI@std@@YAPAPAKPAPAKI@Z
_TEXT	SEGMENT
__UFirst$ = 8						; size = 4
__Count$ = 12						; size = 4
??$_Uninitialized_value_construct_n_unchecked1@PAPAKI@std@@YAPAPAKPAPAKI@Z PROC ; std::_Uninitialized_value_construct_n_unchecked1<unsigned long * *,unsigned int>, COMDAT

; 2049 : _NoThrowFwdIt _Uninitialized_value_construct_n_unchecked1(_NoThrowFwdIt _UFirst, _Diff _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2050 :     // value-initialize all elements in [_UFirst, _UFirst + _Count)
; 2051 :     _STL_INTERNAL_CHECK(_Count >= 0);
; 2052 :     if constexpr (_Use_memset_value_construct_v<_NoThrowFwdIt>) {
; 2053 :         return _Zero_range(_UFirst, _UFirst + _Count);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __UFirst$[ebp]
  00006	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00009	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  0000c	89 45 0c	 mov	 DWORD PTR __Count$[ebp], eax
  0000f	89 4d 08	 mov	 DWORD PTR __UFirst$[ebp], ecx

; 2054 :     } else {
; 2055 :         _Uninitialized_backout<_NoThrowFwdIt> _Backout{_UFirst};
; 2056 :         for (; 0 < _Count; --_Count) {
; 2057 :             _Backout._Emplace_back();
; 2058 :         }
; 2059 : 
; 2060 :         return _Backout._Release();
; 2061 :     }
; 2062 : }

  00012	5d		 pop	 ebp

; 2050 :     // value-initialize all elements in [_UFirst, _UFirst + _Count)
; 2051 :     _STL_INTERNAL_CHECK(_Count >= 0);
; 2052 :     if constexpr (_Use_memset_value_construct_v<_NoThrowFwdIt>) {
; 2053 :         return _Zero_range(_UFirst, _UFirst + _Count);

  00013	e9 00 00 00 00	 jmp	 ??$_Zero_range@PAPAK@std@@YAPAPAKQAPAK0@Z ; std::_Zero_range<unsigned long * *>
??$_Uninitialized_value_construct_n_unchecked1@PAPAKI@std@@YAPAPAKPAPAKI@Z ENDP ; std::_Uninitialized_value_construct_n_unchecked1<unsigned long * *,unsigned int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$uninitialized_copy@PAPAKPAPAK@std@@YAPAPAKQAPAK0PAPAK@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$uninitialized_copy@PAPAKPAPAK@std@@YAPAPAKQAPAK0PAPAK@Z PROC ; std::uninitialized_copy<unsigned long * *,unsigned long * *>, COMDAT

; 1915 : _NoThrowFwdIt uninitialized_copy(const _InIt _First, const _InIt _Last, _NoThrowFwdIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1916 :     // copy [_First, _Last) to raw [_Dest, ...)
; 1917 :     _Adl_verify_range(_First, _Last);
; 1918 :     auto _UFirst      = _Get_unwrapped(_First);
; 1919 :     const auto _ULast = _Get_unwrapped(_Last);
; 1920 :     auto _UDest       = _Get_unwrapped_n(_Dest, _Idl_distance<_InIt>(_UFirst, _ULast));
; 1921 :     _Seek_wrapped(_Dest, _Uninitialized_copy_unchecked(_UFirst, _ULast, _UDest));
; 1922 :     return _Dest;
; 1923 : }

  00003	5d		 pop	 ebp

; 1902 :             return _Copy_memmove(_First, _Last, _Dest);

  00004	e9 00 00 00 00	 jmp	 ??$_Copy_memmove@PAPAKPAPAK@std@@YAPAPAKPAPAK00@Z ; std::_Copy_memmove<unsigned long * *,unsigned long * *>
??$uninitialized_copy@PAPAKPAPAK@std@@YAPAPAKQAPAK0PAPAK@Z ENDP ; std::uninitialized_copy<unsigned long * *,unsigned long * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CSlotWindow::SSlot,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CSlotWindow::SSlot,void *> > >, COMDAT
; _this$ = ecx

; 1156 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN8@Alloc_cons

; 265  :         ::operator delete(_Ptr, _Bytes);

  00007	6a 68		 push	 104			; 00000068H
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000f	83 c4 08	 add	 esp, 8
$LN8@Alloc_cons:

; 1157 :             _Al.deallocate(_Ptr, 1);
; 1158 :         }
; 1159 :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CSlotWindow::SSlot,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CSlotWindow::SSlot,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@KPAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@KPAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<unsigned long,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<unsigned long,void *> > >, COMDAT
; _this$ = ecx

; 1156 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN8@Alloc_cons

; 265  :         ::operator delete(_Ptr, _Bytes);

  00007	6a 0c		 push	 12			; 0000000cH
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000f	83 c4 08	 add	 esp, 8
$LN8@Alloc_cons:

; 1157 :             _Al.deallocate(_Ptr, 1);
; 1158 :         }
; 1159 :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@KPAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<unsigned long,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<unsigned long,void *> > >
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_9CWindow@UI@@$B3AE
_TEXT	SEGMENT
??_9CWindow@UI@@$B3AE PROC				; UI::CWindow::`vcall'{4}', COMDAT
  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	ff 60 04	 jmp	 DWORD PTR [eax+4]
??_9CWindow@UI@@$B3AE ENDP				; UI::CWindow::`vcall'{4}'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ??_GCCoolTimeFinishEffect@CSlotWindow@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCCoolTimeFinishEffect@CSlotWindow@UI@@UAEPAXI@Z PROC ; UI::CSlotWindow::CCoolTimeFinishEffect::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 184  : 		{

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CCoolTimeFinishEffect@CSlotWindow@UI@@6B@

; 185  : 		}

  0000c	e8 00 00 00 00	 call	 ??1CAniImageBox@UI@@UAE@XZ ; UI::CAniImageBox::~CAniImageBox
  00011	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00015	74 0e		 je	 SHORT $LN7@scalar
  00017	68 90 00 00 00	 push	 144			; 00000090H
  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00022	83 c4 08	 add	 esp, 8
$LN7@scalar:
  00025	8b c6		 mov	 eax, esi
  00027	5e		 pop	 esi
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
??_GCCoolTimeFinishEffect@CSlotWindow@UI@@UAEPAXI@Z ENDP ; UI::CSlotWindow::CCoolTimeFinishEffect::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnEndFrame@CCoolTimeFinishEffect@CSlotWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnEndFrame@CCoolTimeFinishEffect@CSlotWindow@UI@@UAEXXZ PROC ; UI::CSlotWindow::CCoolTimeFinishEffect::OnEndFrame, COMDAT
; _this$ = ecx

; 189  : 			((CSlotWindow *)m_pParent)->ReserveDestroyCoolTimeFinishEffect(m_dwSlotIndex);

  00000	ff b1 8c 00 00
	00		 push	 DWORD PTR [ecx+140]
  00006	8b 49 60	 mov	 ecx, DWORD PTR [ecx+96]
  00009	e8 00 00 00 00	 call	 ?ReserveDestroyCoolTimeFinishEffect@CSlotWindow@UI@@QAEXK@Z ; UI::CSlotWindow::ReserveDestroyCoolTimeFinishEffect

; 190  : 		}

  0000e	c3		 ret	 0
?OnEndFrame@CCoolTimeFinishEffect@CSlotWindow@UI@@UAEXXZ ENDP ; UI::CSlotWindow::CCoolTimeFinishEffect::OnEndFrame
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ??1CCoolTimeFinishEffect@CSlotWindow@UI@@UAE@XZ
_TEXT	SEGMENT
??1CCoolTimeFinishEffect@CSlotWindow@UI@@UAE@XZ PROC	; UI::CSlotWindow::CCoolTimeFinishEffect::~CCoolTimeFinishEffect, COMDAT
; _this$ = ecx

; 184  : 		{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CCoolTimeFinishEffect@CSlotWindow@UI@@6B@

; 185  : 		}

  00006	e9 00 00 00 00	 jmp	 ??1CAniImageBox@UI@@UAE@XZ ; UI::CAniImageBox::~CAniImageBox
??1CCoolTimeFinishEffect@CSlotWindow@UI@@UAE@XZ ENDP	; UI::CSlotWindow::CCoolTimeFinishEffect::~CCoolTimeFinishEffect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ??_GCCoverButton@CSlotWindow@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCCoverButton@CSlotWindow@UI@@UAEPAXI@Z PROC		; UI::CSlotWindow::CCoverButton::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 28   : 		{

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CSlotButton@CSlotWindow@UI@@6B@

; 29   : 		}

  0000c	e8 00 00 00 00	 call	 ??1CButton@UI@@UAE@XZ	; UI::CButton::~CButton
  00011	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00015	74 0e		 je	 SHORT $LN10@scalar
  00017	68 20 01 00 00	 push	 288			; 00000120H
  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00022	83 c4 08	 add	 esp, 8
$LN10@scalar:
  00025	8b c6		 mov	 eax, esi
  00027	5e		 pop	 esi
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
??_GCCoverButton@CSlotWindow@UI@@UAEPAXI@Z ENDP		; UI::CSlotWindow::CCoverButton::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseRightButtonUp@CCoverButton@CSlotWindow@UI@@UAEHXZ
_TEXT	SEGMENT
?OnMouseRightButtonUp@CCoverButton@CSlotWindow@UI@@UAEHXZ PROC ; UI::CSlotWindow::CCoverButton::OnMouseRightButtonUp, COMDAT
; _this$ = ecx

; 157  : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 158  : 			if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 1b		 je	 SHORT $LN7@OnMouseRig

; 159  : 				return TRUE;
; 160  : 			m_pParent->OnMouseRightButtonDown();

  0000c	8b 8e 14 01 00
	00		 mov	 ecx, DWORD PTR [esi+276]
  00012	8b 01		 mov	 eax, DWORD PTR [ecx]
  00014	ff 50 64	 call	 DWORD PTR [eax+100]

; 161  : 			if (m_bRightButtonEnable)

  00017	83 be 1c 01 00
	00 00		 cmp	 DWORD PTR [esi+284], 0
  0001e	74 07		 je	 SHORT $LN7@OnMouseRig

; 162  : 				CButton::OnMouseLeftButtonUp();

  00020	8b ce		 mov	 ecx, esi
  00022	e8 00 00 00 00	 call	 ?OnMouseLeftButtonUp@CButton@UI@@MAEHXZ ; UI::CButton::OnMouseLeftButtonUp
$LN7@OnMouseRig:

; 163  : 			return TRUE;
; 164  : 		}

  00027	b8 01 00 00 00	 mov	 eax, 1
  0002c	5e		 pop	 esi
  0002d	c3		 ret	 0
?OnMouseRightButtonUp@CCoverButton@CSlotWindow@UI@@UAEHXZ ENDP ; UI::CSlotWindow::CCoverButton::OnMouseRightButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseRightButtonDown@CCoverButton@CSlotWindow@UI@@UAEHXZ
_TEXT	SEGMENT
?OnMouseRightButtonDown@CCoverButton@CSlotWindow@UI@@UAEHXZ PROC ; UI::CSlotWindow::CCoverButton::OnMouseRightButtonDown, COMDAT
; _this$ = ecx

; 149  : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 150  : 			if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 10		 je	 SHORT $LN7@OnMouseRig

; 151  : 				return TRUE;
; 152  : 			if (m_bRightButtonEnable)

  0000c	83 be 1c 01 00
	00 00		 cmp	 DWORD PTR [esi+284], 0
  00013	74 07		 je	 SHORT $LN7@OnMouseRig

; 153  : 				CButton::OnMouseLeftButtonDown();

  00015	8b ce		 mov	 ecx, esi
  00017	e8 00 00 00 00	 call	 ?OnMouseLeftButtonDown@CButton@UI@@MAEHXZ ; UI::CButton::OnMouseLeftButtonDown
$LN7@OnMouseRig:

; 154  : 			return TRUE;
; 155  : 		}

  0001c	b8 01 00 00 00	 mov	 eax, 1
  00021	5e		 pop	 esi
  00022	c3		 ret	 0
?OnMouseRightButtonDown@CCoverButton@CSlotWindow@UI@@UAEHXZ ENDP ; UI::CSlotWindow::CCoverButton::OnMouseRightButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseLeftButtonUp@CCoverButton@CSlotWindow@UI@@UAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonUp@CCoverButton@CSlotWindow@UI@@UAEHXZ PROC ; UI::CSlotWindow::CCoverButton::OnMouseLeftButtonUp, COMDAT
; _this$ = ecx

; 133  : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 134  : 			if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 2d		 je	 SHORT $LN7@OnMouseLef

; 135  : 				return TRUE;
; 136  : 			if (m_bLeftButtonEnable)

  0000c	83 be 18 01 00
	00 00		 cmp	 DWORD PTR [esi+280], 0
  00013	74 19		 je	 SHORT $LN3@OnMouseLef

; 137  : 			{
; 138  : 				CButton::OnMouseLeftButtonUp();

  00015	8b ce		 mov	 ecx, esi
  00017	e8 00 00 00 00	 call	 ?OnMouseLeftButtonUp@CButton@UI@@MAEHXZ ; UI::CButton::OnMouseLeftButtonUp

; 139  : 				m_pParent->OnMouseLeftButtonDown();

  0001c	8b 8e 14 01 00
	00		 mov	 ecx, DWORD PTR [esi+276]
  00022	8b 01		 mov	 eax, DWORD PTR [ecx]
  00024	ff 50 58	 call	 DWORD PTR [eax+88]

; 144  : 			}
; 145  : 			return TRUE;
; 146  : 		}

  00027	b8 01 00 00 00	 mov	 eax, 1
  0002c	5e		 pop	 esi
  0002d	c3		 ret	 0
$LN3@OnMouseLef:

; 140  : 			}
; 141  : 			else
; 142  : 			{
; 143  : 				m_pParent->OnMouseLeftButtonUp();

  0002e	8b 8e 14 01 00
	00		 mov	 ecx, DWORD PTR [esi+276]
  00034	8b 01		 mov	 eax, DWORD PTR [ecx]
  00036	ff 50 5c	 call	 DWORD PTR [eax+92]
$LN7@OnMouseLef:

; 144  : 			}
; 145  : 			return TRUE;
; 146  : 		}

  00039	b8 01 00 00 00	 mov	 eax, 1
  0003e	5e		 pop	 esi
  0003f	c3		 ret	 0
?OnMouseLeftButtonUp@CCoverButton@CSlotWindow@UI@@UAEHXZ ENDP ; UI::CSlotWindow::CCoverButton::OnMouseLeftButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseLeftButtonDown@CCoverButton@CSlotWindow@UI@@UAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonDown@CCoverButton@CSlotWindow@UI@@UAEHXZ PROC ; UI::CSlotWindow::CCoverButton::OnMouseLeftButtonDown, COMDAT
; _this$ = ecx

; 119  : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 120  : 			if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 22		 je	 SHORT $LN7@OnMouseLef

; 121  : 				return TRUE;
; 122  : 			if (m_bLeftButtonEnable)

  0000c	83 be 18 01 00
	00 00		 cmp	 DWORD PTR [esi+280], 0
  00013	74 0e		 je	 SHORT $LN3@OnMouseLef

; 123  : 			{
; 124  : 				CButton::OnMouseLeftButtonDown();

  00015	8b ce		 mov	 ecx, esi
  00017	e8 00 00 00 00	 call	 ?OnMouseLeftButtonDown@CButton@UI@@MAEHXZ ; UI::CButton::OnMouseLeftButtonDown

; 129  : 			}
; 130  : 			return TRUE;
; 131  : 		}

  0001c	b8 01 00 00 00	 mov	 eax, 1
  00021	5e		 pop	 esi
  00022	c3		 ret	 0
$LN3@OnMouseLef:

; 125  : 			}
; 126  : 			else
; 127  : 			{
; 128  : 				m_pParent->OnMouseLeftButtonDown();

  00023	8b 8e 14 01 00
	00		 mov	 ecx, DWORD PTR [esi+276]
  00029	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002b	ff 50 58	 call	 DWORD PTR [eax+88]
$LN7@OnMouseLef:

; 129  : 			}
; 130  : 			return TRUE;
; 131  : 		}

  0002e	b8 01 00 00 00	 mov	 eax, 1
  00033	5e		 pop	 esi
  00034	c3		 ret	 0
?OnMouseLeftButtonDown@CCoverButton@CSlotWindow@UI@@UAEHXZ ENDP ; UI::CSlotWindow::CCoverButton::OnMouseLeftButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnRender@CCoverButton@CSlotWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnRender@CCoverButton@CSlotWindow@UI@@UAEXXZ PROC	; UI::CSlotWindow::CCoverButton::OnRender, COMDAT
; _this$ = ecx

; 111  : 		}

  00000	c2 00 00	 ret	 0
?OnRender@CCoverButton@CSlotWindow@UI@@UAEXXZ ENDP	; UI::CSlotWindow::CCoverButton::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ??1CCoverButton@CSlotWindow@UI@@UAE@XZ
_TEXT	SEGMENT
??1CCoverButton@CSlotWindow@UI@@UAE@XZ PROC		; UI::CSlotWindow::CCoverButton::~CCoverButton, COMDAT
; _this$ = ecx

; 28   : 		{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CSlotButton@CSlotWindow@UI@@6B@

; 29   : 		}

  00006	e9 00 00 00 00	 jmp	 ??1CButton@UI@@UAE@XZ	; UI::CButton::~CButton
??1CCoverButton@CSlotWindow@UI@@UAE@XZ ENDP		; UI::CSlotWindow::CCoverButton::~CCoverButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ??_GCSlotButton@CSlotWindow@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSlotButton@CSlotWindow@UI@@UAEPAXI@Z PROC		; UI::CSlotWindow::CSlotButton::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 28   : 		{

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CSlotButton@CSlotWindow@UI@@6B@

; 29   : 		}

  0000c	e8 00 00 00 00	 call	 ??1CButton@UI@@UAE@XZ	; UI::CButton::~CButton
  00011	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00015	74 0e		 je	 SHORT $LN7@scalar
  00017	68 18 01 00 00	 push	 280			; 00000118H
  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00022	83 c4 08	 add	 esp, 8
$LN7@scalar:
  00025	8b c6		 mov	 eax, esi
  00027	5e		 pop	 esi
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
??_GCSlotButton@CSlotWindow@UI@@UAEPAXI@Z ENDP		; UI::CSlotWindow::CSlotButton::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseOverOut@CSlotButton@CSlotWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnMouseOverOut@CSlotButton@CSlotWindow@UI@@UAEXXZ PROC	; UI::CSlotWindow::CSlotButton::OnMouseOverOut, COMDAT
; _this$ = ecx

; 69   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 70   : 			if (IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 15		 je	 SHORT $LN2@OnMouseOve

; 71   : 			{
; 72   : 				SetUp();

  0000c	8b ce		 mov	 ecx, esi
  0000e	e8 00 00 00 00	 call	 ?SetUp@CButton@UI@@QAEXXZ ; UI::CButton::SetUp

; 73   : 				SetCurrentVisual(&m_upVisual);

  00013	8d 86 8c 00 00
	00		 lea	 eax, DWORD PTR [esi+140]
  00019	8b ce		 mov	 ecx, esi
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual
$LN2@OnMouseOve:

; 74   : 			}
; 75   : 			m_pParent->OnOverOutItem();

  00021	8b 8e 14 01 00
	00		 mov	 ecx, DWORD PTR [esi+276]
  00027	5e		 pop	 esi
  00028	e9 00 00 00 00	 jmp	 ?OnOverOutItem@CSlotWindow@UI@@QAEXXZ ; UI::CSlotWindow::OnOverOutItem
?OnMouseOverOut@CSlotButton@CSlotWindow@UI@@UAEXXZ ENDP	; UI::CSlotWindow::CSlotButton::OnMouseOverOut
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseOverIn@CSlotButton@CSlotWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnMouseOverIn@CSlotButton@CSlotWindow@UI@@UAEXXZ PROC	; UI::CSlotWindow::CSlotButton::OnMouseOverIn, COMDAT
; _this$ = ecx

; 61   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 62   : 			if (IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 0e		 je	 SHORT $LN2@OnMouseOve

; 63   : 			{
; 64   : 				SetCurrentVisual(&m_overVisual);

  0000c	8d 86 ac 00 00
	00		 lea	 eax, DWORD PTR [esi+172]
  00012	8b ce		 mov	 ecx, esi
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual
$LN2@OnMouseOve:

; 65   : 			}
; 66   : 			m_pParent->OnOverInItem(m_dwSlotNumber);

  0001a	ff b6 10 01 00
	00		 push	 DWORD PTR [esi+272]
  00020	8b 8e 14 01 00
	00		 mov	 ecx, DWORD PTR [esi+276]
  00026	e8 00 00 00 00	 call	 ?OnOverInItem@CSlotWindow@UI@@QAEHK@Z ; UI::CSlotWindow::OnOverInItem
  0002b	5e		 pop	 esi

; 67   : 		}

  0002c	c3		 ret	 0
?OnMouseOverIn@CSlotButton@CSlotWindow@UI@@UAEXXZ ENDP	; UI::CSlotWindow::CSlotButton::OnMouseOverIn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseLeftButtonUp@CSlotButton@CSlotWindow@UI@@UAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonUp@CSlotButton@CSlotWindow@UI@@UAEHXZ PROC ; UI::CSlotWindow::CSlotButton::OnMouseLeftButtonUp, COMDAT
; _this$ = ecx

; 44   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 45   : 			if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 40		 je	 SHORT $LN7@OnMouseLef

; 46   : 				return TRUE;
; 47   : 			if (!IsPressed())

  0000c	8b ce		 mov	 ecx, esi
  0000e	e8 00 00 00 00	 call	 ?IsPressed@CButton@UI@@QAEHXZ ; UI::CButton::IsPressed
  00013	85 c0		 test	 eax, eax
  00015	74 35		 je	 SHORT $LN7@OnMouseLef

; 48   : 				return TRUE;
; 49   : 
; 50   : 			if (IsIn())

  00017	8b ce		 mov	 ecx, esi
  00019	e8 00 00 00 00	 call	 ?IsIn@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsIn

; 51   : 				SetCurrentVisual(&m_overVisual);
; 52   : 			else
; 53   : 				SetCurrentVisual(&m_upVisual);
; 54   : 
; 55   : 			m_pParent->OnPressedSlotButton(m_dwSlotButtonType, m_dwSlotNumber);

  0001e	0f b6 c0	 movzx	 eax, al
  00021	8b ce		 mov	 ecx, esi
  00023	c1 e0 05	 shl	 eax, 5
  00026	05 8c 00 00 00	 add	 eax, 140		; 0000008cH
  0002b	03 c6		 add	 eax, esi
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual
  00033	8b 8e 14 01 00
	00		 mov	 ecx, DWORD PTR [esi+276]
  00039	6a 01		 push	 1
  0003b	ff b6 10 01 00
	00		 push	 DWORD PTR [esi+272]
  00041	ff b6 0c 01 00
	00		 push	 DWORD PTR [esi+268]
  00047	e8 00 00 00 00	 call	 ?OnPressedSlotButton@CSlotWindow@UI@@QAEXKKH@Z ; UI::CSlotWindow::OnPressedSlotButton
$LN7@OnMouseLef:

; 56   : 
; 57   : 			return TRUE;
; 58   : 		}

  0004c	b8 01 00 00 00	 mov	 eax, 1
  00051	5e		 pop	 esi
  00052	c3		 ret	 0
?OnMouseLeftButtonUp@CSlotButton@CSlotWindow@UI@@UAEHXZ ENDP ; UI::CSlotWindow::CSlotButton::OnMouseLeftButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseLeftButtonDown@CSlotButton@CSlotWindow@UI@@UAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonDown@CSlotButton@CSlotWindow@UI@@UAEHXZ PROC ; UI::CSlotWindow::CSlotButton::OnMouseLeftButtonDown, COMDAT
; _this$ = ecx

; 32   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 33   : 			if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 20		 je	 SHORT $LN5@OnMouseLef

; 34   : 				return TRUE;
; 35   : 			if (UI::CWindowManager::Instance().IsAttaching())

  0000c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00012	e8 00 00 00 00	 call	 ?IsAttaching@CWindowManager@UI@@QAEHXZ ; UI::CWindowManager::IsAttaching
  00017	85 c0		 test	 eax, eax
  00019	75 11		 jne	 SHORT $LN5@OnMouseLef

; 36   : 				return TRUE;
; 37   : 
; 38   : 			m_isPressed = TRUE;
; 39   : 			Down();

  0001b	8b ce		 mov	 ecx, esi
  0001d	c7 86 80 00 00
	00 01 00 00 00	 mov	 DWORD PTR [esi+128], 1
  00027	e8 00 00 00 00	 call	 ?Down@CButton@UI@@QAEXXZ ; UI::CButton::Down
$LN5@OnMouseLef:

; 40   : 
; 41   : 			return TRUE;
; 42   : 		}

  0002c	b8 01 00 00 00	 mov	 eax, 1
  00031	5e		 pop	 esi
  00032	c3		 ret	 0
?OnMouseLeftButtonDown@CSlotButton@CSlotWindow@UI@@UAEHXZ ENDP ; UI::CSlotWindow::CSlotButton::OnMouseLeftButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ??1CSlotButton@CSlotWindow@UI@@UAE@XZ
_TEXT	SEGMENT
??1CSlotButton@CSlotWindow@UI@@UAE@XZ PROC		; UI::CSlotWindow::CSlotButton::~CSlotButton, COMDAT
; _this$ = ecx

; 28   : 		{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CSlotButton@CSlotWindow@UI@@6B@

; 29   : 		}

  00006	e9 00 00 00 00	 jmp	 ??1CButton@UI@@UAE@XZ	; UI::CButton::~CButton
??1CSlotButton@CSlotWindow@UI@@UAE@XZ ENDP		; UI::CSlotWindow::CSlotButton::~CSlotButton
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCSlotWindow@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSlotWindow@UI@@UAEPAXI@Z PROC			; UI::CSlotWindow::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CSlotWindow@UI@@UAE@XZ ; UI::CSlotWindow::~CSlotWindow
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 c8 00 00 00	 push	 200			; 000000c8H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCSlotWindow@UI@@UAEPAXI@Z ENDP			; UI::CSlotWindow::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\deque
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\deque
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\deque
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\deque
;	COMDAT ?_Tidy@?$deque@KV?$allocator@K@std@@@std@@AAEXXZ
_TEXT	SEGMENT
?_Tidy@?$deque@KV?$allocator@K@std@@@std@@AAEXXZ PROC	; std::deque<unsigned long,std::allocator<unsigned long> >::_Tidy, COMDAT
; _this$ = ecx

; 1584 :     void _Tidy() noexcept { // free all storage

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 1045 :         return _Mysize() == 0;

  00003	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00006	85 c0		 test	 eax, eax

; 1585 :         _Orphan_all();
; 1586 : 
; 1587 :         _Alpty _Almap(_Getal());
; 1588 :         while (!empty()) {

  00008	74 15		 je	 SHORT $LN61@Tidy
  0000a	66 0f 1f 44 00
	00		 npad	 6
$LL2@Tidy:

; 1208 :         if (--_Mysize() == 0) {

  00010	83 c0 ff	 add	 eax, -1
  00013	89 47 10	 mov	 DWORD PTR [edi+16], eax
  00016	75 f8		 jne	 SHORT $LL2@Tidy

; 1209 :             _Myoff() = 0;

  00018	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN61@Tidy:

; 1589 :             pop_back();
; 1590 :         }
; 1591 : 
; 1592 :         if (_Map() != nullptr) {

  0001f	83 7f 04 00	 cmp	 DWORD PTR [edi+4], 0
  00023	74 53		 je	 SHORT $LN60@Tidy

; 1593 :             for (size_type _Block = _Mapsize(); _Block > 0;) { // free storage for a block and destroy pointer

  00025	56		 push	 esi
  00026	8b 77 08	 mov	 esi, DWORD PTR [edi+8]
  00029	85 f6		 test	 esi, esi
  0002b	74 1d		 je	 SHORT $LN5@Tidy
  0002d	0f 1f 00	 npad	 3
$LL4@Tidy:

; 1594 :                 if (_Map()[--_Block]) { // free block

  00030	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00033	4e		 dec	 esi
  00034	8b 04 b0	 mov	 eax, DWORD PTR [eax+esi*4]
  00037	85 c0		 test	 eax, eax
  00039	74 0b		 je	 SHORT $LN41@Tidy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  0003b	6a 10		 push	 16			; 00000010H
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00043	83 c4 08	 add	 esp, 8
$LN41@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\deque

; 1593 :             for (size_type _Block = _Mapsize(); _Block > 0;) { // free storage for a block and destroy pointer

  00046	85 f6		 test	 esi, esi
  00048	75 e6		 jne	 SHORT $LL4@Tidy
$LN5@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004a	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  0004d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00050	c1 e1 02	 shl	 ecx, 2
  00053	5e		 pop	 esi

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00054	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0005a	72 12		 jb	 SHORT $LN33@Tidy

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0005c	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0005f	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00062	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00064	83 c0 fc	 add	 eax, -4			; fffffffcH
  00067	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0006a	77 1c		 ja	 SHORT $LN30@Tidy

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0006c	8b c2		 mov	 eax, edx
$LN33@Tidy:

; 265  :         ::operator delete(_Ptr, _Bytes);

  0006e	51		 push	 ecx
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00075	83 c4 08	 add	 esp, 8
$LN60@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\deque

; 1603 :         _Mapsize() = 0;

  00078	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1604 :         _Map()     = nullptr;

  0007f	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
  00086	5f		 pop	 edi

; 1605 :     }

  00087	c3		 ret	 0
$LN30@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00088	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN70@Tidy:
  0008d	cc		 int	 3
?_Tidy@?$deque@KV?$allocator@K@std@@@std@@AAEXXZ ENDP	; std::deque<unsigned long,std::allocator<unsigned long> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\deque
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\deque
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\deque
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\deque
;	COMDAT ?_Growmap@?$deque@KV?$allocator@K@std@@@std@@AAEXI@Z
_TEXT	SEGMENT
tv468 = -4						; size = 4
$T1 = 8							; size = 4
__Count$ = 8						; size = 4
?_Growmap@?$deque@KV?$allocator@K@std@@@std@@AAEXI@Z PROC ; std::deque<unsigned long,std::allocator<unsigned long> >::_Growmap, COMDAT
; _this$ = ecx

; 1545 :     void _Growmap(size_type _Count) { // grow map by at least _Count pointers, _Mapsize() a power of 2

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx

; 1546 :         static_assert(_Minimum_map_size > 1, "The _Xlen() test should always be performed.");
; 1547 : 
; 1548 :         _Alpty _Almap(_Getal());
; 1549 :         size_type _Newsize = _Mapsize() > 0 ? _Mapsize() : 1;

  00005	8b 5d 08	 mov	 ebx, DWORD PTR __Count$[ebp]
  00008	b8 01 00 00 00	 mov	 eax, 1
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	8b f9		 mov	 edi, ecx
  00011	8b 57 08	 mov	 edx, DWORD PTR [edi+8]
  00014	85 d2		 test	 edx, edx
  00016	0f 45 c2	 cmovne	 eax, edx
  00019	0f 1f 80 00 00
	00 00		 npad	 7
$LL2@Growmap:

; 1550 :         while (_Newsize - _Mapsize() < _Count || _Newsize < _Minimum_map_size) {

  00020	8b f0		 mov	 esi, eax
  00022	2b f2		 sub	 esi, edx
  00024	3b f3		 cmp	 esi, ebx
  00026	72 05		 jb	 SHORT $LN4@Growmap
  00028	83 f8 08	 cmp	 eax, 8
  0002b	73 13		 jae	 SHORT $LN3@Growmap
$LN4@Growmap:

; 1551 :             // scale _Newsize to 2^N >= _Mapsize() + _Count
; 1552 :             if (max_size() / _Block_size - _Newsize < _Newsize) {

  0002d	b9 ff ff ff 0f	 mov	 ecx, 268435455		; 0fffffffH
  00032	2b c8		 sub	 ecx, eax
  00034	3b c8		 cmp	 ecx, eax
  00036	0f 82 fe 00 00
	00		 jb	 $LN46@Growmap

; 1554 :             }
; 1555 : 
; 1556 :             _Newsize *= 2;

  0003c	03 c0		 add	 eax, eax

; 1557 :         }

  0003e	eb e0		 jmp	 SHORT $LL2@Growmap
$LN3@Growmap:

; 1558 :         _Count = _Newsize - _Mapsize();
; 1559 : 
; 1560 :         size_type _Myboff = _Myoff() / _Block_size;

  00040	8b 5f 0c	 mov	 ebx, DWORD PTR [edi+12]
  00043	c1 eb 02	 shr	 ebx, 2
  00046	89 5d 08	 mov	 DWORD PTR $T1[ebp], ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 70   :         if (_Count > _Max_possible) {

  00049	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  0004e	0f 87 ed 00 00
	00		 ja	 $LN61@Growmap

; 72   :         }
; 73   :     }
; 74   : 
; 75   :     return _Count * _Ty_size;

  00054	c1 e0 02	 shl	 eax, 2

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00057	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0005c	72 0d		 jb	 SHORT $LN19@Growmap

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0005e	50		 push	 eax
  0005f	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00064	83 c4 04	 add	 esp, 4
  00067	8b d8		 mov	 ebx, eax
  00069	eb 13		 jmp	 SHORT $LN18@Growmap
$LN19@Growmap:

; 240  :         }
; 241  :     }
; 242  : #endif // defined(_M_IX86) || defined(_M_X64)
; 243  : 
; 244  :     if (_Bytes != 0) {

  0006b	85 c0		 test	 eax, eax
  0006d	74 0d		 je	 SHORT $LN20@Growmap

; 87   :         return ::operator new(_Bytes);

  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00075	83 c4 04	 add	 esp, 4

; 245  :         return _Traits::_Allocate(_Bytes);

  00078	8b d8		 mov	 ebx, eax
  0007a	eb 02		 jmp	 SHORT $LN18@Growmap
$LN20@Growmap:

; 246  :     }
; 247  : 
; 248  :     return nullptr;

  0007c	33 db		 xor	 ebx, ebx
$LN18@Growmap:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\deque

; 1562 :         _Mapptr _Myptr    = _Newmap + _Myboff;

  0007e	8b 55 08	 mov	 edx, DWORD PTR $T1[ebp]

; 1563 : 
; 1564 :         _Myptr = _STD uninitialized_copy(_Map() + _Myboff, _Map() + _Mapsize(), _Myptr); // copy initial to end

  00081	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00084	c1 e2 02	 shl	 edx, 2
  00087	89 55 fc	 mov	 DWORD PTR tv468[ebp], edx
  0008a	8d 04 1a	 lea	 eax, DWORD PTR [edx+ebx]
  0008d	50		 push	 eax
  0008e	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00091	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  00094	50		 push	 eax
  00095	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 ??$uninitialized_copy@PAPAKPAPAK@std@@YAPAPAKQAPAK0PAPAK@Z ; std::uninitialized_copy<unsigned long * *,unsigned long * *>
  0009e	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  000a1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1565 :         if (_Myboff <= _Count) { // increment greater than offset of initial block

  000a4	50		 push	 eax
  000a5	39 75 08	 cmp	 DWORD PTR $T1[ebp], esi
  000a8	77 22		 ja	 SHORT $LN6@Growmap

; 1566 :             _Myptr = _STD uninitialized_copy(_Map(), _Map() + _Myboff, _Myptr); // copy rest of old

  000aa	8b 45 fc	 mov	 eax, DWORD PTR tv468[ebp]
  000ad	03 c1		 add	 eax, ecx
  000af	50		 push	 eax
  000b0	51		 push	 ecx
  000b1	e8 00 00 00 00	 call	 ??$uninitialized_copy@PAPAKPAPAK@std@@YAPAPAKQAPAK0PAPAK@Z ; std::uninitialized_copy<unsigned long * *,unsigned long * *>

; 1567 :             _Uninitialized_value_construct_n_unchecked1(_Myptr, _Count - _Myboff); // clear suffix of new

  000b6	8b ce		 mov	 ecx, esi
  000b8	2b 4d 08	 sub	 ecx, DWORD PTR $T1[ebp]
  000bb	51		 push	 ecx
  000bc	50		 push	 eax
  000bd	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n_unchecked1@PAPAKI@std@@YAPAPAKPAPAKI@Z ; std::_Uninitialized_value_construct_n_unchecked1<unsigned long * *,unsigned int>

; 1568 :             _Uninitialized_value_construct_n_unchecked1(_Newmap, _Myboff); // clear prefix of new
; 1569 :         } else { // increment not greater than offset of initial block

  000c2	8b 45 08	 mov	 eax, DWORD PTR $T1[ebp]
  000c5	83 c4 14	 add	 esp, 20			; 00000014H
  000c8	8b cb		 mov	 ecx, ebx
  000ca	eb 24		 jmp	 SHORT $LN7@Growmap
$LN6@Growmap:

; 1570 :             _STD uninitialized_copy(_Map(), _Map() + _Count, _Myptr); // copy more old

  000cc	8d 04 b1	 lea	 eax, DWORD PTR [ecx+esi*4]
  000cf	50		 push	 eax
  000d0	51		 push	 ecx
  000d1	e8 00 00 00 00	 call	 ??$uninitialized_copy@PAPAKPAPAK@std@@YAPAPAKQAPAK0PAPAK@Z ; std::uninitialized_copy<unsigned long * *,unsigned long * *>

; 1571 :             _Myptr = _STD uninitialized_copy(_Map() + _Count, _Map() + _Myboff, _Newmap); // copy rest of old

  000d6	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  000d9	8b 45 fc	 mov	 eax, DWORD PTR tv468[ebp]
  000dc	03 c1		 add	 eax, ecx
  000de	53		 push	 ebx
  000df	50		 push	 eax
  000e0	8d 04 b1	 lea	 eax, DWORD PTR [ecx+esi*4]
  000e3	50		 push	 eax
  000e4	e8 00 00 00 00	 call	 ??$uninitialized_copy@PAPAKPAPAK@std@@YAPAPAKQAPAK0PAPAK@Z ; std::uninitialized_copy<unsigned long * *,unsigned long * *>

; 1572 :             _Uninitialized_value_construct_n_unchecked1(_Myptr, _Count); // clear rest to initial block

  000e9	8b c8		 mov	 ecx, eax
  000eb	83 c4 18	 add	 esp, 24			; 00000018H
  000ee	8b c6		 mov	 eax, esi
$LN7@Growmap:

; 1573 :         }
; 1574 : 
; 1575 :         if (_Map() != nullptr) {

  000f0	50		 push	 eax
  000f1	51		 push	 ecx
  000f2	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n_unchecked1@PAPAKI@std@@YAPAPAKPAPAKI@Z ; std::_Uninitialized_value_construct_n_unchecked1<unsigned long * *,unsigned int>
  000f7	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000fa	83 c4 08	 add	 esp, 8
  000fd	85 c0		 test	 eax, eax
  000ff	74 2a		 je	 SHORT $LN31@Growmap
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00101	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00104	c1 e1 02	 shl	 ecx, 2

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00107	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0010d	72 12		 jb	 SHORT $LN41@Growmap

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0010f	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00112	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00115	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00117	83 c0 fc	 add	 eax, -4			; fffffffcH
  0011a	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0011d	77 27		 ja	 SHORT $LN38@Growmap

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0011f	8b c2		 mov	 eax, edx
$LN41@Growmap:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00121	51		 push	 ecx
  00122	50		 push	 eax
  00123	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00128	83 c4 08	 add	 esp, 8
$LN31@Growmap:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\deque

; 1581 :         _Mapsize() += _Count;

  0012b	01 77 08	 add	 DWORD PTR [edi+8], esi
  0012e	89 5f 04	 mov	 DWORD PTR [edi+4], ebx

; 1582 :     }

  00131	5f		 pop	 edi
  00132	5e		 pop	 esi
  00133	5b		 pop	 ebx
  00134	8b e5		 mov	 esp, ebp
  00136	5d		 pop	 ebp
  00137	c2 04 00	 ret	 4
$LN46@Growmap:

; 1553 :                 _Xlen(); // result too long

  0013a	8b cf		 mov	 ecx, edi
  0013c	e8 00 00 00 00	 call	 ?_Xlen@?$deque@KV?$allocator@K@std@@@std@@ABEXXZ ; std::deque<unsigned long,std::allocator<unsigned long> >::_Xlen
$LN61@Growmap:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 71   :             _Throw_bad_array_new_length(); // multiply overflow

  00141	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN38@Growmap:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00146	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN59@Growmap:
  0014b	cc		 int	 3
?_Growmap@?$deque@KV?$allocator@K@std@@@std@@AAEXI@Z ENDP ; std::deque<unsigned long,std::allocator<unsigned long> >::_Growmap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\deque
;	COMDAT ?_Xlen@?$deque@KV?$allocator@K@std@@@std@@ABEXXZ
_TEXT	SEGMENT
?_Xlen@?$deque@KV?$allocator@K@std@@@std@@ABEXXZ PROC	; std::deque<unsigned long,std::allocator<unsigned long> >::_Xlen, COMDAT
; _this$ = ecx

; 1538 :         _Xlength_error("deque<T> too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen:
  0000a	cc		 int	 3
?_Xlen@?$deque@KV?$allocator@K@std@@@std@@ABEXXZ ENDP	; std::deque<unsigned long,std::allocator<unsigned long> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
;	COMDAT ??1?$list@KV?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$list@KV?$allocator@K@std@@@std@@QAE@XZ PROC	; std::list<unsigned long,std::allocator<unsigned long> >::~list<unsigned long,std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 1045 :     ~list() noexcept {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 1501 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

  00003	8b 17		 mov	 edx, DWORD PTR [edi]

; 325  :         _Head->_Prev->_Next = nullptr;

  00005	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00008	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 326  : 
; 327  :         auto _Pnode = _Head->_Next;

  0000e	8b 02		 mov	 eax, DWORD PTR [edx]

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00010	85 c0		 test	 eax, eax
  00012	74 15		 je	 SHORT $LN7@list
  00014	56		 push	 esi
$LL8@list:

; 329  :             _Pnext = _Pnode->_Next;

  00015	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00017	6a 0c		 push	 12			; 0000000cH
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001f	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00022	8b c6		 mov	 eax, esi
  00024	85 f6		 test	 esi, esi
  00026	75 ed		 jne	 SHORT $LL8@list
  00028	5e		 pop	 esi
$LN7@list:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00029	6a 0c		 push	 12			; 0000000cH
  0002b	ff 37		 push	 DWORD PTR [edi]
  0002d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00032	83 c4 08	 add	 esp, 8
  00035	5f		 pop	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1051 :     }

  00036	c3		 ret	 0
??1?$list@KV?$allocator@K@std@@@std@@QAE@XZ ENDP	; std::list<unsigned long,std::allocator<unsigned long> >::~list<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnIsType@CSlotWindow@UI@@MAEHK@Z
_TEXT	SEGMENT
_dwType$ = 8						; size = 4
?OnIsType@CSlotWindow@UI@@MAEHK@Z PROC			; UI::CSlotWindow::OnIsType, COMDAT
; _this$ = ecx

; 1315 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1316 : 	if (CSlotWindow::Type() == dwType)

  00006	e8 00 00 00 00	 call	 ?Type@CSlotWindow@UI@@SAKXZ ; UI::CSlotWindow::Type
  0000b	8b 55 08	 mov	 edx, DWORD PTR _dwType$[ebp]
  0000e	3b c2		 cmp	 eax, edx
  00010	75 0a		 jne	 SHORT $LN2@OnIsType

; 1317 : 		return TRUE;

  00012	b8 01 00 00 00	 mov	 eax, 1
  00017	5e		 pop	 esi

; 1320 : }

  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
$LN2@OnIsType:

; 1318 : 
; 1319 : 	return CWindow::OnIsType(dwType);

  0001c	52		 push	 edx
  0001d	8b ce		 mov	 ecx, esi
  0001f	e8 00 00 00 00	 call	 ?OnIsType@CWindow@UI@@UAEHK@Z ; UI::CWindow::OnIsType
  00024	5e		 pop	 esi

; 1320 : }

  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?OnIsType@CSlotWindow@UI@@MAEHK@Z ENDP			; UI::CSlotWindow::OnIsType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnRefreshSlot@CSlotWindow@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRefreshSlot@CSlotWindow@UI@@MAEXXZ PROC		; UI::CSlotWindow::OnRefreshSlot, COMDAT
; _this$ = ecx

; 625  : }

  00000	c2 00 00	 ret	 0
?OnRefreshSlot@CSlotWindow@UI@@MAEXXZ ENDP		; UI::CSlotWindow::OnRefreshSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?ClearSlot@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z
_TEXT	SEGMENT
_pSlot$ = 8						; size = 4
?ClearSlot@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z PROC	; UI::CSlotWindow::ClearSlot, COMDAT
; _this$ = ecx

; 566  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 567  : 	pSlot->bActive = FALSE;

  00004	8b 75 08	 mov	 esi, DWORD PTR _pSlot$[ebp]

; 568  : 	pSlot->byxPlacedItemSize = 1;
; 569  : 	pSlot->byyPlacedItemSize = 1;
; 570  : 
; 571  : 	pSlot->isItem = FALSE;
; 572  : 	pSlot->dwState = 0;
; 573  : 	pSlot->fCoolTime = 0.0f;
; 574  : 	pSlot->fStartCoolTime = 0.0f;
; 575  : 	pSlot->dwCenterSlotNumber = 0xffffffff;
; 576  : 
; 577  : 	pSlot->dwItemIndex = 0;
; 578  : 	pSlot->bRenderBaseSlotImage = true;
; 579  : 
; 580  : 	if (pSlot->pInstance)

  00007	8b 46 44	 mov	 eax, DWORD PTR [esi+68]
  0000a	c7 46 1c 00 00
	00 00		 mov	 DWORD PTR [esi+28], 0
  00011	66 c7 46 40 01
	01		 mov	 WORD PTR [esi+64], 257	; 00000101H
  00017	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  0001e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00024	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  0002b	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
  00032	c7 46 08 ff ff
	ff ff		 mov	 DWORD PTR [esi+8], -1
  00039	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00040	c6 46 4c 01	 mov	 BYTE PTR [esi+76], 1
  00044	85 c0		 test	 eax, eax
  00046	74 10		 je	 SHORT $LN2@ClearSlot

; 581  : 	{
; 582  : 		CGraphicImageInstance::Delete(pSlot->pInstance);

  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ?Delete@CGraphicImageInstance@@SAXPAV1@@Z ; CGraphicImageInstance::Delete
  0004e	83 c4 04	 add	 esp, 4

; 583  : 		pSlot->pInstance = NULL;

  00051	c7 46 44 00 00
	00 00		 mov	 DWORD PTR [esi+68], 0
$LN2@ClearSlot:

; 584  : 	}
; 585  : 	if (pSlot->pCoverButton)

  00058	8b 4e 50	 mov	 ecx, DWORD PTR [esi+80]
  0005b	85 c9		 test	 ecx, ecx
  0005d	74 05		 je	 SHORT $LN3@ClearSlot

; 586  : 	{
; 587  : 		pSlot->pCoverButton->Hide();

  0005f	e8 00 00 00 00	 call	 ?Hide@CWindow@UI@@QAEXXZ ; UI::CWindow::Hide
$LN3@ClearSlot:

; 588  : 	}
; 589  : 	if (pSlot->pSlotButton)

  00064	8b 4e 54	 mov	 ecx, DWORD PTR [esi+84]
  00067	85 c9		 test	 ecx, ecx
  00069	74 05		 je	 SHORT $LN4@ClearSlot

; 590  : 	{
; 591  : 		pSlot->pSlotButton->Hide();

  0006b	e8 00 00 00 00	 call	 ?Hide@CWindow@UI@@QAEXXZ ; UI::CWindow::Hide
$LN4@ClearSlot:

; 592  : 	}
; 593  : 	if (pSlot->pSignImage)

  00070	8b 4e 58	 mov	 ecx, DWORD PTR [esi+88]
  00073	85 c9		 test	 ecx, ecx
  00075	74 05		 je	 SHORT $LN5@ClearSlot

; 594  : 	{
; 595  :  		pSlot->pSignImage->Hide();

  00077	e8 00 00 00 00	 call	 ?Hide@CWindow@UI@@QAEXXZ ; UI::CWindow::Hide
$LN5@ClearSlot:

; 596  : 	}
; 597  : 	if (pSlot->pFinishCoolTimeEffect)

  0007c	8b 4e 5c	 mov	 ecx, DWORD PTR [esi+92]
  0007f	5e		 pop	 esi
  00080	85 c9		 test	 ecx, ecx
  00082	74 05		 je	 SHORT $LN6@ClearSlot

; 598  : 	{
; 599  : 		pSlot->pFinishCoolTimeEffect->Hide();

  00084	e8 00 00 00 00	 call	 ?Hide@CWindow@UI@@QAEXXZ ; UI::CWindow::Hide
$LN6@ClearSlot:

; 600  : 	}
; 601  : }

  00089	5d		 pop	 ebp
  0008a	c2 04 00	 ret	 4
?ClearSlot@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z ENDP	; UI::CSlotWindow::ClearSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?GetPickedSlotPointer@CSlotWindow@UI@@MAEHPAPAUSSlot@12@@Z
_TEXT	SEGMENT
_ly$ = -16						; size = 4
_lx$ = -12						; size = 4
_iyLocal$1$ = -8					; size = 4
_ixLocal$1$ = -4					; size = 4
_ppSlot$ = 8						; size = 4
?GetPickedSlotPointer@CSlotWindow@UI@@MAEHPAPAUSSlot@12@@Z PROC ; UI::CSlotWindow::GetPickedSlotPointer, COMDAT
; _this$ = ecx

; 1260 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1261 : 	long lx, ly;
; 1262 : 	CWindowManager::Instance().GetMousePosition(lx, ly);

  00009	8d 45 f0	 lea	 eax, DWORD PTR _ly$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00014	50		 push	 eax
  00015	8d 45 f4	 lea	 eax, DWORD PTR _lx$[ebp]
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ?GetMousePosition@CWindowManager@UI@@QAEXAAJ0@Z ; UI::CWindowManager::GetMousePosition

; 1264 : 	int ixLocal = lx - m_rect.left;

  0001e	8b 45 f4	 mov	 eax, DWORD PTR _lx$[ebp]
  00021	2b 46 34	 sub	 eax, DWORD PTR [esi+52]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1090 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00024	8b 8e 8c 00 00
	00		 mov	 ecx, DWORD PTR [esi+140]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 1264 : 	int ixLocal = lx - m_rect.left;

  0002a	89 45 fc	 mov	 DWORD PTR _ixLocal$1$[ebp], eax

; 1265 : 	int iyLocal = ly - m_rect.top;

  0002d	8b 45 f0	 mov	 eax, DWORD PTR _ly$[ebp]
  00030	2b 46 38	 sub	 eax, DWORD PTR [esi+56]
  00033	89 45 f8	 mov	 DWORD PTR _iyLocal$1$[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00036	8b 01		 mov	 eax, DWORD PTR [ecx]
  00038	3b c1		 cmp	 eax, ecx
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 1267 : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  0003a	74 56		 je	 SHORT $LN48@GetPickedS
  0003c	0f 1f 40 00	 npad	 4
$LL26@GetPickedS:

; 1273 : 
; 1274 : 		if (rSlot.isItem)

  00040	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 151  :         return this->_Ptr->_Myval;

  00044	8d 50 08	 lea	 edx, DWORD PTR [eax+8]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 1271 : 		int ixCellSize = rSlot.ixCellSize;

  00047	8b 7a 38	 mov	 edi, DWORD PTR [edx+56]

; 1272 : 		int iyCellSize = rSlot.iyCellSize;

  0004a	8b 5a 3c	 mov	 ebx, DWORD PTR [edx+60]

; 1273 : 
; 1274 : 		if (rSlot.isItem)

  0004d	74 19		 je	 SHORT $LN14@GetPickedS

; 1275 : 		{
; 1276 : 			ixCellSize = max(rSlot.ixCellSize, int(rSlot.byxPlacedItemSize * ITEM_WIDTH));

  0004f	0f b6 72 40	 movzx	 esi, BYTE PTR [edx+64]
  00053	c1 e6 05	 shl	 esi, 5

; 1277 : 			iyCellSize = max(rSlot.iyCellSize, int(rSlot.byyPlacedItemSize * ITEM_HEIGHT));

  00056	3b fe		 cmp	 edi, esi
  00058	0f 4e fe	 cmovle	 edi, esi
  0005b	0f b6 72 41	 movzx	 esi, BYTE PTR [edx+65]
  0005f	c1 e6 05	 shl	 esi, 5
  00062	3b de		 cmp	 ebx, esi
  00064	7f 02		 jg	 SHORT $LN14@GetPickedS
  00066	8b de		 mov	 ebx, esi
$LN14@GetPickedS:

; 1278 : 		}
; 1279 : 
; 1280 : 		if (ixLocal >= rSlot.ixPosition)

  00068	8b 72 30	 mov	 esi, DWORD PTR [edx+48]
  0006b	39 75 fc	 cmp	 DWORD PTR _ixLocal$1$[ebp], esi
  0006e	7c 1c		 jl	 SHORT $LN2@GetPickedS

; 1281 : 		if (iyLocal >= rSlot.iyPosition)

  00070	8b 75 f8	 mov	 esi, DWORD PTR _iyLocal$1$[ebp]
  00073	3b 72 34	 cmp	 esi, DWORD PTR [edx+52]
  00076	8b 72 30	 mov	 esi, DWORD PTR [edx+48]
  00079	7c 11		 jl	 SHORT $LN2@GetPickedS

; 1282 : 		if (ixLocal <= rSlot.ixPosition + ixCellSize)

  0007b	03 f7		 add	 esi, edi
  0007d	39 75 fc	 cmp	 DWORD PTR _ixLocal$1$[ebp], esi
  00080	7f 0a		 jg	 SHORT $LN2@GetPickedS

; 1283 : 		if (iyLocal <= rSlot.iyPosition + iyCellSize)

  00082	8b 72 34	 mov	 esi, DWORD PTR [edx+52]
  00085	03 f3		 add	 esi, ebx
  00087	39 75 f8	 cmp	 DWORD PTR _iyLocal$1$[ebp], esi
  0008a	7e 11		 jle	 SHORT $LN44@GetPickedS
$LN2@GetPickedS:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 165  :         this->_Ptr = this->_Ptr->_Next;

  0008c	8b 00		 mov	 eax, DWORD PTR [eax]

; 198  :         return this->_Ptr == _Right._Ptr;

  0008e	3b c1		 cmp	 eax, ecx
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 1267 : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  00090	75 ae		 jne	 SHORT $LL26@GetPickedS
$LN48@GetPickedS:
  00092	5f		 pop	 edi

; 1286 : 			return TRUE;
; 1287 : 		}
; 1288 : 	}
; 1289 : 
; 1290 : 	return FALSE;
; 1291 : }

  00093	5e		 pop	 esi
  00094	33 c0		 xor	 eax, eax
  00096	5b		 pop	 ebx
  00097	8b e5		 mov	 esp, ebp
  00099	5d		 pop	 ebp
  0009a	c2 04 00	 ret	 4
$LN44@GetPickedS:

; 1284 : 		{
; 1285 : 			*ppSlot = &rSlot;

  0009d	8b 45 08	 mov	 eax, DWORD PTR _ppSlot$[ebp]
  000a0	5f		 pop	 edi

; 1286 : 			return TRUE;
; 1287 : 		}
; 1288 : 	}
; 1289 : 
; 1290 : 	return FALSE;
; 1291 : }

  000a1	5e		 pop	 esi
  000a2	5b		 pop	 ebx
  000a3	89 10		 mov	 DWORD PTR [eax], edx
  000a5	b8 01 00 00 00	 mov	 eax, 1
  000aa	8b e5		 mov	 esp, ebp
  000ac	5d		 pop	 ebp
  000ad	c2 04 00	 ret	 4
?GetPickedSlotPointer@CSlotWindow@UI@@MAEHPAPAUSSlot@12@@Z ENDP ; UI::CSlotWindow::GetPickedSlotPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?GetSelectedSlotPointer@CSlotWindow@UI@@IAEHPAPAUSSlot@12@@Z
_TEXT	SEGMENT
_ly$ = -8						; size = 4
_lx$ = -4						; size = 4
_ppSlot$ = 8						; size = 4
?GetSelectedSlotPointer@CSlotWindow@UI@@IAEHPAPAUSSlot@12@@Z PROC ; UI::CSlotWindow::GetSelectedSlotPointer, COMDAT
; _this$ = ecx

; 1238 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 1239 : 	long lx, ly;
; 1240 : 	GetMouseLocalPosition(lx, ly);

  00006	8d 45 f8	 lea	 eax, DWORD PTR _ly$[ebp]
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	50		 push	 eax
  0000d	8d 45 fc	 lea	 eax, DWORD PTR _lx$[ebp]
  00010	8b f1		 mov	 esi, ecx
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ?GetMouseLocalPosition@CWindow@UI@@QAEXAAJ0@Z ; UI::CWindow::GetMouseLocalPosition
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1090 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00018	8b 8e 8c 00 00
	00		 mov	 ecx, DWORD PTR [esi+140]

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0001e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00020	3b c1		 cmp	 eax, ecx
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 1242 : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  00022	74 2d		 je	 SHORT $LN43@GetSelecte
$LL21@GetSelecte:

; 1246 : 		if (lx >= rSlot.ixPosition)

  00024	8b 58 38	 mov	 ebx, DWORD PTR [eax+56]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 151  :         return this->_Ptr->_Myval;

  00027	8d 70 08	 lea	 esi, DWORD PTR [eax+8]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 1246 : 		if (lx >= rSlot.ixPosition)

  0002a	39 5d fc	 cmp	 DWORD PTR _lx$[ebp], ebx
  0002d	7c 1c		 jl	 SHORT $LN2@GetSelecte

; 1247 : 		if (ly >= rSlot.iyPosition)

  0002f	8b 7e 34	 mov	 edi, DWORD PTR [esi+52]
  00032	39 7d f8	 cmp	 DWORD PTR _ly$[ebp], edi
  00035	7c 14		 jl	 SHORT $LN2@GetSelecte

; 1248 : 		if (lx <= rSlot.ixPosition + rSlot.ixCellSize)

  00037	8b 56 38	 mov	 edx, DWORD PTR [esi+56]
  0003a	03 d3		 add	 edx, ebx
  0003c	39 55 fc	 cmp	 DWORD PTR _lx$[ebp], edx
  0003f	7f 0a		 jg	 SHORT $LN2@GetSelecte

; 1249 : 		if (ly <= rSlot.iyPosition + rSlot.iyCellSize)

  00041	8b 56 3c	 mov	 edx, DWORD PTR [esi+60]
  00044	03 d7		 add	 edx, edi
  00046	39 55 f8	 cmp	 DWORD PTR _ly$[ebp], edx
  00049	7e 11		 jle	 SHORT $LN39@GetSelecte
$LN2@GetSelecte:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 165  :         this->_Ptr = this->_Ptr->_Next;

  0004b	8b 00		 mov	 eax, DWORD PTR [eax]

; 198  :         return this->_Ptr == _Right._Ptr;

  0004d	3b c1		 cmp	 eax, ecx
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 1242 : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  0004f	75 d3		 jne	 SHORT $LL21@GetSelecte
$LN43@GetSelecte:
  00051	5f		 pop	 edi

; 1253 : 		}
; 1254 : 	}
; 1255 : 
; 1256 : 	return FALSE;
; 1257 : }

  00052	5e		 pop	 esi
  00053	33 c0		 xor	 eax, eax
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
$LN39@GetSelecte:

; 1250 : 		{
; 1251 : 			*ppSlot = &rSlot;

  0005c	8b 45 08	 mov	 eax, DWORD PTR _ppSlot$[ebp]
  0005f	5f		 pop	 edi
  00060	89 30		 mov	 DWORD PTR [eax], esi

; 1252 : 			return TRUE;

  00062	b8 01 00 00 00	 mov	 eax, 1

; 1253 : 		}
; 1254 : 	}
; 1255 : 
; 1256 : 	return FALSE;
; 1257 : }

  00067	5e		 pop	 esi
  00068	5b		 pop	 ebx
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c2 04 00	 ret	 4
?GetSelectedSlotPointer@CSlotWindow@UI@@IAEHPAPAUSSlot@12@@Z ENDP ; UI::CSlotWindow::GetSelectedSlotPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z
_TEXT	SEGMENT
_dwIndex$ = 8						; size = 4
_ppSlot$ = 12						; size = 4
?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z PROC ; UI::CSlotWindow::GetSlotPointer, COMDAT
; _this$ = ecx

; 1222 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1090 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00003	8b 89 8c 00 00
	00		 mov	 ecx, DWORD PTR [ecx+140]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 1222 : {

  00009	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	3b c1		 cmp	 eax, ecx
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 1223 : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  0000e	74 11		 je	 SHORT $LN3@GetSlotPoi
  00010	8b 75 08	 mov	 esi, DWORD PTR _dwIndex$[ebp]
$LL18@GetSlotPoi:

; 1227 : 		if (dwIndex == rSlot.dwSlotNumber)

  00013	3b 70 0c	 cmp	 esi, DWORD PTR [eax+12]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 151  :         return this->_Ptr->_Myval;

  00016	8d 50 08	 lea	 edx, DWORD PTR [eax+8]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 1227 : 		if (dwIndex == rSlot.dwSlotNumber)

  00019	74 0d		 je	 SHORT $LN36@GetSlotPoi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 165  :         this->_Ptr = this->_Ptr->_Next;

  0001b	8b 00		 mov	 eax, DWORD PTR [eax]

; 198  :         return this->_Ptr == _Right._Ptr;

  0001d	3b c1		 cmp	 eax, ecx
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 1223 : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  0001f	75 f2		 jne	 SHORT $LL18@GetSlotPoi
$LN3@GetSlotPoi:

; 1231 : 		}
; 1232 : 	}
; 1233 : 
; 1234 : 	return FALSE;

  00021	33 c0		 xor	 eax, eax
  00023	5e		 pop	 esi

; 1235 : }

  00024	5d		 pop	 ebp
  00025	c2 08 00	 ret	 8
$LN36@GetSlotPoi:

; 1228 : 		{
; 1229 : 			*ppSlot = &rSlot;

  00028	8b 45 0c	 mov	 eax, DWORD PTR _ppSlot$[ebp]
  0002b	5e		 pop	 esi
  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1230 : 			return TRUE;

  0002e	b8 01 00 00 00	 mov	 eax, 1

; 1235 : }

  00033	5d		 pop	 ebp
  00034	c2 08 00	 ret	 8
?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ENDP ; UI::CSlotWindow::GetSlotPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnUseSlot@CSlotWindow@UI@@IAEXXZ
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
?OnUseSlot@CSlotWindow@UI@@IAEXXZ PROC			; UI::CSlotWindow::OnUseSlot, COMDAT
; _this$ = ecx

; 927  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 928  : 	TSlot * pSlot;
; 929  : 	if (GetPickedSlotPointer(&pSlot))

  00007	8d 4d fc	 lea	 ecx, DWORD PTR _pSlot$[ebp]
  0000a	51		 push	 ecx
  0000b	8b ce		 mov	 ecx, esi
  0000d	8b 06		 mov	 eax, DWORD PTR [esi]
  0000f	ff 90 a4 00 00
	00		 call	 DWORD PTR [eax+164]
  00015	85 c0		 test	 eax, eax
  00017	74 28		 je	 SHORT $LN3@OnUseSlot

; 930  : 	if (pSlot->isItem)

  00019	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  0001c	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00020	74 1f		 je	 SHORT $LN3@OnUseSlot

; 931  : 	{
; 932  : 		PyCallClassMemberFunc(m_poHandler, "OnUseSlot", Py_BuildValue("(i)", pSlot->dwSlotNumber));

  00022	ff 70 04	 push	 DWORD PTR [eax+4]
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_03LIHNMIHG@?$CIi?$CJ@
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00030	50		 push	 eax
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_09HJIBPFCA@OnUseSlot@
  00036	ff 76 5c	 push	 DWORD PTR [esi+92]
  00039	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  0003e	83 c4 14	 add	 esp, 20			; 00000014H
$LN3@OnUseSlot:
  00041	5e		 pop	 esi

; 933  : 	}
; 934  : }

  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?OnUseSlot@CSlotWindow@UI@@IAEXXZ ENDP			; UI::CSlotWindow::OnUseSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnUnselectItemSlot@CSlotWindow@UI@@IAEXH@Z
_TEXT	SEGMENT
_iSlotNumber$ = 8					; size = 4
?OnUnselectItemSlot@CSlotWindow@UI@@IAEXH@Z PROC	; UI::CSlotWindow::OnUnselectItemSlot, COMDAT
; _this$ = ecx

; 923  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 924  : 	PyCallClassMemberFunc(m_poHandler, "OnUnselectItemSlot", Py_BuildValue("(i)", iSlotNumber));

  00004	ff 75 08	 push	 DWORD PTR _iSlotNumber$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_03LIHNMIHG@?$CIi?$CJ@
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00014	50		 push	 eax
  00015	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@EONLJJMO@OnUnselectItemSlot@
  0001a	ff 76 5c	 push	 DWORD PTR [esi+92]
  0001d	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00022	83 c4 14	 add	 esp, 20			; 00000014H
  00025	5e		 pop	 esi

; 925  : }

  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?OnUnselectItemSlot@CSlotWindow@UI@@IAEXH@Z ENDP	; UI::CSlotWindow::OnUnselectItemSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnUnselectEmptySlot@CSlotWindow@UI@@IAEXH@Z
_TEXT	SEGMENT
_iSlotNumber$ = 8					; size = 4
?OnUnselectEmptySlot@CSlotWindow@UI@@IAEXH@Z PROC	; UI::CSlotWindow::OnUnselectEmptySlot, COMDAT
; _this$ = ecx

; 919  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 920  : 	PyCallClassMemberFunc(m_poHandler, "OnUnselectEmptySlot", Py_BuildValue("(i)", iSlotNumber));

  00004	ff 75 08	 push	 DWORD PTR _iSlotNumber$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_03LIHNMIHG@?$CIi?$CJ@
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00014	50		 push	 eax
  00015	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@GMADJAFC@OnUnselectEmptySlot@
  0001a	ff 76 5c	 push	 DWORD PTR [esi+92]
  0001d	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00022	83 c4 14	 add	 esp, 20			; 00000014H
  00025	5e		 pop	 esi

; 921  : }

  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?OnUnselectEmptySlot@CSlotWindow@UI@@IAEXH@Z ENDP	; UI::CSlotWindow::OnUnselectEmptySlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnSelectItemSlot@CSlotWindow@UI@@IAEXH@Z
_TEXT	SEGMENT
_iSlotNumber$ = 8					; size = 4
?OnSelectItemSlot@CSlotWindow@UI@@IAEXH@Z PROC		; UI::CSlotWindow::OnSelectItemSlot, COMDAT
; _this$ = ecx

; 911  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 912  : //	OnOverOutItem();
; 913  : 	PyCallClassMemberFunc(m_poHandler, "OnSelectItemSlot", Py_BuildValue("(i)", iSlotNumber));

  00004	ff 75 08	 push	 DWORD PTR _iSlotNumber$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_03LIHNMIHG@?$CIi?$CJ@
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00014	50		 push	 eax
  00015	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@PFHJJJ@OnSelectItemSlot@
  0001a	ff 76 5c	 push	 DWORD PTR [esi+92]
  0001d	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc

; 914  : 
; 915  : 	if (UI::CWindowManager::Instance().IsAttaching())

  00022	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00028	83 c4 14	 add	 esp, 20			; 00000014H
  0002b	e8 00 00 00 00	 call	 ?IsAttaching@CWindowManager@UI@@QAEHXZ ; UI::CWindowManager::IsAttaching
  00030	85 c0		 test	 eax, eax
  00032	74 07		 je	 SHORT $LN2@OnSelectIt

; 916  : 		OnOverOutItem();

  00034	8b ce		 mov	 ecx, esi
  00036	e8 00 00 00 00	 call	 ?OnOverOutItem@CSlotWindow@UI@@QAEXXZ ; UI::CSlotWindow::OnOverOutItem
$LN2@OnSelectIt:
  0003b	5e		 pop	 esi

; 917  : }

  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
?OnSelectItemSlot@CSlotWindow@UI@@IAEXH@Z ENDP		; UI::CSlotWindow::OnSelectItemSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnSelectEmptySlot@CSlotWindow@UI@@IAEXH@Z
_TEXT	SEGMENT
_iSlotNumber$ = 8					; size = 4
?OnSelectEmptySlot@CSlotWindow@UI@@IAEXH@Z PROC		; UI::CSlotWindow::OnSelectEmptySlot, COMDAT
; _this$ = ecx

; 907  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 908  : 	PyCallClassMemberFunc(m_poHandler, "OnSelectEmptySlot", Py_BuildValue("(i)", iSlotNumber));

  00004	ff 75 08	 push	 DWORD PTR _iSlotNumber$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_03LIHNMIHG@?$CIi?$CJ@
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00014	50		 push	 eax
  00015	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@JJECHKOF@OnSelectEmptySlot@
  0001a	ff 76 5c	 push	 DWORD PTR [esi+92]
  0001d	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00022	83 c4 14	 add	 esp, 20			; 00000014H
  00025	5e		 pop	 esi

; 909  : }

  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?OnSelectEmptySlot@CSlotWindow@UI@@IAEXH@Z ENDP		; UI::CSlotWindow::OnSelectEmptySlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnRenderSelectedSlot@CSlotWindow@UI@@MAEXXZ
_TEXT	SEGMENT
_this$1$ = -12						; size = 4
tv378 = -8						; size = 4
_pSlot$1 = -4						; size = 4
?OnRenderSelectedSlot@CSlotWindow@UI@@MAEXXZ PROC	; UI::CSlotWindow::OnRenderSelectedSlot, COMDAT
; _this$ = ecx

; 1183 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	8b d9		 mov	 ebx, ecx
  00009	56		 push	 esi
  0000a	89 5d f4	 mov	 DWORD PTR _this$1$[ebp], ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1090 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  0000d	8b 83 84 00 00
	00		 mov	 eax, DWORD PTR [ebx+132]

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00013	8b 30		 mov	 esi, DWORD PTR [eax]
  00015	3b f0		 cmp	 esi, eax
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 1185 : 	for (; itor != m_dwSelectedSlotIndexList.end(); ++itor)

  00017	0f 84 c4 00 00
	00		 je	 $LN3@OnRenderSe
  0001d	57		 push	 edi
  0001e	66 90		 npad	 2
$LL18@OnRenderSe:

; 1186 : 	{
; 1187 : 		TSlot * pSlot;
; 1188 : 		if (!GetSlotPointer(*itor, &pSlot))

  00020	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$1[ebp]
  00023	8b cb		 mov	 ecx, ebx
  00025	50		 push	 eax
  00026	ff 76 08	 push	 DWORD PTR [esi+8]
  00029	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  0002e	85 c0		 test	 eax, eax
  00030	0f 84 9c 00 00
	00		 je	 $LN2@OnRenderSe

; 1189 : 			continue;
; 1190 : 
; 1191 : 		CPythonGraphic::Instance().SetDiffuseColor(1.0f, 1.0f, 1.0f, 0.5f);

  00036	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  0003c	83 ec 10	 sub	 esp, 16			; 00000010H
  0003f	c7 44 24 0c 00
	00 00 3f	 mov	 DWORD PTR [esp+12], 1056964608 ; 3f000000H
  00047	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  0004f	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00057	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  0005e	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXMMMM@Z ; CScreen::SetDiffuseColor

; 1192 : 		CPythonGraphic::Instance().RenderBar2d(m_rect.left + pSlot->ixPosition,

  00063	8b 4d fc	 mov	 ecx, DWORD PTR _pSlot$1[ebp]
  00066	83 ec 14	 sub	 esp, 20			; 00000014H
  00069	8b 53 38	 mov	 edx, DWORD PTR [ebx+56]
  0006c	8b 5b 34	 mov	 ebx, DWORD PTR [ebx+52]
  0006f	8b 41 3c	 mov	 eax, DWORD PTR [ecx+60]
  00072	8b 79 34	 mov	 edi, DWORD PTR [ecx+52]
  00075	03 c2		 add	 eax, edx
  00077	03 c7		 add	 eax, edi
  00079	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  00081	66 0f 6e c0	 movd	 xmm0, eax
  00085	8b 41 38	 mov	 eax, DWORD PTR [ecx+56]
  00088	8b 49 30	 mov	 ecx, DWORD PTR [ecx+48]
  0008b	03 c3		 add	 eax, ebx
  0008d	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00090	03 c1		 add	 eax, ecx
  00092	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00098	66 0f 6e c0	 movd	 xmm0, eax
  0009c	8d 04 3a	 lea	 eax, DWORD PTR [edx+edi]
  0009f	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000a2	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  000a8	66 0f 6e c0	 movd	 xmm0, eax
  000ac	8d 04 0b	 lea	 eax, DWORD PTR [ebx+ecx]
  000af	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  000b5	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000b8	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000be	66 0f 6e c0	 movd	 xmm0, eax
  000c2	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000c5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ca	e8 00 00 00 00	 call	 ?RenderBar2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderBar2d
  000cf	8b 5d f4	 mov	 ebx, DWORD PTR _this$1$[ebp]
$LN2@OnRenderSe:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 165  :         this->_Ptr = this->_Ptr->_Next;

  000d2	8b 36		 mov	 esi, DWORD PTR [esi]

; 198  :         return this->_Ptr == _Right._Ptr;

  000d4	3b b3 84 00 00
	00		 cmp	 esi, DWORD PTR [ebx+132]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 1185 : 	for (; itor != m_dwSelectedSlotIndexList.end(); ++itor)

  000da	0f 85 40 ff ff
	ff		 jne	 $LL18@OnRenderSe
  000e0	5f		 pop	 edi
$LN3@OnRenderSe:
  000e1	5e		 pop	 esi

; 1193 : 												m_rect.top + pSlot->iyPosition,
; 1194 : 												m_rect.left + pSlot->ixPosition + pSlot->ixCellSize,
; 1195 : 												m_rect.top + pSlot->iyPosition + pSlot->iyCellSize);
; 1196 : 	}
; 1197 : }

  000e2	5b		 pop	 ebx
  000e3	8b e5		 mov	 esp, ebp
  000e5	5d		 pop	 ebp
  000e6	c3		 ret	 0
?OnRenderSelectedSlot@CSlotWindow@UI@@MAEXXZ ENDP	; UI::CSlotWindow::OnRenderSelectedSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnRenderPickingSlot@CSlotWindow@UI@@MAEXXZ
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
?OnRenderPickingSlot@CSlotWindow@UI@@MAEXXZ PROC	; UI::CSlotWindow::OnRenderPickingSlot, COMDAT
; _this$ = ecx

; 1167 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	57		 push	 edi
  00005	8b f9		 mov	 edi, ecx

; 1168 : 	if (!UI::CWindowManager::Instance().IsAttaching())

  00007	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  0000d	e8 00 00 00 00	 call	 ?IsAttaching@CWindowManager@UI@@QAEHXZ ; UI::CWindowManager::IsAttaching
  00012	85 c0		 test	 eax, eax
  00014	0f 84 b0 00 00
	00		 je	 $LN1@OnRenderPi

; 1169 : 		return;
; 1170 : 
; 1171 : 	TSlot * pSlot;
; 1172 : 	if (!GetSelectedSlotPointer(&pSlot))

  0001a	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  0001d	8b cf		 mov	 ecx, edi
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ?GetSelectedSlotPointer@CSlotWindow@UI@@IAEHPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSelectedSlotPointer
  00025	85 c0		 test	 eax, eax
  00027	0f 84 9d 00 00
	00		 je	 $LN1@OnRenderPi

; 1173 : 		return;
; 1174 : 
; 1175 : 	CPythonGraphic::Instance().SetDiffuseColor(1.0f, 1.0f, 1.0f, 0.5f);

  0002d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  00033	53		 push	 ebx
  00034	56		 push	 esi
  00035	83 ec 10	 sub	 esp, 16			; 00000010H
  00038	c7 44 24 0c 00
	00 00 3f	 mov	 DWORD PTR [esp+12], 1056964608 ; 3f000000H
  00040	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00048	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00050	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00057	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXMMMM@Z ; CScreen::SetDiffuseColor

; 1176 : 	CPythonGraphic::Instance().RenderBar2d(m_rect.left + pSlot->ixPosition,

  0005c	8b 4d fc	 mov	 ecx, DWORD PTR _pSlot$[ebp]
  0005f	83 ec 14	 sub	 esp, 20			; 00000014H
  00062	8b 57 38	 mov	 edx, DWORD PTR [edi+56]
  00065	8b 7f 34	 mov	 edi, DWORD PTR [edi+52]
  00068	8b 41 3c	 mov	 eax, DWORD PTR [ecx+60]
  0006b	8b 71 34	 mov	 esi, DWORD PTR [ecx+52]
  0006e	03 c2		 add	 eax, edx
  00070	8b 59 30	 mov	 ebx, DWORD PTR [ecx+48]
  00073	03 c6		 add	 eax, esi
  00075	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  0007d	66 0f 6e c0	 movd	 xmm0, eax
  00081	8b 41 38	 mov	 eax, DWORD PTR [ecx+56]
  00084	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00087	03 c7		 add	 eax, edi
  00089	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  0008f	03 c3		 add	 eax, ebx
  00091	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00097	66 0f 6e c0	 movd	 xmm0, eax
  0009b	8d 04 32	 lea	 eax, DWORD PTR [edx+esi]
  0009e	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000a1	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  000a7	66 0f 6e c0	 movd	 xmm0, eax
  000ab	8d 04 1f	 lea	 eax, DWORD PTR [edi+ebx]
  000ae	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000b1	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000b7	66 0f 6e c0	 movd	 xmm0, eax
  000bb	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000be	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c3	e8 00 00 00 00	 call	 ?RenderBar2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderBar2d
  000c8	5e		 pop	 esi
  000c9	5b		 pop	 ebx
$LN1@OnRenderPi:
  000ca	5f		 pop	 edi

; 1177 : 											m_rect.top + pSlot->iyPosition,
; 1178 : 											m_rect.left + pSlot->ixPosition + pSlot->ixCellSize,
; 1179 : 											m_rect.top + pSlot->iyPosition + pSlot->iyCellSize);
; 1180 : }

  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c3		 ret	 0
?OnRenderPickingSlot@CSlotWindow@UI@@MAEXXZ ENDP	; UI::CSlotWindow::OnRenderPickingSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?RenderLockedSlot@CSlotWindow@UI@@IAEXXZ
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
?RenderLockedSlot@CSlotWindow@UI@@IAEXXZ PROC		; UI::CSlotWindow::RenderLockedSlot, COMDAT
; _this$ = ecx

; 1200 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1201 : 	CPythonGraphic::Instance().SetDiffuseColor(0.0f, 0.0f, 0.0f, 0.5f);

  00006	83 ec 10	 sub	 esp, 16			; 00000010H
  00009	8b f9		 mov	 edi, ecx
  0000b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  00011	89 7d fc	 mov	 DWORD PTR _this$1$[ebp], edi
  00014	c7 44 24 0c 00
	00 00 3f	 mov	 DWORD PTR [esp+12], 1056964608 ; 3f000000H
  0001c	c7 44 24 08 00
	00 00 00	 mov	 DWORD PTR [esp+8], 0
  00024	c7 44 24 04 00
	00 00 00	 mov	 DWORD PTR [esp+4], 0
  0002c	c7 04 24 00 00
	00 00		 mov	 DWORD PTR [esp], 0
  00033	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXMMMM@Z ; CScreen::SetDiffuseColor
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1090 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00038	8b 87 8c 00 00
	00		 mov	 eax, DWORD PTR [edi+140]

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0003e	8b 30		 mov	 esi, DWORD PTR [eax]
  00040	3b f0		 cmp	 esi, eax
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 1202 : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  00042	0f 84 8f 00 00
	00		 je	 $LN3@RenderLock
  00048	53		 push	 ebx
  00049	0f 1f 80 00 00
	00 00		 npad	 7
$LL19@RenderLock:

; 1203 : 	{
; 1204 : 		TSlot & rSlot = *itor;
; 1205 : 
; 1206 : 		if (!rSlot.isItem)

  00050	83 7e 18 00	 cmp	 DWORD PTR [esi+24], 0
  00054	74 72		 je	 SHORT $LN2@RenderLock

; 1207 : 			continue;
; 1208 : 
; 1209 : 		if (rSlot.dwState & SLOT_STATE_LOCK)

  00056	f6 46 08 01	 test	 BYTE PTR [esi+8], 1
  0005a	74 6c		 je	 SHORT $LN2@RenderLock

; 1210 : 		{
; 1211 : 			CPythonGraphic::Instance().RenderBar2d(m_rect.left + rSlot.ixPosition,

  0005c	8b 4f 38	 mov	 ecx, DWORD PTR [edi+56]
  0005f	83 ec 14	 sub	 esp, 20			; 00000014H
  00062	8b 46 44	 mov	 eax, DWORD PTR [esi+68]
  00065	8b 56 3c	 mov	 edx, DWORD PTR [esi+60]
  00068	03 c1		 add	 eax, ecx
  0006a	8b 7f 34	 mov	 edi, DWORD PTR [edi+52]
  0006d	03 c2		 add	 eax, edx
  0006f	8b 5e 38	 mov	 ebx, DWORD PTR [esi+56]
  00072	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  0007a	66 0f 6e c0	 movd	 xmm0, eax
  0007e	8b 46 40	 mov	 eax, DWORD PTR [esi+64]
  00081	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00084	03 c7		 add	 eax, edi
  00086	03 c3		 add	 eax, ebx
  00088	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  0008e	66 0f 6e c0	 movd	 xmm0, eax
  00092	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
  00095	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  0009b	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0009e	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  000a4	66 0f 6e c0	 movd	 xmm0, eax
  000a8	8d 04 1f	 lea	 eax, DWORD PTR [edi+ebx]
  000ab	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000ae	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000b4	66 0f 6e c0	 movd	 xmm0, eax
  000b8	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000bb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c0	e8 00 00 00 00	 call	 ?RenderBar2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderBar2d
  000c5	8b 7d fc	 mov	 edi, DWORD PTR _this$1$[ebp]
$LN2@RenderLock:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 165  :         this->_Ptr = this->_Ptr->_Next;

  000c8	8b 36		 mov	 esi, DWORD PTR [esi]

; 198  :         return this->_Ptr == _Right._Ptr;

  000ca	3b b7 8c 00 00
	00		 cmp	 esi, DWORD PTR [edi+140]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 1202 : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  000d0	0f 85 7a ff ff
	ff		 jne	 $LL19@RenderLock
  000d6	5b		 pop	 ebx
$LN3@RenderLock:
  000d7	5f		 pop	 edi

; 1212 : 												   m_rect.top  + rSlot.iyPosition,
; 1213 : 												   m_rect.left + rSlot.ixPosition + rSlot.ixCellSize,
; 1214 : 												   m_rect.top  + rSlot.iyPosition + rSlot.iyCellSize);
; 1215 : 		}
; 1216 : 	}
; 1217 : }

  000d8	5e		 pop	 esi
  000d9	8b e5		 mov	 esp, ebp
  000db	5d		 pop	 ebp
  000dc	c3		 ret	 0
?RenderLockedSlot@CSlotWindow@UI@@IAEXXZ ENDP		; UI::CSlotWindow::RenderLockedSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?RenderSlotBaseImage@CSlotWindow@UI@@IAEXXZ
_TEXT	SEGMENT
?RenderSlotBaseImage@CSlotWindow@UI@@IAEXXZ PROC	; UI::CSlotWindow::RenderSlotBaseImage, COMDAT
; _this$ = ecx

; 1150 : {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 1151 : 	if (!m_pBaseImageInstance)

  00003	83 bf a0 00 00
	00 00		 cmp	 DWORD PTR [edi+160], 0
  0000a	74 63		 je	 SHORT $LN3@RenderSlot
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1090 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  0000c	8b 87 8c 00 00
	00		 mov	 eax, DWORD PTR [edi+140]
  00012	56		 push	 esi

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00013	8b 30		 mov	 esi, DWORD PTR [eax]
  00015	3b f0		 cmp	 esi, eax
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 1154 : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  00017	74 55		 je	 SHORT $LN43@RenderSlot
  00019	0f 1f 80 00 00
	00 00		 npad	 7
$LL42@RenderSlot:

; 1155 : 	{
; 1156 : 		TSlot & rSlot = *itor;
; 1157 : 
; 1158 : 		if (!rSlot.bRenderBaseSlotImage)

  00020	80 7e 54 00	 cmp	 BYTE PTR [esi+84], 0
  00024	74 3e		 je	 SHORT $LN2@RenderSlot

; 1159 : 			continue;
; 1160 : 
; 1161 : 		m_pBaseImageInstance->SetPosition(m_rect.left + rSlot.ixPosition, m_rect.top + rSlot.iyPosition);

  00026	8b 46 3c	 mov	 eax, DWORD PTR [esi+60]
  00029	83 ec 08	 sub	 esp, 8
  0002c	03 47 38	 add	 eax, DWORD PTR [edi+56]
  0002f	8b 8f a0 00 00
	00		 mov	 ecx, DWORD PTR [edi+160]
  00035	66 0f 6e c0	 movd	 xmm0, eax
  00039	8b 46 38	 mov	 eax, DWORD PTR [esi+56]
  0003c	03 47 34	 add	 eax, DWORD PTR [edi+52]
  0003f	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00042	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00048	66 0f 6e c0	 movd	 xmm0, eax
  0004c	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0004f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00054	e8 00 00 00 00	 call	 ?SetPosition@CGraphicImageInstance@@QAEXMM@Z ; CGraphicImageInstance::SetPosition

; 1162 : 		m_pBaseImageInstance->Render();

  00059	8b 8f a0 00 00
	00		 mov	 ecx, DWORD PTR [edi+160]
  0005f	e8 00 00 00 00	 call	 ?Render@CGraphicImageInstance@@QAEXXZ ; CGraphicImageInstance::Render
$LN2@RenderSlot:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 165  :         this->_Ptr = this->_Ptr->_Next;

  00064	8b 36		 mov	 esi, DWORD PTR [esi]

; 198  :         return this->_Ptr == _Right._Ptr;

  00066	3b b7 8c 00 00
	00		 cmp	 esi, DWORD PTR [edi+140]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 1154 : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  0006c	75 b2		 jne	 SHORT $LL42@RenderSlot
$LN43@RenderSlot:
  0006e	5e		 pop	 esi
$LN3@RenderSlot:
  0006f	5f		 pop	 edi

; 1163 : 	}
; 1164 : }

  00070	c3		 ret	 0
?RenderSlotBaseImage@CSlotWindow@UI@@IAEXXZ ENDP	; UI::CSlotWindow::RenderSlotBaseImage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseOver@CSlotWindow@UI@@MAEXXZ
_TEXT	SEGMENT
_pSlot$1 = -4						; size = 4
?OnMouseOver@CSlotWindow@UI@@MAEXXZ PROC		; UI::CSlotWindow::OnMouseOver, COMDAT
; _this$ = ecx

; 887  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 888  : //	if (UI::CWindowManager::Instance().IsCapture())
; 889  : //	if (!UI::CWindowManager::Instance().IsAttaching())
; 890  : //		return;
; 891  : 
; 892  : 	CWindow * pPointWindow = UI::CWindowManager::Instance().GetPointWindow();
; 893  : 	if (this == pPointWindow)

  00004	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00009	56		 push	 esi
  0000a	8b f1		 mov	 esi, ecx
  0000c	3b 70 64	 cmp	 esi, DWORD PTR [eax+100]
  0000f	75 23		 jne	 SHORT $LN4@OnMouseOve

; 894  : 	{
; 895  : 		TSlot * pSlot;
; 896  : 		if (GetPickedSlotPointer(&pSlot))

  00011	8b 06		 mov	 eax, DWORD PTR [esi]
  00013	8d 4d fc	 lea	 ecx, DWORD PTR _pSlot$1[ebp]
  00016	51		 push	 ecx
  00017	8b ce		 mov	 ecx, esi
  00019	ff 90 a4 00 00
	00		 call	 DWORD PTR [eax+164]
  0001f	85 c0		 test	 eax, eax
  00021	74 11		 je	 SHORT $LN4@OnMouseOve

; 897  : 		{
; 898  : 			if (OnOverInItem(pSlot->dwSlotNumber))

  00023	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$1[ebp]
  00026	8b ce		 mov	 ecx, esi
  00028	ff 70 04	 push	 DWORD PTR [eax+4]
  0002b	e8 00 00 00 00	 call	 ?OnOverInItem@CSlotWindow@UI@@QAEHK@Z ; UI::CSlotWindow::OnOverInItem
  00030	85 c0		 test	 eax, eax
  00032	75 07		 jne	 SHORT $LN1@OnMouseOve
$LN4@OnMouseOve:

; 899  : 				return;
; 900  : 		}
; 901  : 	}
; 902  : 
; 903  : 	OnOverOutItem();

  00034	8b ce		 mov	 ecx, esi
  00036	e8 00 00 00 00	 call	 ?OnOverOutItem@CSlotWindow@UI@@QAEXXZ ; UI::CSlotWindow::OnOverOutItem
$LN1@OnMouseOve:
  0003b	5e		 pop	 esi

; 904  : }

  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
?OnMouseOver@CSlotWindow@UI@@MAEXXZ ENDP		; UI::CSlotWindow::OnMouseOver
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseOverOut@CSlotWindow@UI@@MAEXXZ
_TEXT	SEGMENT
?OnMouseOverOut@CSlotWindow@UI@@MAEXXZ PROC		; UI::CSlotWindow::OnMouseOverOut, COMDAT
; _this$ = ecx

; 883  : 	OnOverOutItem();

  00000	e9 00 00 00 00	 jmp	 ?OnOverOutItem@CSlotWindow@UI@@QAEXXZ ; UI::CSlotWindow::OnOverOutItem
?OnMouseOverOut@CSlotWindow@UI@@MAEXXZ ENDP		; UI::CSlotWindow::OnMouseOverOut
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseLeftButtonDoubleClick@CSlotWindow@UI@@MAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonDoubleClick@CSlotWindow@UI@@MAEHXZ PROC ; UI::CSlotWindow::OnMouseLeftButtonDoubleClick, COMDAT
; _this$ = ecx

; 876  : 	OnUseSlot();

  00000	e8 00 00 00 00	 call	 ?OnUseSlot@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::OnUseSlot

; 877  : 
; 878  : 	return TRUE;

  00005	b8 01 00 00 00	 mov	 eax, 1

; 879  : }

  0000a	c3		 ret	 0
?OnMouseLeftButtonDoubleClick@CSlotWindow@UI@@MAEHXZ ENDP ; UI::CSlotWindow::OnMouseLeftButtonDoubleClick
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseRightButtonDown@CSlotWindow@UI@@MAEHXZ
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
?OnMouseRightButtonDown@CSlotWindow@UI@@MAEHXZ PROC	; UI::CSlotWindow::OnMouseRightButtonDown, COMDAT
; _this$ = ecx

; 857  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 858  : 	TSlot * pSlot;
; 859  : 	if (!GetPickedSlotPointer(&pSlot))

  00007	8d 4d fc	 lea	 ecx, DWORD PTR _pSlot$[ebp]
  0000a	51		 push	 ecx
  0000b	8b ce		 mov	 ecx, esi
  0000d	8b 06		 mov	 eax, DWORD PTR [esi]
  0000f	ff 90 a4 00 00
	00		 call	 DWORD PTR [eax+164]
  00015	85 c0		 test	 eax, eax
  00017	74 22		 je	 SHORT $LN7@OnMouseRig

; 860  : 		return TRUE;
; 861  : 
; 862  : 	if (pSlot->isItem)

  00019	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  0001c	8b ce		 mov	 ecx, esi
  0001e	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00022	ff 70 04	 push	 DWORD PTR [eax+4]
  00025	74 0f		 je	 SHORT $LN3@OnMouseRig

; 863  : 	{
; 864  : 		OnUnselectItemSlot(pSlot->dwSlotNumber);

  00027	e8 00 00 00 00	 call	 ?OnUnselectItemSlot@CSlotWindow@UI@@IAEXH@Z ; UI::CSlotWindow::OnUnselectItemSlot

; 869  : 	}
; 870  : 
; 871  : 	return TRUE;
; 872  : }

  0002c	b8 01 00 00 00	 mov	 eax, 1
  00031	5e		 pop	 esi
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c3		 ret	 0
$LN3@OnMouseRig:

; 865  : 	}
; 866  : 	else
; 867  : 	{
; 868  : 		OnUnselectEmptySlot(pSlot->dwSlotNumber);

  00036	e8 00 00 00 00	 call	 ?OnUnselectEmptySlot@CSlotWindow@UI@@IAEXH@Z ; UI::CSlotWindow::OnUnselectEmptySlot
$LN7@OnMouseRig:

; 869  : 	}
; 870  : 
; 871  : 	return TRUE;
; 872  : }

  0003b	b8 01 00 00 00	 mov	 eax, 1
  00040	5e		 pop	 esi
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
?OnMouseRightButtonDown@CSlotWindow@UI@@MAEHXZ ENDP	; UI::CSlotWindow::OnMouseRightButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseLeftButtonUp@CSlotWindow@UI@@MAEHXZ
_TEXT	SEGMENT
_pSlot$1 = -4						; size = 4
?OnMouseLeftButtonUp@CSlotWindow@UI@@MAEHXZ PROC	; UI::CSlotWindow::OnMouseLeftButtonUp, COMDAT
; _this$ = ecx

; 823  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 824  : 	if (UI::CWindowManager::Instance().IsAttaching())

  00007	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  0000d	e8 00 00 00 00	 call	 ?IsAttaching@CWindowManager@UI@@QAEHXZ ; UI::CWindowManager::IsAttaching
  00012	85 c0		 test	 eax, eax
  00014	0f 84 8a 00 00
	00		 je	 $LN4@OnMouseLef

; 825  : 	if (UI::CWindowManager::Instance().IsDragging())

  0001a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00020	e8 00 00 00 00	 call	 ?IsDragging@CWindowManager@UI@@QAEHXZ ; UI::CWindowManager::IsDragging
  00025	85 c0		 test	 eax, eax
  00027	74 7b		 je	 SHORT $LN4@OnMouseLef

; 826  : 	if (IsIn())

  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?IsIn@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsIn
  00030	84 c0		 test	 al, al
  00032	74 70		 je	 SHORT $LN4@OnMouseLef

; 827  : 	{
; 828  : 		UI::CWindow * pWin = UI::CWindowManager::Instance().GetPointWindow();

  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00039	8b 70 64	 mov	 esi, DWORD PTR [eax+100]

; 829  : 
; 830  : 		if (pWin)

  0003c	85 f6		 test	 esi, esi
  0003e	74 64		 je	 SHORT $LN4@OnMouseLef

; 831  : 		if (pWin->IsType(UI::CSlotWindow::Type()))

  00040	e8 00 00 00 00	 call	 ?Type@CSlotWindow@UI@@SAKXZ ; UI::CSlotWindow::Type
  00045	50		 push	 eax
  00046	8b ce		 mov	 ecx, esi
  00048	e8 00 00 00 00	 call	 ?IsType@CWindow@UI@@QAEHK@Z ; UI::CWindow::IsType
  0004d	85 c0		 test	 eax, eax
  0004f	74 53		 je	 SHORT $LN4@OnMouseLef

; 832  : 		{
; 833  : 			UI::CSlotWindow * pSlotWin = (UI::CSlotWindow *)pWin;
; 834  : 
; 835  : 			TSlot * pSlot;
; 836  : 			if (!pSlotWin->GetPickedSlotPointer(&pSlot))

  00051	8b 06		 mov	 eax, DWORD PTR [esi]
  00053	8d 4d fc	 lea	 ecx, DWORD PTR _pSlot$1[ebp]
  00056	51		 push	 ecx
  00057	8b ce		 mov	 ecx, esi
  00059	ff 90 a4 00 00
	00		 call	 DWORD PTR [eax+164]
  0005f	85 c0		 test	 eax, eax
  00061	75 15		 jne	 SHORT $LN7@OnMouseLef

; 837  : 			{
; 838  : 				UI::CWindowManager::Instance().DeattachIcon();

  00063	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00069	e8 00 00 00 00	 call	 ?DeattachIcon@CWindowManager@UI@@QAEXXZ ; UI::CWindowManager::DeattachIcon

; 839  : 				return TRUE;

  0006e	b8 01 00 00 00	 mov	 eax, 1
  00073	5e		 pop	 esi

; 854  : }

  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c3		 ret	 0
$LN7@OnMouseLef:

; 840  : 			}
; 841  : 
; 842  : 			if (pSlot->isItem)

  00078	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$1[ebp]
  0007b	8b ce		 mov	 ecx, esi
  0007d	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00081	ff 70 04	 push	 DWORD PTR [eax+4]
  00084	74 0f		 je	 SHORT $LN8@OnMouseLef

; 843  : 				pSlotWin->OnSelectItemSlot(pSlot->dwSlotNumber);

  00086	e8 00 00 00 00	 call	 ?OnSelectItemSlot@CSlotWindow@UI@@IAEXH@Z ; UI::CSlotWindow::OnSelectItemSlot

; 846  : 
; 847  : 			return TRUE;

  0008b	b8 01 00 00 00	 mov	 eax, 1
  00090	5e		 pop	 esi

; 854  : }

  00091	8b e5		 mov	 esp, ebp
  00093	5d		 pop	 ebp
  00094	c3		 ret	 0
$LN8@OnMouseLef:

; 844  : 			else
; 845  : 				pSlotWin->OnSelectEmptySlot(pSlot->dwSlotNumber);

  00095	e8 00 00 00 00	 call	 ?OnSelectEmptySlot@CSlotWindow@UI@@IAEXH@Z ; UI::CSlotWindow::OnSelectEmptySlot

; 846  : 
; 847  : 			return TRUE;

  0009a	b8 01 00 00 00	 mov	 eax, 1
  0009f	5e		 pop	 esi

; 854  : }

  000a0	8b e5		 mov	 esp, ebp
  000a2	5d		 pop	 ebp
  000a3	c3		 ret	 0
$LN4@OnMouseLef:

; 848  : 		}
; 849  : 
; 850  : 		return FALSE;
; 851  : 	}
; 852  : 
; 853  : 	return FALSE;

  000a4	33 c0		 xor	 eax, eax
  000a6	5e		 pop	 esi

; 854  : }

  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c3		 ret	 0
?OnMouseLeftButtonUp@CSlotWindow@UI@@MAEHXZ ENDP	; UI::CSlotWindow::OnMouseLeftButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnMouseLeftButtonDown@CSlotWindow@UI@@MAEHXZ
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
?OnMouseLeftButtonDown@CSlotWindow@UI@@MAEHXZ PROC	; UI::CSlotWindow::OnMouseLeftButtonDown, COMDAT
; _this$ = ecx

; 802  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 803  : 	TSlot * pSlot;
; 804  : 	if (!GetPickedSlotPointer(&pSlot))

  00007	8d 4d fc	 lea	 ecx, DWORD PTR _pSlot$[ebp]
  0000a	51		 push	 ecx
  0000b	8b ce		 mov	 ecx, esi
  0000d	8b 06		 mov	 eax, DWORD PTR [esi]
  0000f	ff 90 a4 00 00
	00		 call	 DWORD PTR [eax+164]
  00015	85 c0		 test	 eax, eax
  00017	75 15		 jne	 SHORT $LN2@OnMouseLef

; 805  : 	{
; 806  : 		UI::CWindowManager::Instance().DeattachIcon();

  00019	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  0001f	e8 00 00 00 00	 call	 ?DeattachIcon@CWindowManager@UI@@QAEXXZ ; UI::CWindowManager::DeattachIcon

; 817  : 	}
; 818  : 
; 819  : 	return TRUE;
; 820  : }

  00024	b8 01 00 00 00	 mov	 eax, 1
  00029	5e		 pop	 esi
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
$LN2@OnMouseLef:

; 807  : 		return TRUE;
; 808  : 	}
; 809  : 
; 810  : 	if (pSlot->isItem && !(pSlot->dwState & SLOT_STATE_LOCK))

  0002e	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00031	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00035	74 19		 je	 SHORT $LN3@OnMouseLef
  00037	f6 00 01	 test	 BYTE PTR [eax], 1
  0003a	75 14		 jne	 SHORT $LN3@OnMouseLef

; 811  : 	{
; 812  : 		OnSelectItemSlot(pSlot->dwSlotNumber);

  0003c	ff 70 04	 push	 DWORD PTR [eax+4]
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?OnSelectItemSlot@CSlotWindow@UI@@IAEXH@Z ; UI::CSlotWindow::OnSelectItemSlot

; 817  : 	}
; 818  : 
; 819  : 	return TRUE;
; 820  : }

  00046	b8 01 00 00 00	 mov	 eax, 1
  0004b	5e		 pop	 esi
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c3		 ret	 0
$LN3@OnMouseLef:

; 813  : 	}
; 814  : 	else
; 815  : 	{
; 816  : 		OnSelectEmptySlot(pSlot->dwSlotNumber);

  00050	ff 70 04	 push	 DWORD PTR [eax+4]
  00053	8b ce		 mov	 ecx, esi
  00055	e8 00 00 00 00	 call	 ?OnSelectEmptySlot@CSlotWindow@UI@@IAEXH@Z ; UI::CSlotWindow::OnSelectEmptySlot

; 817  : 	}
; 818  : 
; 819  : 	return TRUE;
; 820  : }

  0005a	b8 01 00 00 00	 mov	 eax, 1
  0005f	5e		 pop	 esi
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c3		 ret	 0
?OnMouseLeftButtonDown@CSlotWindow@UI@@MAEHXZ ENDP	; UI::CSlotWindow::OnMouseLeftButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterBase\Stl.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnRender@CSlotWindow@UI@@MAEXXZ
_TEXT	SEGMENT
_fcurTime$1 = -16					; size = 4
_this$1$ = -12						; size = 4
$T2 = -8						; size = 4
$T3 = -4						; size = 4
?OnRender@CSlotWindow@UI@@MAEXXZ PROC			; UI::CSlotWindow::OnRender, COMDAT
; _this$ = ecx

; 1001 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx
  0000b	89 7d f4	 mov	 DWORD PTR _this$1$[ebp], edi

; 1002 : 	RenderSlotBaseImage();

  0000e	e8 00 00 00 00	 call	 ?RenderSlotBaseImage@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::RenderSlotBaseImage

; 1003 : 
; 1004 : 	switch (m_dwSlotStyle)

  00013	8b 87 80 00 00
	00		 mov	 eax, DWORD PTR [edi+128]
  00019	83 e8 01	 sub	 eax, 1
  0001c	74 11		 je	 SHORT $LN7@OnRender
  0001e	83 e8 01	 sub	 eax, 1
  00021	75 16		 jne	 SHORT $LN2@OnRender

; 1008 : 			break;
; 1009 : 		case SLOT_STYLE_SELECT:
; 1010 : 			OnRenderSelectedSlot();

  00023	8b 07		 mov	 eax, DWORD PTR [edi]
  00025	8b cf		 mov	 ecx, edi
  00027	ff 90 a0 00 00
	00		 call	 DWORD PTR [eax+160]
  0002d	eb 0a		 jmp	 SHORT $LN2@OnRender
$LN7@OnRender:

; 1005 : 	{
; 1006 : 		case SLOT_STYLE_PICK_UP:
; 1007 : 			OnRenderPickingSlot();

  0002f	8b 07		 mov	 eax, DWORD PTR [edi]
  00031	8b cf		 mov	 ecx, edi
  00033	ff 90 9c 00 00
	00		 call	 DWORD PTR [eax+156]
$LN2@OnRender:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00039	8b 5f 64	 mov	 ebx, DWORD PTR [edi+100]
  0003c	8b 33		 mov	 esi, DWORD PTR [ebx]

; 73   :         return _Ptr == _Right._Ptr;

  0003e	3b f3		 cmp	 esi, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00040	74 0e		 je	 SHORT $LN76@OnRender
$LL160@OnRender:
; File C:\Marty 5.5\Src-Client\Client\eterBase\Stl.h

; 59   : 		{((_P->*_Ptr)()); }

  00042	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00045	e8 00 00 00 00	 call	 ??_9CWindow@UI@@$B3AE	; UI::CWindow::`vcall'{4}'
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 51   :         _Ptr = _Ptr->_Next;

  0004a	8b 36		 mov	 esi, DWORD PTR [esi]

; 73   :         return _Ptr == _Right._Ptr;

  0004c	3b f3		 cmp	 esi, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  0004e	75 f2		 jne	 SHORT $LL160@OnRender
$LN76@OnRender:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1090 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00050	8b 87 8c 00 00
	00		 mov	 eax, DWORD PTR [edi+140]

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00056	8b 30		 mov	 esi, DWORD PTR [eax]
  00058	3b f0		 cmp	 esi, eax
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 1035 : 	for (itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  0005a	0f 84 99 03 00
	00		 je	 $LN5@OnRender
$LL161@OnRender:

; 1039 : 		if (rSlot.pSlotButton)

  00060	8b 56 5c	 mov	 edx, DWORD PTR [esi+92]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 151  :         return this->_Ptr->_Myval;

  00063	8d 5e 08	 lea	 ebx, DWORD PTR [esi+8]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 1039 : 		if (rSlot.pSlotButton)

  00066	8d 43 34	 lea	 eax, DWORD PTR [ebx+52]
  00069	89 45 fc	 mov	 DWORD PTR $T3[ebp], eax
  0006c	8d 4b 30	 lea	 ecx, DWORD PTR [ebx+48]
  0006f	89 4d f8	 mov	 DWORD PTR $T2[ebp], ecx
  00072	85 d2		 test	 edx, edx
  00074	74 16		 je	 SHORT $LN134@OnRender

; 1040 : 		{
; 1041 : 			rSlot.pSlotButton->SetPosition(rSlot.ixPosition + 1, rSlot.iyPosition + 19);

  00076	8b 00		 mov	 eax, DWORD PTR [eax]
  00078	83 c0 13	 add	 eax, 19			; 00000013H
  0007b	50		 push	 eax
  0007c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0007e	8b ca		 mov	 ecx, edx
  00080	40		 inc	 eax
  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ?SetPosition@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetPosition
  00087	8b 45 fc	 mov	 eax, DWORD PTR $T3[ebp]
  0008a	eb 06		 jmp	 SHORT $LN9@OnRender
$LN134@OnRender:
  0008c	89 45 fc	 mov	 DWORD PTR $T3[ebp], eax
  0008f	89 4d f8	 mov	 DWORD PTR $T2[ebp], ecx
$LN9@OnRender:

; 1042 : 		}
; 1043 : 		if (rSlot.pSignImage)

  00092	8b 4b 58	 mov	 ecx, DWORD PTR [ebx+88]
  00095	85 c9		 test	 ecx, ecx
  00097	74 12		 je	 SHORT $LN10@OnRender

; 1044 : 		{
; 1045 : 			rSlot.pSignImage->SetPosition(rSlot.ixPosition - 7, rSlot.iyPosition + 10);

  00099	8b 00		 mov	 eax, DWORD PTR [eax]
  0009b	83 c0 0a	 add	 eax, 10			; 0000000aH
  0009e	50		 push	 eax
  0009f	8b 43 30	 mov	 eax, DWORD PTR [ebx+48]
  000a2	83 e8 07	 sub	 eax, 7
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ?SetPosition@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetPosition
$LN10@OnRender:

; 1046 : 		}
; 1047 : 
; 1048 : 		if (rSlot.pInstance)

  000ab	8b 4b 44	 mov	 ecx, DWORD PTR [ebx+68]
  000ae	85 c9		 test	 ecx, ecx
  000b0	74 39		 je	 SHORT $LN135@OnRender

; 1049 : 		{
; 1050 : 			rSlot.pInstance->SetPosition(m_rect.left + rSlot.ixPosition, m_rect.top + rSlot.iyPosition);

  000b2	8b 55 fc	 mov	 edx, DWORD PTR $T3[ebp]
  000b5	83 ec 08	 sub	 esp, 8
  000b8	8b 47 38	 mov	 eax, DWORD PTR [edi+56]
  000bb	03 02		 add	 eax, DWORD PTR [edx]
  000bd	8b 55 f8	 mov	 edx, DWORD PTR $T2[ebp]
  000c0	66 0f 6e c0	 movd	 xmm0, eax
  000c4	8b 47 34	 mov	 eax, DWORD PTR [edi+52]
  000c7	03 02		 add	 eax, DWORD PTR [edx]
  000c9	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000cc	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000d2	66 0f 6e c0	 movd	 xmm0, eax
  000d6	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000d9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000de	e8 00 00 00 00	 call	 ?SetPosition@CGraphicImageInstance@@QAEXMM@Z ; CGraphicImageInstance::SetPosition

; 1051 : 			rSlot.pInstance->Render();

  000e3	8b 4b 44	 mov	 ecx, DWORD PTR [ebx+68]
  000e6	e8 00 00 00 00	 call	 ?Render@CGraphicImageInstance@@QAEXXZ ; CGraphicImageInstance::Render
$LN135@OnRender:

; 1052 : 		}
; 1053 : 
; 1054 : 		if (!rSlot.isItem)

  000eb	83 7b 10 00	 cmp	 DWORD PTR [ebx+16], 0
  000ef	8b 03		 mov	 eax, DWORD PTR [ebx]
  000f1	75 2f		 jne	 SHORT $LN12@OnRender

; 1055 : 		{
; 1056 : 			if (IS_SET(rSlot.dwState, SLOT_STATE_ALWAYS_RENDER_COVER))

  000f3	a8 08		 test	 al, 8
  000f5	0f 84 f0 02 00
	00		 je	 $LN4@OnRender

; 1057 : 			{
; 1058 : 				rSlot.pCoverButton->Show();

  000fb	8b 4b 50	 mov	 ecx, DWORD PTR [ebx+80]
  000fe	e8 00 00 00 00	 call	 ?Show@CWindow@UI@@QAEXXZ ; UI::CWindow::Show

; 1059 : 				rSlot.pCoverButton->SetPosition(rSlot.ixPosition, rSlot.iyPosition);

  00103	8b 45 fc	 mov	 eax, DWORD PTR $T3[ebp]
  00106	8b 4b 50	 mov	 ecx, DWORD PTR [ebx+80]
  00109	ff 30		 push	 DWORD PTR [eax]
  0010b	8b 45 f8	 mov	 eax, DWORD PTR $T2[ebp]
  0010e	ff 30		 push	 DWORD PTR [eax]
  00110	e8 00 00 00 00	 call	 ?SetPosition@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetPosition

; 115  : 			CButton::OnRender();

  00115	8b 4b 50	 mov	 ecx, DWORD PTR [ebx+80]
  00118	e8 00 00 00 00	 call	 ?OnRender@CButton@UI@@MAEXXZ ; UI::CButton::OnRender
  0011d	e9 c9 02 00 00	 jmp	 $LN4@OnRender
$LN12@OnRender:

; 1060 : 				rSlot.pCoverButton->RenderButton();
; 1061 : 			}
; 1062 : 
; 1063 : 			continue;
; 1064 : 		}
; 1065 : 
; 1066 : 		if (IS_SET(rSlot.dwState, SLOT_STATE_DISABLE))

  00122	a8 04		 test	 al, 4
  00124	0f 84 a0 00 00
	00		 je	 $LN14@OnRender

; 1067 : 		{
; 1068 : 			CPythonGraphic::Instance().SetDiffuseColor(1.0f, 0.0f, 0.0f, 0.3f);

  0012a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  00130	83 ec 10	 sub	 esp, 16			; 00000010H
  00133	c7 44 24 0c 9a
	99 99 3e	 mov	 DWORD PTR [esp+12], 1050253722 ; 3e99999aH
  0013b	c7 44 24 08 00
	00 00 00	 mov	 DWORD PTR [esp+8], 0
  00143	c7 44 24 04 00
	00 00 00	 mov	 DWORD PTR [esp+4], 0
  0014b	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00152	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXMMMM@Z ; CScreen::SetDiffuseColor

; 1069 : 			CPythonGraphic::Instance().RenderBar2d(m_rect.left + rSlot.ixPosition,

  00157	8b 45 fc	 mov	 eax, DWORD PTR $T3[ebp]
  0015a	83 ec 14	 sub	 esp, 20			; 00000014H
  0015d	8b 4f 38	 mov	 ecx, DWORD PTR [edi+56]
  00160	8b 7f 34	 mov	 edi, DWORD PTR [edi+52]
  00163	8b 10		 mov	 edx, DWORD PTR [eax]
  00165	8b 45 f8	 mov	 eax, DWORD PTR $T2[ebp]
  00168	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  00170	8b 18		 mov	 ebx, DWORD PTR [eax]
  00172	8b 46 44	 mov	 eax, DWORD PTR [esi+68]
  00175	03 c1		 add	 eax, ecx
  00177	03 c2		 add	 eax, edx
  00179	66 0f 6e c0	 movd	 xmm0, eax
  0017d	8b 46 40	 mov	 eax, DWORD PTR [esi+64]
  00180	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00183	03 c7		 add	 eax, edi
  00185	03 c3		 add	 eax, ebx
  00187	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  0018d	66 0f 6e c0	 movd	 xmm0, eax
  00191	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
  00194	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  0019a	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0019d	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  001a3	66 0f 6e c0	 movd	 xmm0, eax
  001a7	8d 04 1f	 lea	 eax, DWORD PTR [edi+ebx]
  001aa	0f 5b c0	 cvtdq2ps xmm0, xmm0
  001ad	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  001b3	66 0f 6e c0	 movd	 xmm0, eax
  001b7	0f 5b c0	 cvtdq2ps xmm0, xmm0
  001ba	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001bf	e8 00 00 00 00	 call	 ?RenderBar2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderBar2d
  001c4	8b 7d f4	 mov	 edi, DWORD PTR _this$1$[ebp]
  001c7	8d 5e 08	 lea	 ebx, DWORD PTR [esi+8]
$LN14@OnRender:

; 1070 : 				m_rect.top + rSlot.iyPosition,
; 1071 : 				m_rect.left + rSlot.ixPosition + rSlot.ixCellSize,
; 1072 : 				m_rect.top + rSlot.iyPosition + rSlot.iyCellSize);
; 1073 : 		}
; 1074 : 
; 1075 : 		if (rSlot.fCoolTime != 0.0f)

  001ca	f3 0f 10 43 14	 movss	 xmm0, DWORD PTR [ebx+20]
  001cf	0f 57 c9	 xorps	 xmm1, xmm1
  001d2	0f 2e c1	 ucomiss xmm0, xmm1
  001d5	9f		 lahf
  001d6	f6 c4 44	 test	 ah, 68			; 00000044H
  001d9	0f 8b ad 00 00
	00		 jnp	 $LN16@OnRender

; 1076 : 		{
; 1077 : 			float fcurTime = CTimer::Instance().GetCurrentSecond();

  001df	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
  001e5	e8 00 00 00 00	 call	 ?GetCurrentSecond@CTimer@@QAEMXZ ; CTimer::GetCurrentSecond
  001ea	d9 5d f0	 fstp	 DWORD PTR _fcurTime$1[ebp]

; 1078 : 			float fPercentage = (fcurTime - rSlot.fStartCoolTime) / rSlot.fCoolTime;

  001ed	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _fcurTime$1[ebp]

; 1079 : 			CPythonGraphic::Instance().RenderCoolTimeBox(m_rect.left + rSlot.ixPosition + 16.0f, m_rect.top + rSlot.iyPosition + 16.0f, 16.0f, fPercentage);

  001f2	83 ec 10	 sub	 esp, 16			; 00000010H
  001f5	f3 0f 5c 43 18	 subss	 xmm0, DWORD PTR [ebx+24]
  001fa	8b 4d fc	 mov	 ecx, DWORD PTR $T3[ebp]
  001fd	8b 47 38	 mov	 eax, DWORD PTR [edi+56]
  00200	f3 0f 5e 43 14	 divss	 xmm0, DWORD PTR [ebx+20]
  00205	03 01		 add	 eax, DWORD PTR [ecx]
  00207	8b 4d f8	 mov	 ecx, DWORD PTR $T2[ebp]
  0020a	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00210	66 0f 6e c0	 movd	 xmm0, eax
  00214	8b 47 34	 mov	 eax, DWORD PTR [edi+52]
  00217	03 01		 add	 eax, DWORD PTR [ecx]
  00219	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0021c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  00222	c7 44 24 08 00
	00 80 41	 mov	 DWORD PTR [esp+8], 1098907648 ; 41800000H
  0022a	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@41800000
  00232	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00238	66 0f 6e c0	 movd	 xmm0, eax
  0023c	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0023f	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@41800000
  00247	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0024c	e8 00 00 00 00	 call	 ?RenderCoolTimeBox@CPythonGraphic@@QAEXMMMM@Z ; CPythonGraphic::RenderCoolTimeBox

; 1080 : 
; 1081 : 			if (fcurTime - rSlot.fStartCoolTime >= rSlot.fCoolTime)

  00251	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _fcurTime$1[ebp]
  00256	f3 0f 5c 43 18	 subss	 xmm0, DWORD PTR [ebx+24]
  0025b	f3 0f 10 4b 14	 movss	 xmm1, DWORD PTR [ebx+20]
  00260	0f 2f c1	 comiss	 xmm0, xmm1
  00263	72 27		 jb	 SHORT $LN16@OnRender

; 1082 : 			{
; 1083 : 				if ((fcurTime - rSlot.fStartCoolTime) - rSlot.fCoolTime < 1.0f)

  00265	f3 0f 5c c1	 subss	 xmm0, xmm1
  00269	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000
  00271	0f 2f c8	 comiss	 xmm1, xmm0
  00274	76 08		 jbe	 SHORT $LN17@OnRender

; 1084 : 					__CreateFinishCoolTimeEffect(&rSlot);

  00276	53		 push	 ebx
  00277	8b cf		 mov	 ecx, edi
  00279	e8 00 00 00 00	 call	 ?__CreateFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z ; UI::CSlotWindow::__CreateFinishCoolTimeEffect
$LN17@OnRender:

; 1085 : 
; 1086 : 				rSlot.fCoolTime = 0.0f;

  0027e	c7 43 14 00 00
	00 00		 mov	 DWORD PTR [ebx+20], 0

; 1087 : 				rSlot.fStartCoolTime = 0.0f;

  00285	c7 43 18 00 00
	00 00		 mov	 DWORD PTR [ebx+24], 0
$LN16@OnRender:

; 1088 : 			}
; 1089 : 		}
; 1090 : 
; 1091 : 		if (rSlot.pCoverButton)

  0028c	8b 4b 50	 mov	 ecx, DWORD PTR [ebx+80]
  0028f	85 c9		 test	 ecx, ecx
  00291	74 17		 je	 SHORT $LN18@OnRender

; 1092 : 		{
; 1093 : 			rSlot.pCoverButton->SetPosition(rSlot.ixPosition, rSlot.iyPosition);

  00293	8b 45 fc	 mov	 eax, DWORD PTR $T3[ebp]
  00296	ff 30		 push	 DWORD PTR [eax]
  00298	8b 45 f8	 mov	 eax, DWORD PTR $T2[ebp]
  0029b	ff 30		 push	 DWORD PTR [eax]
  0029d	e8 00 00 00 00	 call	 ?SetPosition@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetPosition

; 115  : 			CButton::OnRender();

  002a2	8b 4b 50	 mov	 ecx, DWORD PTR [ebx+80]
  002a5	e8 00 00 00 00	 call	 ?OnRender@CButton@UI@@MAEXXZ ; UI::CButton::OnRender
$LN18@OnRender:

; 1094 : 			rSlot.pCoverButton->RenderButton();
; 1095 : 		}
; 1096 : 
; 1097 : 		if (rSlot.pNumberLine)

  002aa	8b 4b 48	 mov	 ecx, DWORD PTR [ebx+72]
  002ad	85 c9		 test	 ecx, ecx
  002af	74 39		 je	 SHORT $LN136@OnRender

; 1098 : 		{
; 1099 : 			int ix = rSlot.byxPlacedItemSize*ITEM_WIDTH + rSlot.ixPosition - 4;
; 1100 : 			int iy = rSlot.iyPosition + rSlot.byyPlacedItemSize*ITEM_HEIGHT - 12 + 2;

  002b1	8b 45 fc	 mov	 eax, DWORD PTR $T3[ebp]
  002b4	0f b6 53 41	 movzx	 edx, BYTE PTR [ebx+65]
  002b8	c1 e2 05	 shl	 edx, 5
  002bb	8b 00		 mov	 eax, DWORD PTR [eax]
  002bd	83 c0 f6	 add	 eax, -10		; fffffff6H
  002c0	03 c2		 add	 eax, edx
  002c2	0f b6 53 40	 movzx	 edx, BYTE PTR [ebx+64]

; 1101 : 			rSlot.pNumberLine->SetPosition(ix, iy);

  002c6	50		 push	 eax
  002c7	8b 45 f8	 mov	 eax, DWORD PTR $T2[ebp]
  002ca	c1 e2 05	 shl	 edx, 5
  002cd	8b 00		 mov	 eax, DWORD PTR [eax]
  002cf	83 c0 fc	 add	 eax, -4			; fffffffcH
  002d2	03 c2		 add	 eax, edx
  002d4	50		 push	 eax
  002d5	e8 00 00 00 00	 call	 ?SetPosition@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetPosition

; 1102 : 			rSlot.pNumberLine->Update();

  002da	8b 4b 48	 mov	 ecx, DWORD PTR [ebx+72]
  002dd	e8 00 00 00 00	 call	 ?Update@CWindow@UI@@QAEXXZ ; UI::CWindow::Update

; 1103 : 			rSlot.pNumberLine->Render();

  002e2	8b 4b 48	 mov	 ecx, DWORD PTR [ebx+72]
  002e5	e8 00 00 00 00	 call	 ?Render@CWindow@UI@@QAEXXZ ; UI::CWindow::Render
$LN136@OnRender:

; 1104 : 		}
; 1105 : 
; 1106 : 		if (rSlot.pFinishCoolTimeEffect)

  002ea	8b 4b 5c	 mov	 ecx, DWORD PTR [ebx+92]
  002ed	85 c9		 test	 ecx, ecx
  002ef	74 1f		 je	 SHORT $LN20@OnRender

; 1107 : 		{
; 1108 : 			rSlot.pFinishCoolTimeEffect->SetPosition(rSlot.ixPosition, rSlot.iyPosition);

  002f1	8b 45 fc	 mov	 eax, DWORD PTR $T3[ebp]
  002f4	ff 30		 push	 DWORD PTR [eax]
  002f6	8b 45 f8	 mov	 eax, DWORD PTR $T2[ebp]
  002f9	ff 30		 push	 DWORD PTR [eax]
  002fb	e8 00 00 00 00	 call	 ?SetPosition@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetPosition

; 1109 : 			rSlot.pFinishCoolTimeEffect->Update();

  00300	8b 4b 5c	 mov	 ecx, DWORD PTR [ebx+92]
  00303	e8 00 00 00 00	 call	 ?Update@CWindow@UI@@QAEXXZ ; UI::CWindow::Update

; 1110 : 			rSlot.pFinishCoolTimeEffect->Render();

  00308	8b 4b 5c	 mov	 ecx, DWORD PTR [ebx+92]
  0030b	e8 00 00 00 00	 call	 ?Render@CWindow@UI@@QAEXXZ ; UI::CWindow::Render
$LN20@OnRender:

; 1111 : 		}
; 1112 : 
; 1113 : 		if (rSlot.bActive)

  00310	83 7b 1c 00	 cmp	 DWORD PTR [ebx+28], 0
  00314	0f 84 d1 00 00
	00		 je	 $LN4@OnRender

; 1114 : 		{
; 1115 : 			if (m_pSlotActiveEffect && rSlot.byyPlacedItemSize==1)

  0031a	8b 8f a8 00 00
	00		 mov	 ecx, DWORD PTR [edi+168]
  00320	85 c9		 test	 ecx, ecx
  00322	74 3d		 je	 SHORT $LN137@OnRender
  00324	80 7b 41 01	 cmp	 BYTE PTR [ebx+65], 1
  00328	75 37		 jne	 SHORT $LN137@OnRender

; 1116 : 			{
; 1117 : 				int ix = m_rect.left + rSlot.ixPosition;

  0032a	8b 45 f8	 mov	 eax, DWORD PTR $T2[ebp]
  0032d	8b 5f 34	 mov	 ebx, DWORD PTR [edi+52]
  00330	03 18		 add	 ebx, DWORD PTR [eax]

; 1118 : 				int iy = m_rect.top + rSlot.iyPosition;

  00332	8b 45 fc	 mov	 eax, DWORD PTR $T3[ebp]
  00335	8b 38		 mov	 edi, DWORD PTR [eax]
  00337	8b 45 f4	 mov	 eax, DWORD PTR _this$1$[ebp]
  0033a	03 78 38	 add	 edi, DWORD PTR [eax+56]

; 1119 : 				#ifdef ENABLE_HIGHLIGHT_NEW_ITEM
; 1120 : 				m_pSlotActiveEffect->SetDiffuseColor(rSlot.Color);

  0033d	8d 46 28	 lea	 eax, DWORD PTR [esi+40]
  00340	50		 push	 eax
  00341	e8 00 00 00 00	 call	 ?SetDiffuseColor@CAniImageBox@UI@@QAEXABUD3DXCOLOR@@@Z ; UI::CAniImageBox::SetDiffuseColor

; 1121 : 				#endif
; 1122 : 				m_pSlotActiveEffect->SetPosition(ix, iy);

  00346	57		 push	 edi
  00347	8b 7d f4	 mov	 edi, DWORD PTR _this$1$[ebp]
  0034a	53		 push	 ebx
  0034b	8b 8f a8 00 00
	00		 mov	 ecx, DWORD PTR [edi+168]
  00351	e8 00 00 00 00	 call	 ?SetPosition@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetPosition

; 1123 : 				m_pSlotActiveEffect->Render();

  00356	8b 8f a8 00 00
	00		 mov	 ecx, DWORD PTR [edi+168]

; 1124 : 			}

  0035c	e9 85 00 00 00	 jmp	 $LN162@OnRender
$LN137@OnRender:

; 1125 : #ifdef ENABLE_HIGHLIGHT_NEW_ITEM
; 1126 : 			else if (m_pSlotActiveEffectSlot2 && rSlot.byyPlacedItemSize==2)

  00361	8b 8f ac 00 00
	00		 mov	 ecx, DWORD PTR [edi+172]
  00367	85 c9		 test	 ecx, ecx
  00369	74 3a		 je	 SHORT $LN138@OnRender
  0036b	80 7b 41 02	 cmp	 BYTE PTR [ebx+65], 2
  0036f	75 34		 jne	 SHORT $LN138@OnRender

; 1127 : 			{
; 1128 : 				int ix = m_rect.left + rSlot.ixPosition;

  00371	8b 45 f8	 mov	 eax, DWORD PTR $T2[ebp]
  00374	8b 5f 34	 mov	 ebx, DWORD PTR [edi+52]
  00377	03 18		 add	 ebx, DWORD PTR [eax]

; 1129 : 				int iy = m_rect.top + rSlot.iyPosition;

  00379	8b 45 fc	 mov	 eax, DWORD PTR $T3[ebp]
  0037c	8b 38		 mov	 edi, DWORD PTR [eax]
  0037e	8b 45 f4	 mov	 eax, DWORD PTR _this$1$[ebp]
  00381	03 78 38	 add	 edi, DWORD PTR [eax+56]

; 1130 : 				m_pSlotActiveEffectSlot2->SetDiffuseColor(rSlot.Color);

  00384	8d 46 28	 lea	 eax, DWORD PTR [esi+40]
  00387	50		 push	 eax
  00388	e8 00 00 00 00	 call	 ?SetDiffuseColor@CAniImageBox@UI@@QAEXABUD3DXCOLOR@@@Z ; UI::CAniImageBox::SetDiffuseColor

; 1131 : 				m_pSlotActiveEffectSlot2->SetPosition(ix, iy);

  0038d	57		 push	 edi
  0038e	8b 7d f4	 mov	 edi, DWORD PTR _this$1$[ebp]
  00391	53		 push	 ebx
  00392	8b 8f ac 00 00
	00		 mov	 ecx, DWORD PTR [edi+172]
  00398	e8 00 00 00 00	 call	 ?SetPosition@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetPosition

; 1132 : 				m_pSlotActiveEffectSlot2->Render();

  0039d	8b 8f ac 00 00
	00		 mov	 ecx, DWORD PTR [edi+172]

; 1133 : 			}

  003a3	eb 41		 jmp	 SHORT $LN162@OnRender
$LN138@OnRender:

; 1134 : 			else if (m_pSlotActiveEffectSlot3 && rSlot.byyPlacedItemSize==3)

  003a5	83 bf b0 00 00
	00 00		 cmp	 DWORD PTR [edi+176], 0
  003ac	74 3d		 je	 SHORT $LN4@OnRender
  003ae	80 7b 41 03	 cmp	 BYTE PTR [ebx+65], 3
  003b2	75 37		 jne	 SHORT $LN4@OnRender

; 1135 : 			{
; 1136 : 				int ix = m_rect.left + rSlot.ixPosition;

  003b4	8b 45 f8	 mov	 eax, DWORD PTR $T2[ebp]
  003b7	8b 18		 mov	 ebx, DWORD PTR [eax]

; 1137 : 				int iy = m_rect.top + rSlot.iyPosition;

  003b9	8b 45 fc	 mov	 eax, DWORD PTR $T3[ebp]
  003bc	03 5f 34	 add	 ebx, DWORD PTR [edi+52]
  003bf	8b 38		 mov	 edi, DWORD PTR [eax]
  003c1	8b 45 f4	 mov	 eax, DWORD PTR _this$1$[ebp]
  003c4	03 78 38	 add	 edi, DWORD PTR [eax+56]

; 1138 : 				m_pSlotActiveEffectSlot2->SetDiffuseColor(rSlot.Color);

  003c7	8d 46 28	 lea	 eax, DWORD PTR [esi+40]
  003ca	50		 push	 eax
  003cb	e8 00 00 00 00	 call	 ?SetDiffuseColor@CAniImageBox@UI@@QAEXABUD3DXCOLOR@@@Z ; UI::CAniImageBox::SetDiffuseColor

; 1139 : 				m_pSlotActiveEffectSlot3->SetPosition(ix, iy);

  003d0	57		 push	 edi
  003d1	8b 7d f4	 mov	 edi, DWORD PTR _this$1$[ebp]
  003d4	53		 push	 ebx
  003d5	8b 8f b0 00 00
	00		 mov	 ecx, DWORD PTR [edi+176]
  003db	e8 00 00 00 00	 call	 ?SetPosition@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetPosition

; 1140 : 				m_pSlotActiveEffectSlot3->Render();

  003e0	8b 8f b0 00 00
	00		 mov	 ecx, DWORD PTR [edi+176]
$LN162@OnRender:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 165  :         this->_Ptr = this->_Ptr->_Next;

  003e6	e8 00 00 00 00	 call	 ?Render@CWindow@UI@@QAEXXZ ; UI::CWindow::Render
$LN4@OnRender:
  003eb	8b 36		 mov	 esi, DWORD PTR [esi]

; 198  :         return this->_Ptr == _Right._Ptr;

  003ed	3b b7 8c 00 00
	00		 cmp	 esi, DWORD PTR [edi+140]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 1035 : 	for (itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  003f3	0f 85 67 fc ff
	ff		 jne	 $LL161@OnRender
$LN5@OnRender:

; 1141 : 			}
; 1142 : #endif
; 1143 : 		}
; 1144 : 	}
; 1145 : 
; 1146 : 	RenderLockedSlot();

  003f9	8b cf		 mov	 ecx, edi
  003fb	e8 00 00 00 00	 call	 ?RenderLockedSlot@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::RenderLockedSlot
  00400	5f		 pop	 edi
  00401	5e		 pop	 esi
  00402	5b		 pop	 ebx

; 1147 : }

  00403	8b e5		 mov	 esp, ebp
  00405	5d		 pop	 ebp
  00406	c3		 ret	 0
?OnRender@CSlotWindow@UI@@MAEXXZ ENDP			; UI::CSlotWindow::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\deque
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\deque
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\deque
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\deque
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\deque
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\deque
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnUpdate@CSlotWindow@UI@@MAEXXZ
_TEXT	SEGMENT
_pSlot$2 = -4						; size = 4
?OnUpdate@CSlotWindow@UI@@MAEXXZ PROC			; UI::CSlotWindow::OnUpdate, COMDAT
; _this$ = ecx

; 979  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	57		 push	 edi
  00007	8b f9		 mov	 edi, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\deque

; 255  :     _Deque_const_iterator(_Size_type _Off, const _Container_base12* _Pdeque) noexcept : _Myoff(_Off) {

  00009	8b b7 c0 00 00
	00		 mov	 esi, DWORD PTR [edi+192]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 980  : 	for (std::deque<DWORD>::iterator itor = m_ReserveDestroyEffectDeque.begin(); itor != m_ReserveDestroyEffectDeque.end(); ++itor)

  0000f	8d 8f b4 00 00
	00		 lea	 ecx, DWORD PTR [edi+180]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1285 :             _Myproxy = _Parent->_Myproxy;

  00015	8b 19		 mov	 ebx, DWORD PTR [ecx]
  00017	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL63@OnUpdate:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\deque

; 939  :         return iterator(_Myoff() + _Mysize(), _STD addressof(_Get_data()));

  00020	8b 87 c4 00 00
	00		 mov	 eax, DWORD PTR [edi+196]
  00026	03 41 0c	 add	 eax, DWORD PTR [ecx+12]

; 358  :         return this->_Myoff == _Right._Myoff;

  00029	3b f0		 cmp	 esi, eax
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 980  : 	for (std::deque<DWORD>::iterator itor = m_ReserveDestroyEffectDeque.begin(); itor != m_ReserveDestroyEffectDeque.end(); ++itor)

  0002b	74 45		 je	 SHORT $LN3@OnUpdate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1293 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  0002d	85 db		 test	 ebx, ebx
  0002f	74 04		 je	 SHORT $LN52@OnUpdate
  00031	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  00033	eb 02		 jmp	 SHORT $LN53@OnUpdate
$LN52@OnUpdate:
  00035	33 c9		 xor	 ecx, ecx
$LN53@OnUpdate:
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 984  : 		if (!GetSlotPointer(dwSlotIndex, &pSlot))

  00037	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$2[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\deque

; 563  :         return (_Off / _Block_size) & (_Mapsize - 1);

  0003a	8b d6		 mov	 edx, esi
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 984  : 		if (!GetSlotPointer(dwSlotIndex, &pSlot))

  0003c	50		 push	 eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\deque

; 563  :         return (_Off / _Block_size) & (_Mapsize - 1);

  0003d	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00040	48		 dec	 eax
  00041	c1 ea 02	 shr	 edx, 2
  00044	23 d0		 and	 edx, eax
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 984  : 		if (!GetSlotPointer(dwSlotIndex, &pSlot))

  00046	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\deque

; 268  :         _Size_type _Off   = _Myoff % _Block_size;

  00049	8b ce		 mov	 ecx, esi
  0004b	83 e1 03	 and	 ecx, 3
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 984  : 		if (!GetSlotPointer(dwSlotIndex, &pSlot))

  0004e	8b 04 90	 mov	 eax, DWORD PTR [eax+edx*4]
  00051	ff 34 88	 push	 DWORD PTR [eax+ecx*4]
  00054	8b cf		 mov	 ecx, edi
  00056	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  0005b	85 c0		 test	 eax, eax
  0005d	74 0a		 je	 SHORT $LN2@OnUpdate

; 985  : 			continue;
; 986  : 		__DestroyFinishCoolTimeEffect(pSlot);

  0005f	ff 75 fc	 push	 DWORD PTR _pSlot$2[ebp]
  00062	8b cf		 mov	 ecx, edi
  00064	e8 00 00 00 00	 call	 ?__DestroyFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z ; UI::CSlotWindow::__DestroyFinishCoolTimeEffect
$LN2@OnUpdate:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\deque

; 283  :         ++_Myoff;

  00069	46		 inc	 esi
  0006a	8d 8f b4 00 00
	00		 lea	 ecx, DWORD PTR [edi+180]
  00070	eb ae		 jmp	 SHORT $LL63@OnUpdate
$LN3@OnUpdate:

; 1454 :         _Tidy();

  00072	e8 00 00 00 00	 call	 ?_Tidy@?$deque@KV?$allocator@K@std@@@std@@AAEXXZ ; std::deque<unsigned long,std::allocator<unsigned long> >::_Tidy
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 990  : 	if (m_pSlotActiveEffect)

  00077	8b 8f a8 00 00
	00		 mov	 ecx, DWORD PTR [edi+168]
  0007d	85 c9		 test	 ecx, ecx
  0007f	74 05		 je	 SHORT $LN6@OnUpdate

; 991  : 		m_pSlotActiveEffect->Update();

  00081	e8 00 00 00 00	 call	 ?Update@CWindow@UI@@QAEXXZ ; UI::CWindow::Update
$LN6@OnUpdate:

; 992  : #ifdef ENABLE_HIGHLIGHT_NEW_ITEM
; 993  : 	if (m_pSlotActiveEffectSlot2)

  00086	8b 8f ac 00 00
	00		 mov	 ecx, DWORD PTR [edi+172]
  0008c	85 c9		 test	 ecx, ecx
  0008e	74 05		 je	 SHORT $LN7@OnUpdate

; 994  : 		m_pSlotActiveEffectSlot2->Update();

  00090	e8 00 00 00 00	 call	 ?Update@CWindow@UI@@QAEXXZ ; UI::CWindow::Update
$LN7@OnUpdate:

; 995  : 	if (m_pSlotActiveEffectSlot3)

  00095	8b 8f b0 00 00
	00		 mov	 ecx, DWORD PTR [edi+176]
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	5b		 pop	 ebx
  0009e	85 c9		 test	 ecx, ecx
  000a0	74 05		 je	 SHORT $LN8@OnUpdate

; 996  : 		m_pSlotActiveEffectSlot3->Update();

  000a2	e8 00 00 00 00	 call	 ?Update@CWindow@UI@@QAEXXZ ; UI::CWindow::Update
$LN8@OnUpdate:

; 997  : #endif
; 998  : }

  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c3		 ret	 0
?OnUpdate@CSlotWindow@UI@@MAEXXZ ENDP			; UI::CSlotWindow::OnUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?__DestroyBaseImage@CSlotWindow@UI@@IAEXXZ
_TEXT	SEGMENT
?__DestroyBaseImage@CSlotWindow@UI@@IAEXXZ PROC		; UI::CSlotWindow::__DestroyBaseImage, COMDAT
; _this$ = ecx

; 1463 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1464 : 	if (m_pBaseImageInstance)

  00003	8b 86 a0 00 00
	00		 mov	 eax, DWORD PTR [esi+160]
  00009	85 c0		 test	 eax, eax
  0000b	74 13		 je	 SHORT $LN2@DestroyBas

; 1465 : 	{
; 1466 : 		CGraphicImageInstance::Delete(m_pBaseImageInstance);

  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ?Delete@CGraphicImageInstance@@SAXPAV1@@Z ; CGraphicImageInstance::Delete
  00013	83 c4 04	 add	 esp, 4

; 1467 : 		m_pBaseImageInstance = NULL;

  00016	c7 86 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+160], 0
$LN2@DestroyBas:

; 1468 : 	}
; 1469 : }

  00020	5e		 pop	 esi
  00021	c3		 ret	 0
?__DestroyBaseImage@CSlotWindow@UI@@IAEXXZ ENDP		; UI::CSlotWindow::__DestroyBaseImage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?__DestroyFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z
_TEXT	SEGMENT
_pSlot$ = 8						; size = 4
?__DestroyFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z PROC ; UI::CSlotWindow::__DestroyFinishCoolTimeEffect, COMDAT
; _this$ = ecx

; 1454 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1455 : 	if (pSlot->pFinishCoolTimeEffect)

  00004	8b 75 08	 mov	 esi, DWORD PTR _pSlot$[ebp]
  00007	8b 4e 5c	 mov	 ecx, DWORD PTR [esi+92]
  0000a	85 c9		 test	 ecx, ecx
  0000c	74 0d		 je	 SHORT $LN2@DestroyFin

; 1456 : 	{
; 1457 : 		delete pSlot->pFinishCoolTimeEffect;

  0000e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00010	6a 01		 push	 1
  00012	ff 10		 call	 DWORD PTR [eax]

; 1458 : 		pSlot->pFinishCoolTimeEffect = NULL;

  00014	c7 46 5c 00 00
	00 00		 mov	 DWORD PTR [esi+92], 0
$LN2@DestroyFin:
  0001b	5e		 pop	 esi

; 1459 : 	}
; 1460 : }

  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?__DestroyFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z ENDP ; UI::CSlotWindow::__DestroyFinishCoolTimeEffect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?__DestroySlotEnableEffect@CSlotWindow@UI@@IAEXXZ
_TEXT	SEGMENT
?__DestroySlotEnableEffect@CSlotWindow@UI@@IAEXXZ PROC	; UI::CSlotWindow::__DestroySlotEnableEffect, COMDAT
; _this$ = ecx

; 1433 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1434 : 	if (m_pSlotActiveEffect)

  00003	8b 8e a8 00 00
	00		 mov	 ecx, DWORD PTR [esi+168]
  00009	85 c9		 test	 ecx, ecx
  0000b	74 10		 je	 SHORT $LN2@DestroySlo

; 1435 : 	{
; 1436 : 		delete m_pSlotActiveEffect;

  0000d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000f	6a 01		 push	 1
  00011	ff 10		 call	 DWORD PTR [eax]

; 1437 : 		m_pSlotActiveEffect = NULL;

  00013	c7 86 a8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+168], 0
$LN2@DestroySlo:

; 1438 : 	}
; 1439 : #ifdef ENABLE_HIGHLIGHT_NEW_ITEM
; 1440 : 	if (m_pSlotActiveEffectSlot2)

  0001d	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]
  00023	85 c9		 test	 ecx, ecx
  00025	74 10		 je	 SHORT $LN3@DestroySlo

; 1441 : 	{
; 1442 : 		delete m_pSlotActiveEffectSlot2;

  00027	8b 01		 mov	 eax, DWORD PTR [ecx]
  00029	6a 01		 push	 1
  0002b	ff 10		 call	 DWORD PTR [eax]

; 1443 : 		m_pSlotActiveEffectSlot2 = NULL;

  0002d	c7 86 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+172], 0
$LN3@DestroySlo:

; 1444 : 	}
; 1445 : 	if (m_pSlotActiveEffectSlot3)

  00037	8b 8e b0 00 00
	00		 mov	 ecx, DWORD PTR [esi+176]
  0003d	85 c9		 test	 ecx, ecx
  0003f	74 10		 je	 SHORT $LN4@DestroySlo

; 1446 : 	{
; 1447 : 		delete m_pSlotActiveEffectSlot3;

  00041	8b 01		 mov	 eax, DWORD PTR [ecx]
  00043	6a 01		 push	 1
  00045	ff 10		 call	 DWORD PTR [eax]

; 1448 : 		m_pSlotActiveEffectSlot3 = NULL;

  00047	c7 86 b0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+176], 0
$LN4@DestroySlo:

; 1449 : 	}
; 1450 : #endif
; 1451 : }

  00051	5e		 pop	 esi
  00052	c3		 ret	 0
?__DestroySlotEnableEffect@CSlotWindow@UI@@IAEXXZ ENDP	; UI::CSlotWindow::__DestroySlotEnableEffect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?__DestroyToggleSlotImage@CSlotWindow@UI@@IAEXXZ
_TEXT	SEGMENT
?__DestroyToggleSlotImage@CSlotWindow@UI@@IAEXXZ PROC	; UI::CSlotWindow::__DestroyToggleSlotImage, COMDAT
; _this$ = ecx

; 1424 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1425 : 	if (m_pToggleSlotImage)

  00003	8b 8e a4 00 00
	00		 mov	 ecx, DWORD PTR [esi+164]
  00009	85 c9		 test	 ecx, ecx
  0000b	74 10		 je	 SHORT $LN2@DestroyTog

; 1426 : 	{
; 1427 : 		delete m_pToggleSlotImage;

  0000d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000f	6a 01		 push	 1
  00011	ff 10		 call	 DWORD PTR [eax]

; 1428 : 		m_pToggleSlotImage = NULL;

  00013	c7 86 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+164], 0
$LN2@DestroyTog:

; 1429 : 	}
; 1430 : }

  0001d	5e		 pop	 esi
  0001e	c3		 ret	 0
?__DestroyToggleSlotImage@CSlotWindow@UI@@IAEXXZ ENDP	; UI::CSlotWindow::__DestroyToggleSlotImage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?__CreateBaseImage@CSlotWindow@UI@@IAEXPBDMMMM@Z
_TEXT	SEGMENT
_c_szFileName$ = 8					; size = 4
_fr$ = 12						; size = 4
_fg$ = 16						; size = 4
_fb$ = 20						; size = 4
_fa$ = 24						; size = 4
?__CreateBaseImage@CSlotWindow@UI@@IAEXPBDMMMM@Z PROC	; UI::CSlotWindow::__CreateBaseImage, COMDAT
; _this$ = ecx

; 1414 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b f9		 mov	 edi, ecx

; 1415 : 	__DestroyBaseImage();

  00007	e8 00 00 00 00	 call	 ?__DestroyBaseImage@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::__DestroyBaseImage

; 1416 : 
; 1417 : 	CGraphicImage * pImage = (CGraphicImage *)CResourceManager::Instance().GetResourcePointer(c_szFileName);

  0000c	ff 75 08	 push	 DWORD PTR _c_szFileName$[ebp]
  0000f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00015	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  0001a	8b f0		 mov	 esi, eax

; 1418 : 	m_pBaseImageInstance = CGraphicImageInstance::New();

  0001c	e8 00 00 00 00	 call	 ?New@CGraphicImageInstance@@SAPAV1@XZ ; CGraphicImageInstance::New

; 1419 : 	m_pBaseImageInstance->SetImagePointer(pImage);

  00021	56		 push	 esi
  00022	8b c8		 mov	 ecx, eax
  00024	89 87 a0 00 00
	00		 mov	 DWORD PTR [edi+160], eax
  0002a	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer

; 1420 : 	m_pBaseImageInstance->SetDiffuseColor(fr, fg, fb, fa);

  0002f	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _fa$[ebp]
  00034	83 ec 10	 sub	 esp, 16			; 00000010H
  00037	8b 8f a0 00 00
	00		 mov	 ecx, DWORD PTR [edi+160]
  0003d	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00043	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fb$[ebp]
  00048	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0004e	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fg$[ebp]
  00053	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00059	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fr$[ebp]
  0005e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00063	e8 00 00 00 00	 call	 ?SetDiffuseColor@CGraphicImageInstance@@QAEXMMMM@Z ; CGraphicImageInstance::SetDiffuseColor
  00068	5f		 pop	 edi
  00069	5e		 pop	 esi

; 1421 : }

  0006a	5d		 pop	 ebp
  0006b	c2 14 00	 ret	 20			; 00000014H
?__CreateBaseImage@CSlotWindow@UI@@IAEXPBDMMMM@Z ENDP	; UI::CSlotWindow::__CreateBaseImage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?__CreateFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z
_TEXT	SEGMENT
_this$1$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
$T2 = 8							; size = 4
_pSlot$ = 8						; size = 4
?__CreateFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z PROC ; UI::CSlotWindow::__CreateFinishCoolTimeEffect, COMDAT
; _this$ = ecx

; 1390 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?__CreateFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	53		 push	 ebx
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	8b c1		 mov	 eax, ecx
  00028	89 45 f0	 mov	 DWORD PTR _this$1$[ebp], eax

; 1391 : 	__DestroyFinishCoolTimeEffect(pSlot);

  0002b	8b 5d 08	 mov	 ebx, DWORD PTR _pSlot$[ebp]
  0002e	53		 push	 ebx
  0002f	e8 00 00 00 00	 call	 ?__DestroyFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z ; UI::CSlotWindow::__DestroyFinishCoolTimeEffect

; 1392 : 
; 1393 : 	CAniImageBox * pFinishCoolTimeEffect = new CCoolTimeFinishEffect(this, pSlot->dwSlotNumber);

  00034	68 90 00 00 00	 push	 144			; 00000090H
  00039	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003e	8b f8		 mov	 edi, eax
  00040	83 c4 04	 add	 esp, 4
  00043	89 7d 08	 mov	 DWORD PTR $T2[ebp], edi
  00046	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004d	85 ff		 test	 edi, edi
  0004f	74 20		 je	 SHORT $LN3@CreateFini
  00051	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]

; 178  : 		CCoolTimeFinishEffect(CSlotWindow * pParent, DWORD dwSlotIndex) : CAniImageBox(NULL)

  00054	8b cf		 mov	 ecx, edi
  00056	6a 00		 push	 0
  00058	e8 00 00 00 00	 call	 ??0CAniImageBox@UI@@QAE@PAU_object@@@Z ; UI::CAniImageBox::CAniImageBox

; 179  : 		{
; 180  : 			m_pParent = pParent;

  0005d	8b 45 f0	 mov	 eax, DWORD PTR _this$1$[ebp]
  00060	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CCoolTimeFinishEffect@CSlotWindow@UI@@6B@
  00066	89 47 60	 mov	 DWORD PTR [edi+96], eax

; 181  : 			m_dwSlotIndex = dwSlotIndex;

  00069	89 b7 8c 00 00
	00		 mov	 DWORD PTR [edi+140], esi

; 1392 : 
; 1393 : 	CAniImageBox * pFinishCoolTimeEffect = new CCoolTimeFinishEffect(this, pSlot->dwSlotNumber);

  0006f	eb 02		 jmp	 SHORT $LN4@CreateFini
$LN3@CreateFini:
  00071	33 ff		 xor	 edi, edi
$LN4@CreateFini:

; 1394 : 	pFinishCoolTimeEffect->AppendImage("d:/ymir work/ui/public/slotfinishcooltimeeffect/00.sub");

  00073	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@EECLJILE@d?3?1ymir?5work?1ui?1public?1slotfini@
  00078	8b cf		 mov	 ecx, edi
  0007a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00081	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1395 : 	pFinishCoolTimeEffect->AppendImage("d:/ymir work/ui/public/slotfinishcooltimeeffect/01.sub");

  00086	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@IPHHELBB@d?3?1ymir?5work?1ui?1public?1slotfini@
  0008b	8b cf		 mov	 ecx, edi
  0008d	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1396 : 	pFinishCoolTimeEffect->AppendImage("d:/ymir work/ui/public/slotfinishcooltimeeffect/02.sub");

  00092	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@JODDJLP@d?3?1ymir?5work?1ui?1public?1slotfini@
  00097	8b cf		 mov	 ecx, edi
  00099	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1397 : 	pFinishCoolTimeEffect->AppendImage("d:/ymir work/ui/public/slotfinishcooltimeeffect/03.sub");

  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@MCLPOKBK@d?3?1ymir?5work?1ui?1public?1slotfini@
  000a3	8b cf		 mov	 ecx, edi
  000a5	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1398 : 	pFinishCoolTimeEffect->AppendImage("d:/ymir work/ui/public/slotfinishcooltimeeffect/04.sub");

  000aa	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@NPLKNKKC@d?3?1ymir?5work?1ui?1public?1slotfini@
  000af	8b cf		 mov	 ecx, edi
  000b1	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1399 : 	pFinishCoolTimeEffect->AppendImage("d:/ymir work/ui/public/slotfinishcooltimeeffect/05.sub");

  000b6	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@BEOGAJAH@d?3?1ymir?5work?1ui?1public?1slotfini@
  000bb	8b cf		 mov	 ecx, edi
  000bd	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1400 : 	pFinishCoolTimeEffect->AppendImage("d:/ymir work/ui/public/slotfinishcooltimeeffect/06.sub");

  000c2	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@JCHCHLKJ@d?3?1ymir?5work?1ui?1public?1slotfini@
  000c7	8b cf		 mov	 ecx, edi
  000c9	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1401 : 	pFinishCoolTimeEffect->AppendImage("d:/ymir work/ui/public/slotfinishcooltimeeffect/07.sub");

  000ce	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@FJCOKIAM@d?3?1ymir?5work?1ui?1public?1slotfini@
  000d3	8b cf		 mov	 ecx, edi
  000d5	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1402 : 	pFinishCoolTimeEffect->AppendImage("d:/ymir work/ui/public/slotfinishcooltimeeffect/08.sub");

  000da	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@KIHIBKNJ@d?3?1ymir?5work?1ui?1public?1slotfini@
  000df	8b cf		 mov	 ecx, edi
  000e1	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1403 : 	pFinishCoolTimeEffect->AppendImage("d:/ymir work/ui/public/slotfinishcooltimeeffect/09.sub");

  000e6	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@GDCEMJHM@d?3?1ymir?5work?1ui?1public?1slotfini@
  000eb	8b cf		 mov	 ecx, edi
  000ed	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1404 : 	pFinishCoolTimeEffect->AppendImage("d:/ymir work/ui/public/slotfinishcooltimeeffect/10.sub");

  000f2	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@OCFMJDAA@d?3?1ymir?5work?1ui?1public?1slotfini@
  000f7	8b cf		 mov	 ecx, edi
  000f9	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1405 : 	pFinishCoolTimeEffect->SetRenderingMode(CGraphicExpandedImageInstance::RENDERING_MODE_SCREEN);

  000fe	6a 01		 push	 1
  00100	8b cf		 mov	 ecx, edi
  00102	e8 00 00 00 00	 call	 ?SetRenderingMode@CAniImageBox@UI@@QAEXH@Z ; UI::CAniImageBox::SetRenderingMode

; 1406 : 	pFinishCoolTimeEffect->ResetFrame();

  00107	8b cf		 mov	 ecx, edi
  00109	e8 00 00 00 00	 call	 ?ResetFrame@CAniImageBox@UI@@QAEXXZ ; UI::CAniImageBox::ResetFrame

; 1407 : 	pFinishCoolTimeEffect->SetDelay(2);

  0010e	6a 02		 push	 2
  00110	8b cf		 mov	 ecx, edi
  00112	e8 00 00 00 00	 call	 ?SetDelay@CAniImageBox@UI@@QAEXH@Z ; UI::CAniImageBox::SetDelay

; 1408 : 	pFinishCoolTimeEffect->Show();

  00117	8b cf		 mov	 ecx, edi
  00119	e8 00 00 00 00	 call	 ?Show@CWindow@UI@@QAEXXZ ; UI::CWindow::Show

; 1409 : 
; 1410 : 	pSlot->pFinishCoolTimeEffect = pFinishCoolTimeEffect;

  0011e	89 7b 5c	 mov	 DWORD PTR [ebx+92], edi

; 1411 : }

  00121	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00124	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0012b	59		 pop	 ecx
  0012c	5f		 pop	 edi
  0012d	5e		 pop	 esi
  0012e	5b		 pop	 ebx
  0012f	8b e5		 mov	 esp, ebp
  00131	5d		 pop	 ebp
  00132	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?__CreateFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z$0:
  00000	68 90 00 00 00	 push	 144			; 00000090H
  00005	8b 45 08	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?__CreateFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?__CreateFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?__CreateFinishCoolTimeEffect@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z ENDP ; UI::CSlotWindow::__CreateFinishCoolTimeEffect
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXXZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
$T3 = -16						; size = 4
$T4 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXXZ PROC	; UI::CSlotWindow::__CreateSlotEnableEffect, COMDAT
; _this$ = ecx

; 1332 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx

; 1333 : 	__DestroySlotEnableEffect();

  00026	e8 00 00 00 00	 call	 ?__DestroySlotEnableEffect@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::__DestroySlotEnableEffect

; 1334 : 
; 1335 : 	m_pSlotActiveEffect = new CAniImageBox(NULL);

  0002b	68 8c 00 00 00	 push	 140			; 0000008cH
  00030	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00035	83 c4 04	 add	 esp, 4
  00038	89 45 f0	 mov	 DWORD PTR $T4[ebp], eax
  0003b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00042	85 c0		 test	 eax, eax
  00044	74 0b		 je	 SHORT $LN3@CreateSlot
  00046	6a 00		 push	 0
  00048	8b c8		 mov	 ecx, eax
  0004a	e8 00 00 00 00	 call	 ??0CAniImageBox@UI@@QAE@PAU_object@@@Z ; UI::CAniImageBox::CAniImageBox
  0004f	eb 02		 jmp	 SHORT $LN4@CreateSlot
$LN3@CreateSlot:
  00051	33 c0		 xor	 eax, eax
$LN4@CreateSlot:

; 1336 : 	m_pSlotActiveEffect->AppendImage("d:/ymir work/ui/public/slotactiveeffect/00.sub");

  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@LLEDDNBJ@d?3?1ymir?5work?1ui?1public?1slotacti@
  00058	8b c8		 mov	 ecx, eax
  0005a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00061	89 86 a8 00 00
	00		 mov	 DWORD PTR [esi+168], eax
  00067	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1337 : 	m_pSlotActiveEffect->AppendImage("d:/ymir work/ui/public/slotactiveeffect/01.sub");

  0006c	8b 8e a8 00 00
	00		 mov	 ecx, DWORD PTR [esi+168]
  00072	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@HABPOOLM@d?3?1ymir?5work?1ui?1public?1slotacti@
  00077	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1338 : 	m_pSlotActiveEffect->AppendImage("d:/ymir work/ui/public/slotactiveeffect/02.sub");

  0007c	8b 8e a8 00 00
	00		 mov	 ecx, DWORD PTR [esi+168]
  00082	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@PGILJMBC@d?3?1ymir?5work?1ui?1public?1slotacti@
  00087	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1339 : 	m_pSlotActiveEffect->AppendImage("d:/ymir work/ui/public/slotactiveeffect/03.sub");

  0008c	8b 8e a8 00 00
	00		 mov	 ecx, DWORD PTR [esi+168]
  00092	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@DNNHEPLH@d?3?1ymir?5work?1ui?1public?1slotacti@
  00097	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1340 : 	m_pSlotActiveEffect->AppendImage("d:/ymir work/ui/public/slotactiveeffect/04.sub");

  0009c	8b 8e a8 00 00
	00		 mov	 ecx, DWORD PTR [esi+168]
  000a2	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@CANCHPAP@d?3?1ymir?5work?1ui?1public?1slotacti@
  000a7	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1341 : 	m_pSlotActiveEffect->AppendImage("d:/ymir work/ui/public/slotactiveeffect/05.sub");

  000ac	8b 8e a8 00 00
	00		 mov	 ecx, DWORD PTR [esi+168]
  000b2	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@OLIOKMKK@d?3?1ymir?5work?1ui?1public?1slotacti@
  000b7	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1342 : 	m_pSlotActiveEffect->AppendImage("d:/ymir work/ui/public/slotactiveeffect/06.sub");

  000bc	8b 8e a8 00 00
	00		 mov	 ecx, DWORD PTR [esi+168]
  000c2	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@GNBKNOAE@d?3?1ymir?5work?1ui?1public?1slotacti@
  000c7	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1343 : 	m_pSlotActiveEffect->AppendImage("d:/ymir work/ui/public/slotactiveeffect/07.sub");

  000cc	8b 8e a8 00 00
	00		 mov	 ecx, DWORD PTR [esi+168]
  000d2	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@KGEGANKB@d?3?1ymir?5work?1ui?1public?1slotacti@
  000d7	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1344 : 	m_pSlotActiveEffect->AppendImage("d:/ymir work/ui/public/slotactiveeffect/08.sub");

  000dc	8b 8e a8 00 00
	00		 mov	 ecx, DWORD PTR [esi+168]
  000e2	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@FHBALPHE@d?3?1ymir?5work?1ui?1public?1slotacti@
  000e7	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1345 : 	m_pSlotActiveEffect->AppendImage("d:/ymir work/ui/public/slotactiveeffect/09.sub");

  000ec	8b 8e a8 00 00
	00		 mov	 ecx, DWORD PTR [esi+168]
  000f2	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@JMEMGMNB@d?3?1ymir?5work?1ui?1public?1slotacti@
  000f7	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1346 : 	m_pSlotActiveEffect->AppendImage("d:/ymir work/ui/public/slotactiveeffect/10.sub");

  000fc	8b 8e a8 00 00
	00		 mov	 ecx, DWORD PTR [esi+168]
  00102	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@BNDEDGKN@d?3?1ymir?5work?1ui?1public?1slotacti@
  00107	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1347 : 	m_pSlotActiveEffect->AppendImage("d:/ymir work/ui/public/slotactiveeffect/11.sub");

  0010c	8b 8e a8 00 00
	00		 mov	 ecx, DWORD PTR [esi+168]
  00112	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@NGGIOFAI@d?3?1ymir?5work?1ui?1public?1slotacti@
  00117	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1348 : 	m_pSlotActiveEffect->AppendImage("d:/ymir work/ui/public/slotactiveeffect/12.sub");

  0011c	8b 8e a8 00 00
	00		 mov	 ecx, DWORD PTR [esi+168]
  00122	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@FAPMJHKG@d?3?1ymir?5work?1ui?1public?1slotacti@
  00127	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1349 : 	m_pSlotActiveEffect->SetRenderingMode(CGraphicExpandedImageInstance::RENDERING_MODE_SCREEN);

  0012c	8b 8e a8 00 00
	00		 mov	 ecx, DWORD PTR [esi+168]
  00132	6a 01		 push	 1
  00134	e8 00 00 00 00	 call	 ?SetRenderingMode@CAniImageBox@UI@@QAEXH@Z ; UI::CAniImageBox::SetRenderingMode

; 1350 : 	m_pSlotActiveEffect->Show();

  00139	8b 8e a8 00 00
	00		 mov	 ecx, DWORD PTR [esi+168]
  0013f	e8 00 00 00 00	 call	 ?Show@CWindow@UI@@QAEXXZ ; UI::CWindow::Show

; 1351 : 
; 1352 : #ifdef ENABLE_HIGHLIGHT_NEW_ITEM
; 1353 : 	m_pSlotActiveEffectSlot2 = new CAniImageBox(NULL);

  00144	68 8c 00 00 00	 push	 140			; 0000008cH
  00149	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0014e	83 c4 04	 add	 esp, 4
  00151	89 45 f0	 mov	 DWORD PTR $T3[ebp], eax
  00154	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  0015b	85 c0		 test	 eax, eax
  0015d	74 0b		 je	 SHORT $LN5@CreateSlot
  0015f	6a 00		 push	 0
  00161	8b c8		 mov	 ecx, eax
  00163	e8 00 00 00 00	 call	 ??0CAniImageBox@UI@@QAE@PAU_object@@@Z ; UI::CAniImageBox::CAniImageBox
  00168	eb 02		 jmp	 SHORT $LN6@CreateSlot
$LN5@CreateSlot:
  0016a	33 c0		 xor	 eax, eax
$LN6@CreateSlot:

; 1354 : 	m_pSlotActiveEffectSlot2->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot2/00.sub");

  0016c	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@FHBGNIHM@d?3?1ymir?5work?1ui?1public?1slotacti@
  00171	8b c8		 mov	 ecx, eax
  00173	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0017a	89 86 ac 00 00
	00		 mov	 DWORD PTR [esi+172], eax
  00180	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1355 : 	m_pSlotActiveEffectSlot2->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot2/01.sub");

  00185	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]
  0018b	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@JMEKALNJ@d?3?1ymir?5work?1ui?1public?1slotacti@
  00190	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1356 : 	m_pSlotActiveEffectSlot2->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot2/02.sub");

  00195	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]
  0019b	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@BKNOHJHH@d?3?1ymir?5work?1ui?1public?1slotacti@
  001a0	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1357 : 	m_pSlotActiveEffectSlot2->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot2/03.sub");

  001a5	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]
  001ab	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@NBICKKNC@d?3?1ymir?5work?1ui?1public?1slotacti@
  001b0	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1358 : 	m_pSlotActiveEffectSlot2->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot2/04.sub");

  001b5	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]
  001bb	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@MMIHJKGK@d?3?1ymir?5work?1ui?1public?1slotacti@
  001c0	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1359 : 	m_pSlotActiveEffectSlot2->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot2/05.sub");

  001c5	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]
  001cb	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@HNLEJMP@d?3?1ymir?5work?1ui?1public?1slotacti@
  001d0	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1360 : 	m_pSlotActiveEffectSlot2->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot2/06.sub");

  001d5	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]
  001db	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@IBEPDLGB@d?3?1ymir?5work?1ui?1public?1slotacti@
  001e0	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1361 : 	m_pSlotActiveEffectSlot2->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot2/07.sub");

  001e5	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]
  001eb	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@EKBDOIME@d?3?1ymir?5work?1ui?1public?1slotacti@
  001f0	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1362 : 	m_pSlotActiveEffectSlot2->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot2/08.sub");

  001f5	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]
  001fb	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LLEFFKBB@d?3?1ymir?5work?1ui?1public?1slotacti@
  00200	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1363 : 	m_pSlotActiveEffectSlot2->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot2/09.sub");

  00205	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]
  0020b	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@HABJIJLE@d?3?1ymir?5work?1ui?1public?1slotacti@
  00210	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1364 : 	m_pSlotActiveEffectSlot2->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot2/10.sub");

  00215	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]
  0021b	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@PBGBNDMI@d?3?1ymir?5work?1ui?1public?1slotacti@
  00220	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1365 : 	m_pSlotActiveEffectSlot2->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot2/11.sub");

  00225	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]
  0022b	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@DKDNAAGN@d?3?1ymir?5work?1ui?1public?1slotacti@
  00230	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1366 : 	m_pSlotActiveEffectSlot2->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot2/12.sub");

  00235	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]
  0023b	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LMKJHCMD@d?3?1ymir?5work?1ui?1public?1slotacti@
  00240	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1367 : 	m_pSlotActiveEffectSlot2->SetRenderingMode(CGraphicExpandedImageInstance::RENDERING_MODE_SCREEN);

  00245	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]
  0024b	6a 01		 push	 1
  0024d	e8 00 00 00 00	 call	 ?SetRenderingMode@CAniImageBox@UI@@QAEXH@Z ; UI::CAniImageBox::SetRenderingMode

; 1368 : 	m_pSlotActiveEffectSlot2->Show();

  00252	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]
  00258	e8 00 00 00 00	 call	 ?Show@CWindow@UI@@QAEXXZ ; UI::CWindow::Show

; 1369 : 
; 1370 : 	m_pSlotActiveEffectSlot3 = new CAniImageBox(NULL);

  0025d	68 8c 00 00 00	 push	 140			; 0000008cH
  00262	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00267	83 c4 04	 add	 esp, 4
  0026a	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  0026d	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  00274	85 c0		 test	 eax, eax
  00276	74 0b		 je	 SHORT $LN7@CreateSlot
  00278	6a 00		 push	 0
  0027a	8b c8		 mov	 ecx, eax
  0027c	e8 00 00 00 00	 call	 ??0CAniImageBox@UI@@QAE@PAU_object@@@Z ; UI::CAniImageBox::CAniImageBox
  00281	eb 02		 jmp	 SHORT $LN8@CreateSlot
$LN7@CreateSlot:
  00283	33 c0		 xor	 eax, eax
$LN8@CreateSlot:

; 1371 : 	m_pSlotActiveEffectSlot3->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot3/00.sub");

  00285	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@EAGNMMDP@d?3?1ymir?5work?1ui?1public?1slotacti@
  0028a	8b c8		 mov	 ecx, eax
  0028c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00293	89 86 b0 00 00
	00		 mov	 DWORD PTR [esi+176], eax
  00299	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1372 : 	m_pSlotActiveEffectSlot3->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot3/01.sub");

  0029e	8b 8e b0 00 00
	00		 mov	 ecx, DWORD PTR [esi+176]
  002a4	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@ILDBBPJK@d?3?1ymir?5work?1ui?1public?1slotacti@
  002a9	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1373 : 	m_pSlotActiveEffectSlot3->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot3/02.sub");

  002ae	8b 8e b0 00 00
	00		 mov	 ecx, DWORD PTR [esi+176]
  002b4	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@NKFGNDE@d?3?1ymir?5work?1ui?1public?1slotacti@
  002b9	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1374 : 	m_pSlotActiveEffectSlot3->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot3/03.sub");

  002be	8b 8e b0 00 00
	00		 mov	 ecx, DWORD PTR [esi+176]
  002c4	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@MGPJLOJB@d?3?1ymir?5work?1ui?1public?1slotacti@
  002c9	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1375 : 	m_pSlotActiveEffectSlot3->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot3/04.sub");

  002ce	8b 8e b0 00 00
	00		 mov	 ecx, DWORD PTR [esi+176]
  002d4	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@NLPMIOCJ@d?3?1ymir?5work?1ui?1public?1slotacti@
  002d9	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1376 : 	m_pSlotActiveEffectSlot3->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot3/05.sub");

  002de	8b 8e b0 00 00
	00		 mov	 ecx, DWORD PTR [esi+176]
  002e4	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@BAKAFNIM@d?3?1ymir?5work?1ui?1public?1slotacti@
  002e9	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1377 : 	m_pSlotActiveEffectSlot3->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot3/06.sub");

  002ee	8b 8e b0 00 00
	00		 mov	 ecx, DWORD PTR [esi+176]
  002f4	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@JGDECPCC@d?3?1ymir?5work?1ui?1public?1slotacti@
  002f9	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1378 : 	m_pSlotActiveEffectSlot3->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot3/07.sub");

  002fe	8b 8e b0 00 00
	00		 mov	 ecx, DWORD PTR [esi+176]
  00304	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@FNGIPMIH@d?3?1ymir?5work?1ui?1public?1slotacti@
  00309	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1379 : 	m_pSlotActiveEffectSlot3->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot3/08.sub");

  0030e	8b 8e b0 00 00
	00		 mov	 ecx, DWORD PTR [esi+176]
  00314	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@KMDOEOFC@d?3?1ymir?5work?1ui?1public?1slotacti@
  00319	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1380 : 	m_pSlotActiveEffectSlot3->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot3/09.sub");

  0031e	8b 8e b0 00 00
	00		 mov	 ecx, DWORD PTR [esi+176]
  00324	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@GHGCJNPH@d?3?1ymir?5work?1ui?1public?1slotacti@
  00329	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1381 : 	m_pSlotActiveEffectSlot3->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot3/10.sub");

  0032e	8b 8e b0 00 00
	00		 mov	 ecx, DWORD PTR [esi+176]
  00334	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@OGBKMHIL@d?3?1ymir?5work?1ui?1public?1slotacti@
  00339	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1382 : 	m_pSlotActiveEffectSlot3->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot3/11.sub");

  0033e	8b 8e b0 00 00
	00		 mov	 ecx, DWORD PTR [esi+176]
  00344	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@CNEGBECO@d?3?1ymir?5work?1ui?1public?1slotacti@
  00349	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1383 : 	m_pSlotActiveEffectSlot3->AppendImage("d:/ymir work/ui/public/slotactiveeffect/slot3/12.sub");

  0034e	8b 8e b0 00 00
	00		 mov	 ecx, DWORD PTR [esi+176]
  00354	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@KLNCGGIA@d?3?1ymir?5work?1ui?1public?1slotacti@
  00359	e8 00 00 00 00	 call	 ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ; UI::CAniImageBox::AppendImage

; 1384 : 	m_pSlotActiveEffectSlot3->SetRenderingMode(CGraphicExpandedImageInstance::RENDERING_MODE_SCREEN);

  0035e	8b 8e b0 00 00
	00		 mov	 ecx, DWORD PTR [esi+176]
  00364	6a 01		 push	 1
  00366	e8 00 00 00 00	 call	 ?SetRenderingMode@CAniImageBox@UI@@QAEXH@Z ; UI::CAniImageBox::SetRenderingMode

; 1385 : 	m_pSlotActiveEffectSlot3->Show();

  0036b	8b 8e b0 00 00
	00		 mov	 ecx, DWORD PTR [esi+176]
  00371	e8 00 00 00 00	 call	 ?Show@CWindow@UI@@QAEXXZ ; UI::CWindow::Show

; 1386 : #endif
; 1387 : }

  00376	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00379	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00380	59		 pop	 ecx
  00381	5e		 pop	 esi
  00382	8b e5		 mov	 esp, ebp
  00384	5d		 pop	 ebp
  00385	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXXZ$0:
  00000	68 8c 00 00 00	 push	 140			; 0000008cH
  00005	8b 45 f0	 mov	 eax, DWORD PTR $T4[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__unwindfunclet$?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXXZ$1:
  00012	68 8c 00 00 00	 push	 140			; 0000008cH
  00017	8b 45 f0	 mov	 eax, DWORD PTR $T3[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00020	83 c4 08	 add	 esp, 8
  00023	c3		 ret	 0
__unwindfunclet$?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXXZ$2:
  00024	68 8c 00 00 00	 push	 140			; 0000008cH
  00029	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00032	83 c4 08	 add	 esp, 8
  00035	c3		 ret	 0
  00036	cc		 int	 3
  00037	cc		 int	 3
  00038	cc		 int	 3
  00039	cc		 int	 3
  0003a	cc		 int	 3
__ehhandler$?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXXZ:
  0003b	90		 npad	 1
  0003c	90		 npad	 1
  0003d	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00041	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00044	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00047	33 c8		 xor	 ecx, eax
  00049	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004e	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXXZ
  00053	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXXZ ENDP	; UI::CSlotWindow::__CreateSlotEnableEffect
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?__CreateToggleSlotImage@CSlotWindow@UI@@IAEXXZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?__CreateToggleSlotImage@CSlotWindow@UI@@IAEXXZ PROC	; UI::CSlotWindow::__CreateToggleSlotImage, COMDAT
; _this$ = ecx

; 1323 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?__CreateToggleSlotImage@CSlotWindow@UI@@IAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx

; 1324 : 	__DestroyToggleSlotImage();

  00026	e8 00 00 00 00	 call	 ?__DestroyToggleSlotImage@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::__DestroyToggleSlotImage

; 1325 : 
; 1326 : 	m_pToggleSlotImage = new CImageBox(NULL);

  0002b	68 80 00 00 00	 push	 128			; 00000080H
  00030	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00035	83 c4 04	 add	 esp, 4
  00038	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  0003b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00042	85 c0		 test	 eax, eax
  00044	74 0b		 je	 SHORT $LN3@CreateTogg
  00046	6a 00		 push	 0
  00048	8b c8		 mov	 ecx, eax
  0004a	e8 00 00 00 00	 call	 ??0CImageBox@UI@@QAE@PAU_object@@@Z ; UI::CImageBox::CImageBox
  0004f	eb 02		 jmp	 SHORT $LN4@CreateTogg
$LN3@CreateTogg:
  00051	33 c0		 xor	 eax, eax
$LN4@CreateTogg:

; 1327 : 	m_pToggleSlotImage->LoadImage("d:/ymir work/ui/public/slot_toggle.sub");

  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@JJGPDFBJ@d?3?1ymir?5work?1ui?1public?1slot_tog@
  00058	8b c8		 mov	 ecx, eax
  0005a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00061	89 86 a4 00 00
	00		 mov	 DWORD PTR [esi+164], eax
  00067	e8 00 00 00 00	 call	 ?LoadImageA@CImageBox@UI@@QAEHPBD@Z ; UI::CImageBox::LoadImageA

; 1328 : 	m_pToggleSlotImage->Show();

  0006c	8b 8e a4 00 00
	00		 mov	 ecx, DWORD PTR [esi+164]
  00072	e8 00 00 00 00	 call	 ?Show@CWindow@UI@@QAEXXZ ; UI::CWindow::Show

; 1329 : }

  00077	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00081	59		 pop	 ecx
  00082	5e		 pop	 esi
  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?__CreateToggleSlotImage@CSlotWindow@UI@@IAEXXZ$0:
  00000	68 80 00 00 00	 push	 128			; 00000080H
  00005	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?__CreateToggleSlotImage@CSlotWindow@UI@@IAEXXZ:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?__CreateToggleSlotImage@CSlotWindow@UI@@IAEXXZ
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?__CreateToggleSlotImage@CSlotWindow@UI@@IAEXXZ ENDP	; UI::CSlotWindow::__CreateToggleSlotImage
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?__Initialize@CSlotWindow@UI@@IAEXXZ
_TEXT	SEGMENT
?__Initialize@CSlotWindow@UI@@IAEXXZ PROC		; UI::CSlotWindow::__Initialize, COMDAT
; _this$ = ecx

; 1473 : 	m_dwSlotType = 0;

  00000	c7 41 7c 00 00
	00 00		 mov	 DWORD PTR [ecx+124], 0

; 1474 : 	m_dwSlotStyle = SLOT_STYLE_PICK_UP;

  00007	c7 81 80 00 00
	00 01 00 00 00	 mov	 DWORD PTR [ecx+128], 1

; 1475 : 	m_dwToolTipSlotNumber = SLOT_NUMBER_NONE;

  00011	c7 81 94 00 00
	00 ff ff ff ff	 mov	 DWORD PTR [ecx+148], -1

; 1476 : 
; 1477 : 	m_isUseMode = FALSE;

  0001b	c7 81 98 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+152], 0

; 1478 : 	m_isUsableItem = FALSE;

  00025	c7 81 9c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+156], 0

; 1479 : 
; 1480 : 	m_pToggleSlotImage = NULL;

  0002f	c7 81 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+164], 0

; 1481 : 	m_pSlotActiveEffect = NULL;

  00039	c7 81 a8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+168], 0

; 1482 : #ifdef ENABLE_HIGHLIGHT_NEW_ITEM
; 1483 : 	m_pSlotActiveEffectSlot2 = NULL;

  00043	c7 81 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+172], 0

; 1484 : 	m_pSlotActiveEffectSlot3 = NULL;

  0004d	c7 81 b0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+176], 0

; 1485 : #endif
; 1486 : 	m_pBaseImageInstance = NULL;

  00057	c7 81 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+160], 0

; 1487 : }

  00061	c3		 ret	 0
?__Initialize@CSlotWindow@UI@@IAEXXZ ENDP		; UI::CSlotWindow::__Initialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\deque
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\deque
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\deque
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\deque
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\deque
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?ReserveDestroyCoolTimeFinishEffect@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_dwSlotIndex$ = 8					; size = 4
?ReserveDestroyCoolTimeFinishEffect@CSlotWindow@UI@@QAEXK@Z PROC ; UI::CSlotWindow::ReserveDestroyCoolTimeFinishEffect, COMDAT
; _this$ = ecx

; 1304 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\deque

; 1149 :         if ((_Myoff() + _Mysize()) % _Block_size == 0 && _Mapsize() <= (_Mysize() + _Block_size) / _Block_size) {

  00003	8b 81 c0 00 00
	00		 mov	 eax, DWORD PTR [ecx+192]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 1304 : {

  00009	53		 push	 ebx
  0000a	56		 push	 esi

; 1305 : 	m_ReserveDestroyEffectDeque.push_back(dwSlotIndex);

  0000b	8d b1 b4 00 00
	00		 lea	 esi, DWORD PTR [ecx+180]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\deque

; 1149 :         if ((_Myoff() + _Mysize()) % _Block_size == 0 && _Mapsize() <= (_Mysize() + _Block_size) / _Block_size) {

  00011	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00014	03 c1		 add	 eax, ecx
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 1304 : {

  00016	57		 push	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\deque

; 1149 :         if ((_Myoff() + _Mysize()) % _Block_size == 0 && _Mapsize() <= (_Mysize() + _Block_size) / _Block_size) {

  00017	a8 03		 test	 al, 3
  00019	75 14		 jne	 SHORT $LN6@ReserveDes
  0001b	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  0001e	c1 e8 02	 shr	 eax, 2
  00021	39 46 08	 cmp	 DWORD PTR [esi+8], eax
  00024	77 09		 ja	 SHORT $LN6@ReserveDes

; 1150 :             _Growmap(1);

  00026	6a 01		 push	 1
  00028	8b ce		 mov	 ecx, esi
  0002a	e8 00 00 00 00	 call	 ?_Growmap@?$deque@KV?$allocator@K@std@@@std@@AAEXI@Z ; std::deque<unsigned long,std::allocator<unsigned long> >::_Growmap
$LN6@ReserveDes:

; 1151 :         }
; 1152 :         _Myoff() &= _Mapsize() * _Block_size - 1;

  0002f	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00032	8d 04 8d ff ff
	ff ff		 lea	 eax, DWORD PTR [ecx*4-1]

; 563  :         return (_Off / _Block_size) & (_Mapsize - 1);

  00039	49		 dec	 ecx

; 1152 :         _Myoff() &= _Mapsize() * _Block_size - 1;

  0003a	21 46 0c	 and	 DWORD PTR [esi+12], eax

; 1153 :         size_type _Newoff = _Myoff() + _Mysize();

  0003d	8b 7e 10	 mov	 edi, DWORD PTR [esi+16]
  00040	03 7e 0c	 add	 edi, DWORD PTR [esi+12]

; 563  :         return (_Off / _Block_size) & (_Mapsize - 1);

  00043	8b c7		 mov	 eax, edi
  00045	c1 e8 02	 shr	 eax, 2
  00048	23 c8		 and	 ecx, eax

; 1155 :         if (_Map()[_Block] == nullptr) {

  0004a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0004d	8d 1c 8d 00 00
	00 00		 lea	 ebx, DWORD PTR [ecx*4]
  00054	83 3c 03 00	 cmp	 DWORD PTR [ebx+eax], 0
  00058	75 10		 jne	 SHORT $LN7@ReserveDes
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

  0005a	6a 10		 push	 16			; 00000010H
  0005c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\deque

; 1156 :             _Map()[_Block] = _Getal().allocate(_Block_size);

  00061	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

  00064	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\deque

; 1156 :             _Map()[_Block] = _Getal().allocate(_Block_size);

  00067	89 04 0b	 mov	 DWORD PTR [ebx+ecx], eax
$LN7@ReserveDes:

; 1157 :         }
; 1158 : 
; 1159 :         _Alty_traits::construct(

  0006a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0006d	83 e7 03	 and	 edi, 3
  00070	8b 45 08	 mov	 eax, DWORD PTR _dwSlotIndex$[ebp]
  00073	8b 0c 19	 mov	 ecx, DWORD PTR [ecx+ebx]
  00076	89 04 b9	 mov	 DWORD PTR [ecx+edi*4], eax

; 1160 :             _Getal(), _Unfancy(_Map()[_Block] + _Newoff % _Block_size), _STD forward<_Tys>(_Vals)...);
; 1161 : 
; 1162 :         ++_Mysize();

  00079	ff 46 10	 inc	 DWORD PTR [esi+16]
  0007c	5f		 pop	 edi
  0007d	5e		 pop	 esi
  0007e	5b		 pop	 ebx
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 1306 : }

  0007f	5d		 pop	 ebp
  00080	c2 04 00	 ret	 4
?ReserveDestroyCoolTimeFinishEffect@CSlotWindow@UI@@QAEXK@Z ENDP ; UI::CSlotWindow::ReserveDestroyCoolTimeFinishEffect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetUsableItem@CSlotWindow@UI@@QAEXH@Z
_TEXT	SEGMENT
_bFlag$ = 8						; size = 4
?SetUsableItem@CSlotWindow@UI@@QAEXH@Z PROC		; UI::CSlotWindow::SetUsableItem, COMDAT
; _this$ = ecx

; 1299 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1300 : 	m_isUsableItem = bFlag;

  00003	8b 45 08	 mov	 eax, DWORD PTR _bFlag$[ebp]
  00006	89 81 9c 00 00
	00		 mov	 DWORD PTR [ecx+156], eax

; 1301 : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?SetUsableItem@CSlotWindow@UI@@QAEXH@Z ENDP		; UI::CSlotWindow::SetUsableItem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetUseMode@CSlotWindow@UI@@QAEXH@Z
_TEXT	SEGMENT
_bFlag$ = 8						; size = 4
?SetUseMode@CSlotWindow@UI@@QAEXH@Z PROC		; UI::CSlotWindow::SetUseMode, COMDAT
; _this$ = ecx

; 1294 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1295 : 	m_isUseMode = bFlag;

  00003	8b 45 08	 mov	 eax, DWORD PTR _bFlag$[ebp]
  00006	89 81 98 00 00
	00		 mov	 DWORD PTR [ecx+152], eax

; 1296 : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?SetUseMode@CSlotWindow@UI@@QAEXH@Z ENDP		; UI::CSlotWindow::SetUseMode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnOverOutItem@CSlotWindow@UI@@QAEXXZ
_TEXT	SEGMENT
?OnOverOutItem@CSlotWindow@UI@@QAEXXZ PROC		; UI::CSlotWindow::OnOverOutItem, COMDAT
; _this$ = ecx

; 955  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 956  : 	if (SLOT_NUMBER_NONE == m_dwToolTipSlotNumber)

  00003	83 be 94 00 00
	00 ff		 cmp	 DWORD PTR [esi+148], -1
  0000a	74 26		 je	 SHORT $LN1@OnOverOutI

; 957  : 		return;
; 958  : 
; 959  : 	m_dwToolTipSlotNumber = SLOT_NUMBER_NONE;
; 960  : 	PyCallClassMemberFunc(m_poHandler, "OnOverOutItem", Py_BuildValue("()"));

  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_02HCKGKOFO@?$CI?$CJ@
  00011	c7 86 94 00 00
	00 ff ff ff ff	 mov	 DWORD PTR [esi+148], -1
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00021	50		 push	 eax
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0O@IBCIPGEP@OnOverOutItem@
  00027	ff 76 5c	 push	 DWORD PTR [esi+92]
  0002a	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  0002f	83 c4 10	 add	 esp, 16			; 00000010H
$LN1@OnOverOutI:

; 961  : }

  00032	5e		 pop	 esi
  00033	c3		 ret	 0
?OnOverOutItem@CSlotWindow@UI@@QAEXXZ ENDP		; UI::CSlotWindow::OnOverOutItem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnOverInItem@CSlotWindow@UI@@QAEHK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwSlotNumber$ = 8					; size = 4
?OnOverInItem@CSlotWindow@UI@@QAEHK@Z PROC		; UI::CSlotWindow::OnOverInItem, COMDAT
; _this$ = ecx

; 937  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 938  : 	TSlot * pSlot;
; 939  : 	if (!GetSlotPointer(dwSlotNumber, &pSlot))

  00006	8b 7d 08	 mov	 edi, DWORD PTR _dwSlotNumber$[ebp]
  00009	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  0000c	50		 push	 eax
  0000d	57		 push	 edi
  0000e	8b f1		 mov	 esi, ecx
  00010	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00015	85 c0		 test	 eax, eax
  00017	74 44		 je	 SHORT $LN6@OnOverInIt

; 940  : 		return FALSE;
; 941  : 
; 942  : 	if (!pSlot->isItem)

  00019	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  0001c	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00020	74 3b		 je	 SHORT $LN6@OnOverInIt

; 944  : 
; 945  : 	if (pSlot->dwSlotNumber == m_dwToolTipSlotNumber)

  00022	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00025	3b 86 94 00 00
	00		 cmp	 eax, DWORD PTR [esi+148]
  0002b	74 23		 je	 SHORT $LN11@OnOverInIt

; 946  : 		return TRUE;
; 947  : 
; 948  : 	m_dwToolTipSlotNumber = dwSlotNumber;
; 949  : 	PyCallClassMemberFunc(m_poHandler, "OnOverInItem", Py_BuildValue("(i)", dwSlotNumber));

  0002d	57		 push	 edi
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_03LIHNMIHG@?$CIi?$CJ@
  00033	89 be 94 00 00
	00		 mov	 DWORD PTR [esi+148], edi
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  0003f	50		 push	 eax
  00040	68 00 00 00 00	 push	 OFFSET ??_C@_0N@CBOPEHFH@OnOverInItem@
  00045	ff 76 5c	 push	 DWORD PTR [esi+92]
  00048	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
$LN11@OnOverInIt:

; 950  : 
; 951  : 	return TRUE;
; 952  : }

  00050	5f		 pop	 edi
  00051	b8 01 00 00 00	 mov	 eax, 1
  00056	5e		 pop	 esi
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c2 04 00	 ret	 4
$LN6@OnOverInIt:
  0005d	5f		 pop	 edi

; 943  : 		return FALSE;

  0005e	33 c0		 xor	 eax, eax

; 950  : 
; 951  : 	return TRUE;
; 952  : }

  00060	5e		 pop	 esi
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 04 00	 ret	 4
?OnOverInItem@CSlotWindow@UI@@QAEHK@Z ENDP		; UI::CSlotWindow::OnOverInItem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?HideRequirementSign@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwSlotNumber$ = 8					; size = 4
?HideRequirementSign@CSlotWindow@UI@@QAEXK@Z PROC	; UI::CSlotWindow::HideRequirementSign, COMDAT
; _this$ = ecx

; 788  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 789  : 	TSlot * pSlot;
; 790  : 	if (!GetSlotPointer(dwSlotNumber, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwSlotNumber$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 0f		 je	 SHORT $LN1@HideRequir

; 791  : 		return;
; 792  : 
; 793  : 	if (!pSlot->pSignImage)

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	8b 48 58	 mov	 ecx, DWORD PTR [eax+88]
  0001a	85 c9		 test	 ecx, ecx
  0001c	74 05		 je	 SHORT $LN1@HideRequir

; 794  : 		return;
; 795  : 
; 796  : 	pSlot->pSignImage->Hide();

  0001e	e8 00 00 00 00	 call	 ?Hide@CWindow@UI@@QAEXXZ ; UI::CWindow::Hide
$LN1@HideRequir:

; 797  : }

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?HideRequirementSign@CSlotWindow@UI@@QAEXK@Z ENDP	; UI::CSlotWindow::HideRequirementSign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?ShowRequirementSign@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwSlotNumber$ = 8					; size = 4
?ShowRequirementSign@CSlotWindow@UI@@QAEXK@Z PROC	; UI::CSlotWindow::ShowRequirementSign, COMDAT
; _this$ = ecx

; 776  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 777  : 	TSlot * pSlot;
; 778  : 	if (!GetSlotPointer(dwSlotNumber, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwSlotNumber$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 0f		 je	 SHORT $LN1@ShowRequir

; 779  : 		return;
; 780  : 
; 781  : 	if (!pSlot->pSignImage)

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	8b 48 58	 mov	 ecx, DWORD PTR [eax+88]
  0001a	85 c9		 test	 ecx, ecx
  0001c	74 05		 je	 SHORT $LN1@ShowRequir

; 782  : 		return;
; 783  : 
; 784  : 	pSlot->pSignImage->Show();

  0001e	e8 00 00 00 00	 call	 ?Show@CWindow@UI@@QAEXXZ ; UI::CWindow::Show
$LN1@ShowRequir:

; 785  : }

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?ShowRequirementSign@CSlotWindow@UI@@QAEXK@Z ENDP	; UI::CSlotWindow::ShowRequirementSign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?OnPressedSlotButton@CSlotWindow@UI@@QAEXKKH@Z
_TEXT	SEGMENT
_dwType$ = 8						; size = 4
_dwSlotNumber$ = 12					; size = 4
_isLeft$ = 16						; size = 4
?OnPressedSlotButton@CSlotWindow@UI@@QAEXKKH@Z PROC	; UI::CSlotWindow::OnPressedSlotButton, COMDAT
; _this$ = ecx

; 964  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 965  : 	if (CSlotButton::SLOT_BUTTON_TYPE_PLUS == dwType)

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwType$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	85 c0		 test	 eax, eax
  0000b	75 24		 jne	 SHORT $LN2@OnPressedS

; 966  : 	{
; 967  : 		PyCallClassMemberFunc(m_poHandler, "OnPressedSlotButton", Py_BuildValue("(i)", dwSlotNumber));

  0000d	ff 75 0c	 push	 DWORD PTR _dwSlotNumber$[ebp]
  00010	68 00 00 00 00	 push	 OFFSET ??_C@_03LIHNMIHG@?$CIi?$CJ@
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  0001b	50		 push	 eax
  0001c	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@MBGDMPNF@OnPressedSlotButton@
  00021	ff 76 5c	 push	 DWORD PTR [esi+92]
  00024	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00029	83 c4 14	 add	 esp, 20			; 00000014H
  0002c	5e		 pop	 esi

; 974  : 		}
; 975  : 	}
; 976  : }

  0002d	5d		 pop	 ebp
  0002e	c2 0c 00	 ret	 12			; 0000000cH
$LN2@OnPressedS:

; 968  : 	}
; 969  : 	else if (CSlotButton::SLOT_BUTTON_TYPE_COVER == dwType)

  00031	83 f8 01	 cmp	 eax, 1
  00034	75 0b		 jne	 SHORT $LN5@OnPressedS

; 970  : 	{
; 971  : 		if (isLeft)

  00036	83 7d 10 00	 cmp	 DWORD PTR _isLeft$[ebp], 0
  0003a	74 05		 je	 SHORT $LN5@OnPressedS

; 972  : 		{
; 973  : 			OnMouseLeftButtonDown();

  0003c	8b 06		 mov	 eax, DWORD PTR [esi]
  0003e	ff 50 58	 call	 DWORD PTR [eax+88]
$LN5@OnPressedS:
  00041	5e		 pop	 esi

; 974  : 		}
; 975  : 	}
; 976  : }

  00042	5d		 pop	 ebp
  00043	c2 0c 00	 ret	 12			; 0000000cH
?OnPressedSlotButton@CSlotWindow@UI@@QAEXKKH@Z ENDP	; UI::CSlotWindow::OnPressedSlotButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?HideAllSlotButton@CSlotWindow@UI@@QAEXXZ
_TEXT	SEGMENT
?HideAllSlotButton@CSlotWindow@UI@@QAEXXZ PROC		; UI::CSlotWindow::HideAllSlotButton, COMDAT
; _this$ = ecx

; 763  : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1090 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00004	8b 87 8c 00 00
	00		 mov	 eax, DWORD PTR [edi+140]

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0000a	8b 30		 mov	 esi, DWORD PTR [eax]
  0000c	3b f0		 cmp	 esi, eax
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 764  : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  0000e	74 16		 je	 SHORT $LN3@HideAllSlo
$LL18@HideAllSlo:

; 765  : 	{
; 766  : 		TSlot & rSlot = *itor;
; 767  : 
; 768  : 		if (rSlot.pSlotButton)

  00010	8b 4e 5c	 mov	 ecx, DWORD PTR [esi+92]
  00013	85 c9		 test	 ecx, ecx
  00015	74 05		 je	 SHORT $LN2@HideAllSlo

; 769  : 		{
; 770  : 			rSlot.pSlotButton->Hide();

  00017	e8 00 00 00 00	 call	 ?Hide@CWindow@UI@@QAEXXZ ; UI::CWindow::Hide
$LN2@HideAllSlo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 165  :         this->_Ptr = this->_Ptr->_Next;

  0001c	8b 36		 mov	 esi, DWORD PTR [esi]

; 198  :         return this->_Ptr == _Right._Ptr;

  0001e	3b b7 8c 00 00
	00		 cmp	 esi, DWORD PTR [edi+140]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 764  : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  00024	75 ea		 jne	 SHORT $LL18@HideAllSlo
$LN3@HideAllSlo:
  00026	5f		 pop	 edi

; 771  : 		}
; 772  : 	}
; 773  : }

  00027	5e		 pop	 esi
  00028	c3		 ret	 0
?HideAllSlotButton@CSlotWindow@UI@@QAEXXZ ENDP		; UI::CSlotWindow::HideAllSlotButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?ShowSlotButton@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwSlotNumber$ = 8					; size = 4
?ShowSlotButton@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::ShowSlotButton, COMDAT
; _this$ = ecx

; 751  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 752  : 	TSlot * pSlot;
; 753  : 	if (!GetSlotPointer(dwSlotNumber, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwSlotNumber$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 0f		 je	 SHORT $LN3@ShowSlotBu

; 754  : 		return;
; 755  : 
; 756  : 	if (pSlot->pSlotButton)

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	8b 48 54	 mov	 ecx, DWORD PTR [eax+84]
  0001a	85 c9		 test	 ecx, ecx
  0001c	74 05		 je	 SHORT $LN3@ShowSlotBu

; 757  : 	{
; 758  : 		pSlot->pSlotButton->Show();

  0001e	e8 00 00 00 00	 call	 ?Show@CWindow@UI@@QAEXXZ ; UI::CWindow::Show
$LN3@ShowSlotBu:

; 759  : 	}
; 760  : }

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?ShowSlotButton@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::ShowSlotButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?GetSelectedSlotNumber@CSlotWindow@UI@@QAEKK@Z
_TEXT	SEGMENT
_dwIndex$ = 8						; size = 4
?GetSelectedSlotNumber@CSlotWindow@UI@@QAEKK@Z PROC	; UI::CSlotWindow::GetSelectedSlotNumber, COMDAT
; _this$ = ecx

; 733  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 734  : 	if (dwIndex >= m_dwSelectedSlotIndexList.size())

  00004	8b 75 08	 mov	 esi, DWORD PTR _dwIndex$[ebp]
  00007	3b b1 88 00 00
	00		 cmp	 esi, DWORD PTR [ecx+136]
  0000d	72 08		 jb	 SHORT $LN5@GetSelecte

; 735  : 		return DWORD(-1);

  0000f	83 c8 ff	 or	 eax, -1
  00012	5e		 pop	 esi

; 748  : }

  00013	5d		 pop	 ebp
  00014	c2 04 00	 ret	 4
$LN5@GetSelecte:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1090 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00017	8b 89 84 00 00
	00		 mov	 ecx, DWORD PTR [ecx+132]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 737  : 	DWORD dwCount = 0;

  0001d	33 d2		 xor	 edx, edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0001f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00021	3b c1		 cmp	 eax, ecx
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 739  : 	for (; itor != m_dwSelectedSlotIndexList.end(); ++itor)

  00023	74 0b		 je	 SHORT $LN41@GetSelecte
$LL19@GetSelecte:

; 740  : 	{
; 741  : 		if (dwIndex == dwCount)

  00025	3b f2		 cmp	 esi, edx
  00027	74 07		 je	 SHORT $LN41@GetSelecte
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 165  :         this->_Ptr = this->_Ptr->_Next;

  00029	8b 00		 mov	 eax, DWORD PTR [eax]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 744  : 		++dwCount;

  0002b	42		 inc	 edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 198  :         return this->_Ptr == _Right._Ptr;

  0002c	3b c1		 cmp	 eax, ecx
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 739  : 	for (; itor != m_dwSelectedSlotIndexList.end(); ++itor)

  0002e	75 f5		 jne	 SHORT $LL19@GetSelecte
$LN41@GetSelecte:

; 745  : 	}
; 746  : 
; 747  : 	return *itor;

  00030	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00033	5e		 pop	 esi

; 748  : }

  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
?GetSelectedSlotNumber@CSlotWindow@UI@@QAEKK@Z ENDP	; UI::CSlotWindow::GetSelectedSlotNumber
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?GetSelectedSlotCount@CSlotWindow@UI@@QAEKXZ
_TEXT	SEGMENT
?GetSelectedSlotCount@CSlotWindow@UI@@QAEKXZ PROC	; UI::CSlotWindow::GetSelectedSlotCount, COMDAT
; _this$ = ecx

; 729  : 	return m_dwSelectedSlotIndexList.size();

  00000	8b 81 88 00 00
	00		 mov	 eax, DWORD PTR [ecx+136]

; 730  : }

  00006	c3		 ret	 0
?GetSelectedSlotCount@CSlotWindow@UI@@QAEKXZ ENDP	; UI::CSlotWindow::GetSelectedSlotCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?isSelectedSlot@CSlotWindow@UI@@QAEHK@Z
_TEXT	SEGMENT
_dwIndex$ = 8						; size = 4
?isSelectedSlot@CSlotWindow@UI@@QAEHK@Z PROC		; UI::CSlotWindow::isSelectedSlot, COMDAT
; _this$ = ecx

; 711  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1090 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00003	8b 89 84 00 00
	00		 mov	 ecx, DWORD PTR [ecx+132]

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00009	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000b	3b c1		 cmp	 eax, ecx
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 713  : 	for (; itor != m_dwSelectedSlotIndexList.end(); ++itor)

  0000d	74 0e		 je	 SHORT $LN3@isSelected
  0000f	8b 55 08	 mov	 edx, DWORD PTR _dwIndex$[ebp]
$LL18@isSelected:

; 714  : 	{
; 715  : 		if (dwIndex == *itor)

  00012	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00015	74 0c		 je	 SHORT $LN36@isSelected
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 165  :         this->_Ptr = this->_Ptr->_Next;

  00017	8b 00		 mov	 eax, DWORD PTR [eax]

; 198  :         return this->_Ptr == _Right._Ptr;

  00019	3b c1		 cmp	 eax, ecx
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 713  : 	for (; itor != m_dwSelectedSlotIndexList.end(); ++itor)

  0001b	75 f5		 jne	 SHORT $LL18@isSelected
$LN3@isSelected:

; 717  : 	}
; 718  : 
; 719  : 	return FALSE;

  0001d	33 c0		 xor	 eax, eax

; 720  : }

  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
$LN36@isSelected:

; 716  : 			return TRUE;

  00023	b8 01 00 00 00	 mov	 eax, 1

; 720  : }

  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?isSelectedSlot@CSlotWindow@UI@@QAEHK@Z ENDP		; UI::CSlotWindow::isSelectedSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SelectSlot@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
__Op$2 = -20						; size = 8
_this$1$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pSlot$ = 8						; size = 4
_dwSelectingIndex$ = 8					; size = 4
?SelectSlot@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::SelectSlot, COMDAT
; _this$ = ecx

; 685  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SelectSlot@CSlotWindow@UI@@QAEXK@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d1		 mov	 edx, ecx
  0002a	89 55 f0	 mov	 DWORD PTR _this$1$[ebp], edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1090 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  0002d	8b b2 84 00 00
	00		 mov	 esi, DWORD PTR [edx+132]
  00033	8d 9a 84 00 00
	00		 lea	 ebx, DWORD PTR [edx+132]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 687  : 	for (; itor != m_dwSelectedSlotIndexList.end();)

  00039	8b 7d 08	 mov	 edi, DWORD PTR _dwSelectingIndex$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0003c	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 687  : 	for (; itor != m_dwSelectedSlotIndexList.end();)

  0003e	3b c6		 cmp	 eax, esi
  00040	74 0d		 je	 SHORT $LN3@SelectSlot
$LL2@SelectSlot:

; 688  : 	{
; 689  : 		if (dwSelectingIndex == *itor)

  00042	8b 08		 mov	 ecx, DWORD PTR [eax]
  00044	3b 78 08	 cmp	 edi, DWORD PTR [eax+8]
  00047	74 2a		 je	 SHORT $LN133@SelectSlot
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 165  :         this->_Ptr = this->_Ptr->_Next;

  00049	8b c1		 mov	 eax, ecx
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 687  : 	for (; itor != m_dwSelectedSlotIndexList.end();)

  0004b	3b ce		 cmp	 ecx, esi
  0004d	75 f3		 jne	 SHORT $LL2@SelectSlot
$LN3@SelectSlot:

; 690  : 		{
; 691  : 			itor = m_dwSelectedSlotIndexList.erase(itor);
; 692  : 			return;
; 693  : 		}
; 694  : 		else
; 695  : 		{
; 696  : 			++itor;
; 697  : 		}
; 698  : 	}
; 699  : 
; 700  : 	TSlot * pSlot;
; 701  : 	if (GetSlotPointer(dwSelectingIndex, &pSlot))

  0004f	8d 45 08	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00052	8b ca		 mov	 ecx, edx
  00054	50		 push	 eax
  00055	57		 push	 edi
  00056	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  0005b	85 c0		 test	 eax, eax
  0005d	74 77		 je	 SHORT $LN116@SelectSlot

; 702  : 	{
; 703  : 		if (!pSlot->isItem)

  0005f	8b 45 08	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00062	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00066	74 6e		 je	 SHORT $LN116@SelectSlot
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1015 :         if (_Mysize == max_size()) {

  00068	81 7b 04 55 55
	55 15		 cmp	 DWORD PTR [ebx+4], 357913941 ; 15555555H
  0006f	74 79		 je	 SHORT $LN140@SelectSlot
  00071	eb 35		 jmp	 SHORT $LN78@SelectSlot
$LN133@SelectSlot:

; 396  :         _Pnode->_Prev->_Next = _Pnode->_Next;

  00073	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00076	6a 0c		 push	 12			; 0000000cH
  00078	50		 push	 eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 396  :         _Pnode->_Prev->_Next = _Pnode->_Next;

  00079	89 0a		 mov	 DWORD PTR [edx], ecx

; 397  :         _Pnode->_Next->_Prev = _Pnode->_Prev;

  0007b	8b 10		 mov	 edx, DWORD PTR [eax]
  0007d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00080	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 398  :         --_Mysize;

  00083	8b 4d f0	 mov	 ecx, DWORD PTR _this$1$[ebp]
  00086	ff 89 88 00 00
	00		 dec	 DWORD PTR [ecx+136]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  0008c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00091	83 c4 08	 add	 esp, 8
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 708  : }

  00094	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00097	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009e	59		 pop	 ecx
  0009f	5f		 pop	 edi
  000a0	5e		 pop	 esi
  000a1	5b		 pop	 ebx
  000a2	8b e5		 mov	 esp, ebp
  000a4	5d		 pop	 ebp
  000a5	c2 04 00	 ret	 4
$LN78@SelectSlot:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  000a8	89 5d ec	 mov	 DWORD PTR __Op$2[ebp], ebx

; 87   :         return ::operator new(_Bytes);

  000ab	6a 0c		 push	 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 584  :     explicit _List_node_emplace_op2(_Alnode& _Al_, _Valtys&&... _Vals) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  000ad	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  000b4	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR __Op$2[ebp+4], 0

; 87   :         return ::operator new(_Bytes);

  000bb	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000c0	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 586  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  000c3	89 78 08	 mov	 DWORD PTR [eax+8], edi

; 1020 :         ++_Mysize;

  000c6	ff 43 04	 inc	 DWORD PTR [ebx+4]

; 599  :         const pointer _Insert_after = _Insert_before->_Prev;

  000c9	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]

; 600  :         _Construct_in_place(this->_Ptr->_Next, _Insert_before);

  000cc	89 30		 mov	 DWORD PTR [eax], esi

; 601  :         _Construct_in_place(this->_Ptr->_Prev, _Insert_after);

  000ce	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 602  :         const auto _Result    = this->_Ptr;
; 603  :         this->_Ptr            = pointer{};
; 604  :         _Insert_before->_Prev = _Result;

  000d1	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 605  :         _Insert_after->_Next  = _Result;

  000d4	89 01		 mov	 DWORD PTR [ecx], eax
$LN116@SelectSlot:
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 708  : }

  000d6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000d9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000e0	59		 pop	 ecx
  000e1	5f		 pop	 edi
  000e2	5e		 pop	 esi
  000e3	5b		 pop	 ebx
  000e4	8b e5		 mov	 esp, ebp
  000e6	5d		 pop	 ebp
  000e7	c2 04 00	 ret	 4
$LN140@SelectSlot:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1016 :             _Xlength_error("list too long");

  000ea	68 00 00 00 00	 push	 OFFSET ??_C@_0O@NKNMEGII@list?5too?5long@
  000ef	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN138@SelectSlot:
  000f4	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SelectSlot@CSlotWindow@UI@@QAEXK@Z$1:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Op$2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@KPAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<unsigned long,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<unsigned long,void *> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?SelectSlot@CSlotWindow@UI@@QAEXK@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SelectSlot@CSlotWindow@UI@@QAEXK@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SelectSlot@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::SelectSlot
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?ClearSelected@CSlotWindow@UI@@QAEXXZ
_TEXT	SEGMENT
?ClearSelected@CSlotWindow@UI@@QAEXXZ PROC		; UI::CSlotWindow::ClearSelected, COMDAT
; _this$ = ecx

; 723  : {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1490 :         _Node::_Free_non_head(_Getal(), _My_data._Myhead);

  00003	8b 97 84 00 00
	00		 mov	 edx, DWORD PTR [edi+132]

; 325  :         _Head->_Prev->_Next = nullptr;

  00009	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0000c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 326  : 
; 327  :         auto _Pnode = _Head->_Next;

  00012	8b 02		 mov	 eax, DWORD PTR [edx]

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00014	85 c0		 test	 eax, eax
  00016	74 1c		 je	 SHORT $LN7@ClearSelec
  00018	56		 push	 esi
  00019	0f 1f 80 00 00
	00 00		 npad	 7
$LL8@ClearSelec:

; 329  :             _Pnext = _Pnode->_Next;

  00020	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00022	6a 0c		 push	 12			; 0000000cH
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002a	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  0002d	8b c6		 mov	 eax, esi
  0002f	85 f6		 test	 esi, esi
  00031	75 ed		 jne	 SHORT $LL8@ClearSelec
  00033	5e		 pop	 esi
$LN7@ClearSelec:

; 1491 :         _My_data._Myhead->_Next = _My_data._Myhead;

  00034	8b 87 84 00 00
	00		 mov	 eax, DWORD PTR [edi+132]
  0003a	89 00		 mov	 DWORD PTR [eax], eax

; 1492 :         _My_data._Myhead->_Prev = _My_data._Myhead;

  0003c	8b 87 84 00 00
	00		 mov	 eax, DWORD PTR [edi+132]
  00042	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1493 :         _My_data._Mysize        = 0;

  00045	c7 87 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+136], 0
  0004f	5f		 pop	 edi
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 725  : }

  00050	c3		 ret	 0
?ClearSelected@CSlotWindow@UI@@QAEXXZ ENDP		; UI::CSlotWindow::ClearSelected
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?DisableSlot@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?DisableSlot@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::DisableSlot, COMDAT
; _this$ = ecx

; 674  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 675  : 	TSlot * pSlot;
; 676  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 06		 je	 SHORT $LN1@DisableSlo

; 677  : 		return;
; 678  : 	SET_BIT(pSlot->dwState, SLOT_STATE_DISABLE);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	83 08 04	 or	 DWORD PTR [eax], 4
$LN1@DisableSlo:

; 679  : 	//pSlot->dwState ^= SLOT_STATE_DISABLE;
; 680  : }

  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?DisableSlot@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::DisableSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?EnableSlot@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?EnableSlot@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::EnableSlot, COMDAT
; _this$ = ecx

; 665  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 666  : 	TSlot * pSlot;
; 667  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 06		 je	 SHORT $LN1@EnableSlot

; 668  : 		return;
; 669  : 
; 670  : 	REMOVE_BIT(pSlot->dwState, SLOT_STATE_DISABLE);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	83 20 fb	 and	 DWORD PTR [eax], -5	; fffffffbH
$LN1@EnableSlot:

; 671  : 	//pSlot->dwState |= SLOT_STATE_DISABLE;
; 672  : }

  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?EnableSlot@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::EnableSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetUseSlot@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?SetUseSlot@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::SetUseSlot, COMDAT
; _this$ = ecx

; 657  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 658  : 	TSlot * pSlot;
; 659  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 06		 je	 SHORT $LN1@SetUseSlot

; 660  : 		return;
; 661  : 
; 662  : 	pSlot->dwState ^= SLOT_STATE_CANT_USE;

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	83 30 02	 xor	 DWORD PTR [eax], 2
$LN1@SetUseSlot:

; 663  : }

  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?SetUseSlot@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::SetUseSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetCantUseSlot@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?SetCantUseSlot@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::SetCantUseSlot, COMDAT
; _this$ = ecx

; 649  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 650  : 	TSlot * pSlot;
; 651  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 06		 je	 SHORT $LN1@SetCantUse

; 652  : 		return;
; 653  : 
; 654  : 	pSlot->dwState |= SLOT_STATE_CANT_USE;

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	83 08 02	 or	 DWORD PTR [eax], 2
$LN1@SetCantUse:

; 655  : }

  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?SetCantUseSlot@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::SetCantUseSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?UnlockSlot@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?UnlockSlot@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::UnlockSlot, COMDAT
; _this$ = ecx

; 641  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 642  : 	TSlot * pSlot;
; 643  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 06		 je	 SHORT $LN1@UnlockSlot

; 644  : 		return;
; 645  : 
; 646  : 	pSlot->dwState ^= SLOT_STATE_LOCK;

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	83 30 01	 xor	 DWORD PTR [eax], 1
$LN1@UnlockSlot:

; 647  : }

  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?UnlockSlot@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::UnlockSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?LockSlot@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?LockSlot@CSlotWindow@UI@@QAEXK@Z PROC			; UI::CSlotWindow::LockSlot, COMDAT
; _this$ = ecx

; 633  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 634  : 	TSlot * pSlot;
; 635  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 06		 je	 SHORT $LN1@LockSlot

; 636  : 		return;
; 637  : 
; 638  : 	pSlot->dwState |= SLOT_STATE_LOCK;

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	83 08 01	 or	 DWORD PTR [eax], 1
$LN1@LockSlot:

; 639  : }

  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?LockSlot@CSlotWindow@UI@@QAEXK@Z ENDP			; UI::CSlotWindow::LockSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?GetSlotCount@CSlotWindow@UI@@QAEKXZ
_TEXT	SEGMENT
?GetSlotCount@CSlotWindow@UI@@QAEKXZ PROC		; UI::CSlotWindow::GetSlotCount, COMDAT
; _this$ = ecx

; 629  : 	return m_SlotList.size();

  00000	8b 81 90 00 00
	00		 mov	 eax, DWORD PTR [ecx+144]

; 630  : }

  00006	c3		 ret	 0
?GetSlotCount@CSlotWindow@UI@@QAEKXZ ENDP		; UI::CSlotWindow::GetSlotCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?IsActivatedSlot@CSlotWindow@UI@@QAE_NK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?IsActivatedSlot@CSlotWindow@UI@@QAE_NK@Z PROC		; UI::CSlotWindow::IsActivatedSlot, COMDAT
; _this$ = ecx

; 548  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 549  : 	TSlot * pSlot;
; 550  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	75 08		 jne	 SHORT $LN2@IsActivate

; 551  : 		return false;

  00014	32 c0		 xor	 al, al

; 553  : }

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
$LN2@IsActivate:

; 552  : 	return pSlot->bActive;

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  0001f	83 78 1c 00	 cmp	 DWORD PTR [eax+28], 0
  00023	0f 95 c0	 setne	 al

; 553  : }

  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?IsActivatedSlot@CSlotWindow@UI@@QAE_NK@Z ENDP		; UI::CSlotWindow::IsActivatedSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?GetSlotCoolTime@CSlotWindow@UI@@QAEMKPAM@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
_fElapsedTime$ = 12					; size = 4
?GetSlotCoolTime@CSlotWindow@UI@@QAEMKPAM@Z PROC	; UI::CSlotWindow::GetSlotCoolTime, COMDAT
; _this$ = ecx

; 538  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 539  : 	TSlot * pSlot;
; 540  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	75 08		 jne	 SHORT $LN2@GetSlotCoo

; 541  : 		return 0.0;

  00014	d9 ee		 fldz

; 545  : }

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 08 00	 ret	 8
$LN2@GetSlotCoo:

; 542  : 
; 543  : 	*fElapsedTime = CTimer::Instance().GetCurrentSecond() - pSlot->fStartCoolTime;

  0001c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
  00022	e8 00 00 00 00	 call	 ?GetCurrentSecond@CTimer@@QAEMXZ ; CTimer::GetCurrentSecond
  00027	8b 4d fc	 mov	 ecx, DWORD PTR _pSlot$[ebp]
  0002a	8b 45 0c	 mov	 eax, DWORD PTR _fElapsedTime$[ebp]
  0002d	d8 61 18	 fsub	 DWORD PTR [ecx+24]
  00030	d9 18		 fstp	 DWORD PTR [eax]

; 544  : 	return pSlot->fCoolTime;

  00032	d9 41 14	 fld	 DWORD PTR [ecx+20]

; 545  : }

  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
?GetSlotCoolTime@CSlotWindow@UI@@QAEMKPAM@Z ENDP	; UI::CSlotWindow::GetSlotCoolTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?RefreshSlot@CSlotWindow@UI@@QAEXXZ
_TEXT	SEGMENT
_pSlot$1 = -4						; size = 4
?RefreshSlot@CSlotWindow@UI@@QAEXXZ PROC		; UI::CSlotWindow::RefreshSlot, COMDAT
; _this$ = ecx

; 609  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 610  : 	OnRefreshSlot();

  00007	8b 06		 mov	 eax, DWORD PTR [esi]
  00009	ff 90 a8 00 00
	00		 call	 DWORD PTR [eax+168]

; 611  : 
; 612  : 	if (IsRendering())

  0000f	8b ce		 mov	 ecx, esi
  00011	e8 00 00 00 00	 call	 ?IsRendering@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsRendering
  00016	84 c0		 test	 al, al
  00018	74 26		 je	 SHORT $LN3@RefreshSlo

; 613  : 	{
; 614  : 		TSlot * pSlot;
; 615  : 		if (GetPickedSlotPointer(&pSlot))

  0001a	8b 06		 mov	 eax, DWORD PTR [esi]
  0001c	8d 4d fc	 lea	 ecx, DWORD PTR _pSlot$1[ebp]
  0001f	51		 push	 ecx
  00020	8b ce		 mov	 ecx, esi
  00022	ff 90 a4 00 00
	00		 call	 DWORD PTR [eax+164]
  00028	85 c0		 test	 eax, eax
  0002a	74 14		 je	 SHORT $LN3@RefreshSlo

; 616  : 		{
; 617  : 			OnOverOutItem();

  0002c	8b ce		 mov	 ecx, esi
  0002e	e8 00 00 00 00	 call	 ?OnOverOutItem@CSlotWindow@UI@@QAEXXZ ; UI::CSlotWindow::OnOverOutItem

; 618  : 			OnOverInItem(pSlot->dwSlotNumber);

  00033	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$1[ebp]
  00036	8b ce		 mov	 ecx, esi
  00038	ff 70 04	 push	 DWORD PTR [eax+4]
  0003b	e8 00 00 00 00	 call	 ?OnOverInItem@CSlotWindow@UI@@QAEHK@Z ; UI::CSlotWindow::OnOverInItem
$LN3@RefreshSlo:
  00040	5e		 pop	 esi

; 619  : 		}
; 620  : 	}
; 621  : }

  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
?RefreshSlot@CSlotWindow@UI@@QAEXXZ ENDP		; UI::CSlotWindow::RefreshSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?DeactivateSlot@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?DeactivateSlot@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::DeactivateSlot, COMDAT
; _this$ = ecx

; 528  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 529  : 	TSlot * pSlot;
; 530  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 0a		 je	 SHORT $LN1@Deactivate

; 531  : 		return;
; 532  : 
; 533  : 	pSlot->bActive = FALSE;

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0
$LN1@Deactivate:

; 534  : }

  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
?DeactivateSlot@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::DeactivateSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?ActivateSlot@CSlotWindow@UI@@QAEXKABUD3DXCOLOR@@@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
_color$ = 12						; size = 4
?ActivateSlot@CSlotWindow@UI@@QAEXKABUD3DXCOLOR@@@Z PROC ; UI::CSlotWindow::ActivateSlot, COMDAT
; _this$ = ecx

; 509  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 510  : 	TSlot * pSlot;
; 511  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000e	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00013	85 c0		 test	 eax, eax
  00015	74 36		 je	 SHORT $LN3@ActivateSl

; 512  : 		return;
; 513  : 
; 514  : 	pSlot->bActive = TRUE;

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _pSlot$[ebp]

; 515  : 	#ifdef ENABLE_HIGHLIGHT_NEW_ITEM
; 516  : 	pSlot->Color = color;

  0001a	8b 45 0c	 mov	 eax, DWORD PTR _color$[ebp]
  0001d	c7 41 1c 01 00
	00 00		 mov	 DWORD PTR [ecx+28], 1
  00024	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  00027	0f 11 41 20	 movups	 XMMWORD PTR [ecx+32], xmm0

; 517  : 	#endif
; 518  : 
; 519  : 	if (!m_pSlotActiveEffect
; 520  : 		#ifdef ENABLE_HIGHLIGHT_NEW_ITEM
; 521  : 		|| !m_pSlotActiveEffectSlot2 || !m_pSlotActiveEffectSlot3

  0002b	83 be a8 00 00
	00 00		 cmp	 DWORD PTR [esi+168], 0
  00032	74 12		 je	 SHORT $LN4@ActivateSl
  00034	83 be ac 00 00
	00 00		 cmp	 DWORD PTR [esi+172], 0
  0003b	74 09		 je	 SHORT $LN4@ActivateSl
  0003d	83 be b0 00 00
	00 00		 cmp	 DWORD PTR [esi+176], 0
  00044	75 07		 jne	 SHORT $LN3@ActivateSl
$LN4@ActivateSl:

; 522  : 		#endif
; 523  : 	)
; 524  : 		__CreateSlotEnableEffect();

  00046	8b ce		 mov	 ecx, esi
  00048	e8 00 00 00 00	 call	 ?__CreateSlotEnableEffect@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::__CreateSlotEnableEffect
$LN3@ActivateSl:
  0004d	5e		 pop	 esi

; 525  : }

  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 08 00	 ret	 8
?ActivateSlot@CSlotWindow@UI@@QAEXKABUD3DXCOLOR@@@Z ENDP ; UI::CSlotWindow::ActivateSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetSlotCoolTime@CSlotWindow@UI@@QAEXKMM@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
_fCoolTime$ = 12					; size = 4
_fElapsedTime$ = 16					; size = 4
?SetSlotCoolTime@CSlotWindow@UI@@QAEXKMM@Z PROC		; UI::CSlotWindow::SetSlotCoolTime, COMDAT
; _this$ = ecx

; 499  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 500  : 	TSlot * pSlot;
; 501  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 20		 je	 SHORT $LN1@SetSlotCoo

; 502  : 		return;
; 503  : 
; 504  : 	pSlot->fCoolTime = fCoolTime;

  00014	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fCoolTime$[ebp]
  00019	56		 push	 esi
  0001a	8b 75 fc	 mov	 esi, DWORD PTR _pSlot$[ebp]
  0001d	f3 0f 11 46 14	 movss	 DWORD PTR [esi+20], xmm0

; 505  : 	pSlot->fStartCoolTime = CTimer::Instance().GetCurrentSecond() - fElapsedTime;

  00022	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
  00028	e8 00 00 00 00	 call	 ?GetCurrentSecond@CTimer@@QAEMXZ ; CTimer::GetCurrentSecond
  0002d	d8 65 10	 fsub	 DWORD PTR _fElapsedTime$[ebp]
  00030	d9 5e 18	 fstp	 DWORD PTR [esi+24]
  00033	5e		 pop	 esi
$LN1@SetSlotCoo:

; 506  : }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c2 0c 00	 ret	 12			; 0000000cH
?SetSlotCoolTime@CSlotWindow@UI@@QAEXKMM@Z ENDP		; UI::CSlotWindow::SetSlotCoolTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetSlotCountNew@CSlotWindow@UI@@QAEXKKK@Z
_TEXT	SEGMENT
$T2 = -40						; size = 4
_pSlot$ = -40						; size = 4
_szCount$3 = -36					; size = 17
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_dwIndex$ = 8						; size = 4
_dwGrade$ = 12						; size = 4
_dwCount$ = 16						; size = 4
?SetSlotCountNew@CSlotWindow@UI@@QAEXKKK@Z PROC		; UI::CSlotWindow::SetSlotCountNew, COMDAT
; _this$ = ecx

; 453  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetSlotCountNew@CSlotWindow@UI@@QAEXKKK@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b d9		 mov	 ebx, ecx

; 454  : 	TSlot * pSlot;
; 455  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  0002d	8d 45 d8	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00030	50		 push	 eax
  00031	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  00034	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00039	85 c0		 test	 eax, eax
  0003b	0f 84 df 00 00
	00		 je	 $LN6@SetSlotCou

; 456  : 		return;
; 457  : 
; 458  : 	if (dwCount <= 0)

  00041	8b 45 10	 mov	 eax, DWORD PTR _dwCount$[ebp]
  00044	85 c0		 test	 eax, eax
  00046	75 20		 jne	 SHORT $LN5@SetSlotCou

; 459  : 	{
; 460  : 		if (pSlot->pNumberLine)

  00048	8b 75 d8	 mov	 esi, DWORD PTR _pSlot$[ebp]
  0004b	8b 4e 48	 mov	 ecx, DWORD PTR [esi+72]
  0004e	85 c9		 test	 ecx, ecx
  00050	0f 84 ca 00 00
	00		 je	 $LN6@SetSlotCou

; 461  : 		{
; 462  : 			delete pSlot->pNumberLine;

  00056	8b 01		 mov	 eax, DWORD PTR [ecx]
  00058	6a 01		 push	 1
  0005a	ff 10		 call	 DWORD PTR [eax]

; 463  : 			pSlot->pNumberLine = NULL;

  0005c	c7 46 48 00 00
	00 00		 mov	 DWORD PTR [esi+72], 0

; 464  : 		}
; 465  : 	}

  00063	e9 b8 00 00 00	 jmp	 $LN6@SetSlotCou
$LN5@SetSlotCou:

; 466  : 	else
; 467  : 	{
; 468  : 		char szCount[16+1];
; 469  : 
; 470  : 		switch (dwGrade)

  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _dwGrade$[ebp]
  0006b	83 f9 03	 cmp	 ecx, 3
  0006e	77 5c		 ja	 SHORT $LN2@SetSlotCou
  00070	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN19@SetSlotCou[ecx*4]
$LN8@SetSlotCou:

; 471  : 		{
; 472  : 			case 0:
; 473  : 				_snprintf(szCount, sizeof(szCount), "%d", dwCount);

  00077	50		 push	 eax
  00078	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  0007d	8d 45 dc	 lea	 eax, DWORD PTR _szCount$3[ebp]
  00080	6a 11		 push	 17			; 00000011H
  00082	50		 push	 eax
  00083	e8 00 00 00 00	 call	 __snprintf
  00088	83 c4 10	 add	 esp, 16			; 00000010H

; 474  : 				break;

  0008b	eb 3f		 jmp	 SHORT $LN2@SetSlotCou
$LN9@SetSlotCou:

; 475  : 			case 1:
; 476  : 				_snprintf(szCount, sizeof(szCount), "m%d", dwCount);

  0008d	50		 push	 eax
  0008e	68 00 00 00 00	 push	 OFFSET ??_C@_03CIOACFJF@m?$CFd@
  00093	8d 45 dc	 lea	 eax, DWORD PTR _szCount$3[ebp]
  00096	6a 11		 push	 17			; 00000011H
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 __snprintf
  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 477  : 				break;

  000a1	eb 29		 jmp	 SHORT $LN2@SetSlotCou
$LN10@SetSlotCou:

; 478  : 			case 2:
; 479  : 				_snprintf(szCount, sizeof(szCount), "g%d", dwCount);

  000a3	50		 push	 eax
  000a4	68 00 00 00 00	 push	 OFFSET ??_C@_03EHFNMFPB@g?$CFd@
  000a9	8d 45 dc	 lea	 eax, DWORD PTR _szCount$3[ebp]
  000ac	6a 11		 push	 17			; 00000011H
  000ae	50		 push	 eax
  000af	e8 00 00 00 00	 call	 __snprintf
  000b4	83 c4 10	 add	 esp, 16			; 00000010H

; 480  : 				break;

  000b7	eb 13		 jmp	 SHORT $LN2@SetSlotCou
$LN11@SetSlotCou:

; 481  : 			case 3:
; 482  : 				_snprintf(szCount, sizeof(szCount), "p");

  000b9	68 00 00 00 00	 push	 OFFSET ??_C@_01JBBJJEPG@p@
  000be	8d 45 dc	 lea	 eax, DWORD PTR _szCount$3[ebp]
  000c1	6a 11		 push	 17			; 00000011H
  000c3	50		 push	 eax
  000c4	e8 00 00 00 00	 call	 __snprintf
  000c9	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@SetSlotCou:

; 483  : 				break;
; 484  : 		}
; 485  : 
; 486  : 		if (!pSlot->pNumberLine)

  000cc	8b 7d d8	 mov	 edi, DWORD PTR _pSlot$[ebp]
  000cf	8b 77 48	 mov	 esi, DWORD PTR [edi+72]
  000d2	85 f6		 test	 esi, esi
  000d4	75 3f		 jne	 SHORT $LN12@SetSlotCou

; 487  : 		{
; 488  : 			CNumberLine * pNumberLine = new UI::CNumberLine(this);

  000d6	68 c0 00 00 00	 push	 192			; 000000c0H
  000db	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000e0	83 c4 04	 add	 esp, 4
  000e3	89 45 d8	 mov	 DWORD PTR $T2[ebp], eax
  000e6	89 75 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], esi
  000e9	85 c0		 test	 eax, eax
  000eb	74 0c		 je	 SHORT $LN16@SetSlotCou
  000ed	53		 push	 ebx
  000ee	8b c8		 mov	 ecx, eax
  000f0	e8 00 00 00 00	 call	 ??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z ; UI::CNumberLine::CNumberLine
  000f5	8b f0		 mov	 esi, eax
  000f7	eb 02		 jmp	 SHORT $LN17@SetSlotCou
$LN16@SetSlotCou:
  000f9	33 f6		 xor	 esi, esi
$LN17@SetSlotCou:

; 489  : 			pNumberLine->SetHorizontalAlign(CNumberLine::HORIZONTAL_ALIGN_RIGHT);

  000fb	6a 02		 push	 2
  000fd	8b ce		 mov	 ecx, esi
  000ff	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00106	e8 00 00 00 00	 call	 ?SetHorizontalAlign@CNumberLine@UI@@QAEXH@Z ; UI::CNumberLine::SetHorizontalAlign

; 490  : 			pNumberLine->Show();

  0010b	8b ce		 mov	 ecx, esi
  0010d	e8 00 00 00 00	 call	 ?Show@CWindow@UI@@QAEXXZ ; UI::CWindow::Show

; 491  : 			pSlot->pNumberLine = pNumberLine;

  00112	89 77 48	 mov	 DWORD PTR [edi+72], esi
$LN12@SetSlotCou:

; 492  : 		}
; 493  : 
; 494  : 		pSlot->pNumberLine->SetNumber(szCount);

  00115	8d 45 dc	 lea	 eax, DWORD PTR _szCount$3[ebp]
  00118	8b ce		 mov	 ecx, esi
  0011a	50		 push	 eax
  0011b	e8 00 00 00 00	 call	 ?SetNumber@CNumberLine@UI@@QAEXPBD@Z ; UI::CNumberLine::SetNumber
$LN6@SetSlotCou:

; 495  : 	}
; 496  : }

  00120	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00123	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0012a	59		 pop	 ecx
  0012b	5f		 pop	 edi
  0012c	5e		 pop	 esi
  0012d	5b		 pop	 ebx
  0012e	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00131	33 cd		 xor	 ecx, ebp
  00133	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00138	8b e5		 mov	 esp, ebp
  0013a	5d		 pop	 ebp
  0013b	c2 0c 00	 ret	 12			; 0000000cH
  0013e	66 90		 npad	 2
$LN19@SetSlotCou:
  00140	00 00 00 00	 DD	 $LN8@SetSlotCou
  00144	00 00 00 00	 DD	 $LN9@SetSlotCou
  00148	00 00 00 00	 DD	 $LN10@SetSlotCou
  0014c	00 00 00 00	 DD	 $LN11@SetSlotCou
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetSlotCountNew@CSlotWindow@UI@@QAEXKKK@Z$0:
  00000	68 c0 00 00 00	 push	 192			; 000000c0H
  00005	8b 45 d8	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?SetSlotCountNew@CSlotWindow@UI@@QAEXKKK@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002d	33 c8		 xor	 ecx, eax
  0002f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00034	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetSlotCountNew@CSlotWindow@UI@@QAEXKKK@Z
  00039	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetSlotCountNew@CSlotWindow@UI@@QAEXKKK@Z ENDP		; UI::CSlotWindow::SetSlotCountNew
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetSlotCount@CSlotWindow@UI@@QAEXKK@Z
_TEXT	SEGMENT
$T2 = -40						; size = 4
_pSlot$ = -40						; size = 4
_szCount$3 = -36					; size = 17
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_dwIndex$ = 8						; size = 4
_dwCount$ = 12						; size = 4
?SetSlotCount@CSlotWindow@UI@@QAEXKK@Z PROC		; UI::CSlotWindow::SetSlotCount, COMDAT
; _this$ = ecx

; 422  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetSlotCount@CSlotWindow@UI@@QAEXKK@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f9		 mov	 edi, ecx

; 423  : 	TSlot * pSlot;
; 424  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  0002d	8d 45 d8	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00030	50		 push	 eax
  00031	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  00034	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00039	85 c0		 test	 eax, eax
  0003b	0f 84 88 00 00
	00		 je	 $LN4@SetSlotCou

; 425  : 		return;
; 426  : 
; 427  : 	if (dwCount <= 0)

  00041	8b 45 0c	 mov	 eax, DWORD PTR _dwCount$[ebp]
  00044	85 c0		 test	 eax, eax
  00046	75 19		 jne	 SHORT $LN3@SetSlotCou

; 428  : 	{
; 429  : 		if (pSlot->pNumberLine)

  00048	8b 75 d8	 mov	 esi, DWORD PTR _pSlot$[ebp]
  0004b	8b 4e 48	 mov	 ecx, DWORD PTR [esi+72]
  0004e	85 c9		 test	 ecx, ecx
  00050	74 77		 je	 SHORT $LN4@SetSlotCou

; 430  : 		{
; 431  : 			delete pSlot->pNumberLine;

  00052	8b 01		 mov	 eax, DWORD PTR [ecx]
  00054	6a 01		 push	 1
  00056	ff 10		 call	 DWORD PTR [eax]

; 432  : 			pSlot->pNumberLine = NULL;

  00058	c7 46 48 00 00
	00 00		 mov	 DWORD PTR [esi+72], 0

; 433  : 		}
; 434  : 	}

  0005f	eb 68		 jmp	 SHORT $LN4@SetSlotCou
$LN3@SetSlotCou:

; 435  : 	else
; 436  : 	{
; 437  : 		char szCount[16+1];
; 438  : 		_snprintf(szCount, sizeof(szCount), "%d", dwCount);

  00061	50		 push	 eax
  00062	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  00067	8d 45 dc	 lea	 eax, DWORD PTR _szCount$3[ebp]
  0006a	6a 11		 push	 17			; 00000011H
  0006c	50		 push	 eax
  0006d	e8 00 00 00 00	 call	 __snprintf

; 439  : 
; 440  : 		if (!pSlot->pNumberLine)

  00072	8b 5d d8	 mov	 ebx, DWORD PTR _pSlot$[ebp]
  00075	83 c4 10	 add	 esp, 16			; 00000010H
  00078	8b 73 48	 mov	 esi, DWORD PTR [ebx+72]
  0007b	85 f6		 test	 esi, esi
  0007d	75 3f		 jne	 SHORT $LN6@SetSlotCou

; 441  : 		{
; 442  : 			CNumberLine * pNumberLine = new UI::CNumberLine(this);

  0007f	68 c0 00 00 00	 push	 192			; 000000c0H
  00084	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00089	83 c4 04	 add	 esp, 4
  0008c	89 45 d8	 mov	 DWORD PTR $T2[ebp], eax
  0008f	89 75 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], esi
  00092	85 c0		 test	 eax, eax
  00094	74 0c		 je	 SHORT $LN10@SetSlotCou
  00096	57		 push	 edi
  00097	8b c8		 mov	 ecx, eax
  00099	e8 00 00 00 00	 call	 ??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z ; UI::CNumberLine::CNumberLine
  0009e	8b f0		 mov	 esi, eax
  000a0	eb 02		 jmp	 SHORT $LN11@SetSlotCou
$LN10@SetSlotCou:
  000a2	33 f6		 xor	 esi, esi
$LN11@SetSlotCou:

; 443  : 			pNumberLine->SetHorizontalAlign(CNumberLine::HORIZONTAL_ALIGN_RIGHT);

  000a4	6a 02		 push	 2
  000a6	8b ce		 mov	 ecx, esi
  000a8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000af	e8 00 00 00 00	 call	 ?SetHorizontalAlign@CNumberLine@UI@@QAEXH@Z ; UI::CNumberLine::SetHorizontalAlign

; 444  : 			pNumberLine->Show();

  000b4	8b ce		 mov	 ecx, esi
  000b6	e8 00 00 00 00	 call	 ?Show@CWindow@UI@@QAEXXZ ; UI::CWindow::Show

; 445  : 			pSlot->pNumberLine = pNumberLine;

  000bb	89 73 48	 mov	 DWORD PTR [ebx+72], esi
$LN6@SetSlotCou:

; 446  : 		}
; 447  : 
; 448  : 		pSlot->pNumberLine->SetNumber(szCount);

  000be	8d 45 dc	 lea	 eax, DWORD PTR _szCount$3[ebp]
  000c1	8b ce		 mov	 ecx, esi
  000c3	50		 push	 eax
  000c4	e8 00 00 00 00	 call	 ?SetNumber@CNumberLine@UI@@QAEXPBD@Z ; UI::CNumberLine::SetNumber
$LN4@SetSlotCou:

; 449  : 	}
; 450  : }

  000c9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000cc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d3	59		 pop	 ecx
  000d4	5f		 pop	 edi
  000d5	5e		 pop	 esi
  000d6	5b		 pop	 ebx
  000d7	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000da	33 cd		 xor	 ecx, ebp
  000dc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e1	8b e5		 mov	 esp, ebp
  000e3	5d		 pop	 ebp
  000e4	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetSlotCount@CSlotWindow@UI@@QAEXKK@Z$0:
  00000	68 c0 00 00 00	 push	 192			; 000000c0H
  00005	8b 45 d8	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?SetSlotCount@CSlotWindow@UI@@QAEXKK@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002d	33 c8		 xor	 ecx, eax
  0002f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00034	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetSlotCount@CSlotWindow@UI@@QAEXKK@Z
  00039	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetSlotCount@CSlotWindow@UI@@QAEXKK@Z ENDP		; UI::CSlotWindow::SetSlotCount
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetSlot@CSlotWindow@UI@@QAEXKKEEPAVCGraphicImage@@AAUD3DXCOLOR@@@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
_dwVirtualNumber$ = 12					; size = 4
_byWidth$ = 16						; size = 1
_byHeight$ = 20						; size = 1
_pImage$ = 24						; size = 4
_diffuseColor$ = 28					; size = 4
?SetSlot@CSlotWindow@UI@@QAEXKKEEPAVCGraphicImage@@AAUD3DXCOLOR@@@Z PROC ; UI::CSlotWindow::SetSlot, COMDAT
; _this$ = ecx

; 382  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx

; 383  : 	TSlot * pSlot;
; 384  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	50		 push	 eax
  0000b	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000e	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00013	85 c0		 test	 eax, eax
  00015	0f 84 9b 00 00
	00		 je	 $LN7@SetSlot

; 385  : 		return;
; 386  : 
; 387  : 	if (pSlot->isItem)

  0001b	56		 push	 esi
  0001c	8b 75 fc	 mov	 esi, DWORD PTR _pSlot$[ebp]
  0001f	57		 push	 edi
  00020	8b 7d 0c	 mov	 edi, DWORD PTR _dwVirtualNumber$[ebp]
  00023	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  00027	74 2f		 je	 SHORT $LN4@SetSlot

; 388  : 	if (pSlot->dwItemIndex == dwVirtualNumber)

  00029	39 7e 0c	 cmp	 DWORD PTR [esi+12], edi
  0002c	75 2a		 jne	 SHORT $LN4@SetSlot

; 389  : 	{
; 390  : 		pSlot->dwState = 0;
; 391  : 		pSlot->isItem = TRUE;
; 392  : 		if (pImage && pSlot->pInstance)

  0002e	8b 45 18	 mov	 eax, DWORD PTR _pImage$[ebp]
  00031	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00037	c7 46 10 01 00
	00 00		 mov	 DWORD PTR [esi+16], 1
  0003e	85 c0		 test	 eax, eax
  00040	74 72		 je	 SHORT $LN16@SetSlot
  00042	8b 4e 44	 mov	 ecx, DWORD PTR [esi+68]
  00045	85 c9		 test	 ecx, ecx
  00047	74 6b		 je	 SHORT $LN16@SetSlot

; 393  : 		{
; 394  : 			pSlot->pInstance->SetImagePointer(pImage);

  00049	50		 push	 eax
  0004a	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx

; 418  : 	}
; 419  : }

  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 18 00	 ret	 24			; 00000018H
$LN4@SetSlot:

; 395  : 		}
; 396  : 		return;
; 397  : 	}
; 398  : 
; 399  : 	ClearSlot(pSlot);

  00058	56		 push	 esi
  00059	8b cb		 mov	 ecx, ebx
  0005b	e8 00 00 00 00	 call	 ?ClearSlot@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z ; UI::CSlotWindow::ClearSlot

; 400  : 	pSlot->dwState = 0;

  00060	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0

; 401  : 	pSlot->isItem = TRUE;

  00066	c7 46 10 01 00
	00 00		 mov	 DWORD PTR [esi+16], 1

; 402  : 	pSlot->dwItemIndex = dwVirtualNumber;

  0006d	89 7e 0c	 mov	 DWORD PTR [esi+12], edi

; 403  : 
; 404  : 	if (pImage)

  00070	8b 7d 18	 mov	 edi, DWORD PTR _pImage$[ebp]
  00073	85 ff		 test	 edi, edi
  00075	74 25		 je	 SHORT $LN6@SetSlot

; 405  : 	{
; 406  : 		assert(NULL == pSlot->pInstance);
; 407  : 		pSlot->pInstance = CGraphicImageInstance::New();

  00077	e8 00 00 00 00	 call	 ?New@CGraphicImageInstance@@SAPAV1@XZ ; CGraphicImageInstance::New

; 408  : 		pSlot->pInstance->SetDiffuseColor(diffuseColor.r, diffuseColor.g, diffuseColor.b, diffuseColor.a);

  0007c	8b 4d 1c	 mov	 ecx, DWORD PTR _diffuseColor$[ebp]
  0007f	83 ec 10	 sub	 esp, 16			; 00000010H
  00082	89 46 44	 mov	 DWORD PTR [esi+68], eax
  00085	0f 10 01	 movups	 xmm0, XMMWORD PTR [ecx]
  00088	8b c8		 mov	 ecx, eax
  0008a	0f 11 04 24	 movups	 XMMWORD PTR [esp], xmm0
  0008e	e8 00 00 00 00	 call	 ?SetDiffuseColor@CGraphicImageInstance@@QAEXMMMM@Z ; CGraphicImageInstance::SetDiffuseColor

; 409  : 		pSlot->pInstance->SetImagePointer(pImage);

  00093	8b 4e 44	 mov	 ecx, DWORD PTR [esi+68]
  00096	57		 push	 edi
  00097	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer
$LN6@SetSlot:

; 410  : 	}
; 411  : 
; 412  : 	pSlot->byxPlacedItemSize = byWidth;

  0009c	8a 45 10	 mov	 al, BYTE PTR _byWidth$[ebp]
  0009f	88 46 40	 mov	 BYTE PTR [esi+64], al

; 413  : 	pSlot->byyPlacedItemSize = byHeight;

  000a2	8a 45 14	 mov	 al, BYTE PTR _byHeight$[ebp]
  000a5	88 46 41	 mov	 BYTE PTR [esi+65], al

; 414  : 
; 415  : 	if (pSlot->pCoverButton)

  000a8	8b 4e 50	 mov	 ecx, DWORD PTR [esi+80]
  000ab	85 c9		 test	 ecx, ecx
  000ad	74 05		 je	 SHORT $LN16@SetSlot

; 416  : 	{
; 417  : 		pSlot->pCoverButton->Show();

  000af	e8 00 00 00 00	 call	 ?Show@CWindow@UI@@QAEXXZ ; UI::CWindow::Show
$LN16@SetSlot:
  000b4	5f		 pop	 edi
  000b5	5e		 pop	 esi
$LN7@SetSlot:
  000b6	5b		 pop	 ebx

; 418  : 	}
; 419  : }

  000b7	8b e5		 mov	 esp, ebp
  000b9	5d		 pop	 ebp
  000ba	c2 18 00	 ret	 24			; 00000018H
?SetSlot@CSlotWindow@UI@@QAEXKKEEPAVCGraphicImage@@AAUD3DXCOLOR@@@Z ENDP ; UI::CSlotWindow::SetSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?ClearSlot@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?ClearSlot@CSlotWindow@UI@@QAEXK@Z PROC			; UI::CSlotWindow::ClearSlot, COMDAT
; _this$ = ecx

; 557  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 558  : 	TSlot * pSlot;
; 559  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000e	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00013	85 c0		 test	 eax, eax
  00015	74 0a		 je	 SHORT $LN1@ClearSlot

; 560  : 		return;
; 561  : 
; 562  : 	ClearSlot(pSlot);

  00017	ff 75 fc	 push	 DWORD PTR _pSlot$[ebp]
  0001a	8b ce		 mov	 ecx, esi
  0001c	e8 00 00 00 00	 call	 ?ClearSlot@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z ; UI::CSlotWindow::ClearSlot
$LN1@ClearSlot:
  00021	5e		 pop	 esi

; 563  : }

  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?ClearSlot@CSlotWindow@UI@@QAEXK@Z ENDP			; UI::CSlotWindow::ClearSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?ClearAllSlot@CSlotWindow@UI@@QAEXXZ
_TEXT	SEGMENT
?ClearAllSlot@CSlotWindow@UI@@QAEXXZ PROC		; UI::CSlotWindow::ClearAllSlot, COMDAT
; _this$ = ecx

; 605  : 	Destroy();

  00000	e9 00 00 00 00	 jmp	 ?Destroy@CSlotWindow@UI@@QAEXXZ ; UI::CSlotWindow::Destroy
?ClearAllSlot@CSlotWindow@UI@@QAEXXZ ENDP		; UI::CSlotWindow::ClearAllSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?HasSlot@CSlotWindow@UI@@QAEHK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?HasSlot@CSlotWindow@UI@@QAEHK@Z PROC			; UI::CSlotWindow::HasSlot, COMDAT
; _this$ = ecx

; 373  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 374  : 	TSlot * pSlot;
; 375  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	f7 d8		 neg	 eax
  00012	1b c0		 sbb	 eax, eax
  00014	f7 d8		 neg	 eax

; 376  : 		return FALSE;
; 377  : 
; 378  : 	return TRUE;
; 379  : }

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
?HasSlot@CSlotWindow@UI@@QAEHK@Z ENDP			; UI::CSlotWindow::HasSlot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?IsDisableCoverButton@CSlotWindow@UI@@QAEHK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?IsDisableCoverButton@CSlotWindow@UI@@QAEHK@Z PROC	; UI::CSlotWindow::IsDisableCoverButton, COMDAT
; _this$ = ecx

; 316  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 317  : 	TSlot * pSlot;
; 318  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 15		 je	 SHORT $LN5@IsDisableC

; 319  : 		return FALSE;
; 320  : 
; 321  : 	if (!pSlot->pCoverButton)

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  0001a	85 c9		 test	 ecx, ecx
  0001c	74 0b		 je	 SHORT $LN5@IsDisableC

; 323  : 
; 324  : 	return pSlot->pCoverButton->IsDisable();

  0001e	e8 00 00 00 00	 call	 ?IsDisable@CButton@UI@@QAEHXZ ; UI::CButton::IsDisable

; 325  : }

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
$LN5@IsDisableC:

; 322  : 		return FALSE;

  00029	33 c0		 xor	 eax, eax

; 325  : }

  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?IsDisableCoverButton@CSlotWindow@UI@@QAEHK@Z ENDP	; UI::CSlotWindow::IsDisableCoverButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?HideSlotBaseImage@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?HideSlotBaseImage@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::HideSlotBaseImage, COMDAT
; _this$ = ecx

; 307  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 308  : 	TSlot * pSlot;
; 309  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 07		 je	 SHORT $LN1@HideSlotBa

; 310  : 		return;
; 311  : 
; 312  : 	pSlot->bRenderBaseSlotImage = false;

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	c6 40 4c 00	 mov	 BYTE PTR [eax+76], 0
$LN1@HideSlotBa:

; 313  : }

  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?HideSlotBaseImage@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::HideSlotBaseImage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?ShowSlotBaseImage@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?ShowSlotBaseImage@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::ShowSlotBaseImage, COMDAT
; _this$ = ecx

; 298  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 299  : 	TSlot * pSlot;
; 300  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 07		 je	 SHORT $LN1@ShowSlotBa

; 301  : 		return;
; 302  : 
; 303  : 	pSlot->bRenderBaseSlotImage = true;

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	c6 40 4c 01	 mov	 BYTE PTR [eax+76], 1
$LN1@ShowSlotBa:

; 304  : }

  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?ShowSlotBaseImage@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::ShowSlotBaseImage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetAlwaysRenderCoverButton@CSlotWindow@UI@@QAEXK_N@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
_bAlwaysRender$ = 12					; size = 1
?SetAlwaysRenderCoverButton@CSlotWindow@UI@@QAEXK_N@Z PROC ; UI::CSlotWindow::SetAlwaysRenderCoverButton, COMDAT
; _this$ = ecx

; 286  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 287  : 	TSlot * pSlot;
; 288  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 15		 je	 SHORT $LN4@SetAlwaysR

; 289  : 		return;
; 290  : 
; 291  : 	if (bAlwaysRender)

  00014	80 7d 0c 00	 cmp	 BYTE PTR _bAlwaysRender$[ebp], 0
  00018	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  0001b	74 09		 je	 SHORT $LN3@SetAlwaysR

; 292  : 		SET_BIT(pSlot->dwState, SLOT_STATE_ALWAYS_RENDER_COVER);

  0001d	83 08 08	 or	 DWORD PTR [eax], 8

; 295  : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 08 00	 ret	 8
$LN3@SetAlwaysR:

; 293  : 	else
; 294  : 		REMOVE_BIT(pSlot->dwState, SLOT_STATE_ALWAYS_RENDER_COVER);

  00026	83 20 f7	 and	 DWORD PTR [eax], -9	; fffffff7H
$LN4@SetAlwaysR:

; 295  : }

  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
?SetAlwaysRenderCoverButton@CSlotWindow@UI@@QAEXK_N@Z ENDP ; UI::CSlotWindow::SetAlwaysRenderCoverButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?DisableCoverButton@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?DisableCoverButton@CSlotWindow@UI@@QAEXK@Z PROC	; UI::CSlotWindow::DisableCoverButton, COMDAT
; _this$ = ecx

; 274  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 275  : 	TSlot * pSlot;
; 276  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 0f		 je	 SHORT $LN1@DisableCov

; 277  : 		return;
; 278  : 
; 279  : 	if (!pSlot->pCoverButton)

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  0001a	85 c9		 test	 ecx, ecx
  0001c	74 05		 je	 SHORT $LN1@DisableCov

; 280  : 		return;
; 281  : 
; 282  : 	pSlot->pCoverButton->Disable();

  0001e	e8 00 00 00 00	 call	 ?Disable@CButton@UI@@QAEXXZ ; UI::CButton::Disable
$LN1@DisableCov:

; 283  : }

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?DisableCoverButton@CSlotWindow@UI@@QAEXK@Z ENDP	; UI::CSlotWindow::DisableCoverButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?EnableCoverButton@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_pSlot$ = -4						; size = 4
_dwIndex$ = 8						; size = 4
?EnableCoverButton@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::EnableCoverButton, COMDAT
; _this$ = ecx

; 262  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 263  : 	TSlot * pSlot;
; 264  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00010	85 c0		 test	 eax, eax
  00012	74 0f		 je	 SHORT $LN1@EnableCove

; 265  : 		return;
; 266  : 
; 267  : 	if (!pSlot->pCoverButton)

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pSlot$[ebp]
  00017	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  0001a	85 c9		 test	 ecx, ecx
  0001c	74 05		 je	 SHORT $LN1@EnableCove

; 268  : 		return;
; 269  : 
; 270  : 	pSlot->pCoverButton->Enable();

  0001e	e8 00 00 00 00	 call	 ?Enable@CButton@UI@@QAEXXZ ; UI::CButton::Enable
$LN1@EnableCove:

; 271  : }

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?EnableCoverButton@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::EnableCoverButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?AppendRequirementSignImage@CSlotWindow@UI@@QAEXPBD@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
$T2 = 8							; size = 4
_c_szImageName$ = 8					; size = 4
?AppendRequirementSignImage@CSlotWindow@UI@@QAEXPBD@Z PROC ; UI::CSlotWindow::AppendRequirementSignImage, COMDAT
; _this$ = ecx

; 355  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AppendRequirementSignImage@CSlotWindow@UI@@QAEXPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1090 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00027	8b 87 8c 00 00
	00		 mov	 eax, DWORD PTR [edi+140]

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0002d	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 356  : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  0002f	3b f0		 cmp	 esi, eax
  00031	74 63		 je	 SHORT $LN3@AppendRequ
  00033	8b 5d 08	 mov	 ebx, DWORD PTR _c_szImageName$[ebp]
$LL21@AppendRequ:

; 357  : 	{
; 358  : 		TSlot & rSlot = *itor;
; 359  : 		CImageBox *& rpSignImage = rSlot.pSignImage;
; 360  : 
; 361  : 		if (!rpSignImage)

  00036	83 7e 60 00	 cmp	 DWORD PTR [esi+96], 0
  0003a	75 3f		 jne	 SHORT $LN5@AppendRequ

; 362  : 		{
; 363  : 			rpSignImage = new CImageBox(NULL);

  0003c	68 80 00 00 00	 push	 128			; 00000080H
  00041	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00046	83 c4 04	 add	 esp, 4
  00049	89 45 08	 mov	 DWORD PTR $T2[ebp], eax
  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00053	85 c0		 test	 eax, eax
  00055	74 0b		 je	 SHORT $LN7@AppendRequ
  00057	6a 00		 push	 0
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??0CImageBox@UI@@QAE@PAU_object@@@Z ; UI::CImageBox::CImageBox
  00060	eb 02		 jmp	 SHORT $LN8@AppendRequ
$LN7@AppendRequ:
  00062	33 c0		 xor	 eax, eax
$LN8@AppendRequ:

; 364  : 			CWindowManager::Instance().SetParent(rpSignImage, this);

  00064	57		 push	 edi
  00065	89 46 60	 mov	 DWORD PTR [esi+96], eax
  00068	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  0006e	50		 push	 eax
  0006f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00076	e8 00 00 00 00	 call	 ?SetParent@CWindowManager@UI@@QAEXPAVCWindow@2@0@Z ; UI::CWindowManager::SetParent
$LN5@AppendRequ:

; 365  : 		}
; 366  : 
; 367  : 		rpSignImage->LoadImage(c_szImageName);

  0007b	8b 4e 60	 mov	 ecx, DWORD PTR [esi+96]
  0007e	53		 push	 ebx
  0007f	e8 00 00 00 00	 call	 ?LoadImageA@CImageBox@UI@@QAEHPBD@Z ; UI::CImageBox::LoadImageA

; 368  : 		rpSignImage->Hide();

  00084	8b 4e 60	 mov	 ecx, DWORD PTR [esi+96]
  00087	e8 00 00 00 00	 call	 ?Hide@CWindow@UI@@QAEXXZ ; UI::CWindow::Hide
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 165  :         this->_Ptr = this->_Ptr->_Next;

  0008c	8b 36		 mov	 esi, DWORD PTR [esi]

; 198  :         return this->_Ptr == _Right._Ptr;

  0008e	3b b7 8c 00 00
	00		 cmp	 esi, DWORD PTR [edi+140]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 356  : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  00094	75 a0		 jne	 SHORT $LL21@AppendRequ
$LN3@AppendRequ:

; 369  : 	}
; 370  : }

  00096	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00099	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a0	59		 pop	 ecx
  000a1	5f		 pop	 edi
  000a2	5e		 pop	 esi
  000a3	5b		 pop	 ebx
  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AppendRequirementSignImage@CSlotWindow@UI@@QAEXPBD@Z$0:
  00000	68 80 00 00 00	 push	 128			; 00000080H
  00005	8b 45 08	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?AppendRequirementSignImage@CSlotWindow@UI@@QAEXPBD@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AppendRequirementSignImage@CSlotWindow@UI@@QAEXPBD@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AppendRequirementSignImage@CSlotWindow@UI@@QAEXPBD@Z ENDP ; UI::CSlotWindow::AppendRequirementSignImage
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.h
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?AppendSlotButton@CSlotWindow@UI@@QAEXPBD00@Z
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$1$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_c_szUpImageName$ = 8					; size = 4
_c_szOverImageName$ = 12				; size = 4
_c_szDownImageName$ = 16				; size = 4
?AppendSlotButton@CSlotWindow@UI@@QAEXPBD00@Z PROC	; UI::CSlotWindow::AppendSlotButton, COMDAT
; _this$ = ecx

; 333  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AppendSlotButton@CSlotWindow@UI@@QAEXPBD00@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx
  0002a	89 5d f0	 mov	 DWORD PTR _this$1$[ebp], ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1090 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  0002d	8b 83 8c 00 00
	00		 mov	 eax, DWORD PTR [ebx+140]

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00033	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 334  : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  00035	3b f0		 cmp	 esi, eax
  00037	0f 84 c0 00 00
	00		 je	 $LN3@AppendSlot
  0003d	0f 1f 00	 npad	 3
$LL21@AppendSlot:

; 335  : 	{
; 336  : 		TSlot & rSlot = *itor;
; 337  : 		CSlotButton *& rpSlotButton = rSlot.pSlotButton;
; 338  : 
; 339  : 		if (!rpSlotButton)

  00040	83 7e 5c 00	 cmp	 DWORD PTR [esi+92], 0
  00044	75 6c		 jne	 SHORT $LN5@AppendSlot

; 340  : 		{
; 341  : 			rpSlotButton = new CSlotButton(CSlotButton::SLOT_BUTTON_TYPE_PLUS, rSlot.dwSlotNumber, this);

  00046	68 18 01 00 00	 push	 280			; 00000118H
  0004b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00050	8b f8		 mov	 edi, eax
  00052	83 c4 04	 add	 esp, 4
  00055	89 7d ec	 mov	 DWORD PTR $T2[ebp], edi
  00058	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005f	85 ff		 test	 edi, edi
  00061	74 2d		 je	 SHORT $LN7@AppendSlot
  00063	8b 5e 0c	 mov	 ebx, DWORD PTR [esi+12]

; 21   : 		CSlotButton(ESlotButtonType dwType, DWORD dwSlotNumber, CSlotWindow * pParent) : CButton(NULL)

  00066	8b cf		 mov	 ecx, edi
  00068	6a 00		 push	 0
  0006a	e8 00 00 00 00	 call	 ??0CButton@UI@@QAE@PAU_object@@@Z ; UI::CButton::CButton

; 22   : 		{
; 23   : 			m_dwSlotButtonType = dwType;
; 24   : 			m_dwSlotNumber = dwSlotNumber;

  0006f	89 9f 10 01 00
	00		 mov	 DWORD PTR [edi+272], ebx

; 25   : 			m_pParent = pParent;

  00075	8b 5d f0	 mov	 ebx, DWORD PTR _this$1$[ebp]
  00078	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CSlotButton@CSlotWindow@UI@@6B@
  0007e	c7 87 0c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+268], 0
  00088	89 9f 14 01 00
	00		 mov	 DWORD PTR [edi+276], ebx

; 340  : 		{
; 341  : 			rpSlotButton = new CSlotButton(CSlotButton::SLOT_BUTTON_TYPE_PLUS, rSlot.dwSlotNumber, this);

  0008e	eb 02		 jmp	 SHORT $LN8@AppendSlot
$LN7@AppendSlot:
  00090	33 ff		 xor	 edi, edi
$LN8@AppendSlot:
  00092	89 7e 5c	 mov	 DWORD PTR [esi+92], edi
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.h

; 98   : 			void			AddFlag(DWORD flag)		{ SET_BIT(m_dwFlag, flag);		}

  00095	81 4f 58 00 01
	00 00		 or	 DWORD PTR [edi+88], 256	; 00000100H
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 343  : 			CWindowManager::Instance().SetParent(rpSlotButton, this);

  0009c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  000a2	53		 push	 ebx
  000a3	ff 76 5c	 push	 DWORD PTR [esi+92]
  000a6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000ad	e8 00 00 00 00	 call	 ?SetParent@CWindowManager@UI@@QAEXPAVCWindow@2@0@Z ; UI::CWindowManager::SetParent
$LN5@AppendSlot:

; 344  : 		}
; 345  : 
; 346  : 		rpSlotButton->SetUpVisual(c_szUpImageName);

  000b2	ff 75 08	 push	 DWORD PTR _c_szUpImageName$[ebp]
  000b5	8b 4e 5c	 mov	 ecx, DWORD PTR [esi+92]
  000b8	e8 00 00 00 00	 call	 ?SetUpVisual@CButton@UI@@QAEHPBD@Z ; UI::CButton::SetUpVisual

; 347  : 		rpSlotButton->SetOverVisual(c_szOverImageName);

  000bd	ff 75 0c	 push	 DWORD PTR _c_szOverImageName$[ebp]
  000c0	8b 4e 5c	 mov	 ecx, DWORD PTR [esi+92]
  000c3	e8 00 00 00 00	 call	 ?SetOverVisual@CButton@UI@@QAEHPBD@Z ; UI::CButton::SetOverVisual

; 348  : 		rpSlotButton->SetDownVisual(c_szDownImageName);

  000c8	ff 75 10	 push	 DWORD PTR _c_szDownImageName$[ebp]
  000cb	8b 4e 5c	 mov	 ecx, DWORD PTR [esi+92]
  000ce	e8 00 00 00 00	 call	 ?SetDownVisual@CButton@UI@@QAEHPBD@Z ; UI::CButton::SetDownVisual

; 349  : 		rpSlotButton->SetPosition(rSlot.ixPosition + 1, rSlot.iyPosition + 19);

  000d3	8b 46 3c	 mov	 eax, DWORD PTR [esi+60]
  000d6	8b 4e 5c	 mov	 ecx, DWORD PTR [esi+92]
  000d9	83 c0 13	 add	 eax, 19			; 00000013H
  000dc	50		 push	 eax
  000dd	8b 46 38	 mov	 eax, DWORD PTR [esi+56]
  000e0	40		 inc	 eax
  000e1	50		 push	 eax
  000e2	e8 00 00 00 00	 call	 ?SetPosition@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetPosition

; 350  : 		rpSlotButton->Hide();

  000e7	8b 4e 5c	 mov	 ecx, DWORD PTR [esi+92]
  000ea	e8 00 00 00 00	 call	 ?Hide@CWindow@UI@@QAEXXZ ; UI::CWindow::Hide
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 165  :         this->_Ptr = this->_Ptr->_Next;

  000ef	8b 36		 mov	 esi, DWORD PTR [esi]

; 198  :         return this->_Ptr == _Right._Ptr;

  000f1	3b b3 8c 00 00
	00		 cmp	 esi, DWORD PTR [ebx+140]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 334  : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  000f7	0f 85 43 ff ff
	ff		 jne	 $LL21@AppendSlot
$LN3@AppendSlot:

; 351  : 	}
; 352  : }

  000fd	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00100	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00107	59		 pop	 ecx
  00108	5f		 pop	 edi
  00109	5e		 pop	 esi
  0010a	5b		 pop	 ebx
  0010b	8b e5		 mov	 esp, ebp
  0010d	5d		 pop	 ebp
  0010e	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AppendSlotButton@CSlotWindow@UI@@QAEXPBD00@Z$0:
  00000	68 18 01 00 00	 push	 280			; 00000118H
  00005	8b 45 ec	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?AppendSlotButton@CSlotWindow@UI@@QAEXPBD00@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AppendSlotButton@CSlotWindow@UI@@QAEXPBD00@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AppendSlotButton@CSlotWindow@UI@@QAEXPBD00@Z ENDP	; UI::CSlotWindow::AppendSlotButton
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetSlotBaseImage@CSlotWindow@UI@@QAEXPBDMMMM@Z
_TEXT	SEGMENT
_c_szFileName$ = 8					; size = 4
_fr$ = 12						; size = 4
_fg$ = 16						; size = 4
_fb$ = 20						; size = 4
_fa$ = 24						; size = 4
?SetSlotBaseImage@CSlotWindow@UI@@QAEXPBDMMMM@Z PROC	; UI::CSlotWindow::SetSlotBaseImage, COMDAT
; _this$ = ecx

; 328  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 329  : 	__CreateBaseImage(c_szFileName, fr, fg, fb, fa);

  00003	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _fa$[ebp]
  00008	83 ec 10	 sub	 esp, 16			; 00000010H
  0000b	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00011	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fb$[ebp]
  00016	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0001c	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fg$[ebp]
  00021	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00027	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fr$[ebp]
  0002c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00031	ff 75 08	 push	 DWORD PTR _c_szFileName$[ebp]
  00034	e8 00 00 00 00	 call	 ?__CreateBaseImage@CSlotWindow@UI@@IAEXPBDMMMM@Z ; UI::CSlotWindow::__CreateBaseImage

; 330  : }

  00039	5d		 pop	 ebp
  0003a	c2 14 00	 ret	 20			; 00000014H
?SetSlotBaseImage@CSlotWindow@UI@@QAEXPBDMMMM@Z ENDP	; UI::CSlotWindow::SetSlotBaseImage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetCoverButton@CSlotWindow@UI@@QAEXKPBD000HH@Z
_TEXT	SEGMENT
_this$1$ = -20						; size = 4
_pSlot$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
$T2 = 8							; size = 4
_dwIndex$ = 8						; size = 4
_c_szUpImageName$ = 12					; size = 4
_c_szOverImageName$ = 16				; size = 4
_c_szDownImageName$ = 20				; size = 4
_c_szDisableImageName$ = 24				; size = 4
_bLeftButtonEnable$ = 28				; size = 4
_bRightButtonEnable$ = 32				; size = 4
?SetCoverButton@CSlotWindow@UI@@QAEXKPBD000HH@Z PROC	; UI::CSlotWindow::SetCoverButton, COMDAT
; _this$ = ecx

; 233  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetCoverButton@CSlotWindow@UI@@QAEXKPBD000HH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f1		 mov	 esi, ecx
  0002a	89 75 ec	 mov	 DWORD PTR _this$1$[ebp], esi

; 234  : 	TSlot * pSlot;
; 235  : 	if (!GetSlotPointer(dwIndex, &pSlot))

  0002d	8d 45 f0	 lea	 eax, DWORD PTR _pSlot$[ebp]
  00030	50		 push	 eax
  00031	ff 75 08	 push	 DWORD PTR _dwIndex$[ebp]
  00034	e8 00 00 00 00	 call	 ?GetSlotPointer@CSlotWindow@UI@@IAEHKPAPAUSSlot@12@@Z ; UI::CSlotWindow::GetSlotPointer
  00039	85 c0		 test	 eax, eax
  0003b	0f 84 e3 00 00
	00		 je	 $LN4@SetCoverBu

; 236  : 		return;
; 237  : 
; 238  : 	CCoverButton *& rpCoverButton = pSlot->pCoverButton;

  00041	8b 5d f0	 mov	 ebx, DWORD PTR _pSlot$[ebp]

; 239  : 
; 240  : 	if (!rpCoverButton)

  00044	83 7b 50 00	 cmp	 DWORD PTR [ebx+80], 0
  00048	75 77		 jne	 SHORT $LN3@SetCoverBu

; 241  : 	{
; 242  : 		rpCoverButton = new CCoverButton(CSlotButton::SLOT_BUTTON_TYPE_COVER, pSlot->dwSlotNumber, this);

  0004a	68 20 01 00 00	 push	 288			; 00000120H
  0004f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00054	8b f8		 mov	 edi, eax
  00056	83 c4 04	 add	 esp, 4
  00059	89 7d 08	 mov	 DWORD PTR $T2[ebp], edi
  0005c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00063	85 ff		 test	 edi, edi
  00065	74 41		 je	 SHORT $LN6@SetCoverBu
  00067	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]

; 21   : 		CSlotButton(ESlotButtonType dwType, DWORD dwSlotNumber, CSlotWindow * pParent) : CButton(NULL)

  0006a	8b cf		 mov	 ecx, edi
  0006c	6a 00		 push	 0
  0006e	e8 00 00 00 00	 call	 ??0CButton@UI@@QAE@PAU_object@@@Z ; UI::CButton::CButton

; 22   : 		{
; 23   : 			m_dwSlotButtonType = dwType;
; 24   : 			m_dwSlotNumber = dwSlotNumber;

  00073	89 b7 10 01 00
	00		 mov	 DWORD PTR [edi+272], esi

; 25   : 			m_pParent = pParent;

  00079	8b 75 ec	 mov	 esi, DWORD PTR _this$1$[ebp]
  0007c	c7 87 0c 01 00
	00 01 00 00 00	 mov	 DWORD PTR [edi+268], 1
  00086	89 b7 14 01 00
	00		 mov	 DWORD PTR [edi+276], esi

; 92   : 		{

  0008c	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CCoverButton@CSlotWindow@UI@@6B@

; 93   : 			m_bLeftButtonEnable = TRUE;

  00092	c7 87 18 01 00
	00 01 00 00 00	 mov	 DWORD PTR [edi+280], 1

; 94   : 			m_bRightButtonEnable = TRUE;

  0009c	c7 87 1c 01 00
	00 01 00 00 00	 mov	 DWORD PTR [edi+284], 1

; 241  : 	{
; 242  : 		rpCoverButton = new CCoverButton(CSlotButton::SLOT_BUTTON_TYPE_COVER, pSlot->dwSlotNumber, this);

  000a6	eb 02		 jmp	 SHORT $LN7@SetCoverBu
$LN6@SetCoverBu:
  000a8	33 ff		 xor	 edi, edi
$LN7@SetCoverBu:

; 243  : 		CWindowManager::Instance().SetParent(rpCoverButton, this);

  000aa	56		 push	 esi
  000ab	89 7b 50	 mov	 DWORD PTR [ebx+80], edi
  000ae	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  000b4	57		 push	 edi
  000b5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000bc	e8 00 00 00 00	 call	 ?SetParent@CWindowManager@UI@@QAEXPAVCWindow@2@0@Z ; UI::CWindowManager::SetParent
$LN3@SetCoverBu:

; 244  : 	}
; 245  : 
; 246  : 	rpCoverButton->SetLeftButtonEnable(bLeftButtonEnable);

  000c1	8b 4b 50	 mov	 ecx, DWORD PTR [ebx+80]
  000c4	8b 45 1c	 mov	 eax, DWORD PTR _bLeftButtonEnable$[ebp]

; 247  : 	rpCoverButton->SetRightButtonEnable(bRightButtonEnable);
; 248  : 	rpCoverButton->SetUpVisual(c_szUpImageName);

  000c7	ff 75 0c	 push	 DWORD PTR _c_szUpImageName$[ebp]
  000ca	89 81 18 01 00
	00		 mov	 DWORD PTR [ecx+280], eax
  000d0	8b 4b 50	 mov	 ecx, DWORD PTR [ebx+80]
  000d3	8b 45 20	 mov	 eax, DWORD PTR _bRightButtonEnable$[ebp]
  000d6	89 81 1c 01 00
	00		 mov	 DWORD PTR [ecx+284], eax
  000dc	8b 4b 50	 mov	 ecx, DWORD PTR [ebx+80]
  000df	e8 00 00 00 00	 call	 ?SetUpVisual@CButton@UI@@QAEHPBD@Z ; UI::CButton::SetUpVisual

; 249  : 	rpCoverButton->SetOverVisual(c_szOverImageName);

  000e4	ff 75 10	 push	 DWORD PTR _c_szOverImageName$[ebp]
  000e7	8b 4b 50	 mov	 ecx, DWORD PTR [ebx+80]
  000ea	e8 00 00 00 00	 call	 ?SetOverVisual@CButton@UI@@QAEHPBD@Z ; UI::CButton::SetOverVisual

; 250  : 	rpCoverButton->SetDownVisual(c_szDownImageName);

  000ef	ff 75 14	 push	 DWORD PTR _c_szDownImageName$[ebp]
  000f2	8b 4b 50	 mov	 ecx, DWORD PTR [ebx+80]
  000f5	e8 00 00 00 00	 call	 ?SetDownVisual@CButton@UI@@QAEHPBD@Z ; UI::CButton::SetDownVisual

; 251  : 	rpCoverButton->SetDisableVisual(c_szDisableImageName);

  000fa	ff 75 18	 push	 DWORD PTR _c_szDisableImageName$[ebp]
  000fd	8b 4b 50	 mov	 ecx, DWORD PTR [ebx+80]
  00100	e8 00 00 00 00	 call	 ?SetDisableVisual@CButton@UI@@QAEHPBD@Z ; UI::CButton::SetDisableVisual

; 252  : 	rpCoverButton->Enable();

  00105	8b 4b 50	 mov	 ecx, DWORD PTR [ebx+80]
  00108	e8 00 00 00 00	 call	 ?Enable@CButton@UI@@QAEXXZ ; UI::CButton::Enable

; 253  : 	rpCoverButton->Show();

  0010d	8b 4b 50	 mov	 ecx, DWORD PTR [ebx+80]
  00110	e8 00 00 00 00	 call	 ?Show@CWindow@UI@@QAEXXZ ; UI::CWindow::Show

; 254  : 
; 255  : 	if (pSlot->pSlotButton)

  00115	8b 43 54	 mov	 eax, DWORD PTR [ebx+84]
  00118	85 c0		 test	 eax, eax
  0011a	74 08		 je	 SHORT $LN4@SetCoverBu

; 256  : 	{
; 257  : 		SetTop(pSlot->pSlotButton);

  0011c	50		 push	 eax
  0011d	8b ce		 mov	 ecx, esi
  0011f	e8 00 00 00 00	 call	 ?SetTop@CWindow@UI@@QAEXPAV12@@Z ; UI::CWindow::SetTop
$LN4@SetCoverBu:

; 258  : 	}
; 259  : }

  00124	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00127	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0012e	59		 pop	 ecx
  0012f	5f		 pop	 edi
  00130	5e		 pop	 esi
  00131	5b		 pop	 ebx
  00132	8b e5		 mov	 esp, ebp
  00134	5d		 pop	 ebp
  00135	c2 1c 00	 ret	 28			; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetCoverButton@CSlotWindow@UI@@QAEXKPBD000HH@Z$0:
  00000	68 20 01 00 00	 push	 288			; 00000120H
  00005	8b 45 08	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?SetCoverButton@CSlotWindow@UI@@QAEXKPBD000HH@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetCoverButton@CSlotWindow@UI@@QAEXKPBD000HH@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetCoverButton@CSlotWindow@UI@@QAEXKPBD000HH@Z ENDP	; UI::CSlotWindow::SetCoverButton
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?AppendSlot@CSlotWindow@UI@@QAEXKHHHH@Z
_TEXT	SEGMENT
_Slot$ = -116						; size = 96
__Op$2 = -20						; size = 8
__$EHRec$ = -12						; size = 12
_dwIndex$ = 8						; size = 4
_ixPosition$ = 12					; size = 4
_iyPosition$ = 16					; size = 4
_ixCellSize$ = 20					; size = 4
_iyCellSize$ = 24					; size = 4
?AppendSlot@CSlotWindow@UI@@QAEXKHHHH@Z PROC		; UI::CSlotWindow::AppendSlot, COMDAT
; _this$ = ecx

; 213  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AppendSlot@CSlotWindow@UI@@QAEXKHHHH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 68	 sub	 esp, 104		; 00000068H
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001b	33 c5		 xor	 eax, ebp
  0001d	50		 push	 eax
  0001e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00021	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00027	8b f1		 mov	 esi, ecx
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 920  :     r = fr;

  00029	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 222  : 	ClearSlot(&Slot);

  00030	8d 45 8c	 lea	 eax, DWORD PTR _Slot$[ebp]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 920  :     r = fr;

  00033	0f 11 45 ac	 movups	 XMMWORD PTR _Slot$[ebp+32], xmm0
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 215  : 	Slot.pInstance = NULL;

  00037	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _Slot$[ebp+68], 0
  0003e	0f 57 c0	 xorps	 xmm0, xmm0

; 216  : 	Slot.pNumberLine = NULL;

  00041	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _Slot$[ebp+72], 0

; 222  : 	ClearSlot(&Slot);

  00048	50		 push	 eax
  00049	0f 11 45 dc	 movups	 XMMWORD PTR _Slot$[ebp+80], xmm0
  0004d	e8 00 00 00 00	 call	 ?ClearSlot@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z ; UI::CSlotWindow::ClearSlot

; 223  : 	Slot.dwSlotNumber = dwIndex;

  00052	8b 45 08	 mov	 eax, DWORD PTR _dwIndex$[ebp]

; 229  : 	m_SlotList.push_back(Slot);

  00055	81 c6 8c 00 00
	00		 add	 esi, 140		; 0000008cH
  0005b	89 45 90	 mov	 DWORD PTR _Slot$[ebp+4], eax
  0005e	89 45 94	 mov	 DWORD PTR _Slot$[ebp+8], eax
  00061	8b 45 0c	 mov	 eax, DWORD PTR _ixPosition$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1015 :         if (_Mysize == max_size()) {

  00064	81 7e 04 62 27
	76 02		 cmp	 DWORD PTR [esi+4], 41297762 ; 02762762H

; 1259 :         _Emplace(_Mypair._Myval2._Myhead, _Val);

  0006b	8b 3e		 mov	 edi, DWORD PTR [esi]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 225  : 	Slot.ixPosition = ixPosition;

  0006d	89 45 bc	 mov	 DWORD PTR _Slot$[ebp+48], eax

; 226  : 	Slot.iyPosition = iyPosition;

  00070	8b 45 10	 mov	 eax, DWORD PTR _iyPosition$[ebp]
  00073	89 45 c0	 mov	 DWORD PTR _Slot$[ebp+52], eax

; 227  : 	Slot.ixCellSize = ixCellSize;

  00076	8b 45 14	 mov	 eax, DWORD PTR _ixCellSize$[ebp]
  00079	89 45 c4	 mov	 DWORD PTR _Slot$[ebp+56], eax

; 228  : 	Slot.iyCellSize = iyCellSize;

  0007c	8b 45 18	 mov	 eax, DWORD PTR _iyCellSize$[ebp]
  0007f	89 45 c8	 mov	 DWORD PTR _Slot$[ebp+60], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1015 :         if (_Mysize == max_size()) {

  00082	74 70		 je	 SHORT $LN82@AppendSlot
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  00084	89 75 ec	 mov	 DWORD PTR __Op$2[ebp], esi

; 87   :         return ::operator new(_Bytes);

  00087	6a 68		 push	 104			; 00000068H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 584  :     explicit _List_node_emplace_op2(_Alnode& _Al_, _Valtys&&... _Vals) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  00089	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  00090	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR __Op$2[ebp+4], 0

; 87   :         return ::operator new(_Bytes);

  00097	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 719  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  0009c	0f 10 45 8c	 movups	 xmm0, XMMWORD PTR _Slot$[ebp]

; 245  :         return _Traits::_Allocate(_Bytes);

  000a0	8b c8		 mov	 ecx, eax

; 87   :         return ::operator new(_Bytes);

  000a2	83 c4 04	 add	 esp, 4

; 719  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  000a5	0f 11 41 08	 movups	 XMMWORD PTR [ecx+8], xmm0
  000a9	0f 10 45 9c	 movups	 xmm0, XMMWORD PTR _Slot$[ebp+16]
  000ad	0f 11 41 18	 movups	 XMMWORD PTR [ecx+24], xmm0
  000b1	0f 10 45 ac	 movups	 xmm0, XMMWORD PTR _Slot$[ebp+32]
  000b5	0f 11 41 28	 movups	 XMMWORD PTR [ecx+40], xmm0
  000b9	0f 10 45 bc	 movups	 xmm0, XMMWORD PTR _Slot$[ebp+48]
  000bd	0f 11 41 38	 movups	 XMMWORD PTR [ecx+56], xmm0
  000c1	0f 10 45 cc	 movups	 xmm0, XMMWORD PTR _Slot$[ebp+64]
  000c5	0f 11 41 48	 movups	 XMMWORD PTR [ecx+72], xmm0
  000c9	0f 10 45 dc	 movups	 xmm0, XMMWORD PTR _Slot$[ebp+80]
  000cd	0f 11 41 58	 movups	 XMMWORD PTR [ecx+88], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1020 :         ++_Mysize;

  000d1	ff 46 04	 inc	 DWORD PTR [esi+4]

; 599  :         const pointer _Insert_after = _Insert_before->_Prev;

  000d4	8b 47 04	 mov	 eax, DWORD PTR [edi+4]

; 600  :         _Construct_in_place(this->_Ptr->_Next, _Insert_before);

  000d7	89 39		 mov	 DWORD PTR [ecx], edi

; 601  :         _Construct_in_place(this->_Ptr->_Prev, _Insert_after);

  000d9	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 602  :         const auto _Result    = this->_Ptr;
; 603  :         this->_Ptr            = pointer{};
; 604  :         _Insert_before->_Prev = _Result;

  000dc	89 4f 04	 mov	 DWORD PTR [edi+4], ecx

; 605  :         _Insert_after->_Next  = _Result;

  000df	89 08		 mov	 DWORD PTR [eax], ecx
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 230  : }

  000e1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000eb	59		 pop	 ecx
  000ec	5f		 pop	 edi
  000ed	5e		 pop	 esi
  000ee	8b e5		 mov	 esp, ebp
  000f0	5d		 pop	 ebp
  000f1	c2 14 00	 ret	 20			; 00000014H
$LN82@AppendSlot:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1016 :             _Xlength_error("list too long");

  000f4	68 00 00 00 00	 push	 OFFSET ??_C@_0O@NKNMEGII@list?5too?5long@
  000f9	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN80@AppendSlot:
  000fe	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AppendSlot@CSlotWindow@UI@@QAEXKHHHH@Z$1:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Op$2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@USSlot@CSlotWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CSlotWindow::SSlot,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CSlotWindow::SSlot,void *> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?AppendSlot@CSlotWindow@UI@@QAEXKHHHH@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a 8c	 mov	 ecx, DWORD PTR [edx-116]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AppendSlot@CSlotWindow@UI@@QAEXKHHHH@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AppendSlot@CSlotWindow@UI@@QAEXKHHHH@Z ENDP		; UI::CSlotWindow::AppendSlot
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetSlotStyle@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_dwStyle$ = 8						; size = 4
?SetSlotStyle@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::SetSlotStyle, COMDAT
; _this$ = ecx

; 208  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 209  : 	m_dwSlotStyle = dwStyle;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwStyle$[ebp]
  00006	89 81 80 00 00
	00		 mov	 DWORD PTR [ecx+128], eax

; 210  : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?SetSlotStyle@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::SetSlotStyle
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?SetSlotType@CSlotWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_dwType$ = 8						; size = 4
?SetSlotType@CSlotWindow@UI@@QAEXK@Z PROC		; UI::CSlotWindow::SetSlotType, COMDAT
; _this$ = ecx

; 203  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 204  : 	m_dwSlotType = dwType;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwType$[ebp]
  00006	89 41 7c	 mov	 DWORD PTR [ecx+124], eax

; 205  : }

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetSlotType@CSlotWindow@UI@@QAEXK@Z ENDP		; UI::CSlotWindow::SetSlotType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?Destroy@CSlotWindow@UI@@QAEXXZ
_TEXT	SEGMENT
?Destroy@CSlotWindow@UI@@QAEXXZ PROC			; UI::CSlotWindow::Destroy, COMDAT
; _this$ = ecx

; 1490 : {

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx
  00003	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1090 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00004	8b 83 8c 00 00
	00		 mov	 eax, DWORD PTR [ebx+140]

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0000a	8b 30		 mov	 esi, DWORD PTR [eax]
  0000c	3b f0		 cmp	 esi, eax
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 1491 : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  0000e	74 79		 je	 SHORT $LN3@Destroy
  00010	57		 push	 edi
$LL24@Destroy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 151  :         return this->_Ptr->_Myval;

  00011	8d 7e 08	 lea	 edi, DWORD PTR [esi+8]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 1495 : 		ClearSlot(&rSlot);

  00014	8b cb		 mov	 ecx, ebx
  00016	57		 push	 edi
  00017	e8 00 00 00 00	 call	 ?ClearSlot@CSlotWindow@UI@@IAEXPAUSSlot@12@@Z ; UI::CSlotWindow::ClearSlot

; 1496 : 
; 1497 : 		if (rSlot.pNumberLine)

  0001c	8b 4f 48	 mov	 ecx, DWORD PTR [edi+72]
  0001f	85 c9		 test	 ecx, ecx
  00021	74 0d		 je	 SHORT $LN5@Destroy

; 1498 : 		{
; 1499 : 			delete rSlot.pNumberLine;

  00023	8b 01		 mov	 eax, DWORD PTR [ecx]
  00025	6a 01		 push	 1
  00027	ff 10		 call	 DWORD PTR [eax]

; 1500 : 			rSlot.pNumberLine = NULL;

  00029	c7 47 48 00 00
	00 00		 mov	 DWORD PTR [edi+72], 0
$LN5@Destroy:

; 1501 : 		}
; 1502 : 		if (rSlot.pCoverButton)

  00030	8b 47 50	 mov	 eax, DWORD PTR [edi+80]
  00033	85 c0		 test	 eax, eax
  00035	74 0c		 je	 SHORT $LN6@Destroy

; 1503 : 		{
; 1504 : 			CWindowManager::Instance().DestroyWindow(rSlot.pCoverButton);

  00037	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ?DestroyWindow@CWindowManager@UI@@QAEXPAVCWindow@2@@Z ; UI::CWindowManager::DestroyWindow
$LN6@Destroy:

; 1505 : 		}
; 1506 : 		if (rSlot.pSlotButton)

  00043	8b 47 54	 mov	 eax, DWORD PTR [edi+84]
  00046	85 c0		 test	 eax, eax
  00048	74 0c		 je	 SHORT $LN7@Destroy

; 1507 : 		{
; 1508 : 			CWindowManager::Instance().DestroyWindow(rSlot.pSlotButton);

  0004a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00050	50		 push	 eax
  00051	e8 00 00 00 00	 call	 ?DestroyWindow@CWindowManager@UI@@QAEXPAVCWindow@2@@Z ; UI::CWindowManager::DestroyWindow
$LN7@Destroy:

; 1509 : 		}
; 1510 : 		if (rSlot.pSignImage)

  00056	8b 47 58	 mov	 eax, DWORD PTR [edi+88]
  00059	85 c0		 test	 eax, eax
  0005b	74 0c		 je	 SHORT $LN8@Destroy

; 1511 : 		{
; 1512 : 			CWindowManager::Instance().DestroyWindow(rSlot.pSignImage);

  0005d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 ?DestroyWindow@CWindowManager@UI@@QAEXPAVCWindow@2@@Z ; UI::CWindowManager::DestroyWindow
$LN8@Destroy:

; 1513 : 		}
; 1514 : 		if (rSlot.pFinishCoolTimeEffect)

  00069	8b 47 5c	 mov	 eax, DWORD PTR [edi+92]
  0006c	85 c0		 test	 eax, eax
  0006e	74 0c		 je	 SHORT $LN2@Destroy

; 1515 : 		{
; 1516 : 			CWindowManager::Instance().DestroyWindow(rSlot.pFinishCoolTimeEffect);

  00070	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00076	50		 push	 eax
  00077	e8 00 00 00 00	 call	 ?DestroyWindow@CWindowManager@UI@@QAEXPAVCWindow@2@@Z ; UI::CWindowManager::DestroyWindow
$LN2@Destroy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 165  :         this->_Ptr = this->_Ptr->_Next;

  0007c	8b 36		 mov	 esi, DWORD PTR [esi]

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0007e	8b 83 8c 00 00
	00		 mov	 eax, DWORD PTR [ebx+140]

; 198  :         return this->_Ptr == _Right._Ptr;

  00084	3b f0		 cmp	 esi, eax
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 1491 : 	for (TSlotListIterator itor = m_SlotList.begin(); itor != m_SlotList.end(); ++itor)

  00086	75 89		 jne	 SHORT $LL24@Destroy
  00088	5f		 pop	 edi
$LN3@Destroy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 325  :         _Head->_Prev->_Next = nullptr;

  00089	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0008c	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 326  : 
; 327  :         auto _Pnode = _Head->_Next;

  00092	8b 00		 mov	 eax, DWORD PTR [eax]

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00094	85 c0		 test	 eax, eax
  00096	74 13		 je	 SHORT $LN45@Destroy
$LL46@Destroy:

; 329  :             _Pnext = _Pnode->_Next;

  00098	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  0009a	6a 68		 push	 104			; 00000068H
  0009c	50		 push	 eax
  0009d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000a2	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  000a5	8b c6		 mov	 eax, esi
  000a7	85 f6		 test	 esi, esi
  000a9	75 ed		 jne	 SHORT $LL46@Destroy
$LN45@Destroy:

; 1491 :         _My_data._Myhead->_Next = _My_data._Myhead;

  000ab	8b 83 8c 00 00
	00		 mov	 eax, DWORD PTR [ebx+140]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 1522 : 	__DestroyToggleSlotImage();

  000b1	8b cb		 mov	 ecx, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1491 :         _My_data._Myhead->_Next = _My_data._Myhead;

  000b3	89 00		 mov	 DWORD PTR [eax], eax

; 1492 :         _My_data._Myhead->_Prev = _My_data._Myhead;

  000b5	8b 83 8c 00 00
	00		 mov	 eax, DWORD PTR [ebx+140]
  000bb	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1493 :         _My_data._Mysize        = 0;

  000be	c7 83 90 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+144], 0
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 1522 : 	__DestroyToggleSlotImage();

  000c8	e8 00 00 00 00	 call	 ?__DestroyToggleSlotImage@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::__DestroyToggleSlotImage

; 1523 : 	__DestroySlotEnableEffect();

  000cd	8b cb		 mov	 ecx, ebx
  000cf	e8 00 00 00 00	 call	 ?__DestroySlotEnableEffect@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::__DestroySlotEnableEffect

; 1524 : 	__DestroyBaseImage();

  000d4	8b cb		 mov	 ecx, ebx
  000d6	e8 00 00 00 00	 call	 ?__DestroyBaseImage@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::__DestroyBaseImage

; 1525 : 
; 1526 : 	__Initialize();

  000db	5e		 pop	 esi
  000dc	8b cb		 mov	 ecx, ebx
  000de	5b		 pop	 ebx
  000df	e9 00 00 00 00	 jmp	 ?__Initialize@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::__Initialize
?Destroy@CSlotWindow@UI@@QAEXXZ ENDP			; UI::CSlotWindow::Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\deque
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ??1CSlotWindow@UI@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CSlotWindow@UI@@UAE@XZ PROC				; UI::CSlotWindow::~CSlotWindow, COMDAT
; _this$ = ecx

; 1535 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CSlotWindow@UI@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f9		 mov	 edi, ecx
  00026	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CSlotWindow@UI@@6B@

; 1536 : 	Destroy();

  0002c	e8 00 00 00 00	 call	 ?Destroy@CSlotWindow@UI@@QAEXXZ ; UI::CSlotWindow::Destroy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\deque

; 905  :         _Tidy();

  00031	8d 8f b4 00 00
	00		 lea	 ecx, DWORD PTR [edi+180]
  00037	e8 00 00 00 00	 call	 ?_Tidy@?$deque@KV?$allocator@K@std@@@std@@AAEXXZ ; std::deque<unsigned long,std::allocator<unsigned long> >::_Tidy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0003c	8b 87 b4 00 00
	00		 mov	 eax, DWORD PTR [edi+180]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00042	6a 08		 push	 8
  00044	50		 push	 eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

  00045	c7 87 b4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+180], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  0004f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1501 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

  00054	8b 8f 8c 00 00
	00		 mov	 ecx, DWORD PTR [edi+140]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  0005a	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 325  :         _Head->_Prev->_Next = nullptr;

  0005d	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00060	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 326  : 
; 327  :         auto _Pnode = _Head->_Next;

  00066	8b 01		 mov	 eax, DWORD PTR [ecx]

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00068	85 c0		 test	 eax, eax
  0006a	74 17		 je	 SHORT $LN38@CSlotWindo
  0006c	0f 1f 40 00	 npad	 4
$LL39@CSlotWindo:

; 329  :             _Pnext = _Pnode->_Next;

  00070	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00072	6a 68		 push	 104			; 00000068H
  00074	50		 push	 eax
  00075	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  0007d	8b c6		 mov	 eax, esi
  0007f	85 f6		 test	 esi, esi
  00081	75 ed		 jne	 SHORT $LL39@CSlotWindo
$LN38@CSlotWindo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00083	6a 68		 push	 104			; 00000068H
  00085	ff b7 8c 00 00
	00		 push	 DWORD PTR [edi+140]
  0008b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1501 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

  00090	8b 8f 84 00 00
	00		 mov	 ecx, DWORD PTR [edi+132]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00096	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 325  :         _Head->_Prev->_Next = nullptr;

  00099	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0009c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 326  : 
; 327  :         auto _Pnode = _Head->_Next;

  000a2	8b 01		 mov	 eax, DWORD PTR [ecx]

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  000a4	85 c0		 test	 eax, eax
  000a6	74 13		 je	 SHORT $LN93@CSlotWindo
$LL94@CSlotWindo:

; 329  :             _Pnext = _Pnode->_Next;

  000a8	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  000aa	6a 0c		 push	 12			; 0000000cH
  000ac	50		 push	 eax
  000ad	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000b2	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  000b5	8b c6		 mov	 eax, esi
  000b7	85 f6		 test	 esi, esi
  000b9	75 ed		 jne	 SHORT $LL94@CSlotWindo
$LN93@CSlotWindo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  000bb	6a 0c		 push	 12			; 0000000cH
  000bd	ff b7 84 00 00
	00		 push	 DWORD PTR [edi+132]
  000c3	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000c8	83 c4 08	 add	 esp, 8
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 1537 : }

  000cb	8b cf		 mov	 ecx, edi
  000cd	e8 00 00 00 00	 call	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
  000d2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000d5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000dc	59		 pop	 ecx
  000dd	5f		 pop	 edi
  000de	5e		 pop	 esi
  000df	8b e5		 mov	 esp, ebp
  000e1	5d		 pop	 ebp
  000e2	c3		 ret	 0
  000e3	cc		 int	 3
  000e4	cc		 int	 3
  000e5	cc		 int	 3
  000e6	cc		 int	 3
  000e7	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CSlotWindow@UI@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CSlotWindow@UI@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CSlotWindow@UI@@UAE@XZ ENDP				; UI::CSlotWindow::~CSlotWindow
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\deque
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ??0CSlotWindow@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ppyObject$ = 8						; size = 4
??0CSlotWindow@UI@@QAE@PAU_object@@@Z PROC		; UI::CSlotWindow::CSlotWindow, COMDAT
; _this$ = ecx

; 1530 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CSlotWindow@UI@@QAE@PAU_object@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi

; 1529 : CSlotWindow::CSlotWindow(PyObject * ppyObject) : CWindow(ppyObject)

  0002a	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  0002d	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow

; 1530 : {

  00032	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CSlotWindow@UI@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

  00038	6a 0c		 push	 12			; 0000000cH
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 1529 : CSlotWindow::CSlotWindow(PyObject * ppyObject) : CWindow(ppyObject)

  0003a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 354  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

  00041	c7 87 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+132], 0
  0004b	c7 87 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+136], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

  00055	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1837 :         _Construct_in_place(_Newhead->_Next, _Newhead);

  0005a	89 00		 mov	 DWORD PTR [eax], eax

; 1838 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

  0005c	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1839 :         _Mypair._Myval2._Myhead = _Newhead;

  0005f	89 87 84 00 00
	00		 mov	 DWORD PTR [edi+132], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

  00065	6a 68		 push	 104			; 00000068H
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 1530 : {

  00067	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 354  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

  0006b	c7 87 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+140], 0
  00075	c7 87 90 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+144], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

  0007f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1837 :         _Construct_in_place(_Newhead->_Next, _Newhead);

  00084	89 00		 mov	 DWORD PTR [eax], eax

; 1838 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

  00086	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1839 :         _Mypair._Myval2._Myhead = _Newhead;

  00089	89 87 8c 00 00
	00		 mov	 DWORD PTR [edi+140], eax
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 1530 : {

  0008f	8d b7 b4 00 00
	00		 lea	 esi, DWORD PTR [edi+180]
  00095	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

  00099	6a 08		 push	 8

; 1219 :     _Container_proxy* _Myproxy = nullptr;

  0009b	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\deque

; 559  :     _Deque_val() noexcept : _Map(), _Mapsize(0), _Myoff(0), _Mysize(0) {}

  000a1	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  000a8	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  000af	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  000b6	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

  000bd	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000c2	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 1531 : 	__Initialize();

  000c5	8b cf		 mov	 ecx, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1189 :     mutable _Iterator_base12* _Myfirstiter = nullptr;

  000c7	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 1206 :         _Myproxy            = _New_proxy;

  000ce	89 06		 mov	 DWORD PTR [esi], eax

; 1207 :         _New_proxy->_Mycont = this;

  000d0	89 30		 mov	 DWORD PTR [eax], esi
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp

; 1531 : 	__Initialize();

  000d2	e8 00 00 00 00	 call	 ?__Initialize@CSlotWindow@UI@@IAEXXZ ; UI::CSlotWindow::__Initialize

; 1532 : }

  000d7	8b c7		 mov	 eax, edi
  000d9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000dc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000e3	59		 pop	 ecx
  000e4	5f		 pop	 edi
  000e5	5e		 pop	 esi
  000e6	8b e5		 mov	 esp, ebp
  000e8	5d		 pop	 ebp
  000e9	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CSlotWindow@UI@@QAE@PAU_object@@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
__unwindfunclet$??0CSlotWindow@UI@@QAE@PAU_object@@@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	81 c1 84 00 00
	00		 add	 ecx, 132		; 00000084H
  00011	e9 00 00 00 00	 jmp	 ??1?$list@KV?$allocator@K@std@@@std@@QAE@XZ ; std::list<unsigned long,std::allocator<unsigned long> >::~list<unsigned long,std::allocator<unsigned long> >
__unwindfunclet$??0CSlotWindow@UI@@QAE@PAU_object@@@Z$2:
  00016	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	81 c1 8c 00 00
	00		 add	 ecx, 140		; 0000008cH
  0001f	e9 00 00 00 00	 jmp	 ??1?$list@USSlot@CSlotWindow@UI@@V?$allocator@USSlot@CSlotWindow@UI@@@std@@@std@@QAE@XZ ; std::list<UI::CSlotWindow::SSlot,std::allocator<UI::CSlotWindow::SSlot> >::~list<UI::CSlotWindow::SSlot,std::allocator<UI::CSlotWindow::SSlot> >
  00024	cc		 int	 3
  00025	cc		 int	 3
  00026	cc		 int	 3
  00027	cc		 int	 3
  00028	cc		 int	 3
__ehhandler$??0CSlotWindow@UI@@QAE@PAU_object@@@Z:
  00029	90		 npad	 1
  0002a	90		 npad	 1
  0002b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00032	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00035	33 c8		 xor	 ecx, eax
  00037	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CSlotWindow@UI@@QAE@PAU_object@@@Z
  00041	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CSlotWindow@UI@@QAE@PAU_object@@@Z ENDP		; UI::CSlotWindow::CSlotWindow
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
;	COMDAT ??1?$list@USSlot@CSlotWindow@UI@@V?$allocator@USSlot@CSlotWindow@UI@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$list@USSlot@CSlotWindow@UI@@V?$allocator@USSlot@CSlotWindow@UI@@@std@@@std@@QAE@XZ PROC ; std::list<UI::CSlotWindow::SSlot,std::allocator<UI::CSlotWindow::SSlot> >::~list<UI::CSlotWindow::SSlot,std::allocator<UI::CSlotWindow::SSlot> >, COMDAT
; _this$ = ecx

; 1045 :     ~list() noexcept {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 1501 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

  00003	8b 17		 mov	 edx, DWORD PTR [edi]

; 325  :         _Head->_Prev->_Next = nullptr;

  00005	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00008	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 326  : 
; 327  :         auto _Pnode = _Head->_Next;

  0000e	8b 02		 mov	 eax, DWORD PTR [edx]

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00010	85 c0		 test	 eax, eax
  00012	74 15		 je	 SHORT $LN7@list
  00014	56		 push	 esi
$LL8@list:

; 329  :             _Pnext = _Pnode->_Next;

  00015	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00017	6a 68		 push	 104			; 00000068H
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001f	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00022	8b c6		 mov	 eax, esi
  00024	85 f6		 test	 esi, esi
  00026	75 ed		 jne	 SHORT $LL8@list
  00028	5e		 pop	 esi
$LN7@list:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00029	6a 68		 push	 104			; 00000068H
  0002b	ff 37		 push	 DWORD PTR [edi]
  0002d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00032	83 c4 08	 add	 esp, 8
  00035	5f		 pop	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1051 :     }

  00036	c3		 ret	 0
??1?$list@USSlot@CSlotWindow@UI@@V?$allocator@USSlot@CSlotWindow@UI@@@std@@@std@@QAE@XZ ENDP ; std::list<UI::CSlotWindow::SSlot,std::allocator<UI::CSlotWindow::SSlot> >::~list<UI::CSlotWindow::SSlot,std::allocator<UI::CSlotWindow::SSlot> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonSlotWindow.cpp
;	COMDAT ?Type@CSlotWindow@UI@@SAKXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?Type@CSlotWindow@UI@@SAKXZ PROC			; UI::CSlotWindow::Type, COMDAT

; 1309 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Type@CSlotWindow@UI@@SAKXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1310 : 	static int s_Type = GetCRC32("CSlotWindow", strlen("CSlotWindow"));

  00022	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0002e	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??Type@CSlotWindow@UI@@SAKXZ@4HA
  00036	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  0003c	7f 14		 jg	 SHORT $LN9@Type
$LN5@Type:

; 1311 : 	return s_Type;
; 1312 : }

  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_Type@?1??Type@CSlotWindow@UI@@SAKXZ@4HA
  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
$LN9@Type:

; 1310 : 	static int s_Type = GetCRC32("CSlotWindow", strlen("CSlotWindow"));

  00052	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CSlotWindow@UI@@SAKXZ@4HA
  00057	e8 00 00 00 00	 call	 __Init_thread_header
  0005c	83 c4 04	 add	 esp, 4
  0005f	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??Type@CSlotWindow@UI@@SAKXZ@4HA, -1
  00066	75 d6		 jne	 SHORT $LN5@Type
  00068	6a 0b		 push	 11			; 0000000bH
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0M@DKKKJBKL@CSlotWindow@
  0006f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00076	e8 00 00 00 00	 call	 ?GetCRC32@@YAKPBDI@Z	; GetCRC32
  0007b	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CSlotWindow@UI@@SAKXZ@4HA
  00080	a3 00 00 00 00	 mov	 DWORD PTR ?s_Type@?1??Type@CSlotWindow@UI@@SAKXZ@4HA, eax
  00085	e8 00 00 00 00	 call	 __Init_thread_footer
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008d	eb af		 jmp	 SHORT $LN5@Type
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Type@CSlotWindow@UI@@SAKXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CSlotWindow@UI@@SAKXZ@4HA
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$?Type@CSlotWindow@UI@@SAKXZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Type@CSlotWindow@UI@@SAKXZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Type@CSlotWindow@UI@@SAKXZ ENDP			; UI::CSlotWindow::Type
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.h
;	COMDAT ?IsWindow@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
?IsWindow@CWindow@UI@@UAEHXZ PROC			; UI::CWindow::IsWindow, COMDAT
; _this$ = ecx

; 163  : 			virtual BOOL	IsWindow() { return TRUE; }

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?IsWindow@CWindow@UI@@UAEHXZ ENDP			; UI::CWindow::IsWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.h
;	COMDAT ?SetColor@CWindow@UI@@UAEXK@Z
_TEXT	SEGMENT
_dwColor$ = 8						; size = 4
?SetColor@CWindow@UI@@UAEXK@Z PROC			; UI::CWindow::SetColor, COMDAT
; _this$ = ecx

; 159  : 			virtual void	SetColor(DWORD dwColor){}

  00000	c2 04 00	 ret	 4
?SetColor@CWindow@UI@@UAEXK@Z ENDP			; UI::CWindow::SetColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.h
;	COMDAT ?OnChangePosition@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnChangePosition@CWindow@UI@@UAEXXZ PROC		; UI::CWindow::OnChangePosition, COMDAT
; _this$ = ecx

; 105  : 			virtual void	OnChangePosition(){}

  00000	c2 00 00	 ret	 0
?OnChangePosition@CWindow@UI@@UAEXXZ ENDP		; UI::CWindow::OnChangePosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 137  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 138  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 139  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 140  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 87   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 141  :         _Throw_bad_array_new_length(); // add overflow
; 142  :     }
; 143  : 
; 144  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 87   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 146  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 147  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 148  : 
; 149  : #ifdef _DEBUG
; 150  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 151  : #endif // _DEBUG
; 152  :     return _Ptr;
; 153  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 331  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 332  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h
;	COMDAT __snprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__snprintf PROC						; COMDAT

; 1947 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1392 :         int const _Result = __stdio_common_vsprintf(

  00003	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00006	50		 push	 eax
  00007	6a 00		 push	 0
  00009	ff 75 10	 push	 DWORD PTR __Format$[ebp]
  0000c	ff 75 0c	 push	 DWORD PTR __BufferCount$[ebp]
  0000f	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00012	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	ff 70 04	 push	 DWORD PTR [eax+4]
  0001c	83 c9 01	 or	 ecx, 1
  0001f	51		 push	 ecx
  00020	e8 00 00 00 00	 call	 ___stdio_common_vsprintf

; 1393 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1394 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1395 : 
; 1396 :         return _Result < 0 ? -1 : _Result;

  00025	83 c9 ff	 or	 ecx, -1
  00028	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002b	85 c0		 test	 eax, eax
  0002d	0f 48 c1	 cmovs	 eax, ecx

; 1948 :         int _Result;
; 1949 :         va_list _ArgList;
; 1950 :         __crt_va_start(_ArgList, _Format);
; 1951 :         _Result = _vsnprintf(_Buffer, _BufferCount, _Format, _ArgList);
; 1952 :         __crt_va_end(_ArgList);
; 1953 :         return _Result;
; 1954 :     }

  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
__snprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 91   :         static unsigned __int64 _OptionsStorage;
; 92   :         return &_OptionsStorage;

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 93   :     }

  00005	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.37.32822.0 

	TITLE	C:\Marty 5.5\Src-Client\Client\eterPythonLib\Distribute\PythonWindow.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?g_bOutlineBoxEnable@@3HA			; g_bOutlineBoxEnable
_BSS	SEGMENT
?g_bOutlineBoxEnable@@3HA DD 01H DUP (?)		; g_bOutlineBoxEnable
_BSS	ENDS
CONST	SEGMENT
?_Fake_alloc@std@@3U_Fake_allocator@1@B	ORG $+1		; std::_Fake_alloc
CONST	ENDS
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?DeleteExpandedImageInstance@CGraphicExpandedImageInstance@@SAXPAV1@@Z ; CGraphicExpandedImageInstance::DeleteExpandedImageInstance
PUBLIC	?_Xlength@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Xlength
PUBLIC	??1?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@XZ ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::~list<UI::CWindow *,std::allocator<UI::CWindow *> >
PUBLIC	?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::push_back
PUBLIC	?remove@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@ABQAVCWindow@UI@@@Z ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::remove
PUBLIC	??$_Emplace_reallocate@ABQAVCGraphicExpandedImageInstance@@@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@AAEPAPAVCGraphicExpandedImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Emplace_reallocate<CGraphicExpandedImageInstance * const &>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$_Copy_memmove@PAPAVCGraphicExpandedImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicExpandedImageInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicExpandedImageInstance * *,CGraphicExpandedImageInstance * *>
PUBLIC	?Type@CWindow@UI@@SAKXZ				; UI::CWindow::Type
PUBLIC	?IsType@CWindow@UI@@QAEHK@Z			; UI::CWindow::IsType
PUBLIC	??0CWindow@UI@@QAE@PAU_object@@@Z		; UI::CWindow::CWindow
PUBLIC	??1CWindow@UI@@UAE@XZ				; UI::CWindow::~CWindow
PUBLIC	?AddChild@CWindow@UI@@QAEXPAV12@@Z		; UI::CWindow::AddChild
PUBLIC	?Clear@CWindow@UI@@QAEXXZ			; UI::CWindow::Clear
PUBLIC	?DestroyHandle@CWindow@UI@@QAEXXZ		; UI::CWindow::DestroyHandle
PUBLIC	?Update@CWindow@UI@@QAEXXZ			; UI::CWindow::Update
PUBLIC	?Render@CWindow@UI@@QAEXXZ			; UI::CWindow::Render
PUBLIC	?SetName@CWindow@UI@@QAEXPBD@Z			; UI::CWindow::SetName
PUBLIC	?SetSize@CWindow@UI@@QAEXJJ@Z			; UI::CWindow::SetSize
PUBLIC	?SetHorizontalAlign@CWindow@UI@@QAEXK@Z		; UI::CWindow::SetHorizontalAlign
PUBLIC	?SetVerticalAlign@CWindow@UI@@QAEXK@Z		; UI::CWindow::SetVerticalAlign
PUBLIC	?SetPosition@CWindow@UI@@QAEXJJ@Z		; UI::CWindow::SetPosition
PUBLIC	?GetPosition@CWindow@UI@@QAEXPAJ0@Z		; UI::CWindow::GetPosition
PUBLIC	?GetLocalPosition@CWindow@UI@@QAEXAAJ0@Z	; UI::CWindow::GetLocalPosition
PUBLIC	?GetMouseLocalPosition@CWindow@UI@@QAEXAAJ0@Z	; UI::CWindow::GetMouseLocalPosition
PUBLIC	?UpdateRect@CWindow@UI@@QAEJXZ			; UI::CWindow::UpdateRect
PUBLIC	?Show@CWindow@UI@@QAEXXZ			; UI::CWindow::Show
PUBLIC	?Hide@CWindow@UI@@QAEXXZ			; UI::CWindow::Hide
PUBLIC	?IsRendering@CWindow@UI@@QAE_NXZ		; UI::CWindow::IsRendering
PUBLIC	?GetRoot@CWindow@UI@@QAEPAV12@XZ		; UI::CWindow::GetRoot
PUBLIC	?GetParent@CWindow@UI@@QAEPAV12@XZ		; UI::CWindow::GetParent
PUBLIC	?IsChild@CWindow@UI@@QAE_NPAV12@@Z		; UI::CWindow::IsChild
PUBLIC	?DeleteChild@CWindow@UI@@QAEXPAV12@@Z		; UI::CWindow::DeleteChild
PUBLIC	?SetTop@CWindow@UI@@QAEXPAV12@@Z		; UI::CWindow::SetTop
PUBLIC	?IsIn@CWindow@UI@@QAE_NJJ@Z			; UI::CWindow::IsIn
PUBLIC	?IsIn@CWindow@UI@@QAE_NXZ			; UI::CWindow::IsIn
PUBLIC	?PickWindow@CWindow@UI@@QAEPAV12@JJ@Z		; UI::CWindow::PickWindow
PUBLIC	?PickTopWindow@CWindow@UI@@QAEPAV12@JJ@Z	; UI::CWindow::PickTopWindow
PUBLIC	?__RemoveReserveChildren@CWindow@UI@@QAEXXZ	; UI::CWindow::__RemoveReserveChildren
PUBLIC	?OnRender@CWindow@UI@@UAEXXZ			; UI::CWindow::OnRender
PUBLIC	?OnUpdate@CWindow@UI@@UAEXXZ			; UI::CWindow::OnUpdate
PUBLIC	?OnChangePosition@CWindow@UI@@UAEXXZ		; UI::CWindow::OnChangePosition
PUBLIC	?OnSetFocus@CWindow@UI@@UAEXXZ			; UI::CWindow::OnSetFocus
PUBLIC	?OnKillFocus@CWindow@UI@@UAEXXZ			; UI::CWindow::OnKillFocus
PUBLIC	?OnMouseDrag@CWindow@UI@@UAEXJJ@Z		; UI::CWindow::OnMouseDrag
PUBLIC	?OnMouseOverIn@CWindow@UI@@UAEXXZ		; UI::CWindow::OnMouseOverIn
PUBLIC	?OnMouseOverOut@CWindow@UI@@UAEXXZ		; UI::CWindow::OnMouseOverOut
PUBLIC	?OnMouseOver@CWindow@UI@@UAEXXZ			; UI::CWindow::OnMouseOver
PUBLIC	?OnDrop@CWindow@UI@@UAEXXZ			; UI::CWindow::OnDrop
PUBLIC	?OnTop@CWindow@UI@@UAEXXZ			; UI::CWindow::OnTop
PUBLIC	?OnIMEUpdate@CWindow@UI@@UAEXXZ			; UI::CWindow::OnIMEUpdate
PUBLIC	?OnMoveWindow@CWindow@UI@@UAEXJJ@Z		; UI::CWindow::OnMoveWindow
PUBLIC	?RunIMETabEvent@CWindow@UI@@QAEHXZ		; UI::CWindow::RunIMETabEvent
PUBLIC	?RunIMEReturnEvent@CWindow@UI@@QAEHXZ		; UI::CWindow::RunIMEReturnEvent
PUBLIC	?RunIMEKeyDownEvent@CWindow@UI@@QAEHH@Z		; UI::CWindow::RunIMEKeyDownEvent
PUBLIC	?RunKeyDownEvent@CWindow@UI@@QAEPAV12@H@Z	; UI::CWindow::RunKeyDownEvent
PUBLIC	?RunKeyUpEvent@CWindow@UI@@QAEHH@Z		; UI::CWindow::RunKeyUpEvent
PUBLIC	?RunPressEscapeKeyEvent@CWindow@UI@@QAEHXZ	; UI::CWindow::RunPressEscapeKeyEvent
PUBLIC	?RunPressExitKeyEvent@CWindow@UI@@QAEHXZ	; UI::CWindow::RunPressExitKeyEvent
PUBLIC	?OnIMETabEvent@CWindow@UI@@UAEHXZ		; UI::CWindow::OnIMETabEvent
PUBLIC	?OnIMEReturnEvent@CWindow@UI@@UAEHXZ		; UI::CWindow::OnIMEReturnEvent
PUBLIC	?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z		; UI::CWindow::OnIMEKeyDownEvent
PUBLIC	?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ		; UI::CWindow::OnIMEChangeCodePage
PUBLIC	?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ	; UI::CWindow::OnIMEOpenCandidateListEvent
PUBLIC	?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ ; UI::CWindow::OnIMECloseCandidateListEvent
PUBLIC	?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ	; UI::CWindow::OnIMEOpenReadingWndEvent
PUBLIC	?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ	; UI::CWindow::OnIMECloseReadingWndEvent
PUBLIC	?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ	; UI::CWindow::OnMouseLeftButtonDown
PUBLIC	?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ		; UI::CWindow::OnMouseLeftButtonUp
PUBLIC	?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ ; UI::CWindow::OnMouseLeftButtonDoubleClick
PUBLIC	?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ	; UI::CWindow::OnMouseRightButtonDown
PUBLIC	?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ	; UI::CWindow::OnMouseRightButtonUp
PUBLIC	?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ ; UI::CWindow::OnMouseRightButtonDoubleClick
PUBLIC	?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ	; UI::CWindow::OnMouseMiddleButtonDown
PUBLIC	?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ	; UI::CWindow::OnMouseMiddleButtonUp
PUBLIC	?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z		; UI::CWindow::OnMouseWheelScroll
PUBLIC	?SetScrollable@CWindow@UI@@UAEXXZ		; UI::CWindow::SetScrollable
PUBLIC	?OnKeyDown@CWindow@UI@@UAEHH@Z			; UI::CWindow::OnKeyDown
PUBLIC	?OnKeyUp@CWindow@UI@@UAEHH@Z			; UI::CWindow::OnKeyUp
PUBLIC	?OnPressEscapeKey@CWindow@UI@@UAEHXZ		; UI::CWindow::OnPressEscapeKey
PUBLIC	?OnPressExitKey@CWindow@UI@@UAEHXZ		; UI::CWindow::OnPressExitKey
PUBLIC	?SetColor@CWindow@UI@@UAEXK@Z			; UI::CWindow::SetColor
PUBLIC	?OnIsType@CWindow@UI@@UAEHK@Z			; UI::CWindow::OnIsType
PUBLIC	?IsWindow@CWindow@UI@@UAEHXZ			; UI::CWindow::IsWindow
PUBLIC	??_GCWindow@UI@@UAEPAXI@Z			; UI::CWindow::`scalar deleting destructor'
PUBLIC	??0CBox@UI@@QAE@PAU_object@@@Z			; UI::CBox::CBox
PUBLIC	??1CBox@UI@@UAE@XZ				; UI::CBox::~CBox
PUBLIC	?SetColor@CBox@UI@@UAEXK@Z			; UI::CBox::SetColor
PUBLIC	?OnRender@CBox@UI@@MAEXXZ			; UI::CBox::OnRender
PUBLIC	??_GCBox@UI@@UAEPAXI@Z				; UI::CBox::`scalar deleting destructor'
PUBLIC	??0CBar@UI@@QAE@PAU_object@@@Z			; UI::CBar::CBar
PUBLIC	??1CBar@UI@@UAE@XZ				; UI::CBar::~CBar
PUBLIC	?SetColor@CBar@UI@@UAEXK@Z			; UI::CBar::SetColor
PUBLIC	?OnRender@CBar@UI@@MAEXXZ			; UI::CBar::OnRender
PUBLIC	??_GCBar@UI@@UAEPAXI@Z				; UI::CBar::`scalar deleting destructor'
PUBLIC	??0CLine@UI@@QAE@PAU_object@@@Z			; UI::CLine::CLine
PUBLIC	??1CLine@UI@@UAE@XZ				; UI::CLine::~CLine
PUBLIC	?SetColor@CLine@UI@@UAEXK@Z			; UI::CLine::SetColor
PUBLIC	?OnRender@CLine@UI@@MAEXXZ			; UI::CLine::OnRender
PUBLIC	??_GCLine@UI@@UAEPAXI@Z				; UI::CLine::`scalar deleting destructor'
PUBLIC	?Type@CBar3D@UI@@SAKXZ				; UI::CBar3D::Type
PUBLIC	??0CBar3D@UI@@QAE@PAU_object@@@Z		; UI::CBar3D::CBar3D
PUBLIC	??1CBar3D@UI@@UAE@XZ				; UI::CBar3D::~CBar3D
PUBLIC	?SetColor@CBar3D@UI@@QAEXKKK@Z			; UI::CBar3D::SetColor
PUBLIC	?OnRender@CBar3D@UI@@MAEXXZ			; UI::CBar3D::OnRender
PUBLIC	??_GCBar3D@UI@@UAEPAXI@Z			; UI::CBar3D::`scalar deleting destructor'
PUBLIC	??0CTextLine@UI@@QAE@PAU_object@@@Z		; UI::CTextLine::CTextLine
PUBLIC	??1CTextLine@UI@@UAE@XZ				; UI::CTextLine::~CTextLine
PUBLIC	?SetMax@CTextLine@UI@@QAEXH@Z			; UI::CTextLine::SetMax
PUBLIC	?SetHorizontalAlign@CTextLine@UI@@QAEXH@Z	; UI::CTextLine::SetHorizontalAlign
PUBLIC	?SetVerticalAlign@CTextLine@UI@@QAEXH@Z		; UI::CTextLine::SetVerticalAlign
PUBLIC	?SetSecret@CTextLine@UI@@QAEXH@Z		; UI::CTextLine::SetSecret
PUBLIC	?SetOutline@CTextLine@UI@@QAEXH@Z		; UI::CTextLine::SetOutline
PUBLIC	?SetFeather@CTextLine@UI@@QAEXH@Z		; UI::CTextLine::SetFeather
PUBLIC	?SetMultiLine@CTextLine@UI@@QAEXH@Z		; UI::CTextLine::SetMultiLine
PUBLIC	?SetFontName@CTextLine@UI@@QAEXPBD@Z		; UI::CTextLine::SetFontName
PUBLIC	?SetFontColor@CTextLine@UI@@QAEXK@Z		; UI::CTextLine::SetFontColor
PUBLIC	?SetLimitWidth@CTextLine@UI@@QAEXM@Z		; UI::CTextLine::SetLimitWidth
PUBLIC	?ShowCursor@CTextLine@UI@@QAEXXZ		; UI::CTextLine::ShowCursor
PUBLIC	?HideCursor@CTextLine@UI@@QAEXXZ		; UI::CTextLine::HideCursor
PUBLIC	?GetCursorPosition@CTextLine@UI@@QAEHXZ		; UI::CTextLine::GetCursorPosition
PUBLIC	?SetText@CTextLine@UI@@QAEXPBD@Z		; UI::CTextLine::SetText
PUBLIC	?GetText@CTextLine@UI@@QAEPBDXZ			; UI::CTextLine::GetText
PUBLIC	?GetTextSize@CTextLine@UI@@QAEXPAH0@Z		; UI::CTextLine::GetTextSize
PUBLIC	?OnUpdate@CTextLine@UI@@MAEXXZ			; UI::CTextLine::OnUpdate
PUBLIC	?OnRender@CTextLine@UI@@MAEXXZ			; UI::CTextLine::OnRender
PUBLIC	?OnChangePosition@CTextLine@UI@@MAEXXZ		; UI::CTextLine::OnChangePosition
PUBLIC	?OnSetText@CTextLine@UI@@MAEXPBD@Z		; UI::CTextLine::OnSetText
PUBLIC	??_GCTextLine@UI@@UAEPAXI@Z			; UI::CTextLine::`scalar deleting destructor'
PUBLIC	??0CNumberLine@UI@@QAE@PAU_object@@@Z		; UI::CNumberLine::CNumberLine
PUBLIC	??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z		; UI::CNumberLine::CNumberLine
PUBLIC	??1CNumberLine@UI@@UAE@XZ			; UI::CNumberLine::~CNumberLine
PUBLIC	?SetPath@CNumberLine@UI@@QAEXPBD@Z		; UI::CNumberLine::SetPath
PUBLIC	?SetHorizontalAlign@CNumberLine@UI@@QAEXH@Z	; UI::CNumberLine::SetHorizontalAlign
PUBLIC	?SetNumber@CNumberLine@UI@@QAEXPBD@Z		; UI::CNumberLine::SetNumber
PUBLIC	?ClearNumber@CNumberLine@UI@@IAEXXZ		; UI::CNumberLine::ClearNumber
PUBLIC	?OnRender@CNumberLine@UI@@MAEXXZ		; UI::CNumberLine::OnRender
PUBLIC	?OnChangePosition@CNumberLine@UI@@MAEXXZ	; UI::CNumberLine::OnChangePosition
PUBLIC	??1?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAE@XZ ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::~vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >
PUBLIC	?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Xlength
PUBLIC	??_GCNumberLine@UI@@UAEPAXI@Z			; UI::CNumberLine::`scalar deleting destructor'
PUBLIC	??0CImageBox@UI@@QAE@PAU_object@@@Z		; UI::CImageBox::CImageBox
PUBLIC	??1CImageBox@UI@@UAE@XZ				; UI::CImageBox::~CImageBox
PUBLIC	?LoadImageA@CImageBox@UI@@QAEHPBD@Z		; UI::CImageBox::LoadImageA
PUBLIC	?SetDiffuseColor@CImageBox@UI@@QAEXMMMM@Z	; UI::CImageBox::SetDiffuseColor
PUBLIC	?GetWidth@CImageBox@UI@@QAEHXZ			; UI::CImageBox::GetWidth
PUBLIC	?GetHeight@CImageBox@UI@@QAEHXZ			; UI::CImageBox::GetHeight
PUBLIC	?OnCreateInstance@CImageBox@UI@@MAEXXZ		; UI::CImageBox::OnCreateInstance
PUBLIC	?OnDestroyInstance@CImageBox@UI@@MAEXXZ		; UI::CImageBox::OnDestroyInstance
PUBLIC	?OnUpdate@CImageBox@UI@@MAEXXZ			; UI::CImageBox::OnUpdate
PUBLIC	?OnRender@CImageBox@UI@@MAEXXZ			; UI::CImageBox::OnRender
PUBLIC	?OnChangePosition@CImageBox@UI@@MAEXXZ		; UI::CImageBox::OnChangePosition
PUBLIC	??_GCImageBox@UI@@UAEPAXI@Z			; UI::CImageBox::`scalar deleting destructor'
PUBLIC	??0CMarkBox@UI@@QAE@PAU_object@@@Z		; UI::CMarkBox::CMarkBox
PUBLIC	??1CMarkBox@UI@@UAE@XZ				; UI::CMarkBox::~CMarkBox
PUBLIC	?LoadImageA@CMarkBox@UI@@QAEXPBD@Z		; UI::CMarkBox::LoadImageA
PUBLIC	?SetDiffuseColor@CMarkBox@UI@@QAEXMMMM@Z	; UI::CMarkBox::SetDiffuseColor
PUBLIC	?SetIndex@CMarkBox@UI@@QAEXI@Z			; UI::CMarkBox::SetIndex
PUBLIC	?SetScale@CMarkBox@UI@@QAEXM@Z			; UI::CMarkBox::SetScale
PUBLIC	?OnCreateInstance@CMarkBox@UI@@MAEXXZ		; UI::CMarkBox::OnCreateInstance
PUBLIC	?OnDestroyInstance@CMarkBox@UI@@MAEXXZ		; UI::CMarkBox::OnDestroyInstance
PUBLIC	?OnUpdate@CMarkBox@UI@@MAEXXZ			; UI::CMarkBox::OnUpdate
PUBLIC	?OnRender@CMarkBox@UI@@MAEXXZ			; UI::CMarkBox::OnRender
PUBLIC	?OnChangePosition@CMarkBox@UI@@MAEXXZ		; UI::CMarkBox::OnChangePosition
PUBLIC	??_GCMarkBox@UI@@UAEPAXI@Z			; UI::CMarkBox::`scalar deleting destructor'
PUBLIC	?Type@CExpandedImageBox@UI@@SAKXZ		; UI::CExpandedImageBox::Type
PUBLIC	??0CExpandedImageBox@UI@@QAE@PAU_object@@@Z	; UI::CExpandedImageBox::CExpandedImageBox
PUBLIC	??1CExpandedImageBox@UI@@UAE@XZ			; UI::CExpandedImageBox::~CExpandedImageBox
PUBLIC	?SetScale@CExpandedImageBox@UI@@QAEXMM@Z	; UI::CExpandedImageBox::SetScale
PUBLIC	?SetOrigin@CExpandedImageBox@UI@@QAEXMM@Z	; UI::CExpandedImageBox::SetOrigin
PUBLIC	?SetRotation@CExpandedImageBox@UI@@QAEXM@Z	; UI::CExpandedImageBox::SetRotation
PUBLIC	?SetRenderingRect@CExpandedImageBox@UI@@QAEXMMMM@Z ; UI::CExpandedImageBox::SetRenderingRect
PUBLIC	?SetRenderingMode@CExpandedImageBox@UI@@QAEXH@Z	; UI::CExpandedImageBox::SetRenderingMode
PUBLIC	?OnCreateInstance@CExpandedImageBox@UI@@MAEXXZ	; UI::CExpandedImageBox::OnCreateInstance
PUBLIC	?OnDestroyInstance@CExpandedImageBox@UI@@MAEXXZ	; UI::CExpandedImageBox::OnDestroyInstance
PUBLIC	?OnUpdate@CExpandedImageBox@UI@@MAEXXZ		; UI::CExpandedImageBox::OnUpdate
PUBLIC	?OnRender@CExpandedImageBox@UI@@MAEXXZ		; UI::CExpandedImageBox::OnRender
PUBLIC	?OnIsType@CExpandedImageBox@UI@@MAEHK@Z		; UI::CExpandedImageBox::OnIsType
PUBLIC	??_GCExpandedImageBox@UI@@UAEPAXI@Z		; UI::CExpandedImageBox::`scalar deleting destructor'
PUBLIC	?Type@CAniImageBox@UI@@SAKXZ			; UI::CAniImageBox::Type
PUBLIC	??0CAniImageBox@UI@@QAE@PAU_object@@@Z		; UI::CAniImageBox::CAniImageBox
PUBLIC	??1CAniImageBox@UI@@UAE@XZ			; UI::CAniImageBox::~CAniImageBox
PUBLIC	?SetDelay@CAniImageBox@UI@@QAEXH@Z		; UI::CAniImageBox::SetDelay
PUBLIC	?SetDiffuseColor@CAniImageBox@UI@@QAEXABUD3DXCOLOR@@@Z ; UI::CAniImageBox::SetDiffuseColor
PUBLIC	?AppendImage@CAniImageBox@UI@@QAEXPBD@Z		; UI::CAniImageBox::AppendImage
PUBLIC	?SetRenderingRect@CAniImageBox@UI@@QAEXMMMM@Z	; UI::CAniImageBox::SetRenderingRect
PUBLIC	?SetRenderingMode@CAniImageBox@UI@@QAEXH@Z	; UI::CAniImageBox::SetRenderingMode
PUBLIC	?ResetFrame@CAniImageBox@UI@@QAEXXZ		; UI::CAniImageBox::ResetFrame
PUBLIC	?OnUpdate@CAniImageBox@UI@@MAEXXZ		; UI::CAniImageBox::OnUpdate
PUBLIC	?OnRender@CAniImageBox@UI@@MAEXXZ		; UI::CAniImageBox::OnRender
PUBLIC	?OnChangePosition@CAniImageBox@UI@@MAEXXZ	; UI::CAniImageBox::OnChangePosition
PUBLIC	?OnEndFrame@CAniImageBox@UI@@MAEXXZ		; UI::CAniImageBox::OnEndFrame
PUBLIC	?OnIsType@CAniImageBox@UI@@MAEHK@Z		; UI::CAniImageBox::OnIsType
PUBLIC	??_GCAniImageBox@UI@@UAEPAXI@Z			; UI::CAniImageBox::`scalar deleting destructor'
PUBLIC	??0CButton@UI@@QAE@PAU_object@@@Z		; UI::CButton::CButton
PUBLIC	??1CButton@UI@@UAE@XZ				; UI::CButton::~CButton
PUBLIC	?SetUpVisual@CButton@UI@@QAEHPBD@Z		; UI::CButton::SetUpVisual
PUBLIC	?SetOverVisual@CButton@UI@@QAEHPBD@Z		; UI::CButton::SetOverVisual
PUBLIC	?SetDownVisual@CButton@UI@@QAEHPBD@Z		; UI::CButton::SetDownVisual
PUBLIC	?SetDisableVisual@CButton@UI@@QAEHPBD@Z		; UI::CButton::SetDisableVisual
PUBLIC	?GetUpVisualFileName@CButton@UI@@QAEPBDXZ	; UI::CButton::GetUpVisualFileName
PUBLIC	?GetOverVisualFileName@CButton@UI@@QAEPBDXZ	; UI::CButton::GetOverVisualFileName
PUBLIC	?GetDownVisualFileName@CButton@UI@@QAEPBDXZ	; UI::CButton::GetDownVisualFileName
PUBLIC	?Flash@CButton@UI@@QAEXXZ			; UI::CButton::Flash
PUBLIC	?Enable@CButton@UI@@QAEXXZ			; UI::CButton::Enable
PUBLIC	?Disable@CButton@UI@@QAEXXZ			; UI::CButton::Disable
PUBLIC	?SetUp@CButton@UI@@QAEXXZ			; UI::CButton::SetUp
PUBLIC	?Up@CButton@UI@@QAEXXZ				; UI::CButton::Up
PUBLIC	?Over@CButton@UI@@QAEXXZ			; UI::CButton::Over
PUBLIC	?Down@CButton@UI@@QAEXXZ			; UI::CButton::Down
PUBLIC	?IsDisable@CButton@UI@@QAEHXZ			; UI::CButton::IsDisable
PUBLIC	?IsPressed@CButton@UI@@QAEHXZ			; UI::CButton::IsPressed
PUBLIC	?OnUpdate@CButton@UI@@MAEXXZ			; UI::CButton::OnUpdate
PUBLIC	?OnRender@CButton@UI@@MAEXXZ			; UI::CButton::OnRender
PUBLIC	?OnChangePosition@CButton@UI@@MAEXXZ		; UI::CButton::OnChangePosition
PUBLIC	?OnMouseLeftButtonDown@CButton@UI@@MAEHXZ	; UI::CButton::OnMouseLeftButtonDown
PUBLIC	?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ ; UI::CButton::OnMouseLeftButtonDoubleClick
PUBLIC	?OnMouseLeftButtonUp@CButton@UI@@MAEHXZ		; UI::CButton::OnMouseLeftButtonUp
PUBLIC	?OnMouseOverIn@CButton@UI@@MAEXXZ		; UI::CButton::OnMouseOverIn
PUBLIC	?OnMouseOverOut@CButton@UI@@MAEXXZ		; UI::CButton::OnMouseOverOut
PUBLIC	?IsEnable@CButton@UI@@IAEHXZ			; UI::CButton::IsEnable
PUBLIC	?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual
PUBLIC	??_GCButton@UI@@UAEPAXI@Z			; UI::CButton::`scalar deleting destructor'
PUBLIC	??0CRadioButton@UI@@QAE@PAU_object@@@Z		; UI::CRadioButton::CRadioButton
PUBLIC	??1CRadioButton@UI@@UAE@XZ			; UI::CRadioButton::~CRadioButton
PUBLIC	?OnMouseLeftButtonDown@CRadioButton@UI@@MAEHXZ	; UI::CRadioButton::OnMouseLeftButtonDown
PUBLIC	?OnMouseLeftButtonUp@CRadioButton@UI@@MAEHXZ	; UI::CRadioButton::OnMouseLeftButtonUp
PUBLIC	?OnMouseOverIn@CRadioButton@UI@@MAEXXZ		; UI::CRadioButton::OnMouseOverIn
PUBLIC	?OnMouseOverOut@CRadioButton@UI@@MAEXXZ		; UI::CRadioButton::OnMouseOverOut
PUBLIC	??_GCRadioButton@UI@@UAEPAXI@Z			; UI::CRadioButton::`scalar deleting destructor'
PUBLIC	??0CToggleButton@UI@@QAE@PAU_object@@@Z		; UI::CToggleButton::CToggleButton
PUBLIC	??1CToggleButton@UI@@UAE@XZ			; UI::CToggleButton::~CToggleButton
PUBLIC	?OnMouseLeftButtonDown@CToggleButton@UI@@MAEHXZ	; UI::CToggleButton::OnMouseLeftButtonDown
PUBLIC	?OnMouseLeftButtonUp@CToggleButton@UI@@MAEHXZ	; UI::CToggleButton::OnMouseLeftButtonUp
PUBLIC	?OnMouseOverIn@CToggleButton@UI@@MAEXXZ		; UI::CToggleButton::OnMouseOverIn
PUBLIC	?OnMouseOverOut@CToggleButton@UI@@MAEXXZ	; UI::CToggleButton::OnMouseOverOut
PUBLIC	??_GCToggleButton@UI@@UAEPAXI@Z			; UI::CToggleButton::`scalar deleting destructor'
PUBLIC	??0CDragButton@UI@@QAE@PAU_object@@@Z		; UI::CDragButton::CDragButton
PUBLIC	??1CDragButton@UI@@UAE@XZ			; UI::CDragButton::~CDragButton
PUBLIC	?SetRestrictMovementArea@CDragButton@UI@@QAEXHHHH@Z ; UI::CDragButton::SetRestrictMovementArea
PUBLIC	?OnChangePosition@CDragButton@UI@@MAEXXZ	; UI::CDragButton::OnChangePosition
PUBLIC	?OnMouseOverIn@CDragButton@UI@@MAEXXZ		; UI::CDragButton::OnMouseOverIn
PUBLIC	?OnMouseOverOut@CDragButton@UI@@MAEXXZ		; UI::CDragButton::OnMouseOverOut
PUBLIC	??_GCDragButton@UI@@UAEPAXI@Z			; UI::CDragButton::`scalar deleting destructor'
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Emplace_reallocate<CGraphicImageInstance * const &>
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >
PUBLIC	??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicImageInstance * *,CGraphicImageInstance * *>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7CWindow@UI@@6B@				; UI::CWindow::`vftable'
PUBLIC	??_7CBox@UI@@6B@				; UI::CBox::`vftable'
PUBLIC	??_7CBar@UI@@6B@				; UI::CBar::`vftable'
PUBLIC	??_7CLine@UI@@6B@				; UI::CLine::`vftable'
PUBLIC	??_7CBar3D@UI@@6B@				; UI::CBar3D::`vftable'
PUBLIC	??_7CTextLine@UI@@6B@				; UI::CTextLine::`vftable'
PUBLIC	??_7CNumberLine@UI@@6B@				; UI::CNumberLine::`vftable'
PUBLIC	??_7CImageBox@UI@@6B@				; UI::CImageBox::`vftable'
PUBLIC	??_7CMarkBox@UI@@6B@				; UI::CMarkBox::`vftable'
PUBLIC	??_7CExpandedImageBox@UI@@6B@			; UI::CExpandedImageBox::`vftable'
PUBLIC	??_7CAniImageBox@UI@@6B@			; UI::CAniImageBox::`vftable'
PUBLIC	??_7CButton@UI@@6B@				; UI::CButton::`vftable'
PUBLIC	??_7CRadioButton@UI@@6B@			; UI::CRadioButton::`vftable'
PUBLIC	??_7CToggleButton@UI@@6B@			; UI::CToggleButton::`vftable'
PUBLIC	??_7CDragButton@UI@@6B@				; UI::CDragButton::`vftable'
PUBLIC	??_C@_07EFPFKGGH@CWindow@			; `string'
PUBLIC	??_C@_08DCJEAFK@OnUpdate@			; `string'
PUBLIC	??_C@_08PAJMEILO@OnRender@			; `string'
PUBLIC	??_C@_0DA@NEIGMJK@?5CWindow?3?3SetTop?5?9?5Failed?5to?5fi@ ; `string'
PUBLIC	??_C@_04INACLLOK@?$CIii?$CJ@			; `string'
PUBLIC	??_C@_0M@ECAEGPAI@OnMouseDrag@			; `string'
PUBLIC	??_C@_0N@PFKNBOJP@OnMoveWindow@			; `string'
PUBLIC	??_C@_0L@GIMNGBCD@OnSetFocus@			; `string'
PUBLIC	??_C@_0M@CEGPCFGM@OnKillFocus@			; `string'
PUBLIC	??_C@_0O@JKDAFDCC@OnMouseOverIn@		; `string'
PUBLIC	??_C@_0P@KLLBNOAI@OnMouseOverOut@		; `string'
PUBLIC	??_C@_06OCNPCIEO@OnDrop@			; `string'
PUBLIC	??_C@_05LOOKECNH@OnTop@				; `string'
PUBLIC	??_C@_0M@DGOFHNMI@OnIMEUpdate@			; `string'
PUBLIC	??_C@_0BG@DNDHJHBD@OnMouseLeftButtonDown@	; `string'
PUBLIC	??_C@_0BE@MJALGMGL@OnMouseLeftButtonUp@		; `string'
PUBLIC	??_C@_0BN@KEKGIMMP@OnMouseLeftButtonDoubleClick@ ; `string'
PUBLIC	??_C@_0BH@ELECPAKA@OnMouseRightButtonDown@	; `string'
PUBLIC	??_C@_0BF@FDIGHPIH@OnMouseRightButtonUp@	; `string'
PUBLIC	??_C@_0BO@NPKMHGOP@OnMouseRightButtonDoubleClick@ ; `string'
PUBLIC	??_C@_0BI@LKFMHNKP@OnMouseMiddleButtonDown@	; `string'
PUBLIC	??_C@_0BG@IGAJCEHG@OnMouseMiddleButtonUp@	; `string'
PUBLIC	??_C@_02NAHCJHOC@UP@				; `string'
PUBLIC	??_C@_04FANAOELO@DOWN@				; `string'
PUBLIC	??_C@_03KJMMOONA@?$CIs?$CJ@			; `string'
PUBLIC	??_C@_0BD@GNNJJHBO@OnMouseWheelScroll@		; `string'
PUBLIC	??_C@_08HFELFLOI@OnIMETab@			; `string'
PUBLIC	??_C@_0M@PILLCCFN@OnIMEReturn@			; `string'
PUBLIC	??_C@_03LIHNMIHG@?$CIi?$CJ@			; `string'
PUBLIC	??_C@_0N@BMPDGPBH@OnIMEKeyDown@			; `string'
PUBLIC	??_C@_0BE@EHKLBB@OnIMEChangeCodePage@		; `string'
PUBLIC	??_C@_0BH@HEDPBKEK@OnIMEOpenCandidateList@	; `string'
PUBLIC	??_C@_0BI@LOIKIPJ@OnIMECloseCandidateList@	; `string'
PUBLIC	??_C@_0BE@KDCLEDDC@OnIMEOpenReadingWnd@		; `string'
PUBLIC	??_C@_0BF@DEOILJPB@OnIMECloseReadingWnd@	; `string'
PUBLIC	??_C@_09CMHFBEC@OnKeyDown@			; `string'
PUBLIC	??_C@_07NGNLLPEG@OnKeyUp@			; `string'
PUBLIC	??_C@_0BB@HCFLIMGH@OnPressEscapeKey@		; `string'
PUBLIC	??_C@_0P@KEJGBDKK@OnPressExitKey@		; `string'
PUBLIC	??_C@_06ICLMADCA@CBar3D@			; `string'
PUBLIC	??_C@_04FAHLGLIA@?4fnt@				; `string'
PUBLIC	??_C@_0BO@GPCBPBEE@d?3?1ymir?5work?1ui?1game?1taskbar?1@ ; `string'
PUBLIC	??_C@_09GPLBLMNE@colon?4sub@			; `string'
PUBLIC	??_C@_0BB@POBNNLPJ@questionmark?4sub@		; `string'
PUBLIC	??_C@_09JMLAABIP@slash?4sub@			; `string'
PUBLIC	??_C@_0M@MHAKIBOD@percent?4sub@			; `string'
PUBLIC	??_C@_08FPHNCABK@plus?4sub@			; `string'
PUBLIC	??_C@_05PINNHPFB@m?4sub@			; `string'
PUBLIC	??_C@_05FJEGFMDH@g?4sub@			; `string'
PUBLIC	??_C@_05EHJFGOBE@p?4sub@			; `string'
PUBLIC	??_C@_04DLFHDFGL@?4sub@				; `string'
PUBLIC	??_C@_0BC@DJHPPMGJ@CExpandedImageBox@		; `string'
PUBLIC	??_C@_0N@LBBHECOO@CAniImageBox@			; `string'
PUBLIC	??_C@_0L@LBHHAGOH@OnEndFrame@			; `string'
PUBLIC	??_C@_09MFFHPOPB@CallEvent@			; `string'
PUBLIC	??_C@_09FJAHACEO@DownEvent@			; `string'
PUBLIC	??_C@_0M@LEFCMAKP@ShowToolTip@			; `string'
PUBLIC	??_C@_0M@HCIAMHJN@HideToolTip@			; `string'
PUBLIC	??_C@_0L@HGABHAMN@OnToggleUp@			; `string'
PUBLIC	??_C@_0N@NBGLGPDJ@OnToggleDown@			; `string'
PUBLIC	??_C@_06GJPOLLJG@OnMove@			; `string'
PUBLIC	??_C@_0O@NKNMEGII@list?5too?5long@		; `string'
PUBLIC	??_R4CWindow@UI@@6B@				; UI::CWindow::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCWindow@UI@@@8				; UI::CWindow `RTTI Type Descriptor'
PUBLIC	??_R3CWindow@UI@@8				; UI::CWindow::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWindow@UI@@8				; UI::CWindow::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CWindow@UI@@8			; UI::CWindow::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CBox@UI@@6B@				; UI::CBox::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBox@UI@@@8				; UI::CBox `RTTI Type Descriptor'
PUBLIC	??_R3CBox@UI@@8					; UI::CBox::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBox@UI@@8					; UI::CBox::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBox@UI@@8			; UI::CBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CBar@UI@@6B@				; UI::CBar::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBar@UI@@@8				; UI::CBar `RTTI Type Descriptor'
PUBLIC	??_R3CBar@UI@@8					; UI::CBar::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBar@UI@@8					; UI::CBar::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBar@UI@@8			; UI::CBar::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CLine@UI@@6B@				; UI::CLine::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCLine@UI@@@8				; UI::CLine `RTTI Type Descriptor'
PUBLIC	??_R3CLine@UI@@8				; UI::CLine::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CLine@UI@@8				; UI::CLine::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CLine@UI@@8			; UI::CLine::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CBar3D@UI@@6B@				; UI::CBar3D::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBar3D@UI@@@8				; UI::CBar3D `RTTI Type Descriptor'
PUBLIC	??_R3CBar3D@UI@@8				; UI::CBar3D::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBar3D@UI@@8				; UI::CBar3D::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBar3D@UI@@8			; UI::CBar3D::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CTextLine@UI@@6B@				; UI::CTextLine::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCTextLine@UI@@@8			; UI::CTextLine `RTTI Type Descriptor'
PUBLIC	??_R3CTextLine@UI@@8				; UI::CTextLine::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CTextLine@UI@@8				; UI::CTextLine::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CTextLine@UI@@8			; UI::CTextLine::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CNumberLine@UI@@6B@			; UI::CNumberLine::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCNumberLine@UI@@@8			; UI::CNumberLine `RTTI Type Descriptor'
PUBLIC	??_R3CNumberLine@UI@@8				; UI::CNumberLine::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CNumberLine@UI@@8				; UI::CNumberLine::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CNumberLine@UI@@8			; UI::CNumberLine::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CImageBox@UI@@6B@				; UI::CImageBox::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCImageBox@UI@@@8			; UI::CImageBox `RTTI Type Descriptor'
PUBLIC	??_R3CImageBox@UI@@8				; UI::CImageBox::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CImageBox@UI@@8				; UI::CImageBox::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CImageBox@UI@@8			; UI::CImageBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CMarkBox@UI@@6B@				; UI::CMarkBox::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCMarkBox@UI@@@8				; UI::CMarkBox `RTTI Type Descriptor'
PUBLIC	??_R3CMarkBox@UI@@8				; UI::CMarkBox::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMarkBox@UI@@8				; UI::CMarkBox::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMarkBox@UI@@8			; UI::CMarkBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CExpandedImageBox@UI@@6B@			; UI::CExpandedImageBox::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCExpandedImageBox@UI@@@8		; UI::CExpandedImageBox `RTTI Type Descriptor'
PUBLIC	??_R3CExpandedImageBox@UI@@8			; UI::CExpandedImageBox::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CExpandedImageBox@UI@@8			; UI::CExpandedImageBox::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CExpandedImageBox@UI@@8		; UI::CExpandedImageBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CAniImageBox@UI@@6B@			; UI::CAniImageBox::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCAniImageBox@UI@@@8			; UI::CAniImageBox `RTTI Type Descriptor'
PUBLIC	??_R3CAniImageBox@UI@@8				; UI::CAniImageBox::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CAniImageBox@UI@@8				; UI::CAniImageBox::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CAniImageBox@UI@@8		; UI::CAniImageBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CButton@UI@@6B@				; UI::CButton::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCButton@UI@@@8				; UI::CButton `RTTI Type Descriptor'
PUBLIC	??_R3CButton@UI@@8				; UI::CButton::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CButton@UI@@8				; UI::CButton::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CButton@UI@@8			; UI::CButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CRadioButton@UI@@6B@			; UI::CRadioButton::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCRadioButton@UI@@@8			; UI::CRadioButton `RTTI Type Descriptor'
PUBLIC	??_R3CRadioButton@UI@@8				; UI::CRadioButton::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CRadioButton@UI@@8				; UI::CRadioButton::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CRadioButton@UI@@8		; UI::CRadioButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CToggleButton@UI@@6B@			; UI::CToggleButton::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCToggleButton@UI@@@8			; UI::CToggleButton `RTTI Type Descriptor'
PUBLIC	??_R3CToggleButton@UI@@8			; UI::CToggleButton::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CToggleButton@UI@@8			; UI::CToggleButton::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CToggleButton@UI@@8		; UI::CToggleButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CDragButton@UI@@6B@			; UI::CDragButton::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDragButton@UI@@@8			; UI::CDragButton `RTTI Type Descriptor'
PUBLIC	??_R3CDragButton@UI@@8				; UI::CDragButton::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDragButton@UI@@8				; UI::CDragButton::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDragButton@UI@@8			; UI::CDragButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_abort:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	_rand:PROC
EXTRN	__imp__timeGetTime@0:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?TraceError@@YAXPBDZZ:PROC			; TraceError
EXTRN	__imp__PyString_InternFromString:PROC
EXTRN	__imp__Py_BuildValue:PROC
EXTRN	?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z:PROC ; PyCallClassMemberFunc
EXTRN	?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z:PROC ; PyCallClassMemberFunc
EXTRN	?PyCallClassMemberFunc_ByPyString@@YA_NPAU_object@@00@Z:PROC ; PyCallClassMemberFunc_ByPyString
EXTRN	?GetCRC32@@YAKPBDI@Z:PROC			; GetCRC32
EXTRN	?GetDefaultCodePage@@YAKXZ:PROC			; GetDefaultCodePage
EXTRN	?IsType@CResource@@QAE_NK@Z:PROC		; CResource::IsType
EXTRN	?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z:PROC ; CResourceManager::GetResourcePointer
EXTRN	?GetTypeResourcePointer@CResourceManager@@QAEPAVCResource@@PBDH@Z:PROC ; CResourceManager::GetTypeResourcePointer
EXTRN	?IsFileExist@CResourceManager@@QAE_NPBD@Z:PROC	; CResourceManager::IsFileExist
EXTRN	?Type@CGraphicImage@@SAKXZ:PROC			; CGraphicImage::Type
EXTRN	??0CGraphicImageInstance@@QAE@XZ:PROC		; CGraphicImageInstance::CGraphicImageInstance
EXTRN	??1CGraphicImageInstance@@UAE@XZ:PROC		; CGraphicImageInstance::~CGraphicImageInstance
EXTRN	?Render@CGraphicImageInstance@@QAEXXZ:PROC	; CGraphicImageInstance::Render
EXTRN	?SetDiffuseColor@CGraphicImageInstance@@QAEXMMMM@Z:PROC ; CGraphicImageInstance::SetDiffuseColor
EXTRN	?SetPosition@CGraphicImageInstance@@QAEXMM@Z:PROC ; CGraphicImageInstance::SetPosition
EXTRN	?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z:PROC ; CGraphicImageInstance::SetImagePointer
EXTRN	?IsEmpty@CGraphicImageInstance@@QBE_NXZ:PROC	; CGraphicImageInstance::IsEmpty
EXTRN	?GetWidth@CGraphicImageInstance@@QAEHXZ:PROC	; CGraphicImageInstance::GetWidth
EXTRN	?GetHeight@CGraphicImageInstance@@QAEHXZ:PROC	; CGraphicImageInstance::GetHeight
EXTRN	?GetGraphicImagePointer@CGraphicImageInstance@@QAEPAVCGraphicImage@@XZ:PROC ; CGraphicImageInstance::GetGraphicImagePointer
EXTRN	?New@CGraphicImageInstance@@SAPAV1@XZ:PROC	; CGraphicImageInstance::New
EXTRN	?Delete@CGraphicImageInstance@@SAXPAV1@@Z:PROC	; CGraphicImageInstance::Delete
EXTRN	??0CGraphicTextInstance@@QAE@XZ:PROC		; CGraphicTextInstance::CGraphicTextInstance
EXTRN	??1CGraphicTextInstance@@UAE@XZ:PROC		; CGraphicTextInstance::~CGraphicTextInstance
EXTRN	?Destroy@CGraphicTextInstance@@QAEXXZ:PROC	; CGraphicTextInstance::Destroy
EXTRN	?Update@CGraphicTextInstance@@QAEXXZ:PROC	; CGraphicTextInstance::Update
EXTRN	?Render@CGraphicTextInstance@@QAEXPAUtagRECT@@@Z:PROC ; CGraphicTextInstance::Render
EXTRN	?ShowCursor@CGraphicTextInstance@@QAEXXZ:PROC	; CGraphicTextInstance::ShowCursor
EXTRN	?HideCursor@CGraphicTextInstance@@QAEXXZ:PROC	; CGraphicTextInstance::HideCursor
EXTRN	?SetColor@CGraphicTextInstance@@QAEXK@Z:PROC	; CGraphicTextInstance::SetColor
EXTRN	?SetColor@CGraphicTextInstance@@QAEXMMMM@Z:PROC	; CGraphicTextInstance::SetColor
EXTRN	?SetHorizonalAlign@CGraphicTextInstance@@QAEXH@Z:PROC ; CGraphicTextInstance::SetHorizonalAlign
EXTRN	?SetVerticalAlign@CGraphicTextInstance@@QAEXH@Z:PROC ; CGraphicTextInstance::SetVerticalAlign
EXTRN	?SetMax@CGraphicTextInstance@@QAEXH@Z:PROC	; CGraphicTextInstance::SetMax
EXTRN	?SetTextPointer@CGraphicTextInstance@@QAEXPAVCGraphicText@@@Z:PROC ; CGraphicTextInstance::SetTextPointer
EXTRN	?SetValue@CGraphicTextInstance@@QAEXPBDI@Z:PROC	; CGraphicTextInstance::SetValue
EXTRN	?SetPosition@CGraphicTextInstance@@QAEXMMM@Z:PROC ; CGraphicTextInstance::SetPosition
EXTRN	?SetSecret@CGraphicTextInstance@@QAEX_N@Z:PROC	; CGraphicTextInstance::SetSecret
EXTRN	?SetOutline@CGraphicTextInstance@@QAEX_N@Z:PROC	; CGraphicTextInstance::SetOutline
EXTRN	?SetFeather@CGraphicTextInstance@@QAEX_N@Z:PROC	; CGraphicTextInstance::SetFeather
EXTRN	?SetMultiLine@CGraphicTextInstance@@QAEX_N@Z:PROC ; CGraphicTextInstance::SetMultiLine
EXTRN	?SetLimitWidth@CGraphicTextInstance@@QAEXM@Z:PROC ; CGraphicTextInstance::SetLimitWidth
EXTRN	?GetTextSize@CGraphicTextInstance@@QAEXPAH0@Z:PROC ; CGraphicTextInstance::GetTextSize
EXTRN	?GetValueStringReference@CGraphicTextInstance@@QAEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ:PROC ; CGraphicTextInstance::GetValueStringReference
EXTRN	?PixelPositionToCharacterPosition@CGraphicTextInstance@@QAEHH@Z:PROC ; CGraphicTextInstance::PixelPositionToCharacterPosition
EXTRN	?SetImageFileName@CGraphicMarkInstance@@QAEXPBD@Z:PROC ; CGraphicMarkInstance::SetImageFileName
EXTRN	?Render@CGraphicMarkInstance@@QAEXXZ:PROC	; CGraphicMarkInstance::Render
EXTRN	?SetDiffuseColor@CGraphicMarkInstance@@QAEXMMMM@Z:PROC ; CGraphicMarkInstance::SetDiffuseColor
EXTRN	?SetPosition@CGraphicMarkInstance@@QAEXMM@Z:PROC ; CGraphicMarkInstance::SetPosition
EXTRN	?SetIndex@CGraphicMarkInstance@@QAEXI@Z:PROC	; CGraphicMarkInstance::SetIndex
EXTRN	?SetScale@CGraphicMarkInstance@@QAEXM@Z:PROC	; CGraphicMarkInstance::SetScale
EXTRN	?Load@CGraphicMarkInstance@@QAEXXZ:PROC		; CGraphicMarkInstance::Load
EXTRN	?GetWidth@CGraphicMarkInstance@@QAEHXZ:PROC	; CGraphicMarkInstance::GetWidth
EXTRN	?GetHeight@CGraphicMarkInstance@@QAEHXZ:PROC	; CGraphicMarkInstance::GetHeight
EXTRN	?New@CGraphicMarkInstance@@SAPAV1@XZ:PROC	; CGraphicMarkInstance::New
EXTRN	?Delete@CGraphicMarkInstance@@SAXPAV1@@Z:PROC	; CGraphicMarkInstance::Delete
EXTRN	?Destroy@CGraphicExpandedImageInstance@@QAEXXZ:PROC ; CGraphicExpandedImageInstance::Destroy
EXTRN	?SetOrigin@CGraphicExpandedImageInstance@@QAEXMM@Z:PROC ; CGraphicExpandedImageInstance::SetOrigin
EXTRN	?SetRotation@CGraphicExpandedImageInstance@@QAEXM@Z:PROC ; CGraphicExpandedImageInstance::SetRotation
EXTRN	?SetScale@CGraphicExpandedImageInstance@@QAEXMM@Z:PROC ; CGraphicExpandedImageInstance::SetScale
EXTRN	?SetRenderingRect@CGraphicExpandedImageInstance@@QAEXMMMM@Z:PROC ; CGraphicExpandedImageInstance::SetRenderingRect
EXTRN	?SetRenderingMode@CGraphicExpandedImageInstance@@QAEXH@Z:PROC ; CGraphicExpandedImageInstance::SetRenderingMode
EXTRN	?New@CGraphicExpandedImageInstance@@SAPAV1@XZ:PROC ; CGraphicExpandedImageInstance::New
EXTRN	?Delete@CGraphicExpandedImageInstance@@SAXPAV1@@Z:PROC ; CGraphicExpandedImageInstance::Delete
EXTRN	?RenderLine2d@CScreen@@QAEXMMMMM@Z:PROC		; CScreen::RenderLine2d
EXTRN	?RenderBox2d@CScreen@@QAEXMMMMM@Z:PROC		; CScreen::RenderBox2d
EXTRN	?RenderBar2d@CScreen@@QAEXMMMMM@Z:PROC		; CScreen::RenderBar2d
EXTRN	?SetDiffuseColor@CScreen@@QAEXK@Z:PROC		; CScreen::SetDiffuseColor
EXTRN	?SetDiffuseColor@CScreen@@QAEXMMMM@Z:PROC	; CScreen::SetDiffuseColor
EXTRN	?GetMousePosition@CWindowManager@UI@@QAEXAAJ0@Z:PROC ; UI::CWindowManager::GetMousePosition
EXTRN	?BuildEmptyTuple@UI@@YAPAU_object@@XZ:PROC	; UI::BuildEmptyTuple
EXTRN	??_ECWindow@UI@@UAEPAXI@Z:PROC			; UI::CWindow::`vector deleting destructor'
EXTRN	??_ECBox@UI@@UAEPAXI@Z:PROC			; UI::CBox::`vector deleting destructor'
EXTRN	??_ECBar@UI@@UAEPAXI@Z:PROC			; UI::CBar::`vector deleting destructor'
EXTRN	??_ECLine@UI@@UAEPAXI@Z:PROC			; UI::CLine::`vector deleting destructor'
EXTRN	??_ECBar3D@UI@@UAEPAXI@Z:PROC			; UI::CBar3D::`vector deleting destructor'
EXTRN	??_ECTextLine@UI@@UAEPAXI@Z:PROC		; UI::CTextLine::`vector deleting destructor'
EXTRN	??_ECNumberLine@UI@@UAEPAXI@Z:PROC		; UI::CNumberLine::`vector deleting destructor'
EXTRN	??_ECImageBox@UI@@UAEPAXI@Z:PROC		; UI::CImageBox::`vector deleting destructor'
EXTRN	??_ECMarkBox@UI@@UAEPAXI@Z:PROC			; UI::CMarkBox::`vector deleting destructor'
EXTRN	??_ECExpandedImageBox@UI@@UAEPAXI@Z:PROC	; UI::CExpandedImageBox::`vector deleting destructor'
EXTRN	??_ECAniImageBox@UI@@UAEPAXI@Z:PROC		; UI::CAniImageBox::`vector deleting destructor'
EXTRN	??_ECButton@UI@@UAEPAXI@Z:PROC			; UI::CButton::`vector deleting destructor'
EXTRN	??_ECRadioButton@UI@@UAEPAXI@Z:PROC		; UI::CRadioButton::`vector deleting destructor'
EXTRN	??_ECToggleButton@UI@@UAEPAXI@Z:PROC		; UI::CToggleButton::`vector deleting destructor'
EXTRN	??_ECDragButton@UI@@UAEPAXI@Z:PROC		; UI::CDragButton::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__ftol3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A:BYTE ; CGraphicExpandedImageInstance::ms_kPool
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A DD 01H DUP (?) ; CSingleton<CResourceManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A DD 01H DUP (?) ; CSingleton<CPythonGraphic>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A DD 01H DUP (?) ; CSingleton<UI::CWindowManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?s_dwType@?1??Type@CWindow@UI@@SAKXZ@4KA
_BSS	SEGMENT
?s_dwType@?1??Type@CWindow@UI@@SAKXZ@4KA DD 01H DUP (?)	; `UI::CWindow::Type'::`2'::s_dwType
_BSS	ENDS
;	COMDAT ?$TSS0@?1??Type@CWindow@UI@@SAKXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??Type@CWindow@UI@@SAKXZ@4HA DD 01H DUP (?)	; `UI::CWindow::Type'::`2'::$TSS0
_BSS	ENDS
;	COMDAT ?poFuncName_OnUpdate@?1??OnUpdate@CWindow@UI@@UAEXXZ@4PAU_object@@A
_BSS	SEGMENT
?poFuncName_OnUpdate@?1??OnUpdate@CWindow@UI@@UAEXXZ@4PAU_object@@A DD 01H DUP (?) ; `UI::CWindow::OnUpdate'::`2'::poFuncName_OnUpdate
_BSS	ENDS
;	COMDAT ?$TSS0@?1??OnUpdate@CWindow@UI@@UAEXXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??OnUpdate@CWindow@UI@@UAEXXZ@4HA DD 01H DUP (?) ; `UI::CWindow::OnUpdate'::`2'::$TSS0
_BSS	ENDS
;	COMDAT ?s_dwType@?1??Type@CBar3D@UI@@SAKXZ@4KA
_BSS	SEGMENT
?s_dwType@?1??Type@CBar3D@UI@@SAKXZ@4KA DD 01H DUP (?)	; `UI::CBar3D::Type'::`2'::s_dwType
_BSS	ENDS
;	COMDAT ?$TSS0@?1??Type@CBar3D@UI@@SAKXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??Type@CBar3D@UI@@SAKXZ@4HA DD 01H DUP (?)	; `UI::CBar3D::Type'::`2'::$TSS0
_BSS	ENDS
;	COMDAT ?s_dwType@?1??Type@CExpandedImageBox@UI@@SAKXZ@4KA
_BSS	SEGMENT
?s_dwType@?1??Type@CExpandedImageBox@UI@@SAKXZ@4KA DD 01H DUP (?) ; `UI::CExpandedImageBox::Type'::`2'::s_dwType
_BSS	ENDS
;	COMDAT ?$TSS0@?1??Type@CExpandedImageBox@UI@@SAKXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??Type@CExpandedImageBox@UI@@SAKXZ@4HA DD 01H DUP (?) ; `UI::CExpandedImageBox::Type'::`2'::$TSS0
_BSS	ENDS
;	COMDAT ?s_dwType@?1??Type@CAniImageBox@UI@@SAKXZ@4KA
_BSS	SEGMENT
?s_dwType@?1??Type@CAniImageBox@UI@@SAKXZ@4KA DD 01H DUP (?) ; `UI::CAniImageBox::Type'::`2'::s_dwType
_BSS	ENDS
;	COMDAT ?$TSS0@?1??Type@CAniImageBox@UI@@SAKXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??Type@CAniImageBox@UI@@SAKXZ@4HA DD 01H DUP (?) ; `UI::CAniImageBox::Type'::`2'::$TSS0
_BSS	ENDS
;	COMDAT ??_R1A@?0A@EA@CDragButton@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDragButton@UI@@8 DD FLAT:??_R0?AVCDragButton@UI@@@8 ; UI::CDragButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDragButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CDragButton@UI@@8
rdata$r	SEGMENT
??_R2CDragButton@UI@@8 DD FLAT:??_R1A@?0A@EA@CDragButton@UI@@8 ; UI::CDragButton::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CButton@UI@@8
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CDragButton@UI@@8
rdata$r	SEGMENT
??_R3CDragButton@UI@@8 DD 00H				; UI::CDragButton::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CDragButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDragButton@UI@@@8
data$rs	SEGMENT
??_R0?AVCDragButton@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CDragButton `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDragButton@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CDragButton@UI@@6B@
rdata$r	SEGMENT
??_R4CDragButton@UI@@6B@ DD 00H				; UI::CDragButton::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDragButton@UI@@@8
	DD	FLAT:??_R3CDragButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CToggleButton@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CToggleButton@UI@@8 DD FLAT:??_R0?AVCToggleButton@UI@@@8 ; UI::CToggleButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CToggleButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CToggleButton@UI@@8
rdata$r	SEGMENT
??_R2CToggleButton@UI@@8 DD FLAT:??_R1A@?0A@EA@CToggleButton@UI@@8 ; UI::CToggleButton::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CButton@UI@@8
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CToggleButton@UI@@8
rdata$r	SEGMENT
??_R3CToggleButton@UI@@8 DD 00H				; UI::CToggleButton::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CToggleButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCToggleButton@UI@@@8
data$rs	SEGMENT
??_R0?AVCToggleButton@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CToggleButton `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCToggleButton@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CToggleButton@UI@@6B@
rdata$r	SEGMENT
??_R4CToggleButton@UI@@6B@ DD 00H			; UI::CToggleButton::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCToggleButton@UI@@@8
	DD	FLAT:??_R3CToggleButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CRadioButton@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CRadioButton@UI@@8 DD FLAT:??_R0?AVCRadioButton@UI@@@8 ; UI::CRadioButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CRadioButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CRadioButton@UI@@8
rdata$r	SEGMENT
??_R2CRadioButton@UI@@8 DD FLAT:??_R1A@?0A@EA@CRadioButton@UI@@8 ; UI::CRadioButton::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CButton@UI@@8
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CRadioButton@UI@@8
rdata$r	SEGMENT
??_R3CRadioButton@UI@@8 DD 00H				; UI::CRadioButton::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CRadioButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCRadioButton@UI@@@8
data$rs	SEGMENT
??_R0?AVCRadioButton@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CRadioButton `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCRadioButton@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CRadioButton@UI@@6B@
rdata$r	SEGMENT
??_R4CRadioButton@UI@@6B@ DD 00H			; UI::CRadioButton::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCRadioButton@UI@@@8
	DD	FLAT:??_R3CRadioButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CButton@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CButton@UI@@8 DD FLAT:??_R0?AVCButton@UI@@@8 ; UI::CButton::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CButton@UI@@8
rdata$r	SEGMENT
??_R2CButton@UI@@8 DD FLAT:??_R1A@?0A@EA@CButton@UI@@8	; UI::CButton::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CButton@UI@@8
rdata$r	SEGMENT
??_R3CButton@UI@@8 DD 00H				; UI::CButton::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCButton@UI@@@8
data$rs	SEGMENT
??_R0?AVCButton@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CButton `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCButton@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CButton@UI@@6B@
rdata$r	SEGMENT
??_R4CButton@UI@@6B@ DD 00H				; UI::CButton::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCButton@UI@@@8
	DD	FLAT:??_R3CButton@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CAniImageBox@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CAniImageBox@UI@@8 DD FLAT:??_R0?AVCAniImageBox@UI@@@8 ; UI::CAniImageBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CAniImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CAniImageBox@UI@@8
rdata$r	SEGMENT
??_R2CAniImageBox@UI@@8 DD FLAT:??_R1A@?0A@EA@CAniImageBox@UI@@8 ; UI::CAniImageBox::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CAniImageBox@UI@@8
rdata$r	SEGMENT
??_R3CAniImageBox@UI@@8 DD 00H				; UI::CAniImageBox::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CAniImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCAniImageBox@UI@@@8
data$rs	SEGMENT
??_R0?AVCAniImageBox@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CAniImageBox `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCAniImageBox@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CAniImageBox@UI@@6B@
rdata$r	SEGMENT
??_R4CAniImageBox@UI@@6B@ DD 00H			; UI::CAniImageBox::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCAniImageBox@UI@@@8
	DD	FLAT:??_R3CAniImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CExpandedImageBox@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CExpandedImageBox@UI@@8 DD FLAT:??_R0?AVCExpandedImageBox@UI@@@8 ; UI::CExpandedImageBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CExpandedImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CExpandedImageBox@UI@@8
rdata$r	SEGMENT
??_R2CExpandedImageBox@UI@@8 DD FLAT:??_R1A@?0A@EA@CExpandedImageBox@UI@@8 ; UI::CExpandedImageBox::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CImageBox@UI@@8
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CExpandedImageBox@UI@@8
rdata$r	SEGMENT
??_R3CExpandedImageBox@UI@@8 DD 00H			; UI::CExpandedImageBox::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CExpandedImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCExpandedImageBox@UI@@@8
data$rs	SEGMENT
??_R0?AVCExpandedImageBox@UI@@@8 DD FLAT:??_7type_info@@6B@ ; UI::CExpandedImageBox `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCExpandedImageBox@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CExpandedImageBox@UI@@6B@
rdata$r	SEGMENT
??_R4CExpandedImageBox@UI@@6B@ DD 00H			; UI::CExpandedImageBox::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCExpandedImageBox@UI@@@8
	DD	FLAT:??_R3CExpandedImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CMarkBox@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMarkBox@UI@@8 DD FLAT:??_R0?AVCMarkBox@UI@@@8 ; UI::CMarkBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMarkBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CMarkBox@UI@@8
rdata$r	SEGMENT
??_R2CMarkBox@UI@@8 DD FLAT:??_R1A@?0A@EA@CMarkBox@UI@@8 ; UI::CMarkBox::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CMarkBox@UI@@8
rdata$r	SEGMENT
??_R3CMarkBox@UI@@8 DD 00H				; UI::CMarkBox::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CMarkBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMarkBox@UI@@@8
data$rs	SEGMENT
??_R0?AVCMarkBox@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CMarkBox `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMarkBox@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CMarkBox@UI@@6B@
rdata$r	SEGMENT
??_R4CMarkBox@UI@@6B@ DD 00H				; UI::CMarkBox::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCMarkBox@UI@@@8
	DD	FLAT:??_R3CMarkBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CImageBox@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CImageBox@UI@@8 DD FLAT:??_R0?AVCImageBox@UI@@@8 ; UI::CImageBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CImageBox@UI@@8
rdata$r	SEGMENT
??_R2CImageBox@UI@@8 DD FLAT:??_R1A@?0A@EA@CImageBox@UI@@8 ; UI::CImageBox::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CImageBox@UI@@8
rdata$r	SEGMENT
??_R3CImageBox@UI@@8 DD 00H				; UI::CImageBox::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCImageBox@UI@@@8
data$rs	SEGMENT
??_R0?AVCImageBox@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CImageBox `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCImageBox@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CImageBox@UI@@6B@
rdata$r	SEGMENT
??_R4CImageBox@UI@@6B@ DD 00H				; UI::CImageBox::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCImageBox@UI@@@8
	DD	FLAT:??_R3CImageBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CNumberLine@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CNumberLine@UI@@8 DD FLAT:??_R0?AVCNumberLine@UI@@@8 ; UI::CNumberLine::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CNumberLine@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CNumberLine@UI@@8
rdata$r	SEGMENT
??_R2CNumberLine@UI@@8 DD FLAT:??_R1A@?0A@EA@CNumberLine@UI@@8 ; UI::CNumberLine::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CNumberLine@UI@@8
rdata$r	SEGMENT
??_R3CNumberLine@UI@@8 DD 00H				; UI::CNumberLine::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CNumberLine@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCNumberLine@UI@@@8
data$rs	SEGMENT
??_R0?AVCNumberLine@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CNumberLine `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCNumberLine@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CNumberLine@UI@@6B@
rdata$r	SEGMENT
??_R4CNumberLine@UI@@6B@ DD 00H				; UI::CNumberLine::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCNumberLine@UI@@@8
	DD	FLAT:??_R3CNumberLine@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CTextLine@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CTextLine@UI@@8 DD FLAT:??_R0?AVCTextLine@UI@@@8 ; UI::CTextLine::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CTextLine@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CTextLine@UI@@8
rdata$r	SEGMENT
??_R2CTextLine@UI@@8 DD FLAT:??_R1A@?0A@EA@CTextLine@UI@@8 ; UI::CTextLine::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CTextLine@UI@@8
rdata$r	SEGMENT
??_R3CTextLine@UI@@8 DD 00H				; UI::CTextLine::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CTextLine@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCTextLine@UI@@@8
data$rs	SEGMENT
??_R0?AVCTextLine@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CTextLine `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCTextLine@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CTextLine@UI@@6B@
rdata$r	SEGMENT
??_R4CTextLine@UI@@6B@ DD 00H				; UI::CTextLine::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCTextLine@UI@@@8
	DD	FLAT:??_R3CTextLine@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBar3D@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBar3D@UI@@8 DD FLAT:??_R0?AVCBar3D@UI@@@8 ; UI::CBar3D::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBar3D@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CBar3D@UI@@8
rdata$r	SEGMENT
??_R2CBar3D@UI@@8 DD FLAT:??_R1A@?0A@EA@CBar3D@UI@@8	; UI::CBar3D::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CBar3D@UI@@8
rdata$r	SEGMENT
??_R3CBar3D@UI@@8 DD 00H				; UI::CBar3D::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CBar3D@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBar3D@UI@@@8
data$rs	SEGMENT
??_R0?AVCBar3D@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CBar3D `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBar3D@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CBar3D@UI@@6B@
rdata$r	SEGMENT
??_R4CBar3D@UI@@6B@ DD 00H				; UI::CBar3D::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBar3D@UI@@@8
	DD	FLAT:??_R3CBar3D@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CLine@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CLine@UI@@8 DD FLAT:??_R0?AVCLine@UI@@@8	; UI::CLine::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CLine@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CLine@UI@@8
rdata$r	SEGMENT
??_R2CLine@UI@@8 DD FLAT:??_R1A@?0A@EA@CLine@UI@@8	; UI::CLine::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CLine@UI@@8
rdata$r	SEGMENT
??_R3CLine@UI@@8 DD 00H					; UI::CLine::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CLine@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCLine@UI@@@8
data$rs	SEGMENT
??_R0?AVCLine@UI@@@8 DD FLAT:??_7type_info@@6B@		; UI::CLine `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCLine@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CLine@UI@@6B@
rdata$r	SEGMENT
??_R4CLine@UI@@6B@ DD 00H				; UI::CLine::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCLine@UI@@@8
	DD	FLAT:??_R3CLine@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBar@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBar@UI@@8 DD FLAT:??_R0?AVCBar@UI@@@8	; UI::CBar::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBar@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CBar@UI@@8
rdata$r	SEGMENT
??_R2CBar@UI@@8 DD FLAT:??_R1A@?0A@EA@CBar@UI@@8	; UI::CBar::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CBar@UI@@8
rdata$r	SEGMENT
??_R3CBar@UI@@8 DD 00H					; UI::CBar::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CBar@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBar@UI@@@8
data$rs	SEGMENT
??_R0?AVCBar@UI@@@8 DD FLAT:??_7type_info@@6B@		; UI::CBar `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBar@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CBar@UI@@6B@
rdata$r	SEGMENT
??_R4CBar@UI@@6B@ DD 00H				; UI::CBar::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBar@UI@@@8
	DD	FLAT:??_R3CBar@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBox@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBox@UI@@8 DD FLAT:??_R0?AVCBox@UI@@@8	; UI::CBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CBox@UI@@8
rdata$r	SEGMENT
??_R2CBox@UI@@8 DD FLAT:??_R1A@?0A@EA@CBox@UI@@8	; UI::CBox::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R3CBox@UI@@8
rdata$r	SEGMENT
??_R3CBox@UI@@8 DD 00H					; UI::CBox::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBox@UI@@@8
data$rs	SEGMENT
??_R0?AVCBox@UI@@@8 DD FLAT:??_7type_info@@6B@		; UI::CBox `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBox@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CBox@UI@@6B@
rdata$r	SEGMENT
??_R4CBox@UI@@6B@ DD 00H				; UI::CBox::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBox@UI@@@8
	DD	FLAT:??_R3CBox@UI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CWindow@UI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CWindow@UI@@8 DD FLAT:??_R0?AVCWindow@UI@@@8 ; UI::CWindow::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R2CWindow@UI@@8
rdata$r	SEGMENT
??_R2CWindow@UI@@8 DD FLAT:??_R1A@?0A@EA@CWindow@UI@@8	; UI::CWindow::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CWindow@UI@@8
rdata$r	SEGMENT
??_R3CWindow@UI@@8 DD 00H				; UI::CWindow::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWindow@UI@@@8
data$rs	SEGMENT
??_R0?AVCWindow@UI@@@8 DD FLAT:??_7type_info@@6B@	; UI::CWindow `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWindow@UI@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CWindow@UI@@6B@
rdata$r	SEGMENT
??_R4CWindow@UI@@6B@ DD 00H				; UI::CWindow::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCWindow@UI@@@8
	DD	FLAT:??_R3CWindow@UI@@8
rdata$r	ENDS
;	COMDAT ??_C@_0O@NKNMEGII@list?5too?5long@
CONST	SEGMENT
??_C@_0O@NKNMEGII@list?5too?5long@ DB 'list too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06GJPOLLJG@OnMove@
CONST	SEGMENT
??_C@_06GJPOLLJG@OnMove@ DB 'OnMove', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NBGLGPDJ@OnToggleDown@
CONST	SEGMENT
??_C@_0N@NBGLGPDJ@OnToggleDown@ DB 'OnToggleDown', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HGABHAMN@OnToggleUp@
CONST	SEGMENT
??_C@_0L@HGABHAMN@OnToggleUp@ DB 'OnToggleUp', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HCIAMHJN@HideToolTip@
CONST	SEGMENT
??_C@_0M@HCIAMHJN@HideToolTip@ DB 'HideToolTip', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LEFCMAKP@ShowToolTip@
CONST	SEGMENT
??_C@_0M@LEFCMAKP@ShowToolTip@ DB 'ShowToolTip', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09FJAHACEO@DownEvent@
CONST	SEGMENT
??_C@_09FJAHACEO@DownEvent@ DB 'DownEvent', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09MFFHPOPB@CallEvent@
CONST	SEGMENT
??_C@_09MFFHPOPB@CallEvent@ DB 'CallEvent', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LBHHAGOH@OnEndFrame@
CONST	SEGMENT
??_C@_0L@LBHHAGOH@OnEndFrame@ DB 'OnEndFrame', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LBBHECOO@CAniImageBox@
CONST	SEGMENT
??_C@_0N@LBBHECOO@CAniImageBox@ DB 'CAniImageBox', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DJHPPMGJ@CExpandedImageBox@
CONST	SEGMENT
??_C@_0BC@DJHPPMGJ@CExpandedImageBox@ DB 'CExpandedImageBox', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04DLFHDFGL@?4sub@
CONST	SEGMENT
??_C@_04DLFHDFGL@?4sub@ DB '.sub', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05EHJFGOBE@p?4sub@
CONST	SEGMENT
??_C@_05EHJFGOBE@p?4sub@ DB 'p.sub', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05FJEGFMDH@g?4sub@
CONST	SEGMENT
??_C@_05FJEGFMDH@g?4sub@ DB 'g.sub', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05PINNHPFB@m?4sub@
CONST	SEGMENT
??_C@_05PINNHPFB@m?4sub@ DB 'm.sub', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08FPHNCABK@plus?4sub@
CONST	SEGMENT
??_C@_08FPHNCABK@plus?4sub@ DB 'plus.sub', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MHAKIBOD@percent?4sub@
CONST	SEGMENT
??_C@_0M@MHAKIBOD@percent?4sub@ DB 'percent.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09JMLAABIP@slash?4sub@
CONST	SEGMENT
??_C@_09JMLAABIP@slash?4sub@ DB 'slash.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@POBNNLPJ@questionmark?4sub@
CONST	SEGMENT
??_C@_0BB@POBNNLPJ@questionmark?4sub@ DB 'questionmark.sub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09GPLBLMNE@colon?4sub@
CONST	SEGMENT
??_C@_09GPLBLMNE@colon?4sub@ DB 'colon.sub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@GPCBPBEE@d?3?1ymir?5work?1ui?1game?1taskbar?1@
CONST	SEGMENT
??_C@_0BO@GPCBPBEE@d?3?1ymir?5work?1ui?1game?1taskbar?1@ DB 'd:/ymir work'
	DB	'/ui/game/taskbar/', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04FAHLGLIA@?4fnt@
CONST	SEGMENT
??_C@_04FAHLGLIA@?4fnt@ DB '.fnt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06ICLMADCA@CBar3D@
CONST	SEGMENT
??_C@_06ICLMADCA@CBar3D@ DB 'CBar3D', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KEJGBDKK@OnPressExitKey@
CONST	SEGMENT
??_C@_0P@KEJGBDKK@OnPressExitKey@ DB 'OnPressExitKey', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HCFLIMGH@OnPressEscapeKey@
CONST	SEGMENT
??_C@_0BB@HCFLIMGH@OnPressEscapeKey@ DB 'OnPressEscapeKey', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07NGNLLPEG@OnKeyUp@
CONST	SEGMENT
??_C@_07NGNLLPEG@OnKeyUp@ DB 'OnKeyUp', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09CMHFBEC@OnKeyDown@
CONST	SEGMENT
??_C@_09CMHFBEC@OnKeyDown@ DB 'OnKeyDown', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DEOILJPB@OnIMECloseReadingWnd@
CONST	SEGMENT
??_C@_0BF@DEOILJPB@OnIMECloseReadingWnd@ DB 'OnIMECloseReadingWnd', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KDCLEDDC@OnIMEOpenReadingWnd@
CONST	SEGMENT
??_C@_0BE@KDCLEDDC@OnIMEOpenReadingWnd@ DB 'OnIMEOpenReadingWnd', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LOIKIPJ@OnIMECloseCandidateList@
CONST	SEGMENT
??_C@_0BI@LOIKIPJ@OnIMECloseCandidateList@ DB 'OnIMECloseCandidateList', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HEDPBKEK@OnIMEOpenCandidateList@
CONST	SEGMENT
??_C@_0BH@HEDPBKEK@OnIMEOpenCandidateList@ DB 'OnIMEOpenCandidateList', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EHKLBB@OnIMEChangeCodePage@
CONST	SEGMENT
??_C@_0BE@EHKLBB@OnIMEChangeCodePage@ DB 'OnIMEChangeCodePage', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BMPDGPBH@OnIMEKeyDown@
CONST	SEGMENT
??_C@_0N@BMPDGPBH@OnIMEKeyDown@ DB 'OnIMEKeyDown', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03LIHNMIHG@?$CIi?$CJ@
CONST	SEGMENT
??_C@_03LIHNMIHG@?$CIi?$CJ@ DB '(i)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PILLCCFN@OnIMEReturn@
CONST	SEGMENT
??_C@_0M@PILLCCFN@OnIMEReturn@ DB 'OnIMEReturn', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08HFELFLOI@OnIMETab@
CONST	SEGMENT
??_C@_08HFELFLOI@OnIMETab@ DB 'OnIMETab', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GNNJJHBO@OnMouseWheelScroll@
CONST	SEGMENT
??_C@_0BD@GNNJJHBO@OnMouseWheelScroll@ DB 'OnMouseWheelScroll', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03KJMMOONA@?$CIs?$CJ@
CONST	SEGMENT
??_C@_03KJMMOONA@?$CIs?$CJ@ DB '(s)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04FANAOELO@DOWN@
CONST	SEGMENT
??_C@_04FANAOELO@DOWN@ DB 'DOWN', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02NAHCJHOC@UP@
CONST	SEGMENT
??_C@_02NAHCJHOC@UP@ DB 'UP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IGAJCEHG@OnMouseMiddleButtonUp@
CONST	SEGMENT
??_C@_0BG@IGAJCEHG@OnMouseMiddleButtonUp@ DB 'OnMouseMiddleButtonUp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LKFMHNKP@OnMouseMiddleButtonDown@
CONST	SEGMENT
??_C@_0BI@LKFMHNKP@OnMouseMiddleButtonDown@ DB 'OnMouseMiddleButtonDown', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@NPKMHGOP@OnMouseRightButtonDoubleClick@
CONST	SEGMENT
??_C@_0BO@NPKMHGOP@OnMouseRightButtonDoubleClick@ DB 'OnMouseRightButtonD'
	DB	'oubleClick', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FDIGHPIH@OnMouseRightButtonUp@
CONST	SEGMENT
??_C@_0BF@FDIGHPIH@OnMouseRightButtonUp@ DB 'OnMouseRightButtonUp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@ELECPAKA@OnMouseRightButtonDown@
CONST	SEGMENT
??_C@_0BH@ELECPAKA@OnMouseRightButtonDown@ DB 'OnMouseRightButtonDown', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@KEKGIMMP@OnMouseLeftButtonDoubleClick@
CONST	SEGMENT
??_C@_0BN@KEKGIMMP@OnMouseLeftButtonDoubleClick@ DB 'OnMouseLeftButtonDou'
	DB	'bleClick', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MJALGMGL@OnMouseLeftButtonUp@
CONST	SEGMENT
??_C@_0BE@MJALGMGL@OnMouseLeftButtonUp@ DB 'OnMouseLeftButtonUp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@DNDHJHBD@OnMouseLeftButtonDown@
CONST	SEGMENT
??_C@_0BG@DNDHJHBD@OnMouseLeftButtonDown@ DB 'OnMouseLeftButtonDown', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DGOFHNMI@OnIMEUpdate@
CONST	SEGMENT
??_C@_0M@DGOFHNMI@OnIMEUpdate@ DB 'OnIMEUpdate', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05LOOKECNH@OnTop@
CONST	SEGMENT
??_C@_05LOOKECNH@OnTop@ DB 'OnTop', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06OCNPCIEO@OnDrop@
CONST	SEGMENT
??_C@_06OCNPCIEO@OnDrop@ DB 'OnDrop', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KLLBNOAI@OnMouseOverOut@
CONST	SEGMENT
??_C@_0P@KLLBNOAI@OnMouseOverOut@ DB 'OnMouseOverOut', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JKDAFDCC@OnMouseOverIn@
CONST	SEGMENT
??_C@_0O@JKDAFDCC@OnMouseOverIn@ DB 'OnMouseOverIn', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CEGPCFGM@OnKillFocus@
CONST	SEGMENT
??_C@_0M@CEGPCFGM@OnKillFocus@ DB 'OnKillFocus', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GIMNGBCD@OnSetFocus@
CONST	SEGMENT
??_C@_0L@GIMNGBCD@OnSetFocus@ DB 'OnSetFocus', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PFKNBOJP@OnMoveWindow@
CONST	SEGMENT
??_C@_0N@PFKNBOJP@OnMoveWindow@ DB 'OnMoveWindow', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@ECAEGPAI@OnMouseDrag@
CONST	SEGMENT
??_C@_0M@ECAEGPAI@OnMouseDrag@ DB 'OnMouseDrag', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04INACLLOK@?$CIii?$CJ@
CONST	SEGMENT
??_C@_04INACLLOK@?$CIii?$CJ@ DB '(ii)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@NEIGMJK@?5CWindow?3?3SetTop?5?9?5Failed?5to?5fi@
CONST	SEGMENT
??_C@_0DA@NEIGMJK@?5CWindow?3?3SetTop?5?9?5Failed?5to?5fi@ DB ' CWindow::'
	DB	'SetTop - Failed to find child window', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08PAJMEILO@OnRender@
CONST	SEGMENT
??_C@_08PAJMEILO@OnRender@ DB 'OnRender', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08DCJEAFK@OnUpdate@
CONST	SEGMENT
??_C@_08DCJEAFK@OnUpdate@ DB 'OnUpdate', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07EFPFKGGH@CWindow@
CONST	SEGMENT
??_C@_07EFPFKGGH@CWindow@ DB 'CWindow', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CDragButton@UI@@6B@
CONST	SEGMENT
??_7CDragButton@UI@@6B@ DD FLAT:??_R4CDragButton@UI@@6B@ ; UI::CDragButton::`vftable'
	DD	FLAT:??_ECDragButton@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CButton@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CButton@UI@@MAEXXZ
	DD	FLAT:?OnChangePosition@CDragButton@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CDragButton@UI@@MAEXXZ
	DD	FLAT:?OnMouseOverOut@CDragButton@UI@@MAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
CONST	ENDS
;	COMDAT ??_7CToggleButton@UI@@6B@
CONST	SEGMENT
??_7CToggleButton@UI@@6B@ DD FLAT:??_R4CToggleButton@UI@@6B@ ; UI::CToggleButton::`vftable'
	DD	FLAT:??_ECToggleButton@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CButton@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CButton@UI@@MAEXXZ
	DD	FLAT:?OnChangePosition@CButton@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CToggleButton@UI@@MAEXXZ
	DD	FLAT:?OnMouseOverOut@CToggleButton@UI@@MAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CToggleButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CToggleButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
CONST	ENDS
;	COMDAT ??_7CRadioButton@UI@@6B@
CONST	SEGMENT
??_7CRadioButton@UI@@6B@ DD FLAT:??_R4CRadioButton@UI@@6B@ ; UI::CRadioButton::`vftable'
	DD	FLAT:??_ECRadioButton@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CButton@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CButton@UI@@MAEXXZ
	DD	FLAT:?OnChangePosition@CButton@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CRadioButton@UI@@MAEXXZ
	DD	FLAT:?OnMouseOverOut@CRadioButton@UI@@MAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CRadioButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CRadioButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
CONST	ENDS
;	COMDAT ??_7CButton@UI@@6B@
CONST	SEGMENT
??_7CButton@UI@@6B@ DD FLAT:??_R4CButton@UI@@6B@	; UI::CButton::`vftable'
	DD	FLAT:??_ECButton@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CButton@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CButton@UI@@MAEXXZ
	DD	FLAT:?OnChangePosition@CButton@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CButton@UI@@MAEXXZ
	DD	FLAT:?OnMouseOverOut@CButton@UI@@MAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
CONST	ENDS
;	COMDAT ??_7CAniImageBox@UI@@6B@
CONST	SEGMENT
??_7CAniImageBox@UI@@6B@ DD FLAT:??_R4CAniImageBox@UI@@6B@ ; UI::CAniImageBox::`vftable'
	DD	FLAT:??_ECAniImageBox@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CAniImageBox@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CAniImageBox@UI@@MAEXXZ
	DD	FLAT:?OnChangePosition@CAniImageBox@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CAniImageBox@UI@@MAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnEndFrame@CAniImageBox@UI@@MAEXXZ
CONST	ENDS
;	COMDAT ??_7CExpandedImageBox@UI@@6B@
CONST	SEGMENT
??_7CExpandedImageBox@UI@@6B@ DD FLAT:??_R4CExpandedImageBox@UI@@6B@ ; UI::CExpandedImageBox::`vftable'
	DD	FLAT:??_ECExpandedImageBox@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CExpandedImageBox@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CExpandedImageBox@UI@@MAEXXZ
	DD	FLAT:?OnChangePosition@CImageBox@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CExpandedImageBox@UI@@MAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnCreateInstance@CExpandedImageBox@UI@@MAEXXZ
	DD	FLAT:?OnDestroyInstance@CExpandedImageBox@UI@@MAEXXZ
CONST	ENDS
;	COMDAT ??_7CMarkBox@UI@@6B@
CONST	SEGMENT
??_7CMarkBox@UI@@6B@ DD FLAT:??_R4CMarkBox@UI@@6B@	; UI::CMarkBox::`vftable'
	DD	FLAT:??_ECMarkBox@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CMarkBox@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CMarkBox@UI@@MAEXXZ
	DD	FLAT:?OnChangePosition@CMarkBox@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnCreateInstance@CMarkBox@UI@@MAEXXZ
	DD	FLAT:?OnDestroyInstance@CMarkBox@UI@@MAEXXZ
CONST	ENDS
;	COMDAT ??_7CImageBox@UI@@6B@
CONST	SEGMENT
??_7CImageBox@UI@@6B@ DD FLAT:??_R4CImageBox@UI@@6B@	; UI::CImageBox::`vftable'
	DD	FLAT:??_ECImageBox@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CImageBox@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CImageBox@UI@@MAEXXZ
	DD	FLAT:?OnChangePosition@CImageBox@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnCreateInstance@CImageBox@UI@@MAEXXZ
	DD	FLAT:?OnDestroyInstance@CImageBox@UI@@MAEXXZ
CONST	ENDS
;	COMDAT ??_7CNumberLine@UI@@6B@
CONST	SEGMENT
??_7CNumberLine@UI@@6B@ DD FLAT:??_R4CNumberLine@UI@@6B@ ; UI::CNumberLine::`vftable'
	DD	FLAT:??_ECNumberLine@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CNumberLine@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnChangePosition@CNumberLine@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
CONST	ENDS
;	COMDAT ??_7CTextLine@UI@@6B@
CONST	SEGMENT
??_7CTextLine@UI@@6B@ DD FLAT:??_R4CTextLine@UI@@6B@	; UI::CTextLine::`vftable'
	DD	FLAT:??_ECTextLine@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CTextLine@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CTextLine@UI@@MAEXXZ
	DD	FLAT:?OnChangePosition@CTextLine@UI@@MAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnSetText@CTextLine@UI@@MAEXPBD@Z
CONST	ENDS
;	COMDAT ??_7CBar3D@UI@@6B@
CONST	SEGMENT
??_7CBar3D@UI@@6B@ DD FLAT:??_R4CBar3D@UI@@6B@		; UI::CBar3D::`vftable'
	DD	FLAT:??_ECBar3D@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CBar3D@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnChangePosition@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
CONST	ENDS
;	COMDAT ??_7CLine@UI@@6B@
CONST	SEGMENT
??_7CLine@UI@@6B@ DD FLAT:??_R4CLine@UI@@6B@		; UI::CLine::`vftable'
	DD	FLAT:??_ECLine@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CLine@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnChangePosition@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CLine@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
CONST	ENDS
;	COMDAT ??_7CBar@UI@@6B@
CONST	SEGMENT
??_7CBar@UI@@6B@ DD FLAT:??_R4CBar@UI@@6B@		; UI::CBar::`vftable'
	DD	FLAT:??_ECBar@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CBar@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnChangePosition@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CBar@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
CONST	ENDS
;	COMDAT ??_7CBox@UI@@6B@
CONST	SEGMENT
??_7CBox@UI@@6B@ DD FLAT:??_R4CBox@UI@@6B@		; UI::CBox::`vftable'
	DD	FLAT:??_ECBox@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CBox@UI@@MAEXXZ
	DD	FLAT:?OnUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnChangePosition@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CBox@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
CONST	ENDS
;	COMDAT ??_7CWindow@UI@@6B@
CONST	SEGMENT
??_7CWindow@UI@@6B@ DD FLAT:??_R4CWindow@UI@@6B@	; UI::CWindow::`vftable'
	DD	FLAT:??_ECWindow@UI@@UAEPAXI@Z
	DD	FLAT:?OnRender@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnChangePosition@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnSetFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKillFocus@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnMouseOverIn@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOverOut@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMouseOver@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnDrop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnTop@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnIMEUpdate@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
	DD	FLAT:?OnIMETabEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
	DD	FLAT:?SetScrollable@CWindow@UI@@UAEXXZ
	DD	FLAT:?OnKeyDown@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnKeyUp@CWindow@UI@@UAEHH@Z
	DD	FLAT:?OnPressEscapeKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?OnPressExitKey@CWindow@UI@@UAEHXZ
	DD	FLAT:?SetColor@CWindow@UI@@UAEXK@Z
	DD	FLAT:?OnIsType@CWindow@UI@@UAEHK@Z
	DD	FLAT:?IsWindow@CWindow@UI@@UAEHXZ
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0ABQAVCWindow@UI@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@1@ABQAVCWindow@UI@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0ABQAVCWindow@UI@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@1@ABQAVCWindow@UI@@@Z$0
__ehfuncinfo$??$?0ABQAVCWindow@UI@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@1@ABQAVCWindow@UI@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0ABQAVCWindow@UI@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@1@ABQAVCWindow@UI@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace@ABQAVCWindow@UI@@@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEPAU?$_List_node@PAVCWindow@UI@@PAX@1@QAU21@ABQAVCWindow@UI@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace@ABQAVCWindow@UI@@@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEPAU?$_List_node@PAVCWindow@UI@@PAX@1@QAU21@ABQAVCWindow@UI@@@Z$1
__ehfuncinfo$??$_Emplace@ABQAVCWindow@UI@@@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEPAU?$_List_node@PAVCWindow@UI@@PAX@1@QAU21@ABQAVCWindow@UI@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Emplace@ABQAVCWindow@UI@@@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEPAU?$_List_node@PAVCWindow@UI@@PAX@1@QAU21@ABQAVCWindow@UI@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CButton@UI@@QAE@PAU_object@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CButton@UI@@QAE@PAU_object@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CButton@UI@@QAE@PAU_object@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CButton@UI@@QAE@PAU_object@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CButton@UI@@QAE@PAU_object@@@Z$3
__ehfuncinfo$??0CButton@UI@@QAE@PAU_object@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0CButton@UI@@QAE@PAU_object@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CAniImageBox@UI@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Type@CAniImageBox@UI@@SAKXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Type@CAniImageBox@UI@@SAKXZ$0
__ehfuncinfo$?Type@CAniImageBox@UI@@SAKXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Type@CAniImageBox@UI@@SAKXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CExpandedImageBox@UI@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Type@CExpandedImageBox@UI@@SAKXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Type@CExpandedImageBox@UI@@SAKXZ$0
__ehfuncinfo$?Type@CExpandedImageBox@UI@@SAKXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Type@CExpandedImageBox@UI@@SAKXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CMarkBox@UI@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CImageBox@UI@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetNumber@CNumberLine@UI@@QAEXPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetNumber@CNumberLine@UI@@QAEXPBD@Z$0
__ehfuncinfo$?SetNumber@CNumberLine@UI@@QAEXPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetNumber@CNumberLine@UI@@QAEXPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CNumberLine@UI@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z$3
__ehfuncinfo$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CNumberLine@UI@@QAE@PAU_object@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CNumberLine@UI@@QAE@PAU_object@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CNumberLine@UI@@QAE@PAU_object@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CNumberLine@UI@@QAE@PAU_object@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CNumberLine@UI@@QAE@PAU_object@@@Z$3
__ehfuncinfo$??0CNumberLine@UI@@QAE@PAU_object@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0CNumberLine@UI@@QAE@PAU_object@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetFontName@CTextLine@UI@@QAEXPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetFontName@CTextLine@UI@@QAEXPBD@Z$0
__ehfuncinfo$?SetFontName@CTextLine@UI@@QAEXPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetFontName@CTextLine@UI@@QAEXPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CTextLine@UI@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CTextLine@UI@@QAE@PAU_object@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CTextLine@UI@@QAE@PAU_object@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CTextLine@UI@@QAE@PAU_object@@@Z$1
__ehfuncinfo$??0CTextLine@UI@@QAE@PAU_object@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CTextLine@UI@@QAE@PAU_object@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Type@CBar3D@UI@@SAKXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Type@CBar3D@UI@@SAKXZ$0
__ehfuncinfo$?Type@CBar3D@UI@@SAKXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Type@CBar3D@UI@@SAKXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CWindow@UI@@QAE@PAU_object@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CWindow@UI@@QAE@PAU_object@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CWindow@UI@@QAE@PAU_object@@@Z$1
__ehfuncinfo$??0CWindow@UI@@QAE@PAU_object@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CWindow@UI@@QAE@PAU_object@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Type@CWindow@UI@@SAKXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Type@CWindow@UI@@SAKXZ$0
__ehfuncinfo$?Type@CWindow@UI@@SAKXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Type@CWindow@UI@@SAKXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z$1
__ehfuncinfo$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CGraphicImageInstance * *,CGraphicImageInstance * *>, COMDAT

; 4526 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4527 :     auto _FirstPtr              = _To_address(_First);
; 4528 :     auto _LastPtr               = _To_address(_Last);
; 4529 :     auto _DestPtr               = _To_address(_Dest);
; 4530 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4531 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4532 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4535 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4536 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4537 :     } else {
; 4538 :         return _Dest + (_LastPtr - _FirstPtr);
; 4539 :     }
; 4540 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CGraphicImageInstance * *,CGraphicImageInstance * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >, COMDAT
; _this$ = ecx

; 1156 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN8@Alloc_cons

; 265  :         ::operator delete(_Ptr, _Bytes);

  00007	6a 0c		 push	 12			; 0000000cH
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000f	83 c4 08	 add	 esp, 8
$LN8@Alloc_cons:

; 1157 :             _Al.deallocate(_Ptr, 1);
; 1158 :         }
; 1159 :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
__Newsize$1$ = -12					; size = 4
tv607 = -8						; size = 4
tv590 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Emplace_reallocate<CGraphicImageInstance * const &>, COMDAT
; _this$ = ecx

; 812  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 813  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 814  :         _Alty& _Al        = _Getal();
; 815  :         auto& _My_data    = _Mypair._Myval2;
; 816  :         pointer& _Myfirst = _My_data._Myfirst;
; 817  :         pointer& _Mylast  = _My_data._Mylast;
; 818  : 
; 819  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 820  : 
; 821  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b d9		 sub	 ebx, ecx

; 822  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c1		 sub	 eax, ecx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 823  : 
; 824  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 0f 01 00
	00		 je	 $LN96@Emplace_re

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 56 08	 mov	 edx, DWORD PTR [esi+8]

; 826  :         }
; 827  : 
; 828  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b d1		 sub	 edx, ecx

; 826  :         }
; 827  : 
; 828  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f4	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 fa 02	 sar	 edx, 2

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b ca		 mov	 ecx, edx
  0003d	d1 e9		 shr	 ecx, 1
  0003f	2b c1		 sub	 eax, ecx
  00041	3b d0		 cmp	 edx, eax
  00043	76 15		 jbe	 SHORT $LN12@Emplace_re

; 1967 :             return _Max; // geometric growth would overflow

  00045	b8 fc ff ff ff	 mov	 eax, -4			; fffffffcH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004a	50		 push	 eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1967 :             return _Max; // geometric growth would overflow

  0004b	89 45 f8	 mov	 DWORD PTR tv607[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b f8		 mov	 edi, eax
  00058	eb 47		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1970 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 70   :         if (_Count > _Max_possible) {

  0005d	8b cf		 mov	 ecx, edi
  0005f	3b c7		 cmp	 eax, edi
  00061	0f 43 c8	 cmovae	 ecx, eax
  00064	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  0006a	0f 87 cc 00 00
	00		 ja	 $LN97@Emplace_re

; 72   :         }
; 73   :     }
; 74   : 
; 75   :     return _Count * _Ty_size;

  00070	8d 04 8d 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*4]
  00077	89 45 f8	 mov	 DWORD PTR tv607[ebp], eax

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0007a	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0007f	72 0d		 jb	 SHORT $LN24@Emplace_re

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00087	83 c4 04	 add	 esp, 4
  0008a	8b f8		 mov	 edi, eax
  0008c	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 240  :         }
; 241  :     }
; 242  : #endif // defined(_M_IX86) || defined(_M_X64)
; 243  : 
; 244  :     if (_Bytes != 0) {

  0008e	85 c0		 test	 eax, eax
  00090	74 0d		 je	 SHORT $LN25@Emplace_re

; 87   :         return ::operator new(_Bytes);

  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00098	83 c4 04	 add	 esp, 4

; 245  :         return _Traits::_Allocate(_Bytes);

  0009b	8b f8		 mov	 edi, eax
  0009d	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 246  :     }
; 247  : 
; 248  :     return nullptr;

  0009f	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 836  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000a1	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a4	8d 0c 9f	 lea	 ecx, DWORD PTR [edi+ebx*4]

; 837  :         _Constructed_first = _Newvec + _Whereoff;
; 838  : 
; 839  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000a7	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  000aa	89 4d fc	 mov	 DWORD PTR tv590[ebp], ecx
  000ad	8b 00		 mov	 eax, DWORD PTR [eax]
  000af	89 01		 mov	 DWORD PTR [ecx], eax
  000b1	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000b4	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000b6	3b d8		 cmp	 ebx, eax
  000b8	75 07		 jne	 SHORT $LN4@Emplace_re

; 845  :         } else { // provide basic guarantee

  000ba	8b 5d fc	 mov	 ebx, DWORD PTR tv590[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1939 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bd	8b d7		 mov	 edx, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 845  :         } else { // provide basic guarantee

  000bf	eb 16		 jmp	 SHORT $LN52@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1939 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c1	57		 push	 edi
  000c2	53		 push	 ebx
  000c3	51		 push	 ecx
  000c4	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicImageInstance * *,CGraphicImageInstance * *>
  000c9	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000cc	8b cb		 mov	 ecx, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 848  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000ce	8b 5d fc	 mov	 ebx, DWORD PTR tv590[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1939 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000d1	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 848  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000d4	8d 53 04	 lea	 edx, DWORD PTR [ebx+4]
$LN52@Emplace_re:
  000d7	52		 push	 edx
  000d8	50		 push	 eax
  000d9	51		 push	 ecx
  000da	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicImageInstance * *,CGraphicImageInstance * *>

; 2023 :         if (_Myfirst) { // destroy and deallocate old array

  000df	8b 06		 mov	 eax, DWORD PTR [esi]

; 848  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000e1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2023 :         if (_Myfirst) { // destroy and deallocate old array

  000e4	85 c0		 test	 eax, eax
  000e6	74 2c		 je	 SHORT $LN70@Emplace_re

; 2024 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2025 :             _ASAN_VECTOR_REMOVE;
; 2026 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e8	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000eb	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ed	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000f0	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f6	72 12		 jb	 SHORT $LN80@Emplace_re

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f8	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000fb	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000fe	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00100	83 c0 fc	 add	 eax, -4			; fffffffcH
  00103	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00106	77 2a		 ja	 SHORT $LN77@Emplace_re

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00108	8b c2		 mov	 eax, edx
$LN80@Emplace_re:

; 265  :         ::operator delete(_Ptr, _Bytes);

  0010a	51		 push	 ecx
  0010b	50		 push	 eax
  0010c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00111	83 c4 08	 add	 esp, 8
$LN70@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2030 :         _Mylast  = _Newvec + _Newsize;

  00114	8b 45 f4	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  00117	89 3e		 mov	 DWORD PTR [esi], edi
  00119	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 849  :         }
; 850  :         _CATCH_ALL
; 851  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 852  :         _Al.deallocate(_Newvec, _Newcapacity);
; 853  :         _RERAISE;
; 854  :         _CATCH_END
; 855  : 
; 856  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 857  :         return _Newvec + _Whereoff;

  0011c	8b c3		 mov	 eax, ebx

; 2030 :         _Mylast  = _Newvec + _Newsize;

  0011e	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 2031 :         _Myend   = _Newvec + _Newcapacity;

  00121	8b 4d f8	 mov	 ecx, DWORD PTR tv607[ebp]
  00124	03 cf		 add	 ecx, edi

; 858  :     }

  00126	5f		 pop	 edi

; 2031 :         _Myend   = _Newvec + _Newcapacity;

  00127	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 858  :     }

  0012a	5e		 pop	 esi
  0012b	5b		 pop	 ebx
  0012c	8b e5		 mov	 esp, ebp
  0012e	5d		 pop	 ebp
  0012f	c2 08 00	 ret	 8
$LN77@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00132	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN96@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 825  :             _Xlength();

  00137	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Xlength
$LN97@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 71   :             _Throw_bad_array_new_length(); // multiply overflow

  0013c	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN94@Emplace_re:
  00141	cc		 int	 3
??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Emplace_reallocate<CGraphicImageInstance * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z
_TEXT	SEGMENT
__New_size$1$ = -8					; size = 4
__Left_size$1$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4936 :     const basic_string<_Elem, _Traits, _Alloc>& _Left, _In_z_ const _Elem* const _Right) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 4937 :     using _Size_type       = typename basic_string<_Elem, _Traits, _Alloc>::size_type;
; 4938 :     const auto _Left_size  = _Left.size();

  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Left$[ebp]
  00009	56		 push	 esi

; 403  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0000a	8b 75 10	 mov	 esi, DWORD PTR __Right$[ebp]

; 4936 :     const basic_string<_Elem, _Traits, _Alloc>& _Left, _In_z_ const _Elem* const _Right) {

  0000d	57		 push	 edi

; 4937 :     using _Size_type       = typename basic_string<_Elem, _Traits, _Alloc>::size_type;
; 4938 :     const auto _Left_size  = _Left.size();

  0000e	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00011	89 55 fc	 mov	 DWORD PTR __Left_size$1$[ebp], edx

; 403  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00014	8d 7e 01	 lea	 edi, DWORD PTR [esi+1]
$LL45@operator:
  00017	8a 06		 mov	 al, BYTE PTR [esi]
  00019	46		 inc	 esi
  0001a	84 c0		 test	 al, al
  0001c	75 f9		 jne	 SHORT $LL45@operator

; 4939 :     const auto _Right_size = _Convert_size<_Size_type>(_Traits::length(_Right));
; 4940 :     if (_Left.max_size() - _Left_size < _Right_size) {

  0001e	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH

; 403  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00023	2b f7		 sub	 esi, edi

; 4939 :     const auto _Right_size = _Convert_size<_Size_type>(_Traits::length(_Right));
; 4940 :     if (_Left.max_size() - _Left_size < _Right_size) {

  00025	2b c2		 sub	 eax, edx
  00027	3b c6		 cmp	 eax, esi
  00029	0f 82 d6 00 00
	00		 jb	 $LN54@operator

; 2244 :         return _BUF_SIZE <= _Myres;

  0002f	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H

; 2236 :         if (_Large_string_engaged()) {

  00033	72 05		 jb	 SHORT $LN11@operator

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

  00035	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00037	89 4d 0c	 mov	 DWORD PTR __Left$[ebp], ecx
$LN11@operator:

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  0003a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2794 :         if (_New_capacity < _New_size) {

  0003d	8d 0c 16	 lea	 ecx, DWORD PTR [esi+edx]
  00040	53		 push	 ebx

; 2295 : };
; 2296 : 
; 2297 : // get _Ty's size after being EBCO'd
; 2298 : template <class _Ty>
; 2299 : _INLINE_VAR constexpr size_t _Size_after_ebco_v = is_empty_v<_Ty> ? 0 : sizeof(_Ty);
; 2300 : 
; 2301 : struct _String_constructor_concat_tag {
; 2302 :     // tag to select constructors used by basic_string's concatenation operators (operator+)
; 2303 :     explicit _String_constructor_concat_tag() = default;
; 2304 : };
; 2305 : 
; 2306 : struct _String_constructor_rvalue_allocator_tag {
; 2307 :     // tag to select constructors used by basic_stringbuf's rvalue str()
; 2308 :     explicit _String_constructor_rvalue_allocator_tag() = default;
; 2309 : };
; 2310 : 
; 2311 : [[noreturn]] inline void _Xlen_string() {
; 2312 :     _Xlength_error("string too long");
; 2313 : }
; 2314 : 
; 2315 : #if _HAS_CXX23 && defined(__cpp_lib_concepts) // TRANSITION, GH-395
; 2316 : template <class _Rng, class _Ty>
; 2317 : concept _Contiguous_range_of =
; 2318 :     (_RANGES contiguous_range<_Rng>) &&same_as<remove_cvref_t<_RANGES range_reference_t<_Rng>>, _Ty>;
; 2319 : #endif // _HAS_CXX23 && defined(__cpp_lib_concepts)
; 2320 : 
; 2321 : _EXPORT_STD template <class _Elem, class _Traits = char_traits<_Elem>, class _Alloc = allocator<_Elem>>
; 2322 : class basic_string { // null-terminated transparent array of elements
; 2323 : private:
; 2324 :     friend _Tidy_deallocate_guard<basic_string>;
; 2325 :     friend basic_stringbuf<_Elem, _Traits, _Alloc>;
; 2326 : 
; 2327 :     using _Alty        = _Rebind_alloc_t<_Alloc, _Elem>;
; 2328 :     using _Alty_traits = allocator_traits<_Alty>;
; 2329 : 
; 2330 :     using _Scary_val = _String_val<conditional_t<_Is_simple_alloc_v<_Alty>, _Simple_types<_Elem>,
; 2331 :         _String_iter_types<_Elem, typename _Alty_traits::size_type, typename _Alty_traits::difference_type,
; 2332 :             typename _Alty_traits::pointer, typename _Alty_traits::const_pointer, _Elem&, const _Elem&>>>;
; 2333 : 
; 2334 :     static_assert(!_ENFORCE_MATCHING_ALLOCATORS || is_same_v<_Elem, typename _Alloc::value_type>,
; 2335 :         _MISMATCHED_ALLOCATOR_MESSAGE("basic_string<T, Traits, Allocator>", "T"));
; 2336 : 
; 2337 :     static_assert(is_same_v<_Elem, typename _Traits::char_type>,
; 2338 :         "N4950 [string.require]/3 requires that the supplied "
; 2339 :         "char_traits character type match the string's character type.");
; 2340 : 
; 2341 :     static_assert(!is_array_v<_Elem> && is_trivial_v<_Elem> && is_standard_layout_v<_Elem>,
; 2342 :         "The character type of basic_string must be a non-array trivial standard-layout type. See N4950 "
; 2343 :         "[strings.general]/1.");
; 2344 : 
; 2345 : public:
; 2346 :     using traits_type    = _Traits;
; 2347 :     using allocator_type = _Alloc;
; 2348 : 
; 2349 :     using value_type      = _Elem;
; 2350 :     using size_type       = typename _Alty_traits::size_type;
; 2351 :     using difference_type = typename _Alty_traits::difference_type;
; 2352 :     using pointer         = typename _Alty_traits::pointer;
; 2353 :     using const_pointer   = typename _Alty_traits::const_pointer;
; 2354 :     using reference       = value_type&;
; 2355 :     using const_reference = const value_type&;
; 2356 : 
; 2357 :     using iterator       = _String_iterator<_Scary_val>;
; 2358 :     using const_iterator = _String_const_iterator<_Scary_val>;
; 2359 : 
; 2360 :     using reverse_iterator       = _STD reverse_iterator<iterator>;
; 2361 :     using const_reverse_iterator = _STD reverse_iterator<const_iterator>;
; 2362 : 
; 2363 : private:
; 2364 :     static constexpr auto _BUF_SIZE   = _Scary_val::_BUF_SIZE;
; 2365 :     static constexpr auto _ALLOC_MASK = _Scary_val::_ALLOC_MASK;
; 2366 : 
; 2367 :     // When doing _String_val operations by memcpy, we are touching:
; 2368 :     //   _String_val::_Bx::_Buf (type is array of _Elem)
; 2369 :     //   _String_val::_Bx::_Ptr (type is pointer)
; 2370 :     //   _String_val::_Mysize   (type is size_type)
; 2371 :     //   _String_val::_Myres    (type is size_type)
; 2372 :     // N4950 [strings.general]/1 says _Elem must be trivial standard-layout, so memcpy is safe.
; 2373 :     // We need to ask if pointer is safe to memcpy.
; 2374 :     // size_type must be an unsigned integral type so memcpy is safe.
; 2375 :     // We also need to disable memcpy if the user has supplied _Traits, since
; 2376 :     //   they can observe traits::assign and similar.
; 2377 :     static constexpr bool _Can_memcpy_val = _Is_specialization_v<_Traits, char_traits> && is_trivial_v<pointer>;
; 2378 :     // This offset skips over the _Container_base members, if any
; 2379 :     static constexpr size_t _Memcpy_val_offset = _Size_after_ebco_v<_Container_base>;
; 2380 :     static constexpr size_t _Memcpy_val_size   = sizeof(_Scary_val) - _Memcpy_val_offset;
; 2381 : 
; 2382 :     template <class _Iter>
; 2383 :     // TRANSITION, /clr:pure is incompatible with templated static constexpr data members
; 2384 :     // static constexpr bool _Is_elem_cptr =_Is_any_of_v<_Iter, const _Elem* const, _Elem* const, const _Elem*, _Elem*>;
; 2385 :     using _Is_elem_cptr = bool_constant<_Is_any_of_v<_Iter, const _Elem* const, _Elem* const, const _Elem*, _Elem*>>;
; 2386 : 
; 2387 : #if _HAS_CXX17
; 2388 :     template <class _StringViewIsh>
; 2389 :     using _Is_string_view_ish =
; 2390 :         enable_if_t<conjunction_v<is_convertible<const _StringViewIsh&, basic_string_view<_Elem, _Traits>>,
; 2391 :                         negation<is_convertible<const _StringViewIsh&, const _Elem*>>>,
; 2392 :             int>;
; 2393 : #endif // _HAS_CXX17
; 2394 : 
; 2395 : #ifdef _INSERT_STRING_ANNOTATION
; 2396 :     _CONSTEXPR20 void _Create_annotation() const noexcept {
; 2397 :         // Annotates the valid range with shadow memory
; 2398 :         auto& _My_data = _Mypair._Myval2;
; 2399 :         _Apply_annotation(_My_data._Myptr(), _My_data._Myres, _My_data._Myres, _My_data._Mysize);
; 2400 :     }
; 2401 : 
; 2402 :     _CONSTEXPR20 void _Remove_annotation() const noexcept {
; 2403 :         // Removes annotation of the range with shadow memory
; 2404 :         auto& _My_data = _Mypair._Myval2;
; 2405 :         _Apply_annotation(_My_data._Myptr(), _My_data._Myres, _My_data._Mysize, _My_data._Myres);
; 2406 :     }
; 2407 : 
; 2408 :     _CONSTEXPR20 void _Modify_annotation(const size_type _Old_size, const size_type _New_size) const noexcept {
; 2409 :         if (_Old_size == _New_size) {
; 2410 :             return;
; 2411 :         }
; 2412 : 
; 2413 :         auto& _My_data = _Mypair._Myval2;
; 2414 :         _Apply_annotation(_My_data._Myptr(), _My_data._Myres, _Old_size, _New_size);
; 2415 :     }
; 2416 : 
; 2417 :     static _CONSTEXPR20 void _Apply_annotation(const value_type* const _First, const size_type _Capacity,
; 2418 :         const size_type _Old_size, const size_type _New_size) noexcept {
; 2419 : #if _HAS_CXX20
; 2420 :         if (_STD is_constant_evaluated()) {
; 2421 :             return;
; 2422 :         }
; 2423 : #endif // _HAS_CXX20
; 2424 :        // Don't annotate small strings; only annotate on the heap.
; 2425 :         if (_Capacity == _BUF_SIZE - 1 || !_Asan_string_should_annotate) {
; 2426 :             return;
; 2427 :         }
; 2428 : 
; 2429 :         // Note that `_Capacity`, `_Old_size`, and `_New_size` do not include the null terminator
; 2430 :         const void* const _End      = _First + _Capacity + 1;
; 2431 :         const void* const _Old_last = _First + _Old_size + 1;
; 2432 :         const void* const _New_last = _First + _New_size + 1;
; 2433 : 
; 2434 :         constexpr bool _Large_string_always_asan_aligned =
; 2435 :             (_Container_allocation_minimum_asan_alignment<basic_string>) >= _Asan_granularity;
; 2436 : 
; 2437 :         // for the non-aligned buffer options, the buffer must always have size >= 9 bytes,
; 2438 :         // so it will always end at least one shadow memory section.
; 2439 : 
; 2440 :         _Asan_aligned_pointers _Aligned;
; 2441 :         if constexpr (_Large_string_always_asan_aligned) {
; 2442 :             _Aligned = {_First, _STD _Get_asan_aligned_after(_End)};
; 2443 :         } else {
; 2444 :             _Aligned = _STD _Get_asan_aligned_first_end(_First, _End);
; 2445 :         }
; 2446 :         const void* const _Old_fixed = _Aligned._Clamp_to_end(_Old_last);
; 2447 :         const void* const _New_fixed = _Aligned._Clamp_to_end(_New_last);
; 2448 : 
; 2449 :         // --- always aligned case ---
; 2450 :         // old state:
; 2451 :         //   [_First, _Old_last) valid
; 2452 :         //   [_Old_last, asan_aligned_after(_End)) poison
; 2453 :         // new state:
; 2454 :         //   [_First, _New_last) valid
; 2455 :         //   [_New_last, asan_aligned_after(_End)) poison
; 2456 : 
; 2457 :         // --- sometimes non-aligned case ---
; 2458 :         // old state:
; 2459 :         //   [_Aligned._First, _Old_fixed) valid
; 2460 :         //   [_Old_fixed, _Aligned._End) poison
; 2461 :         //   [_Aligned._End, _End) valid
; 2462 :         // new state:
; 2463 :         //   [_Aligned._First, _New_fixed) valid
; 2464 :         //   [_New_fixed, _Aligned._End) poison
; 2465 :         //   [_Aligned._End, _End) valid
; 2466 :         _CSTD __sanitizer_annotate_contiguous_container(_Aligned._First, _Aligned._End, _Old_fixed, _New_fixed);
; 2467 :     }
; 2468 : 
; 2469 : #define _ASAN_STRING_REMOVE(_Str)                       (_Str)._Remove_annotation()
; 2470 : #define _ASAN_STRING_CREATE(_Str)                       (_Str)._Create_annotation()
; 2471 : #define _ASAN_STRING_MODIFY(_Str, _Old_size, _New_size) (_Str)._Modify_annotation(_Old_size, _New_size)
; 2472 : #else // ^^^ _INSERT_STRING_ANNOTATION / !_INSERT_STRING_ANNOTATION vvv
; 2473 : #define _ASAN_STRING_REMOVE(_Str)
; 2474 : #define _ASAN_STRING_CREATE(_Str)
; 2475 : #define _ASAN_STRING_MODIFY(_Str, _Old_size, _New_size)
; 2476 : #endif // !_INSERT_STRING_ANNOTATION
; 2477 : 
; 2478 : public:
; 2479 :     _CONSTEXPR20
; 2480 :     basic_string() noexcept(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t{}) {
; 2481 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));
; 2482 :         _Tidy_init();
; 2483 :     }
; 2484 : 
; 2485 :     _CONSTEXPR20 explicit basic_string(const _Alloc& _Al) noexcept : _Mypair(_One_then_variadic_args_t{}, _Al) {
; 2486 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));
; 2487 :         _Tidy_init();
; 2488 :     }
; 2489 : 
; 2490 :     _CONSTEXPR20 basic_string(const basic_string& _Right)
; 2491 :         : _Mypair(_One_then_variadic_args_t{}, _Alty_traits::select_on_container_copy_construction(_Right._Getal())) {
; 2492 :         _Construct<_Construct_strategy::_From_string>(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);
; 2493 :     }
; 2494 : 
; 2495 :     _CONSTEXPR20 basic_string(const basic_string& _Right, const _Alloc& _Al)
; 2496 :         : _Mypair(_One_then_variadic_args_t{}, _Al) {
; 2497 :         _Construct<_Construct_strategy::_From_string>(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);
; 2498 :     }
; 2499 : 
; 2500 :     _CONSTEXPR20 basic_string(const basic_string& _Right, const size_type _Roff, const _Alloc& _Al = _Alloc())
; 2501 :         : _Mypair(_One_then_variadic_args_t{}, _Al) { // construct from _Right [_Roff, <end>)
; 2502 :         _Right._Mypair._Myval2._Check_offset(_Roff);
; 2503 :         _Construct<_Construct_strategy::_From_ptr>(
; 2504 :             _Right._Mypair._Myval2._Myptr() + _Roff, _Right._Mypair._Myval2._Clamp_suffix_size(_Roff, npos));
; 2505 :     }
; 2506 : 
; 2507 :     _CONSTEXPR20 basic_string(
; 2508 :         const basic_string& _Right, const size_type _Roff, const size_type _Count, const _Alloc& _Al = _Alloc())
; 2509 :         : _Mypair(_One_then_variadic_args_t{}, _Al) { // construct from _Right [_Roff, _Roff + _Count)
; 2510 :         _Right._Mypair._Myval2._Check_offset(_Roff);
; 2511 :         _Construct<_Construct_strategy::_From_ptr>(
; 2512 :             _Right._Mypair._Myval2._Myptr() + _Roff, _Right._Mypair._Myval2._Clamp_suffix_size(_Roff, _Count));
; 2513 :     }
; 2514 : 
; 2515 : #if _HAS_CXX23
; 2516 :     constexpr basic_string(basic_string&& _Right, const size_type _Roff, const _Alloc& _Al = _Alloc())
; 2517 :         : _Mypair(_One_then_variadic_args_t{}, _Al) { // construct from _Right [_Roff, <end>), potentially move
; 2518 :         _Move_construct_from_substr(_Right, _Roff, npos);
; 2519 :     }
; 2520 : 
; 2521 :     constexpr basic_string(
; 2522 :         basic_string&& _Right, const size_type _Roff, const size_type _Count, const _Alloc& _Al = _Alloc())
; 2523 :         : _Mypair(_One_then_variadic_args_t{}, _Al) { // construct from _Right [_Roff, _Roff + _Count), potentially move
; 2524 :         _Move_construct_from_substr(_Right, _Roff, _Count);
; 2525 :     }
; 2526 : #endif // _HAS_CXX23
; 2527 : 
; 2528 :     _CONSTEXPR20 basic_string(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count)
; 2529 :         : _Mypair(_Zero_then_variadic_args_t{}) {
; 2530 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Count);
; 2531 :     }
; 2532 : 
; 2533 :     _CONSTEXPR20 basic_string(
; 2534 :         _In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count, const _Alloc& _Al)
; 2535 :         : _Mypair(_One_then_variadic_args_t{}, _Al) {
; 2536 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Count);
; 2537 :     }
; 2538 : 
; 2539 :     _CONSTEXPR20 basic_string(_In_z_ const _Elem* const _Ptr) : _Mypair(_Zero_then_variadic_args_t{}) {
; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));
; 2541 :     }
; 2542 : 
; 2543 : #if _HAS_CXX23
; 2544 :     basic_string(nullptr_t) = delete;
; 2545 : #endif // _HAS_CXX23
; 2546 : 
; 2547 : #if _HAS_CXX17
; 2548 :     template <class _Alloc2 = _Alloc, enable_if_t<_Is_allocator<_Alloc2>::value, int> = 0>
; 2549 : #endif // _HAS_CXX17
; 2550 :     _CONSTEXPR20 basic_string(_In_z_ const _Elem* const _Ptr, const _Alloc& _Al)
; 2551 :         : _Mypair(_One_then_variadic_args_t{}, _Al) {
; 2552 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));
; 2553 :     }
; 2554 : 
; 2555 :     _CONSTEXPR20 basic_string(_CRT_GUARDOVERFLOW const size_type _Count, const _Elem _Ch)
; 2556 :         : _Mypair(_Zero_then_variadic_args_t{}) { // construct from _Count * _Ch
; 2557 :         _Construct<_Construct_strategy::_From_char>(_Ch, _Count);
; 2558 :     }
; 2559 : 
; 2560 : #if _HAS_CXX17
; 2561 :     template <class _Alloc2 = _Alloc, enable_if_t<_Is_allocator<_Alloc2>::value, int> = 0>
; 2562 : #endif // _HAS_CXX17
; 2563 :     _CONSTEXPR20 basic_string(_CRT_GUARDOVERFLOW const size_type _Count, const _Elem _Ch, const _Alloc& _Al)
; 2564 :         : _Mypair(_One_then_variadic_args_t{}, _Al) { // construct from _Count * _Ch with allocator
; 2565 :         _Construct<_Construct_strategy::_From_char>(_Ch, _Count);
; 2566 :     }
; 2567 : 
; 2568 :     template <class _Iter, enable_if_t<_Is_iterator_v<_Iter>, int> = 0>
; 2569 :     _CONSTEXPR20 basic_string(_Iter _First, _Iter _Last, const _Alloc& _Al = _Alloc())
; 2570 :         : _Mypair(_One_then_variadic_args_t{}, _Al) {
; 2571 :         _Adl_verify_range(_First, _Last);
; 2572 :         auto _UFirst = _Get_unwrapped(_First);
; 2573 :         auto _ULast  = _Get_unwrapped(_Last);
; 2574 :         if (_UFirst == _ULast) {
; 2575 :             _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));
; 2576 :             _Tidy_init();
; 2577 :         } else {
; 2578 :             if constexpr (_Is_elem_cptr<decltype(_UFirst)>::value) {
; 2579 :                 _Construct<_Construct_strategy::_From_ptr>(
; 2580 :                     _UFirst, _Convert_size<size_type>(static_cast<size_t>(_ULast - _UFirst)));
; 2581 :             } else if constexpr (_Is_cpp17_fwd_iter_v<decltype(_UFirst)>) {
; 2582 :                 const auto _Length = static_cast<size_t>(_STD distance(_UFirst, _ULast));
; 2583 :                 const auto _Count  = _Convert_size<size_type>(_Length);
; 2584 :                 _Construct_from_iter(_STD move(_UFirst), _STD move(_ULast), _Count);
; 2585 :             } else {
; 2586 :                 _Construct_from_iter(_STD move(_UFirst), _STD move(_ULast));
; 2587 :             }
; 2588 :         }
; 2589 :     }
; 2590 : 
; 2591 : private:
; 2592 :     static constexpr void _Start_element_lifetimes(_Elem* const _Ptr, const size_type _Size) {
; 2593 :         // Start element lifetimes to avoid UB. This is a more general mechanism than _String_val::_Activate_SSO_buffer,
; 2594 :         // but likely more impactful to throughput.
; 2595 : #if _HAS_CXX20
; 2596 :         if (_STD is_constant_evaluated()) {
; 2597 :             for (size_type _Idx = 0; _Idx < _Size; ++_Idx) {
; 2598 :                 _STD construct_at(_Ptr + _Idx);
; 2599 :             }
; 2600 :         }
; 2601 : #else // ^^^ C++20-or-later / pre-C++20 vvv
; 2602 :         (void) _Ptr;
; 2603 :         (void) _Size;
; 2604 : #endif // _HAS_CXX20
; 2605 :     }
; 2606 : 
; 2607 :     enum class _Construct_strategy : uint8_t { _From_char, _From_ptr, _From_string };
; 2608 : 
; 2609 :     template <_Construct_strategy _Strat, class _Char_or_ptr>
; 2610 :     _CONSTEXPR20 void _Construct(const _Char_or_ptr _Arg, _CRT_GUARDOVERFLOW const size_type _Count) {
; 2611 :         auto& _My_data = _Mypair._Myval2;
; 2612 :         _STL_INTERNAL_CHECK(!_My_data._Large_string_engaged());
; 2613 : 
; 2614 :         if constexpr (_Strat == _Construct_strategy::_From_char) {
; 2615 :             _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Char_or_ptr, _Elem>);
; 2616 :         } else {
; 2617 :             _STL_INTERNAL_STATIC_ASSERT(_Is_elem_cptr<_Char_or_ptr>::value);
; 2618 :         }
; 2619 : 
; 2620 :         if (_Count > max_size()) {
; 2621 :             _Xlen_string(); // result too long
; 2622 :         }
; 2623 : 
; 2624 :         auto& _Al       = _Getal();
; 2625 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);
; 2626 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 2627 : 
; 2628 :         if (_Count < _BUF_SIZE) {
; 2629 :             _My_data._Mysize = _Count;
; 2630 :             _My_data._Myres  = _BUF_SIZE - 1;
; 2631 : 
; 2632 :             if constexpr (_Strat == _Construct_strategy::_From_char) {
; 2633 :                 _Traits::assign(_My_data._Bx._Buf, _Count, _Arg);
; 2634 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());
; 2635 :             } else if constexpr (_Strat == _Construct_strategy::_From_ptr) {
; 2636 :                 _Traits::copy(_My_data._Bx._Buf, _Arg, _Count);
; 2637 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());
; 2638 :             } else { // _Strat == _Construct_strategy::_From_string
; 2639 : #ifdef _INSERT_STRING_ANNOTATION
; 2640 :                 _Traits::copy(_My_data._Bx._Buf, _Arg, _Count + 1);
; 2641 : #else // ^^^ _INSERT_STRING_ANNOTATION / !_INSERT_STRING_ANNOTATION vvv
; 2642 :                 _Traits::copy(_My_data._Bx._Buf, _Arg, _BUF_SIZE);
; 2643 : #endif // !_INSERT_STRING_ANNOTATION
; 2644 :             }
; 2645 : 
; 2646 :             _Proxy._Release();
; 2647 :             return;
; 2648 :         }
; 2649 : 
; 2650 :         _My_data._Myres               = _BUF_SIZE - 1;
; 2651 :         const size_type _New_capacity = _Calculate_growth(_Count);
; 2652 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws
; 2653 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);
; 2654 : 
; 2655 :         _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);
; 2656 : 
; 2657 :         _My_data._Mysize = _Count;
; 2658 :         _My_data._Myres  = _New_capacity;
; 2659 :         if constexpr (_Strat == _Construct_strategy::_From_char) {
; 2660 :             _Traits::assign(_Unfancy(_New_ptr), _Count, _Arg);
; 2661 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());
; 2662 :         } else if constexpr (_Strat == _Construct_strategy::_From_ptr) {
; 2663 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count);
; 2664 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());
; 2665 :         } else { // _Strat == _Construct_strategy::_From_string
; 2666 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count + 1);
; 2667 :         }
; 2668 : 
; 2669 :         _ASAN_STRING_CREATE(*this);
; 2670 :         _Proxy._Release();
; 2671 :     }
; 2672 : 
; 2673 :     template <class _Iter, class _Sent, class _Size = nullptr_t>
; 2674 :     _CONSTEXPR20 void _Construct_from_iter(_Iter _First, const _Sent _Last, _Size _Count = {}) {
; 2675 :         // Pre: _First models input_iterator or meets the Cpp17InputIterator requirements
; 2676 :         // Pre: [_First, _Last) is a valid range
; 2677 :         // Pre: if is_same_v<_Size, size_type>, _Count is the length of [_First, _Last).
; 2678 :         // Pre: *this is in SSO mode; the lifetime of the SSO elements has already begun
; 2679 : 
; 2680 :         auto& _My_data  = _Mypair._Myval2;
; 2681 :         auto& _Al       = _Getal();
; 2682 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);
; 2683 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 2684 : 
; 2685 :         _My_data._Mysize = 0;
; 2686 :         _My_data._Myres  = _BUF_SIZE - 1;
; 2687 : 
; 2688 :         if constexpr (is_same_v<_Size, size_type>) {
; 2689 :             if (_Count > max_size()) {
; 2690 :                 _Xlen_string(); // result too long
; 2691 :             }
; 2692 : 
; 2693 :             if (_Count >= _BUF_SIZE) {
; 2694 :                 const size_type _New_capacity = _Calculate_growth(_Count);
; 2695 :                 const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws
; 2696 :                 _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);
; 2697 :                 _My_data._Myres = _New_capacity;
; 2698 : 
; 2699 :                 _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);
; 2700 :             }
; 2701 :         }
; 2702 : 
; 2703 :         _Tidy_deallocate_guard<basic_string> _Guard{this};
; 2704 :         for (; _First != _Last; ++_First) {
; 2705 :             if constexpr (!is_same_v<_Size, size_type>) {
; 2706 :                 if (_My_data._Mysize == _My_data._Myres) { // Need to grow
; 2707 :                     if (_My_data._Mysize == max_size()) {
; 2708 :                         _Xlen_string(); // result too long
; 2709 :                     }
; 2710 : 
; 2711 :                     const auto _Old_ptr           = _My_data._Myptr();
; 2712 :                     const size_type _New_capacity = _Calculate_growth(_My_data._Mysize);
; 2713 :                     const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws
; 2714 : 
; 2715 :                     _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);
; 2716 :                     _Traits::copy(_Unfancy(_New_ptr), _Old_ptr, _My_data._Mysize);
; 2717 :                     if (_My_data._Myres >= _BUF_SIZE) { // Need to deallocate old storage
; 2718 :                         _Al.deallocate(_My_data._Bx._Ptr, _My_data._Myres + 1);
; 2719 :                         _My_data._Bx._Ptr = _New_ptr;
; 2720 :                     } else {
; 2721 :                         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);
; 2722 :                     }
; 2723 :                     _My_data._Myres = _New_capacity;
; 2724 :                 }
; 2725 :             }
; 2726 : 
; 2727 :             _Elem* const _Ptr = _My_data._Myptr();
; 2728 :             _Traits::assign(_Ptr[_My_data._Mysize], *_First);
; 2729 :             ++_My_data._Mysize;
; 2730 :         }
; 2731 : 
; 2732 :         _Elem* const _Ptr = _My_data._Myptr();
; 2733 :         _Traits::assign(_Ptr[_My_data._Mysize], _Elem());
; 2734 :         _ASAN_STRING_CREATE(*this);
; 2735 :         _Guard._Target = nullptr;
; 2736 :         _Proxy._Release();
; 2737 :     }
; 2738 : 
; 2739 : public:
; 2740 : #if _HAS_CXX23 && defined(__cpp_lib_concepts) // TRANSITION, GH-395
; 2741 :     template <_Container_compatible_range<_Elem> _Rng>
; 2742 :     constexpr basic_string(from_range_t, _Rng&& _Range, const _Alloc& _Al = _Alloc())
; 2743 :         : _Mypair(_One_then_variadic_args_t{}, _Al) {
; 2744 :         if constexpr (_RANGES sized_range<_Rng> || _RANGES forward_range<_Rng>) {
; 2745 :             const auto _Length = _To_unsigned_like(_RANGES distance(_Range));
; 2746 :             const auto _Count  = _Convert_size<size_type>(_Length);
; 2747 :             if constexpr (_Contiguous_range_of<_Rng, _Elem>) {
; 2748 :                 _Construct<_Construct_strategy::_From_ptr>(_RANGES data(_Range), _Count);
; 2749 :             } else {
; 2750 :                 _Construct_from_iter(_RANGES _Ubegin(_Range), _RANGES _Uend(_Range), _Count);
; 2751 :             }
; 2752 :         } else {
; 2753 :             _Construct_from_iter(_RANGES _Ubegin(_Range), _RANGES _Uend(_Range));
; 2754 :         }
; 2755 :     }
; 2756 : #endif // _HAS_CXX23 && defined(__cpp_lib_concepts)
; 2757 : 
; 2758 :     _CONSTEXPR20 basic_string(basic_string&& _Right) noexcept
; 2759 :         : _Mypair(_One_then_variadic_args_t{}, _STD move(_Right._Getal())) {
; 2760 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));
; 2761 :         _Take_contents(_Right);
; 2762 :     }
; 2763 : 
; 2764 :     _CONSTEXPR20 basic_string(basic_string&& _Right, const _Alloc& _Al) noexcept(
; 2765 :         _Alty_traits::is_always_equal::value) // strengthened
; 2766 :         : _Mypair(_One_then_variadic_args_t{}, _Al) {
; 2767 :         if constexpr (!_Alty_traits::is_always_equal::value) {
; 2768 :             if (_Getal() != _Right._Getal()) {
; 2769 :                 _Construct<_Construct_strategy::_From_string>(
; 2770 :                     _Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);
; 2771 :                 return;
; 2772 :             }
; 2773 :         }
; 2774 : 
; 2775 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));
; 2776 :         _Take_contents(_Right);
; 2777 :     }
; 2778 : 
; 2779 :     _CONSTEXPR20 basic_string(_String_constructor_concat_tag, const basic_string& _Source_of_al,
; 2780 :         const _Elem* const _Left_ptr, const size_type _Left_size, const _Elem* const _Right_ptr,
; 2781 :         const size_type _Right_size)
; 2782 :         : _Mypair(
; 2783 :             _One_then_variadic_args_t{}, _Alty_traits::select_on_container_copy_construction(_Source_of_al._Getal())) {
; 2784 :         _STL_INTERNAL_CHECK(_Left_size <= max_size());
; 2785 :         _STL_INTERNAL_CHECK(_Right_size <= max_size());
; 2786 :         _STL_INTERNAL_CHECK(_Right_size <= max_size() - _Left_size);
; 2787 :         const auto _New_size    = static_cast<size_type>(_Left_size + _Right_size);

  00041	8d 1c 16	 lea	 ebx, DWORD PTR [esi+edx]
  00044	0f 57 c0	 xorps	 xmm0, xmm0

; 2788 :         size_type _New_capacity = _BUF_SIZE - 1;

  00047	bf 0f 00 00 00	 mov	 edi, 15			; 0000000fH
  0004c	89 5d f8	 mov	 DWORD PTR __New_size$1$[ebp], ebx

; 2789 :         auto& _My_data          = _Mypair._Myval2;
; 2790 :         _Elem* _Ptr             = _My_data._Bx._Buf;

  0004f	8b d8		 mov	 ebx, eax

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  00051	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

  00054	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

  0005b	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 2794 :         if (_New_capacity < _New_size) {

  00062	3b cf		 cmp	 ecx, edi
  00064	76 68		 jbe	 SHORT $LN16@operator

; 4714 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00066	8b 7d f8	 mov	 edi, DWORD PTR __New_size$1$[ebp]
  00069	83 cf 0f	 or	 edi, 15			; 0000000fH
  0006c	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH

; 4715 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00072	76 1a		 jbe	 SHORT $LN31@operator

; 4716 :             return _Max;

  00074	ba 00 00 00 80	 mov	 edx, -2147483648	; 80000000H
  00079	bf ff ff ff 7f	 mov	 edi, 2147483647		; 7fffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0007e	52		 push	 edx
  0007f	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00084	8b d8		 mov	 ebx, eax
  00086	83 c4 04	 add	 esp, 4
  00089	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0008c	eb 3b		 jmp	 SHORT $LN38@operator
$LN31@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 47   :     return _Left < _Right ? _Right : _Left;

  0008e	ba 16 00 00 00	 mov	 edx, 22			; 00000016H
  00093	3b fa		 cmp	 edi, edx
  00095	0f 42 fa	 cmovb	 edi, edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2796 :             const pointer _Fancyptr = _Getal().allocate(_New_capacity + 1); // throws

  00098	8d 57 01	 lea	 edx, DWORD PTR [edi+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0009b	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  000a1	72 10		 jb	 SHORT $LN39@operator

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  000a3	52		 push	 edx
  000a4	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  000a9	8b d8		 mov	 ebx, eax
  000ab	83 c4 04	 add	 esp, 4
  000ae	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000b1	eb 16		 jmp	 SHORT $LN38@operator
$LN39@operator:

; 240  :         }
; 241  :     }
; 242  : #endif // defined(_M_IX86) || defined(_M_X64)
; 243  : 
; 244  :     if (_Bytes != 0) {

  000b3	85 d2		 test	 edx, edx
  000b5	74 10		 je	 SHORT $LN40@operator

; 87   :         return ::operator new(_Bytes);

  000b7	52		 push	 edx
  000b8	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 245  :         return _Traits::_Allocate(_Bytes);

  000bd	8b d8		 mov	 ebx, eax

; 87   :         return ::operator new(_Bytes);

  000bf	83 c4 04	 add	 esp, 4

; 245  :         return _Traits::_Allocate(_Bytes);

  000c2	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000c5	eb 02		 jmp	 SHORT $LN38@operator
$LN40@operator:

; 246  :     }
; 247  : 
; 248  :     return nullptr;

  000c7	33 db		 xor	 ebx, ebx
$LN38@operator:
  000c9	8b 55 fc	 mov	 edx, DWORD PTR __Left_size$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2798 :             _Construct_in_place(_My_data._Bx._Ptr, _Fancyptr);

  000cc	89 18		 mov	 DWORD PTR [eax], ebx
$LN16@operator:

; 2799 : 
; 2800 :             _Start_element_lifetimes(_Ptr, _New_capacity + 1);
; 2801 :         }
; 2802 : 
; 2803 :         _My_data._Mysize = _New_size;

  000ce	8d 0c 16	 lea	 ecx, DWORD PTR [esi+edx]

; 2804 :         _My_data._Myres  = _New_capacity;

  000d1	89 78 14	 mov	 DWORD PTR [eax+20], edi

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000d4	52		 push	 edx

; 2803 :         _My_data._Mysize = _New_size;

  000d5	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000d8	8b 4d 0c	 mov	 ecx, DWORD PTR __Left$[ebp]
  000db	51		 push	 ecx
  000dc	53		 push	 ebx
  000dd	e8 00 00 00 00	 call	 _memcpy

; 2806 :         _Traits::copy(_Ptr + static_cast<ptrdiff_t>(_Left_size), _Right_ptr, _Right_size);

  000e2	8b 4d fc	 mov	 ecx, DWORD PTR __Left_size$1$[ebp]

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000e5	56		 push	 esi
  000e6	ff 75 10	 push	 DWORD PTR __Right$[ebp]

; 2806 :         _Traits::copy(_Ptr + static_cast<ptrdiff_t>(_Left_size), _Right_ptr, _Right_size);

  000e9	03 cb		 add	 ecx, ebx

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000eb	51		 push	 ecx
  000ec	e8 00 00 00 00	 call	 _memcpy

; 2807 :         _Traits::assign(_Ptr[_New_size], _Elem());

  000f1	8b 45 f8	 mov	 eax, DWORD PTR __New_size$1$[ebp]

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000f4	83 c4 18	 add	 esp, 24			; 00000018H

; 2807 :         _Traits::assign(_Ptr[_New_size], _Elem());

  000f7	c6 04 03 00	 mov	 BYTE PTR [ebx+eax], 0

; 4942 :     }
; 4943 : 
; 4944 :     return {_String_constructor_concat_tag{}, _Left, _Left.c_str(), _Left_size, _Right, _Right_size};

  000fb	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000fe	5b		 pop	 ebx

; 4945 : }

  000ff	5f		 pop	 edi
  00100	5e		 pop	 esi
  00101	8b e5		 mov	 esp, ebp
  00103	5d		 pop	 ebp
  00104	c3		 ret	 0
$LN54@operator:

; 4941 :         _Xlen_string();

  00105	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN52@operator:
  0010a	cc		 int	 3
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCDragButton@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCDragButton@UI@@UAEPAXI@Z PROC			; UI::CDragButton::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CDragButton@UI@@UAE@XZ ; UI::CDragButton::~CDragButton
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 1c 01 00 00	 push	 284			; 0000011cH
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCDragButton@UI@@UAEPAXI@Z ENDP			; UI::CDragButton::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverOut@CDragButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnMouseOverOut@CDragButton@UI@@MAEXXZ PROC		; UI::CDragButton::OnMouseOverOut, COMDAT
; _this$ = ecx

; 2035 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2036 : 		if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 1d		 je	 SHORT $LN1@OnMouseOve

; 2037 : 			return;
; 2038 : 
; 2039 : 		CButton::OnMouseOverIn();

  0000c	8b ce		 mov	 ecx, esi
  0000e	e8 00 00 00 00	 call	 ?OnMouseOverIn@CButton@UI@@MAEXXZ ; UI::CButton::OnMouseOverIn

; 2040 : 		PyCallClassMemberFunc(m_poHandler, "OnMouseOverOut", BuildEmptyTuple());

  00013	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00018	50		 push	 eax
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KLLBNOAI@OnMouseOverOut@
  0001e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00021	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00026	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnMouseOve:

; 2041 : 	}

  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
?OnMouseOverOut@CDragButton@UI@@MAEXXZ ENDP		; UI::CDragButton::OnMouseOverOut
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverIn@CDragButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnMouseOverIn@CDragButton@UI@@MAEXXZ PROC		; UI::CDragButton::OnMouseOverIn, COMDAT
; _this$ = ecx

; 2025 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2026 : 		if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 1d		 je	 SHORT $LN1@OnMouseOve

; 2027 : 
; 2028 : 			return;
; 2029 : 
; 2030 : 		CButton::OnMouseOverIn();

  0000c	8b ce		 mov	 ecx, esi
  0000e	e8 00 00 00 00	 call	 ?OnMouseOverIn@CButton@UI@@MAEXXZ ; UI::CButton::OnMouseOverIn

; 2031 : 		PyCallClassMemberFunc(m_poHandler, "OnMouseOverIn", BuildEmptyTuple());

  00013	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00018	50		 push	 eax
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0O@JKDAFDCC@OnMouseOverIn@
  0001e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00021	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00026	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnMouseOve:

; 2032 : 	}

  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
?OnMouseOverIn@CDragButton@UI@@MAEXXZ ENDP		; UI::CDragButton::OnMouseOverIn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnChangePosition@CDragButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnChangePosition@CDragButton@UI@@MAEXXZ PROC		; UI::CDragButton::OnChangePosition, COMDAT
; _this$ = ecx

; 1996 : 	{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx

; 1997 : 		m_x = max(m_x, m_restrictArea.left);

  00005	8b 87 0c 01 00
	00		 mov	 eax, DWORD PTR [edi+268]
  0000b	8b 57 24	 mov	 edx, DWORD PTR [edi+36]
  0000e	3b d0		 cmp	 edx, eax

; 1998 : 		m_y = max(m_y, m_restrictArea.top);

  00010	8b 4f 28	 mov	 ecx, DWORD PTR [edi+40]

; 1999 : 		m_x = min(m_x, max(0, m_restrictArea.right - m_lWidth));

  00013	8b b7 14 01 00
	00		 mov	 esi, DWORD PTR [edi+276]
  00019	0f 4e d0	 cmovle	 edx, eax
  0001c	8b 87 10 01 00
	00		 mov	 eax, DWORD PTR [edi+272]
  00022	3b c8		 cmp	 ecx, eax
  00024	0f 4e c8	 cmovle	 ecx, eax
  00027	2b 77 2c	 sub	 esi, DWORD PTR [edi+44]
  0002a	b8 00 00 00 00	 mov	 eax, 0
  0002f	0f 49 c6	 cmovns	 eax, esi
  00032	3b d0		 cmp	 edx, eax
  00034	7c 09		 jl	 SHORT $LN12@OnChangePo
  00036	33 c0		 xor	 eax, eax
  00038	8b d6		 mov	 edx, esi
  0003a	85 f6		 test	 esi, esi
  0003c	0f 48 d0	 cmovs	 edx, eax
$LN12@OnChangePo:

; 2000 : 		m_y = min(m_y, max(0, m_restrictArea.bottom - m_lHeight));

  0003f	8b b7 18 01 00
	00		 mov	 esi, DWORD PTR [edi+280]
  00045	b8 00 00 00 00	 mov	 eax, 0
  0004a	8b 5f 30	 mov	 ebx, DWORD PTR [edi+48]
  0004d	2b f3		 sub	 esi, ebx
  0004f	89 57 24	 mov	 DWORD PTR [edi+36], edx
  00052	0f 49 c6	 cmovns	 eax, esi
  00055	3b c8		 cmp	 ecx, eax
  00057	7c 09		 jl	 SHORT $LN18@OnChangePo
  00059	33 c0		 xor	 eax, eax
  0005b	8b ce		 mov	 ecx, esi
  0005d	85 f6		 test	 esi, esi
  0005f	0f 48 c8	 cmovs	 ecx, eax
$LN18@OnChangePo:

; 2001 : 
; 2002 : 		m_rect.left = m_x;
; 2003 : 		m_rect.top = m_y;
; 2004 : 
; 2005 : 		if (m_pParent)

  00062	8b 77 60	 mov	 esi, DWORD PTR [edi+96]
  00065	89 4f 28	 mov	 DWORD PTR [edi+40], ecx
  00068	89 57 34	 mov	 DWORD PTR [edi+52], edx
  0006b	89 4f 38	 mov	 DWORD PTR [edi+56], ecx
  0006e	85 f6		 test	 esi, esi
  00070	74 0c		 je	 SHORT $LN2@OnChangePo

; 2006 : 		{
; 2007 : 			const RECT & c_rRect = m_pParent->GetRect();
; 2008 : 			m_rect.left += c_rRect.left;

  00072	03 56 34	 add	 edx, DWORD PTR [esi+52]
  00075	89 57 34	 mov	 DWORD PTR [edi+52], edx

; 2009 : 			m_rect.top += c_rRect.top;

  00078	03 4e 38	 add	 ecx, DWORD PTR [esi+56]
  0007b	89 4f 38	 mov	 DWORD PTR [edi+56], ecx
$LN2@OnChangePo:

; 2010 : 		}
; 2011 : 
; 2012 : 		m_rect.right = m_rect.left + m_lWidth;

  0007e	8b 47 2c	 mov	 eax, DWORD PTR [edi+44]
  00081	03 c2		 add	 eax, edx
  00083	89 47 3c	 mov	 DWORD PTR [edi+60], eax

; 2013 : 		m_rect.bottom = m_rect.top + m_lHeight;

  00086	8d 04 0b	 lea	 eax, DWORD PTR [ebx+ecx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00089	8b 5f 64	 mov	 ebx, DWORD PTR [edi+100]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 2013 : 		m_rect.bottom = m_rect.top + m_lHeight;

  0008c	89 47 40	 mov	 DWORD PTR [edi+64], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0008f	8b 33		 mov	 esi, DWORD PTR [ebx]

; 73   :         return _Ptr == _Right._Ptr;

  00091	3b f3		 cmp	 esi, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00093	74 0e		 je	 SHORT $LN44@OnChangePo
$LL88@OnChangePo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 1768 :         return ((*static_cast<_Ty1&&>(_Arg1)).*_Obj)(static_cast<_Types2&&>(_Args2)...);

  00095	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00098	e8 00 00 00 00	 call	 ?UpdateRect@CWindow@UI@@QAEJXZ ; UI::CWindow::UpdateRect
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 51   :         _Ptr = _Ptr->_Next;

  0009d	8b 36		 mov	 esi, DWORD PTR [esi]

; 73   :         return _Ptr == _Right._Ptr;

  0009f	3b f3		 cmp	 esi, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  000a1	75 f2		 jne	 SHORT $LL88@OnChangePo
$LN44@OnChangePo:
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 2017 : 		if (m_pcurVisual)

  000a3	8b 8f 88 00 00
	00		 mov	 ecx, DWORD PTR [edi+136]
  000a9	85 c9		 test	 ecx, ecx
  000ab	74 23		 je	 SHORT $LN3@OnChangePo

; 2018 : 			m_pcurVisual->SetPosition(m_rect.left, m_rect.top);

  000ad	66 0f 6e 47 38	 movd	 xmm0, DWORD PTR [edi+56]
  000b2	83 ec 08	 sub	 esp, 8
  000b5	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000b8	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000be	66 0f 6e 47 34	 movd	 xmm0, DWORD PTR [edi+52]
  000c3	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000c6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000cb	e8 00 00 00 00	 call	 ?SetPosition@CGraphicImageInstance@@QAEXMM@Z ; CGraphicImageInstance::SetPosition
$LN3@OnChangePo:

; 2019 : 
; 2020 : 		if (IsPressed())

  000d0	8b cf		 mov	 ecx, edi
  000d2	e8 00 00 00 00	 call	 ?IsPressed@CButton@UI@@QAEHXZ ; UI::CButton::IsPressed
  000d7	85 c0		 test	 eax, eax
  000d9	74 16		 je	 SHORT $LN4@OnChangePo

; 2021 : 			PyCallClassMemberFunc(m_poHandler, "OnMove", BuildEmptyTuple());

  000db	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  000e0	50		 push	 eax
  000e1	68 00 00 00 00	 push	 OFFSET ??_C@_06GJPOLLJG@OnMove@
  000e6	ff 77 5c	 push	 DWORD PTR [edi+92]
  000e9	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  000ee	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@OnChangePo:

; 2022 : 	}

  000f1	5f		 pop	 edi
  000f2	5e		 pop	 esi
  000f3	5b		 pop	 ebx
  000f4	c3		 ret	 0
?OnChangePosition@CDragButton@UI@@MAEXXZ ENDP		; UI::CDragButton::OnChangePosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRestrictMovementArea@CDragButton@UI@@QAEXHHHH@Z
_TEXT	SEGMENT
_ix$ = 8						; size = 4
_iy$ = 12						; size = 4
_iwidth$ = 16						; size = 4
_iheight$ = 20						; size = 4
?SetRestrictMovementArea@CDragButton@UI@@QAEXHHHH@Z PROC ; UI::CDragButton::SetRestrictMovementArea, COMDAT
; _this$ = ecx

; 1988 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1989 : 		m_restrictArea.left = ix;

  00003	8b 55 08	 mov	 edx, DWORD PTR _ix$[ebp]

; 1990 : 		m_restrictArea.top = iy;
; 1991 : 		m_restrictArea.right = ix + iwidth;

  00006	8b 45 10	 mov	 eax, DWORD PTR _iwidth$[ebp]
  00009	03 c2		 add	 eax, edx
  0000b	89 91 0c 01 00
	00		 mov	 DWORD PTR [ecx+268], edx
  00011	89 81 14 01 00
	00		 mov	 DWORD PTR [ecx+276], eax

; 1992 : 		m_restrictArea.bottom = iy + iheight;

  00017	8b 45 14	 mov	 eax, DWORD PTR _iheight$[ebp]
  0001a	56		 push	 esi
  0001b	8b 75 0c	 mov	 esi, DWORD PTR _iy$[ebp]
  0001e	03 c6		 add	 eax, esi
  00020	89 b1 10 01 00
	00		 mov	 DWORD PTR [ecx+272], esi
  00026	89 81 18 01 00
	00		 mov	 DWORD PTR [ecx+280], eax
  0002c	5e		 pop	 esi

; 1993 : 	}

  0002d	5d		 pop	 ebp
  0002e	c2 10 00	 ret	 16			; 00000010H
?SetRestrictMovementArea@CDragButton@UI@@QAEXHHHH@Z ENDP ; UI::CDragButton::SetRestrictMovementArea
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CDragButton@UI@@UAE@XZ
_TEXT	SEGMENT
??1CDragButton@UI@@UAE@XZ PROC				; UI::CDragButton::~CDragButton, COMDAT
; _this$ = ecx

; 1984 : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CDragButton@UI@@6B@

; 1985 : 	}

  00006	e9 00 00 00 00	 jmp	 ??1CButton@UI@@UAE@XZ	; UI::CButton::~CButton
??1CDragButton@UI@@UAE@XZ ENDP				; UI::CDragButton::~CDragButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.h
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CDragButton@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CDragButton@UI@@QAE@PAU_object@@@Z PROC		; UI::CDragButton::CDragButton, COMDAT
; _this$ = ecx

; 1976 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CButton@UI@@QAE@PAU_object@@@Z ; UI::CButton::CButton
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.h

; 99   : 			void			RemoveFlag(DWORD flag)	{ REMOVE_BIT(m_dwFlag, flag);	}

  00012	81 66 58 7f ff
	ff ff		 and	 DWORD PTR [esi+88], -129 ; ffffff7fH
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1976 : 	{

  00019	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CDragButton@UI@@6B@

; 1977 : 		CWindow::RemoveFlag(CWindow::FLAG_NOT_CAPTURE);
; 1978 : 		m_restrictArea.left = 0;

  0001f	c7 86 0c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+268], 0

; 1979 : 		m_restrictArea.top = 0;

  00029	c7 86 10 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+272], 0

; 1980 : 		m_restrictArea.right = CWindowManager::Instance().GetScreenWidth();

  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00038	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0003b	89 86 14 01 00
	00		 mov	 DWORD PTR [esi+276], eax

; 1981 : 		m_restrictArea.bottom = CWindowManager::Instance().GetScreenHeight();

  00041	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00046	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00049	89 86 18 01 00
	00		 mov	 DWORD PTR [esi+280], eax

; 1982 : 	}

  0004f	8b c6		 mov	 eax, esi
  00051	5e		 pop	 esi
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
??0CDragButton@UI@@QAE@PAU_object@@@Z ENDP		; UI::CDragButton::CDragButton
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCToggleButton@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCToggleButton@UI@@UAEPAXI@Z PROC			; UI::CToggleButton::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CToggleButton@UI@@UAE@XZ ; UI::CToggleButton::~CToggleButton
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 0c 01 00 00	 push	 268			; 0000010cH
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCToggleButton@UI@@UAEPAXI@Z ENDP			; UI::CToggleButton::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverOut@CToggleButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnMouseOverOut@CToggleButton@UI@@MAEXXZ PROC		; UI::CToggleButton::OnMouseOverOut, COMDAT
; _this$ = ecx

; 1959 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1960 : 		if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 2d		 je	 SHORT $LN1@OnMouseOve

; 1961 : 			return;
; 1962 : 
; 1963 : 		if (!m_isPressed)

  0000c	83 be 80 00 00
	00 00		 cmp	 DWORD PTR [esi+128], 0
  00013	75 0e		 jne	 SHORT $LN3@OnMouseOve

; 1964 : 		{
; 1965 : 			SetCurrentVisual(&m_upVisual);

  00015	8d 86 8c 00 00
	00		 lea	 eax, DWORD PTR [esi+140]
  0001b	8b ce		 mov	 ecx, esi
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual
$LN3@OnMouseOve:

; 1966 : 		}
; 1967 : 
; 1968 : 		PyCallClassMemberFunc(m_poHandler, "HideToolTip", BuildEmptyTuple());

  00023	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00028	50		 push	 eax
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0M@HCIAMHJN@HideToolTip@
  0002e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00031	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnMouseOve:

; 1969 : 	}

  00039	5e		 pop	 esi
  0003a	c3		 ret	 0
?OnMouseOverOut@CToggleButton@UI@@MAEXXZ ENDP		; UI::CToggleButton::OnMouseOverOut
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverIn@CToggleButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnMouseOverIn@CToggleButton@UI@@MAEXXZ PROC		; UI::CToggleButton::OnMouseOverIn, COMDAT
; _this$ = ecx

; 1947 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1948 : 		if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 2d		 je	 SHORT $LN1@OnMouseOve

; 1949 : 			return;
; 1950 : 
; 1951 : 		if (!m_isPressed)

  0000c	83 be 80 00 00
	00 00		 cmp	 DWORD PTR [esi+128], 0
  00013	75 0e		 jne	 SHORT $LN3@OnMouseOve

; 1952 : 		{
; 1953 : 			SetCurrentVisual(&m_overVisual);

  00015	8d 86 ac 00 00
	00		 lea	 eax, DWORD PTR [esi+172]
  0001b	8b ce		 mov	 ecx, esi
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual
$LN3@OnMouseOve:

; 1954 : 		}
; 1955 : 
; 1956 : 		PyCallClassMemberFunc(m_poHandler, "ShowToolTip", BuildEmptyTuple());

  00023	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00028	50		 push	 eax
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0M@LEFCMAKP@ShowToolTip@
  0002e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00031	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnMouseOve:

; 1957 : 	}

  00039	5e		 pop	 esi
  0003a	c3		 ret	 0
?OnMouseOverIn@CToggleButton@UI@@MAEXXZ ENDP		; UI::CToggleButton::OnMouseOverIn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonUp@CToggleButton@UI@@MAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonUp@CToggleButton@UI@@MAEHXZ PROC	; UI::CToggleButton::OnMouseLeftButtonUp, COMDAT
; _this$ = ecx

; 1943 : 		return TRUE;

  00000	b8 01 00 00 00	 mov	 eax, 1

; 1944 : 	}

  00005	c3		 ret	 0
?OnMouseLeftButtonUp@CToggleButton@UI@@MAEHXZ ENDP	; UI::CToggleButton::OnMouseLeftButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonDown@CToggleButton@UI@@MAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonDown@CToggleButton@UI@@MAEHXZ PROC	; UI::CToggleButton::OnMouseLeftButtonDown, COMDAT
; _this$ = ecx

; 1920 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1921 : 		if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 51		 je	 SHORT $LN10@OnMouseLef

; 1922 : 			return TRUE;
; 1923 : 
; 1924 : 		if (m_isPressed)

  0000c	83 be 80 00 00
	00 00		 cmp	 DWORD PTR [esi+128], 0
  00013	8b ce		 mov	 ecx, esi
  00015	57		 push	 edi
  00016	74 28		 je	 SHORT $LN3@OnMouseLef

; 1925 : 		{
; 1926 : 			SetUp();

  00018	e8 00 00 00 00	 call	 ?SetUp@CButton@UI@@QAEXXZ ; UI::CButton::SetUp

; 1927 : 			if (IsIn())

  0001d	8b ce		 mov	 ecx, esi
  0001f	e8 00 00 00 00	 call	 ?IsIn@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsIn

; 1928 : 				SetCurrentVisual(&m_overVisual);
; 1929 : 			else
; 1930 : 				SetCurrentVisual(&m_upVisual);
; 1931 : 			PyCallClassMemberFunc(m_poHandler, "OnToggleUp", BuildEmptyTuple());

  00024	0f b6 c0	 movzx	 eax, al
  00027	8b ce		 mov	 ecx, esi
  00029	c1 e0 05	 shl	 eax, 5
  0002c	05 8c 00 00 00	 add	 eax, 140		; 0000008cH
  00031	03 c6		 add	 eax, esi
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual
  00039	bf 00 00 00 00	 mov	 edi, OFFSET ??_C@_0L@HGABHAMN@OnToggleUp@

; 1932 : 		}

  0003e	eb 0a		 jmp	 SHORT $LN4@OnMouseLef
$LN3@OnMouseLef:

; 1933 : 		else
; 1934 : 		{
; 1935 : 			Down();

  00040	e8 00 00 00 00	 call	 ?Down@CButton@UI@@QAEXXZ ; UI::CButton::Down

; 1936 : 			PyCallClassMemberFunc(m_poHandler, "OnToggleDown", BuildEmptyTuple());

  00045	bf 00 00 00 00	 mov	 edi, OFFSET ??_C@_0N@NBGLGPDJ@OnToggleDown@
$LN4@OnMouseLef:

; 1937 : 		}
; 1938 : 
; 1939 : 		return TRUE;

  0004a	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  0004f	50		 push	 eax
  00050	57		 push	 edi
  00051	ff 76 5c	 push	 DWORD PTR [esi+92]
  00054	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00059	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005c	5f		 pop	 edi
$LN10@OnMouseLef:

; 1940 : 	}

  0005d	b8 01 00 00 00	 mov	 eax, 1
  00062	5e		 pop	 esi
  00063	c3		 ret	 0
?OnMouseLeftButtonDown@CToggleButton@UI@@MAEHXZ ENDP	; UI::CToggleButton::OnMouseLeftButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CToggleButton@UI@@UAE@XZ
_TEXT	SEGMENT
??1CToggleButton@UI@@UAE@XZ PROC			; UI::CToggleButton::~CToggleButton, COMDAT
; _this$ = ecx

; 1916 : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CToggleButton@UI@@6B@

; 1917 : 	}

  00006	e9 00 00 00 00	 jmp	 ??1CButton@UI@@UAE@XZ	; UI::CButton::~CButton
??1CToggleButton@UI@@UAE@XZ ENDP			; UI::CToggleButton::~CToggleButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CToggleButton@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CToggleButton@UI@@QAE@PAU_object@@@Z PROC		; UI::CToggleButton::CToggleButton, COMDAT
; _this$ = ecx

; 1913 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CButton@UI@@QAE@PAU_object@@@Z ; UI::CButton::CButton
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CToggleButton@UI@@6B@

; 1914 : 	}

  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0CToggleButton@UI@@QAE@PAU_object@@@Z ENDP		; UI::CToggleButton::CToggleButton
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCRadioButton@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCRadioButton@UI@@UAEPAXI@Z PROC			; UI::CRadioButton::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CRadioButton@UI@@UAE@XZ ; UI::CRadioButton::~CRadioButton
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 0c 01 00 00	 push	 268			; 0000010cH
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCRadioButton@UI@@UAEPAXI@Z ENDP			; UI::CRadioButton::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverOut@CRadioButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnMouseOverOut@CRadioButton@UI@@MAEXXZ PROC		; UI::CRadioButton::OnMouseOverOut, COMDAT
; _this$ = ecx

; 1896 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1897 : 		if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 2d		 je	 SHORT $LN1@OnMouseOve

; 1898 : 			return;
; 1899 : 
; 1900 : 		if (!m_isPressed)

  0000c	83 be 80 00 00
	00 00		 cmp	 DWORD PTR [esi+128], 0
  00013	75 0e		 jne	 SHORT $LN3@OnMouseOve

; 1901 : 		{
; 1902 : 			SetCurrentVisual(&m_upVisual);

  00015	8d 86 8c 00 00
	00		 lea	 eax, DWORD PTR [esi+140]
  0001b	8b ce		 mov	 ecx, esi
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual
$LN3@OnMouseOve:

; 1903 : 		}
; 1904 : 
; 1905 : 		PyCallClassMemberFunc(m_poHandler, "HideToolTip", BuildEmptyTuple());

  00023	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00028	50		 push	 eax
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0M@HCIAMHJN@HideToolTip@
  0002e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00031	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnMouseOve:

; 1906 : 	}

  00039	5e		 pop	 esi
  0003a	c3		 ret	 0
?OnMouseOverOut@CRadioButton@UI@@MAEXXZ ENDP		; UI::CRadioButton::OnMouseOverOut
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverIn@CRadioButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnMouseOverIn@CRadioButton@UI@@MAEXXZ PROC		; UI::CRadioButton::OnMouseOverIn, COMDAT
; _this$ = ecx

; 1884 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1885 : 		if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 2d		 je	 SHORT $LN1@OnMouseOve

; 1886 : 			return;
; 1887 : 
; 1888 : 		if (!m_isPressed)

  0000c	83 be 80 00 00
	00 00		 cmp	 DWORD PTR [esi+128], 0
  00013	75 0e		 jne	 SHORT $LN3@OnMouseOve

; 1889 : 		{
; 1890 : 			SetCurrentVisual(&m_overVisual);

  00015	8d 86 ac 00 00
	00		 lea	 eax, DWORD PTR [esi+172]
  0001b	8b ce		 mov	 ecx, esi
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual
$LN3@OnMouseOve:

; 1891 : 		}
; 1892 : 
; 1893 : 		PyCallClassMemberFunc(m_poHandler, "ShowToolTip", BuildEmptyTuple());

  00023	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00028	50		 push	 eax
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0M@LEFCMAKP@ShowToolTip@
  0002e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00031	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnMouseOve:

; 1894 : 	}

  00039	5e		 pop	 esi
  0003a	c3		 ret	 0
?OnMouseOverIn@CRadioButton@UI@@MAEXXZ ENDP		; UI::CRadioButton::OnMouseOverIn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonUp@CRadioButton@UI@@MAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonUp@CRadioButton@UI@@MAEHXZ PROC	; UI::CRadioButton::OnMouseLeftButtonUp, COMDAT
; _this$ = ecx

; 1881 : 		return TRUE;

  00000	b8 01 00 00 00	 mov	 eax, 1

; 1882 : 	}

  00005	c3		 ret	 0
?OnMouseLeftButtonUp@CRadioButton@UI@@MAEHXZ ENDP	; UI::CRadioButton::OnMouseLeftButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonDown@CRadioButton@UI@@MAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonDown@CRadioButton@UI@@MAEHXZ PROC	; UI::CRadioButton::OnMouseLeftButtonDown, COMDAT
; _this$ = ecx

; 1867 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1868 : 		if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 26		 je	 SHORT $LN7@OnMouseLef

; 1869 : 			return TRUE;
; 1870 : 
; 1871 : 		if (!m_isPressed)

  0000c	83 be 80 00 00
	00 00		 cmp	 DWORD PTR [esi+128], 0
  00013	75 1d		 jne	 SHORT $LN7@OnMouseLef

; 1872 : 		{
; 1873 : 			Down();

  00015	8b ce		 mov	 ecx, esi
  00017	e8 00 00 00 00	 call	 ?Down@CButton@UI@@QAEXXZ ; UI::CButton::Down

; 1874 : 			PyCallClassMemberFunc(m_poHandler, "CallEvent", BuildEmptyTuple());

  0001c	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00021	50		 push	 eax
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_09MFFHPOPB@CallEvent@
  00027	ff 76 5c	 push	 DWORD PTR [esi+92]
  0002a	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  0002f	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@OnMouseLef:

; 1875 : 		}
; 1876 : 
; 1877 : 		return TRUE;
; 1878 : 	}

  00032	b8 01 00 00 00	 mov	 eax, 1
  00037	5e		 pop	 esi
  00038	c3		 ret	 0
?OnMouseLeftButtonDown@CRadioButton@UI@@MAEHXZ ENDP	; UI::CRadioButton::OnMouseLeftButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CRadioButton@UI@@UAE@XZ
_TEXT	SEGMENT
??1CRadioButton@UI@@UAE@XZ PROC				; UI::CRadioButton::~CRadioButton, COMDAT
; _this$ = ecx

; 1863 : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CRadioButton@UI@@6B@

; 1864 : 	}

  00006	e9 00 00 00 00	 jmp	 ??1CButton@UI@@UAE@XZ	; UI::CButton::~CButton
??1CRadioButton@UI@@UAE@XZ ENDP				; UI::CRadioButton::~CRadioButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CRadioButton@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CRadioButton@UI@@QAE@PAU_object@@@Z PROC		; UI::CRadioButton::CRadioButton, COMDAT
; _this$ = ecx

; 1860 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CButton@UI@@QAE@PAU_object@@@Z ; UI::CButton::CButton
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CRadioButton@UI@@6B@

; 1861 : 	}

  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0CRadioButton@UI@@QAE@PAU_object@@@Z ENDP		; UI::CRadioButton::CRadioButton
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCButton@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCButton@UI@@UAEPAXI@Z PROC				; UI::CButton::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CButton@UI@@UAE@XZ	; UI::CButton::~CButton
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 0c 01 00 00	 push	 268			; 0000010cH
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCButton@UI@@UAEPAXI@Z ENDP				; UI::CButton::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z
_TEXT	SEGMENT
_pVisual$ = 8						; size = 4
?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z PROC ; UI::CButton::SetCurrentVisual, COMDAT
; _this$ = ecx

; 1840 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	66 0f 6e 41 38	 movd	 xmm0, DWORD PTR [ecx+56]

; 1841 : 		m_pcurVisual = pVisual;
; 1842 : 		m_pcurVisual->SetPosition(m_rect.left, m_rect.top);

  00008	83 ec 08	 sub	 esp, 8
  0000b	8b 45 08	 mov	 eax, DWORD PTR _pVisual$[ebp]
  0000e	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00011	89 81 88 00 00
	00		 mov	 DWORD PTR [ecx+136], eax
  00017	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0001d	66 0f 6e 41 34	 movd	 xmm0, DWORD PTR [ecx+52]
  00022	8b c8		 mov	 ecx, eax
  00024	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00027	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0002c	e8 00 00 00 00	 call	 ?SetPosition@CGraphicImageInstance@@QAEXMM@Z ; CGraphicImageInstance::SetPosition

; 1843 : 	}

  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ENDP ; UI::CButton::SetCurrentVisual
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?IsEnable@CButton@UI@@IAEHXZ
_TEXT	SEGMENT
?IsEnable@CButton@UI@@IAEHXZ PROC			; UI::CButton::IsEnable, COMDAT
; _this$ = ecx

; 1847 : 		return m_bEnable;

  00000	8b 41 7c	 mov	 eax, DWORD PTR [ecx+124]

; 1848 : 	}

  00003	c3		 ret	 0
?IsEnable@CButton@UI@@IAEHXZ ENDP			; UI::CButton::IsEnable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverOut@CButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnMouseOverOut@CButton@UI@@MAEXXZ PROC			; UI::CButton::OnMouseOverOut, COMDAT
; _this$ = ecx

; 1831 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1832 : 		if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 1d		 je	 SHORT $LN1@OnMouseOve

; 1833 : 			return;
; 1834 : 
; 1835 : 		SetUp();

  0000c	8b ce		 mov	 ecx, esi
  0000e	e8 00 00 00 00	 call	 ?SetUp@CButton@UI@@QAEXXZ ; UI::CButton::SetUp

; 1836 : 		PyCallClassMemberFunc(m_poHandler, "HideToolTip", BuildEmptyTuple());

  00013	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00018	50		 push	 eax
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0M@HCIAMHJN@HideToolTip@
  0001e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00021	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00026	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnMouseOve:

; 1837 : 	}

  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
?OnMouseOverOut@CButton@UI@@MAEXXZ ENDP			; UI::CButton::OnMouseOverOut
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverIn@CButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnMouseOverIn@CButton@UI@@MAEXXZ PROC			; UI::CButton::OnMouseOverIn, COMDAT
; _this$ = ecx

; 1823 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1824 : 		if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 1d		 je	 SHORT $LN1@OnMouseOve

; 1825 : 			return;
; 1826 : 
; 1827 : 		Over();

  0000c	8b ce		 mov	 ecx, esi
  0000e	e8 00 00 00 00	 call	 ?Over@CButton@UI@@QAEXXZ ; UI::CButton::Over

; 1828 : 		PyCallClassMemberFunc(m_poHandler, "ShowToolTip", BuildEmptyTuple());

  00013	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00018	50		 push	 eax
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0M@LEFCMAKP@ShowToolTip@
  0001e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00021	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00026	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnMouseOve:

; 1829 : 	}

  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
?OnMouseOverIn@CButton@UI@@MAEXXZ ENDP			; UI::CButton::OnMouseOverIn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonUp@CButton@UI@@MAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonUp@CButton@UI@@MAEHXZ PROC		; UI::CButton::OnMouseLeftButtonUp, COMDAT
; _this$ = ecx

; 1811 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1812 : 		if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 1c		 je	 SHORT $LN5@OnMouseLef

; 1813 : 			return TRUE;
; 1814 : 		if (!IsPressed())

  0000c	8b ce		 mov	 ecx, esi
  0000e	e8 00 00 00 00	 call	 ?IsPressed@CButton@UI@@QAEHXZ ; UI::CButton::IsPressed
  00013	85 c0		 test	 eax, eax
  00015	74 11		 je	 SHORT $LN5@OnMouseLef

; 1815 : 			return TRUE;
; 1816 : 
; 1817 : 		m_isPressed = FALSE;
; 1818 : 		Up();

  00017	8b ce		 mov	 ecx, esi
  00019	c7 86 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+128], 0
  00023	e8 00 00 00 00	 call	 ?Up@CButton@UI@@QAEXXZ	; UI::CButton::Up
$LN5@OnMouseLef:

; 1819 : 
; 1820 : 		return TRUE;
; 1821 : 	}

  00028	b8 01 00 00 00	 mov	 eax, 1
  0002d	5e		 pop	 esi
  0002e	c3		 ret	 0
?OnMouseLeftButtonUp@CButton@UI@@MAEHXZ ENDP		; UI::CButton::OnMouseLeftButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ PROC	; UI::CButton::OnMouseLeftButtonDoubleClick, COMDAT
; _this$ = ecx

; 1802 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1803 : 		if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 07		 je	 SHORT $LN5@OnMouseLef

; 1804 : 			return TRUE;
; 1805 : 
; 1806 : 		OnMouseLeftButtonDown();

  0000c	8b 06		 mov	 eax, DWORD PTR [esi]
  0000e	8b ce		 mov	 ecx, esi
  00010	ff 50 58	 call	 DWORD PTR [eax+88]
$LN5@OnMouseLef:

; 1807 : 
; 1808 : 		return TRUE;
; 1809 : 	}

  00013	b8 01 00 00 00	 mov	 eax, 1
  00018	5e		 pop	 esi
  00019	c3		 ret	 0
?OnMouseLeftButtonDoubleClick@CButton@UI@@MAEHXZ ENDP	; UI::CButton::OnMouseLeftButtonDoubleClick
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonDown@CButton@UI@@MAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonDown@CButton@UI@@MAEHXZ PROC		; UI::CButton::OnMouseLeftButtonDown, COMDAT
; _this$ = ecx

; 1792 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1793 : 		if (!IsEnable())

  00003	e8 00 00 00 00	 call	 ?IsEnable@CButton@UI@@IAEHXZ ; UI::CButton::IsEnable
  00008	85 c0		 test	 eax, eax
  0000a	74 11		 je	 SHORT $LN5@OnMouseLef

; 1794 : 			return TRUE;
; 1795 : 
; 1796 : 		m_isPressed = TRUE;
; 1797 : 		Down();

  0000c	8b ce		 mov	 ecx, esi
  0000e	c7 86 80 00 00
	00 01 00 00 00	 mov	 DWORD PTR [esi+128], 1
  00018	e8 00 00 00 00	 call	 ?Down@CButton@UI@@QAEXXZ ; UI::CButton::Down
$LN5@OnMouseLef:

; 1798 : 
; 1799 : 		return TRUE;
; 1800 : 	}

  0001d	b8 01 00 00 00	 mov	 eax, 1
  00022	5e		 pop	 esi
  00023	c3		 ret	 0
?OnMouseLeftButtonDown@CButton@UI@@MAEHXZ ENDP		; UI::CButton::OnMouseLeftButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnChangePosition@CButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnChangePosition@CButton@UI@@MAEXXZ PROC		; UI::CButton::OnChangePosition, COMDAT
; _this$ = ecx

; 1787 : 		if (m_pcurVisual)

  00000	8b 81 88 00 00
	00		 mov	 eax, DWORD PTR [ecx+136]
  00006	85 c0		 test	 eax, eax
  00008	74 25		 je	 SHORT $LN2@OnChangePo

; 1788 : 			m_pcurVisual->SetPosition(m_rect.left, m_rect.top);

  0000a	66 0f 6e 41 38	 movd	 xmm0, DWORD PTR [ecx+56]
  0000f	83 ec 08	 sub	 esp, 8
  00012	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00015	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0001b	66 0f 6e 41 34	 movd	 xmm0, DWORD PTR [ecx+52]
  00020	8b c8		 mov	 ecx, eax
  00022	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00025	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0002a	e8 00 00 00 00	 call	 ?SetPosition@CGraphicImageInstance@@QAEXMM@Z ; CGraphicImageInstance::SetPosition
$LN2@OnChangePo:

; 1789 : 	}

  0002f	c3		 ret	 0
?OnChangePosition@CButton@UI@@MAEXXZ ENDP		; UI::CButton::OnChangePosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CButton@UI@@MAEXXZ PROC			; UI::CButton::OnRender, COMDAT
; _this$ = ecx

; 1767 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1768 : 		if (!IsShow())

  00003	80 7e 55 00	 cmp	 BYTE PTR [esi+85], 0
  00007	74 53		 je	 SHORT $LN1@OnRender

; 1769 : 			return;
; 1770 : 
; 1771 : 		if (m_pcurVisual)

  00009	83 be 88 00 00
	00 00		 cmp	 DWORD PTR [esi+136], 0
  00010	74 34		 je	 SHORT $LN3@OnRender

; 1772 : 		{
; 1773 : 			if (m_isFlash)

  00012	83 be 84 00 00
	00 00		 cmp	 DWORD PTR [esi+132], 0
  00019	74 20		 je	 SHORT $LN6@OnRender

; 1774 : 			if (!IsIn())

  0001b	e8 00 00 00 00	 call	 ?IsIn@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsIn
  00020	84 c0		 test	 al, al
  00022	75 17		 jne	 SHORT $LN6@OnRender

; 1775 : 			if (int(timeGetTime() / 500)%2)

  00024	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__timeGetTime@0
  0002a	8b c8		 mov	 ecx, eax
  0002c	b8 d3 4d 62 10	 mov	 eax, 274877907		; 10624dd3H
  00031	f7 e1		 mul	 ecx
  00033	c1 ea 05	 shr	 edx, 5
  00036	f6 c2 01	 test	 dl, 1
  00039	75 21		 jne	 SHORT $LN1@OnRender
$LN6@OnRender:

; 1776 : 			{
; 1777 : 				return;
; 1778 : 			}
; 1779 : 
; 1780 : 			m_pcurVisual->Render();

  0003b	8b 8e 88 00 00
	00		 mov	 ecx, DWORD PTR [esi+136]
  00041	e8 00 00 00 00	 call	 ?Render@CGraphicImageInstance@@QAEXXZ ; CGraphicImageInstance::Render
$LN3@OnRender:

; 1781 : 		}
; 1782 : 
; 1783 : 		PyCallClassMemberFunc(m_poHandler, "OnRender", BuildEmptyTuple());

  00046	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  0004b	50		 push	 eax
  0004c	68 00 00 00 00	 push	 OFFSET ??_C@_08PAJMEILO@OnRender@
  00051	ff 76 5c	 push	 DWORD PTR [esi+92]
  00054	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00059	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnRender:

; 1784 : 	}

  0005c	5e		 pop	 esi
  0005d	c3		 ret	 0
?OnRender@CButton@UI@@MAEXXZ ENDP			; UI::CButton::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnUpdate@CButton@UI@@MAEXXZ
_TEXT	SEGMENT
?OnUpdate@CButton@UI@@MAEXXZ PROC			; UI::CButton::OnUpdate, COMDAT
; _this$ = ecx

; 1765 : 	}

  00000	c2 00 00	 ret	 0
?OnUpdate@CButton@UI@@MAEXXZ ENDP			; UI::CButton::OnUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?IsPressed@CButton@UI@@QAEHXZ
_TEXT	SEGMENT
?IsPressed@CButton@UI@@QAEHXZ PROC			; UI::CButton::IsPressed, COMDAT
; _this$ = ecx

; 1852 : 		return m_isPressed;

  00000	8b 81 80 00 00
	00		 mov	 eax, DWORD PTR [ecx+128]

; 1853 : 	}

  00006	c3		 ret	 0
?IsPressed@CButton@UI@@QAEHXZ ENDP			; UI::CButton::IsPressed
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?IsDisable@CButton@UI@@QAEHXZ
_TEXT	SEGMENT
?IsDisable@CButton@UI@@QAEHXZ PROC			; UI::CButton::IsDisable, COMDAT
; _this$ = ecx

; 1735 : 		return m_bEnable;

  00000	8b 41 7c	 mov	 eax, DWORD PTR [ecx+124]

; 1736 : 	}

  00003	c3		 ret	 0
?IsDisable@CButton@UI@@QAEHXZ ENDP			; UI::CButton::IsDisable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Down@CButton@UI@@QAEXXZ
_TEXT	SEGMENT
?Down@CButton@UI@@QAEXXZ PROC				; UI::CButton::Down, COMDAT
; _this$ = ecx

; 1757 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1758 : 		m_isPressed = TRUE;
; 1759 : 		SetCurrentVisual(&m_downVisual);

  00003	8d 86 cc 00 00
	00		 lea	 eax, DWORD PTR [esi+204]
  00009	c7 86 80 00 00
	00 01 00 00 00	 mov	 DWORD PTR [esi+128], 1
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual

; 1760 : 		PyCallClassMemberFunc(m_poHandler, "DownEvent", BuildEmptyTuple());

  00019	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  0001e	50		 push	 eax
  0001f	68 00 00 00 00	 push	 OFFSET ??_C@_09FJAHACEO@DownEvent@
  00024	ff 76 5c	 push	 DWORD PTR [esi+92]
  00027	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0002f	5e		 pop	 esi

; 1761 : 	}

  00030	c3		 ret	 0
?Down@CButton@UI@@QAEXXZ ENDP				; UI::CButton::Down
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Over@CButton@UI@@QAEXXZ
_TEXT	SEGMENT
?Over@CButton@UI@@QAEXXZ PROC				; UI::CButton::Over, COMDAT
; _this$ = ecx

; 1754 : 		SetCurrentVisual(&m_overVisual);

  00000	8d 81 ac 00 00
	00		 lea	 eax, DWORD PTR [ecx+172]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual

; 1755 : 	}

  0000c	c3		 ret	 0
?Over@CButton@UI@@QAEXXZ ENDP				; UI::CButton::Over
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Up@CButton@UI@@QAEXXZ
_TEXT	SEGMENT
?Up@CButton@UI@@QAEXXZ PROC				; UI::CButton::Up, COMDAT
; _this$ = ecx

; 1744 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1745 : 		if (IsIn())

  00003	e8 00 00 00 00	 call	 ?IsIn@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsIn

; 1746 : 			SetCurrentVisual(&m_overVisual);
; 1747 : 		else
; 1748 : 			SetCurrentVisual(&m_upVisual);
; 1749 : 
; 1750 : 		PyCallClassMemberFunc(m_poHandler, "CallEvent", BuildEmptyTuple());

  00008	0f b6 c0	 movzx	 eax, al
  0000b	8b ce		 mov	 ecx, esi
  0000d	c1 e0 05	 shl	 eax, 5
  00010	05 8c 00 00 00	 add	 eax, 140		; 0000008cH
  00015	03 c6		 add	 eax, esi
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual
  0001d	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00022	50		 push	 eax
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_09MFFHPOPB@CallEvent@
  00028	ff 76 5c	 push	 DWORD PTR [esi+92]
  0002b	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00030	83 c4 0c	 add	 esp, 12			; 0000000cH
  00033	5e		 pop	 esi

; 1751 : 	}

  00034	c3		 ret	 0
?Up@CButton@UI@@QAEXXZ ENDP				; UI::CButton::Up
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetUp@CButton@UI@@QAEXXZ
_TEXT	SEGMENT
?SetUp@CButton@UI@@QAEXXZ PROC				; UI::CButton::SetUp, COMDAT
; _this$ = ecx

; 1739 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1740 : 		SetCurrentVisual(&m_upVisual);

  00003	8d 86 8c 00 00
	00		 lea	 eax, DWORD PTR [esi+140]
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual

; 1741 : 		m_isPressed = FALSE;

  0000f	c7 86 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+128], 0
  00019	5e		 pop	 esi

; 1742 : 	}

  0001a	c3		 ret	 0
?SetUp@CButton@UI@@QAEXXZ ENDP				; UI::CButton::SetUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Disable@CButton@UI@@QAEXXZ
_TEXT	SEGMENT
?Disable@CButton@UI@@QAEXXZ PROC			; UI::CButton::Disable, COMDAT
; _this$ = ecx

; 1727 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	57		 push	 edi

; 1728 : 		m_bEnable = FALSE;
; 1729 : 		if (!m_disableVisual.IsEmpty())

  00004	8d be ec 00 00
	00		 lea	 edi, DWORD PTR [esi+236]
  0000a	c7 46 7c 00 00
	00 00		 mov	 DWORD PTR [esi+124], 0
  00011	8b cf		 mov	 ecx, edi
  00013	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  00018	84 c0		 test	 al, al
  0001a	75 08		 jne	 SHORT $LN2@Disable

; 1730 : 			SetCurrentVisual(&m_disableVisual);

  0001c	57		 push	 edi
  0001d	8b ce		 mov	 ecx, esi
  0001f	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual
$LN2@Disable:

; 1731 : 	}

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	c3		 ret	 0
?Disable@CButton@UI@@QAEXXZ ENDP			; UI::CButton::Disable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Enable@CButton@UI@@QAEXXZ
_TEXT	SEGMENT
?Enable@CButton@UI@@QAEXXZ PROC				; UI::CButton::Enable, COMDAT
; _this$ = ecx

; 1721 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1722 : 		SetUp();

  00003	e8 00 00 00 00	 call	 ?SetUp@CButton@UI@@QAEXXZ ; UI::CButton::SetUp

; 1723 : 		m_bEnable = TRUE;

  00008	c7 46 7c 01 00
	00 00		 mov	 DWORD PTR [esi+124], 1
  0000f	5e		 pop	 esi

; 1724 : 	}

  00010	c3		 ret	 0
?Enable@CButton@UI@@QAEXXZ ENDP				; UI::CButton::Enable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Flash@CButton@UI@@QAEXXZ
_TEXT	SEGMENT
?Flash@CButton@UI@@QAEXXZ PROC				; UI::CButton::Flash, COMDAT
; _this$ = ecx

; 1717 : 		m_isFlash = TRUE;

  00000	c7 81 84 00 00
	00 01 00 00 00	 mov	 DWORD PTR [ecx+132], 1

; 1718 : 	}

  0000a	c3		 ret	 0
?Flash@CButton@UI@@QAEXXZ ENDP				; UI::CButton::Flash
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetDownVisualFileName@CButton@UI@@QAEPBDXZ
_TEXT	SEGMENT
?GetDownVisualFileName@CButton@UI@@QAEPBDXZ PROC	; UI::CButton::GetDownVisualFileName, COMDAT
; _this$ = ecx

; 1712 : 		return m_downVisual.GetGraphicImagePointer()->GetFileName();

  00000	81 c1 cc 00 00
	00		 add	 ecx, 204		; 000000ccH
  00006	e8 00 00 00 00	 call	 ?GetGraphicImagePointer@CGraphicImageInstance@@QAEPAVCGraphicImage@@XZ ; CGraphicImageInstance::GetGraphicImagePointer
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4107 :         return _Mypair._Myval2._Myptr();

  0000b	83 c0 0c	 add	 eax, 12			; 0000000cH

; 2244 :         return _BUF_SIZE <= _Myres;

  0000e	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2236 :         if (_Large_string_engaged()) {

  00012	72 02		 jb	 SHORT $LN8@GetDownVis
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1712 : 		return m_downVisual.GetGraphicImagePointer()->GetFileName();

  00014	8b 00		 mov	 eax, DWORD PTR [eax]
$LN8@GetDownVis:

; 1713 : 	}

  00016	c3		 ret	 0
?GetDownVisualFileName@CButton@UI@@QAEPBDXZ ENDP	; UI::CButton::GetDownVisualFileName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetOverVisualFileName@CButton@UI@@QAEPBDXZ
_TEXT	SEGMENT
?GetOverVisualFileName@CButton@UI@@QAEPBDXZ PROC	; UI::CButton::GetOverVisualFileName, COMDAT
; _this$ = ecx

; 1708 : 		return m_overVisual.GetGraphicImagePointer()->GetFileName();

  00000	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  00006	e8 00 00 00 00	 call	 ?GetGraphicImagePointer@CGraphicImageInstance@@QAEPAVCGraphicImage@@XZ ; CGraphicImageInstance::GetGraphicImagePointer
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4107 :         return _Mypair._Myval2._Myptr();

  0000b	83 c0 0c	 add	 eax, 12			; 0000000cH

; 2244 :         return _BUF_SIZE <= _Myres;

  0000e	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2236 :         if (_Large_string_engaged()) {

  00012	72 02		 jb	 SHORT $LN8@GetOverVis
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1708 : 		return m_overVisual.GetGraphicImagePointer()->GetFileName();

  00014	8b 00		 mov	 eax, DWORD PTR [eax]
$LN8@GetOverVis:

; 1709 : 	}

  00016	c3		 ret	 0
?GetOverVisualFileName@CButton@UI@@QAEPBDXZ ENDP	; UI::CButton::GetOverVisualFileName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetUpVisualFileName@CButton@UI@@QAEPBDXZ
_TEXT	SEGMENT
?GetUpVisualFileName@CButton@UI@@QAEPBDXZ PROC		; UI::CButton::GetUpVisualFileName, COMDAT
; _this$ = ecx

; 1704 : 		return m_upVisual.GetGraphicImagePointer()->GetFileName();

  00000	81 c1 8c 00 00
	00		 add	 ecx, 140		; 0000008cH
  00006	e8 00 00 00 00	 call	 ?GetGraphicImagePointer@CGraphicImageInstance@@QAEPAVCGraphicImage@@XZ ; CGraphicImageInstance::GetGraphicImagePointer
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4107 :         return _Mypair._Myval2._Myptr();

  0000b	83 c0 0c	 add	 eax, 12			; 0000000cH

; 2244 :         return _BUF_SIZE <= _Myres;

  0000e	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2236 :         if (_Large_string_engaged()) {

  00012	72 02		 jb	 SHORT $LN8@GetUpVisua
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1704 : 		return m_upVisual.GetGraphicImagePointer()->GetFileName();

  00014	8b 00		 mov	 eax, DWORD PTR [eax]
$LN8@GetUpVisua:

; 1705 : 	}

  00016	c3		 ret	 0
?GetUpVisualFileName@CButton@UI@@QAEPBDXZ ENDP		; UI::CButton::GetUpVisualFileName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetDisableVisual@CButton@UI@@QAEHPBD@Z
_TEXT	SEGMENT
_c_szFileName$ = 8					; size = 4
?SetDisableVisual@CButton@UI@@QAEHPBD@Z PROC		; UI::CButton::SetDisableVisual, COMDAT
; _this$ = ecx

; 1688 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1689 : 		CResource * pResource = CResourceManager::Instance().GetResourcePointer(c_szFileName);

  00006	ff 75 08	 push	 DWORD PTR _c_szFileName$[ebp]
  00009	8b f9		 mov	 edi, ecx
  0000b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00011	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  00016	8b d8		 mov	 ebx, eax

; 1690 : 		if (!pResource->IsType(CGraphicImage::Type()))

  00018	e8 00 00 00 00	 call	 ?Type@CGraphicImage@@SAKXZ ; CGraphicImage::Type
  0001d	50		 push	 eax
  0001e	8b cb		 mov	 ecx, ebx
  00020	e8 00 00 00 00	 call	 ?IsType@CResource@@QAE_NK@Z ; CResource::IsType
  00025	84 c0		 test	 al, al
  00027	74 46		 je	 SHORT $LN5@SetDisable

; 1691 : 			return FALSE;
; 1692 : 
; 1693 : 		m_disableVisual.SetImagePointer(static_cast<CGraphicImage*>(pResource));

  00029	53		 push	 ebx
  0002a	8d 8f ec 00 00
	00		 lea	 ecx, DWORD PTR [edi+236]
  00030	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer

; 1694 : 		if (m_downVisual.IsEmpty())

  00035	8d 8f cc 00 00
	00		 lea	 ecx, DWORD PTR [edi+204]
  0003b	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  00040	84 c0		 test	 al, al
  00042	75 2b		 jne	 SHORT $LN5@SetDisable

; 1695 : 			return FALSE;
; 1696 : 
; 1697 : 		SetSize(m_disableVisual.GetWidth(), m_disableVisual.GetHeight());

  00044	8d 8f ec 00 00
	00		 lea	 ecx, DWORD PTR [edi+236]
  0004a	e8 00 00 00 00	 call	 ?GetHeight@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetHeight
  0004f	50		 push	 eax
  00050	8d 8f ec 00 00
	00		 lea	 ecx, DWORD PTR [edi+236]
  00056	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
  0005b	50		 push	 eax
  0005c	8b cf		 mov	 ecx, edi
  0005e	e8 00 00 00 00	 call	 ?SetSize@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetSize
  00063	5f		 pop	 edi

; 1698 : 
; 1699 : 		return TRUE;
; 1700 : 	}

  00064	5e		 pop	 esi
  00065	b8 01 00 00 00	 mov	 eax, 1
  0006a	5b		 pop	 ebx
  0006b	5d		 pop	 ebp
  0006c	c2 04 00	 ret	 4
$LN5@SetDisable:
  0006f	5f		 pop	 edi
  00070	5e		 pop	 esi
  00071	33 c0		 xor	 eax, eax
  00073	5b		 pop	 ebx
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?SetDisableVisual@CButton@UI@@QAEHPBD@Z ENDP		; UI::CButton::SetDisableVisual
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetDownVisual@CButton@UI@@QAEHPBD@Z
_TEXT	SEGMENT
_c_szFileName$ = 8					; size = 4
?SetDownVisual@CButton@UI@@QAEHPBD@Z PROC		; UI::CButton::SetDownVisual, COMDAT
; _this$ = ecx

; 1674 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1675 : 		CResource * pResource = CResourceManager::Instance().GetResourcePointer(c_szFileName);

  00006	ff 75 08	 push	 DWORD PTR _c_szFileName$[ebp]
  00009	8b f9		 mov	 edi, ecx
  0000b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00011	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  00016	8b d8		 mov	 ebx, eax

; 1676 : 		if (!pResource->IsType(CGraphicImage::Type()))

  00018	e8 00 00 00 00	 call	 ?Type@CGraphicImage@@SAKXZ ; CGraphicImage::Type
  0001d	50		 push	 eax
  0001e	8b cb		 mov	 ecx, ebx
  00020	e8 00 00 00 00	 call	 ?IsType@CResource@@QAE_NK@Z ; CResource::IsType
  00025	84 c0		 test	 al, al
  00027	74 46		 je	 SHORT $LN5@SetDownVis

; 1677 : 			return FALSE;
; 1678 : 
; 1679 : 		m_downVisual.SetImagePointer(static_cast<CGraphicImage*>(pResource));

  00029	53		 push	 ebx
  0002a	8d 8f cc 00 00
	00		 lea	 ecx, DWORD PTR [edi+204]
  00030	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer

; 1680 : 		if (m_downVisual.IsEmpty())

  00035	8d 8f cc 00 00
	00		 lea	 ecx, DWORD PTR [edi+204]
  0003b	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  00040	84 c0		 test	 al, al
  00042	75 2b		 jne	 SHORT $LN5@SetDownVis

; 1681 : 			return FALSE;
; 1682 : 
; 1683 : 		SetSize(m_downVisual.GetWidth(), m_downVisual.GetHeight());

  00044	8d 8f cc 00 00
	00		 lea	 ecx, DWORD PTR [edi+204]
  0004a	e8 00 00 00 00	 call	 ?GetHeight@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetHeight
  0004f	50		 push	 eax
  00050	8d 8f cc 00 00
	00		 lea	 ecx, DWORD PTR [edi+204]
  00056	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
  0005b	50		 push	 eax
  0005c	8b cf		 mov	 ecx, edi
  0005e	e8 00 00 00 00	 call	 ?SetSize@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetSize
  00063	5f		 pop	 edi

; 1684 : 
; 1685 : 		return TRUE;
; 1686 : 	}

  00064	5e		 pop	 esi
  00065	b8 01 00 00 00	 mov	 eax, 1
  0006a	5b		 pop	 ebx
  0006b	5d		 pop	 ebp
  0006c	c2 04 00	 ret	 4
$LN5@SetDownVis:
  0006f	5f		 pop	 edi
  00070	5e		 pop	 esi
  00071	33 c0		 xor	 eax, eax
  00073	5b		 pop	 ebx
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?SetDownVisual@CButton@UI@@QAEHPBD@Z ENDP		; UI::CButton::SetDownVisual
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetOverVisual@CButton@UI@@QAEHPBD@Z
_TEXT	SEGMENT
_c_szFileName$ = 8					; size = 4
?SetOverVisual@CButton@UI@@QAEHPBD@Z PROC		; UI::CButton::SetOverVisual, COMDAT
; _this$ = ecx

; 1660 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1661 : 		CResource * pResource = CResourceManager::Instance().GetResourcePointer(c_szFileName);

  00006	ff 75 08	 push	 DWORD PTR _c_szFileName$[ebp]
  00009	8b f9		 mov	 edi, ecx
  0000b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00011	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  00016	8b d8		 mov	 ebx, eax

; 1662 : 		if (!pResource->IsType(CGraphicImage::Type()))

  00018	e8 00 00 00 00	 call	 ?Type@CGraphicImage@@SAKXZ ; CGraphicImage::Type
  0001d	50		 push	 eax
  0001e	8b cb		 mov	 ecx, ebx
  00020	e8 00 00 00 00	 call	 ?IsType@CResource@@QAE_NK@Z ; CResource::IsType
  00025	84 c0		 test	 al, al
  00027	74 46		 je	 SHORT $LN5@SetOverVis

; 1663 : 			return FALSE;
; 1664 : 
; 1665 : 		m_overVisual.SetImagePointer(static_cast<CGraphicImage*>(pResource));

  00029	53		 push	 ebx
  0002a	8d 8f ac 00 00
	00		 lea	 ecx, DWORD PTR [edi+172]
  00030	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer

; 1666 : 		if (m_overVisual.IsEmpty())

  00035	8d 8f ac 00 00
	00		 lea	 ecx, DWORD PTR [edi+172]
  0003b	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  00040	84 c0		 test	 al, al
  00042	75 2b		 jne	 SHORT $LN5@SetOverVis

; 1667 : 			return FALSE;
; 1668 : 
; 1669 : 		SetSize(m_overVisual.GetWidth(), m_overVisual.GetHeight());

  00044	8d 8f ac 00 00
	00		 lea	 ecx, DWORD PTR [edi+172]
  0004a	e8 00 00 00 00	 call	 ?GetHeight@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetHeight
  0004f	50		 push	 eax
  00050	8d 8f ac 00 00
	00		 lea	 ecx, DWORD PTR [edi+172]
  00056	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
  0005b	50		 push	 eax
  0005c	8b cf		 mov	 ecx, edi
  0005e	e8 00 00 00 00	 call	 ?SetSize@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetSize
  00063	5f		 pop	 edi

; 1670 : 
; 1671 : 		return TRUE;
; 1672 : 	}

  00064	5e		 pop	 esi
  00065	b8 01 00 00 00	 mov	 eax, 1
  0006a	5b		 pop	 ebx
  0006b	5d		 pop	 ebp
  0006c	c2 04 00	 ret	 4
$LN5@SetOverVis:
  0006f	5f		 pop	 edi
  00070	5e		 pop	 esi
  00071	33 c0		 xor	 eax, eax
  00073	5b		 pop	 ebx
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?SetOverVisual@CButton@UI@@QAEHPBD@Z ENDP		; UI::CButton::SetOverVisual
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetUpVisual@CButton@UI@@QAEHPBD@Z
_TEXT	SEGMENT
_c_szFileName$ = 8					; size = 4
?SetUpVisual@CButton@UI@@QAEHPBD@Z PROC			; UI::CButton::SetUpVisual, COMDAT
; _this$ = ecx

; 1643 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1644 : 		CResource * pResource = CResourceManager::Instance().GetResourcePointer(c_szFileName);

  00006	ff 75 08	 push	 DWORD PTR _c_szFileName$[ebp]
  00009	8b f9		 mov	 edi, ecx
  0000b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00011	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  00016	8b d8		 mov	 ebx, eax

; 1645 : 		if (!pResource->IsType(CGraphicImage::Type()))

  00018	e8 00 00 00 00	 call	 ?Type@CGraphicImage@@SAKXZ ; CGraphicImage::Type
  0001d	50		 push	 eax
  0001e	8b cb		 mov	 ecx, ebx
  00020	e8 00 00 00 00	 call	 ?IsType@CResource@@QAE_NK@Z ; CResource::IsType
  00025	84 c0		 test	 al, al
  00027	74 44		 je	 SHORT $LN5@SetUpVisua

; 1646 : 			return FALSE;
; 1647 : 
; 1648 : 		m_upVisual.SetImagePointer(static_cast<CGraphicImage*>(pResource));

  00029	8d b7 8c 00 00
	00		 lea	 esi, DWORD PTR [edi+140]
  0002f	53		 push	 ebx
  00030	8b ce		 mov	 ecx, esi
  00032	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer

; 1649 : 		if (m_upVisual.IsEmpty())

  00037	8b ce		 mov	 ecx, esi
  00039	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  0003e	84 c0		 test	 al, al
  00040	75 2b		 jne	 SHORT $LN5@SetUpVisua

; 1650 : 			return FALSE;
; 1651 : 
; 1652 : 		SetSize(m_upVisual.GetWidth(), m_upVisual.GetHeight());

  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ?GetHeight@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetHeight
  00049	50		 push	 eax
  0004a	8b ce		 mov	 ecx, esi
  0004c	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
  00051	50		 push	 eax
  00052	8b cf		 mov	 ecx, edi
  00054	e8 00 00 00 00	 call	 ?SetSize@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetSize

; 1653 : 		//
; 1654 : 		SetCurrentVisual(&m_upVisual);

  00059	56		 push	 esi
  0005a	8b cf		 mov	 ecx, edi
  0005c	e8 00 00 00 00	 call	 ?SetCurrentVisual@CButton@UI@@IAEXPAVCGraphicImageInstance@@@Z ; UI::CButton::SetCurrentVisual
  00061	5f		 pop	 edi

; 1655 : 		//
; 1656 : 
; 1657 : 		return TRUE;
; 1658 : 	}

  00062	5e		 pop	 esi
  00063	b8 01 00 00 00	 mov	 eax, 1
  00068	5b		 pop	 ebx
  00069	5d		 pop	 ebp
  0006a	c2 04 00	 ret	 4
$LN5@SetUpVisua:
  0006d	5f		 pop	 edi
  0006e	5e		 pop	 esi
  0006f	33 c0		 xor	 eax, eax
  00071	5b		 pop	 ebx
  00072	5d		 pop	 ebp
  00073	c2 04 00	 ret	 4
?SetUpVisual@CButton@UI@@QAEHPBD@Z ENDP			; UI::CButton::SetUpVisual
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CButton@UI@@UAE@XZ
_TEXT	SEGMENT
??1CButton@UI@@UAE@XZ PROC				; UI::CButton::~CButton, COMDAT
; _this$ = ecx

; 1639 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1640 : 	}

  00003	8d 8e ec 00 00
	00		 lea	 ecx, DWORD PTR [esi+236]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CButton@UI@@6B@
  0000f	e8 00 00 00 00	 call	 ??1CGraphicImageInstance@@UAE@XZ ; CGraphicImageInstance::~CGraphicImageInstance
  00014	8d 8e cc 00 00
	00		 lea	 ecx, DWORD PTR [esi+204]
  0001a	e8 00 00 00 00	 call	 ??1CGraphicImageInstance@@UAE@XZ ; CGraphicImageInstance::~CGraphicImageInstance
  0001f	8d 8e ac 00 00
	00		 lea	 ecx, DWORD PTR [esi+172]
  00025	e8 00 00 00 00	 call	 ??1CGraphicImageInstance@@UAE@XZ ; CGraphicImageInstance::~CGraphicImageInstance
  0002a	8d 8e 8c 00 00
	00		 lea	 ecx, DWORD PTR [esi+140]
  00030	e8 00 00 00 00	 call	 ??1CGraphicImageInstance@@UAE@XZ ; CGraphicImageInstance::~CGraphicImageInstance
  00035	8b ce		 mov	 ecx, esi
  00037	5e		 pop	 esi
  00038	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
??1CButton@UI@@UAE@XZ ENDP				; UI::CButton::~CButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.h
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CButton@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ppyObject$ = 8						; size = 4
??0CButton@UI@@QAE@PAU_object@@@Z PROC			; UI::CButton::CButton, COMDAT
; _this$ = ecx

; 1635 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CButton@UI@@QAE@PAU_object@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi

; 1630 : 		:	CWindow(ppyObject),

  00029	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  0002c	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow

; 1635 : 	{

  00031	8d 8e 8c 00 00
	00		 lea	 ecx, DWORD PTR [esi+140]
  00037	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CButton@UI@@6B@
  00044	c7 46 7c 01 00
	00 00		 mov	 DWORD PTR [esi+124], 1
  0004b	c7 86 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+128], 0
  00055	c7 86 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+132], 0
  0005f	c7 86 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+136], 0
  00069	e8 00 00 00 00	 call	 ??0CGraphicImageInstance@@QAE@XZ ; CGraphicImageInstance::CGraphicImageInstance
  0006e	8d 8e ac 00 00
	00		 lea	 ecx, DWORD PTR [esi+172]
  00074	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00078	e8 00 00 00 00	 call	 ??0CGraphicImageInstance@@QAE@XZ ; CGraphicImageInstance::CGraphicImageInstance
  0007d	8d 8e cc 00 00
	00		 lea	 ecx, DWORD PTR [esi+204]
  00083	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00087	e8 00 00 00 00	 call	 ??0CGraphicImageInstance@@QAE@XZ ; CGraphicImageInstance::CGraphicImageInstance
  0008c	8d 8e ec 00 00
	00		 lea	 ecx, DWORD PTR [esi+236]
  00092	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00096	e8 00 00 00 00	 call	 ??0CGraphicImageInstance@@QAE@XZ ; CGraphicImageInstance::CGraphicImageInstance
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.h

; 98   : 			void			AddFlag(DWORD flag)		{ SET_BIT(m_dwFlag, flag);		}

  0009b	81 4e 58 80 00
	00 00		 or	 DWORD PTR [esi+88], 128	; 00000080H
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1637 : 	}

  000a2	8b c6		 mov	 eax, esi
  000a4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ae	59		 pop	 ecx
  000af	5e		 pop	 esi
  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CButton@UI@@QAE@PAU_object@@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
__unwindfunclet$??0CButton@UI@@QAE@PAU_object@@@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	81 c1 8c 00 00
	00		 add	 ecx, 140		; 0000008cH
  00011	e9 00 00 00 00	 jmp	 ??1CGraphicImageInstance@@UAE@XZ ; CGraphicImageInstance::~CGraphicImageInstance
__unwindfunclet$??0CButton@UI@@QAE@PAU_object@@@Z$2:
  00016	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  0001f	e9 00 00 00 00	 jmp	 ??1CGraphicImageInstance@@UAE@XZ ; CGraphicImageInstance::~CGraphicImageInstance
__unwindfunclet$??0CButton@UI@@QAE@PAU_object@@@Z$3:
  00024	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	81 c1 cc 00 00
	00		 add	 ecx, 204		; 000000ccH
  0002d	e9 00 00 00 00	 jmp	 ??1CGraphicImageInstance@@UAE@XZ ; CGraphicImageInstance::~CGraphicImageInstance
  00032	cc		 int	 3
  00033	cc		 int	 3
  00034	cc		 int	 3
  00035	cc		 int	 3
  00036	cc		 int	 3
__ehhandler$??0CButton@UI@@QAE@PAU_object@@@Z:
  00037	90		 npad	 1
  00038	90		 npad	 1
  00039	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00040	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00043	33 c8		 xor	 ecx, eax
  00045	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CButton@UI@@QAE@PAU_object@@@Z
  0004f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CButton@UI@@QAE@PAU_object@@@Z ENDP			; UI::CButton::CButton
; Function compile flags: /Ogtp
;	COMDAT ??_GCAniImageBox@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCAniImageBox@UI@@UAEPAXI@Z PROC			; UI::CAniImageBox::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CAniImageBox@UI@@UAE@XZ ; UI::CAniImageBox::~CAniImageBox
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 8c 00 00 00	 push	 140			; 0000008cH
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCAniImageBox@UI@@UAEPAXI@Z ENDP			; UI::CAniImageBox::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIsType@CAniImageBox@UI@@MAEHK@Z
_TEXT	SEGMENT
_dwType$ = 8						; size = 4
?OnIsType@CAniImageBox@UI@@MAEHK@Z PROC			; UI::CAniImageBox::OnIsType, COMDAT
; _this$ = ecx

; 1488 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1489 : 		if (CAniImageBox::Type() == dwType)

  00003	e8 00 00 00 00	 call	 ?Type@CAniImageBox@UI@@SAKXZ ; UI::CAniImageBox::Type
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 45 08	 cmp	 eax, DWORD PTR _dwType$[ebp]
  0000d	0f 94 c1	 sete	 cl
  00010	8b c1		 mov	 eax, ecx

; 1490 : 			return TRUE;
; 1491 : 
; 1492 : 		return FALSE;
; 1493 : 	}

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?OnIsType@CAniImageBox@UI@@MAEHK@Z ENDP			; UI::CAniImageBox::OnIsType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnEndFrame@CAniImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnEndFrame@CAniImageBox@UI@@MAEXXZ PROC		; UI::CAniImageBox::OnEndFrame, COMDAT
; _this$ = ecx

; 1621 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1622 : 		PyCallClassMemberFunc(m_poHandler, "OnEndFrame", BuildEmptyTuple());

  00003	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0L@LBHHAGOH@OnEndFrame@
  0000e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00011	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
  00019	5e		 pop	 esi

; 1623 : 	}

  0001a	c3		 ret	 0
?OnEndFrame@CAniImageBox@UI@@MAEXXZ ENDP		; UI::CAniImageBox::OnEndFrame
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnChangePosition@CAniImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
_changePosition$$sroa$147$1$ = -8			; size = 4
_changePosition$$sroa$148$1$ = -4			; size = 4
?OnChangePosition@CAniImageBox@UI@@MAEXXZ PROC		; UI::CAniImageBox::OnChangePosition, COMDAT
; _this$ = ecx

; 1613 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	66 0f 6e 41 34	 movd	 xmm0, DWORD PTR [ecx+52]
  0000b	66 0f 6e 49 38	 movd	 xmm1, DWORD PTR [ecx+56]

; 1614 : 		FChangePosition changePosition;
; 1615 : 		changePosition.fx = m_rect.left;

  00010	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00013	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00014	8b b1 80 00 00
	00		 mov	 esi, DWORD PTR [ecx+128]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1613 : 	{

  0001a	57		 push	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0001b	8b b9 84 00 00
	00		 mov	 edi, DWORD PTR [ecx+132]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1616 : 		changePosition.fy = m_rect.top;

  00021	0f 5b c9	 cvtdq2ps xmm1, xmm1
  00024	f3 0f 11 45 fc	 movss	 DWORD PTR _changePosition$$sroa$148$1$[ebp], xmm0
  00029	f3 0f 11 4d f8	 movss	 DWORD PTR _changePosition$$sroa$147$1$[ebp], xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  0002e	3b f7		 cmp	 esi, edi
  00030	74 26		 je	 SHORT $LN17@OnChangePo
$LL26@OnChangePo:
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1608 : 			pInstance->SetPosition(fx, fy);

  00032	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00034	83 ec 08	 sub	 esp, 8
  00037	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  0003d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00042	e8 00 00 00 00	 call	 ?SetPosition@CGraphicImageInstance@@QAEXMM@Z ; CGraphicImageInstance::SetPosition
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00047	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _changePosition$$sroa$148$1$[ebp]
  0004c	83 c6 04	 add	 esi, 4
  0004f	f3 0f 10 4d f8	 movss	 xmm1, DWORD PTR _changePosition$$sroa$147$1$[ebp]
  00054	3b f7		 cmp	 esi, edi
  00056	75 da		 jne	 SHORT $LL26@OnChangePo
$LN17@OnChangePo:
  00058	5f		 pop	 edi
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1618 : 	}

  00059	5e		 pop	 esi
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
?OnChangePosition@CAniImageBox@UI@@MAEXXZ ENDP		; UI::CAniImageBox::OnChangePosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CAniImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CAniImageBox@UI@@MAEXXZ PROC			; UI::CAniImageBox::OnRender, COMDAT
; _this$ = ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00000	8b 81 84 00 00
	00		 mov	 eax, DWORD PTR [ecx+132]
  00006	8b 91 80 00 00
	00		 mov	 edx, DWORD PTR [ecx+128]
  0000c	2b c2		 sub	 eax, edx
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1595 : 	{

  0000e	56		 push	 esi

; 1596 : 		if (m_bycurIndex < m_ImageVector.size())

  0000f	0f b6 71 7e	 movzx	 esi, BYTE PTR [ecx+126]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00013	c1 f8 02	 sar	 eax, 2
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1596 : 		if (m_bycurIndex < m_ImageVector.size())

  00016	3b f0		 cmp	 esi, eax
  00018	73 09		 jae	 SHORT $LN2@OnRender

; 1597 : 		{
; 1598 : 			CGraphicExpandedImageInstance * pImage = m_ImageVector[m_bycurIndex];
; 1599 : 			pImage->Render();

  0001a	8b 0c b2	 mov	 ecx, DWORD PTR [edx+esi*4]
  0001d	5e		 pop	 esi
  0001e	e9 00 00 00 00	 jmp	 ?Render@CGraphicImageInstance@@QAEXXZ ; CGraphicImageInstance::Render
$LN2@OnRender:
  00023	5e		 pop	 esi

; 1600 : 		}
; 1601 : 	}

  00024	c3		 ret	 0
?OnRender@CAniImageBox@UI@@MAEXXZ ENDP			; UI::CAniImageBox::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnUpdate@CAniImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnUpdate@CAniImageBox@UI@@MAEXXZ PROC			; UI::CAniImageBox::OnUpdate, COMDAT
; _this$ = ecx

; 1579 : 	{

  00000	8b d1		 mov	 edx, ecx

; 1580 : 		++m_bycurDelay;

  00002	8a 42 7c	 mov	 al, BYTE PTR [edx+124]
  00005	fe c0		 inc	 al
  00007	88 42 7c	 mov	 BYTE PTR [edx+124], al

; 1581 : 		if (m_bycurDelay < m_byDelay)

  0000a	3a 42 7d	 cmp	 al, BYTE PTR [edx+125]
  0000d	72 30		 jb	 SHORT $LN3@OnUpdate

; 1582 : 			return;
; 1583 : 
; 1584 : 		m_bycurDelay = 0;
; 1585 : 
; 1586 : 		++m_bycurIndex;

  0000f	8a 42 7e	 mov	 al, BYTE PTR [edx+126]
  00012	fe c0		 inc	 al
  00014	c6 42 7c 00	 mov	 BYTE PTR [edx+124], 0
  00018	88 42 7e	 mov	 BYTE PTR [edx+126], al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0001b	8b 8a 84 00 00
	00		 mov	 ecx, DWORD PTR [edx+132]
  00021	2b 8a 80 00 00
	00		 sub	 ecx, DWORD PTR [edx+128]
  00027	c1 f9 02	 sar	 ecx, 2
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1587 : 		if (m_bycurIndex >= m_ImageVector.size())

  0002a	0f b6 c0	 movzx	 eax, al
  0002d	3b c1		 cmp	 eax, ecx
  0002f	72 0e		 jb	 SHORT $LN3@OnUpdate

; 1588 : 		{
; 1589 : 			m_bycurIndex = 0;
; 1590 : 
; 1591 : 			OnEndFrame();

  00031	8b 02		 mov	 eax, DWORD PTR [edx]
  00033	8b ca		 mov	 ecx, edx
  00035	c6 42 7e 00	 mov	 BYTE PTR [edx+126], 0
  00039	ff a0 9c 00 00
	00		 jmp	 DWORD PTR [eax+156]
$LN3@OnUpdate:

; 1592 : 		}
; 1593 : 	}

  0003f	c3		 ret	 0
?OnUpdate@CAniImageBox@UI@@MAEXXZ ENDP			; UI::CAniImageBox::OnUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?ResetFrame@CAniImageBox@UI@@QAEXXZ
_TEXT	SEGMENT
?ResetFrame@CAniImageBox@UI@@QAEXXZ PROC		; UI::CAniImageBox::ResetFrame, COMDAT
; _this$ = ecx

; 1575 : 		m_bycurIndex = 0;

  00000	c6 41 7e 00	 mov	 BYTE PTR [ecx+126], 0

; 1576 : 	}

  00004	c3		 ret	 0
?ResetFrame@CAniImageBox@UI@@QAEXXZ ENDP		; UI::CAniImageBox::ResetFrame
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRenderingMode@CAniImageBox@UI@@QAEXH@Z
_TEXT	SEGMENT
_iMode$ = 8						; size = 4
?SetRenderingMode@CAniImageBox@UI@@QAEXH@Z PROC		; UI::CAniImageBox::SetRenderingMode, COMDAT
; _this$ = ecx

; 1567 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00004	8b b1 80 00 00
	00		 mov	 esi, DWORD PTR [ecx+128]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1567 : 	{

  0000a	57		 push	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b b9 84 00 00
	00		 mov	 edi, DWORD PTR [ecx+132]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f7		 cmp	 esi, edi
  00013	74 1b		 je	 SHORT $LN17@SetRenderi
  00015	53		 push	 ebx
  00016	8b 5d 08	 mov	 ebx, DWORD PTR _iMode$[ebp]
  00019	0f 1f 80 00 00
	00 00		 npad	 7
$LL18@SetRenderi:
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1563 : 			pInstance->SetRenderingMode(iMode);

  00020	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00022	53		 push	 ebx
  00023	e8 00 00 00 00	 call	 ?SetRenderingMode@CGraphicExpandedImageInstance@@QAEXH@Z ; CGraphicExpandedImageInstance::SetRenderingMode
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00028	83 c6 04	 add	 esi, 4
  0002b	3b f7		 cmp	 esi, edi
  0002d	75 f1		 jne	 SHORT $LL18@SetRenderi
  0002f	5b		 pop	 ebx
$LN17@SetRenderi:
  00030	5f		 pop	 edi
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1571 : 	}

  00031	5e		 pop	 esi
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
?SetRenderingMode@CAniImageBox@UI@@QAEXH@Z ENDP		; UI::CAniImageBox::SetRenderingMode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRenderingRect@CAniImageBox@UI@@QAEXMMMM@Z
_TEXT	SEGMENT
__$ArrayPad$ = -4					; size = 4
_fLeft$ = 8						; size = 4
_fTop$ = 12						; size = 4
_fRight$ = 16						; size = 4
_fBottom$ = 20						; size = 4
?SetRenderingRect@CAniImageBox@UI@@QAEXMMMM@Z PROC	; UI::CAniImageBox::SetRenderingRect, COMDAT
; _this$ = ecx

; 1549 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00009	33 c5		 xor	 eax, ebp
  0000b	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0000e	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000f	8b b1 84 00 00
	00		 mov	 esi, DWORD PTR [ecx+132]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1549 : 	{

  00015	57		 push	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00016	8b b9 80 00 00
	00		 mov	 edi, DWORD PTR [ecx+128]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	3b fe		 cmp	 edi, esi
  0001e	74 3c		 je	 SHORT $LN17@SetRenderi
$LL36@SetRenderi:
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1545 : 			pInstance->SetRenderingRect(fLeft, fTop, fRight, fBottom);

  00020	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fBottom$[ebp]
  00025	83 ec 10	 sub	 esp, 16			; 00000010H
  00028	8b 0f		 mov	 ecx, DWORD PTR [edi]
  0002a	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00030	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fRight$[ebp]
  00035	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0003b	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fTop$[ebp]
  00040	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00046	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fLeft$[ebp]
  0004b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00050	e8 00 00 00 00	 call	 ?SetRenderingRect@CGraphicExpandedImageInstance@@QAEXMMMM@Z ; CGraphicExpandedImageInstance::SetRenderingRect
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00055	83 c7 04	 add	 edi, 4
  00058	3b fe		 cmp	 edi, esi
  0005a	75 c4		 jne	 SHORT $LL36@SetRenderi
$LN17@SetRenderi:
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1556 : 	}

  0005c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0005f	5f		 pop	 edi
  00060	33 cd		 xor	 ecx, ebp
  00062	5e		 pop	 esi
  00063	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c2 10 00	 ret	 16			; 00000010H
?SetRenderingRect@CAniImageBox@UI@@QAEXMMMM@Z ENDP	; UI::CAniImageBox::SetRenderingRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?AppendImage@CAniImageBox@UI@@QAEXPBD@Z
_TEXT	SEGMENT
_pImageInstance$ = 8					; size = 4
_c_szFileName$ = 8					; size = 4
?AppendImage@CAniImageBox@UI@@QAEXPBD@Z PROC		; UI::CAniImageBox::AppendImage, COMDAT
; _this$ = ecx

; 1522 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	57		 push	 edi

; 1523 : 		CResource * pResource = CResourceManager::Instance().GetResourcePointer(c_szFileName);

  00005	ff 75 08	 push	 DWORD PTR _c_szFileName$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00010	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  00015	8b f8		 mov	 edi, eax

; 1524 : 		if (!pResource->IsType(CGraphicImage::Type()))

  00017	e8 00 00 00 00	 call	 ?Type@CGraphicImage@@SAKXZ ; CGraphicImage::Type
  0001c	50		 push	 eax
  0001d	8b cf		 mov	 ecx, edi
  0001f	e8 00 00 00 00	 call	 ?IsType@CResource@@QAE_NK@Z ; CResource::IsType
  00024	84 c0		 test	 al, al
  00026	74 68		 je	 SHORT $LN1@AppendImag

; 1525 : 			return;
; 1526 : 
; 1527 : 		CGraphicExpandedImageInstance * pImageInstance = CGraphicExpandedImageInstance::New();

  00028	56		 push	 esi
  00029	e8 00 00 00 00	 call	 ?New@CGraphicExpandedImageInstance@@SAPAV1@XZ ; CGraphicExpandedImageInstance::New
  0002e	8b f0		 mov	 esi, eax

; 1528 : 		pImageInstance->SetImagePointer(static_cast<CGraphicImage*>(pResource));

  00030	57		 push	 edi
  00031	8b ce		 mov	 ecx, esi
  00033	89 75 08	 mov	 DWORD PTR _pImageInstance$[ebp], esi
  00036	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer

; 1529 : 
; 1530 : 		if (pImageInstance->IsEmpty())

  0003b	8b ce		 mov	 ecx, esi
  0003d	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  00042	84 c0		 test	 al, al
  00044	74 10		 je	 SHORT $LN3@AppendImag

; 1531 : 		{
; 1532 : 			CGraphicExpandedImageInstance::Delete(pImageInstance);

  00046	56		 push	 esi
  00047	e8 00 00 00 00	 call	 ?Delete@CGraphicExpandedImageInstance@@SAXPAV1@@Z ; CGraphicExpandedImageInstance::Delete
  0004c	83 c4 04	 add	 esp, 4
  0004f	5e		 pop	 esi
  00050	5f		 pop	 edi

; 1538 : 	}

  00051	5b		 pop	 ebx
  00052	5d		 pop	 ebp
  00053	c2 04 00	 ret	 4
$LN3@AppendImag:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  00056	8b 83 84 00 00
	00		 mov	 eax, DWORD PTR [ebx+132]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1536 : 		m_ImageVector.push_back(pImageInstance);

  0005c	8d bb 80 00 00
	00		 lea	 edi, DWORD PTR [ebx+128]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  00062	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  00065	74 08		 je	 SHORT $LN8@AppendImag

; 797  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  00067	89 30		 mov	 DWORD PTR [eax], esi

; 798  :         } else {
; 799  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 800  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 801  :             _ASAN_VECTOR_RELEASE_GUARD;
; 802  :         }
; 803  : 
; 804  :         _Orphan_range(_Mylast, _Mylast);
; 805  :         _Ty& _Result = *_Mylast;
; 806  :         ++_Mylast;

  00069	83 47 04 04	 add	 DWORD PTR [edi+4], 4

; 782  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0006d	eb 0c		 jmp	 SHORT $LN7@AppendImag
$LN8@AppendImag:

; 783  :         }
; 784  : 
; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0006f	8d 4d 08	 lea	 ecx, DWORD PTR _pImageInstance$[ebp]
  00072	51		 push	 ecx
  00073	50		 push	 eax
  00074	8b cf		 mov	 ecx, edi
  00076	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicExpandedImageInstance@@@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@AAEPAPAVCGraphicExpandedImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Emplace_reallocate<CGraphicExpandedImageInstance * const &>
$LN7@AppendImag:

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0007b	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0007e	2b 37		 sub	 esi, DWORD PTR [edi]
  00080	c1 fe 02	 sar	 esi, 2
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1537 : 		m_bycurIndex = rand() % m_ImageVector.size();

  00083	e8 00 00 00 00	 call	 _rand
  00088	33 d2		 xor	 edx, edx
  0008a	f7 f6		 div	 esi
  0008c	5e		 pop	 esi
  0008d	88 53 7e	 mov	 BYTE PTR [ebx+126], dl
$LN1@AppendImag:

; 1538 : 	}

  00090	5f		 pop	 edi
  00091	5b		 pop	 ebx
  00092	5d		 pop	 ebp
  00093	c2 04 00	 ret	 4
?AppendImage@CAniImageBox@UI@@QAEXPBD@Z ENDP		; UI::CAniImageBox::AppendImage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetDiffuseColor@CAniImageBox@UI@@QAEXABUD3DXCOLOR@@@Z
_TEXT	SEGMENT
_color$ = 8						; size = 4
?SetDiffuseColor@CAniImageBox@UI@@QAEXABUD3DXCOLOR@@@Z PROC ; UI::CAniImageBox::SetDiffuseColor, COMDAT
; _this$ = ecx

; 1515 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1516 : 		for (auto & elem : m_ImageVector)

  00004	8b 99 84 00 00
	00		 mov	 ebx, DWORD PTR [ecx+132]
  0000a	56		 push	 esi
  0000b	8b b1 80 00 00
	00		 mov	 esi, DWORD PTR [ecx+128]
  00011	3b f3		 cmp	 esi, ebx
  00013	74 24		 je	 SHORT $LN3@SetDiffuse
  00015	57		 push	 edi
  00016	8b 7d 08	 mov	 edi, DWORD PTR _color$[ebp]
  00019	0f 1f 80 00 00
	00 00		 npad	 7
$LL4@SetDiffuse:

; 1517 : 			elem->SetDiffuseColor(color.r, color.g, color.b, color.a);

  00020	0f 10 07	 movups	 xmm0, XMMWORD PTR [edi]
  00023	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00025	83 ec 10	 sub	 esp, 16			; 00000010H
  00028	0f 11 04 24	 movups	 XMMWORD PTR [esp], xmm0
  0002c	e8 00 00 00 00	 call	 ?SetDiffuseColor@CGraphicImageInstance@@QAEXMMMM@Z ; CGraphicImageInstance::SetDiffuseColor
  00031	83 c6 04	 add	 esi, 4
  00034	3b f3		 cmp	 esi, ebx
  00036	75 e8		 jne	 SHORT $LL4@SetDiffuse

; 1516 : 		for (auto & elem : m_ImageVector)

  00038	5f		 pop	 edi
$LN3@SetDiffuse:
  00039	5e		 pop	 esi

; 1518 : 	}

  0003a	5b		 pop	 ebx
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
?SetDiffuseColor@CAniImageBox@UI@@QAEXABUD3DXCOLOR@@@Z ENDP ; UI::CAniImageBox::SetDiffuseColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetDelay@CAniImageBox@UI@@QAEXH@Z
_TEXT	SEGMENT
_iDelay$ = 8						; size = 4
?SetDelay@CAniImageBox@UI@@QAEXH@Z PROC			; UI::CAniImageBox::SetDelay, COMDAT
; _this$ = ecx

; 1509 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1510 : 		m_byDelay = iDelay;

  00003	8a 45 08	 mov	 al, BYTE PTR _iDelay$[ebp]
  00006	88 41 7d	 mov	 BYTE PTR [ecx+125], al

; 1511 : 	}

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetDelay@CAniImageBox@UI@@QAEXH@Z ENDP			; UI::CAniImageBox::SetDelay
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterlib\GrpExpandedImageInstance.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterlib\GrpExpandedImageInstance.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CAniImageBox@UI@@UAE@XZ
_TEXT	SEGMENT
_this$1$ = -20						; size = 4
tv381 = -16						; size = 4
_pkData$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CAniImageBox@UI@@UAE@XZ PROC				; UI::CAniImageBox::~CAniImageBox, COMDAT
; _this$ = ecx

; 1504 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CAniImageBox@UI@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx
  0002a	89 5d ec	 mov	 DWORD PTR _this$1$[ebp], ebx
  0002d	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], OFFSET ??_7CAniImageBox@UI@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00033	8b 83 84 00 00
	00		 mov	 eax, DWORD PTR [ebx+132]
  00039	8b b3 80 00 00
	00		 mov	 esi, DWORD PTR [ebx+128]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  0003f	3b f0		 cmp	 esi, eax
  00041	74 3f		 je	 SHORT $LN17@CAniImageB
  00043	8b d8		 mov	 ebx, eax
$LL18@CAniImageB:

; 246  :         _Func(*_UFirst);

  00045	8b 3e		 mov	 edi, DWORD PTR [esi]
; File C:\Marty 5.5\Src-Client\Client\eterlib\GrpExpandedImageInstance.h

; 11   : 			pkInstance->Destroy();

  00047	8b cf		 mov	 ecx, edi
  00049	e8 00 00 00 00	 call	 ?Destroy@CGraphicExpandedImageInstance@@QAEXXZ ; CGraphicExpandedImageInstance::Destroy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  0004e	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+20
; File C:\Marty 5.5\Src-Client\Client\eterlib\GrpExpandedImageInstance.h

; 12   : 			ms_kPool.Free(pkInstance);

  00053	89 7d f0	 mov	 DWORD PTR _pkData$[ebp], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  00056	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+24
  0005c	74 0b		 je	 SHORT $LN27@CAniImageB

; 797  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  0005e	89 38		 mov	 DWORD PTR [eax], edi

; 798  :         } else {
; 799  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 800  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 801  :             _ASAN_VECTOR_RELEASE_GUARD;
; 802  :         }
; 803  : 
; 804  :         _Orphan_range(_Mylast, _Mylast);
; 805  :         _Ty& _Result = *_Mylast;
; 806  :         ++_Mylast;

  00060	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+20, 4

; 782  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00067	eb 0f		 jmp	 SHORT $LN16@CAniImageB
$LN27@CAniImageB:

; 783  :         }
; 784  : 
; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00069	8d 4d f0	 lea	 ecx, DWORD PTR _pkData$[ebp]
  0006c	51		 push	 ecx
  0006d	50		 push	 eax
  0006e	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+16
  00073	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicExpandedImageInstance@@@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@AAEPAPAVCGraphicExpandedImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Emplace_reallocate<CGraphicExpandedImageInstance * const &>
$LN16@CAniImageB:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00078	83 c6 04	 add	 esi, 4
  0007b	3b f3		 cmp	 esi, ebx
  0007d	75 c6		 jne	 SHORT $LL18@CAniImageB
  0007f	8b 5d ec	 mov	 ebx, DWORD PTR _this$1$[ebp]
$LN17@CAniImageB:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  00082	8b 83 80 00 00
	00		 mov	 eax, DWORD PTR [ebx+128]
  00088	85 c0		 test	 eax, eax
  0008a	74 4d		 je	 SHORT $LN34@CAniImageB

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0008c	8b 8b 88 00 00
	00		 mov	 ecx, DWORD PTR [ebx+136]
  00092	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00094	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00097	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0009d	72 12		 jb	 SHORT $LN50@CAniImageB

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0009f	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000a2	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000a5	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000a7	83 c0 fc	 add	 eax, -4			; fffffffcH
  000aa	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000ad	77 43		 ja	 SHORT $LN47@CAniImageB

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000af	8b c2		 mov	 eax, edx
$LN50@CAniImageB:

; 265  :         ::operator delete(_Ptr, _Bytes);

  000b1	51		 push	 ecx
  000b2	50		 push	 eax
  000b3	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  000b8	c7 83 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+128], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  000c2	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2050 :             _Mylast  = nullptr;

  000c5	c7 83 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+132], 0

; 2051 :             _Myend   = nullptr;

  000cf	c7 83 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+136], 0
$LN34@CAniImageB:
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1506 : 	}

  000d9	8b cb		 mov	 ecx, ebx
  000db	e8 00 00 00 00	 call	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
  000e0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ea	59		 pop	 ecx
  000eb	5f		 pop	 edi
  000ec	5e		 pop	 esi
  000ed	5b		 pop	 ebx
  000ee	8b e5		 mov	 esp, ebp
  000f0	5d		 pop	 ebp
  000f1	c3		 ret	 0
$LN47@CAniImageB:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000f2	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN61@CAniImageB:
  000f7	cc		 int	 3
  000f8	cc		 int	 3
  000f9	cc		 int	 3
  000fa	cc		 int	 3
  000fb	cc		 int	 3
  000fc	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CAniImageBox@UI@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CAniImageBox@UI@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CAniImageBox@UI@@UAE@XZ ENDP				; UI::CAniImageBox::~CAniImageBox
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CAniImageBox@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CAniImageBox@UI@@QAE@PAU_object@@@Z PROC		; UI::CAniImageBox::CAniImageBox, COMDAT
; _this$ = ecx

; 1500 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CAniImageBox@UI@@6B@

; 1502 : 	}

  00018	8b c6		 mov	 eax, esi
  0001a	66 c7 46 7c 00
	04		 mov	 WORD PTR [esi+124], 1024 ; 00000400H
  00020	c6 46 7e 00	 mov	 BYTE PTR [esi+126], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00024	c7 86 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+128], 0
  0002e	c7 86 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+132], 0
  00038	c7 86 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+136], 0
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1502 : 	}

  00042	5e		 pop	 esi
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
??0CAniImageBox@UI@@QAE@PAU_object@@@Z ENDP		; UI::CAniImageBox::CAniImageBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Type@CAniImageBox@UI@@SAKXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?Type@CAniImageBox@UI@@SAKXZ PROC			; UI::CAniImageBox::Type, COMDAT

; 1482 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Type@CAniImageBox@UI@@SAKXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1483 : 		static DWORD s_dwType = GetCRC32("CAniImageBox", strlen("CAniImageBox"));

  00022	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0002e	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??Type@CAniImageBox@UI@@SAKXZ@4HA
  00036	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  0003c	7f 14		 jg	 SHORT $LN9@Type
$LN5@Type:

; 1484 : 		return (s_dwType);
; 1485 : 	}

  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_dwType@?1??Type@CAniImageBox@UI@@SAKXZ@4KA
  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
$LN9@Type:

; 1483 : 		static DWORD s_dwType = GetCRC32("CAniImageBox", strlen("CAniImageBox"));

  00052	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CAniImageBox@UI@@SAKXZ@4HA
  00057	e8 00 00 00 00	 call	 __Init_thread_header
  0005c	83 c4 04	 add	 esp, 4
  0005f	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??Type@CAniImageBox@UI@@SAKXZ@4HA, -1
  00066	75 d6		 jne	 SHORT $LN5@Type
  00068	6a 0c		 push	 12			; 0000000cH
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LBBHECOO@CAniImageBox@
  0006f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00076	e8 00 00 00 00	 call	 ?GetCRC32@@YAKPBDI@Z	; GetCRC32
  0007b	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CAniImageBox@UI@@SAKXZ@4HA
  00080	a3 00 00 00 00	 mov	 DWORD PTR ?s_dwType@?1??Type@CAniImageBox@UI@@SAKXZ@4KA, eax
  00085	e8 00 00 00 00	 call	 __Init_thread_footer
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008d	eb af		 jmp	 SHORT $LN5@Type
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Type@CAniImageBox@UI@@SAKXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CAniImageBox@UI@@SAKXZ@4HA
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$?Type@CAniImageBox@UI@@SAKXZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Type@CAniImageBox@UI@@SAKXZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Type@CAniImageBox@UI@@SAKXZ ENDP			; UI::CAniImageBox::Type
; Function compile flags: /Ogtp
;	COMDAT ??_GCExpandedImageBox@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCExpandedImageBox@UI@@UAEPAXI@Z PROC		; UI::CExpandedImageBox::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CExpandedImageBox@UI@@UAE@XZ ; UI::CExpandedImageBox::~CExpandedImageBox
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 80 00 00 00	 push	 128			; 00000080H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCExpandedImageBox@UI@@UAEPAXI@Z ENDP		; UI::CExpandedImageBox::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIsType@CExpandedImageBox@UI@@MAEHK@Z
_TEXT	SEGMENT
_dwType$ = 8						; size = 4
?OnIsType@CExpandedImageBox@UI@@MAEHK@Z PROC		; UI::CExpandedImageBox::OnIsType, COMDAT
; _this$ = ecx

; 1400 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1401 : 		if (CExpandedImageBox::Type() == dwType)

  00003	e8 00 00 00 00	 call	 ?Type@CExpandedImageBox@UI@@SAKXZ ; UI::CExpandedImageBox::Type
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 45 08	 cmp	 eax, DWORD PTR _dwType$[ebp]
  0000d	0f 94 c1	 sete	 cl
  00010	8b c1		 mov	 eax, ecx

; 1402 : 			return TRUE;
; 1403 : 
; 1404 : 		return FALSE;
; 1405 : 	}

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?OnIsType@CExpandedImageBox@UI@@MAEHK@Z ENDP		; UI::CExpandedImageBox::OnIsType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CExpandedImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CExpandedImageBox@UI@@MAEXXZ PROC		; UI::CExpandedImageBox::OnRender, COMDAT
; _this$ = ecx

; 1470 : 		if (!m_pImageInstance)

  00000	8b 41 7c	 mov	 eax, DWORD PTR [ecx+124]
  00003	85 c0		 test	 eax, eax
  00005	74 0d		 je	 SHORT $LN3@OnRender

; 1471 : 			return;
; 1472 : 
; 1473 : 		if (IsShow())

  00007	80 79 55 00	 cmp	 BYTE PTR [ecx+85], 0
  0000b	74 07		 je	 SHORT $LN3@OnRender

; 1474 : 			m_pImageInstance->Render();

  0000d	8b c8		 mov	 ecx, eax
  0000f	e9 00 00 00 00	 jmp	 ?Render@CGraphicImageInstance@@QAEXXZ ; CGraphicImageInstance::Render
$LN3@OnRender:

; 1475 : 	}

  00014	c3		 ret	 0
?OnRender@CExpandedImageBox@UI@@MAEXXZ ENDP		; UI::CExpandedImageBox::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnUpdate@CExpandedImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnUpdate@CExpandedImageBox@UI@@MAEXXZ PROC		; UI::CExpandedImageBox::OnUpdate, COMDAT
; _this$ = ecx

; 1467 : 	}

  00000	c2 00 00	 ret	 0
?OnUpdate@CExpandedImageBox@UI@@MAEXXZ ENDP		; UI::CExpandedImageBox::OnUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnDestroyInstance@CExpandedImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnDestroyInstance@CExpandedImageBox@UI@@MAEXXZ PROC	; UI::CExpandedImageBox::OnDestroyInstance, COMDAT
; _this$ = ecx

; 1422 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1423 : 		if (m_pImageInstance)

  00003	8b 46 7c	 mov	 eax, DWORD PTR [esi+124]
  00006	85 c0		 test	 eax, eax
  00008	74 10		 je	 SHORT $LN2@OnDestroyI

; 1424 : 		{
; 1425 : 			CGraphicExpandedImageInstance::Delete((CGraphicExpandedImageInstance*)m_pImageInstance);

  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?Delete@CGraphicExpandedImageInstance@@SAXPAV1@@Z ; CGraphicExpandedImageInstance::Delete
  00010	83 c4 04	 add	 esp, 4

; 1426 : 			m_pImageInstance=NULL;

  00013	c7 46 7c 00 00
	00 00		 mov	 DWORD PTR [esi+124], 0
$LN2@OnDestroyI:

; 1427 : 		}
; 1428 : 	}

  0001a	5e		 pop	 esi
  0001b	c3		 ret	 0
?OnDestroyInstance@CExpandedImageBox@UI@@MAEXXZ ENDP	; UI::CExpandedImageBox::OnDestroyInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnCreateInstance@CExpandedImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnCreateInstance@CExpandedImageBox@UI@@MAEXXZ PROC	; UI::CExpandedImageBox::OnCreateInstance, COMDAT
; _this$ = ecx

; 1416 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1417 : 		OnDestroyInstance();

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	ff 90 a0 00 00
	00		 call	 DWORD PTR [eax+160]

; 1418 : 
; 1419 : 		m_pImageInstance = CGraphicExpandedImageInstance::New();

  0000b	e8 00 00 00 00	 call	 ?New@CGraphicExpandedImageInstance@@SAPAV1@XZ ; CGraphicExpandedImageInstance::New
  00010	89 46 7c	 mov	 DWORD PTR [esi+124], eax
  00013	5e		 pop	 esi

; 1420 : 	}

  00014	c3		 ret	 0
?OnCreateInstance@CExpandedImageBox@UI@@MAEXXZ ENDP	; UI::CExpandedImageBox::OnCreateInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRenderingMode@CExpandedImageBox@UI@@QAEXH@Z
_TEXT	SEGMENT
_iMode$ = 8						; size = 4
?SetRenderingMode@CExpandedImageBox@UI@@QAEXH@Z PROC	; UI::CExpandedImageBox::SetRenderingMode, COMDAT
; _this$ = ecx

; 1461 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1462 : 		((CGraphicExpandedImageInstance*)m_pImageInstance)->SetRenderingMode(iMode);

  00003	8b 49 7c	 mov	 ecx, DWORD PTR [ecx+124]

; 1463 : 	}

  00006	5d		 pop	 ebp

; 1462 : 		((CGraphicExpandedImageInstance*)m_pImageInstance)->SetRenderingMode(iMode);

  00007	e9 00 00 00 00	 jmp	 ?SetRenderingMode@CGraphicExpandedImageInstance@@QAEXH@Z ; CGraphicExpandedImageInstance::SetRenderingMode
?SetRenderingMode@CExpandedImageBox@UI@@QAEXH@Z ENDP	; UI::CExpandedImageBox::SetRenderingMode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRenderingRect@CExpandedImageBox@UI@@QAEXMMMM@Z
_TEXT	SEGMENT
_fLeft$ = 8						; size = 4
_fTop$ = 12						; size = 4
_fRight$ = 16						; size = 4
_fBottom$ = 20						; size = 4
?SetRenderingRect@CExpandedImageBox@UI@@QAEXMMMM@Z PROC	; UI::CExpandedImageBox::SetRenderingRect, COMDAT
; _this$ = ecx

; 1453 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1454 : 		if (!m_pImageInstance)

  00003	8b 49 7c	 mov	 ecx, DWORD PTR [ecx+124]
  00006	85 c9		 test	 ecx, ecx
  00008	74 33		 je	 SHORT $LN1@SetRenderi

; 1455 : 			return;
; 1456 : 
; 1457 : 		((CGraphicExpandedImageInstance*)m_pImageInstance)->SetRenderingRect(fLeft, fTop, fRight, fBottom);

  0000a	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fBottom$[ebp]
  0000f	83 ec 10	 sub	 esp, 16			; 00000010H
  00012	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00018	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fRight$[ebp]
  0001d	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00023	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fTop$[ebp]
  00028	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0002e	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fLeft$[ebp]
  00033	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00038	e8 00 00 00 00	 call	 ?SetRenderingRect@CGraphicExpandedImageInstance@@QAEXMMMM@Z ; CGraphicExpandedImageInstance::SetRenderingRect
$LN1@SetRenderi:

; 1458 : 	}

  0003d	5d		 pop	 ebp
  0003e	c2 10 00	 ret	 16			; 00000010H
?SetRenderingRect@CExpandedImageBox@UI@@QAEXMMMM@Z ENDP	; UI::CExpandedImageBox::SetRenderingRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetRotation@CExpandedImageBox@UI@@QAEXM@Z
_TEXT	SEGMENT
_fRotation$ = 8						; size = 4
?SetRotation@CExpandedImageBox@UI@@QAEXM@Z PROC		; UI::CExpandedImageBox::SetRotation, COMDAT
; _this$ = ecx

; 1446 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1447 : 		if (!m_pImageInstance)

  00003	8b 49 7c	 mov	 ecx, DWORD PTR [ecx+124]
  00006	85 c9		 test	 ecx, ecx
  00008	74 10		 je	 SHORT $LN1@SetRotatio

; 1448 : 			return;
; 1449 : 
; 1450 : 		((CGraphicExpandedImageInstance*)m_pImageInstance)->SetRotation(fRotation);

  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fRotation$[ebp]
  0000f	51		 push	 ecx
  00010	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00015	e8 00 00 00 00	 call	 ?SetRotation@CGraphicExpandedImageInstance@@QAEXM@Z ; CGraphicExpandedImageInstance::SetRotation
$LN1@SetRotatio:

; 1451 : 	}

  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?SetRotation@CExpandedImageBox@UI@@QAEXM@Z ENDP		; UI::CExpandedImageBox::SetRotation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetOrigin@CExpandedImageBox@UI@@QAEXMM@Z
_TEXT	SEGMENT
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
?SetOrigin@CExpandedImageBox@UI@@QAEXMM@Z PROC		; UI::CExpandedImageBox::SetOrigin, COMDAT
; _this$ = ecx

; 1439 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1440 : 		if (!m_pImageInstance)

  00003	8b 49 7c	 mov	 ecx, DWORD PTR [ecx+124]
  00006	85 c9		 test	 ecx, ecx
  00008	74 1d		 je	 SHORT $LN1@SetOrigin

; 1441 : 			return;
; 1442 : 
; 1443 : 		((CGraphicExpandedImageInstance*)m_pImageInstance)->SetOrigin(fx, fy);

  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fy$[ebp]
  0000f	83 ec 08	 sub	 esp, 8
  00012	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00018	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fx$[ebp]
  0001d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00022	e8 00 00 00 00	 call	 ?SetOrigin@CGraphicExpandedImageInstance@@QAEXMM@Z ; CGraphicExpandedImageInstance::SetOrigin
$LN1@SetOrigin:

; 1444 : 	}

  00027	5d		 pop	 ebp
  00028	c2 08 00	 ret	 8
?SetOrigin@CExpandedImageBox@UI@@QAEXMM@Z ENDP		; UI::CExpandedImageBox::SetOrigin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetScale@CExpandedImageBox@UI@@QAEXMM@Z
_TEXT	SEGMENT
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
?SetScale@CExpandedImageBox@UI@@QAEXMM@Z PROC		; UI::CExpandedImageBox::SetScale, COMDAT
; _this$ = ecx

; 1431 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1432 : 		if (!m_pImageInstance)

  00006	8b 4e 7c	 mov	 ecx, DWORD PTR [esi+124]
  00009	85 c9		 test	 ecx, ecx
  0000b	74 54		 je	 SHORT $LN1@SetScale

; 1433 : 			return;
; 1434 : 
; 1435 : 		((CGraphicExpandedImageInstance*)m_pImageInstance)->SetScale(fx, fy);

  0000d	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fy$[ebp]
  00012	83 ec 08	 sub	 esp, 8
  00015	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0001b	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fx$[ebp]
  00020	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00025	e8 00 00 00 00	 call	 ?SetScale@CGraphicExpandedImageInstance@@QAEXMM@Z ; CGraphicExpandedImageInstance::SetScale

; 1436 : 		CWindow::SetSize(long(float(GetWidth())*fx), long(float(GetHeight())*fy));

  0002a	8b ce		 mov	 ecx, esi
  0002c	e8 00 00 00 00	 call	 ?GetHeight@CImageBox@UI@@QAEHXZ ; UI::CImageBox::GetHeight
  00031	8b ce		 mov	 ecx, esi
  00033	66 0f 6e c0	 movd	 xmm0, eax
  00037	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0003a	f3 0f 59 45 0c	 mulss	 xmm0, DWORD PTR _fy$[ebp]
  0003f	f3 0f 2c c0	 cvttss2si eax, xmm0
  00043	50		 push	 eax
  00044	e8 00 00 00 00	 call	 ?GetWidth@CImageBox@UI@@QAEHXZ ; UI::CImageBox::GetWidth
  00049	8b ce		 mov	 ecx, esi
  0004b	66 0f 6e c0	 movd	 xmm0, eax
  0004f	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00052	f3 0f 59 45 08	 mulss	 xmm0, DWORD PTR _fx$[ebp]
  00057	f3 0f 2c c0	 cvttss2si eax, xmm0
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ?SetSize@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetSize
$LN1@SetScale:
  00061	5e		 pop	 esi

; 1437 : 	}

  00062	5d		 pop	 ebp
  00063	c2 08 00	 ret	 8
?SetScale@CExpandedImageBox@UI@@QAEXMM@Z ENDP		; UI::CExpandedImageBox::SetScale
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CExpandedImageBox@UI@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CExpandedImageBox@UI@@UAE@XZ PROC			; UI::CExpandedImageBox::~CExpandedImageBox, COMDAT
; _this$ = ecx

; 1411 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CExpandedImageBox@UI@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CExpandedImageBox@UI@@6B@

; 1412 : 		OnDestroyInstance();

  0002b	e8 00 00 00 00	 call	 ?OnDestroyInstance@CExpandedImageBox@UI@@MAEXXZ ; UI::CExpandedImageBox::OnDestroyInstance

; 1413 : 	}

  00030	8b ce		 mov	 ecx, esi
  00032	e8 00 00 00 00	 call	 ??1CImageBox@UI@@UAE@XZ	; UI::CImageBox::~CImageBox
  00037	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0003a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00041	59		 pop	 ecx
  00042	5e		 pop	 esi
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
  00047	cc		 int	 3
  00048	cc		 int	 3
  00049	cc		 int	 3
  0004a	cc		 int	 3
  0004b	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CExpandedImageBox@UI@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CExpandedImageBox@UI@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CExpandedImageBox@UI@@UAE@XZ ENDP			; UI::CExpandedImageBox::~CExpandedImageBox
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CExpandedImageBox@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CExpandedImageBox@UI@@QAE@PAU_object@@@Z PROC	; UI::CExpandedImageBox::CExpandedImageBox, COMDAT
; _this$ = ecx

; 1408 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CImageBox@UI@@QAE@PAU_object@@@Z ; UI::CImageBox::CImageBox
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CExpandedImageBox@UI@@6B@

; 1409 : 	}

  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0CExpandedImageBox@UI@@QAE@PAU_object@@@Z ENDP	; UI::CExpandedImageBox::CExpandedImageBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Type@CExpandedImageBox@UI@@SAKXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?Type@CExpandedImageBox@UI@@SAKXZ PROC			; UI::CExpandedImageBox::Type, COMDAT

; 1394 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Type@CExpandedImageBox@UI@@SAKXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1395 : 		static DWORD s_dwType = GetCRC32("CExpandedImageBox", strlen("CExpandedImageBox"));

  00022	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0002e	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??Type@CExpandedImageBox@UI@@SAKXZ@4HA
  00036	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  0003c	7f 14		 jg	 SHORT $LN9@Type
$LN5@Type:

; 1396 : 		return (s_dwType);
; 1397 : 	}

  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_dwType@?1??Type@CExpandedImageBox@UI@@SAKXZ@4KA
  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
$LN9@Type:

; 1395 : 		static DWORD s_dwType = GetCRC32("CExpandedImageBox", strlen("CExpandedImageBox"));

  00052	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CExpandedImageBox@UI@@SAKXZ@4HA
  00057	e8 00 00 00 00	 call	 __Init_thread_header
  0005c	83 c4 04	 add	 esp, 4
  0005f	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??Type@CExpandedImageBox@UI@@SAKXZ@4HA, -1
  00066	75 d6		 jne	 SHORT $LN5@Type
  00068	6a 11		 push	 17			; 00000011H
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@DJHPPMGJ@CExpandedImageBox@
  0006f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00076	e8 00 00 00 00	 call	 ?GetCRC32@@YAKPBDI@Z	; GetCRC32
  0007b	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CExpandedImageBox@UI@@SAKXZ@4HA
  00080	a3 00 00 00 00	 mov	 DWORD PTR ?s_dwType@?1??Type@CExpandedImageBox@UI@@SAKXZ@4KA, eax
  00085	e8 00 00 00 00	 call	 __Init_thread_footer
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008d	eb af		 jmp	 SHORT $LN5@Type
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Type@CExpandedImageBox@UI@@SAKXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CExpandedImageBox@UI@@SAKXZ@4HA
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$?Type@CExpandedImageBox@UI@@SAKXZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Type@CExpandedImageBox@UI@@SAKXZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Type@CExpandedImageBox@UI@@SAKXZ ENDP			; UI::CExpandedImageBox::Type
; Function compile flags: /Ogtp
;	COMDAT ??_GCMarkBox@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCMarkBox@UI@@UAEPAXI@Z PROC				; UI::CMarkBox::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CMarkBox@UI@@UAE@XZ	; UI::CMarkBox::~CMarkBox
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 80 00 00 00	 push	 128			; 00000080H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCMarkBox@UI@@UAEPAXI@Z ENDP				; UI::CMarkBox::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnChangePosition@CMarkBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnChangePosition@CMarkBox@UI@@MAEXXZ PROC		; UI::CMarkBox::OnChangePosition, COMDAT
; _this$ = ecx

; 1383 : 		if (!m_pMarkInstance)

  00000	8b 41 7c	 mov	 eax, DWORD PTR [ecx+124]
  00003	85 c0		 test	 eax, eax
  00005	74 25		 je	 SHORT $LN1@OnChangePo

; 1384 : 			return;
; 1385 : 
; 1386 : 		m_pMarkInstance->SetPosition(m_rect.left, m_rect.top);

  00007	66 0f 6e 41 38	 movd	 xmm0, DWORD PTR [ecx+56]
  0000c	83 ec 08	 sub	 esp, 8
  0000f	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00012	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00018	66 0f 6e 41 34	 movd	 xmm0, DWORD PTR [ecx+52]
  0001d	8b c8		 mov	 ecx, eax
  0001f	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00022	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00027	e8 00 00 00 00	 call	 ?SetPosition@CGraphicMarkInstance@@QAEXMM@Z ; CGraphicMarkInstance::SetPosition
$LN1@OnChangePo:

; 1387 : 	}

  0002c	c3		 ret	 0
?OnChangePosition@CMarkBox@UI@@MAEXXZ ENDP		; UI::CMarkBox::OnChangePosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CMarkBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CMarkBox@UI@@MAEXXZ PROC			; UI::CMarkBox::OnRender, COMDAT
; _this$ = ecx

; 1374 : 		if (!m_pMarkInstance)

  00000	8b 41 7c	 mov	 eax, DWORD PTR [ecx+124]
  00003	85 c0		 test	 eax, eax
  00005	74 0d		 je	 SHORT $LN3@OnRender

; 1375 : 			return;
; 1376 : 
; 1377 : 		if (IsShow())

  00007	80 79 55 00	 cmp	 BYTE PTR [ecx+85], 0
  0000b	74 07		 je	 SHORT $LN3@OnRender

; 1378 : 			m_pMarkInstance->Render();

  0000d	8b c8		 mov	 ecx, eax
  0000f	e9 00 00 00 00	 jmp	 ?Render@CGraphicMarkInstance@@QAEXXZ ; CGraphicMarkInstance::Render
$LN3@OnRender:

; 1379 : 	}

  00014	c3		 ret	 0
?OnRender@CMarkBox@UI@@MAEXXZ ENDP			; UI::CMarkBox::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnUpdate@CMarkBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnUpdate@CMarkBox@UI@@MAEXXZ PROC			; UI::CMarkBox::OnUpdate, COMDAT
; _this$ = ecx

; 1370 : 	}

  00000	c2 00 00	 ret	 0
?OnUpdate@CMarkBox@UI@@MAEXXZ ENDP			; UI::CMarkBox::OnUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnDestroyInstance@CMarkBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnDestroyInstance@CMarkBox@UI@@MAEXXZ PROC		; UI::CMarkBox::OnDestroyInstance, COMDAT
; _this$ = ecx

; 1325 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1326 : 		if (m_pMarkInstance)

  00003	8b 46 7c	 mov	 eax, DWORD PTR [esi+124]
  00006	85 c0		 test	 eax, eax
  00008	74 10		 je	 SHORT $LN2@OnDestroyI

; 1327 : 		{
; 1328 : 			CGraphicMarkInstance::Delete(m_pMarkInstance);

  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?Delete@CGraphicMarkInstance@@SAXPAV1@@Z ; CGraphicMarkInstance::Delete
  00010	83 c4 04	 add	 esp, 4

; 1329 : 			m_pMarkInstance=NULL;

  00013	c7 46 7c 00 00
	00 00		 mov	 DWORD PTR [esi+124], 0
$LN2@OnDestroyI:

; 1330 : 		}
; 1331 : 	}

  0001a	5e		 pop	 esi
  0001b	c3		 ret	 0
?OnDestroyInstance@CMarkBox@UI@@MAEXXZ ENDP		; UI::CMarkBox::OnDestroyInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnCreateInstance@CMarkBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnCreateInstance@CMarkBox@UI@@MAEXXZ PROC		; UI::CMarkBox::OnCreateInstance, COMDAT
; _this$ = ecx

; 1319 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1320 : 		OnDestroyInstance();

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	ff 90 a0 00 00
	00		 call	 DWORD PTR [eax+160]

; 1321 : 		m_pMarkInstance = CGraphicMarkInstance::New();

  0000b	e8 00 00 00 00	 call	 ?New@CGraphicMarkInstance@@SAPAV1@XZ ; CGraphicMarkInstance::New
  00010	89 46 7c	 mov	 DWORD PTR [esi+124], eax
  00013	5e		 pop	 esi

; 1322 : 	}

  00014	c3		 ret	 0
?OnCreateInstance@CMarkBox@UI@@MAEXXZ ENDP		; UI::CMarkBox::OnCreateInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetScale@CMarkBox@UI@@QAEXM@Z
_TEXT	SEGMENT
_fScale$ = 8						; size = 4
?SetScale@CMarkBox@UI@@QAEXM@Z PROC			; UI::CMarkBox::SetScale, COMDAT
; _this$ = ecx

; 1345 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1346 : 		if (!m_pMarkInstance)

  00003	8b 49 7c	 mov	 ecx, DWORD PTR [ecx+124]
  00006	85 c9		 test	 ecx, ecx
  00008	74 10		 je	 SHORT $LN1@SetScale

; 1347 : 			return;
; 1348 : 
; 1349 : 		m_pMarkInstance->SetScale(fScale);

  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fScale$[ebp]
  0000f	51		 push	 ecx
  00010	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00015	e8 00 00 00 00	 call	 ?SetScale@CGraphicMarkInstance@@QAEXM@Z ; CGraphicMarkInstance::SetScale
$LN1@SetScale:

; 1350 : 	}

  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?SetScale@CMarkBox@UI@@QAEXM@Z ENDP			; UI::CMarkBox::SetScale
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetIndex@CMarkBox@UI@@QAEXI@Z
_TEXT	SEGMENT
_uIndex$ = 8						; size = 4
?SetIndex@CMarkBox@UI@@QAEXI@Z PROC			; UI::CMarkBox::SetIndex, COMDAT
; _this$ = ecx

; 1353 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1354 : 		if (!m_pMarkInstance)

  00003	8b 49 7c	 mov	 ecx, DWORD PTR [ecx+124]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN1@SetIndex

; 1358 : 	}

  0000a	5d		 pop	 ebp

; 1355 : 			return;
; 1356 : 
; 1357 : 		m_pMarkInstance->SetIndex(uIndex);

  0000b	e9 00 00 00 00	 jmp	 ?SetIndex@CGraphicMarkInstance@@QAEXI@Z ; CGraphicMarkInstance::SetIndex
$LN1@SetIndex:

; 1358 : 	}

  00010	5d		 pop	 ebp
  00011	c2 04 00	 ret	 4
?SetIndex@CMarkBox@UI@@QAEXI@Z ENDP			; UI::CMarkBox::SetIndex
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetDiffuseColor@CMarkBox@UI@@QAEXMMMM@Z
_TEXT	SEGMENT
_fr$ = 8						; size = 4
_fg$ = 12						; size = 4
_fb$ = 16						; size = 4
_fa$ = 20						; size = 4
?SetDiffuseColor@CMarkBox@UI@@QAEXMMMM@Z PROC		; UI::CMarkBox::SetDiffuseColor, COMDAT
; _this$ = ecx

; 1361 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1362 : 		if (!m_pMarkInstance)

  00003	8b 49 7c	 mov	 ecx, DWORD PTR [ecx+124]
  00006	85 c9		 test	 ecx, ecx
  00008	74 33		 je	 SHORT $LN1@SetDiffuse

; 1363 : 			return;
; 1364 : 
; 1365 : 		m_pMarkInstance->SetDiffuseColor(fr, fg, fb, fa);

  0000a	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fa$[ebp]
  0000f	83 ec 10	 sub	 esp, 16			; 00000010H
  00012	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00018	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fb$[ebp]
  0001d	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00023	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fg$[ebp]
  00028	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0002e	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fr$[ebp]
  00033	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00038	e8 00 00 00 00	 call	 ?SetDiffuseColor@CGraphicMarkInstance@@QAEXMMMM@Z ; CGraphicMarkInstance::SetDiffuseColor
$LN1@SetDiffuse:

; 1366 : 	}

  0003d	5d		 pop	 ebp
  0003e	c2 10 00	 ret	 16			; 00000010H
?SetDiffuseColor@CMarkBox@UI@@QAEXMMMM@Z ENDP		; UI::CMarkBox::SetDiffuseColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?LoadImageA@CMarkBox@UI@@QAEXPBD@Z
_TEXT	SEGMENT
_c_szFilename$ = 8					; size = 4
?LoadImageA@CMarkBox@UI@@QAEXPBD@Z PROC			; UI::CMarkBox::LoadImageA, COMDAT
; _this$ = ecx

; 1334 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1335 : 		OnCreateInstance();

  00006	8b 06		 mov	 eax, DWORD PTR [esi]
  00008	ff 90 9c 00 00
	00		 call	 DWORD PTR [eax+156]

; 1336 : 
; 1337 : 		m_pMarkInstance->SetImageFileName(c_szFilename);

  0000e	ff 75 08	 push	 DWORD PTR _c_szFilename$[ebp]
  00011	8b 4e 7c	 mov	 ecx, DWORD PTR [esi+124]
  00014	e8 00 00 00 00	 call	 ?SetImageFileName@CGraphicMarkInstance@@QAEXPBD@Z ; CGraphicMarkInstance::SetImageFileName

; 1338 : 		m_pMarkInstance->Load();

  00019	8b 4e 7c	 mov	 ecx, DWORD PTR [esi+124]
  0001c	e8 00 00 00 00	 call	 ?Load@CGraphicMarkInstance@@QAEXXZ ; CGraphicMarkInstance::Load

; 1339 : 		SetSize(m_pMarkInstance->GetWidth(), m_pMarkInstance->GetHeight());

  00021	8b 4e 7c	 mov	 ecx, DWORD PTR [esi+124]
  00024	e8 00 00 00 00	 call	 ?GetHeight@CGraphicMarkInstance@@QAEHXZ ; CGraphicMarkInstance::GetHeight
  00029	8b 4e 7c	 mov	 ecx, DWORD PTR [esi+124]
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ?GetWidth@CGraphicMarkInstance@@QAEHXZ ; CGraphicMarkInstance::GetWidth
  00032	50		 push	 eax
  00033	8b ce		 mov	 ecx, esi
  00035	e8 00 00 00 00	 call	 ?SetSize@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetSize

; 1340 : 
; 1341 : 		UpdateRect();

  0003a	8b ce		 mov	 ecx, esi
  0003c	e8 00 00 00 00	 call	 ?UpdateRect@CWindow@UI@@QAEJXZ ; UI::CWindow::UpdateRect
  00041	5e		 pop	 esi

; 1342 : 	}

  00042	5d		 pop	 ebp
  00043	c2 04 00	 ret	 4
?LoadImageA@CMarkBox@UI@@QAEXPBD@Z ENDP			; UI::CMarkBox::LoadImageA
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CMarkBox@UI@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CMarkBox@UI@@UAE@XZ PROC				; UI::CMarkBox::~CMarkBox, COMDAT
; _this$ = ecx

; 1314 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CMarkBox@UI@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CMarkBox@UI@@6B@

; 1315 : 		OnDestroyInstance();

  0002b	e8 00 00 00 00	 call	 ?OnDestroyInstance@CMarkBox@UI@@MAEXXZ ; UI::CMarkBox::OnDestroyInstance

; 1316 : 	}

  00030	8b ce		 mov	 ecx, esi
  00032	e8 00 00 00 00	 call	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
  00037	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0003a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00041	59		 pop	 ecx
  00042	5e		 pop	 esi
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
  00047	cc		 int	 3
  00048	cc		 int	 3
  00049	cc		 int	 3
  0004a	cc		 int	 3
  0004b	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CMarkBox@UI@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CMarkBox@UI@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CMarkBox@UI@@UAE@XZ ENDP				; UI::CMarkBox::~CMarkBox
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CMarkBox@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CMarkBox@UI@@QAE@PAU_object@@@Z PROC			; UI::CMarkBox::CMarkBox, COMDAT
; _this$ = ecx

; 1309 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CMarkBox@UI@@6B@

; 1310 : 		m_pMarkInstance = NULL;
; 1311 : 	}

  00018	8b c6		 mov	 eax, esi
  0001a	c7 46 7c 00 00
	00 00		 mov	 DWORD PTR [esi+124], 0
  00021	5e		 pop	 esi
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
??0CMarkBox@UI@@QAE@PAU_object@@@Z ENDP			; UI::CMarkBox::CMarkBox
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCImageBox@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCImageBox@UI@@UAEPAXI@Z PROC			; UI::CImageBox::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CImageBox@UI@@UAE@XZ	; UI::CImageBox::~CImageBox
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 80 00 00 00	 push	 128			; 00000080H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCImageBox@UI@@UAEPAXI@Z ENDP			; UI::CImageBox::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnChangePosition@CImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnChangePosition@CImageBox@UI@@MAEXXZ PROC		; UI::CImageBox::OnChangePosition, COMDAT
; _this$ = ecx

; 1300 : 		if (!m_pImageInstance)

  00000	8b 41 7c	 mov	 eax, DWORD PTR [ecx+124]
  00003	85 c0		 test	 eax, eax
  00005	74 25		 je	 SHORT $LN1@OnChangePo

; 1301 : 			return;
; 1302 : 
; 1303 : 		m_pImageInstance->SetPosition(m_rect.left, m_rect.top);

  00007	66 0f 6e 41 38	 movd	 xmm0, DWORD PTR [ecx+56]
  0000c	83 ec 08	 sub	 esp, 8
  0000f	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00012	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00018	66 0f 6e 41 34	 movd	 xmm0, DWORD PTR [ecx+52]
  0001d	8b c8		 mov	 ecx, eax
  0001f	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00022	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00027	e8 00 00 00 00	 call	 ?SetPosition@CGraphicImageInstance@@QAEXMM@Z ; CGraphicImageInstance::SetPosition
$LN1@OnChangePo:

; 1304 : 	}

  0002c	c3		 ret	 0
?OnChangePosition@CImageBox@UI@@MAEXXZ ENDP		; UI::CImageBox::OnChangePosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CImageBox@UI@@MAEXXZ PROC			; UI::CImageBox::OnRender, COMDAT
; _this$ = ecx

; 1292 : 		if (!m_pImageInstance)

  00000	8b 41 7c	 mov	 eax, DWORD PTR [ecx+124]
  00003	85 c0		 test	 eax, eax
  00005	74 0d		 je	 SHORT $LN3@OnRender

; 1293 : 			return;
; 1294 : 
; 1295 : 		if (IsShow())

  00007	80 79 55 00	 cmp	 BYTE PTR [ecx+85], 0
  0000b	74 07		 je	 SHORT $LN3@OnRender

; 1296 : 			m_pImageInstance->Render();

  0000d	8b c8		 mov	 ecx, eax
  0000f	e9 00 00 00 00	 jmp	 ?Render@CGraphicImageInstance@@QAEXXZ ; CGraphicImageInstance::Render
$LN3@OnRender:

; 1297 : 	}

  00014	c3		 ret	 0
?OnRender@CImageBox@UI@@MAEXXZ ENDP			; UI::CImageBox::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnUpdate@CImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnUpdate@CImageBox@UI@@MAEXXZ PROC			; UI::CImageBox::OnUpdate, COMDAT
; _this$ = ecx

; 1289 : 	}

  00000	c2 00 00	 ret	 0
?OnUpdate@CImageBox@UI@@MAEXXZ ENDP			; UI::CImageBox::OnUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnDestroyInstance@CImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnDestroyInstance@CImageBox@UI@@MAEXXZ PROC		; UI::CImageBox::OnDestroyInstance, COMDAT
; _this$ = ecx

; 1232 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1233 : 		if (m_pImageInstance)

  00003	8b 46 7c	 mov	 eax, DWORD PTR [esi+124]
  00006	85 c0		 test	 eax, eax
  00008	74 10		 je	 SHORT $LN2@OnDestroyI

; 1234 : 		{
; 1235 : 			CGraphicImageInstance::Delete(m_pImageInstance);

  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?Delete@CGraphicImageInstance@@SAXPAV1@@Z ; CGraphicImageInstance::Delete
  00010	83 c4 04	 add	 esp, 4

; 1236 : 			m_pImageInstance=NULL;

  00013	c7 46 7c 00 00
	00 00		 mov	 DWORD PTR [esi+124], 0
$LN2@OnDestroyI:

; 1237 : 		}
; 1238 : 	}

  0001a	5e		 pop	 esi
  0001b	c3		 ret	 0
?OnDestroyInstance@CImageBox@UI@@MAEXXZ ENDP		; UI::CImageBox::OnDestroyInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnCreateInstance@CImageBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnCreateInstance@CImageBox@UI@@MAEXXZ PROC		; UI::CImageBox::OnCreateInstance, COMDAT
; _this$ = ecx

; 1226 : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1227 : 		OnDestroyInstance();

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	ff 90 a0 00 00
	00		 call	 DWORD PTR [eax+160]

; 1228 : 
; 1229 : 		m_pImageInstance = CGraphicImageInstance::New();

  0000b	e8 00 00 00 00	 call	 ?New@CGraphicImageInstance@@SAPAV1@XZ ; CGraphicImageInstance::New
  00010	89 46 7c	 mov	 DWORD PTR [esi+124], eax
  00013	5e		 pop	 esi

; 1230 : 	}

  00014	c3		 ret	 0
?OnCreateInstance@CImageBox@UI@@MAEXXZ ENDP		; UI::CImageBox::OnCreateInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetHeight@CImageBox@UI@@QAEHXZ
_TEXT	SEGMENT
?GetHeight@CImageBox@UI@@QAEHXZ PROC			; UI::CImageBox::GetHeight, COMDAT
; _this$ = ecx

; 1281 : 		if (!m_pImageInstance)

  00000	8b 49 7c	 mov	 ecx, DWORD PTR [ecx+124]
  00003	85 c9		 test	 ecx, ecx
  00005	75 03		 jne	 SHORT $LN2@GetHeight

; 1282 : 			return 0;

  00007	33 c0		 xor	 eax, eax

; 1285 : 	}

  00009	c3		 ret	 0
$LN2@GetHeight:

; 1283 : 
; 1284 : 		return m_pImageInstance->GetHeight();

  0000a	e9 00 00 00 00	 jmp	 ?GetHeight@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetHeight
?GetHeight@CImageBox@UI@@QAEHXZ ENDP			; UI::CImageBox::GetHeight
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetWidth@CImageBox@UI@@QAEHXZ
_TEXT	SEGMENT
?GetWidth@CImageBox@UI@@QAEHXZ PROC			; UI::CImageBox::GetWidth, COMDAT
; _this$ = ecx

; 1273 : 		if (!m_pImageInstance)

  00000	8b 49 7c	 mov	 ecx, DWORD PTR [ecx+124]
  00003	85 c9		 test	 ecx, ecx
  00005	75 03		 jne	 SHORT $LN2@GetWidth

; 1274 : 			return 0;

  00007	33 c0		 xor	 eax, eax

; 1277 : 	}

  00009	c3		 ret	 0
$LN2@GetWidth:

; 1275 : 
; 1276 : 		return m_pImageInstance->GetWidth();

  0000a	e9 00 00 00 00	 jmp	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
?GetWidth@CImageBox@UI@@QAEHXZ ENDP			; UI::CImageBox::GetWidth
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetDiffuseColor@CImageBox@UI@@QAEXMMMM@Z
_TEXT	SEGMENT
_fr$ = 8						; size = 4
_fg$ = 12						; size = 4
_fb$ = 16						; size = 4
_fa$ = 20						; size = 4
?SetDiffuseColor@CImageBox@UI@@QAEXMMMM@Z PROC		; UI::CImageBox::SetDiffuseColor, COMDAT
; _this$ = ecx

; 1264 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1265 : 		if (!m_pImageInstance)

  00003	8b 49 7c	 mov	 ecx, DWORD PTR [ecx+124]
  00006	85 c9		 test	 ecx, ecx
  00008	74 33		 je	 SHORT $LN1@SetDiffuse

; 1266 : 			return;
; 1267 : 
; 1268 : 		m_pImageInstance->SetDiffuseColor(fr, fg, fb, fa);

  0000a	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fa$[ebp]
  0000f	83 ec 10	 sub	 esp, 16			; 00000010H
  00012	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00018	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fb$[ebp]
  0001d	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00023	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fg$[ebp]
  00028	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0002e	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fr$[ebp]
  00033	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00038	e8 00 00 00 00	 call	 ?SetDiffuseColor@CGraphicImageInstance@@QAEXMMMM@Z ; CGraphicImageInstance::SetDiffuseColor
$LN1@SetDiffuse:

; 1269 : 	}

  0003d	5d		 pop	 ebp
  0003e	c2 10 00	 ret	 16			; 00000010H
?SetDiffuseColor@CImageBox@UI@@QAEXMMMM@Z ENDP		; UI::CImageBox::SetDiffuseColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?LoadImageA@CImageBox@UI@@QAEHPBD@Z
_TEXT	SEGMENT
_c_szFileName$ = 8					; size = 4
?LoadImageA@CImageBox@UI@@QAEHPBD@Z PROC		; UI::CImageBox::LoadImageA, COMDAT
; _this$ = ecx

; 1241 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 1242 : 		if (!c_szFileName[0])

  00005	8b 7d 08	 mov	 edi, DWORD PTR _c_szFileName$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	80 3f 00	 cmp	 BYTE PTR [edi], 0
  0000d	74 6b		 je	 SHORT $LN9@LoadImageA

; 1243 : 			return FALSE;
; 1244 : 
; 1245 : 		OnCreateInstance();

  0000f	8b 06		 mov	 eax, DWORD PTR [esi]
  00011	ff 90 9c 00 00
	00		 call	 DWORD PTR [eax+156]

; 1246 : 
; 1247 : 		CResource * pResource = CResourceManager::Instance().GetResourcePointer(c_szFileName);

  00017	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  0001d	57		 push	 edi
  0001e	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  00023	8b f8		 mov	 edi, eax

; 1248 : 		if (!pResource)

  00025	85 ff		 test	 edi, edi
  00027	74 51		 je	 SHORT $LN9@LoadImageA

; 1249 : 			return FALSE;
; 1250 : 		if (!pResource->IsType(CGraphicImage::Type()))

  00029	e8 00 00 00 00	 call	 ?Type@CGraphicImage@@SAKXZ ; CGraphicImage::Type
  0002e	50		 push	 eax
  0002f	8b cf		 mov	 ecx, edi
  00031	e8 00 00 00 00	 call	 ?IsType@CResource@@QAE_NK@Z ; CResource::IsType
  00036	84 c0		 test	 al, al
  00038	74 40		 je	 SHORT $LN9@LoadImageA

; 1251 : 			return FALSE;
; 1252 : 
; 1253 : 		m_pImageInstance->SetImagePointer(static_cast<CGraphicImage*>(pResource));

  0003a	8b 4e 7c	 mov	 ecx, DWORD PTR [esi+124]
  0003d	57		 push	 edi
  0003e	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer

; 1254 : 		if (m_pImageInstance->IsEmpty())

  00043	8b 4e 7c	 mov	 ecx, DWORD PTR [esi+124]
  00046	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicImageInstance@@QBE_NXZ ; CGraphicImageInstance::IsEmpty
  0004b	84 c0		 test	 al, al
  0004d	75 2b		 jne	 SHORT $LN9@LoadImageA

; 1256 : 
; 1257 : 		SetSize(m_pImageInstance->GetWidth(), m_pImageInstance->GetHeight());

  0004f	8b 4e 7c	 mov	 ecx, DWORD PTR [esi+124]
  00052	e8 00 00 00 00	 call	 ?GetHeight@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetHeight
  00057	8b 4e 7c	 mov	 ecx, DWORD PTR [esi+124]
  0005a	50		 push	 eax
  0005b	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
  00060	50		 push	 eax
  00061	8b ce		 mov	 ecx, esi
  00063	e8 00 00 00 00	 call	 ?SetSize@CWindow@UI@@QAEXJJ@Z ; UI::CWindow::SetSize

; 1258 : 		UpdateRect();

  00068	8b ce		 mov	 ecx, esi
  0006a	e8 00 00 00 00	 call	 ?UpdateRect@CWindow@UI@@QAEJXZ ; UI::CWindow::UpdateRect
  0006f	5f		 pop	 edi

; 1259 : 
; 1260 : 		return TRUE;

  00070	b8 01 00 00 00	 mov	 eax, 1

; 1261 : 	}

  00075	5e		 pop	 esi
  00076	5d		 pop	 ebp
  00077	c2 04 00	 ret	 4
$LN9@LoadImageA:
  0007a	5f		 pop	 edi

; 1255 : 			return FALSE;

  0007b	33 c0		 xor	 eax, eax

; 1261 : 	}

  0007d	5e		 pop	 esi
  0007e	5d		 pop	 ebp
  0007f	c2 04 00	 ret	 4
?LoadImageA@CImageBox@UI@@QAEHPBD@Z ENDP		; UI::CImageBox::LoadImageA
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CImageBox@UI@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CImageBox@UI@@UAE@XZ PROC				; UI::CImageBox::~CImageBox, COMDAT
; _this$ = ecx

; 1221 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CImageBox@UI@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CImageBox@UI@@6B@

; 1222 : 		OnDestroyInstance();

  0002b	e8 00 00 00 00	 call	 ?OnDestroyInstance@CImageBox@UI@@MAEXXZ ; UI::CImageBox::OnDestroyInstance

; 1223 : 	}

  00030	8b ce		 mov	 ecx, esi
  00032	e8 00 00 00 00	 call	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
  00037	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0003a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00041	59		 pop	 ecx
  00042	5e		 pop	 esi
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
  00047	cc		 int	 3
  00048	cc		 int	 3
  00049	cc		 int	 3
  0004a	cc		 int	 3
  0004b	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CImageBox@UI@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CImageBox@UI@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CImageBox@UI@@UAE@XZ ENDP				; UI::CImageBox::~CImageBox
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CImageBox@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CImageBox@UI@@QAE@PAU_object@@@Z PROC		; UI::CImageBox::CImageBox, COMDAT
; _this$ = ecx

; 1217 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CImageBox@UI@@6B@

; 1218 : 		m_pImageInstance = NULL;
; 1219 : 	}

  00018	8b c6		 mov	 eax, esi
  0001a	c7 46 7c 00 00
	00 00		 mov	 DWORD PTR [esi+124], 0
  00021	5e		 pop	 esi
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
??0CImageBox@UI@@QAE@PAU_object@@@Z ENDP		; UI::CImageBox::CImageBox
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCNumberLine@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCNumberLine@UI@@UAEPAXI@Z PROC			; UI::CNumberLine::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CNumberLine@UI@@UAE@XZ ; UI::CNumberLine::~CNumberLine
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 c0 00 00 00	 push	 192			; 000000c0H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCNumberLine@UI@@UAEPAXI@Z ENDP			; UI::CNumberLine::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ PROC ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Xlength, COMDAT

; 2138 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ ENDP ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??1?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAE@XZ PROC ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::~vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >, COMDAT
; _this$ = ecx

; 766  :     _CONSTEXPR20 ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	85 c0		 test	 eax, eax
  00007	74 40		 je	 SHORT $LN4@vector

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0000c	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000e	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00011	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00017	72 12		 jb	 SHORT $LN20@vector

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00019	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0001c	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0001f	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00021	83 c0 fc	 add	 eax, -4			; fffffffcH
  00024	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00027	77 22		 ja	 SHORT $LN17@vector

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00029	8b c2		 mov	 eax, edx
$LN20@vector:

; 265  :         ::operator delete(_Ptr, _Bytes);

  0002b	51		 push	 ecx
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  00032	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00038	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2050 :             _Mylast  = nullptr;

  0003b	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 2051 :             _Myend   = nullptr;

  00042	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@vector:
  00049	5e		 pop	 esi

; 772  :     }

  0004a	c3		 ret	 0
$LN17@vector:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004b	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN28@vector:
  00050	cc		 int	 3
??1?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAE@XZ ENDP ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::~vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnChangePosition@CNumberLine@UI@@MAEXXZ
_TEXT	SEGMENT
tv296 = -8						; size = 4
_i$1$ = -4						; size = 4
?OnChangePosition@CNumberLine@UI@@MAEXXZ PROC		; UI::CNumberLine::OnChangePosition, COMDAT
; _this$ = ecx

; 1183 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx

; 1184 : 		int ix = m_x;
; 1185 : 		int iy = m_y;
; 1186 : 
; 1187 : 		if (m_pParent)

  0000b	83 7f 60 00	 cmp	 DWORD PTR [edi+96], 0
  0000f	8b 5f 24	 mov	 ebx, DWORD PTR [edi+36]
  00012	8b 77 28	 mov	 esi, DWORD PTR [edi+40]
  00015	74 06		 je	 SHORT $LN7@OnChangePo

; 1188 : 		{
; 1189 : 			ix = m_rect.left;

  00017	8b 5f 34	 mov	 ebx, DWORD PTR [edi+52]

; 1190 : 			iy = m_rect.top;

  0001a	8b 77 38	 mov	 esi, DWORD PTR [edi+56]
$LN7@OnChangePo:

; 1191 : 		}
; 1192 : 
; 1193 : 		switch (m_iHorizontalAlign)

  0001d	8b 87 b8 00 00
	00		 mov	 eax, DWORD PTR [edi+184]
  00023	83 e8 01	 sub	 eax, 1
  00026	74 0d		 je	 SHORT $LN9@OnChangePo
  00028	83 e8 01	 sub	 eax, 1
  0002b	75 17		 jne	 SHORT $LN2@OnChangePo

; 1199 : 				break;
; 1200 : 			case HORIZONTAL_ALIGN_RIGHT:
; 1201 : 				ix -= int(m_dwWidthSummary);

  0002d	2b 9f bc 00 00
	00		 sub	 ebx, DWORD PTR [edi+188]
  00033	eb 0f		 jmp	 SHORT $LN2@OnChangePo
$LN9@OnChangePo:

; 1194 : 		{
; 1195 : 			case HORIZONTAL_ALIGN_LEFT:
; 1196 : 				break;
; 1197 : 			case HORIZONTAL_ALIGN_CENTER:
; 1198 : 				ix -= int(m_dwWidthSummary) / 2;

  00035	8b 87 bc 00 00
	00		 mov	 eax, DWORD PTR [edi+188]
  0003b	99		 cdq
  0003c	2b c2		 sub	 eax, edx
  0003e	d1 f8		 sar	 eax, 1
  00040	f7 d8		 neg	 eax
  00042	03 d8		 add	 ebx, eax
$LN2@OnChangePo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00044	8b 87 b0 00 00
	00		 mov	 eax, DWORD PTR [edi+176]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1205 : 		for (DWORD i = 0; i < m_ImageInstanceVector.size(); ++i)

  0004a	33 c9		 xor	 ecx, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0004c	8b 97 ac 00 00
	00		 mov	 edx, DWORD PTR [edi+172]
  00052	2b c2		 sub	 eax, edx
  00054	c1 f8 02	 sar	 eax, 2
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1205 : 		for (DWORD i = 0; i < m_ImageInstanceVector.size(); ++i)

  00057	89 4d fc	 mov	 DWORD PTR _i$1$[ebp], ecx
  0005a	85 c0		 test	 eax, eax
  0005c	74 67		 je	 SHORT $LN5@OnChangePo
  0005e	66 0f 6e c6	 movd	 xmm0, esi
  00062	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00065	f3 0f 11 45 f8	 movss	 DWORD PTR tv296[ebp], xmm0
  0006a	66 0f 1f 44 00
	00		 npad	 6
$LL6@OnChangePo:

; 1207 : 			m_ImageInstanceVector[i]->SetPosition(ix, iy);

  00070	83 ec 08	 sub	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

  00073	8d 34 8d 00 00
	00 00		 lea	 esi, DWORD PTR [ecx*4]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1207 : 			m_ImageInstanceVector[i]->SetPosition(ix, iy);

  0007a	8b 0c 16	 mov	 ecx, DWORD PTR [esi+edx]
  0007d	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00083	66 0f 6e c3	 movd	 xmm0, ebx
  00087	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0008a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0008f	e8 00 00 00 00	 call	 ?SetPosition@CGraphicImageInstance@@QAEXMM@Z ; CGraphicImageInstance::SetPosition
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

  00094	8b 8f ac 00 00
	00		 mov	 ecx, DWORD PTR [edi+172]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1208 : 			ix += m_ImageInstanceVector[i]->GetWidth();

  0009a	8b 0c 31	 mov	 ecx, DWORD PTR [ecx+esi]
  0009d	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
  000a2	8b 4d fc	 mov	 ecx, DWORD PTR _i$1$[ebp]
  000a5	03 d8		 add	 ebx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  000a7	8b 87 b0 00 00
	00		 mov	 eax, DWORD PTR [edi+176]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1205 : 		for (DWORD i = 0; i < m_ImageInstanceVector.size(); ++i)

  000ad	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  000ae	8b 97 ac 00 00
	00		 mov	 edx, DWORD PTR [edi+172]
  000b4	2b c2		 sub	 eax, edx
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1205 : 		for (DWORD i = 0; i < m_ImageInstanceVector.size(); ++i)

  000b6	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR tv296[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  000bb	c1 f8 02	 sar	 eax, 2
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1205 : 		for (DWORD i = 0; i < m_ImageInstanceVector.size(); ++i)

  000be	89 4d fc	 mov	 DWORD PTR _i$1$[ebp], ecx
  000c1	3b c8		 cmp	 ecx, eax
  000c3	72 ab		 jb	 SHORT $LL6@OnChangePo
$LN5@OnChangePo:
  000c5	5f		 pop	 edi

; 1209 : 		}
; 1210 : 	}

  000c6	5e		 pop	 esi
  000c7	5b		 pop	 ebx
  000c8	8b e5		 mov	 esp, ebp
  000ca	5d		 pop	 ebp
  000cb	c3		 ret	 0
?OnChangePosition@CNumberLine@UI@@MAEXXZ ENDP		; UI::CNumberLine::OnChangePosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CNumberLine@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CNumberLine@UI@@MAEXXZ PROC			; UI::CNumberLine::OnRender, COMDAT
; _this$ = ecx

; 1175 : 	{

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 1176 : 		for (DWORD i = 0; i < m_ImageInstanceVector.size(); ++i)

  00004	33 f6		 xor	 esi, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00006	8b 87 b0 00 00
	00		 mov	 eax, DWORD PTR [edi+176]
  0000c	8b 8f ac 00 00
	00		 mov	 ecx, DWORD PTR [edi+172]
  00012	2b c1		 sub	 eax, ecx
  00014	c1 f8 02	 sar	 eax, 2
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1176 : 		for (DWORD i = 0; i < m_ImageInstanceVector.size(); ++i)

  00017	85 c0		 test	 eax, eax
  00019	74 23		 je	 SHORT $LN3@OnRender
  0001b	0f 1f 44 00 00	 npad	 5
$LL4@OnRender:

; 1177 : 		{
; 1178 : 			m_ImageInstanceVector[i]->Render();

  00020	8b 0c b1	 mov	 ecx, DWORD PTR [ecx+esi*4]
  00023	e8 00 00 00 00	 call	 ?Render@CGraphicImageInstance@@QAEXXZ ; CGraphicImageInstance::Render
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00028	8b 87 b0 00 00
	00		 mov	 eax, DWORD PTR [edi+176]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1176 : 		for (DWORD i = 0; i < m_ImageInstanceVector.size(); ++i)

  0002e	46		 inc	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0002f	8b 8f ac 00 00
	00		 mov	 ecx, DWORD PTR [edi+172]
  00035	2b c1		 sub	 eax, ecx
  00037	c1 f8 02	 sar	 eax, 2
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1176 : 		for (DWORD i = 0; i < m_ImageInstanceVector.size(); ++i)

  0003a	3b f0		 cmp	 esi, eax
  0003c	72 e2		 jb	 SHORT $LL4@OnRender
$LN3@OnRender:
  0003e	5f		 pop	 edi

; 1179 : 		}
; 1180 : 	}

  0003f	5e		 pop	 esi
  00040	c3		 ret	 0
?OnRender@CNumberLine@UI@@MAEXXZ ENDP			; UI::CNumberLine::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?ClearNumber@CNumberLine@UI@@IAEXXZ
_TEXT	SEGMENT
?ClearNumber@CNumberLine@UI@@IAEXXZ PROC		; UI::CNumberLine::ClearNumber, COMDAT
; _this$ = ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00000	8b 81 ac 00 00
	00		 mov	 eax, DWORD PTR [ecx+172]
  00006	3b 81 b0 00 00
	00		 cmp	 eax, DWORD PTR [ecx+176]
  0000c	74 06		 je	 SHORT $LN3@ClearNumbe

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  0000e	89 81 b0 00 00
	00		 mov	 DWORD PTR [ecx+176], eax
$LN3@ClearNumbe:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3395 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00014	6a 00		 push	 0
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1170 : 		m_dwWidthSummary = 0;

  00016	c7 81 bc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+188], 0

; 1171 : 		m_strNumber = "";

  00020	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3395 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00026	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  0002b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1172 : 	}

  00030	c3		 ret	 0
?ClearNumber@CNumberLine@UI@@IAEXXZ ENDP		; UI::CNumberLine::ClearNumber
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetNumber@CNumberLine@UI@@QAEXPBD@Z
_TEXT	SEGMENT
tv3792 = -88						; size = 4
_pInstance$2 = -88					; size = 4
_c_szNumber$GSCopy$1$ = -84				; size = 4
_i$1$ = -84						; size = 4
_this$GSCopy$1$ = -80					; size = 4
__Old_capacity$1$ = -76					; size = 4
__Left_size$1$ = -76					; size = 4
$T3 = -72						; size = 4
__Result$1$ = -72					; size = 4
_this$1$ = -72						; size = 4
_cChar$1$ = -65						; size = 1
$T4 = -64						; size = 24
$T5 = -64						; size = 24
$T6 = -64						; size = 24
$T7 = -64						; size = 24
$T8 = -64						; size = 24
$T9 = -64						; size = 24
$T10 = -64						; size = 24
$T11 = -64						; size = 24
_strImageFileName$12 = -40				; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_c_szNumber$ = 8					; size = 4
?SetNumber@CNumberLine@UI@@QAEXPBD@Z PROC		; UI::CNumberLine::SetNumber, COMDAT
; _this$ = ecx

; 1100 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetNumber@CNumberLine@UI@@QAEXPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	8b c1		 mov	 eax, ecx
  0002c	89 45 b0	 mov	 DWORD PTR _this$GSCopy$1$[ebp], eax
  0002f	8b 75 08	 mov	 esi, DWORD PTR _c_szNumber$[ebp]

; 1101 : 		if (0 == m_strNumber.compare(c_szNumber))

  00032	8d b8 94 00 00
	00		 lea	 edi, DWORD PTR [eax+148]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 403  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00038	8b d6		 mov	 edx, esi
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1100 : 	{

  0003a	89 75 ac	 mov	 DWORD PTR _c_szNumber$GSCopy$1$[ebp], esi

; 1101 : 		if (0 == m_strNumber.compare(c_szNumber))

  0003d	89 7d b8	 mov	 DWORD PTR _this$1$[ebp], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 403  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00040	8d 4a 01	 lea	 ecx, DWORD PTR [edx+1]
$LL856@SetNumber:
  00043	8a 02		 mov	 al, BYTE PTR [edx]
  00045	42		 inc	 edx
  00046	84 c0		 test	 al, al
  00048	75 f9		 jne	 SHORT $LL856@SetNumber
  0004a	2b d1		 sub	 edx, ecx

; 2236 :         if (_Large_string_engaged()) {

  0004c	83 7f 14 10	 cmp	 DWORD PTR [edi+20], 16	; 00000010H
  00050	8b cf		 mov	 ecx, edi
  00052	72 02		 jb	 SHORT $LN852@SetNumber

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

  00054	8b 0f		 mov	 ecx, DWORD PTR [edi]
$LN852@SetNumber:

; 4648 :         return _Traits_compare<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Ptr, _Traits::length(_Ptr));

  00056	8b 47 10	 mov	 eax, DWORD PTR [edi+16]

; 555  :     const int _Ans = _Traits::compare(_Left, _Right, (_STD min)(_Left_size, _Right_size));

  00059	3b d0		 cmp	 edx, eax
  0005b	8b f8		 mov	 edi, eax
  0005d	0f 42 fa	 cmovb	 edi, edx

; 383  :         return _CSTD memcmp(_First1, _First2, _Count);

  00060	83 ef 04	 sub	 edi, 4
  00063	72 11		 jb	 SHORT $LN859@SetNumber
$LL860@SetNumber:
  00065	8b 01		 mov	 eax, DWORD PTR [ecx]
  00067	3b 06		 cmp	 eax, DWORD PTR [esi]
  00069	75 10		 jne	 SHORT $LN858@SetNumber
  0006b	83 c1 04	 add	 ecx, 4
  0006e	83 c6 04	 add	 esi, 4
  00071	83 ef 04	 sub	 edi, 4
  00074	73 ef		 jae	 SHORT $LL860@SetNumber
$LN859@SetNumber:
  00076	83 ff fc	 cmp	 edi, -4			; fffffffcH
  00079	74 34		 je	 SHORT $LN857@SetNumber
$LN858@SetNumber:
  0007b	8a 01		 mov	 al, BYTE PTR [ecx]
  0007d	3a 06		 cmp	 al, BYTE PTR [esi]
  0007f	75 27		 jne	 SHORT $LN861@SetNumber
  00081	83 ff fd	 cmp	 edi, -3			; fffffffdH
  00084	74 29		 je	 SHORT $LN857@SetNumber
  00086	8a 41 01	 mov	 al, BYTE PTR [ecx+1]
  00089	3a 46 01	 cmp	 al, BYTE PTR [esi+1]
  0008c	75 1a		 jne	 SHORT $LN861@SetNumber
  0008e	83 ff fe	 cmp	 edi, -2			; fffffffeH
  00091	74 1c		 je	 SHORT $LN857@SetNumber
  00093	8a 41 02	 mov	 al, BYTE PTR [ecx+2]
  00096	3a 46 02	 cmp	 al, BYTE PTR [esi+2]
  00099	75 0d		 jne	 SHORT $LN861@SetNumber
  0009b	83 ff ff	 cmp	 edi, -1
  0009e	74 0f		 je	 SHORT $LN857@SetNumber
  000a0	8a 41 03	 mov	 al, BYTE PTR [ecx+3]
  000a3	3a 46 03	 cmp	 al, BYTE PTR [esi+3]
  000a6	74 07		 je	 SHORT $LN857@SetNumber
$LN861@SetNumber:
  000a8	1b c0		 sbb	 eax, eax
  000aa	83 c8 01	 or	 eax, 1
  000ad	eb 02		 jmp	 SHORT $LN862@SetNumber
$LN857@SetNumber:
  000af	33 c0		 xor	 eax, eax
$LN862@SetNumber:

; 557  :     if (_Ans != 0) {

  000b1	8b 7d b8	 mov	 edi, DWORD PTR _this$1$[ebp]
  000b4	85 c0		 test	 eax, eax
  000b6	75 0b		 jne	 SHORT $LN253@SetNumber

; 558  :         return _Ans;
; 559  :     }
; 560  : 
; 561  :     if (_Left_size < _Right_size) {

  000b8	39 57 10	 cmp	 DWORD PTR [edi+16], edx
  000bb	72 06		 jb	 SHORT $LN253@SetNumber

; 562  :         return -1;
; 563  :     }
; 564  : 
; 565  :     if (_Left_size > _Right_size) {

  000bd	0f 86 ae 09 00
	00		 jbe	 $LN855@SetNumber
$LN253@SetNumber:
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1104 : 		ClearNumber();

  000c3	8b 4d b0	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  000c6	e8 00 00 00 00	 call	 ?ClearNumber@CNumberLine@UI@@IAEXXZ ; UI::CNumberLine::ClearNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 403  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  000cb	8b 55 ac	 mov	 edx, DWORD PTR _c_szNumber$GSCopy$1$[ebp]
  000ce	8b ca		 mov	 ecx, edx
  000d0	8d 71 01	 lea	 esi, DWORD PTR [ecx+1]
$LL863@SetNumber:
  000d3	8a 01		 mov	 al, BYTE PTR [ecx]
  000d5	41		 inc	 ecx
  000d6	84 c0		 test	 al, al
  000d8	75 f9		 jne	 SHORT $LL863@SetNumber
  000da	2b ce		 sub	 ecx, esi

; 3395 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  000dc	51		 push	 ecx
  000dd	52		 push	 edx
  000de	8b cf		 mov	 ecx, edi
  000e0	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1108 : 		for (DWORD i = 0; i < m_strNumber.size(); ++i)

  000e5	8b 45 b0	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  000e8	33 d2		 xor	 edx, edx
  000ea	89 55 ac	 mov	 DWORD PTR _i$1$[ebp], edx
  000ed	39 90 a4 00 00
	00		 cmp	 DWORD PTR [eax+164], edx
  000f3	0f 86 78 09 00
	00		 jbe	 $LN855@SetNumber
  000f9	0f 1f 80 00 00
	00 00		 npad	 7
$LL4@SetNumber:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2227 :         if (_Large_string_engaged()) {

  00100	83 7f 14 10	 cmp	 DWORD PTR [edi+20], 16	; 00000010H
  00104	8b cf		 mov	 ecx, edi
  00106	72 02		 jb	 SHORT $LN38@SetNumber

; 2228 :             _Result = _Unfancy(_Bx._Ptr);

  00108	8b 0f		 mov	 ecx, DWORD PTR [edi]
$LN38@SetNumber:
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1110 : 			char cChar = m_strNumber[i];

  0010a	8a 0c 11	 mov	 cl, BYTE PTR [ecx+edx]
  0010d	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

  00110	ba 0f 00 00 00	 mov	 edx, 15			; 0000000fH
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1110 : 			char cChar = m_strNumber[i];

  00115	88 4d bf	 mov	 BYTE PTR _cChar$1$[ebp], cl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4821 :         _My_data._Mysize = 0;

  00118	33 ff		 xor	 edi, edi

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

  0011a	89 55 b4	 mov	 DWORD PTR __Old_capacity$1$[ebp], edx

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  0011d	0f 11 45 d8	 movups	 XMMWORD PTR _strImageFileName$12[ebp], xmm0

; 4821 :         _My_data._Mysize = 0;

  00121	89 7d e8	 mov	 DWORD PTR _strImageFileName$12[ebp+16], edi

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

  00124	89 55 ec	 mov	 DWORD PTR _strImageFileName$12[ebp+20], edx

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00127	c6 45 d8 00	 mov	 BYTE PTR _strImageFileName$12[ebp], 0
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1111 : 			std::string strImageFileName;

  0012b	89 7d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], edi

; 1112 : 
; 1113 : 			if (':' == cChar)

  0012e	80 f9 3a	 cmp	 cl, 58			; 0000003aH
  00131	0f 85 15 01 00
	00		 jne	 $LN6@SetNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4938 :     const auto _Left_size  = _Left.size();

  00137	8b 90 8c 00 00
	00		 mov	 edx, DWORD PTR [eax+140]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1115 : 				strImageFileName = m_strPath + "colon.sub";

  0013d	8d 48 7c	 lea	 ecx, DWORD PTR [eax+124]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4940 :     if (_Left.max_size() - _Left_size < _Right_size) {

  00140	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1115 : 				strImageFileName = m_strPath + "colon.sub";

  00145	89 4d b8	 mov	 DWORD PTR __Result$1$[ebp], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4940 :     if (_Left.max_size() - _Left_size < _Right_size) {

  00148	2b c2		 sub	 eax, edx
  0014a	89 55 b4	 mov	 DWORD PTR __Left_size$1$[ebp], edx
  0014d	83 f8 09	 cmp	 eax, 9
  00150	0f 82 3d 09 00
	00		 jb	 $LN846@SetNumber

; 2236 :         if (_Large_string_engaged()) {

  00156	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H
  0015a	72 05		 jb	 SHORT $LN72@SetNumber

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

  0015c	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0015e	89 4d b8	 mov	 DWORD PTR __Result$1$[ebp], ecx
$LN72@SetNumber:

; 2787 :         const auto _New_size    = static_cast<size_type>(_Left_size + _Right_size);

  00161	8d 42 09	 lea	 eax, DWORD PTR [edx+9]

; 2788 :         size_type _New_capacity = _BUF_SIZE - 1;

  00164	be 0f 00 00 00	 mov	 esi, 15			; 0000000fH

; 2789 :         auto& _My_data          = _Mypair._Myval2;
; 2790 :         _Elem* _Ptr             = _My_data._Bx._Buf;

  00169	8d 7d c0	 lea	 edi, DWORD PTR $T11[ebp]

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  0016c	0f 11 45 c0	 movups	 XMMWORD PTR $T11[ebp], xmm0

; 2794 :         if (_New_capacity < _New_size) {

  00170	3b c6		 cmp	 eax, esi
  00172	76 5e		 jbe	 SHORT $LN77@SetNumber

; 4714 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00174	8b f0		 mov	 esi, eax
  00176	83 ce 0f	 or	 esi, 15			; 0000000fH
  00179	81 fe ff ff ff
	7f		 cmp	 esi, 2147483647		; 7fffffffH

; 4715 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  0017f	76 0a		 jbe	 SHORT $LN92@SetNumber

; 4716 :             return _Max;

  00181	be ff ff ff 7f	 mov	 esi, 2147483647		; 7fffffffH
  00186	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  00189	eb 15		 jmp	 SHORT $LN854@SetNumber
$LN92@SetNumber:

; 4723 :         return (_STD max)(_Masked, _Old + _Old / 2);

  0018b	83 fe 16	 cmp	 esi, 22			; 00000016H
  0018e	b8 16 00 00 00	 mov	 eax, 22			; 00000016H
  00193	0f 42 f0	 cmovb	 esi, eax

; 2796 :             const pointer _Fancyptr = _Getal().allocate(_New_capacity + 1); // throws

  00196	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00199	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0019e	72 13		 jb	 SHORT $LN100@SetNumber
$LN854@SetNumber:

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  001a0	50		 push	 eax
  001a1	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  001a6	8b 4d b8	 mov	 ecx, DWORD PTR __Result$1$[ebp]
  001a9	83 c4 04	 add	 esp, 4
  001ac	8b 55 b4	 mov	 edx, DWORD PTR __Left_size$1$[ebp]
  001af	8b f8		 mov	 edi, eax
  001b1	eb 19		 jmp	 SHORT $LN99@SetNumber
$LN100@SetNumber:

; 240  :         }
; 241  :     }
; 242  : #endif // defined(_M_IX86) || defined(_M_X64)
; 243  : 
; 244  :     if (_Bytes != 0) {

  001b3	85 c0		 test	 eax, eax
  001b5	74 13		 je	 SHORT $LN101@SetNumber

; 87   :         return ::operator new(_Bytes);

  001b7	50		 push	 eax
  001b8	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 245  :         return _Traits::_Allocate(_Bytes);

  001bd	8b 4d b8	 mov	 ecx, DWORD PTR __Result$1$[ebp]

; 87   :         return ::operator new(_Bytes);

  001c0	83 c4 04	 add	 esp, 4

; 245  :         return _Traits::_Allocate(_Bytes);

  001c3	8b 55 b4	 mov	 edx, DWORD PTR __Left_size$1$[ebp]
  001c6	8b f8		 mov	 edi, eax
  001c8	eb 02		 jmp	 SHORT $LN99@SetNumber
$LN101@SetNumber:

; 246  :     }
; 247  : 
; 248  :     return nullptr;

  001ca	33 ff		 xor	 edi, edi
$LN99@SetNumber:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2798 :             _Construct_in_place(_My_data._Bx._Ptr, _Fancyptr);

  001cc	89 7d c0	 mov	 DWORD PTR $T11[ebp], edi
  001cf	8d 42 09	 lea	 eax, DWORD PTR [edx+9]
$LN77@SetNumber:

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  001d2	52		 push	 edx
  001d3	51		 push	 ecx
  001d4	57		 push	 edi

; 2803 :         _My_data._Mysize = _New_size;

  001d5	89 45 d0	 mov	 DWORD PTR $T11[ebp+16], eax

; 2804 :         _My_data._Myres  = _New_capacity;

  001d8	89 75 d4	 mov	 DWORD PTR $T11[ebp+20], esi

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  001db	e8 00 00 00 00	 call	 _memcpy
  001e0	8b 4d b4	 mov	 ecx, DWORD PTR __Left_size$1$[ebp]
  001e3	83 c4 0c	 add	 esp, 12			; 0000000cH
  001e6	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_09GPLBLMNE@colon?4sub@
  001ee	66 0f d6 04 0f	 movq	 QWORD PTR [edi+ecx], xmm0
  001f3	a0 08 00 00 00	 mov	 al, BYTE PTR ??_C@_09GPLBLMNE@colon?4sub@+8
  001f8	88 44 0f 08	 mov	 BYTE PTR [edi+ecx+8], al

; 2807 :         _Traits::assign(_Ptr[_New_size], _Elem());

  001fc	c6 44 0f 09 00	 mov	 BYTE PTR [edi+ecx+9], 0

; 4832 :         if (_My_data._Large_string_engaged()) {

  00201	8b 4d ec	 mov	 ecx, DWORD PTR _strImageFileName$12[ebp+20]
  00204	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00207	72 2c		 jb	 SHORT $LN118@SetNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00209	8b 55 d8	 mov	 edx, DWORD PTR _strImageFileName$12[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  0020c	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0020d	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0020f	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00215	72 14		 jb	 SHORT $LN128@SetNumber

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00217	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0021a	83 c1 23	 add	 ecx, 35			; 00000023H
  0021d	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0021f	83 c0 fc	 add	 eax, -4			; fffffffcH
  00222	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00225	0f 87 63 08 00
	00		 ja	 $LN322@SetNumber
$LN128@SetNumber:

; 265  :         ::operator delete(_Ptr, _Bytes);

  0022b	51		 push	 ecx
  0022c	52		 push	 edx
  0022d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00232	83 c4 08	 add	 esp, 8
$LN118@SetNumber:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00235	0f 10 45 c0	 movups	 xmm0, XMMWORD PTR $T11[ebp]
  00239	0f 11 45 d8	 movups	 XMMWORD PTR _strImageFileName$12[ebp], xmm0
  0023d	f3 0f 7e 45 d0	 movq	 xmm0, QWORD PTR $T11[ebp+16]
  00242	66 0f d6 45 e8	 movq	 QWORD PTR _strImageFileName$12[ebp+16], xmm0
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1116 : 			}

  00247	e9 0b 07 00 00	 jmp	 $LN23@SetNumber
$LN6@SetNumber:

; 1117 : 			else if ('?' == cChar)

  0024c	80 f9 3f	 cmp	 cl, 63			; 0000003fH
  0024f	0f 85 c3 00 00
	00		 jne	 $LN8@SetNumber

; 1118 : 			{
; 1119 : 				strImageFileName = m_strPath + "questionmark.sub";

  00255	83 c0 7c	 add	 eax, 124		; 0000007cH
  00258	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@POBNNLPJ@questionmark?4sub@
  0025d	50		 push	 eax
  0025e	8d 45 c0	 lea	 eax, DWORD PTR $T10[ebp]
  00261	50		 push	 eax
  00262	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00267	8b f0		 mov	 esi, eax
  00269	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2961 :         if (this == _STD addressof(_Right)) {

  0026c	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]
  0026f	3b c6		 cmp	 eax, esi
  00271	74 68		 je	 SHORT $LN302@SetNumber

; 4832 :         if (_My_data._Large_string_engaged()) {

  00273	8b 4d ec	 mov	 ecx, DWORD PTR _strImageFileName$12[ebp+20]
  00276	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00279	72 2c		 jb	 SHORT $LN274@SetNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0027b	8b 55 d8	 mov	 edx, DWORD PTR _strImageFileName$12[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  0027e	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0027f	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00281	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00287	72 14		 jb	 SHORT $LN284@SetNumber

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00289	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0028c	83 c1 23	 add	 ecx, 35			; 00000023H
  0028f	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00291	83 c0 fc	 add	 eax, -4			; fffffffcH
  00294	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00297	0f 87 f1 07 00
	00		 ja	 $LN322@SetNumber
$LN284@SetNumber:

; 265  :         ::operator delete(_Ptr, _Bytes);

  0029d	51		 push	 ecx
  0029e	52		 push	 edx
  0029f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  002a4	83 c4 08	 add	 esp, 8
$LN274@SetNumber:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

  002a7	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+16], 0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;

  002ae	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+20], 15 ; 0000000fH

; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  002b5	c6 45 d8 00	 mov	 BYTE PTR _strImageFileName$12[ebp], 0

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  002b9	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]
  002bc	0f 11 45 d8	 movups	 XMMWORD PTR _strImageFileName$12[ebp], xmm0
  002c0	f3 0f 7e 46 10	 movq	 xmm0, QWORD PTR [esi+16]
  002c5	66 0f d6 45 e8	 movq	 QWORD PTR _strImageFileName$12[ebp+16], xmm0

; 4821 :         _My_data._Mysize = 0;

  002ca	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

  002d1	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  002d8	c6 06 00	 mov	 BYTE PTR [esi], 0
$LN302@SetNumber:

; 4832 :         if (_My_data._Large_string_engaged()) {

  002db	8b 4d d4	 mov	 ecx, DWORD PTR $T10[ebp+20]
  002de	83 f9 10	 cmp	 ecx, 16			; 00000010H
  002e1	0f 82 70 06 00
	00		 jb	 $LN23@SetNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  002e7	8b 55 c0	 mov	 edx, DWORD PTR $T10[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  002ea	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  002eb	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  002ed	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  002f3	72 14		 jb	 SHORT $LN325@SetNumber

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  002f5	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  002f8	83 c1 23	 add	 ecx, 35			; 00000023H
  002fb	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  002fd	83 c0 fc	 add	 eax, -4			; fffffffcH
  00300	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00303	0f 87 85 07 00
	00		 ja	 $LN322@SetNumber
$LN325@SetNumber:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00309	51		 push	 ecx
  0030a	52		 push	 edx
  0030b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00310	83 c4 08	 add	 esp, 8
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1120 : 			}

  00313	e9 3f 06 00 00	 jmp	 $LN23@SetNumber
$LN8@SetNumber:

; 1121 : 			else if ('/' == cChar)

  00318	80 f9 2f	 cmp	 cl, 47			; 0000002fH
  0031b	0f 85 c3 00 00
	00		 jne	 $LN10@SetNumber

; 1122 : 			{
; 1123 : 				strImageFileName = m_strPath + "slash.sub";

  00321	83 c0 7c	 add	 eax, 124		; 0000007cH
  00324	68 00 00 00 00	 push	 OFFSET ??_C@_09JMLAABIP@slash?4sub@
  00329	50		 push	 eax
  0032a	8d 45 c0	 lea	 eax, DWORD PTR $T9[ebp]
  0032d	50		 push	 eax
  0032e	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00333	8b f0		 mov	 esi, eax
  00335	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2961 :         if (this == _STD addressof(_Right)) {

  00338	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]
  0033b	3b c6		 cmp	 eax, esi
  0033d	74 68		 je	 SHORT $LN376@SetNumber

; 4832 :         if (_My_data._Large_string_engaged()) {

  0033f	8b 4d ec	 mov	 ecx, DWORD PTR _strImageFileName$12[ebp+20]
  00342	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00345	72 2c		 jb	 SHORT $LN348@SetNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00347	8b 55 d8	 mov	 edx, DWORD PTR _strImageFileName$12[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  0034a	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0034b	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0034d	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00353	72 14		 jb	 SHORT $LN358@SetNumber

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00355	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00358	83 c1 23	 add	 ecx, 35			; 00000023H
  0035b	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0035d	83 c0 fc	 add	 eax, -4			; fffffffcH
  00360	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00363	0f 87 25 07 00
	00		 ja	 $LN322@SetNumber
$LN358@SetNumber:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00369	51		 push	 ecx
  0036a	52		 push	 edx
  0036b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00370	83 c4 08	 add	 esp, 8
$LN348@SetNumber:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

  00373	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+16], 0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;

  0037a	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+20], 15 ; 0000000fH

; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00381	c6 45 d8 00	 mov	 BYTE PTR _strImageFileName$12[ebp], 0

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00385	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]
  00388	0f 11 45 d8	 movups	 XMMWORD PTR _strImageFileName$12[ebp], xmm0
  0038c	f3 0f 7e 46 10	 movq	 xmm0, QWORD PTR [esi+16]
  00391	66 0f d6 45 e8	 movq	 QWORD PTR _strImageFileName$12[ebp+16], xmm0

; 4821 :         _My_data._Mysize = 0;

  00396	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

  0039d	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  003a4	c6 06 00	 mov	 BYTE PTR [esi], 0
$LN376@SetNumber:

; 4832 :         if (_My_data._Large_string_engaged()) {

  003a7	8b 4d d4	 mov	 ecx, DWORD PTR $T9[ebp+20]
  003aa	83 f9 10	 cmp	 ecx, 16			; 00000010H
  003ad	0f 82 a4 05 00
	00		 jb	 $LN23@SetNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  003b3	8b 55 c0	 mov	 edx, DWORD PTR $T9[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  003b6	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  003b7	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  003b9	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  003bf	72 14		 jb	 SHORT $LN399@SetNumber

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  003c1	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  003c4	83 c1 23	 add	 ecx, 35			; 00000023H
  003c7	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  003c9	83 c0 fc	 add	 eax, -4			; fffffffcH
  003cc	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  003cf	0f 87 b9 06 00
	00		 ja	 $LN322@SetNumber
$LN399@SetNumber:

; 265  :         ::operator delete(_Ptr, _Bytes);

  003d5	51		 push	 ecx
  003d6	52		 push	 edx
  003d7	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  003dc	83 c4 08	 add	 esp, 8
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1124 : 			}

  003df	e9 73 05 00 00	 jmp	 $LN23@SetNumber
$LN10@SetNumber:

; 1125 : 			else if ('%' == cChar)

  003e4	80 f9 25	 cmp	 cl, 37			; 00000025H
  003e7	0f 85 c3 00 00
	00		 jne	 $LN12@SetNumber

; 1126 : 			{
; 1127 : 				strImageFileName = m_strPath + "percent.sub";

  003ed	83 c0 7c	 add	 eax, 124		; 0000007cH
  003f0	68 00 00 00 00	 push	 OFFSET ??_C@_0M@MHAKIBOD@percent?4sub@
  003f5	50		 push	 eax
  003f6	8d 45 c0	 lea	 eax, DWORD PTR $T8[ebp]
  003f9	50		 push	 eax
  003fa	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  003ff	8b f0		 mov	 esi, eax
  00401	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2961 :         if (this == _STD addressof(_Right)) {

  00404	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]
  00407	3b c6		 cmp	 eax, esi
  00409	74 68		 je	 SHORT $LN471@SetNumber

; 4832 :         if (_My_data._Large_string_engaged()) {

  0040b	8b 4d ec	 mov	 ecx, DWORD PTR _strImageFileName$12[ebp+20]
  0040e	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00411	72 2c		 jb	 SHORT $LN443@SetNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00413	8b 55 d8	 mov	 edx, DWORD PTR _strImageFileName$12[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00416	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00417	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00419	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0041f	72 14		 jb	 SHORT $LN453@SetNumber

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00421	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00424	83 c1 23	 add	 ecx, 35			; 00000023H
  00427	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00429	83 c0 fc	 add	 eax, -4			; fffffffcH
  0042c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0042f	0f 87 59 06 00
	00		 ja	 $LN322@SetNumber
$LN453@SetNumber:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00435	51		 push	 ecx
  00436	52		 push	 edx
  00437	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0043c	83 c4 08	 add	 esp, 8
$LN443@SetNumber:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

  0043f	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+16], 0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;

  00446	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+20], 15 ; 0000000fH

; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  0044d	c6 45 d8 00	 mov	 BYTE PTR _strImageFileName$12[ebp], 0

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00451	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]
  00454	0f 11 45 d8	 movups	 XMMWORD PTR _strImageFileName$12[ebp], xmm0
  00458	f3 0f 7e 46 10	 movq	 xmm0, QWORD PTR [esi+16]
  0045d	66 0f d6 45 e8	 movq	 QWORD PTR _strImageFileName$12[ebp+16], xmm0

; 4821 :         _My_data._Mysize = 0;

  00462	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

  00469	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00470	c6 06 00	 mov	 BYTE PTR [esi], 0
$LN471@SetNumber:

; 4832 :         if (_My_data._Large_string_engaged()) {

  00473	8b 4d d4	 mov	 ecx, DWORD PTR $T8[ebp+20]
  00476	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00479	0f 82 d8 04 00
	00		 jb	 $LN23@SetNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0047f	8b 55 c0	 mov	 edx, DWORD PTR $T8[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00482	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00483	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00485	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0048b	72 14		 jb	 SHORT $LN426@SetNumber

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0048d	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00490	83 c1 23	 add	 ecx, 35			; 00000023H
  00493	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00495	83 c0 fc	 add	 eax, -4			; fffffffcH
  00498	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0049b	0f 87 ed 05 00
	00		 ja	 $LN322@SetNumber
$LN426@SetNumber:

; 265  :         ::operator delete(_Ptr, _Bytes);

  004a1	51		 push	 ecx
  004a2	52		 push	 edx
  004a3	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  004a8	83 c4 08	 add	 esp, 8
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1128 : 			}

  004ab	e9 a7 04 00 00	 jmp	 $LN23@SetNumber
$LN12@SetNumber:

; 1129 : 			else if ('+' == cChar)

  004b0	80 f9 2b	 cmp	 cl, 43			; 0000002bH
  004b3	0f 85 c3 00 00
	00		 jne	 $LN14@SetNumber

; 1130 : 			{
; 1131 : 				strImageFileName = m_strPath + "plus.sub";

  004b9	83 c0 7c	 add	 eax, 124		; 0000007cH
  004bc	68 00 00 00 00	 push	 OFFSET ??_C@_08FPHNCABK@plus?4sub@
  004c1	50		 push	 eax
  004c2	8d 45 c0	 lea	 eax, DWORD PTR $T7[ebp]
  004c5	50		 push	 eax
  004c6	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  004cb	8b f0		 mov	 esi, eax
  004cd	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2961 :         if (this == _STD addressof(_Right)) {

  004d0	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]
  004d3	3b c6		 cmp	 eax, esi
  004d5	74 68		 je	 SHORT $LN539@SetNumber

; 4832 :         if (_My_data._Large_string_engaged()) {

  004d7	8b 4d ec	 mov	 ecx, DWORD PTR _strImageFileName$12[ebp+20]
  004da	83 f9 10	 cmp	 ecx, 16			; 00000010H
  004dd	72 2c		 jb	 SHORT $LN511@SetNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  004df	8b 55 d8	 mov	 edx, DWORD PTR _strImageFileName$12[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  004e2	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  004e3	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  004e5	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  004eb	72 14		 jb	 SHORT $LN521@SetNumber

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  004ed	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  004f0	83 c1 23	 add	 ecx, 35			; 00000023H
  004f3	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  004f5	83 c0 fc	 add	 eax, -4			; fffffffcH
  004f8	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  004fb	0f 87 8d 05 00
	00		 ja	 $LN322@SetNumber
$LN521@SetNumber:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00501	51		 push	 ecx
  00502	52		 push	 edx
  00503	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00508	83 c4 08	 add	 esp, 8
$LN511@SetNumber:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

  0050b	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+16], 0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;

  00512	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+20], 15 ; 0000000fH

; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00519	c6 45 d8 00	 mov	 BYTE PTR _strImageFileName$12[ebp], 0

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  0051d	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]
  00520	0f 11 45 d8	 movups	 XMMWORD PTR _strImageFileName$12[ebp], xmm0
  00524	f3 0f 7e 46 10	 movq	 xmm0, QWORD PTR [esi+16]
  00529	66 0f d6 45 e8	 movq	 QWORD PTR _strImageFileName$12[ebp+16], xmm0

; 4821 :         _My_data._Mysize = 0;

  0052e	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

  00535	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  0053c	c6 06 00	 mov	 BYTE PTR [esi], 0
$LN539@SetNumber:

; 4832 :         if (_My_data._Large_string_engaged()) {

  0053f	8b 4d d4	 mov	 ecx, DWORD PTR $T7[ebp+20]
  00542	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00545	0f 82 0c 04 00
	00		 jb	 $LN23@SetNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0054b	8b 55 c0	 mov	 edx, DWORD PTR $T7[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  0054e	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0054f	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00551	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00557	72 14		 jb	 SHORT $LN494@SetNumber

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00559	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0055c	83 c1 23	 add	 ecx, 35			; 00000023H
  0055f	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00561	83 c0 fc	 add	 eax, -4			; fffffffcH
  00564	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00567	0f 87 21 05 00
	00		 ja	 $LN322@SetNumber
$LN494@SetNumber:

; 265  :         ::operator delete(_Ptr, _Bytes);

  0056d	51		 push	 ecx
  0056e	52		 push	 edx
  0056f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00574	83 c4 08	 add	 esp, 8
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1132 : 			}

  00577	e9 db 03 00 00	 jmp	 $LN23@SetNumber
$LN14@SetNumber:

; 1133 : 			else if ('m' == cChar)

  0057c	80 f9 6d	 cmp	 cl, 109			; 0000006dH
  0057f	0f 85 c3 00 00
	00		 jne	 $LN16@SetNumber

; 1134 : 			{
; 1135 : 				strImageFileName = m_strPath + "m.sub";

  00585	83 c0 7c	 add	 eax, 124		; 0000007cH
  00588	68 00 00 00 00	 push	 OFFSET ??_C@_05PINNHPFB@m?4sub@
  0058d	50		 push	 eax
  0058e	8d 45 c0	 lea	 eax, DWORD PTR $T6[ebp]
  00591	50		 push	 eax
  00592	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00597	8b f0		 mov	 esi, eax
  00599	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2961 :         if (this == _STD addressof(_Right)) {

  0059c	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]
  0059f	3b c6		 cmp	 eax, esi
  005a1	74 68		 je	 SHORT $LN580@SetNumber

; 4832 :         if (_My_data._Large_string_engaged()) {

  005a3	8b 4d ec	 mov	 ecx, DWORD PTR _strImageFileName$12[ebp+20]
  005a6	83 f9 10	 cmp	 ecx, 16			; 00000010H
  005a9	72 2c		 jb	 SHORT $LN552@SetNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  005ab	8b 55 d8	 mov	 edx, DWORD PTR _strImageFileName$12[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  005ae	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  005af	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  005b1	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  005b7	72 14		 jb	 SHORT $LN562@SetNumber

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  005b9	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  005bc	83 c1 23	 add	 ecx, 35			; 00000023H
  005bf	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  005c1	83 c0 fc	 add	 eax, -4			; fffffffcH
  005c4	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  005c7	0f 87 c1 04 00
	00		 ja	 $LN322@SetNumber
$LN562@SetNumber:

; 265  :         ::operator delete(_Ptr, _Bytes);

  005cd	51		 push	 ecx
  005ce	52		 push	 edx
  005cf	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  005d4	83 c4 08	 add	 esp, 8
$LN552@SetNumber:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

  005d7	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+16], 0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;

  005de	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+20], 15 ; 0000000fH

; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  005e5	c6 45 d8 00	 mov	 BYTE PTR _strImageFileName$12[ebp], 0

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  005e9	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]
  005ec	0f 11 45 d8	 movups	 XMMWORD PTR _strImageFileName$12[ebp], xmm0
  005f0	f3 0f 7e 46 10	 movq	 xmm0, QWORD PTR [esi+16]
  005f5	66 0f d6 45 e8	 movq	 QWORD PTR _strImageFileName$12[ebp+16], xmm0

; 4821 :         _My_data._Mysize = 0;

  005fa	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

  00601	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00608	c6 06 00	 mov	 BYTE PTR [esi], 0
$LN580@SetNumber:

; 4832 :         if (_My_data._Large_string_engaged()) {

  0060b	8b 4d d4	 mov	 ecx, DWORD PTR $T6[ebp+20]
  0060e	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00611	0f 82 40 03 00
	00		 jb	 $LN23@SetNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00617	8b 55 c0	 mov	 edx, DWORD PTR $T6[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  0061a	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0061b	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0061d	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00623	72 14		 jb	 SHORT $LN603@SetNumber

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00625	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00628	83 c1 23	 add	 ecx, 35			; 00000023H
  0062b	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0062d	83 c0 fc	 add	 eax, -4			; fffffffcH
  00630	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00633	0f 87 55 04 00
	00		 ja	 $LN322@SetNumber
$LN603@SetNumber:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00639	51		 push	 ecx
  0063a	52		 push	 edx
  0063b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00640	83 c4 08	 add	 esp, 8
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1136 : 			}

  00643	e9 0f 03 00 00	 jmp	 $LN23@SetNumber
$LN16@SetNumber:

; 1137 : 			else if ('g' == cChar)

  00648	80 f9 67	 cmp	 cl, 103			; 00000067H
  0064b	0f 85 c3 00 00
	00		 jne	 $LN18@SetNumber

; 1138 : 			{
; 1139 : 				strImageFileName = m_strPath + "g.sub";

  00651	83 c0 7c	 add	 eax, 124		; 0000007cH
  00654	68 00 00 00 00	 push	 OFFSET ??_C@_05FJEGFMDH@g?4sub@
  00659	50		 push	 eax
  0065a	8d 45 c0	 lea	 eax, DWORD PTR $T5[ebp]
  0065d	50		 push	 eax
  0065e	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00663	8b f0		 mov	 esi, eax
  00665	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2961 :         if (this == _STD addressof(_Right)) {

  00668	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]
  0066b	3b c6		 cmp	 eax, esi
  0066d	74 68		 je	 SHORT $LN648@SetNumber

; 4832 :         if (_My_data._Large_string_engaged()) {

  0066f	8b 4d ec	 mov	 ecx, DWORD PTR _strImageFileName$12[ebp+20]
  00672	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00675	72 2c		 jb	 SHORT $LN620@SetNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00677	8b 55 d8	 mov	 edx, DWORD PTR _strImageFileName$12[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  0067a	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0067b	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0067d	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00683	72 14		 jb	 SHORT $LN630@SetNumber

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00685	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00688	83 c1 23	 add	 ecx, 35			; 00000023H
  0068b	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0068d	83 c0 fc	 add	 eax, -4			; fffffffcH
  00690	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00693	0f 87 f5 03 00
	00		 ja	 $LN322@SetNumber
$LN630@SetNumber:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00699	51		 push	 ecx
  0069a	52		 push	 edx
  0069b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  006a0	83 c4 08	 add	 esp, 8
$LN620@SetNumber:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

  006a3	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+16], 0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;

  006aa	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+20], 15 ; 0000000fH

; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  006b1	c6 45 d8 00	 mov	 BYTE PTR _strImageFileName$12[ebp], 0

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  006b5	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]
  006b8	0f 11 45 d8	 movups	 XMMWORD PTR _strImageFileName$12[ebp], xmm0
  006bc	f3 0f 7e 46 10	 movq	 xmm0, QWORD PTR [esi+16]
  006c1	66 0f d6 45 e8	 movq	 QWORD PTR _strImageFileName$12[ebp+16], xmm0

; 4821 :         _My_data._Mysize = 0;

  006c6	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

  006cd	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  006d4	c6 06 00	 mov	 BYTE PTR [esi], 0
$LN648@SetNumber:

; 4832 :         if (_My_data._Large_string_engaged()) {

  006d7	8b 4d d4	 mov	 ecx, DWORD PTR $T5[ebp+20]
  006da	83 f9 10	 cmp	 ecx, 16			; 00000010H
  006dd	0f 82 74 02 00
	00		 jb	 $LN23@SetNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  006e3	8b 55 c0	 mov	 edx, DWORD PTR $T5[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  006e6	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  006e7	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  006e9	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  006ef	72 14		 jb	 SHORT $LN671@SetNumber

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  006f1	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  006f4	83 c1 23	 add	 ecx, 35			; 00000023H
  006f7	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  006f9	83 c0 fc	 add	 eax, -4			; fffffffcH
  006fc	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  006ff	0f 87 89 03 00
	00		 ja	 $LN322@SetNumber
$LN671@SetNumber:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00705	51		 push	 ecx
  00706	52		 push	 edx
  00707	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0070c	83 c4 08	 add	 esp, 8
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1140 : 			}

  0070f	e9 43 02 00 00	 jmp	 $LN23@SetNumber
$LN18@SetNumber:

; 1141 : 			else if ('p' == cChar)

  00714	80 f9 70	 cmp	 cl, 112			; 00000070H
  00717	0f 85 c3 00 00
	00		 jne	 $LN20@SetNumber

; 1142 : 			{
; 1143 : 				strImageFileName = m_strPath + "p.sub";

  0071d	83 c0 7c	 add	 eax, 124		; 0000007cH
  00720	68 00 00 00 00	 push	 OFFSET ??_C@_05EHJFGOBE@p?4sub@
  00725	50		 push	 eax
  00726	8d 45 c0	 lea	 eax, DWORD PTR $T4[ebp]
  00729	50		 push	 eax
  0072a	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  0072f	8b f0		 mov	 esi, eax
  00731	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2961 :         if (this == _STD addressof(_Right)) {

  00734	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]
  00737	3b c6		 cmp	 eax, esi
  00739	74 68		 je	 SHORT $LN716@SetNumber

; 4832 :         if (_My_data._Large_string_engaged()) {

  0073b	8b 4d ec	 mov	 ecx, DWORD PTR _strImageFileName$12[ebp+20]
  0073e	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00741	72 2c		 jb	 SHORT $LN688@SetNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00743	8b 55 d8	 mov	 edx, DWORD PTR _strImageFileName$12[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00746	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00747	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00749	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0074f	72 14		 jb	 SHORT $LN698@SetNumber

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00751	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00754	83 c1 23	 add	 ecx, 35			; 00000023H
  00757	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00759	83 c0 fc	 add	 eax, -4			; fffffffcH
  0075c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0075f	0f 87 29 03 00
	00		 ja	 $LN322@SetNumber
$LN698@SetNumber:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00765	51		 push	 ecx
  00766	52		 push	 edx
  00767	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0076c	83 c4 08	 add	 esp, 8
$LN688@SetNumber:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

  0076f	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+16], 0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;

  00776	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _strImageFileName$12[ebp+20], 15 ; 0000000fH

; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  0077d	c6 45 d8 00	 mov	 BYTE PTR _strImageFileName$12[ebp], 0

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00781	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]
  00784	0f 11 45 d8	 movups	 XMMWORD PTR _strImageFileName$12[ebp], xmm0
  00788	f3 0f 7e 46 10	 movq	 xmm0, QWORD PTR [esi+16]
  0078d	66 0f d6 45 e8	 movq	 QWORD PTR _strImageFileName$12[ebp+16], xmm0

; 4821 :         _My_data._Mysize = 0;

  00792	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

  00799	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  007a0	c6 06 00	 mov	 BYTE PTR [esi], 0
$LN716@SetNumber:

; 4832 :         if (_My_data._Large_string_engaged()) {

  007a3	8b 4d d4	 mov	 ecx, DWORD PTR $T4[ebp+20]
  007a6	83 f9 10	 cmp	 ecx, 16			; 00000010H
  007a9	0f 82 a8 01 00
	00		 jb	 $LN23@SetNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  007af	8b 55 c0	 mov	 edx, DWORD PTR $T4[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  007b2	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  007b3	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  007b5	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  007bb	72 14		 jb	 SHORT $LN739@SetNumber

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  007bd	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  007c0	83 c1 23	 add	 ecx, 35			; 00000023H
  007c3	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  007c5	83 c0 fc	 add	 eax, -4			; fffffffcH
  007c8	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  007cb	0f 87 bd 02 00
	00		 ja	 $LN322@SetNumber
$LN739@SetNumber:

; 265  :         ::operator delete(_Ptr, _Bytes);

  007d1	51		 push	 ecx
  007d2	52		 push	 edx
  007d3	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  007d8	83 c4 08	 add	 esp, 8
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1144 : 			}

  007db	e9 77 01 00 00	 jmp	 $LN23@SetNumber
$LN20@SetNumber:

; 1145 : 			else if (cChar >= '0' && cChar <= '9')

  007e0	8a c1		 mov	 al, cl
  007e2	2c 30		 sub	 al, 48			; 00000030H
  007e4	3c 09		 cmp	 al, 9
  007e6	0f 87 61 02 00
	00		 ja	 $LN22@SetNumber

; 1147 : 				strImageFileName = m_strPath;

  007ec	8b 45 b0	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3156 :         if (this == _STD addressof(_Right)) {

  007ef	8d 75 d8	 lea	 esi, DWORD PTR _strImageFileName$12[ebp]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1147 : 				strImageFileName = m_strPath;

  007f2	83 c0 7c	 add	 eax, 124		; 0000007cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3156 :         if (this == _STD addressof(_Right)) {

  007f5	3b f0		 cmp	 esi, eax
  007f7	74 22		 je	 SHORT $LN771@SetNumber

; 2236 :         if (_Large_string_engaged()) {

  007f9	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  007fd	8b c8		 mov	 ecx, eax
  007ff	72 02		 jb	 SHORT $LN775@SetNumber

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

  00801	8b 08		 mov	 ecx, DWORD PTR [eax]
$LN775@SetNumber:

; 3192 :         assign(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  00803	ff 70 10	 push	 DWORD PTR [eax+16]
  00806	51		 push	 ecx
  00807	8d 4d d8	 lea	 ecx, DWORD PTR _strImageFileName$12[ebp]
  0080a	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0080f	8b 55 ec	 mov	 edx, DWORD PTR _strImageFileName$12[ebp+20]
  00812	8b 7d e8	 mov	 edi, DWORD PTR _strImageFileName$12[ebp+16]
  00815	8a 4d bf	 mov	 cl, BYTE PTR _cChar$1$[ebp]
  00818	89 55 b4	 mov	 DWORD PTR __Old_capacity$1$[ebp], edx
$LN771@SetNumber:

; 4046 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

  0081b	3b fa		 cmp	 edi, edx

; 4047 :         if (_Old_size < _Mypair._Myval2._Myres) {

  0081d	73 1d		 jae	 SHORT $LN782@SetNumber

; 4048 :             _ASAN_STRING_MODIFY(*this, _Old_size, _Old_size + 1);
; 4049 :             _Mypair._Myval2._Mysize = _Old_size + 1;

  0081f	8d 47 01	 lea	 eax, DWORD PTR [edi+1]

; 2227 :         if (_Large_string_engaged()) {

  00822	83 fa 10	 cmp	 edx, 16			; 00000010H

; 4049 :             _Mypair._Myval2._Mysize = _Old_size + 1;

  00825	89 45 e8	 mov	 DWORD PTR _strImageFileName$12[ebp+16], eax

; 2226 :         value_type* _Result = _Bx._Buf;

  00828	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]

; 2227 :         if (_Large_string_engaged()) {

  0082b	0f 43 45 d8	 cmovae	 eax, DWORD PTR _strImageFileName$12[ebp]

; 4051 :             _Traits::assign(_Ptr[_Old_size], _Ch);

  0082f	88 0c 38	 mov	 BYTE PTR [eax+edi], cl

; 4052 :             _Traits::assign(_Ptr[_Old_size + 1], _Elem());

  00832	c6 44 38 01 00	 mov	 BYTE PTR [eax+edi+1], 0

; 4053 :             return;

  00837	e9 0c 01 00 00	 jmp	 $LN792@SetNumber
$LN782@SetNumber:

; 4765 :         const size_type _Old_size = _My_data._Mysize;

  0083c	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00841	2b c7		 sub	 eax, edi

; 4766 :         if (max_size() - _Old_size < _Size_increase) {

  00843	83 f8 01	 cmp	 eax, 1
  00846	0f 82 47 02 00
	00		 jb	 $LN846@SetNumber

; 4768 :         }
; 4769 : 
; 4770 :         const size_type _New_size     = _Old_size + _Size_increase;

  0084c	8d 77 01	 lea	 esi, DWORD PTR [edi+1]

; 4714 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  0084f	83 ce 0f	 or	 esi, 15			; 0000000fH
  00852	81 fe ff ff ff
	7f		 cmp	 esi, 2147483647		; 7fffffffH

; 4715 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00858	76 18		 jbe	 SHORT $LN797@SetNumber

; 4716 :             return _Max;

  0085a	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  0085f	be ff ff ff 7f	 mov	 esi, 2147483647		; 7fffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00864	50		 push	 eax
  00865	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  0086a	8b 55 b4	 mov	 edx, DWORD PTR __Old_capacity$1$[ebp]
  0086d	83 c4 04	 add	 esp, 4
  00870	eb 5b		 jmp	 SHORT $LN867@SetNumber
$LN797@SetNumber:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4719 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  00872	8b ca		 mov	 ecx, edx
  00874	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00879	d1 e9		 shr	 ecx, 1
  0087b	2b c1		 sub	 eax, ecx
  0087d	3b d0		 cmp	 edx, eax
  0087f	76 18		 jbe	 SHORT $LN798@SetNumber

; 4720 :             return _Max;

  00881	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  00886	be ff ff ff 7f	 mov	 esi, 2147483647		; 7fffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0088b	50		 push	 eax
  0088c	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00891	8b 55 b4	 mov	 edx, DWORD PTR __Old_capacity$1$[ebp]
  00894	83 c4 04	 add	 esp, 4
  00897	eb 34		 jmp	 SHORT $LN867@SetNumber
$LN798@SetNumber:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4723 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00899	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
  0089c	3b f0		 cmp	 esi, eax
  0089e	0f 42 f0	 cmovb	 esi, eax

; 4774 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  008a1	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  008a4	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  008a9	72 0e		 jb	 SHORT $LN805@SetNumber

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  008ab	50		 push	 eax
  008ac	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  008b1	8b 55 b4	 mov	 edx, DWORD PTR __Old_capacity$1$[ebp]
  008b4	83 c4 04	 add	 esp, 4
  008b7	eb 14		 jmp	 SHORT $LN867@SetNumber
$LN805@SetNumber:

; 240  :         }
; 241  :     }
; 242  : #endif // defined(_M_IX86) || defined(_M_X64)
; 243  : 
; 244  :     if (_Bytes != 0) {

  008b9	85 c0		 test	 eax, eax
  008bb	74 0e		 je	 SHORT $LN806@SetNumber

; 87   :         return ::operator new(_Bytes);

  008bd	50		 push	 eax
  008be	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 245  :         return _Traits::_Allocate(_Bytes);

  008c3	8b 55 b4	 mov	 edx, DWORD PTR __Old_capacity$1$[ebp]

; 87   :         return ::operator new(_Bytes);

  008c6	83 c4 04	 add	 esp, 4

; 245  :         return _Traits::_Allocate(_Bytes);

  008c9	eb 02		 jmp	 SHORT $LN867@SetNumber
$LN806@SetNumber:

; 246  :     }
; 247  : 
; 248  :     return nullptr;

  008cb	33 c0		 xor	 eax, eax
$LN867@SetNumber:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4780 :         _My_data._Myres       = _New_capacity;

  008cd	89 75 ec	 mov	 DWORD PTR _strImageFileName$12[ebp+20], esi
  008d0	8d 4f 01	 lea	 ecx, DWORD PTR [edi+1]
  008d3	89 45 b8	 mov	 DWORD PTR $T3[ebp], eax

; 4781 :         _Elem* const _Raw_new = _Unfancy(_New_ptr);

  008d6	8d 34 07	 lea	 esi, DWORD PTR [edi+eax]
  008d9	89 4d e8	 mov	 DWORD PTR _strImageFileName$12[ebp+16], ecx
  008dc	89 75 a8	 mov	 DWORD PTR tv3792[ebp], esi

; 4782 :         if (_BUF_SIZE <= _Old_capacity) {

  008df	57		 push	 edi
  008e0	83 fa 10	 cmp	 edx, 16			; 00000010H
  008e3	72 47		 jb	 SHORT $LN791@SetNumber

; 4783 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

  008e5	8b 75 d8	 mov	 esi, DWORD PTR _strImageFileName$12[ebp]

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  008e8	56		 push	 esi
  008e9	50		 push	 eax
  008ea	e8 00 00 00 00	 call	 _memcpy

; 4060 :                 _Traits::assign(_New_ptr[_Old_size], _Ch);

  008ef	8b 4d a8	 mov	 ecx, DWORD PTR tv3792[ebp]

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  008f2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4060 :                 _Traits::assign(_New_ptr[_Old_size], _Ch);

  008f5	8a 45 bf	 mov	 al, BYTE PTR _cChar$1$[ebp]
  008f8	88 01		 mov	 BYTE PTR [ecx], al

; 4061 :                 _Traits::assign(_New_ptr[_Old_size + 1], _Elem());

  008fa	c6 41 01 00	 mov	 BYTE PTR [ecx+1], 0

; 4785 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

  008fe	8b 4d b4	 mov	 ecx, DWORD PTR __Old_capacity$1$[ebp]
  00901	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00902	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00908	72 16		 jb	 SHORT $LN828@SetNumber

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0090a	8b 56 fc	 mov	 edx, DWORD PTR [esi-4]
  0090d	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00910	2b f2		 sub	 esi, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00912	8d 46 fc	 lea	 eax, DWORD PTR [esi-4]
  00915	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00918	0f 87 70 01 00
	00		 ja	 $LN322@SetNumber

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0091e	8b f2		 mov	 esi, edx
$LN828@SetNumber:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00920	51		 push	 ecx
  00921	56		 push	 esi
  00922	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00927	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4787 :         } else {

  0092a	eb 16		 jmp	 SHORT $LN868@SetNumber
$LN791@SetNumber:

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0092c	8d 4d d8	 lea	 ecx, DWORD PTR _strImageFileName$12[ebp]
  0092f	51		 push	 ecx
  00930	50		 push	 eax
  00931	e8 00 00 00 00	 call	 _memcpy

; 4060 :                 _Traits::assign(_New_ptr[_Old_size], _Ch);

  00936	8a 45 bf	 mov	 al, BYTE PTR _cChar$1$[ebp]

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00939	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4060 :                 _Traits::assign(_New_ptr[_Old_size], _Ch);

  0093c	88 06		 mov	 BYTE PTR [esi], al

; 4061 :                 _Traits::assign(_New_ptr[_Old_size + 1], _Elem());

  0093e	c6 46 01 00	 mov	 BYTE PTR [esi+1], 0
$LN868@SetNumber:

; 3292 :         return append(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00942	8b 45 b8	 mov	 eax, DWORD PTR $T3[ebp]
  00945	89 45 d8	 mov	 DWORD PTR _strImageFileName$12[ebp], eax
$LN792@SetNumber:
  00948	6a 04		 push	 4
  0094a	68 00 00 00 00	 push	 OFFSET ??_C@_04DLFHDFGL@?4sub@
  0094f	8d 4d d8	 lea	 ecx, DWORD PTR _strImageFileName$12[ebp]
  00952	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
$LN23@SetNumber:

; 2236 :         if (_Large_string_engaged()) {

  00957	83 7d ec 10	 cmp	 DWORD PTR _strImageFileName$12[ebp+20], 16 ; 00000010H
  0095b	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1154 : 			if (!CResourceManager::Instance().IsFileExist(strImageFileName.c_str()))

  0095e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

  00964	0f 43 45 d8	 cmovae	 eax, DWORD PTR _strImageFileName$12[ebp]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1154 : 			if (!CResourceManager::Instance().IsFileExist(strImageFileName.c_str()))

  00968	50		 push	 eax
  00969	e8 00 00 00 00	 call	 ?IsFileExist@CResourceManager@@QAE_NPBD@Z ; CResourceManager::IsFileExist
  0096e	84 c0		 test	 al, al
  00970	75 44		 jne	 SHORT $LN24@SetNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

  00972	8b 4d ec	 mov	 ecx, DWORD PTR _strImageFileName$12[ebp+20]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1155 : 				continue;

  00975	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

  0097c	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4832 :         if (_My_data._Large_string_engaged()) {

  0097f	0f 82 cf 00 00
	00		 jb	 $LN2@SetNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00985	8b 55 d8	 mov	 edx, DWORD PTR _strImageFileName$12[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00988	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00989	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0098b	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00991	72 14		 jb	 SHORT $LN196@SetNumber

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00993	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00996	83 c1 23	 add	 ecx, 35			; 00000023H
  00999	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0099b	83 c0 fc	 add	 eax, -4			; fffffffcH
  0099e	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  009a1	0f 87 e7 00 00
	00		 ja	 $LN322@SetNumber
$LN196@SetNumber:

; 265  :         ::operator delete(_Ptr, _Bytes);

  009a7	51		 push	 ecx
  009a8	52		 push	 edx
  009a9	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  009ae	83 c4 08	 add	 esp, 8
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1155 : 				continue;

  009b1	e9 9e 00 00 00	 jmp	 $LN2@SetNumber
$LN24@SetNumber:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

  009b6	83 7d ec 10	 cmp	 DWORD PTR _strImageFileName$12[ebp+20], 16 ; 00000010H
  009ba	8d 45 d8	 lea	 eax, DWORD PTR _strImageFileName$12[ebp]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1157 : 			CGraphicImage * pImage = (CGraphicImage *)CResourceManager::Instance().GetResourcePointer(strImageFileName.c_str());

  009bd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

  009c3	0f 43 45 d8	 cmovae	 eax, DWORD PTR _strImageFileName$12[ebp]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1157 : 			CGraphicImage * pImage = (CGraphicImage *)CResourceManager::Instance().GetResourcePointer(strImageFileName.c_str());

  009c7	50		 push	 eax
  009c8	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  009cd	8b f0		 mov	 esi, eax

; 1158 : 
; 1159 : 			CGraphicImageInstance * pInstance = CGraphicImageInstance::New();

  009cf	e8 00 00 00 00	 call	 ?New@CGraphicImageInstance@@SAPAV1@XZ ; CGraphicImageInstance::New
  009d4	8b f8		 mov	 edi, eax

; 1160 : 			pInstance->SetImagePointer(pImage);

  009d6	56		 push	 esi
  009d7	8b cf		 mov	 ecx, edi
  009d9	89 7d a8	 mov	 DWORD PTR _pInstance$2[ebp], edi
  009dc	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer

; 1161 : 			m_ImageInstanceVector.push_back(pInstance);

  009e1	8b 75 b0	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  009e4	8b 86 b0 00 00
	00		 mov	 eax, DWORD PTR [esi+176]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1161 : 			m_ImageInstanceVector.push_back(pInstance);

  009ea	8d 8e ac 00 00
	00		 lea	 ecx, DWORD PTR [esi+172]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  009f0	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  009f3	74 08		 je	 SHORT $LN231@SetNumber

; 797  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  009f5	89 38		 mov	 DWORD PTR [eax], edi

; 798  :         } else {
; 799  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 800  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 801  :             _ASAN_VECTOR_RELEASE_GUARD;
; 802  :         }
; 803  : 
; 804  :         _Orphan_range(_Mylast, _Mylast);
; 805  :         _Ty& _Result = *_Mylast;
; 806  :         ++_Mylast;

  009f7	83 41 04 04	 add	 DWORD PTR [ecx+4], 4

; 782  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  009fb	eb 0a		 jmp	 SHORT $LN230@SetNumber
$LN231@SetNumber:

; 783  :         }
; 784  : 
; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  009fd	8d 55 a8	 lea	 edx, DWORD PTR _pInstance$2[ebp]
  00a00	52		 push	 edx
  00a01	50		 push	 eax
  00a02	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Emplace_reallocate<CGraphicImageInstance * const &>
$LN230@SetNumber:
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1163 : 			m_dwWidthSummary += pInstance->GetWidth();

  00a07	8b cf		 mov	 ecx, edi
  00a09	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImageInstance@@QAEHXZ ; CGraphicImageInstance::GetWidth
  00a0e	01 86 bc 00 00
	00		 add	 DWORD PTR [esi+188], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

  00a14	8b 4d ec	 mov	 ecx, DWORD PTR _strImageFileName$12[ebp+20]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1164 : 		}

  00a17	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

  00a1e	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4832 :         if (_My_data._Large_string_engaged()) {

  00a21	72 31		 jb	 SHORT $LN2@SetNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00a23	8b 55 d8	 mov	 edx, DWORD PTR _strImageFileName$12[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00a26	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00a27	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00a29	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00a2f	72 10		 jb	 SHORT $LN223@SetNumber

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00a31	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00a34	83 c1 23	 add	 ecx, 35			; 00000023H
  00a37	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00a39	83 c0 fc	 add	 eax, -4			; fffffffcH
  00a3c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00a3f	77 4d		 ja	 SHORT $LN322@SetNumber
$LN223@SetNumber:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00a41	51		 push	 ecx
  00a42	52		 push	 edx
  00a43	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00a48	83 c4 08	 add	 esp, 8
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1164 : 		}

  00a4b	eb 07		 jmp	 SHORT $LN2@SetNumber
$LN22@SetNumber:

; 1148 : 				strImageFileName += cChar;
; 1149 : 				strImageFileName += ".sub";
; 1150 : 			}
; 1151 : 			else
; 1152 : 				continue;

  00a4d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
$LN2@SetNumber:

; 1108 : 		for (DWORD i = 0; i < m_strNumber.size(); ++i)

  00a54	8b 55 ac	 mov	 edx, DWORD PTR _i$1$[ebp]
  00a57	8b 45 b0	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00a5a	42		 inc	 edx
  00a5b	89 55 ac	 mov	 DWORD PTR _i$1$[ebp], edx
  00a5e	3b 90 a4 00 00
	00		 cmp	 edx, DWORD PTR [eax+164]
  00a64	73 0b		 jae	 SHORT $LN855@SetNumber
  00a66	8d b8 94 00 00
	00		 lea	 edi, DWORD PTR [eax+148]
  00a6c	e9 8f f6 ff ff	 jmp	 $LL4@SetNumber
$LN855@SetNumber:

; 1165 : 	}

  00a71	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00a74	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00a7b	59		 pop	 ecx
  00a7c	5f		 pop	 edi
  00a7d	5e		 pop	 esi
  00a7e	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00a81	33 cd		 xor	 ecx, ebp
  00a83	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00a88	8b e5		 mov	 esp, ebp
  00a8a	5d		 pop	 ebp
  00a8b	c2 04 00	 ret	 4
$LN322@SetNumber:
  00a8e	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN846@SetNumber:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4767 :             _Xlen_string(); // result too long

  00a93	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN866@SetNumber:
  00a98	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetNumber@CNumberLine@UI@@QAEXPBD@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR _strImageFileName$12[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?SetNumber@CNumberLine@UI@@QAEXPBD@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a a8	 mov	 ecx, DWORD PTR [edx-88]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetNumber@CNumberLine@UI@@QAEXPBD@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetNumber@CNumberLine@UI@@QAEXPBD@Z ENDP		; UI::CNumberLine::SetNumber
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetHorizontalAlign@CNumberLine@UI@@QAEXH@Z
_TEXT	SEGMENT
_iType$ = 8						; size = 4
?SetHorizontalAlign@CNumberLine@UI@@QAEXH@Z PROC	; UI::CNumberLine::SetHorizontalAlign, COMDAT
; _this$ = ecx

; 1096 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1097 : 		m_iHorizontalAlign = iType;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iType$[ebp]
  00006	89 81 b8 00 00
	00		 mov	 DWORD PTR [ecx+184], eax

; 1098 : 	}

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?SetHorizontalAlign@CNumberLine@UI@@QAEXH@Z ENDP	; UI::CNumberLine::SetHorizontalAlign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetPath@CNumberLine@UI@@QAEXPBD@Z
_TEXT	SEGMENT
_c_szPath$ = 8						; size = 4
?SetPath@CNumberLine@UI@@QAEXPBD@Z PROC			; UI::CNumberLine::SetPath, COMDAT
; _this$ = ecx

; 1092 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 403  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00003	8b 55 08	 mov	 edx, DWORD PTR _c_szPath$[ebp]
  00006	8b c2		 mov	 eax, edx
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1092 : 	{

  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	8b f1		 mov	 esi, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 403  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0000c	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0000f	90		 npad	 1
$LL9@SetPath:
  00010	8a 08		 mov	 cl, BYTE PTR [eax]
  00012	40		 inc	 eax
  00013	84 c9		 test	 cl, cl
  00015	75 f9		 jne	 SHORT $LL9@SetPath
  00017	2b c7		 sub	 eax, edi
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1093 : 		m_strPath = c_szPath;

  00019	8d 4e 7c	 lea	 ecx, DWORD PTR [esi+124]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3395 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0001c	50		 push	 eax
  0001d	52		 push	 edx
  0001e	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1094 : 	}

  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?SetPath@CNumberLine@UI@@QAEXPBD@Z ENDP			; UI::CNumberLine::SetPath
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CNumberLine@UI@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CNumberLine@UI@@UAE@XZ PROC				; UI::CNumberLine::~CNumberLine, COMDAT
; _this$ = ecx

; 1087 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CNumberLine@UI@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CNumberLine@UI@@6B@

; 1088 : 		ClearNumber();

  0002b	e8 00 00 00 00	 call	 ?ClearNumber@CNumberLine@UI@@IAEXXZ ; UI::CNumberLine::ClearNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  00030	8b 86 ac 00 00
	00		 mov	 eax, DWORD PTR [esi+172]
  00036	85 c0		 test	 eax, eax
  00038	74 51		 je	 SHORT $LN6@CNumberLin

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0003a	8b 8e b4 00 00
	00		 mov	 ecx, DWORD PTR [esi+180]
  00040	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00042	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00045	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0004b	72 16		 jb	 SHORT $LN22@CNumberLin

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0004d	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00050	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00053	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00055	83 c0 fc	 add	 eax, -4			; fffffffcH
  00058	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0005b	0f 87 e1 00 00
	00		 ja	 $LN74@CNumberLin

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00061	8b c2		 mov	 eax, edx
$LN22@CNumberLin:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00063	51		 push	 ecx
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  0006a	c7 86 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+172], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00074	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2050 :             _Mylast  = nullptr;

  00077	c7 86 b0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+176], 0

; 2051 :             _Myend   = nullptr;

  00081	c7 86 b4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+180], 0
$LN6@CNumberLin:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

  0008b	8b 8e a8 00 00
	00		 mov	 ecx, DWORD PTR [esi+168]
  00091	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4832 :         if (_My_data._Large_string_engaged()) {

  00094	72 2f		 jb	 SHORT $LN40@CNumberLin
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00096	8b 86 94 00 00
	00		 mov	 eax, DWORD PTR [esi+148]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  0009c	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0009d	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000a3	72 16		 jb	 SHORT $LN50@CNumberLin

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000a5	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000a8	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000ab	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000ad	83 c0 fc	 add	 eax, -4			; fffffffcH
  000b0	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000b3	0f 87 89 00 00
	00		 ja	 $LN74@CNumberLin

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000b9	8b c2		 mov	 eax, edx
$LN50@CNumberLin:

; 265  :         ::operator delete(_Ptr, _Bytes);

  000bb	51		 push	 ecx
  000bc	50		 push	 eax
  000bd	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000c2	83 c4 08	 add	 esp, 8
$LN40@CNumberLin:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

  000c5	c7 86 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+164], 0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;

  000cf	c7 86 a8 00 00
	00 0f 00 00 00	 mov	 DWORD PTR [esi+168], 15	; 0000000fH

; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  000d9	c6 86 94 00 00
	00 00		 mov	 BYTE PTR [esi+148], 0

; 2244 :         return _BUF_SIZE <= _Myres;

  000e0	8b 8e 90 00 00
	00		 mov	 ecx, DWORD PTR [esi+144]
  000e6	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4832 :         if (_My_data._Large_string_engaged()) {

  000e9	72 28		 jb	 SHORT $LN67@CNumberLin
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000eb	8b 46 7c	 mov	 eax, DWORD PTR [esi+124]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  000ee	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000ef	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f5	72 12		 jb	 SHORT $LN77@CNumberLin

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f7	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000fa	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000fd	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000ff	83 c0 fc	 add	 eax, -4			; fffffffcH
  00102	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00105	77 3b		 ja	 SHORT $LN74@CNumberLin

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00107	8b c2		 mov	 eax, edx
$LN77@CNumberLin:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00109	51		 push	 ecx
  0010a	50		 push	 eax
  0010b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00110	83 c4 08	 add	 esp, 8
$LN67@CNumberLin:
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1089 : 	}

  00113	8b ce		 mov	 ecx, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

  00115	c7 86 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+140], 0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;

  0011f	c7 86 90 00 00
	00 0f 00 00 00	 mov	 DWORD PTR [esi+144], 15	; 0000000fH

; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00129	c6 46 7c 00	 mov	 BYTE PTR [esi+124], 0
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1089 : 	}

  0012d	e8 00 00 00 00	 call	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
  00132	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00135	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0013c	59		 pop	 ecx
  0013d	5e		 pop	 esi
  0013e	8b e5		 mov	 esp, ebp
  00140	5d		 pop	 ebp
  00141	c3		 ret	 0
$LN74@CNumberLin:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00142	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN83@CNumberLin:
  00147	cc		 int	 3
  00148	cc		 int	 3
  00149	cc		 int	 3
  0014a	cc		 int	 3
  0014b	cc		 int	 3
  0014c	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CNumberLine@UI@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CNumberLine@UI@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CNumberLine@UI@@UAE@XZ ENDP				; UI::CNumberLine::~CNumberLine
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pParent$ = 8						; size = 4
??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z PROC		; UI::CNumberLine::CNumberLine, COMDAT
; _this$ = ecx

; 1079 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi

; 1078 : 	CNumberLine::CNumberLine(CWindow * pParent) : CWindow(NULL)

  00029	6a 00		 push	 0
  0002b	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow

; 1079 : 	{

  00030	8d 4e 7c	 lea	 ecx, DWORD PTR [esi+124]
  00033	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CNumberLine@UI@@6B@
  00039	0f 57 c0	 xorps	 xmm0, xmm0
  0003c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  00043	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0

; 4821 :         _My_data._Mysize = 0;

  00046	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

  0004d	c7 41 14 0f 00
	00 00		 mov	 DWORD PTR [ecx+20], 15	; 0000000fH

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00054	c6 01 00	 mov	 BYTE PTR [ecx], 0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  00057	0f 11 86 94 00
	00 00		 movups	 XMMWORD PTR [esi+148], xmm0

; 4821 :         _My_data._Mysize = 0;

  0005e	c7 86 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+164], 0

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

  00068	c7 86 a8 00 00
	00 0f 00 00 00	 mov	 DWORD PTR [esi+168], 15	; 0000000fH

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00072	c6 86 94 00 00
	00 00		 mov	 BYTE PTR [esi+148], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00079	c7 86 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+172], 0
  00083	c7 86 b0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+176], 0
  0008d	c7 86 b4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+180], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3395 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00097	6a 1d		 push	 29			; 0000001dH
  00099	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@GPCBPBEE@d?3?1ymir?5work?1ui?1game?1taskbar?1@
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1079 : 	{

  0009e	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3395 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  000a2	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1084 : 		m_pParent = pParent;

  000a7	8b 45 08	 mov	 eax, DWORD PTR _pParent$[ebp]
  000aa	89 46 60	 mov	 DWORD PTR [esi+96], eax

; 1085 : 	}

  000ad	8b c6		 mov	 eax, esi
  000af	c7 86 b8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+184], 0
  000b9	c7 86 bc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+188], 0
  000c3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000cd	59		 pop	 ecx
  000ce	5e		 pop	 esi
  000cf	8b e5		 mov	 esp, ebp
  000d1	5d		 pop	 ebp
  000d2	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
__unwindfunclet$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 7c	 add	 ecx, 124		; 0000007cH
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z$2:
  00013	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
  0001c	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z$3:
  00021	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  0002a	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAE@XZ ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::~vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >
  0002f	cc		 int	 3
  00030	cc		 int	 3
  00031	cc		 int	 3
  00032	cc		 int	 3
  00033	cc		 int	 3
__ehhandler$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z:
  00034	90		 npad	 1
  00035	90		 npad	 1
  00036	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003d	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00040	33 c8		 xor	 ecx, eax
  00042	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00047	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z
  0004c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CNumberLine@UI@@QAE@PAVCWindow@1@@Z ENDP		; UI::CNumberLine::CNumberLine
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CNumberLine@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ppyObject$ = 8						; size = 4
??0CNumberLine@UI@@QAE@PAU_object@@@Z PROC		; UI::CNumberLine::CNumberLine, COMDAT
; _this$ = ecx

; 1073 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CNumberLine@UI@@QAE@PAU_object@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi

; 1072 : 	CNumberLine::CNumberLine(PyObject * ppyObject) : CWindow(ppyObject)

  00029	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  0002c	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow

; 1073 : 	{

  00031	8d 4e 7c	 lea	 ecx, DWORD PTR [esi+124]
  00034	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CNumberLine@UI@@6B@
  0003a	0f 57 c0	 xorps	 xmm0, xmm0
  0003d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  00044	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0

; 4821 :         _My_data._Mysize = 0;

  00047	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

  0004e	c7 41 14 0f 00
	00 00		 mov	 DWORD PTR [ecx+20], 15	; 0000000fH

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00055	c6 01 00	 mov	 BYTE PTR [ecx], 0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  00058	0f 11 86 94 00
	00 00		 movups	 XMMWORD PTR [esi+148], xmm0

; 4821 :         _My_data._Mysize = 0;

  0005f	c7 86 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+164], 0

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

  00069	c7 86 a8 00 00
	00 0f 00 00 00	 mov	 DWORD PTR [esi+168], 15	; 0000000fH

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00073	c6 86 94 00 00
	00 00		 mov	 BYTE PTR [esi+148], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0007a	c7 86 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+172], 0
  00084	c7 86 b0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+176], 0
  0008e	c7 86 b4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+180], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3395 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00098	6a 1d		 push	 29			; 0000001dH
  0009a	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@GPCBPBEE@d?3?1ymir?5work?1ui?1game?1taskbar?1@
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1073 : 	{

  0009f	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3395 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  000a3	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1075 : 		m_iHorizontalAlign = HORIZONTAL_ALIGN_LEFT;

  000a8	c7 86 b8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+184], 0

; 1076 : 		m_dwWidthSummary = 0;
; 1077 : 	}

  000b2	8b c6		 mov	 eax, esi
  000b4	c7 86 bc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+188], 0
  000be	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c8	59		 pop	 ecx
  000c9	5e		 pop	 esi
  000ca	8b e5		 mov	 esp, ebp
  000cc	5d		 pop	 ebp
  000cd	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CNumberLine@UI@@QAE@PAU_object@@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
__unwindfunclet$??0CNumberLine@UI@@QAE@PAU_object@@@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 7c	 add	 ecx, 124		; 0000007cH
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0CNumberLine@UI@@QAE@PAU_object@@@Z$2:
  00013	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
  0001c	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0CNumberLine@UI@@QAE@PAU_object@@@Z$3:
  00021	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  0002a	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAE@XZ ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::~vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >
  0002f	cc		 int	 3
  00030	cc		 int	 3
  00031	cc		 int	 3
  00032	cc		 int	 3
  00033	cc		 int	 3
__ehhandler$??0CNumberLine@UI@@QAE@PAU_object@@@Z:
  00034	90		 npad	 1
  00035	90		 npad	 1
  00036	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003d	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00040	33 c8		 xor	 ecx, eax
  00042	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00047	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CNumberLine@UI@@QAE@PAU_object@@@Z
  0004c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CNumberLine@UI@@QAE@PAU_object@@@Z ENDP		; UI::CNumberLine::CNumberLine
; Function compile flags: /Ogtp
;	COMDAT ??_GCTextLine@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTextLine@UI@@UAEPAXI@Z PROC			; UI::CTextLine::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CTextLine@UI@@UAE@XZ	; UI::CTextLine::~CTextLine
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 f8 00 00 00	 push	 248			; 000000f8H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCTextLine@UI@@UAEPAXI@Z ENDP			; UI::CTextLine::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnSetText@CTextLine@UI@@MAEXPBD@Z
_TEXT	SEGMENT
_c_szText$ = 8						; size = 4
?OnSetText@CTextLine@UI@@MAEXPBD@Z PROC			; UI::CTextLine::OnSetText, COMDAT
; _this$ = ecx

; 1038 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1039 : 		m_TextInstance.SetValue(c_szText);

  00004	6a ff		 push	 -1
  00006	ff 75 08	 push	 DWORD PTR _c_szText$[ebp]
  00009	8d 71 7c	 lea	 esi, DWORD PTR [ecx+124]
  0000c	8b ce		 mov	 ecx, esi
  0000e	e8 00 00 00 00	 call	 ?SetValue@CGraphicTextInstance@@QAEXPBDI@Z ; CGraphicTextInstance::SetValue

; 1040 : 		m_TextInstance.Update();

  00013	8b ce		 mov	 ecx, esi
  00015	e8 00 00 00 00	 call	 ?Update@CGraphicTextInstance@@QAEXXZ ; CGraphicTextInstance::Update
  0001a	5e		 pop	 esi

; 1041 : 	}

  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
?OnSetText@CTextLine@UI@@MAEXPBD@Z ENDP			; UI::CTextLine::OnSetText
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnChangePosition@CTextLine@UI@@MAEXXZ
_TEXT	SEGMENT
?OnChangePosition@CTextLine@UI@@MAEXXZ PROC		; UI::CTextLine::OnChangePosition, COMDAT
; _this$ = ecx

; 1055 : 	{

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f1		 mov	 esi, ecx

; 1056 : 		// FOR_ARABIC_ALIGN
; 1057 : 		//if (m_TextInstance.GetHorizontalAlign() == CGraphicTextInstance::HORIZONTAL_ALIGN_ARABIC)
; 1058 : 		if( GetDefaultCodePage() == CP_ARABIC )

  00004	e8 00 00 00 00	 call	 ?GetDefaultCodePage@@YAKXZ ; GetDefaultCodePage
  00009	3d e8 04 00 00	 cmp	 eax, 1256		; 000004e8H
  0000e	75 05		 jne	 SHORT $LN2@OnChangePo

; 1059 : 		{
; 1060 : 			m_TextInstance.SetPosition(m_rect.right, m_rect.top);

  00010	8b 46 3c	 mov	 eax, DWORD PTR [esi+60]

; 1061 : 		}

  00013	eb 03		 jmp	 SHORT $LN3@OnChangePo
$LN2@OnChangePo:

; 1062 : 		else
; 1063 : 		{
; 1064 : 			m_TextInstance.SetPosition(m_rect.left, m_rect.top);

  00015	8b 46 34	 mov	 eax, DWORD PTR [esi+52]
$LN3@OnChangePo:

; 1065 : 		}
; 1066 : 	}

  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	8d 4e 7c	 lea	 ecx, DWORD PTR [esi+124]
  0001e	c7 44 24 08 00
	00 00 00	 mov	 DWORD PTR [esp+8], 0
  00026	66 0f 6e 46 38	 movd	 xmm0, DWORD PTR [esi+56]
  0002b	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0002e	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00034	66 0f 6e c0	 movd	 xmm0, eax
  00038	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0003b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00040	e8 00 00 00 00	 call	 ?SetPosition@CGraphicTextInstance@@QAEXMMM@Z ; CGraphicTextInstance::SetPosition
  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	c3		 ret	 0
?OnChangePosition@CTextLine@UI@@MAEXXZ ENDP		; UI::CTextLine::OnChangePosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CTextLine@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CTextLine@UI@@MAEXXZ PROC			; UI::CTextLine::OnRender, COMDAT
; _this$ = ecx

; 1050 : 		if (IsShow())

  00000	80 79 55 00	 cmp	 BYTE PTR [ecx+85], 0
  00004	74 0a		 je	 SHORT $LN2@OnRender

; 1051 : 			m_TextInstance.Render();

  00006	6a 00		 push	 0
  00008	83 c1 7c	 add	 ecx, 124		; 0000007cH
  0000b	e8 00 00 00 00	 call	 ?Render@CGraphicTextInstance@@QAEXPAUtagRECT@@@Z ; CGraphicTextInstance::Render
$LN2@OnRender:

; 1052 : 	}

  00010	c3		 ret	 0
?OnRender@CTextLine@UI@@MAEXXZ ENDP			; UI::CTextLine::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnUpdate@CTextLine@UI@@MAEXXZ
_TEXT	SEGMENT
?OnUpdate@CTextLine@UI@@MAEXXZ PROC			; UI::CTextLine::OnUpdate, COMDAT
; _this$ = ecx

; 1045 : 		if (IsShow())

  00000	80 79 55 00	 cmp	 BYTE PTR [ecx+85], 0
  00004	74 08		 je	 SHORT $LN2@OnUpdate

; 1046 : 			m_TextInstance.Update();

  00006	83 c1 7c	 add	 ecx, 124		; 0000007cH
  00009	e9 00 00 00 00	 jmp	 ?Update@CGraphicTextInstance@@QAEXXZ ; CGraphicTextInstance::Update
$LN2@OnUpdate:

; 1047 : 	}

  0000e	c3		 ret	 0
?OnUpdate@CTextLine@UI@@MAEXXZ ENDP			; UI::CTextLine::OnUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetTextSize@CTextLine@UI@@QAEXPAH0@Z
_TEXT	SEGMENT
_pnWidth$ = 8						; size = 4
_pnHeight$ = 12						; size = 4
?GetTextSize@CTextLine@UI@@QAEXPAH0@Z PROC		; UI::CTextLine::GetTextSize, COMDAT
; _this$ = ecx

; 1015 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1016 : 		m_TextInstance.GetTextSize(pnWidth, pnHeight);

  00003	83 c1 7c	 add	 ecx, 124		; 0000007cH

; 1017 : 	}

  00006	5d		 pop	 ebp

; 1016 : 		m_TextInstance.GetTextSize(pnWidth, pnHeight);

  00007	e9 00 00 00 00	 jmp	 ?GetTextSize@CGraphicTextInstance@@QAEXPAH0@Z ; CGraphicTextInstance::GetTextSize
?GetTextSize@CTextLine@UI@@QAEXPAH0@Z ENDP		; UI::CTextLine::GetTextSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetText@CTextLine@UI@@QAEPBDXZ
_TEXT	SEGMENT
?GetText@CTextLine@UI@@QAEPBDXZ PROC			; UI::CTextLine::GetText, COMDAT
; _this$ = ecx

; 1020 : 		return m_TextInstance.GetValueStringReference().c_str();

  00000	83 c1 7c	 add	 ecx, 124		; 0000007cH
  00003	e8 00 00 00 00	 call	 ?GetValueStringReference@CGraphicTextInstance@@QAEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CGraphicTextInstance::GetValueStringReference
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

  00008	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2236 :         if (_Large_string_engaged()) {

  0000c	72 02		 jb	 SHORT $LN6@GetText
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1020 : 		return m_TextInstance.GetValueStringReference().c_str();

  0000e	8b 00		 mov	 eax, DWORD PTR [eax]
$LN6@GetText:

; 1021 : 	}

  00010	c3		 ret	 0
?GetText@CTextLine@UI@@QAEPBDXZ ENDP			; UI::CTextLine::GetText
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetText@CTextLine@UI@@QAEXPBD@Z
_TEXT	SEGMENT
_c_szText$ = 8						; size = 4
?SetText@CTextLine@UI@@QAEXPBD@Z PROC			; UI::CTextLine::SetText, COMDAT
; _this$ = ecx

; 1011 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1012 : 		OnSetText(c_szText);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]

; 1013 : 	}

  00005	5d		 pop	 ebp

; 1012 : 		OnSetText(c_szText);

  00006	ff a0 9c 00 00
	00		 jmp	 DWORD PTR [eax+156]
?SetText@CTextLine@UI@@QAEXPBD@Z ENDP			; UI::CTextLine::SetText
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetCursorPosition@CTextLine@UI@@QAEHXZ
_TEXT	SEGMENT
_ly$ = -8						; size = 4
_lx$ = -4						; size = 4
?GetCursorPosition@CTextLine@UI@@QAEHXZ PROC		; UI::CTextLine::GetCursorPosition, COMDAT
; _this$ = ecx

; 1031 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi

; 1032 : 		long lx, ly;
; 1033 : 		CWindow::GetMouseLocalPosition(lx, ly);

  00007	8d 45 f8	 lea	 eax, DWORD PTR _ly$[ebp]
  0000a	8b f1		 mov	 esi, ecx
  0000c	50		 push	 eax
  0000d	8d 45 fc	 lea	 eax, DWORD PTR _lx$[ebp]
  00010	50		 push	 eax
  00011	e8 00 00 00 00	 call	 ?GetMouseLocalPosition@CWindow@UI@@QAEXAAJ0@Z ; UI::CWindow::GetMouseLocalPosition

; 1034 : 		return m_TextInstance.PixelPositionToCharacterPosition(lx);

  00016	ff 75 fc	 push	 DWORD PTR _lx$[ebp]
  00019	8d 4e 7c	 lea	 ecx, DWORD PTR [esi+124]
  0001c	e8 00 00 00 00	 call	 ?PixelPositionToCharacterPosition@CGraphicTextInstance@@QAEHH@Z ; CGraphicTextInstance::PixelPositionToCharacterPosition
  00021	5e		 pop	 esi

; 1035 : 	}

  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
?GetCursorPosition@CTextLine@UI@@QAEHXZ ENDP		; UI::CTextLine::GetCursorPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?HideCursor@CTextLine@UI@@QAEXXZ
_TEXT	SEGMENT
?HideCursor@CTextLine@UI@@QAEXXZ PROC			; UI::CTextLine::HideCursor, COMDAT
; _this$ = ecx

; 1028 : 		m_TextInstance.HideCursor();

  00000	83 c1 7c	 add	 ecx, 124		; 0000007cH
  00003	e9 00 00 00 00	 jmp	 ?HideCursor@CGraphicTextInstance@@QAEXXZ ; CGraphicTextInstance::HideCursor
?HideCursor@CTextLine@UI@@QAEXXZ ENDP			; UI::CTextLine::HideCursor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?ShowCursor@CTextLine@UI@@QAEXXZ
_TEXT	SEGMENT
?ShowCursor@CTextLine@UI@@QAEXXZ PROC			; UI::CTextLine::ShowCursor, COMDAT
; _this$ = ecx

; 1024 : 		m_TextInstance.ShowCursor();

  00000	83 c1 7c	 add	 ecx, 124		; 0000007cH
  00003	e9 00 00 00 00	 jmp	 ?ShowCursor@CGraphicTextInstance@@QAEXXZ ; CGraphicTextInstance::ShowCursor
?ShowCursor@CTextLine@UI@@QAEXXZ ENDP			; UI::CTextLine::ShowCursor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetLimitWidth@CTextLine@UI@@QAEXM@Z
_TEXT	SEGMENT
_fWidth$ = 8						; size = 4
?SetLimitWidth@CTextLine@UI@@QAEXM@Z PROC		; UI::CTextLine::SetLimitWidth, COMDAT
; _this$ = ecx

; 1007 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1008 : 		m_TextInstance.SetLimitWidth(fWidth);

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fWidth$[ebp]
  00008	51		 push	 ecx
  00009	83 c1 7c	 add	 ecx, 124		; 0000007cH
  0000c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00011	e8 00 00 00 00	 call	 ?SetLimitWidth@CGraphicTextInstance@@QAEXM@Z ; CGraphicTextInstance::SetLimitWidth

; 1009 : 	}

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?SetLimitWidth@CTextLine@UI@@QAEXM@Z ENDP		; UI::CTextLine::SetLimitWidth
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetFontColor@CTextLine@UI@@QAEXK@Z
_TEXT	SEGMENT
_dwColor$ = 8						; size = 4
?SetFontColor@CTextLine@UI@@QAEXK@Z PROC		; UI::CTextLine::SetFontColor, COMDAT
; _this$ = ecx

; 1003 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1004 : 		m_TextInstance.SetColor(dwColor);

  00003	83 c1 7c	 add	 ecx, 124		; 0000007cH

; 1005 : 	}

  00006	5d		 pop	 ebp

; 1004 : 		m_TextInstance.SetColor(dwColor);

  00007	e9 00 00 00 00	 jmp	 ?SetColor@CGraphicTextInstance@@QAEXK@Z ; CGraphicTextInstance::SetColor
?SetFontColor@CTextLine@UI@@QAEXK@Z ENDP		; UI::CTextLine::SetFontColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetFontName@CTextLine@UI@@QAEXPBD@Z
_TEXT	SEGMENT
_this$GSCopy$1$ = -52					; size = 4
_c_szFontName$GSCopy$1$ = -48				; size = 4
$T2 = -44						; size = 4
_stFontName$ = -40					; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_c_szFontName$ = 8					; size = 4
?SetFontName@CTextLine@UI@@QAEXPBD@Z PROC		; UI::CTextLine::SetFontName, COMDAT
; _this$ = ecx

; 993  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetFontName@CTextLine@UI@@QAEXPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 28	 sub	 esp, 40			; 00000028H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d cc	 mov	 DWORD PTR _this$GSCopy$1$[ebp], ecx
  0002d	8b 7d 08	 mov	 edi, DWORD PTR _c_szFontName$[ebp]
  00030	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 403  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00033	8b f7		 mov	 esi, edi
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 993  : 	{

  00035	89 7d d0	 mov	 DWORD PTR _c_szFontName$GSCopy$1$[ebp], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  00038	0f 11 45 d8	 movups	 XMMWORD PTR _stFontName$[ebp], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

  0003c	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _stFontName$[ebp+16], 0

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

  00043	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _stFontName$[ebp+20], 0

; 403  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0004a	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
  0004d	0f 1f 00	 npad	 3
$LL83@SetFontNam:
  00050	8a 06		 mov	 al, BYTE PTR [esi]
  00052	46		 inc	 esi
  00053	84 c0		 test	 al, al
  00055	75 f9		 jne	 SHORT $LL83@SetFontNam
  00057	2b f1		 sub	 esi, ecx

; 2620 :         if (_Count > max_size()) {

  00059	81 fe ff ff ff
	7f		 cmp	 esi, 2147483647		; 7fffffffH
  0005f	0f 87 1b 01 00
	00		 ja	 $LN89@SetFontNam

; 2622 :         }
; 2623 : 
; 2624 :         auto& _Al       = _Getal();
; 2625 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);
; 2626 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 2627 : 
; 2628 :         if (_Count < _BUF_SIZE) {

  00065	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _stFontName$[ebp+20], 15 ; 0000000fH
  0006c	83 fe 10	 cmp	 esi, 16			; 00000010H
  0006f	73 15		 jae	 SHORT $LN18@SetFontNam

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00071	56		 push	 esi
  00072	8d 45 d8	 lea	 eax, DWORD PTR _stFontName$[ebp]

; 2629 :             _My_data._Mysize = _Count;

  00075	89 75 e8	 mov	 DWORD PTR _stFontName$[ebp+16], esi

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00078	57		 push	 edi
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 _memcpy

; 2637 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

  0007f	c6 44 35 d8 00	 mov	 BYTE PTR _stFontName$[ebp+esi], 0

; 2638 :             } else { // _Strat == _Construct_strategy::_From_string
; 2639 : #ifdef _INSERT_STRING_ANNOTATION
; 2640 :                 _Traits::copy(_My_data._Bx._Buf, _Arg, _Count + 1);
; 2641 : #else // ^^^ _INSERT_STRING_ANNOTATION / !_INSERT_STRING_ANNOTATION vvv
; 2642 :                 _Traits::copy(_My_data._Bx._Buf, _Arg, _BUF_SIZE);
; 2643 : #endif // !_INSERT_STRING_ANNOTATION
; 2644 :             }
; 2645 : 
; 2646 :             _Proxy._Release();
; 2647 :             return;

  00084	eb 6f		 jmp	 SHORT $LN86@SetFontNam
$LN18@SetFontNam:

; 4714 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00086	8b fe		 mov	 edi, esi
  00088	83 cf 0f	 or	 edi, 15			; 0000000fH
  0008b	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH

; 4715 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00091	76 15		 jbe	 SHORT $LN25@SetFontNam

; 4716 :             return _Max;

  00093	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  00098	bf ff ff ff 7f	 mov	 edi, 2147483647		; 7fffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0009d	50		 push	 eax
  0009e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  000a3	83 c4 04	 add	 esp, 4
  000a6	eb 30		 jmp	 SHORT $LN87@SetFontNam
$LN25@SetFontNam:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4723 :         return (_STD max)(_Masked, _Old + _Old / 2);

  000a8	b8 16 00 00 00	 mov	 eax, 22			; 00000016H
  000ad	3b f8		 cmp	 edi, eax
  000af	0f 42 f8	 cmovb	 edi, eax

; 2652 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000b2	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000b5	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  000ba	72 0b		 jb	 SHORT $LN33@SetFontNam

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  000bc	50		 push	 eax
  000bd	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  000c2	83 c4 04	 add	 esp, 4
  000c5	eb 11		 jmp	 SHORT $LN87@SetFontNam
$LN33@SetFontNam:

; 240  :         }
; 241  :     }
; 242  : #endif // defined(_M_IX86) || defined(_M_X64)
; 243  : 
; 244  :     if (_Bytes != 0) {

  000c7	85 c0		 test	 eax, eax
  000c9	74 0b		 je	 SHORT $LN34@SetFontNam

; 87   :         return ::operator new(_Bytes);

  000cb	50		 push	 eax
  000cc	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000d1	83 c4 04	 add	 esp, 4

; 245  :         return _Traits::_Allocate(_Bytes);

  000d4	eb 02		 jmp	 SHORT $LN87@SetFontNam
$LN34@SetFontNam:

; 246  :     }
; 247  : 
; 248  :     return nullptr;

  000d6	33 c0		 xor	 eax, eax
$LN87@SetFontNam:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000d8	56		 push	 esi
  000d9	ff 75 d0	 push	 DWORD PTR _c_szFontName$GSCopy$1$[ebp]

; 2653 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  000dc	89 45 d4	 mov	 DWORD PTR $T2[ebp], eax

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000df	50		 push	 eax

; 2653 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  000e0	89 45 d8	 mov	 DWORD PTR _stFontName$[ebp], eax

; 2654 : 
; 2655 :         _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);
; 2656 : 
; 2657 :         _My_data._Mysize = _Count;

  000e3	89 75 e8	 mov	 DWORD PTR _stFontName$[ebp+16], esi

; 2658 :         _My_data._Myres  = _New_capacity;

  000e6	89 7d ec	 mov	 DWORD PTR _stFontName$[ebp+20], edi

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000e9	e8 00 00 00 00	 call	 _memcpy

; 2664 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());

  000ee	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp]
  000f1	c6 04 30 00	 mov	 BYTE PTR [eax+esi], 0
$LN86@SetFontNam:
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 994  : 		std::string stFontName = c_szFontName;

  000f5	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3292 :         return append(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  000f8	6a 04		 push	 4
  000fa	68 00 00 00 00	 push	 OFFSET ??_C@_04FAHLGLIA@?4fnt@
  000ff	8d 4d d8	 lea	 ecx, DWORD PTR _stFontName$[ebp]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 994  : 		std::string stFontName = c_szFontName;

  00102	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3292 :         return append(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00109	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 2244 :         return _BUF_SIZE <= _Myres;

  0010e	83 7d ec 10	 cmp	 DWORD PTR _stFontName$[ebp+20], 16 ; 00000010H

; 2235 :         const value_type* _Result = _Bx._Buf;

  00112	8d 45 d8	 lea	 eax, DWORD PTR _stFontName$[ebp]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 998  : 		CResource* pkRes = rkResMgr.GetTypeResourcePointer(stFontName.c_str());

  00115	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

  0011b	0f 43 45 d8	 cmovae	 eax, DWORD PTR _stFontName$[ebp]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 998  : 		CResource* pkRes = rkResMgr.GetTypeResourcePointer(stFontName.c_str());

  0011f	6a ff		 push	 -1
  00121	50		 push	 eax
  00122	e8 00 00 00 00	 call	 ?GetTypeResourcePointer@CResourceManager@@QAEPAVCResource@@PBDH@Z ; CResourceManager::GetTypeResourcePointer

; 999  : 		CGraphicText* pkResFont=static_cast<CGraphicText*>(pkRes);
; 1000 : 		m_TextInstance.SetTextPointer(pkResFont);

  00127	8b 4d cc	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  0012a	50		 push	 eax
  0012b	83 c1 7c	 add	 ecx, 124		; 0000007cH
  0012e	e8 00 00 00 00	 call	 ?SetTextPointer@CGraphicTextInstance@@QAEXPAVCGraphicText@@@Z ; CGraphicTextInstance::SetTextPointer
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

  00133	8b 4d ec	 mov	 ecx, DWORD PTR _stFontName$[ebp+20]
  00136	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4832 :         if (_My_data._Large_string_engaged()) {

  00139	72 28		 jb	 SHORT $LN67@SetFontNam
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0013b	8b 55 d8	 mov	 edx, DWORD PTR _stFontName$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  0013e	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0013f	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00141	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00147	72 10		 jb	 SHORT $LN77@SetFontNam

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00149	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0014c	83 c1 23	 add	 ecx, 35			; 00000023H
  0014f	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00151	83 c0 fc	 add	 eax, -4			; fffffffcH
  00154	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00157	77 2c		 ja	 SHORT $LN90@SetFontNam
$LN77@SetFontNam:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00159	51		 push	 ecx
  0015a	52		 push	 edx
  0015b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00160	83 c4 08	 add	 esp, 8
$LN67@SetFontNam:
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 1001 : 	}

  00163	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00166	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0016d	59		 pop	 ecx
  0016e	5f		 pop	 edi
  0016f	5e		 pop	 esi
  00170	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00173	33 cd		 xor	 ecx, ebp
  00175	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0017a	8b e5		 mov	 esp, ebp
  0017c	5d		 pop	 ebp
  0017d	c2 04 00	 ret	 4
$LN89@SetFontNam:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2621 :             _Xlen_string(); // result too long

  00180	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN90@SetFontNam:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00185	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN85@SetFontNam:
  0018a	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetFontName@CTextLine@UI@@QAEXPBD@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR _stFontName$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?SetFontName@CTextLine@UI@@QAEXPBD@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a cc	 mov	 ecx, DWORD PTR [edx-52]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetFontName@CTextLine@UI@@QAEXPBD@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetFontName@CTextLine@UI@@QAEXPBD@Z ENDP		; UI::CTextLine::SetFontName
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetMultiLine@CTextLine@UI@@QAEXH@Z
_TEXT	SEGMENT
_bFlag$ = 8						; size = 4
?SetMultiLine@CTextLine@UI@@QAEXH@Z PROC		; UI::CTextLine::SetMultiLine, COMDAT
; _this$ = ecx

; 989  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 990  : 		m_TextInstance.SetMultiLine(bFlag ? true : false);

  00003	83 7d 08 00	 cmp	 DWORD PTR _bFlag$[ebp], 0
  00007	0f 95 c0	 setne	 al
  0000a	0f b6 c0	 movzx	 eax, al
  0000d	89 45 08	 mov	 DWORD PTR _bFlag$[ebp], eax
  00010	83 c1 7c	 add	 ecx, 124		; 0000007cH

; 991  : 	}

  00013	5d		 pop	 ebp

; 990  : 		m_TextInstance.SetMultiLine(bFlag ? true : false);

  00014	e9 00 00 00 00	 jmp	 ?SetMultiLine@CGraphicTextInstance@@QAEX_N@Z ; CGraphicTextInstance::SetMultiLine
?SetMultiLine@CTextLine@UI@@QAEXH@Z ENDP		; UI::CTextLine::SetMultiLine
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetFeather@CTextLine@UI@@QAEXH@Z
_TEXT	SEGMENT
_bFlag$ = 8						; size = 4
?SetFeather@CTextLine@UI@@QAEXH@Z PROC			; UI::CTextLine::SetFeather, COMDAT
; _this$ = ecx

; 985  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 986  : 		m_TextInstance.SetFeather(bFlag ? true : false);

  00003	83 7d 08 00	 cmp	 DWORD PTR _bFlag$[ebp], 0
  00007	0f 95 c0	 setne	 al
  0000a	0f b6 c0	 movzx	 eax, al
  0000d	89 45 08	 mov	 DWORD PTR _bFlag$[ebp], eax
  00010	83 c1 7c	 add	 ecx, 124		; 0000007cH

; 987  : 	}

  00013	5d		 pop	 ebp

; 986  : 		m_TextInstance.SetFeather(bFlag ? true : false);

  00014	e9 00 00 00 00	 jmp	 ?SetFeather@CGraphicTextInstance@@QAEX_N@Z ; CGraphicTextInstance::SetFeather
?SetFeather@CTextLine@UI@@QAEXH@Z ENDP			; UI::CTextLine::SetFeather
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetOutline@CTextLine@UI@@QAEXH@Z
_TEXT	SEGMENT
_bFlag$ = 8						; size = 4
?SetOutline@CTextLine@UI@@QAEXH@Z PROC			; UI::CTextLine::SetOutline, COMDAT
; _this$ = ecx

; 981  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 982  : 		m_TextInstance.SetOutline(bFlag ? true : false);

  00003	83 7d 08 00	 cmp	 DWORD PTR _bFlag$[ebp], 0
  00007	0f 95 c0	 setne	 al
  0000a	0f b6 c0	 movzx	 eax, al
  0000d	89 45 08	 mov	 DWORD PTR _bFlag$[ebp], eax
  00010	83 c1 7c	 add	 ecx, 124		; 0000007cH

; 983  : 	}

  00013	5d		 pop	 ebp

; 982  : 		m_TextInstance.SetOutline(bFlag ? true : false);

  00014	e9 00 00 00 00	 jmp	 ?SetOutline@CGraphicTextInstance@@QAEX_N@Z ; CGraphicTextInstance::SetOutline
?SetOutline@CTextLine@UI@@QAEXH@Z ENDP			; UI::CTextLine::SetOutline
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetSecret@CTextLine@UI@@QAEXH@Z
_TEXT	SEGMENT
_bFlag$ = 8						; size = 4
?SetSecret@CTextLine@UI@@QAEXH@Z PROC			; UI::CTextLine::SetSecret, COMDAT
; _this$ = ecx

; 977  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 978  : 		m_TextInstance.SetSecret(bFlag ? true : false);

  00003	83 7d 08 00	 cmp	 DWORD PTR _bFlag$[ebp], 0
  00007	0f 95 c0	 setne	 al
  0000a	0f b6 c0	 movzx	 eax, al
  0000d	89 45 08	 mov	 DWORD PTR _bFlag$[ebp], eax
  00010	83 c1 7c	 add	 ecx, 124		; 0000007cH

; 979  : 	}

  00013	5d		 pop	 ebp

; 978  : 		m_TextInstance.SetSecret(bFlag ? true : false);

  00014	e9 00 00 00 00	 jmp	 ?SetSecret@CGraphicTextInstance@@QAEX_N@Z ; CGraphicTextInstance::SetSecret
?SetSecret@CTextLine@UI@@QAEXH@Z ENDP			; UI::CTextLine::SetSecret
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetVerticalAlign@CTextLine@UI@@QAEXH@Z
_TEXT	SEGMENT
_iType$ = 8						; size = 4
?SetVerticalAlign@CTextLine@UI@@QAEXH@Z PROC		; UI::CTextLine::SetVerticalAlign, COMDAT
; _this$ = ecx

; 973  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 974  : 		m_TextInstance.SetVerticalAlign(iType);

  00003	83 c1 7c	 add	 ecx, 124		; 0000007cH

; 975  : 	}

  00006	5d		 pop	 ebp

; 974  : 		m_TextInstance.SetVerticalAlign(iType);

  00007	e9 00 00 00 00	 jmp	 ?SetVerticalAlign@CGraphicTextInstance@@QAEXH@Z ; CGraphicTextInstance::SetVerticalAlign
?SetVerticalAlign@CTextLine@UI@@QAEXH@Z ENDP		; UI::CTextLine::SetVerticalAlign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetHorizontalAlign@CTextLine@UI@@QAEXH@Z
_TEXT	SEGMENT
_iType$ = 8						; size = 4
?SetHorizontalAlign@CTextLine@UI@@QAEXH@Z PROC		; UI::CTextLine::SetHorizontalAlign, COMDAT
; _this$ = ecx

; 969  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 970  : 		m_TextInstance.SetHorizonalAlign(iType);

  00003	83 c1 7c	 add	 ecx, 124		; 0000007cH

; 971  : 	}

  00006	5d		 pop	 ebp

; 970  : 		m_TextInstance.SetHorizonalAlign(iType);

  00007	e9 00 00 00 00	 jmp	 ?SetHorizonalAlign@CGraphicTextInstance@@QAEXH@Z ; CGraphicTextInstance::SetHorizonalAlign
?SetHorizontalAlign@CTextLine@UI@@QAEXH@Z ENDP		; UI::CTextLine::SetHorizontalAlign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetMax@CTextLine@UI@@QAEXH@Z
_TEXT	SEGMENT
_iMax$ = 8						; size = 4
?SetMax@CTextLine@UI@@QAEXH@Z PROC			; UI::CTextLine::SetMax, COMDAT
; _this$ = ecx

; 965  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 966  : 		m_TextInstance.SetMax(iMax);

  00003	83 c1 7c	 add	 ecx, 124		; 0000007cH

; 967  : 	}

  00006	5d		 pop	 ebp

; 966  : 		m_TextInstance.SetMax(iMax);

  00007	e9 00 00 00 00	 jmp	 ?SetMax@CGraphicTextInstance@@QAEXH@Z ; CGraphicTextInstance::SetMax
?SetMax@CTextLine@UI@@QAEXH@Z ENDP			; UI::CTextLine::SetMax
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CTextLine@UI@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CTextLine@UI@@UAE@XZ PROC				; UI::CTextLine::~CTextLine, COMDAT
; _this$ = ecx

; 960  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CTextLine@UI@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f9		 mov	 edi, ecx

; 961  : 		m_TextInstance.Destroy();

  00026	8d 4f 7c	 lea	 ecx, DWORD PTR [edi+124]
  00029	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CTextLine@UI@@6B@
  0002f	e8 00 00 00 00	 call	 ?Destroy@CGraphicTextInstance@@QAEXXZ ; CGraphicTextInstance::Destroy

; 962  : 	}

  00034	8d 4f 7c	 lea	 ecx, DWORD PTR [edi+124]
  00037	e8 00 00 00 00	 call	 ??1CGraphicTextInstance@@UAE@XZ ; CGraphicTextInstance::~CGraphicTextInstance
  0003c	8b cf		 mov	 ecx, edi
  0003e	e8 00 00 00 00	 call	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	5f		 pop	 edi
  0004f	5e		 pop	 esi
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
  00054	cc		 int	 3
  00055	cc		 int	 3
  00056	cc		 int	 3
  00057	cc		 int	 3
  00058	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CTextLine@UI@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CTextLine@UI@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CTextLine@UI@@UAE@XZ ENDP				; UI::CTextLine::~CTextLine
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CTextLine@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ppyObject$ = 8						; size = 4
??0CTextLine@UI@@QAE@PAU_object@@@Z PROC		; UI::CTextLine::CTextLine, COMDAT
; _this$ = ecx

; 954  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CTextLine@UI@@QAE@PAU_object@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi

; 953  : 	CTextLine::CTextLine(PyObject * ppyObject) : CWindow(ppyObject)

  0002a	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  0002d	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow

; 954  : 	{

  00032	8d 4f 7c	 lea	 ecx, DWORD PTR [edi+124]
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003c	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CTextLine@UI@@6B@
  00042	e8 00 00 00 00	 call	 ??0CGraphicTextInstance@@QAE@XZ ; CGraphicTextInstance::CGraphicTextInstance

; 955  : 		m_TextInstance.SetColor(0.78f, 0.78f, 0.78f);

  00047	83 ec 10	 sub	 esp, 16			; 00000010H
  0004a	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0004e	8d 4f 7c	 lea	 ecx, DWORD PTR [edi+124]
  00051	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00059	c7 44 24 08 14
	ae 47 3f	 mov	 DWORD PTR [esp+8], 1061662228 ; 3f47ae14H
  00061	c7 44 24 04 14
	ae 47 3f	 mov	 DWORD PTR [esp+4], 1061662228 ; 3f47ae14H
  00069	c7 04 24 14 ae
	47 3f		 mov	 DWORD PTR [esp], 1061662228 ; 3f47ae14H
  00070	e8 00 00 00 00	 call	 ?SetColor@CGraphicTextInstance@@QAEXMMMM@Z ; CGraphicTextInstance::SetColor

; 956  : 		m_TextInstance.SetHorizonalAlign(CGraphicTextInstance::HORIZONTAL_ALIGN_LEFT);

  00075	6a 01		 push	 1
  00077	8d 4f 7c	 lea	 ecx, DWORD PTR [edi+124]
  0007a	e8 00 00 00 00	 call	 ?SetHorizonalAlign@CGraphicTextInstance@@QAEXH@Z ; CGraphicTextInstance::SetHorizonalAlign

; 957  : 		m_TextInstance.SetVerticalAlign(CGraphicTextInstance::VERTICAL_ALIGN_TOP);

  0007f	6a 10		 push	 16			; 00000010H
  00081	8d 4f 7c	 lea	 ecx, DWORD PTR [edi+124]
  00084	e8 00 00 00 00	 call	 ?SetVerticalAlign@CGraphicTextInstance@@QAEXH@Z ; CGraphicTextInstance::SetVerticalAlign

; 958  : 	}

  00089	8b c7		 mov	 eax, edi
  0008b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0008e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00095	59		 pop	 ecx
  00096	5f		 pop	 edi
  00097	5e		 pop	 esi
  00098	8b e5		 mov	 esp, ebp
  0009a	5d		 pop	 ebp
  0009b	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CTextLine@UI@@QAE@PAU_object@@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
__unwindfunclet$??0CTextLine@UI@@QAE@PAU_object@@@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 7c	 add	 ecx, 124		; 0000007cH
  0000e	e9 00 00 00 00	 jmp	 ??1CGraphicTextInstance@@UAE@XZ ; CGraphicTextInstance::~CGraphicTextInstance
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
  00017	cc		 int	 3
__ehhandler$??0CTextLine@UI@@QAE@PAU_object@@@Z:
  00018	90		 npad	 1
  00019	90		 npad	 1
  0001a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00021	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00024	33 c8		 xor	 ecx, eax
  00026	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CTextLine@UI@@QAE@PAU_object@@@Z
  00030	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CTextLine@UI@@QAE@PAU_object@@@Z ENDP		; UI::CTextLine::CTextLine
; Function compile flags: /Ogtp
;	COMDAT ??_GCBar3D@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCBar3D@UI@@UAEPAXI@Z PROC				; UI::CBar3D::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CBar3D@UI@@UAE@XZ	; UI::CBar3D::~CBar3D
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 88 00 00 00	 push	 136			; 00000088H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCBar3D@UI@@UAEPAXI@Z ENDP				; UI::CBar3D::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CBar3D@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CBar3D@UI@@MAEXXZ PROC			; UI::CBar3D::OnRender, COMDAT
; _this$ = ecx

; 934  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	57		 push	 edi

; 935  : 		CPythonGraphic & rkpyGraphic = CPythonGraphic::Instance();

  00004	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton

; 936  : 
; 937  : 		rkpyGraphic.SetDiffuseColor(m_dwCenterColor);

  0000a	8b cf		 mov	 ecx, edi
  0000c	ff b6 84 00 00
	00		 push	 DWORD PTR [esi+132]
  00012	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXK@Z ; CScreen::SetDiffuseColor
  00017	66 0f 6e 46 40	 movd	 xmm0, DWORD PTR [esi+64]

; 938  : 		rkpyGraphic.RenderBar2d(m_rect.left, m_rect.top, m_rect.right, m_rect.bottom);

  0001c	83 ec 14	 sub	 esp, 20			; 00000014H
  0001f	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00022	8b cf		 mov	 ecx, edi
  00024	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  0002c	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00032	66 0f 6e 46 3c	 movd	 xmm0, DWORD PTR [esi+60]
  00037	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0003a	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00040	66 0f 6e 46 38	 movd	 xmm0, DWORD PTR [esi+56]
  00045	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00048	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0004e	66 0f 6e 46 34	 movd	 xmm0, DWORD PTR [esi+52]
  00053	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00056	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005b	e8 00 00 00 00	 call	 ?RenderBar2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderBar2d

; 939  : 
; 940  : 		rkpyGraphic.SetDiffuseColor(m_dwLeftColor);

  00060	ff 76 7c	 push	 DWORD PTR [esi+124]
  00063	8b cf		 mov	 ecx, edi
  00065	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXK@Z ; CScreen::SetDiffuseColor
  0006a	66 0f 6e 4e 38	 movd	 xmm1, DWORD PTR [esi+56]

; 941  : 		rkpyGraphic.RenderLine2d(m_rect.left, m_rect.top, m_rect.right, m_rect.top);

  0006f	83 ec 14	 sub	 esp, 20			; 00000014H
  00072	66 0f 6e 46 3c	 movd	 xmm0, DWORD PTR [esi+60]
  00077	8b cf		 mov	 ecx, edi
  00079	0f 5b c9	 cvtdq2ps xmm1, xmm1
  0007c	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  00084	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00087	f3 0f 11 4c 24
	0c		 movss	 DWORD PTR [esp+12], xmm1
  0008d	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00093	66 0f 6e 46 34	 movd	 xmm0, DWORD PTR [esi+52]
  00098	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0009b	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  000a1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a6	e8 00 00 00 00	 call	 ?RenderLine2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderLine2d
  000ab	66 0f 6e 46 40	 movd	 xmm0, DWORD PTR [esi+64]

; 942  : 		rkpyGraphic.RenderLine2d(m_rect.left, m_rect.top, m_rect.left, m_rect.bottom);

  000b0	83 ec 14	 sub	 esp, 20			; 00000014H
  000b3	66 0f 6e 4e 34	 movd	 xmm1, DWORD PTR [esi+52]
  000b8	8b cf		 mov	 ecx, edi
  000ba	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000bd	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  000c5	0f 5b c9	 cvtdq2ps xmm1, xmm1
  000c8	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  000ce	66 0f 6e 46 38	 movd	 xmm0, DWORD PTR [esi+56]
  000d3	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000d6	f3 0f 11 4c 24
	08		 movss	 DWORD PTR [esp+8], xmm1
  000dc	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000e2	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  000e7	e8 00 00 00 00	 call	 ?RenderLine2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderLine2d

; 943  : 
; 944  : 		rkpyGraphic.SetDiffuseColor(m_dwRightColor);

  000ec	ff b6 80 00 00
	00		 push	 DWORD PTR [esi+128]
  000f2	8b cf		 mov	 ecx, edi
  000f4	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXK@Z ; CScreen::SetDiffuseColor
  000f9	66 0f 6e 4e 40	 movd	 xmm1, DWORD PTR [esi+64]

; 945  : 		rkpyGraphic.RenderLine2d(m_rect.left, m_rect.bottom, m_rect.right, m_rect.bottom);

  000fe	83 ec 14	 sub	 esp, 20			; 00000014H
  00101	66 0f 6e 46 3c	 movd	 xmm0, DWORD PTR [esi+60]
  00106	8b cf		 mov	 ecx, edi
  00108	0f 5b c9	 cvtdq2ps xmm1, xmm1
  0010b	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  00113	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00116	f3 0f 11 4c 24
	0c		 movss	 DWORD PTR [esp+12], xmm1
  0011c	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00122	66 0f 6e 46 34	 movd	 xmm0, DWORD PTR [esi+52]
  00127	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0012a	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  00130	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00135	e8 00 00 00 00	 call	 ?RenderLine2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderLine2d
  0013a	66 0f 6e 46 40	 movd	 xmm0, DWORD PTR [esi+64]

; 946  : 		rkpyGraphic.RenderLine2d(m_rect.right, m_rect.top, m_rect.right, m_rect.bottom);

  0013f	83 ec 14	 sub	 esp, 20			; 00000014H
  00142	66 0f 6e 4e 3c	 movd	 xmm1, DWORD PTR [esi+60]
  00147	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0014a	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  00152	0f 5b c9	 cvtdq2ps xmm1, xmm1
  00155	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  0015b	66 0f 6e 46 38	 movd	 xmm0, DWORD PTR [esi+56]
  00160	f3 0f 11 4c 24
	08		 movss	 DWORD PTR [esp+8], xmm1
  00166	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00169	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0016f	8b cf		 mov	 ecx, edi
  00171	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00176	e8 00 00 00 00	 call	 ?RenderLine2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderLine2d
  0017b	5f		 pop	 edi
  0017c	5e		 pop	 esi

; 947  : 	}

  0017d	c3		 ret	 0
?OnRender@CBar3D@UI@@MAEXXZ ENDP			; UI::CBar3D::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetColor@CBar3D@UI@@QAEXKKK@Z
_TEXT	SEGMENT
_dwLeft$ = 8						; size = 4
_dwRight$ = 12						; size = 4
_dwCenter$ = 16						; size = 4
?SetColor@CBar3D@UI@@QAEXKKK@Z PROC			; UI::CBar3D::SetColor, COMDAT
; _this$ = ecx

; 927  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 928  : 		m_dwLeftColor = dwLeft;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwLeft$[ebp]
  00006	89 41 7c	 mov	 DWORD PTR [ecx+124], eax

; 929  : 		m_dwRightColor = dwRight;

  00009	8b 45 0c	 mov	 eax, DWORD PTR _dwRight$[ebp]
  0000c	89 81 80 00 00
	00		 mov	 DWORD PTR [ecx+128], eax

; 930  : 		m_dwCenterColor = dwCenter;

  00012	8b 45 10	 mov	 eax, DWORD PTR _dwCenter$[ebp]
  00015	89 81 84 00 00
	00		 mov	 DWORD PTR [ecx+132], eax

; 931  : 	}

  0001b	5d		 pop	 ebp
  0001c	c2 0c 00	 ret	 12			; 0000000cH
?SetColor@CBar3D@UI@@QAEXKKK@Z ENDP			; UI::CBar3D::SetColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CBar3D@UI@@UAE@XZ
_TEXT	SEGMENT
??1CBar3D@UI@@UAE@XZ PROC				; UI::CBar3D::~CBar3D, COMDAT
; _this$ = ecx

; 923  : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBar3D@UI@@6B@

; 924  : 	}

  00006	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
??1CBar3D@UI@@UAE@XZ ENDP				; UI::CBar3D::~CBar3D
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CBar3D@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CBar3D@UI@@QAE@PAU_object@@@Z PROC			; UI::CBar3D::CBar3D, COMDAT
; _this$ = ecx

; 917  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBar3D@UI@@6B@

; 918  : 		m_dwLeftColor = D3DXCOLOR(0.2f, 0.2f, 0.2f, 1.0f);
; 919  : 		m_dwRightColor = D3DXCOLOR(0.7f, 0.7f, 0.7f, 1.0f);
; 920  : 		m_dwCenterColor = D3DXCOLOR(0.0f, 0.0f, 0.0f, 1.0f);
; 921  : 	}

  00018	8b c6		 mov	 eax, esi
  0001a	c7 46 7c 33 33
	33 ff		 mov	 DWORD PTR [esi+124], -13421773 ; ff333333H
  00021	c7 86 80 00 00
	00 b3 b3 b3 ff	 mov	 DWORD PTR [esi+128], -5000269 ; ffb3b3b3H
  0002b	c7 86 84 00 00
	00 00 00 00 ff	 mov	 DWORD PTR [esi+132], -16777216 ; ff000000H
  00035	5e		 pop	 esi
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 04 00	 ret	 4
??0CBar3D@UI@@QAE@PAU_object@@@Z ENDP			; UI::CBar3D::CBar3D
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Type@CBar3D@UI@@SAKXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?Type@CBar3D@UI@@SAKXZ PROC				; UI::CBar3D::Type, COMDAT

; 911  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Type@CBar3D@UI@@SAKXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 912  : 		static DWORD s_dwType = GetCRC32("CBar3D", strlen("CBar3D"));

  00022	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0002e	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??Type@CBar3D@UI@@SAKXZ@4HA
  00036	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  0003c	7f 14		 jg	 SHORT $LN9@Type
$LN5@Type:

; 913  : 		return (s_dwType);
; 914  : 	}

  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_dwType@?1??Type@CBar3D@UI@@SAKXZ@4KA
  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
$LN9@Type:

; 912  : 		static DWORD s_dwType = GetCRC32("CBar3D", strlen("CBar3D"));

  00052	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CBar3D@UI@@SAKXZ@4HA
  00057	e8 00 00 00 00	 call	 __Init_thread_header
  0005c	83 c4 04	 add	 esp, 4
  0005f	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??Type@CBar3D@UI@@SAKXZ@4HA, -1
  00066	75 d6		 jne	 SHORT $LN5@Type
  00068	6a 06		 push	 6
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_06ICLMADCA@CBar3D@
  0006f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00076	e8 00 00 00 00	 call	 ?GetCRC32@@YAKPBDI@Z	; GetCRC32
  0007b	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CBar3D@UI@@SAKXZ@4HA
  00080	a3 00 00 00 00	 mov	 DWORD PTR ?s_dwType@?1??Type@CBar3D@UI@@SAKXZ@4KA, eax
  00085	e8 00 00 00 00	 call	 __Init_thread_footer
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008d	eb af		 jmp	 SHORT $LN5@Type
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Type@CBar3D@UI@@SAKXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CBar3D@UI@@SAKXZ@4HA
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$?Type@CBar3D@UI@@SAKXZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Type@CBar3D@UI@@SAKXZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Type@CBar3D@UI@@SAKXZ ENDP				; UI::CBar3D::Type
; Function compile flags: /Ogtp
;	COMDAT ??_GCLine@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCLine@UI@@UAEPAXI@Z PROC				; UI::CLine::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CLine@UI@@UAE@XZ	; UI::CLine::~CLine
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 80 00 00 00	 push	 128			; 00000080H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCLine@UI@@UAEPAXI@Z ENDP				; UI::CLine::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CLine@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CLine@UI@@MAEXXZ PROC				; UI::CLine::OnRender, COMDAT
; _this$ = ecx

; 900  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	57		 push	 edi

; 901  : 		CPythonGraphic & rkpyGraphic = CPythonGraphic::Instance();

  00004	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton

; 902  : 		rkpyGraphic.SetDiffuseColor(m_dwColor);

  0000a	8b cf		 mov	 ecx, edi
  0000c	ff 76 7c	 push	 DWORD PTR [esi+124]
  0000f	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXK@Z ; CScreen::SetDiffuseColor
  00014	66 0f 6e 46 40	 movd	 xmm0, DWORD PTR [esi+64]

; 903  : 		rkpyGraphic.RenderLine2d(m_rect.left, m_rect.top, m_rect.right, m_rect.bottom);

  00019	83 ec 14	 sub	 esp, 20			; 00000014H
  0001c	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0001f	8b cf		 mov	 ecx, edi
  00021	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  00029	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  0002f	66 0f 6e 46 3c	 movd	 xmm0, DWORD PTR [esi+60]
  00034	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00037	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0003d	66 0f 6e 46 38	 movd	 xmm0, DWORD PTR [esi+56]
  00042	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00045	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0004b	66 0f 6e 46 34	 movd	 xmm0, DWORD PTR [esi+52]
  00050	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00053	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00058	e8 00 00 00 00	 call	 ?RenderLine2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderLine2d
  0005d	5f		 pop	 edi
  0005e	5e		 pop	 esi

; 904  : 	}

  0005f	c3		 ret	 0
?OnRender@CLine@UI@@MAEXXZ ENDP				; UI::CLine::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetColor@CLine@UI@@UAEXK@Z
_TEXT	SEGMENT
_dwColor$ = 8						; size = 4
?SetColor@CLine@UI@@UAEXK@Z PROC			; UI::CLine::SetColor, COMDAT
; _this$ = ecx

; 895  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 896  : 		m_dwColor = dwColor;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwColor$[ebp]
  00006	89 41 7c	 mov	 DWORD PTR [ecx+124], eax

; 897  : 	}

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetColor@CLine@UI@@UAEXK@Z ENDP			; UI::CLine::SetColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CLine@UI@@UAE@XZ
_TEXT	SEGMENT
??1CLine@UI@@UAE@XZ PROC				; UI::CLine::~CLine, COMDAT
; _this$ = ecx

; 891  : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CLine@UI@@6B@

; 892  : 	}

  00006	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
??1CLine@UI@@UAE@XZ ENDP				; UI::CLine::~CLine
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CLine@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CLine@UI@@QAE@PAU_object@@@Z PROC			; UI::CLine::CLine, COMDAT
; _this$ = ecx

; 888  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CLine@UI@@6B@

; 889  : 	}

  00018	8b c6		 mov	 eax, esi
  0001a	c7 46 7c 00 00
	00 ff		 mov	 DWORD PTR [esi+124], -16777216 ; ff000000H
  00021	5e		 pop	 esi
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
??0CLine@UI@@QAE@PAU_object@@@Z ENDP			; UI::CLine::CLine
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCBar@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCBar@UI@@UAEPAXI@Z PROC				; UI::CBar::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CBar@UI@@UAE@XZ	; UI::CBar::~CBar
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 80 00 00 00	 push	 128			; 00000080H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCBar@UI@@UAEPAXI@Z ENDP				; UI::CBar::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CBar@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CBar@UI@@MAEXXZ PROC				; UI::CBar::OnRender, COMDAT
; _this$ = ecx

; 878  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 879  : 		CPythonGraphic::Instance().SetDiffuseColor(m_dwColor);

  00003	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  00009	ff 76 7c	 push	 DWORD PTR [esi+124]
  0000c	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXK@Z ; CScreen::SetDiffuseColor
  00011	66 0f 6e 46 40	 movd	 xmm0, DWORD PTR [esi+64]

; 880  : 		CPythonGraphic::Instance().RenderBar2d(m_rect.left, m_rect.top, m_rect.right, m_rect.bottom);

  00016	83 ec 14	 sub	 esp, 20			; 00000014H
  00019	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0001c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  00022	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  0002a	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00030	66 0f 6e 46 3c	 movd	 xmm0, DWORD PTR [esi+60]
  00035	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00038	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0003e	66 0f 6e 46 38	 movd	 xmm0, DWORD PTR [esi+56]
  00043	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00046	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0004c	66 0f 6e 46 34	 movd	 xmm0, DWORD PTR [esi+52]
  00051	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00054	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00059	e8 00 00 00 00	 call	 ?RenderBar2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderBar2d
  0005e	5e		 pop	 esi

; 881  : 	}

  0005f	c3		 ret	 0
?OnRender@CBar@UI@@MAEXXZ ENDP				; UI::CBar::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetColor@CBar@UI@@UAEXK@Z
_TEXT	SEGMENT
_dwColor$ = 8						; size = 4
?SetColor@CBar@UI@@UAEXK@Z PROC				; UI::CBar::SetColor, COMDAT
; _this$ = ecx

; 873  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 874  : 		m_dwColor = dwColor;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwColor$[ebp]
  00006	89 41 7c	 mov	 DWORD PTR [ecx+124], eax

; 875  : 	}

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetColor@CBar@UI@@UAEXK@Z ENDP				; UI::CBar::SetColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CBar@UI@@UAE@XZ
_TEXT	SEGMENT
??1CBar@UI@@UAE@XZ PROC					; UI::CBar::~CBar, COMDAT
; _this$ = ecx

; 869  : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBar@UI@@6B@

; 870  : 	}

  00006	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
??1CBar@UI@@UAE@XZ ENDP					; UI::CBar::~CBar
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CBar@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CBar@UI@@QAE@PAU_object@@@Z PROC			; UI::CBar::CBar, COMDAT
; _this$ = ecx

; 866  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBar@UI@@6B@

; 867  : 	}

  00018	8b c6		 mov	 eax, esi
  0001a	c7 46 7c 00 00
	00 ff		 mov	 DWORD PTR [esi+124], -16777216 ; ff000000H
  00021	5e		 pop	 esi
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
??0CBar@UI@@QAE@PAU_object@@@Z ENDP			; UI::CBar::CBar
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCBox@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCBox@UI@@UAEPAXI@Z PROC				; UI::CBox::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CBox@UI@@UAE@XZ	; UI::CBox::~CBox
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 80 00 00 00	 push	 128			; 00000080H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCBox@UI@@UAEPAXI@Z ENDP				; UI::CBox::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CBox@UI@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CBox@UI@@MAEXXZ PROC				; UI::CBox::OnRender, COMDAT
; _this$ = ecx

; 856  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 857  : 		CPythonGraphic::Instance().SetDiffuseColor(m_dwColor);

  00003	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  00009	ff 76 7c	 push	 DWORD PTR [esi+124]
  0000c	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXK@Z ; CScreen::SetDiffuseColor
  00011	66 0f 6e 46 40	 movd	 xmm0, DWORD PTR [esi+64]

; 858  : 		CPythonGraphic::Instance().RenderBox2d(m_rect.left, m_rect.top, m_rect.right, m_rect.bottom);

  00016	83 ec 14	 sub	 esp, 20			; 00000014H
  00019	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0001c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  00022	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  0002a	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00030	66 0f 6e 46 3c	 movd	 xmm0, DWORD PTR [esi+60]
  00035	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00038	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0003e	66 0f 6e 46 38	 movd	 xmm0, DWORD PTR [esi+56]
  00043	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00046	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0004c	66 0f 6e 46 34	 movd	 xmm0, DWORD PTR [esi+52]
  00051	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00054	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00059	e8 00 00 00 00	 call	 ?RenderBox2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderBox2d
  0005e	5e		 pop	 esi

; 859  : 	}

  0005f	c3		 ret	 0
?OnRender@CBox@UI@@MAEXXZ ENDP				; UI::CBox::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetColor@CBox@UI@@UAEXK@Z
_TEXT	SEGMENT
_dwColor$ = 8						; size = 4
?SetColor@CBox@UI@@UAEXK@Z PROC				; UI::CBox::SetColor, COMDAT
; _this$ = ecx

; 851  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 852  : 		m_dwColor = dwColor;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwColor$[ebp]
  00006	89 41 7c	 mov	 DWORD PTR [ecx+124], eax

; 853  : 	}

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetColor@CBox@UI@@UAEXK@Z ENDP				; UI::CBox::SetColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CBox@UI@@UAE@XZ
_TEXT	SEGMENT
??1CBox@UI@@UAE@XZ PROC					; UI::CBox::~CBox, COMDAT
; _this$ = ecx

; 847  : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBox@UI@@6B@

; 848  : 	}

  00006	e9 00 00 00 00	 jmp	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
??1CBox@UI@@UAE@XZ ENDP					; UI::CBox::~CBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CBox@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppyObject$ = 8						; size = 4
??0CBox@UI@@QAE@PAU_object@@@Z PROC			; UI::CBox::CBox, COMDAT
; _this$ = ecx

; 844  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _ppyObject$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CWindow@UI@@QAE@PAU_object@@@Z ; UI::CWindow::CWindow
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBox@UI@@6B@

; 845  : 	}

  00018	8b c6		 mov	 eax, esi
  0001a	c7 46 7c 00 00
	00 ff		 mov	 DWORD PTR [esi+124], -16777216 ; ff000000H
  00021	5e		 pop	 esi
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
??0CBox@UI@@QAE@PAU_object@@@Z ENDP			; UI::CBox::CBox
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCWindow@UI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCWindow@UI@@UAEPAXI@Z PROC				; UI::CWindow::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CWindow@UI@@UAE@XZ	; UI::CWindow::~CWindow
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 7c		 push	 124			; 0000007cH
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCWindow@UI@@UAEPAXI@Z ENDP				; UI::CWindow::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.h
;	COMDAT ?IsWindow@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
?IsWindow@CWindow@UI@@UAEHXZ PROC			; UI::CWindow::IsWindow, COMDAT
; _this$ = ecx

; 163  : 			virtual BOOL	IsWindow() { return TRUE; }

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?IsWindow@CWindow@UI@@UAEHXZ ENDP			; UI::CWindow::IsWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIsType@CWindow@UI@@UAEHK@Z
_TEXT	SEGMENT
_dwType$ = 8						; size = 4
?OnIsType@CWindow@UI@@UAEHK@Z PROC			; UI::CWindow::OnIsType, COMDAT
; _this$ = ecx

; 55   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 56   : 		if (CWindow::Type() == dwType)

  00003	e8 00 00 00 00	 call	 ?Type@CWindow@UI@@SAKXZ	; UI::CWindow::Type
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 45 08	 cmp	 eax, DWORD PTR _dwType$[ebp]
  0000d	0f 94 c1	 sete	 cl
  00010	8b c1		 mov	 eax, ecx

; 57   : 			return TRUE;
; 58   : 
; 59   : 		return FALSE;
; 60   : 	}

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?OnIsType@CWindow@UI@@UAEHK@Z ENDP			; UI::CWindow::OnIsType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.h
;	COMDAT ?SetColor@CWindow@UI@@UAEXK@Z
_TEXT	SEGMENT
_dwColor$ = 8						; size = 4
?SetColor@CWindow@UI@@UAEXK@Z PROC			; UI::CWindow::SetColor, COMDAT
; _this$ = ecx

; 159  : 			virtual void	SetColor(DWORD dwColor){}

  00000	c2 04 00	 ret	 4
?SetColor@CWindow@UI@@UAEXK@Z ENDP			; UI::CWindow::SetColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnPressExitKey@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnPressExitKey@CWindow@UI@@UAEHXZ PROC			; UI::CWindow::OnPressExitKey, COMDAT
; _this$ = ecx

; 767  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 768  : 		long lValue;
; 769  : 		if (PyCallClassMemberFunc(m_poHandler, "OnPressExitKey", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KEJGBDKK@OnPressExitKey@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0c		 je	 SHORT $LN3@OnPressExi

; 770  : 		if (0 != lValue)

  00026	33 c0		 xor	 eax, eax
  00028	39 45 fc	 cmp	 DWORD PTR _lValue$[ebp], eax
  0002b	0f 95 c0	 setne	 al

; 774  : 	}

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
$LN3@OnPressExi:

; 771  : 			return TRUE;
; 772  : 
; 773  : 		return FALSE;

  00032	33 c0		 xor	 eax, eax

; 774  : 	}

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?OnPressExitKey@CWindow@UI@@UAEHXZ ENDP			; UI::CWindow::OnPressExitKey
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnPressEscapeKey@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnPressEscapeKey@CWindow@UI@@UAEHXZ PROC		; UI::CWindow::OnPressEscapeKey, COMDAT
; _this$ = ecx

; 757  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 758  : 		long lValue;
; 759  : 		if (PyCallClassMemberFunc(m_poHandler, "OnPressEscapeKey", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@HCFLIMGH@OnPressEscapeKey@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0c		 je	 SHORT $LN3@OnPressEsc

; 760  : 		if (0 != lValue)

  00026	33 c0		 xor	 eax, eax
  00028	39 45 fc	 cmp	 DWORD PTR _lValue$[ebp], eax
  0002b	0f 95 c0	 setne	 al

; 764  : 	}

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
$LN3@OnPressEsc:

; 761  : 			return TRUE;
; 762  : 
; 763  : 		return FALSE;

  00032	33 c0		 xor	 eax, eax

; 764  : 	}

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?OnPressEscapeKey@CWindow@UI@@UAEHXZ ENDP		; UI::CWindow::OnPressEscapeKey
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnKeyUp@CWindow@UI@@UAEHH@Z
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
_ikey$ = 8						; size = 4
?OnKeyUp@CWindow@UI@@UAEHH@Z PROC			; UI::CWindow::OnKeyUp, COMDAT
; _this$ = ecx

; 747  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 748  : 		long lValue;
; 749  : 		if (PyCallClassMemberFunc(m_poHandler, "OnKeyUp", Py_BuildValue("(i)", ikey), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	ff 75 08	 push	 DWORD PTR _ikey$[ebp]
  0000e	68 00 00 00 00	 push	 OFFSET ??_C@_03LIHNMIHG@?$CIi?$CJ@
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00019	83 c4 08	 add	 esp, 8
  0001c	50		 push	 eax
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_07NGNLLPEG@OnKeyUp@
  00022	ff 76 5c	 push	 DWORD PTR [esi+92]
  00025	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0002a	83 c4 10	 add	 esp, 16			; 00000010H
  0002d	5e		 pop	 esi
  0002e	84 c0		 test	 al, al
  00030	74 0e		 je	 SHORT $LN3@OnKeyUp

; 750  : 		if (0 != lValue)

  00032	33 c0		 xor	 eax, eax
  00034	39 45 fc	 cmp	 DWORD PTR _lValue$[ebp], eax
  00037	0f 95 c0	 setne	 al

; 754  : 	}

  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
$LN3@OnKeyUp:

; 751  : 			return TRUE;
; 752  : 
; 753  : 		return FALSE;

  00040	33 c0		 xor	 eax, eax

; 754  : 	}

  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
?OnKeyUp@CWindow@UI@@UAEHH@Z ENDP			; UI::CWindow::OnKeyUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnKeyDown@CWindow@UI@@UAEHH@Z
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
_ikey$ = 8						; size = 4
?OnKeyDown@CWindow@UI@@UAEHH@Z PROC			; UI::CWindow::OnKeyDown, COMDAT
; _this$ = ecx

; 737  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 738  : 		long lValue;
; 739  : 		if (PyCallClassMemberFunc(m_poHandler, "OnKeyDown", Py_BuildValue("(i)", ikey), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	ff 75 08	 push	 DWORD PTR _ikey$[ebp]
  0000e	68 00 00 00 00	 push	 OFFSET ??_C@_03LIHNMIHG@?$CIi?$CJ@
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00019	83 c4 08	 add	 esp, 8
  0001c	50		 push	 eax
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_09CMHFBEC@OnKeyDown@
  00022	ff 76 5c	 push	 DWORD PTR [esi+92]
  00025	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0002a	83 c4 10	 add	 esp, 16			; 00000010H
  0002d	5e		 pop	 esi
  0002e	84 c0		 test	 al, al
  00030	74 0e		 je	 SHORT $LN3@OnKeyDown

; 740  : 		if (0 != lValue)

  00032	33 c0		 xor	 eax, eax
  00034	39 45 fc	 cmp	 DWORD PTR _lValue$[ebp], eax
  00037	0f 95 c0	 setne	 al

; 744  : 	}

  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
$LN3@OnKeyDown:

; 741  : 			return TRUE;
; 742  : 
; 743  : 		return FALSE;

  00040	33 c0		 xor	 eax, eax

; 744  : 	}

  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
?OnKeyDown@CWindow@UI@@UAEHH@Z ENDP			; UI::CWindow::OnKeyDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetScrollable@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?SetScrollable@CWindow@UI@@UAEXXZ PROC			; UI::CWindow::SetScrollable, COMDAT
; _this$ = ecx

; 651  : 		m_bIsScrollable = true;

  00000	c6 41 78 01	 mov	 BYTE PTR [ecx+120], 1

; 652  : 	}

  00004	c3		 ret	 0
?SetScrollable@CWindow@UI@@UAEXXZ ENDP			; UI::CWindow::SetScrollable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z
_TEXT	SEGMENT
_wDelta$ = 8						; size = 2
?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z PROC		; UI::CWindow::OnMouseWheelScroll, COMDAT
; _this$ = ecx

; 639  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 640  : #ifdef _DEBUG
; 641  : 		Tracenf("Mouse Wheel Scroll : wDelta %d ",wDelta);
; 642  : #endif
; 643  : 
; 644  : 		PyCallClassMemberFunc(m_poHandler , "OnMouseWheelScroll" , Py_BuildValue("(s)" , wDelta > 0? "UP":"DOWN") );

  00003	66 83 7d 08 00	 cmp	 WORD PTR _wDelta$[ebp], 0
  00008	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_02NAHCJHOC@UP@
  0000d	56		 push	 esi
  0000e	8b f1		 mov	 esi, ecx
  00010	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_04FANAOELO@DOWN@
  00015	0f 4e c1	 cmovle	 eax, ecx
  00018	50		 push	 eax
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_03KJMMOONA@?$CIs?$CJ@
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@GNNJJHBO@OnMouseWheelScroll@
  0002a	ff 76 5c	 push	 DWORD PTR [esi+92]
  0002d	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc

; 645  : 		return m_bIsScrollable;

  00032	0f b6 46 78	 movzx	 eax, BYTE PTR [esi+120]
  00036	83 c4 14	 add	 esp, 20			; 00000014H
  00039	5e		 pop	 esi

; 646  : 	}

  0003a	5d		 pop	 ebp
  0003b	c2 04 00	 ret	 4
?OnMouseWheelScroll@CWindow@UI@@UAEHF@Z ENDP		; UI::CWindow::OnMouseWheelScroll
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ PROC		; UI::CWindow::OnMouseMiddleButtonUp, COMDAT
; _this$ = ecx

; 627  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 628  : 		long lValue;
; 629  : 		if (PyCallClassMemberFunc(m_poHandler, "OnMouseMiddleButtonUp", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@IGAJCEHG@OnMouseMiddleButtonUp@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0c		 je	 SHORT $LN3@OnMouseMid

; 630  : 		if (0 != lValue)

  00026	33 c0		 xor	 eax, eax
  00028	39 45 fc	 cmp	 DWORD PTR _lValue$[ebp], eax
  0002b	0f 95 c0	 setne	 al

; 634  : 	}

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
$LN3@OnMouseMid:

; 631  : 			return TRUE;
; 632  : 
; 633  : 		return FALSE;

  00032	33 c0		 xor	 eax, eax

; 634  : 	}

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?OnMouseMiddleButtonUp@CWindow@UI@@UAEHXZ ENDP		; UI::CWindow::OnMouseMiddleButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ PROC	; UI::CWindow::OnMouseMiddleButtonDown, COMDAT
; _this$ = ecx

; 617  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 618  : 		long lValue;
; 619  : 		if (PyCallClassMemberFunc(m_poHandler, "OnMouseMiddleButtonDown", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@LKFMHNKP@OnMouseMiddleButtonDown@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0c		 je	 SHORT $LN3@OnMouseMid

; 620  : 		if (0 != lValue)

  00026	33 c0		 xor	 eax, eax
  00028	39 45 fc	 cmp	 DWORD PTR _lValue$[ebp], eax
  0002b	0f 95 c0	 setne	 al

; 624  : 	}

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
$LN3@OnMouseMid:

; 621  : 			return TRUE;
; 622  : 
; 623  : 		return FALSE;

  00032	33 c0		 xor	 eax, eax

; 624  : 	}

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?OnMouseMiddleButtonDown@CWindow@UI@@UAEHXZ ENDP	; UI::CWindow::OnMouseMiddleButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ PROC	; UI::CWindow::OnMouseRightButtonDoubleClick, COMDAT
; _this$ = ecx

; 607  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 608  : 		long lValue;
; 609  : 		if (PyCallClassMemberFunc(m_poHandler, "OnMouseRightButtonDoubleClick", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@NPKMHGOP@OnMouseRightButtonDoubleClick@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0c		 je	 SHORT $LN3@OnMouseRig

; 610  : 		if (0 != lValue)

  00026	33 c0		 xor	 eax, eax
  00028	39 45 fc	 cmp	 DWORD PTR _lValue$[ebp], eax
  0002b	0f 95 c0	 setne	 al

; 614  : 	}

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
$LN3@OnMouseRig:

; 611  : 			return TRUE;
; 612  : 
; 613  : 		return FALSE;

  00032	33 c0		 xor	 eax, eax

; 614  : 	}

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?OnMouseRightButtonDoubleClick@CWindow@UI@@UAEHXZ ENDP	; UI::CWindow::OnMouseRightButtonDoubleClick
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ PROC		; UI::CWindow::OnMouseRightButtonUp, COMDAT
; _this$ = ecx

; 597  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 598  : 		long lValue;
; 599  : 		if (PyCallClassMemberFunc(m_poHandler, "OnMouseRightButtonUp", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@FDIGHPIH@OnMouseRightButtonUp@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0c		 je	 SHORT $LN3@OnMouseRig

; 600  : 		if (0 != lValue)

  00026	33 c0		 xor	 eax, eax
  00028	39 45 fc	 cmp	 DWORD PTR _lValue$[ebp], eax
  0002b	0f 95 c0	 setne	 al

; 604  : 	}

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
$LN3@OnMouseRig:

; 601  : 			return TRUE;
; 602  : 
; 603  : 		return FALSE;

  00032	33 c0		 xor	 eax, eax

; 604  : 	}

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?OnMouseRightButtonUp@CWindow@UI@@UAEHXZ ENDP		; UI::CWindow::OnMouseRightButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ PROC		; UI::CWindow::OnMouseRightButtonDown, COMDAT
; _this$ = ecx

; 587  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 588  : 		long lValue;
; 589  : 		if (PyCallClassMemberFunc(m_poHandler, "OnMouseRightButtonDown", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@ELECPAKA@OnMouseRightButtonDown@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0c		 je	 SHORT $LN3@OnMouseRig

; 590  : 		if (0 != lValue)

  00026	33 c0		 xor	 eax, eax
  00028	39 45 fc	 cmp	 DWORD PTR _lValue$[ebp], eax
  0002b	0f 95 c0	 setne	 al

; 594  : 	}

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
$LN3@OnMouseRig:

; 591  : 			return TRUE;
; 592  : 
; 593  : 		return FALSE;

  00032	33 c0		 xor	 eax, eax

; 594  : 	}

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?OnMouseRightButtonDown@CWindow@UI@@UAEHXZ ENDP		; UI::CWindow::OnMouseRightButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ PROC	; UI::CWindow::OnMouseLeftButtonDoubleClick, COMDAT
; _this$ = ecx

; 577  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 578  : 		long lValue;
; 579  : 		if (PyCallClassMemberFunc(m_poHandler, "OnMouseLeftButtonDoubleClick", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@KEKGIMMP@OnMouseLeftButtonDoubleClick@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0c		 je	 SHORT $LN3@OnMouseLef

; 580  : 		if (0 != lValue)

  00026	33 c0		 xor	 eax, eax
  00028	39 45 fc	 cmp	 DWORD PTR _lValue$[ebp], eax
  0002b	0f 95 c0	 setne	 al

; 584  : 	}

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
$LN3@OnMouseLef:

; 581  : 			return TRUE;
; 582  : 
; 583  : 		return FALSE;

  00032	33 c0		 xor	 eax, eax

; 584  : 	}

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?OnMouseLeftButtonDoubleClick@CWindow@UI@@UAEHXZ ENDP	; UI::CWindow::OnMouseLeftButtonDoubleClick
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ PROC		; UI::CWindow::OnMouseLeftButtonUp, COMDAT
; _this$ = ecx

; 571  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 572  : 		PyCallClassMemberFunc(m_poHandler, "OnMouseLeftButtonUp", BuildEmptyTuple());

  00003	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@MJALGMGL@OnMouseLeftButtonUp@
  0000e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00011	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH

; 573  : 		return TRUE;

  00019	b8 01 00 00 00	 mov	 eax, 1
  0001e	5e		 pop	 esi

; 574  : 	}

  0001f	c3		 ret	 0
?OnMouseLeftButtonUp@CWindow@UI@@UAEHXZ ENDP		; UI::CWindow::OnMouseLeftButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ PROC		; UI::CWindow::OnMouseLeftButtonDown, COMDAT
; _this$ = ecx

; 561  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 562  : 		long lValue;
; 563  : 		if (PyCallClassMemberFunc(m_poHandler, "OnMouseLeftButtonDown", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@DNDHJHBD@OnMouseLeftButtonDown@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0c		 je	 SHORT $LN3@OnMouseLef

; 564  : 		if (0 != lValue)

  00026	33 c0		 xor	 eax, eax
  00028	39 45 fc	 cmp	 DWORD PTR _lValue$[ebp], eax
  0002b	0f 95 c0	 setne	 al

; 568  : 	}

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
$LN3@OnMouseLef:

; 565  : 			return TRUE;
; 566  : 
; 567  : 		return FALSE;

  00032	33 c0		 xor	 eax, eax

; 568  : 	}

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?OnMouseLeftButtonDown@CWindow@UI@@UAEHXZ ENDP		; UI::CWindow::OnMouseLeftButtonDown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ PROC	; UI::CWindow::OnIMECloseReadingWndEvent, COMDAT
; _this$ = ecx

; 727  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 728  : 		long lValue;
; 729  : 		if (PyCallClassMemberFunc(m_poHandler, "OnIMECloseReadingWnd", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@DEOILJPB@OnIMECloseReadingWnd@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0c		 je	 SHORT $LN3@OnIMEClose

; 730  : 		if (0 != lValue)

  00026	33 c0		 xor	 eax, eax
  00028	39 45 fc	 cmp	 DWORD PTR _lValue$[ebp], eax
  0002b	0f 95 c0	 setne	 al

; 734  : 	}

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
$LN3@OnIMEClose:

; 731  : 			return TRUE;
; 732  : 
; 733  : 		return FALSE;

  00032	33 c0		 xor	 eax, eax

; 734  : 	}

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?OnIMECloseReadingWndEvent@CWindow@UI@@UAEHXZ ENDP	; UI::CWindow::OnIMECloseReadingWndEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ PROC	; UI::CWindow::OnIMEOpenReadingWndEvent, COMDAT
; _this$ = ecx

; 717  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 718  : 		long lValue;
; 719  : 		if (PyCallClassMemberFunc(m_poHandler, "OnIMEOpenReadingWnd", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@KDCLEDDC@OnIMEOpenReadingWnd@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0c		 je	 SHORT $LN3@OnIMEOpenR

; 720  : 		if (0 != lValue)

  00026	33 c0		 xor	 eax, eax
  00028	39 45 fc	 cmp	 DWORD PTR _lValue$[ebp], eax
  0002b	0f 95 c0	 setne	 al

; 724  : 	}

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
$LN3@OnIMEOpenR:

; 721  : 			return TRUE;
; 722  : 
; 723  : 		return FALSE;

  00032	33 c0		 xor	 eax, eax

; 724  : 	}

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?OnIMEOpenReadingWndEvent@CWindow@UI@@UAEHXZ ENDP	; UI::CWindow::OnIMEOpenReadingWndEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ PROC	; UI::CWindow::OnIMECloseCandidateListEvent, COMDAT
; _this$ = ecx

; 707  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 708  : 		long lValue;
; 709  : 		if (PyCallClassMemberFunc(m_poHandler, "OnIMECloseCandidateList", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@LOIKIPJ@OnIMECloseCandidateList@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0c		 je	 SHORT $LN3@OnIMEClose

; 710  : 		if (0 != lValue)

  00026	33 c0		 xor	 eax, eax
  00028	39 45 fc	 cmp	 DWORD PTR _lValue$[ebp], eax
  0002b	0f 95 c0	 setne	 al

; 714  : 	}

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
$LN3@OnIMEClose:

; 711  : 			return TRUE;
; 712  : 
; 713  : 		return FALSE;

  00032	33 c0		 xor	 eax, eax

; 714  : 	}

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?OnIMECloseCandidateListEvent@CWindow@UI@@UAEHXZ ENDP	; UI::CWindow::OnIMECloseCandidateListEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ PROC	; UI::CWindow::OnIMEOpenCandidateListEvent, COMDAT
; _this$ = ecx

; 697  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 698  : 		long lValue;
; 699  : 		if (PyCallClassMemberFunc(m_poHandler, "OnIMEOpenCandidateList", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@HEDPBKEK@OnIMEOpenCandidateList@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0c		 je	 SHORT $LN3@OnIMEOpenC

; 700  : 		if (0 != lValue)

  00026	33 c0		 xor	 eax, eax
  00028	39 45 fc	 cmp	 DWORD PTR _lValue$[ebp], eax
  0002b	0f 95 c0	 setne	 al

; 704  : 	}

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
$LN3@OnIMEOpenC:

; 701  : 			return TRUE;
; 702  : 
; 703  : 		return FALSE;

  00032	33 c0		 xor	 eax, eax

; 704  : 	}

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?OnIMEOpenCandidateListEvent@CWindow@UI@@UAEHXZ ENDP	; UI::CWindow::OnIMEOpenCandidateListEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ PROC		; UI::CWindow::OnIMEChangeCodePage, COMDAT
; _this$ = ecx

; 687  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 688  : 		long lValue;
; 689  : 		if (PyCallClassMemberFunc(m_poHandler, "OnIMEChangeCodePage", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@EHKLBB@OnIMEChangeCodePage@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0c		 je	 SHORT $LN3@OnIMEChang

; 690  : 		if (0 != lValue)

  00026	33 c0		 xor	 eax, eax
  00028	39 45 fc	 cmp	 DWORD PTR _lValue$[ebp], eax
  0002b	0f 95 c0	 setne	 al

; 694  : 	}

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
$LN3@OnIMEChang:

; 691  : 			return TRUE;
; 692  : 
; 693  : 		return FALSE;

  00032	33 c0		 xor	 eax, eax

; 694  : 	}

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?OnIMEChangeCodePage@CWindow@UI@@UAEHXZ ENDP		; UI::CWindow::OnIMEChangeCodePage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
_ikey$ = 8						; size = 4
?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z PROC		; UI::CWindow::OnIMEKeyDownEvent, COMDAT
; _this$ = ecx

; 677  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 678  : 		long lValue;
; 679  : 		if (PyCallClassMemberFunc(m_poHandler, "OnIMEKeyDown", Py_BuildValue("(i)", ikey), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	ff 75 08	 push	 DWORD PTR _ikey$[ebp]
  0000e	68 00 00 00 00	 push	 OFFSET ??_C@_03LIHNMIHG@?$CIi?$CJ@
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00019	83 c4 08	 add	 esp, 8
  0001c	50		 push	 eax
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0N@BMPDGPBH@OnIMEKeyDown@
  00022	ff 76 5c	 push	 DWORD PTR [esi+92]
  00025	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0002a	83 c4 10	 add	 esp, 16			; 00000010H
  0002d	5e		 pop	 esi
  0002e	84 c0		 test	 al, al
  00030	74 0e		 je	 SHORT $LN3@OnIMEKeyDo

; 680  : 		if (0 != lValue)

  00032	33 c0		 xor	 eax, eax
  00034	39 45 fc	 cmp	 DWORD PTR _lValue$[ebp], eax
  00037	0f 95 c0	 setne	 al

; 684  : 	}

  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
$LN3@OnIMEKeyDo:

; 681  : 			return TRUE;
; 682  : 
; 683  : 		return FALSE;

  00040	33 c0		 xor	 eax, eax

; 684  : 	}

  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
?OnIMEKeyDownEvent@CWindow@UI@@UAEHH@Z ENDP		; UI::CWindow::OnIMEKeyDownEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIMEReturnEvent@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnIMEReturnEvent@CWindow@UI@@UAEHXZ PROC		; UI::CWindow::OnIMEReturnEvent, COMDAT
; _this$ = ecx

; 667  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 668  : 		long lValue;
; 669  : 		if (PyCallClassMemberFunc(m_poHandler, "OnIMEReturn", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0M@PILLCCFN@OnIMEReturn@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0c		 je	 SHORT $LN3@OnIMERetur

; 670  : 		if (0 != lValue)

  00026	33 c0		 xor	 eax, eax
  00028	39 45 fc	 cmp	 DWORD PTR _lValue$[ebp], eax
  0002b	0f 95 c0	 setne	 al

; 674  : 	}

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
$LN3@OnIMERetur:

; 671  : 			return TRUE;
; 672  : 
; 673  : 		return FALSE;

  00032	33 c0		 xor	 eax, eax

; 674  : 	}

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?OnIMEReturnEvent@CWindow@UI@@UAEHXZ ENDP		; UI::CWindow::OnIMEReturnEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIMETabEvent@CWindow@UI@@UAEHXZ
_TEXT	SEGMENT
_lValue$ = -4						; size = 4
?OnIMETabEvent@CWindow@UI@@UAEHXZ PROC			; UI::CWindow::OnIMETabEvent, COMDAT
; _this$ = ecx

; 657  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 658  : 		long lValue;
; 659  : 		if (PyCallClassMemberFunc(m_poHandler, "OnIMETab", BuildEmptyTuple(), &lValue))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _lValue$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_08HFELFLOI@OnIMETab@
  00016	ff 76 5c	 push	 DWORD PTR [esi+92]
  00019	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0PAJ@Z ; PyCallClassMemberFunc
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
  00021	5e		 pop	 esi
  00022	84 c0		 test	 al, al
  00024	74 0c		 je	 SHORT $LN3@OnIMETabEv

; 660  : 		if (0 != lValue)

  00026	33 c0		 xor	 eax, eax
  00028	39 45 fc	 cmp	 DWORD PTR _lValue$[ebp], eax
  0002b	0f 95 c0	 setne	 al

; 664  : 	}

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
$LN3@OnIMETabEv:

; 661  : 			return TRUE;
; 662  : 
; 663  : 		return FALSE;

  00032	33 c0		 xor	 eax, eax

; 664  : 	}

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?OnIMETabEvent@CWindow@UI@@UAEHXZ ENDP			; UI::CWindow::OnIMETabEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?RunPressExitKeyEvent@CWindow@UI@@QAEHXZ
_TEXT	SEGMENT
?RunPressExitKeyEvent@CWindow@UI@@QAEHXZ PROC		; UI::CWindow::RunPressExitKeyEvent, COMDAT
; _this$ = ecx

; 543  : 	{

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx
  00003	56		 push	 esi
  00004	57		 push	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00005	8b 43 64	 mov	 eax, DWORD PTR [ebx+100]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1494 :         : current(_STD move(_Right)) {}

  00008	3b 00		 cmp	 eax, DWORD PTR [eax]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 545  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  0000a	74 33		 je	 SHORT $LN3@RunPressEx
  0000c	0f 1f 40 00	 npad	 4
$LL34@RunPressEx:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 176  :         const auto _New_ptr = this->_Ptr->_Prev;

  00010	8d 78 04	 lea	 edi, DWORD PTR [eax+4]

; 177  : #if _ITERATOR_DEBUG_LEVEL == 2
; 178  :         const auto _Mycont = static_cast<const _Mylist*>(this->_Getcont());
; 179  :         _STL_ASSERT(_Mycont, "cannot decrement value-initialized list iterator");
; 180  :         _STL_VERIFY(_New_ptr != _Mycont->_Myhead, "cannot decrement begin list iterator");
; 181  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 182  : 
; 183  :         this->_Ptr = _New_ptr;

  00013	8b 07		 mov	 eax, DWORD PTR [edi]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 547  : 			CWindow * pWindow = *itor;

  00015	8b 70 08	 mov	 esi, DWORD PTR [eax+8]

; 548  : 
; 549  : 			if (pWindow->RunPressExitKeyEvent())

  00018	8b ce		 mov	 ecx, esi
  0001a	e8 00 00 00 00	 call	 ?RunPressExitKeyEvent@CWindow@UI@@QAEHXZ ; UI::CWindow::RunPressExitKeyEvent
  0001f	85 c0		 test	 eax, eax
  00021	75 22		 jne	 SHORT $LN65@RunPressEx

; 550  : 				return TRUE;
; 551  : 
; 552  : 			if (pWindow->IsShow())

  00023	38 46 55	 cmp	 BYTE PTR [esi+85], al
  00026	74 0e		 je	 SHORT $LN2@RunPressEx

; 553  : 			if (pWindow->OnPressExitKey())

  00028	8b 06		 mov	 eax, DWORD PTR [esi]
  0002a	8b ce		 mov	 ecx, esi
  0002c	ff 90 8c 00 00
	00		 call	 DWORD PTR [eax+140]
  00032	85 c0		 test	 eax, eax
  00034	75 0f		 jne	 SHORT $LN65@RunPressEx
$LN2@RunPressEx:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1090 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00036	8b 4b 64	 mov	 ecx, DWORD PTR [ebx+100]

; 183  :         this->_Ptr = _New_ptr;

  00039	8b 07		 mov	 eax, DWORD PTR [edi]

; 198  :         return this->_Ptr == _Right._Ptr;

  0003b	3b 01		 cmp	 eax, DWORD PTR [ecx]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 545  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  0003d	75 d1		 jne	 SHORT $LL34@RunPressEx
$LN3@RunPressEx:
  0003f	5f		 pop	 edi

; 554  : 				return TRUE;
; 555  : 		}
; 556  : 
; 557  : 		return FALSE;
; 558  : 	}

  00040	5e		 pop	 esi
  00041	33 c0		 xor	 eax, eax
  00043	5b		 pop	 ebx
  00044	c3		 ret	 0
$LN65@RunPressEx:
  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	b8 01 00 00 00	 mov	 eax, 1
  0004c	5b		 pop	 ebx
  0004d	c3		 ret	 0
?RunPressExitKeyEvent@CWindow@UI@@QAEHXZ ENDP		; UI::CWindow::RunPressExitKeyEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?RunPressEscapeKeyEvent@CWindow@UI@@QAEHXZ
_TEXT	SEGMENT
?RunPressEscapeKeyEvent@CWindow@UI@@QAEHXZ PROC		; UI::CWindow::RunPressEscapeKeyEvent, COMDAT
; _this$ = ecx

; 525  : 	{

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00004	8b 47 64	 mov	 eax, DWORD PTR [edi+100]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1494 :         : current(_STD move(_Right)) {}

  00007	3b 00		 cmp	 eax, DWORD PTR [eax]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 527  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  00009	74 25		 je	 SHORT $LN69@RunPressEs
  0000b	0f 1f 44 00 00	 npad	 5
$LL34@RunPressEs:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 176  :         const auto _New_ptr = this->_Ptr->_Prev;

  00010	8d 70 04	 lea	 esi, DWORD PTR [eax+4]

; 177  : #if _ITERATOR_DEBUG_LEVEL == 2
; 178  :         const auto _Mycont = static_cast<const _Mylist*>(this->_Getcont());
; 179  :         _STL_ASSERT(_Mycont, "cannot decrement value-initialized list iterator");
; 180  :         _STL_VERIFY(_New_ptr != _Mycont->_Myhead, "cannot decrement begin list iterator");
; 181  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 182  : 
; 183  :         this->_Ptr = _New_ptr;

  00013	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 529  : 			CWindow * pWindow = *itor;

  00015	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]

; 530  : 
; 531  : 			if (pWindow->IsShow())

  00018	80 79 55 00	 cmp	 BYTE PTR [ecx+85], 0
  0001c	74 09		 je	 SHORT $LN2@RunPressEs

; 532  : 			if (pWindow->RunPressEscapeKeyEvent())

  0001e	e8 00 00 00 00	 call	 ?RunPressEscapeKeyEvent@CWindow@UI@@QAEHXZ ; UI::CWindow::RunPressEscapeKeyEvent
  00023	85 c0		 test	 eax, eax
  00025	75 1c		 jne	 SHORT $LN68@RunPressEs
$LN2@RunPressEs:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1090 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00027	8b 4f 64	 mov	 ecx, DWORD PTR [edi+100]

; 183  :         this->_Ptr = _New_ptr;

  0002a	8b 06		 mov	 eax, DWORD PTR [esi]

; 198  :         return this->_Ptr == _Right._Ptr;

  0002c	3b 01		 cmp	 eax, DWORD PTR [ecx]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 527  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  0002e	75 e0		 jne	 SHORT $LL34@RunPressEs
$LN69@RunPressEs:

; 533  : 				return TRUE;
; 534  : 		}
; 535  : 
; 536  : 		if (OnPressEscapeKey())

  00030	8b 07		 mov	 eax, DWORD PTR [edi]
  00032	8b cf		 mov	 ecx, edi
  00034	ff 90 88 00 00
	00		 call	 DWORD PTR [eax+136]
  0003a	f7 d8		 neg	 eax
  0003c	5f		 pop	 edi
  0003d	1b c0		 sbb	 eax, eax
  0003f	f7 d8		 neg	 eax

; 538  : 
; 539  : 		return FALSE;
; 540  : 	}

  00041	5e		 pop	 esi
  00042	c3		 ret	 0
$LN68@RunPressEs:
  00043	5f		 pop	 edi

; 537  : 			return TRUE;

  00044	b8 01 00 00 00	 mov	 eax, 1

; 538  : 
; 539  : 		return FALSE;
; 540  : 	}

  00049	5e		 pop	 esi
  0004a	c3		 ret	 0
?RunPressEscapeKeyEvent@CWindow@UI@@QAEHXZ ENDP		; UI::CWindow::RunPressEscapeKeyEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?RunKeyUpEvent@CWindow@UI@@QAEHH@Z
_TEXT	SEGMENT
_ikey$ = 8						; size = 4
?RunKeyUpEvent@CWindow@UI@@QAEHH@Z PROC			; UI::CWindow::RunKeyUpEvent, COMDAT
; _this$ = ecx

; 507  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 508  : 		if (OnKeyUp(ikey))

  00004	8b 5d 08	 mov	 ebx, DWORD PTR _ikey$[ebp]
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx
  0000b	53		 push	 ebx
  0000c	8b 07		 mov	 eax, DWORD PTR [edi]
  0000e	ff 90 84 00 00
	00		 call	 DWORD PTR [eax+132]
  00014	85 c0		 test	 eax, eax
  00016	75 32		 jne	 SHORT $LN64@RunKeyUpEv
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00018	8b 47 64	 mov	 eax, DWORD PTR [edi+100]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1494 :         : current(_STD move(_Right)) {}

  0001b	3b 00		 cmp	 eax, DWORD PTR [eax]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 512  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  0001d	74 22		 je	 SHORT $LN3@RunKeyUpEv
  0001f	90		 npad	 1
$LL34@RunKeyUpEv:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 176  :         const auto _New_ptr = this->_Ptr->_Prev;

  00020	8d 70 04	 lea	 esi, DWORD PTR [eax+4]

; 177  : #if _ITERATOR_DEBUG_LEVEL == 2
; 178  :         const auto _Mycont = static_cast<const _Mylist*>(this->_Getcont());
; 179  :         _STL_ASSERT(_Mycont, "cannot decrement value-initialized list iterator");
; 180  :         _STL_VERIFY(_New_ptr != _Mycont->_Myhead, "cannot decrement begin list iterator");
; 181  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 182  : 
; 183  :         this->_Ptr = _New_ptr;

  00023	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 514  : 			CWindow * pWindow = *itor;

  00025	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]

; 515  : 
; 516  : 			if (pWindow->IsShow())

  00028	80 79 55 00	 cmp	 BYTE PTR [ecx+85], 0
  0002c	74 0a		 je	 SHORT $LN2@RunKeyUpEv

; 517  : 			if (pWindow->RunKeyUpEvent(ikey))

  0002e	53		 push	 ebx
  0002f	e8 00 00 00 00	 call	 ?RunKeyUpEvent@CWindow@UI@@QAEHH@Z ; UI::CWindow::RunKeyUpEvent
  00034	85 c0		 test	 eax, eax
  00036	75 12		 jne	 SHORT $LN64@RunKeyUpEv
$LN2@RunKeyUpEv:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1090 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00038	8b 4f 64	 mov	 ecx, DWORD PTR [edi+100]

; 183  :         this->_Ptr = _New_ptr;

  0003b	8b 06		 mov	 eax, DWORD PTR [esi]

; 198  :         return this->_Ptr == _Right._Ptr;

  0003d	3b 01		 cmp	 eax, DWORD PTR [ecx]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 512  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  0003f	75 df		 jne	 SHORT $LL34@RunKeyUpEv
$LN3@RunKeyUpEv:
  00041	5f		 pop	 edi

; 518  : 				return TRUE;
; 519  : 		}
; 520  : 
; 521  : 		return FALSE;
; 522  : 	}

  00042	5e		 pop	 esi
  00043	33 c0		 xor	 eax, eax
  00045	5b		 pop	 ebx
  00046	5d		 pop	 ebp
  00047	c2 04 00	 ret	 4
$LN64@RunKeyUpEv:
  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	b8 01 00 00 00	 mov	 eax, 1
  00051	5b		 pop	 ebx
  00052	5d		 pop	 ebp
  00053	c2 04 00	 ret	 4
?RunKeyUpEvent@CWindow@UI@@QAEHH@Z ENDP			; UI::CWindow::RunKeyUpEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?RunKeyDownEvent@CWindow@UI@@QAEPAV12@H@Z
_TEXT	SEGMENT
_ikey$ = 8						; size = 4
?RunKeyDownEvent@CWindow@UI@@QAEPAV12@H@Z PROC		; UI::CWindow::RunKeyDownEvent, COMDAT
; _this$ = ecx

; 484  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 485  : 		if (OnKeyDown(ikey))

  00004	8b 5d 08	 mov	 ebx, DWORD PTR _ikey$[ebp]
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	53		 push	 ebx
  0000b	8b 07		 mov	 eax, DWORD PTR [edi]
  0000d	ff 90 80 00 00
	00		 call	 DWORD PTR [eax+128]
  00013	85 c0		 test	 eax, eax
  00015	74 08		 je	 SHORT $LN5@RunKeyDown

; 486  : 			return this;

  00017	8b c7		 mov	 eax, edi
  00019	5f		 pop	 edi

; 504  : 	}

  0001a	5b		 pop	 ebx
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
$LN5@RunKeyDown:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0001f	8b 47 64	 mov	 eax, DWORD PTR [edi+100]
  00022	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1494 :         : current(_STD move(_Right)) {}

  00023	3b 00		 cmp	 eax, DWORD PTR [eax]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 489  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  00025	74 21		 je	 SHORT $LN68@RunKeyDown
$LL34@RunKeyDown:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 176  :         const auto _New_ptr = this->_Ptr->_Prev;

  00027	8d 70 04	 lea	 esi, DWORD PTR [eax+4]

; 177  : #if _ITERATOR_DEBUG_LEVEL == 2
; 178  :         const auto _Mycont = static_cast<const _Mylist*>(this->_Getcont());
; 179  :         _STL_ASSERT(_Mycont, "cannot decrement value-initialized list iterator");
; 180  :         _STL_VERIFY(_New_ptr != _Mycont->_Myhead, "cannot decrement begin list iterator");
; 181  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 182  : 
; 183  :         this->_Ptr = _New_ptr;

  0002a	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 491  : 			CWindow * pWindow = *itor;

  0002c	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]

; 492  : 
; 493  : 			if (pWindow->IsShow())

  0002f	80 79 55 00	 cmp	 BYTE PTR [ecx+85], 0
  00033	74 0a		 je	 SHORT $LN2@RunKeyDown

; 494  : 			{
; 495  : 				CWindow * pProcessedWindow = pWindow->RunKeyDownEvent(ikey);

  00035	53		 push	 ebx
  00036	e8 00 00 00 00	 call	 ?RunKeyDownEvent@CWindow@UI@@QAEPAV12@H@Z ; UI::CWindow::RunKeyDownEvent

; 496  : 				if (NULL != pProcessedWindow)

  0003b	85 c0		 test	 eax, eax
  0003d	75 0b		 jne	 SHORT $LN72@RunKeyDown
$LN2@RunKeyDown:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1090 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  0003f	8b 4f 64	 mov	 ecx, DWORD PTR [edi+100]

; 183  :         this->_Ptr = _New_ptr;

  00042	8b 06		 mov	 eax, DWORD PTR [esi]

; 198  :         return this->_Ptr == _Right._Ptr;

  00044	3b 01		 cmp	 eax, DWORD PTR [ecx]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 489  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  00046	75 df		 jne	 SHORT $LL34@RunKeyDown
$LN68@RunKeyDown:

; 497  : 				{
; 498  : 					return pProcessedWindow;
; 499  : 				}
; 500  : 			}
; 501  : 		}
; 502  : 
; 503  : 		return NULL;

  00048	33 c0		 xor	 eax, eax
$LN72@RunKeyDown:
  0004a	5e		 pop	 esi
  0004b	5f		 pop	 edi

; 504  : 	}

  0004c	5b		 pop	 ebx
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
?RunKeyDownEvent@CWindow@UI@@QAEPAV12@H@Z ENDP		; UI::CWindow::RunKeyDownEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?RunIMEKeyDownEvent@CWindow@UI@@QAEHH@Z
_TEXT	SEGMENT
_ikey$ = 8						; size = 4
?RunIMEKeyDownEvent@CWindow@UI@@QAEHH@Z PROC		; UI::CWindow::RunIMEKeyDownEvent, COMDAT
; _this$ = ecx

; 464  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f1		 mov	 esi, ecx

; 465  : 		if (!IsRendering())

  00008	e8 00 00 00 00	 call	 ?IsRendering@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsRendering
  0000d	84 c0		 test	 al, al
  0000f	74 31		 je	 SHORT $LN3@RunIMEKeyD

; 466  : 			return FALSE;
; 467  : 
; 468  : 		if (OnIMEKeyDownEvent(ikey))

  00011	8b 06		 mov	 eax, DWORD PTR [esi]
  00013	8b ce		 mov	 ecx, esi
  00015	8b 5d 08	 mov	 ebx, DWORD PTR _ikey$[ebp]
  00018	53		 push	 ebx
  00019	ff 50 40	 call	 DWORD PTR [eax+64]
  0001c	85 c0		 test	 eax, eax
  0001e	75 2b		 jne	 SHORT $LN64@RunIMEKeyD
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00020	8b 46 64	 mov	 eax, DWORD PTR [esi+100]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1494 :         : current(_STD move(_Right)) {}

  00023	3b 00		 cmp	 eax, DWORD PTR [eax]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 472  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  00025	74 1b		 je	 SHORT $LN3@RunIMEKeyD
$LL34@RunIMEKeyD:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 176  :         const auto _New_ptr = this->_Ptr->_Prev;

  00027	8d 78 04	 lea	 edi, DWORD PTR [eax+4]

; 177  : #if _ITERATOR_DEBUG_LEVEL == 2
; 178  :         const auto _Mycont = static_cast<const _Mylist*>(this->_Getcont());
; 179  :         _STL_ASSERT(_Mycont, "cannot decrement value-initialized list iterator");
; 180  :         _STL_VERIFY(_New_ptr != _Mycont->_Myhead, "cannot decrement begin list iterator");
; 181  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 182  : 
; 183  :         this->_Ptr = _New_ptr;

  0002a	8b 07		 mov	 eax, DWORD PTR [edi]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 476  : 			if (pWindow->RunIMEKeyDownEvent(ikey))

  0002c	53		 push	 ebx
  0002d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00030	e8 00 00 00 00	 call	 ?RunIMEKeyDownEvent@CWindow@UI@@QAEHH@Z ; UI::CWindow::RunIMEKeyDownEvent
  00035	85 c0		 test	 eax, eax
  00037	75 12		 jne	 SHORT $LN64@RunIMEKeyD
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1090 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00039	8b 4e 64	 mov	 ecx, DWORD PTR [esi+100]

; 183  :         this->_Ptr = _New_ptr;

  0003c	8b 07		 mov	 eax, DWORD PTR [edi]

; 198  :         return this->_Ptr == _Right._Ptr;

  0003e	3b 01		 cmp	 eax, DWORD PTR [ecx]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 472  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  00040	75 e5		 jne	 SHORT $LL34@RunIMEKeyD
$LN3@RunIMEKeyD:
  00042	5f		 pop	 edi

; 477  : 				return TRUE;
; 478  : 		}
; 479  : 
; 480  : 		return FALSE;
; 481  : 	}

  00043	5e		 pop	 esi
  00044	33 c0		 xor	 eax, eax
  00046	5b		 pop	 ebx
  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
$LN64@RunIMEKeyD:
  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	b8 01 00 00 00	 mov	 eax, 1
  00052	5b		 pop	 ebx
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
?RunIMEKeyDownEvent@CWindow@UI@@QAEHH@Z ENDP		; UI::CWindow::RunIMEKeyDownEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?RunIMEReturnEvent@CWindow@UI@@QAEHXZ
_TEXT	SEGMENT
?RunIMEReturnEvent@CWindow@UI@@QAEHXZ PROC		; UI::CWindow::RunIMEReturnEvent, COMDAT
; _this$ = ecx

; 444  : 	{

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 445  : 		if (!IsRendering())

  00004	e8 00 00 00 00	 call	 ?IsRendering@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsRendering
  00009	84 c0		 test	 al, al
  0000b	74 2d		 je	 SHORT $LN3@RunIMERetu

; 446  : 			return FALSE;
; 447  : 
; 448  : 		if (OnIMEReturnEvent())

  0000d	8b 07		 mov	 eax, DWORD PTR [edi]
  0000f	8b cf		 mov	 ecx, edi
  00011	ff 50 3c	 call	 DWORD PTR [eax+60]
  00014	85 c0		 test	 eax, eax
  00016	75 27		 jne	 SHORT $LN64@RunIMERetu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00018	8b 47 64	 mov	 eax, DWORD PTR [edi+100]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1494 :         : current(_STD move(_Right)) {}

  0001b	3b 00		 cmp	 eax, DWORD PTR [eax]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 452  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  0001d	74 1b		 je	 SHORT $LN3@RunIMERetu
  0001f	90		 npad	 1
$LL34@RunIMERetu:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 176  :         const auto _New_ptr = this->_Ptr->_Prev;

  00020	8d 70 04	 lea	 esi, DWORD PTR [eax+4]

; 177  : #if _ITERATOR_DEBUG_LEVEL == 2
; 178  :         const auto _Mycont = static_cast<const _Mylist*>(this->_Getcont());
; 179  :         _STL_ASSERT(_Mycont, "cannot decrement value-initialized list iterator");
; 180  :         _STL_VERIFY(_New_ptr != _Mycont->_Myhead, "cannot decrement begin list iterator");
; 181  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 182  : 
; 183  :         this->_Ptr = _New_ptr;

  00023	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 456  : 			if (pWindow->RunIMEReturnEvent())

  00025	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00028	e8 00 00 00 00	 call	 ?RunIMEReturnEvent@CWindow@UI@@QAEHXZ ; UI::CWindow::RunIMEReturnEvent
  0002d	85 c0		 test	 eax, eax
  0002f	75 0e		 jne	 SHORT $LN64@RunIMERetu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1090 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00031	8b 4f 64	 mov	 ecx, DWORD PTR [edi+100]

; 183  :         this->_Ptr = _New_ptr;

  00034	8b 06		 mov	 eax, DWORD PTR [esi]

; 198  :         return this->_Ptr == _Right._Ptr;

  00036	3b 01		 cmp	 eax, DWORD PTR [ecx]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 452  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  00038	75 e6		 jne	 SHORT $LL34@RunIMERetu
$LN3@RunIMERetu:
  0003a	5f		 pop	 edi

; 458  : 		}
; 459  : 
; 460  : 		return FALSE;

  0003b	33 c0		 xor	 eax, eax

; 461  : 	}

  0003d	5e		 pop	 esi
  0003e	c3		 ret	 0
$LN64@RunIMERetu:
  0003f	5f		 pop	 edi

; 457  : 				return TRUE;

  00040	b8 01 00 00 00	 mov	 eax, 1

; 461  : 	}

  00045	5e		 pop	 esi
  00046	c3		 ret	 0
?RunIMEReturnEvent@CWindow@UI@@QAEHXZ ENDP		; UI::CWindow::RunIMEReturnEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?RunIMETabEvent@CWindow@UI@@QAEHXZ
_TEXT	SEGMENT
?RunIMETabEvent@CWindow@UI@@QAEHXZ PROC			; UI::CWindow::RunIMETabEvent, COMDAT
; _this$ = ecx

; 424  : 	{

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 425  : 		if (!IsRendering())

  00004	e8 00 00 00 00	 call	 ?IsRendering@CWindow@UI@@QAE_NXZ ; UI::CWindow::IsRendering
  00009	84 c0		 test	 al, al
  0000b	74 2d		 je	 SHORT $LN3@RunIMETabE

; 426  : 			return FALSE;
; 427  : 
; 428  : 		if (OnIMETabEvent())

  0000d	8b 07		 mov	 eax, DWORD PTR [edi]
  0000f	8b cf		 mov	 ecx, edi
  00011	ff 50 38	 call	 DWORD PTR [eax+56]
  00014	85 c0		 test	 eax, eax
  00016	75 27		 jne	 SHORT $LN64@RunIMETabE
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00018	8b 47 64	 mov	 eax, DWORD PTR [edi+100]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1494 :         : current(_STD move(_Right)) {}

  0001b	3b 00		 cmp	 eax, DWORD PTR [eax]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 432  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  0001d	74 1b		 je	 SHORT $LN3@RunIMETabE
  0001f	90		 npad	 1
$LL34@RunIMETabE:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 176  :         const auto _New_ptr = this->_Ptr->_Prev;

  00020	8d 70 04	 lea	 esi, DWORD PTR [eax+4]

; 177  : #if _ITERATOR_DEBUG_LEVEL == 2
; 178  :         const auto _Mycont = static_cast<const _Mylist*>(this->_Getcont());
; 179  :         _STL_ASSERT(_Mycont, "cannot decrement value-initialized list iterator");
; 180  :         _STL_VERIFY(_New_ptr != _Mycont->_Myhead, "cannot decrement begin list iterator");
; 181  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 182  : 
; 183  :         this->_Ptr = _New_ptr;

  00023	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 436  : 			if (pWindow->RunIMETabEvent())

  00025	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00028	e8 00 00 00 00	 call	 ?RunIMETabEvent@CWindow@UI@@QAEHXZ ; UI::CWindow::RunIMETabEvent
  0002d	85 c0		 test	 eax, eax
  0002f	75 0e		 jne	 SHORT $LN64@RunIMETabE
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1090 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00031	8b 4f 64	 mov	 ecx, DWORD PTR [edi+100]

; 183  :         this->_Ptr = _New_ptr;

  00034	8b 06		 mov	 eax, DWORD PTR [esi]

; 198  :         return this->_Ptr == _Right._Ptr;

  00036	3b 01		 cmp	 eax, DWORD PTR [ecx]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 432  : 		for (itor = m_pChildList.rbegin(); itor != m_pChildList.rend(); ++itor)

  00038	75 e6		 jne	 SHORT $LL34@RunIMETabE
$LN3@RunIMETabE:
  0003a	5f		 pop	 edi

; 438  : 		}
; 439  : 
; 440  : 		return FALSE;

  0003b	33 c0		 xor	 eax, eax

; 441  : 	}

  0003d	5e		 pop	 esi
  0003e	c3		 ret	 0
$LN64@RunIMETabE:
  0003f	5f		 pop	 edi

; 437  : 				return TRUE;

  00040	b8 01 00 00 00	 mov	 eax, 1

; 441  : 	}

  00045	5e		 pop	 esi
  00046	c3		 ret	 0
?RunIMETabEvent@CWindow@UI@@QAEHXZ ENDP			; UI::CWindow::RunIMETabEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMoveWindow@CWindow@UI@@UAEXJJ@Z
_TEXT	SEGMENT
_lx$ = 8						; size = 4
_ly$ = 12						; size = 4
?OnMoveWindow@CWindow@UI@@UAEXJJ@Z PROC			; UI::CWindow::OnMoveWindow, COMDAT
; _this$ = ecx

; 379  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 380  : 		PyCallClassMemberFunc(m_poHandler, "OnMoveWindow", Py_BuildValue("(ii)", lx, ly));

  00004	ff 75 0c	 push	 DWORD PTR _ly$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 75 08	 push	 DWORD PTR _lx$[ebp]
  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_04INACLLOK@?$CIii?$CJ@
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0N@PFKNBOJP@OnMoveWindow@
  0001d	ff 76 5c	 push	 DWORD PTR [esi+92]
  00020	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00025	83 c4 18	 add	 esp, 24			; 00000018H
  00028	5e		 pop	 esi

; 381  : 	}

  00029	5d		 pop	 ebp
  0002a	c2 08 00	 ret	 8
?OnMoveWindow@CWindow@UI@@UAEXJJ@Z ENDP			; UI::CWindow::OnMoveWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnIMEUpdate@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnIMEUpdate@CWindow@UI@@UAEXXZ PROC			; UI::CWindow::OnIMEUpdate, COMDAT
; _this$ = ecx

; 419  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 420  : 		PyCallClassMemberFunc(m_poHandler, "OnIMEUpdate", BuildEmptyTuple());

  00003	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0M@DGOFHNMI@OnIMEUpdate@
  0000e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00011	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
  00019	5e		 pop	 esi

; 421  : 	}

  0001a	c3		 ret	 0
?OnIMEUpdate@CWindow@UI@@UAEXXZ ENDP			; UI::CWindow::OnIMEUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnTop@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnTop@CWindow@UI@@UAEXXZ PROC				; UI::CWindow::OnTop, COMDAT
; _this$ = ecx

; 414  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 415  : 		PyCallClassMemberFunc(m_poHandler, "OnTop", BuildEmptyTuple());

  00003	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_05LOOKECNH@OnTop@
  0000e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00011	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
  00019	5e		 pop	 esi

; 416  : 	}

  0001a	c3		 ret	 0
?OnTop@CWindow@UI@@UAEXXZ ENDP				; UI::CWindow::OnTop
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnDrop@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnDrop@CWindow@UI@@UAEXXZ PROC				; UI::CWindow::OnDrop, COMDAT
; _this$ = ecx

; 409  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 410  : 		PyCallClassMemberFunc(m_poHandler, "OnDrop", BuildEmptyTuple());

  00003	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_06OCNPCIEO@OnDrop@
  0000e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00011	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
  00019	5e		 pop	 esi

; 411  : 	}

  0001a	c3		 ret	 0
?OnDrop@CWindow@UI@@UAEXXZ ENDP				; UI::CWindow::OnDrop
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOver@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnMouseOver@CWindow@UI@@UAEXXZ PROC			; UI::CWindow::OnMouseOver, COMDAT
; _this$ = ecx

; 406  : 	}

  00000	c2 00 00	 ret	 0
?OnMouseOver@CWindow@UI@@UAEXXZ ENDP			; UI::CWindow::OnMouseOver
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverOut@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnMouseOverOut@CWindow@UI@@UAEXXZ PROC			; UI::CWindow::OnMouseOverOut, COMDAT
; _this$ = ecx

; 400  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 401  : 		PyCallClassMemberFunc(m_poHandler, "OnMouseOverOut", BuildEmptyTuple());

  00003	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KLLBNOAI@OnMouseOverOut@
  0000e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00011	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
  00019	5e		 pop	 esi

; 402  : 	}

  0001a	c3		 ret	 0
?OnMouseOverOut@CWindow@UI@@UAEXXZ ENDP			; UI::CWindow::OnMouseOverOut
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseOverIn@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnMouseOverIn@CWindow@UI@@UAEXXZ PROC			; UI::CWindow::OnMouseOverIn, COMDAT
; _this$ = ecx

; 395  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 396  : 		PyCallClassMemberFunc(m_poHandler, "OnMouseOverIn", BuildEmptyTuple());

  00003	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0O@JKDAFDCC@OnMouseOverIn@
  0000e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00011	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
  00019	5e		 pop	 esi

; 397  : 	}

  0001a	c3		 ret	 0
?OnMouseOverIn@CWindow@UI@@UAEXXZ ENDP			; UI::CWindow::OnMouseOverIn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnMouseDrag@CWindow@UI@@UAEXJJ@Z
_TEXT	SEGMENT
_lx$ = 8						; size = 4
_ly$ = 12						; size = 4
?OnMouseDrag@CWindow@UI@@UAEXJJ@Z PROC			; UI::CWindow::OnMouseDrag, COMDAT
; _this$ = ecx

; 374  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 375  : 		PyCallClassMemberFunc(m_poHandler, "OnMouseDrag", Py_BuildValue("(ii)", lx, ly));

  00004	ff 75 0c	 push	 DWORD PTR _ly$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 75 08	 push	 DWORD PTR _lx$[ebp]
  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_04INACLLOK@?$CIii?$CJ@
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0M@ECAEGPAI@OnMouseDrag@
  0001d	ff 76 5c	 push	 DWORD PTR [esi+92]
  00020	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00025	83 c4 18	 add	 esp, 24			; 00000018H
  00028	5e		 pop	 esi

; 376  : 	}

  00029	5d		 pop	 ebp
  0002a	c2 08 00	 ret	 8
?OnMouseDrag@CWindow@UI@@UAEXJJ@Z ENDP			; UI::CWindow::OnMouseDrag
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnKillFocus@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnKillFocus@CWindow@UI@@UAEXXZ PROC			; UI::CWindow::OnKillFocus, COMDAT
; _this$ = ecx

; 390  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 391  : 		PyCallClassMemberFunc(m_poHandler, "OnKillFocus", BuildEmptyTuple());

  00003	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0M@CEGPCFGM@OnKillFocus@
  0000e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00011	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
  00019	5e		 pop	 esi

; 392  : 	}

  0001a	c3		 ret	 0
?OnKillFocus@CWindow@UI@@UAEXXZ ENDP			; UI::CWindow::OnKillFocus
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnSetFocus@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnSetFocus@CWindow@UI@@UAEXXZ PROC			; UI::CWindow::OnSetFocus, COMDAT
; _this$ = ecx

; 384  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 385  : 		//PyCallClassMemberFunc(m_poHandler, "OnSetFocus", BuildEmptyTuple());
; 386  : 		PyCallClassMemberFunc(m_poHandler, "OnSetFocus", BuildEmptyTuple());

  00003	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0L@GIMNGBCD@OnSetFocus@
  0000e	ff 76 5c	 push	 DWORD PTR [esi+92]
  00011	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
  00019	5e		 pop	 esi

; 387  : 	}

  0001a	c3		 ret	 0
?OnSetFocus@CWindow@UI@@UAEXXZ ENDP			; UI::CWindow::OnSetFocus
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.h
;	COMDAT ?OnChangePosition@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnChangePosition@CWindow@UI@@UAEXXZ PROC		; UI::CWindow::OnChangePosition, COMDAT
; _this$ = ecx

; 105  : 			virtual void	OnChangePosition(){}

  00000	c2 00 00	 ret	 0
?OnChangePosition@CWindow@UI@@UAEXXZ ENDP		; UI::CWindow::OnChangePosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnUpdate@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnUpdate@CWindow@UI@@UAEXXZ PROC			; UI::CWindow::OnUpdate, COMDAT
; _this$ = ecx

; 153  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 154  : 		if (!m_poHandler)

  00003	83 7e 5c 00	 cmp	 DWORD PTR [esi+92], 0
  00007	74 39		 je	 SHORT $LN1@OnUpdate

; 155  : 			return;
; 156  : 
; 157  : 		if (!IsShow())

  00009	80 7e 55 00	 cmp	 BYTE PTR [esi+85], 0
  0000d	74 33		 je	 SHORT $LN1@OnUpdate

; 158  : 			return;
; 159  : 
; 160  : 		static PyObject* poFuncName_OnUpdate = PyString_InternFromString("OnUpdate");

  0000f	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00015	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0001b	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??OnUpdate@CWindow@UI@@UAEXXZ@4HA
  00023	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  00029	7f 19		 jg	 SHORT $LN11@OnUpdate
$LN2@OnUpdate:

; 161  : 
; 162  : 		//PyCallClassMemberFunc(m_poHandler, "OnUpdate", BuildEmptyTuple());
; 163  : 		PyCallClassMemberFunc_ByPyString(m_poHandler, poFuncName_OnUpdate, BuildEmptyTuple());

  0002b	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00030	50		 push	 eax
  00031	ff 35 00 00 00
	00		 push	 DWORD PTR ?poFuncName_OnUpdate@?1??OnUpdate@CWindow@UI@@UAEXXZ@4PAU_object@@A
  00037	ff 76 5c	 push	 DWORD PTR [esi+92]
  0003a	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc_ByPyString@@YA_NPAU_object@@00@Z ; PyCallClassMemberFunc_ByPyString
  0003f	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnUpdate:

; 164  : 
; 165  : 	}

  00042	5e		 pop	 esi
  00043	c3		 ret	 0
$LN11@OnUpdate:

; 158  : 			return;
; 159  : 
; 160  : 		static PyObject* poFuncName_OnUpdate = PyString_InternFromString("OnUpdate");

  00044	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??OnUpdate@CWindow@UI@@UAEXXZ@4HA
  00049	e8 00 00 00 00	 call	 __Init_thread_header
  0004e	83 c4 04	 add	 esp, 4
  00051	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??OnUpdate@CWindow@UI@@UAEXXZ@4HA, -1
  00058	75 d1		 jne	 SHORT $LN2@OnUpdate
  0005a	68 00 00 00 00	 push	 OFFSET ??_C@_08DCJEAFK@OnUpdate@
  0005f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PyString_InternFromString
  00065	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??OnUpdate@CWindow@UI@@UAEXXZ@4HA
  0006a	a3 00 00 00 00	 mov	 DWORD PTR ?poFuncName_OnUpdate@?1??OnUpdate@CWindow@UI@@UAEXXZ@4PAU_object@@A, eax
  0006f	e8 00 00 00 00	 call	 __Init_thread_footer
  00074	83 c4 08	 add	 esp, 8
  00077	eb b2		 jmp	 SHORT $LN2@OnUpdate
?OnUpdate@CWindow@UI@@UAEXXZ ENDP			; UI::CWindow::OnUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?OnRender@CWindow@UI@@UAEXXZ
_TEXT	SEGMENT
?OnRender@CWindow@UI@@UAEXXZ PROC			; UI::CWindow::OnRender, COMDAT
; _this$ = ecx

; 168  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 169  : 		if (!m_poHandler)

  00003	83 7e 5c 00	 cmp	 DWORD PTR [esi+92], 0
  00007	74 1c		 je	 SHORT $LN1@OnRender

; 170  : 			return;
; 171  : 
; 172  : 		if (!IsShow())

  00009	80 7e 55 00	 cmp	 BYTE PTR [esi+85], 0
  0000d	74 16		 je	 SHORT $LN1@OnRender

; 173  : 			return;
; 174  : 
; 175  : 		//PyCallClassMemberFunc(m_poHandler, "OnRender", BuildEmptyTuple());
; 176  : 		PyCallClassMemberFunc(m_poHandler, "OnRender", BuildEmptyTuple());

  0000f	e8 00 00 00 00	 call	 ?BuildEmptyTuple@UI@@YAPAU_object@@XZ ; UI::BuildEmptyTuple
  00014	50		 push	 eax
  00015	68 00 00 00 00	 push	 OFFSET ??_C@_08PAJMEILO@OnRender@
  0001a	ff 76 5c	 push	 DWORD PTR [esi+92]
  0001d	e8 00 00 00 00	 call	 ?PyCallClassMemberFunc@@YA_NPAU_object@@PBD0@Z ; PyCallClassMemberFunc
  00022	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@OnRender:

; 177  : 	}

  00025	5e		 pop	 esi
  00026	c3		 ret	 0
?OnRender@CWindow@UI@@UAEXXZ ENDP			; UI::CWindow::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?__RemoveReserveChildren@CWindow@UI@@QAEXXZ
_TEXT	SEGMENT
__Op$1 = -16						; size = 12
_this$1$ = -4						; size = 4
?__RemoveReserveChildren@CWindow@UI@@QAEXXZ PROC	; UI::CWindow::__RemoveReserveChildren, COMDAT
; _this$ = ecx

; 107  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx
  00007	8b d9		 mov	 ebx, ecx
  00009	89 5d fc	 mov	 DWORD PTR _this$1$[ebp], ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1198 :         return _Mypair._Myval2._Mysize == 0;

  0000c	83 7b 74 00	 cmp	 DWORD PTR [ebx+116], 0
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 108  : 		if (m_pReserveChildList.empty())

  00010	0f 84 b7 00 00
	00		 je	 $LN87@RemoveRese
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1090 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00016	8b 43 70	 mov	 eax, DWORD PTR [ebx+112]
  00019	56		 push	 esi

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0001a	8b 30		 mov	 esi, DWORD PTR [eax]
  0001c	3b f0		 cmp	 esi, eax
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 112  : 		for(it = m_pReserveChildList.begin(); it != m_pReserveChildList.end(); ++it)

  0001e	74 78		 je	 SHORT $LN3@RemoveRese
  00020	57		 push	 edi
  00021	8d 7b 64	 lea	 edi, DWORD PTR [ebx+100]
$LL26@RemoveRese:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1671 :         const auto _Last         = _My_data._Myhead;

  00024	8b 1f		 mov	 ebx, DWORD PTR [edi]

; 1597 :         explicit _List_node_remove_op(list& _List_) noexcept : _List(_List_), _Head(), _Tail(_STD addressof(_Head)) {}

  00026	8d 45 f4	 lea	 eax, DWORD PTR __Op$1[ebp+4]
  00029	33 c9		 xor	 ecx, ecx
  0002b	89 45 f8	 mov	 DWORD PTR __Op$1[ebp+8], eax
  0002e	8b d7		 mov	 edx, edi
  00030	89 4d f4	 mov	 DWORD PTR __Op$1[ebp+4], ecx
  00033	89 55 f0	 mov	 DWORD PTR __Op$1[ebp], edx

; 1673 :         for (auto _First = _Last->_Next; _First != _Last;) {

  00036	8b 03		 mov	 eax, DWORD PTR [ebx]
  00038	3b c3		 cmp	 eax, ebx
  0003a	74 35		 je	 SHORT $LN49@RemoveRese
  0003c	0f 1f 40 00	 npad	 4
$LL48@RemoveRese:

; 1664 :         return remove_if([&](const _Ty& _Other) { return _Other == _Val; });

  00040	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]

; 1674 :             auto _Next = _First->_Next;

  00043	8b 38		 mov	 edi, DWORD PTR [eax]

; 1664 :         return remove_if([&](const _Ty& _Other) { return _Other == _Val; });

  00045	3b 4e 08	 cmp	 ecx, DWORD PTR [esi+8]

; 1675 :             if (_Pred(_First->_Myval)) {

  00048	75 1e		 jne	 SHORT $LN58@RemoveRese

; 1608 :             --_List._Mypair._Myval2._Mysize;

  0004a	ff 4a 04	 dec	 DWORD PTR [edx+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0004d	8b 10		 mov	 edx, DWORD PTR [eax]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

  0004f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1610 :             const auto _Prev = _Removed->_Prev;

  00055	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 1611 :             _Prev->_Next     = _Next;

  00058	89 11		 mov	 DWORD PTR [ecx], edx

; 1612 :             _Next->_Prev     = _Prev;

  0005a	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 1613 : 
; 1614 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1615 :             // mark removed node for IDL to snip out later
; 1616 :             _Removed->_Prev = nullptr;
; 1617 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1618 : 
; 1619 :             *_Tail = _Removed;

  0005d	8b 4d f8	 mov	 ecx, DWORD PTR __Op$1[ebp+8]
  00060	89 01		 mov	 DWORD PTR [ecx], eax

; 1620 :             _Tail  = _STD addressof(_Removed->_Next);

  00062	8b 55 f0	 mov	 edx, DWORD PTR __Op$1[ebp]
  00065	89 45 f8	 mov	 DWORD PTR __Op$1[ebp+8], eax
$LN58@RemoveRese:

; 1679 :             _First = _Next;

  00068	8b c7		 mov	 eax, edi
  0006a	3b fb		 cmp	 edi, ebx
  0006c	75 d2		 jne	 SHORT $LL48@RemoveRese
  0006e	8b 4d f4	 mov	 ecx, DWORD PTR __Op$1[ebp+4]
$LN49@RemoveRese:

; 1646 :             auto _Target = _Head;

  00071	85 c9		 test	 ecx, ecx

; 1647 :             while (_Target) {

  00073	74 13		 je	 SHORT $LN2@RemoveRese
$LL62@RemoveRese:

; 1648 :                 auto _Next = _Target->_Next;

  00075	8b 39		 mov	 edi, DWORD PTR [ecx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00077	6a 0c		 push	 12			; 0000000cH
  00079	51		 push	 ecx
  0007a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0007f	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1654 :                 _Target = _Next;

  00082	8b cf		 mov	 ecx, edi
  00084	85 ff		 test	 edi, edi
  00086	75 ed		 jne	 SHORT $LL62@RemoveRese
$LN2@RemoveRese:

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00088	8b 5d fc	 mov	 ebx, DWORD PTR _this$1$[ebp]

; 165  :         this->_Ptr = this->_Ptr->_Next;

  0008b	8b 36		 mov	 esi, DWORD PTR [esi]

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0008d	8b 43 70	 mov	 eax, DWORD PTR [ebx+112]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 112  : 		for(it = m_pReserveChildList.begin(); it != m_pReserveChildList.end(); ++it)

  00090	8d 7b 64	 lea	 edi, DWORD PTR [ebx+100]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 198  :         return this->_Ptr == _Right._Ptr;

  00093	3b f0		 cmp	 esi, eax
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 112  : 		for(it = m_pReserveChildList.begin(); it != m_pReserveChildList.end(); ++it)

  00095	75 8d		 jne	 SHORT $LL26@RemoveRese
  00097	5f		 pop	 edi
$LN3@RemoveRese:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 325  :         _Head->_Prev->_Next = nullptr;

  00098	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0009b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 326  : 
; 327  :         auto _Pnode = _Head->_Next;

  000a1	8b 00		 mov	 eax, DWORD PTR [eax]

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  000a3	85 c0		 test	 eax, eax
  000a5	74 13		 je	 SHORT $LN90@RemoveRese
$LL91@RemoveRese:

; 329  :             _Pnext = _Pnode->_Next;

  000a7	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  000a9	6a 0c		 push	 12			; 0000000cH
  000ab	50		 push	 eax
  000ac	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000b1	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  000b4	8b c6		 mov	 eax, esi
  000b6	85 f6		 test	 esi, esi
  000b8	75 ed		 jne	 SHORT $LL91@RemoveRese
$LN90@RemoveRese:

; 1491 :         _My_data._Myhead->_Next = _My_data._Myhead;

  000ba	8b 43 70	 mov	 eax, DWORD PTR [ebx+112]

; 1492 :         _My_data._Myhead->_Prev = _My_data._Myhead;
; 1493 :         _My_data._Mysize        = 0;

  000bd	5e		 pop	 esi
  000be	89 00		 mov	 DWORD PTR [eax], eax
  000c0	8b 43 70	 mov	 eax, DWORD PTR [ebx+112]
  000c3	89 40 04	 mov	 DWORD PTR [eax+4], eax
  000c6	c7 43 74 00 00
	00 00		 mov	 DWORD PTR [ebx+116], 0
$LN87@RemoveRese:
  000cd	5b		 pop	 ebx
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 117  : 	}

  000ce	8b e5		 mov	 esp, ebp
  000d0	5d		 pop	 ebp
  000d1	c3		 ret	 0
?__RemoveReserveChildren@CWindow@UI@@QAEXXZ ENDP	; UI::CWindow::__RemoveReserveChildren
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.h
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?PickTopWindow@CWindow@UI@@QAEPAV12@JJ@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?PickTopWindow@CWindow@UI@@QAEPAV12@JJ@Z PROC		; UI::CWindow::PickTopWindow, COMDAT
; _this$ = ecx

; 825  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00005	8b 71 64	 mov	 esi, DWORD PTR [ecx+100]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 825  : 	{

  00008	57		 push	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00009	8b 3e		 mov	 edi, DWORD PTR [esi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1494 :         : current(_STD move(_Right)) {}

  0000b	3b f7		 cmp	 esi, edi
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 827  : 		for (; ritor != m_pChildList.rend(); ++ritor)

  0000d	74 2e		 je	 SHORT $LN62@PickTopWin
  0000f	90		 npad	 1
$LL26@PickTopWin:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 183  :         this->_Ptr = _New_ptr;

  00010	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00013	8b f0		 mov	 esi, eax
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 829  : 			CWindow * pWin = *ritor;

  00015	8b 58 08	 mov	 ebx, DWORD PTR [eax+8]

; 830  : 			if (pWin->IsShow())

  00018	80 7b 55 00	 cmp	 BYTE PTR [ebx+85], 0
  0001c	74 1b		 je	 SHORT $LN2@PickTopWin

; 831  : 				if (pWin->IsIn(x, y))

  0001e	ff 75 0c	 push	 DWORD PTR _y$[ebp]
  00021	8b cb		 mov	 ecx, ebx
  00023	ff 75 08	 push	 DWORD PTR _x$[ebp]
  00026	e8 00 00 00 00	 call	 ?IsIn@CWindow@UI@@QAE_NJJ@Z ; UI::CWindow::IsIn
  0002b	84 c0		 test	 al, al
  0002d	74 0a		 je	 SHORT $LN2@PickTopWin
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.h

; 100  : 			bool			IsFlag(DWORD flag)		{ return (m_dwFlag & flag) ? true : false;	}

  0002f	8b 43 58	 mov	 eax, DWORD PTR [ebx+88]
  00032	c1 e8 09	 shr	 eax, 9
  00035	a8 01		 test	 al, 1
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 832  : 					if (!pWin->IsFlag(CWindow::FLAG_NOT_PICK))

  00037	74 0d		 je	 SHORT $LN58@PickTopWin
$LN2@PickTopWin:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 198  :         return this->_Ptr == _Right._Ptr;

  00039	3b f7		 cmp	 esi, edi
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 827  : 		for (; ritor != m_pChildList.rend(); ++ritor)

  0003b	75 d3		 jne	 SHORT $LL26@PickTopWin
$LN62@PickTopWin:
  0003d	5f		 pop	 edi

; 833  : 						return pWin;
; 834  : 		}
; 835  : 
; 836  : 		return NULL;
; 837  : 	}

  0003e	5e		 pop	 esi
  0003f	33 c0		 xor	 eax, eax
  00041	5b		 pop	 ebx
  00042	5d		 pop	 ebp
  00043	c2 08 00	 ret	 8
$LN58@PickTopWin:
  00046	5f		 pop	 edi
  00047	5e		 pop	 esi
  00048	8b c3		 mov	 eax, ebx
  0004a	5b		 pop	 ebx
  0004b	5d		 pop	 ebp
  0004c	c2 08 00	 ret	 8
?PickTopWindow@CWindow@UI@@QAEPAV12@JJ@Z ENDP		; UI::CWindow::PickTopWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.h
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.h
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?PickWindow@CWindow@UI@@QAEPAV12@JJ@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?PickWindow@CWindow@UI@@QAEPAV12@JJ@Z PROC		; UI::CWindow::PickWindow, COMDAT
; _this$ = ecx

; 796  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00008	8b 47 64	 mov	 eax, DWORD PTR [edi+100]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1494 :         : current(_STD move(_Right)) {}

  0000b	3b 00		 cmp	 eax, DWORD PTR [eax]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 798  : 		for (; ritor != m_pChildList.rend(); ++ritor)

  0000d	74 50		 je	 SHORT $LN67@PickWindow
  0000f	8b 55 08	 mov	 edx, DWORD PTR _x$[ebp]
$LN78@PickWindow:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 176  :         const auto _New_ptr = this->_Ptr->_Prev;

  00012	8b 4d 0c	 mov	 ecx, DWORD PTR _y$[ebp]
  00015	8d 58 04	 lea	 ebx, DWORD PTR [eax+4]

; 177  : #if _ITERATOR_DEBUG_LEVEL == 2
; 178  :         const auto _Mycont = static_cast<const _Mylist*>(this->_Getcont());
; 179  :         _STL_ASSERT(_Mycont, "cannot decrement value-initialized list iterator");
; 180  :         _STL_VERIFY(_New_ptr != _Mycont->_Myhead, "cannot decrement begin list iterator");
; 181  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 182  : 
; 183  :         this->_Ptr = _New_ptr;

  00018	8b 03		 mov	 eax, DWORD PTR [ebx]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 800  : 			CWindow * pWin = *ritor;

  0001a	8b 70 08	 mov	 esi, DWORD PTR [eax+8]

; 801  : 			if (pWin->IsShow())

  0001d	80 7e 55 00	 cmp	 BYTE PTR [esi+85], 0
  00021	74 33		 je	 SHORT $LN2@PickWindow
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.h

; 100  : 			bool			IsFlag(DWORD flag)		{ return (m_dwFlag & flag) ? true : false;	}

  00023	8b 46 58	 mov	 eax, DWORD PTR [esi+88]
  00026	c1 e8 0a	 shr	 eax, 10			; 0000000aH
  00029	a8 01		 test	 al, 1
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 803  : 				if (!pWin->IsFlag(CWindow::FLAG_IGNORE_SIZE))

  0002b	75 19		 jne	 SHORT $LN8@PickWindow

; 804  : 				{
; 805  : 					if (!pWin->IsIn(x, y)) {

  0002d	51		 push	 ecx
  0002e	52		 push	 edx
  0002f	8b ce		 mov	 ecx, esi
  00031	e8 00 00 00 00	 call	 ?IsIn@CWindow@UI@@QAE_NJJ@Z ; UI::CWindow::IsIn
  00036	8b 55 08	 mov	 edx, DWORD PTR _x$[ebp]
  00039	84 c0		 test	 al, al
  0003b	75 06		 jne	 SHORT $LN77@PickWindow

; 806  : 						if (0L <= pWin->GetWidth()) {

  0003d	83 7e 2c 00	 cmp	 DWORD PTR [esi+44], 0
  00041	7d 13		 jge	 SHORT $LN2@PickWindow
$LN77@PickWindow:

; 807  : 							continue;
; 808  : 						}
; 809  : 					}
; 810  : 				}
; 811  : 
; 812  : 				CWindow * pResult = pWin->PickWindow(x, y);

  00043	8b 4d 0c	 mov	 ecx, DWORD PTR _y$[ebp]
$LN8@PickWindow:
  00046	51		 push	 ecx
  00047	52		 push	 edx
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?PickWindow@CWindow@UI@@QAEPAV12@JJ@Z ; UI::CWindow::PickWindow

; 813  : 				if (pResult)

  0004f	85 c0		 test	 eax, eax
  00051	75 1e		 jne	 SHORT $LN1@PickWindow

; 806  : 						if (0L <= pWin->GetWidth()) {

  00053	8b 55 08	 mov	 edx, DWORD PTR _x$[ebp]
$LN2@PickWindow:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1090 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00056	8b 4f 64	 mov	 ecx, DWORD PTR [edi+100]

; 183  :         this->_Ptr = _New_ptr;

  00059	8b 03		 mov	 eax, DWORD PTR [ebx]

; 198  :         return this->_Ptr == _Right._Ptr;

  0005b	3b 01		 cmp	 eax, DWORD PTR [ecx]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 798  : 		for (; ritor != m_pChildList.rend(); ++ritor)

  0005d	75 b3		 jne	 SHORT $LN78@PickWindow
$LN67@PickWindow:
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.h

; 100  : 			bool			IsFlag(DWORD flag)		{ return (m_dwFlag & flag) ? true : false;	}

  0005f	8b 47 58	 mov	 eax, DWORD PTR [edi+88]
  00062	c1 e8 09	 shr	 eax, 9
  00065	a8 01		 test	 al, 1
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 818  : 		if (IsFlag(CWindow::FLAG_NOT_PICK))

  00067	b8 00 00 00 00	 mov	 eax, 0
  0006c	0f 45 f8	 cmovne	 edi, eax
  0006f	8b c7		 mov	 eax, edi
$LN1@PickWindow:

; 819  : 			return NULL;
; 820  : 
; 821  : 		return (this);
; 822  : 	}

  00071	5f		 pop	 edi
  00072	5e		 pop	 esi
  00073	5b		 pop	 ebx
  00074	5d		 pop	 ebp
  00075	c2 08 00	 ret	 8
?PickWindow@CWindow@UI@@QAEPAV12@JJ@Z ENDP		; UI::CWindow::PickWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?IsIn@CWindow@UI@@QAE_NXZ
_TEXT	SEGMENT
_lx$ = -8						; size = 4
_ly$ = -4						; size = 4
?IsIn@CWindow@UI@@QAE_NXZ PROC				; UI::CWindow::IsIn, COMDAT
; _this$ = ecx

; 788  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi

; 789  : 		long lx, ly;
; 790  : 		UI::CWindowManager::Instance().GetMousePosition(lx, ly);

  00007	8d 45 fc	 lea	 eax, DWORD PTR _ly$[ebp]
  0000a	8b f1		 mov	 esi, ecx
  0000c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00012	50		 push	 eax
  00013	8d 45 f8	 lea	 eax, DWORD PTR _lx$[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ?GetMousePosition@CWindowManager@UI@@QAEXAAJ0@Z ; UI::CWindowManager::GetMousePosition

; 791  : 
; 792  : 		return IsIn(lx, ly);

  0001c	ff 75 fc	 push	 DWORD PTR _ly$[ebp]
  0001f	8b ce		 mov	 ecx, esi
  00021	ff 75 f8	 push	 DWORD PTR _lx$[ebp]
  00024	e8 00 00 00 00	 call	 ?IsIn@CWindow@UI@@QAE_NJJ@Z ; UI::CWindow::IsIn
  00029	5e		 pop	 esi

; 793  : 	}

  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
?IsIn@CWindow@UI@@QAE_NXZ ENDP				; UI::CWindow::IsIn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?IsIn@CWindow@UI@@QAE_NJJ@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?IsIn@CWindow@UI@@QAE_NJJ@Z PROC			; UI::CWindow::IsIn, COMDAT
; _this$ = ecx

; 779  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 780  : 		if (x >= m_rect.left && x <= m_rect.right)

  00003	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  00006	3b 41 34	 cmp	 eax, DWORD PTR [ecx+52]
  00009	7c 17		 jl	 SHORT $LN3@IsIn
  0000b	3b 41 3c	 cmp	 eax, DWORD PTR [ecx+60]
  0000e	7f 12		 jg	 SHORT $LN3@IsIn

; 781  : 			if (y >= m_rect.top && y <= m_rect.bottom)

  00010	8b 45 0c	 mov	 eax, DWORD PTR _y$[ebp]
  00013	3b 41 38	 cmp	 eax, DWORD PTR [ecx+56]
  00016	7c 0a		 jl	 SHORT $LN3@IsIn
  00018	3b 41 40	 cmp	 eax, DWORD PTR [ecx+64]
  0001b	0f 9e c0	 setle	 al

; 785  : 	}

  0001e	5d		 pop	 ebp
  0001f	c2 08 00	 ret	 8
$LN3@IsIn:

; 782  : 				return true;
; 783  : 
; 784  : 		return false;

  00022	32 c0		 xor	 al, al

; 785  : 	}

  00024	5d		 pop	 ebp
  00025	c2 08 00	 ret	 8
?IsIn@CWindow@UI@@QAE_NJJ@Z ENDP			; UI::CWindow::IsIn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.h
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.h
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetTop@CWindow@UI@@QAEXPAV12@@Z
_TEXT	SEGMENT
_pWin$ = 8						; size = 4
?SetTop@CWindow@UI@@QAEXPAV12@@Z PROC			; UI::CWindow::SetTop, COMDAT
; _this$ = ecx

; 355  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	57		 push	 edi
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.h

; 100  : 			bool			IsFlag(DWORD flag)		{ return (m_dwFlag & flag) ? true : false;	}

  00005	8b 7d 08	 mov	 edi, DWORD PTR _pWin$[ebp]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 355  : 	{

  00008	8b d9		 mov	 ebx, ecx
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.h

; 100  : 			bool			IsFlag(DWORD flag)		{ return (m_dwFlag & flag) ? true : false;	}

  0000a	8b 47 58	 mov	 eax, DWORD PTR [edi+88]
  0000d	c1 e8 08	 shr	 eax, 8
  00010	a8 01		 test	 al, 1
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 356  : 		if (!pWin->IsFlag(CWindow::FLAG_FLOAT))

  00012	74 5e		 je	 SHORT $LN4@SetTop
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00014	8b 43 64	 mov	 eax, DWORD PTR [ebx+100]

; 1098 :         return iterator(_Mypair._Myval2._Myhead, _STD addressof(_Mypair._Myval2));

  00017	8d 4b 64	 lea	 ecx, DWORD PTR [ebx+100]
  0001a	56		 push	 esi

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0001b	8b 30		 mov	 esi, DWORD PTR [eax]

; 73   :         return _Ptr == _Right._Ptr;

  0001d	3b c6		 cmp	 eax, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5836 :     for (; _First != _Last; ++_First) {

  0001f	74 43		 je	 SHORT $LN3@SetTop
$LL51@SetTop:

; 5837 :         if (*_First == _Val) {

  00021	39 7e 08	 cmp	 DWORD PTR [esi+8], edi
  00024	74 06		 je	 SHORT $LN118@SetTop
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 51   :         _Ptr = _Ptr->_Next;

  00026	8b 36		 mov	 esi, DWORD PTR [esi]

; 73   :         return _Ptr == _Right._Ptr;

  00028	3b f0		 cmp	 esi, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5836 :     for (; _First != _Last; ++_First) {

  0002a	75 f5		 jne	 SHORT $LL51@SetTop
$LN118@SetTop:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0002c	3b c6		 cmp	 eax, esi
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 360  : 		if (m_pChildList.end() != itor)

  0002e	74 34		 je	 SHORT $LN3@SetTop
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 151  :         return this->_Ptr->_Myval;

  00030	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 362  : 			m_pChildList.push_back(*itor);

  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::push_back
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 396  :         _Pnode->_Prev->_Next = _Pnode->_Next;

  00039	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0003c	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  0003e	6a 0c		 push	 12			; 0000000cH
  00040	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 396  :         _Pnode->_Prev->_Next = _Pnode->_Next;

  00041	89 01		 mov	 DWORD PTR [ecx], eax

; 397  :         _Pnode->_Next->_Prev = _Pnode->_Prev;

  00043	8b 16		 mov	 edx, DWORD PTR [esi]
  00045	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00048	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 398  :         --_Mysize;

  0004b	ff 4b 68	 dec	 DWORD PTR [ebx+104]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  0004e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 365  : 			pWin->OnTop();

  00053	8b 07		 mov	 eax, DWORD PTR [edi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00055	83 c4 08	 add	 esp, 8
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 365  : 			pWin->OnTop();

  00058	8b cf		 mov	 ecx, edi
  0005a	ff 50 2c	 call	 DWORD PTR [eax+44]
  0005d	5e		 pop	 esi
  0005e	5f		 pop	 edi

; 370  : 		}
; 371  : 	}

  0005f	5b		 pop	 ebx
  00060	5d		 pop	 ebp
  00061	c2 04 00	 ret	 4
$LN3@SetTop:

; 366  : 		}
; 367  : 		else
; 368  : 		{
; 369  : 			TraceError(" CWindow::SetTop - Failed to find child window\n");

  00064	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@NEIGMJK@?5CWindow?3?3SetTop?5?9?5Failed?5to?5fi@
  00069	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  0006e	83 c4 04	 add	 esp, 4
  00071	5e		 pop	 esi
$LN4@SetTop:

; 370  : 		}
; 371  : 	}

  00072	5f		 pop	 edi
  00073	5b		 pop	 ebx
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?SetTop@CWindow@UI@@QAEXPAV12@@Z ENDP			; UI::CWindow::SetTop
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?DeleteChild@CWindow@UI@@QAEXPAV12@@Z
_TEXT	SEGMENT
_pWin$ = 8						; size = 4
?DeleteChild@CWindow@UI@@QAEXPAV12@@Z PROC		; UI::CWindow::DeleteChild, COMDAT
; _this$ = ecx

; 343  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 344  : 		if (m_isUpdatingChildren)

  00003	83 79 6c 00	 cmp	 DWORD PTR [ecx+108], 0
  00007	8d 45 08	 lea	 eax, DWORD PTR _pWin$[ebp]
  0000a	50		 push	 eax
  0000b	74 0c		 je	 SHORT $LN2@DeleteChil

; 345  : 		{
; 346  : 			m_pReserveChildList.push_back(pWin);

  0000d	83 c1 70	 add	 ecx, 112		; 00000070H
  00010	e8 00 00 00 00	 call	 ?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::push_back

; 351  : 		}
; 352  : 	}

  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
$LN2@DeleteChil:

; 347  : 		}
; 348  : 		else
; 349  : 		{
; 350  : 			m_pChildList.remove(pWin);

  00019	83 c1 64	 add	 ecx, 100		; 00000064H
  0001c	e8 00 00 00 00	 call	 ?remove@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@ABQAVCWindow@UI@@@Z ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::remove

; 351  : 		}
; 352  : 	}

  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?DeleteChild@CWindow@UI@@QAEXPAV12@@Z ENDP		; UI::CWindow::DeleteChild
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?IsChild@CWindow@UI@@QAE_NPAV12@@Z
_TEXT	SEGMENT
_pWin$ = 8						; size = 4
?IsChild@CWindow@UI@@QAE_NPAV12@@Z PROC			; UI::CWindow::IsChild, COMDAT
; _this$ = ecx

; 328  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1090 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00003	8b 49 64	 mov	 ecx, DWORD PTR [ecx+100]

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00006	8b 01		 mov	 eax, DWORD PTR [ecx]
  00008	3b c1		 cmp	 eax, ecx
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 331  : 		while (itor != m_pChildList.end())

  0000a	74 0f		 je	 SHORT $LN3@IsChild
  0000c	8b 55 08	 mov	 edx, DWORD PTR _pWin$[ebp]
  0000f	90		 npad	 1
$LL2@IsChild:

; 332  : 		{
; 333  : 			if (*itor == pWin)

  00010	39 50 08	 cmp	 DWORD PTR [eax+8], edx
  00013	74 0c		 je	 SHORT $LN35@IsChild
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 165  :         this->_Ptr = this->_Ptr->_Next;

  00015	8b 00		 mov	 eax, DWORD PTR [eax]

; 198  :         return this->_Ptr == _Right._Ptr;

  00017	3b c1		 cmp	 eax, ecx
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 331  : 		while (itor != m_pChildList.end())

  00019	75 f5		 jne	 SHORT $LL2@IsChild
$LN3@IsChild:

; 335  : 
; 336  : 			++itor;
; 337  : 		}
; 338  : 
; 339  : 		return false;

  0001b	32 c0		 xor	 al, al

; 340  : 	}

  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
$LN35@IsChild:

; 334  : 				return true;

  00021	b0 01		 mov	 al, 1

; 340  : 	}

  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
?IsChild@CWindow@UI@@QAE_NPAV12@@Z ENDP			; UI::CWindow::IsChild
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetParent@CWindow@UI@@QAEPAV12@XZ
_TEXT	SEGMENT
?GetParent@CWindow@UI@@QAEPAV12@XZ PROC			; UI::CWindow::GetParent, COMDAT
; _this$ = ecx

; 324  : 		return m_pParent;

  00000	8b 41 60	 mov	 eax, DWORD PTR [ecx+96]

; 325  : 	}

  00003	c3		 ret	 0
?GetParent@CWindow@UI@@QAEPAV12@XZ ENDP			; UI::CWindow::GetParent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetRoot@CWindow@UI@@QAEPAV12@XZ
_TEXT	SEGMENT
?GetRoot@CWindow@UI@@QAEPAV12@XZ PROC			; UI::CWindow::GetRoot, COMDAT
; _this$ = ecx

; 314  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 315  : 		if (m_pParent)

  00003	8b 4e 60	 mov	 ecx, DWORD PTR [esi+96]
  00006	57		 push	 edi
  00007	8d 7e 60	 lea	 edi, DWORD PTR [esi+96]
  0000a	85 c9		 test	 ecx, ecx
  0000c	74 1a		 je	 SHORT $LN11@GetRoot
  0000e	66 90		 npad	 2
$LL5@GetRoot:

; 316  : 			if (m_pParent->IsWindow())

  00010	8b 01		 mov	 eax, DWORD PTR [ecx]
  00012	ff 90 98 00 00
	00		 call	 DWORD PTR [eax+152]
  00018	85 c0		 test	 eax, eax
  0001a	74 0c		 je	 SHORT $LN11@GetRoot

; 317  : 				return m_pParent->GetRoot();

  0001c	8b 37		 mov	 esi, DWORD PTR [edi]
  0001e	8b 4e 60	 mov	 ecx, DWORD PTR [esi+96]
  00021	8d 7e 60	 lea	 edi, DWORD PTR [esi+96]
  00024	85 c9		 test	 ecx, ecx
  00026	75 e8		 jne	 SHORT $LL5@GetRoot
$LN11@GetRoot:
  00028	5f		 pop	 edi

; 318  : 
; 319  : 		return this;
; 320  : 	}

  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	c3		 ret	 0
?GetRoot@CWindow@UI@@QAEPAV12@XZ ENDP			; UI::CWindow::GetRoot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?IsRendering@CWindow@UI@@QAE_NXZ
_TEXT	SEGMENT
?IsRendering@CWindow@UI@@QAE_NXZ PROC			; UI::CWindow::IsRendering, COMDAT
; _this$ = ecx

; 97   : 		if (!IsShow())

  00000	80 79 55 00	 cmp	 BYTE PTR [ecx+85], 0
  00004	74 0d		 je	 SHORT $LN8@IsRenderin
$LL5@IsRenderin:

; 99   : 
; 100  : 		if (!m_pParent)

  00006	8b 49 60	 mov	 ecx, DWORD PTR [ecx+96]
  00009	85 c9		 test	 ecx, ecx
  0000b	74 09		 je	 SHORT $LN9@IsRenderin

; 97   : 		if (!IsShow())

  0000d	80 79 55 00	 cmp	 BYTE PTR [ecx+85], 0
  00011	75 f3		 jne	 SHORT $LL5@IsRenderin
$LN8@IsRenderin:

; 98   : 			return false;

  00013	32 c0		 xor	 al, al

; 102  : 
; 103  : 		return m_pParent->IsRendering();
; 104  : 	}

  00015	c3		 ret	 0
$LN9@IsRenderin:

; 101  : 			return true;

  00016	b0 01		 mov	 al, 1

; 102  : 
; 103  : 		return m_pParent->IsRendering();
; 104  : 	}

  00018	c3		 ret	 0
?IsRendering@CWindow@UI@@QAE_NXZ ENDP			; UI::CWindow::IsRendering
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Hide@CWindow@UI@@QAEXXZ
_TEXT	SEGMENT
?Hide@CWindow@UI@@QAEXXZ PROC				; UI::CWindow::Hide, COMDAT
; _this$ = ecx

; 92   : 		m_bShow = false;

  00000	c6 41 55 00	 mov	 BYTE PTR [ecx+85], 0

; 93   : 	}

  00004	c3		 ret	 0
?Hide@CWindow@UI@@QAEXXZ ENDP				; UI::CWindow::Hide
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Show@CWindow@UI@@QAEXXZ
_TEXT	SEGMENT
?Show@CWindow@UI@@QAEXXZ PROC				; UI::CWindow::Show, COMDAT
; _this$ = ecx

; 87   : 		m_bShow = true;

  00000	c6 41 55 01	 mov	 BYTE PTR [ecx+85], 1

; 88   : 	}

  00004	c3		 ret	 0
?Show@CWindow@UI@@QAEXXZ ENDP				; UI::CWindow::Show
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdlib.h
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdlib.h
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?UpdateRect@CWindow@UI@@QAEJXZ
_TEXT	SEGMENT
?UpdateRect@CWindow@UI@@QAEJXZ PROC			; UI::CWindow::UpdateRect, COMDAT
; _this$ = ecx

; 220  : 	{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx

; 221  : 		m_rect.top		= m_y;
; 222  : 		if (m_pParent)

  00005	8b 77 60	 mov	 esi, DWORD PTR [edi+96]
  00008	8b 4f 28	 mov	 ecx, DWORD PTR [edi+40]
  0000b	89 4f 38	 mov	 DWORD PTR [edi+56], ecx
  0000e	85 f6		 test	 esi, esi
  00010	74 2f		 je	 SHORT $LN6@UpdateRect

; 223  : 		{
; 224  : 			switch (m_VerticalAlign)

  00012	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
  00015	83 e8 01	 sub	 eax, 1
  00018	74 11		 je	 SHORT $LN8@UpdateRect
  0001a	83 e8 01	 sub	 eax, 1
  0001d	75 1c		 jne	 SHORT $LN2@UpdateRect

; 225  : 			{
; 226  : 				case VERTICAL_ALIGN_BOTTOM:
; 227  : 					m_rect.top = m_pParent->GetHeight() - m_rect.top;

  0001f	8b 46 30	 mov	 eax, DWORD PTR [esi+48]
  00022	2b c1		 sub	 eax, ecx
  00024	89 47 38	 mov	 DWORD PTR [edi+56], eax
  00027	8b c8		 mov	 ecx, eax

; 228  : 					break;

  00029	eb 10		 jmp	 SHORT $LN2@UpdateRect
$LN8@UpdateRect:

; 229  : 				case VERTICAL_ALIGN_CENTER:
; 230  : 					m_rect.top = (m_pParent->GetHeight() - GetHeight()) / 2 + m_rect.top;

  0002b	8b 46 30	 mov	 eax, DWORD PTR [esi+48]
  0002e	2b 47 30	 sub	 eax, DWORD PTR [edi+48]
  00031	99		 cdq
  00032	2b c2		 sub	 eax, edx
  00034	d1 f8		 sar	 eax, 1
  00036	03 c8		 add	 ecx, eax
  00038	89 4f 38	 mov	 DWORD PTR [edi+56], ecx
$LN2@UpdateRect:

; 231  : 					break;
; 232  : 			}
; 233  : 			m_rect.top += m_pParent->m_rect.top;

  0003b	03 4e 38	 add	 ecx, DWORD PTR [esi+56]
  0003e	89 4f 38	 mov	 DWORD PTR [edi+56], ecx
$LN6@UpdateRect:

; 234  : 		}
; 235  : 		m_rect.bottom	= m_rect.top + m_lHeight;

  00041	8b 47 30	 mov	 eax, DWORD PTR [edi+48]

; 236  : 
; 237  : #if defined( _USE_CPP_RTL_FLIP )
; 238  : 		if( m_pParent == NULL ) {
; 239  : 			m_rect.left		= m_x;
; 240  : 			m_rect.right	= m_rect.left + m_lWidth;
; 241  : 		} else {
; 242  : 			if( m_pParent->IsFlag(UI::CWindow::FLAG_RTL) == true ) {
; 243  : 				m_rect.left = m_pParent->GetWidth() - m_lWidth - m_x;
; 244  : 				switch (m_HorizontalAlign)
; 245  : 				{
; 246  : 					case HORIZONTAL_ALIGN_RIGHT:
; 247  : 						m_rect.left = - m_x;
; 248  : 						break;
; 249  : 					case HORIZONTAL_ALIGN_CENTER:
; 250  : 						m_rect.left = m_pParent->GetWidth() / 2 - GetWidth() - m_x;
; 251  : 						break;
; 252  : 				}
; 253  : 				m_rect.left += m_pParent->m_rect.left;
; 254  : 				m_rect.right = m_rect.left + m_lWidth;
; 255  : 			} else {
; 256  : 				m_rect.left		= m_x;
; 257  : 				switch (m_HorizontalAlign)
; 258  : 				{
; 259  : 					case HORIZONTAL_ALIGN_RIGHT:
; 260  : 						m_rect.left = m_pParent->GetWidth() - m_rect.left;
; 261  : 						break;
; 262  : 					case HORIZONTAL_ALIGN_CENTER:
; 263  : 						m_rect.left = (m_pParent->GetWidth() - GetWidth()) / 2 + m_rect.left;
; 264  : 						break;
; 265  : 				}
; 266  : 				m_rect.left += m_pParent->m_rect.left;
; 267  : 				m_rect.right = m_rect.left + m_lWidth;
; 268  : 			}
; 269  : 		}
; 270  : #else
; 271  : 		m_rect.left		= m_x;

  00044	8b 5f 24	 mov	 ebx, DWORD PTR [edi+36]
  00047	03 c1		 add	 eax, ecx
  00049	89 47 40	 mov	 DWORD PTR [edi+64], eax
  0004c	89 5f 34	 mov	 DWORD PTR [edi+52], ebx

; 272  : 		if (m_pParent)

  0004f	85 f6		 test	 esi, esi
  00051	74 50		 je	 SHORT $LN9@UpdateRect

; 273  : 		{
; 274  : 			switch (m_HorizontalAlign)

  00053	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
  00056	83 e8 01	 sub	 eax, 1
  00059	74 16		 je	 SHORT $LN11@UpdateRect
  0005b	83 e8 01	 sub	 eax, 1
  0005e	75 2a		 jne	 SHORT $LN4@UpdateRect
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdlib.h

; 365  :         return labs(_X);

  00060	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  00063	99		 cdq
  00064	33 c2		 xor	 eax, edx
  00066	2b c2		 sub	 eax, edx
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 277  : 					m_rect.left = ::abs(m_pParent->GetWidth()) - m_rect.left;

  00068	2b c3		 sub	 eax, ebx
  0006a	89 47 34	 mov	 DWORD PTR [edi+52], eax
  0006d	8b d8		 mov	 ebx, eax

; 278  : 					break;

  0006f	eb 19		 jmp	 SHORT $LN4@UpdateRect
$LN11@UpdateRect:

; 279  : 				case HORIZONTAL_ALIGN_CENTER:
; 280  : 					m_rect.left = m_pParent->GetWidth() / 2 - GetWidth() / 2 + m_rect.left;

  00071	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  00074	99		 cdq
  00075	2b c2		 sub	 eax, edx
  00077	8b c8		 mov	 ecx, eax
  00079	8b 47 2c	 mov	 eax, DWORD PTR [edi+44]
  0007c	99		 cdq
  0007d	2b c2		 sub	 eax, edx
  0007f	d1 f9		 sar	 ecx, 1
  00081	d1 f8		 sar	 eax, 1
  00083	2b c8		 sub	 ecx, eax
  00085	03 d9		 add	 ebx, ecx
  00087	89 5f 34	 mov	 DWORD PTR [edi+52], ebx
$LN4@UpdateRect:

; 283  : 			m_rect.left += 0L < m_pParent->GetWidth() ? m_pParent->m_rect.left : m_pParent->m_rect.right + ::abs(m_pParent->GetWidth());

  0008a	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  0008d	85 c0		 test	 eax, eax
  0008f	7e 05		 jle	 SHORT $LN13@UpdateRect
  00091	8b 46 34	 mov	 eax, DWORD PTR [esi+52]
  00094	eb 08		 jmp	 SHORT $LN14@UpdateRect
$LN13@UpdateRect:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdlib.h

; 365  :         return labs(_X);

  00096	99		 cdq
  00097	33 c2		 xor	 eax, edx
  00099	2b c2		 sub	 eax, edx
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 283  : 			m_rect.left += 0L < m_pParent->GetWidth() ? m_pParent->m_rect.left : m_pParent->m_rect.right + ::abs(m_pParent->GetWidth());

  0009b	03 46 3c	 add	 eax, DWORD PTR [esi+60]
$LN14@UpdateRect:
  0009e	03 d8		 add	 ebx, eax
  000a0	89 5f 34	 mov	 DWORD PTR [edi+52], ebx
$LN9@UpdateRect:

; 285  : 		m_rect.right = m_rect.left + m_lWidth;

  000a3	8b 47 2c	 mov	 eax, DWORD PTR [edi+44]
  000a6	03 c3		 add	 eax, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  000a8	8b 5f 64	 mov	 ebx, DWORD PTR [edi+100]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 285  : 		m_rect.right = m_rect.left + m_lWidth;

  000ab	89 47 3c	 mov	 DWORD PTR [edi+60], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  000ae	8b 33		 mov	 esi, DWORD PTR [ebx]

; 73   :         return _Ptr == _Right._Ptr;

  000b0	3b f3		 cmp	 esi, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  000b2	74 0e		 je	 SHORT $LN37@UpdateRect
$LL59@UpdateRect:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 1768 :         return ((*static_cast<_Ty1&&>(_Arg1)).*_Obj)(static_cast<_Types2&&>(_Args2)...);

  000b4	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000b7	e8 00 00 00 00	 call	 ?UpdateRect@CWindow@UI@@QAEJXZ ; UI::CWindow::UpdateRect
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 51   :         _Ptr = _Ptr->_Next;

  000bc	8b 36		 mov	 esi, DWORD PTR [esi]

; 73   :         return _Ptr == _Right._Ptr;

  000be	3b f3		 cmp	 esi, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  000c0	75 f2		 jne	 SHORT $LL59@UpdateRect
$LN37@UpdateRect:
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 289  : 		OnChangePosition();

  000c2	8b 07		 mov	 eax, DWORD PTR [edi]
  000c4	8b cf		 mov	 ecx, edi
  000c6	ff 50 0c	 call	 DWORD PTR [eax+12]

; 290  : 
; 291  : 		return 1;

  000c9	5f		 pop	 edi
  000ca	5e		 pop	 esi
  000cb	b8 01 00 00 00	 mov	 eax, 1
  000d0	5b		 pop	 ebx

; 292  : 	}

  000d1	c3		 ret	 0
?UpdateRect@CWindow@UI@@QAEJXZ ENDP			; UI::CWindow::UpdateRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetMouseLocalPosition@CWindow@UI@@QAEXAAJ0@Z
_TEXT	SEGMENT
_rlx$ = 8						; size = 4
_rly$ = 12						; size = 4
?GetMouseLocalPosition@CWindow@UI@@QAEXAAJ0@Z PROC	; UI::CWindow::GetMouseLocalPosition, COMDAT
; _this$ = ecx

; 301  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 302  : 		CWindowManager::Instance().GetMousePosition(rlx, rly);

  00005	8b 75 08	 mov	 esi, DWORD PTR _rlx$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCWindowManager@UI@@@@0PAVCWindowManager@UI@@A ; CSingleton<UI::CWindowManager>::ms_singleton
  00010	57		 push	 edi
  00011	8b 7d 0c	 mov	 edi, DWORD PTR _rly$[ebp]
  00014	57		 push	 edi
  00015	56		 push	 esi
  00016	e8 00 00 00 00	 call	 ?GetMousePosition@CWindowManager@UI@@QAEXAAJ0@Z ; UI::CWindowManager::GetMousePosition

; 303  : 		rlx = rlx - m_rect.left;

  0001b	8b 43 34	 mov	 eax, DWORD PTR [ebx+52]
  0001e	29 06		 sub	 DWORD PTR [esi], eax

; 304  : 		rly = rly - m_rect.top;

  00020	8b 43 38	 mov	 eax, DWORD PTR [ebx+56]
  00023	29 07		 sub	 DWORD PTR [edi], eax
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx

; 305  : 	}

  00028	5d		 pop	 ebp
  00029	c2 08 00	 ret	 8
?GetMouseLocalPosition@CWindow@UI@@QAEXAAJ0@Z ENDP	; UI::CWindow::GetMouseLocalPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetLocalPosition@CWindow@UI@@QAEXAAJ0@Z
_TEXT	SEGMENT
_rlx$ = 8						; size = 4
_rly$ = 12						; size = 4
?GetLocalPosition@CWindow@UI@@QAEXAAJ0@Z PROC		; UI::CWindow::GetLocalPosition, COMDAT
; _this$ = ecx

; 295  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 296  : 		rlx = rlx - m_rect.left;

  00003	8b 45 08	 mov	 eax, DWORD PTR _rlx$[ebp]
  00006	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  00009	29 10		 sub	 DWORD PTR [eax], edx

; 297  : 		rly = rly - m_rect.top;

  0000b	8b 45 0c	 mov	 eax, DWORD PTR _rly$[ebp]
  0000e	8b 49 38	 mov	 ecx, DWORD PTR [ecx+56]
  00011	29 08		 sub	 DWORD PTR [eax], ecx

; 298  : 	}

  00013	5d		 pop	 ebp
  00014	c2 08 00	 ret	 8
?GetLocalPosition@CWindow@UI@@QAEXAAJ0@Z ENDP		; UI::CWindow::GetLocalPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?GetPosition@CWindow@UI@@QAEXPAJ0@Z
_TEXT	SEGMENT
_plx$ = 8						; size = 4
_ply$ = 12						; size = 4
?GetPosition@CWindow@UI@@QAEXPAJ0@Z PROC		; UI::CWindow::GetPosition, COMDAT
; _this$ = ecx

; 214  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 215  : 		*plx = m_x;

  00003	8b 45 08	 mov	 eax, DWORD PTR _plx$[ebp]
  00006	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00009	89 10		 mov	 DWORD PTR [eax], edx

; 216  : 		*ply = m_y;

  0000b	8b 45 0c	 mov	 eax, DWORD PTR _ply$[ebp]
  0000e	8b 49 28	 mov	 ecx, DWORD PTR [ecx+40]
  00011	89 08		 mov	 DWORD PTR [eax], ecx

; 217  : 	}

  00013	5d		 pop	 ebp
  00014	c2 08 00	 ret	 8
?GetPosition@CWindow@UI@@QAEXPAJ0@Z ENDP		; UI::CWindow::GetPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetPosition@CWindow@UI@@QAEXJJ@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?SetPosition@CWindow@UI@@QAEXJJ@Z PROC			; UI::CWindow::SetPosition, COMDAT
; _this$ = ecx

; 206  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 207  : 		m_x = x;

  00003	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  00006	89 41 24	 mov	 DWORD PTR [ecx+36], eax

; 208  : 		m_y = y;

  00009	8b 45 0c	 mov	 eax, DWORD PTR _y$[ebp]
  0000c	89 41 28	 mov	 DWORD PTR [ecx+40], eax

; 209  : 
; 210  : 		UpdateRect();

  0000f	e8 00 00 00 00	 call	 ?UpdateRect@CWindow@UI@@QAEJXZ ; UI::CWindow::UpdateRect

; 211  : 	}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
?SetPosition@CWindow@UI@@QAEXJJ@Z ENDP			; UI::CWindow::SetPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetVerticalAlign@CWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_dwAlign$ = 8						; size = 4
?SetVerticalAlign@CWindow@UI@@QAEXK@Z PROC		; UI::CWindow::SetVerticalAlign, COMDAT
; _this$ = ecx

; 200  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 201  : 		m_VerticalAlign = (EVerticalAlign)dwAlign;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwAlign$[ebp]
  00006	89 41 20	 mov	 DWORD PTR [ecx+32], eax

; 202  : 		UpdateRect();

  00009	e8 00 00 00 00	 call	 ?UpdateRect@CWindow@UI@@QAEJXZ ; UI::CWindow::UpdateRect

; 203  : 	}

  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
?SetVerticalAlign@CWindow@UI@@QAEXK@Z ENDP		; UI::CWindow::SetVerticalAlign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetHorizontalAlign@CWindow@UI@@QAEXK@Z
_TEXT	SEGMENT
_dwAlign$ = 8						; size = 4
?SetHorizontalAlign@CWindow@UI@@QAEXK@Z PROC		; UI::CWindow::SetHorizontalAlign, COMDAT
; _this$ = ecx

; 194  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 195  : 		m_HorizontalAlign = (EHorizontalAlign)dwAlign;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwAlign$[ebp]
  00006	89 41 1c	 mov	 DWORD PTR [ecx+28], eax

; 196  : 		UpdateRect();

  00009	e8 00 00 00 00	 call	 ?UpdateRect@CWindow@UI@@QAEJXZ ; UI::CWindow::UpdateRect

; 197  : 	}

  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
?SetHorizontalAlign@CWindow@UI@@QAEXK@Z ENDP		; UI::CWindow::SetHorizontalAlign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetSize@CWindow@UI@@QAEXJJ@Z
_TEXT	SEGMENT
_width$ = 8						; size = 4
_height$ = 12						; size = 4
?SetSize@CWindow@UI@@QAEXJJ@Z PROC			; UI::CWindow::SetSize, COMDAT
; _this$ = ecx

; 185  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 186  : 		m_lWidth = width;

  00003	8b 55 08	 mov	 edx, DWORD PTR _width$[ebp]

; 187  : 		m_lHeight = height;
; 188  : 
; 189  : 		m_rect.right = m_rect.left + m_lWidth;

  00006	8b 41 34	 mov	 eax, DWORD PTR [ecx+52]
  00009	03 c2		 add	 eax, edx
  0000b	89 51 2c	 mov	 DWORD PTR [ecx+44], edx
  0000e	89 41 3c	 mov	 DWORD PTR [ecx+60], eax

; 190  : 		m_rect.bottom = m_rect.top + m_lHeight;

  00011	8b 41 38	 mov	 eax, DWORD PTR [ecx+56]
  00014	56		 push	 esi
  00015	8b 75 0c	 mov	 esi, DWORD PTR _height$[ebp]
  00018	03 c6		 add	 eax, esi
  0001a	89 71 30	 mov	 DWORD PTR [ecx+48], esi
  0001d	89 41 40	 mov	 DWORD PTR [ecx+64], eax
  00020	5e		 pop	 esi

; 191  : 	}

  00021	5d		 pop	 ebp
  00022	c2 08 00	 ret	 8
?SetSize@CWindow@UI@@QAEXJJ@Z ENDP			; UI::CWindow::SetSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?SetName@CWindow@UI@@QAEXPBD@Z
_TEXT	SEGMENT
_c_szName$ = 8						; size = 4
?SetName@CWindow@UI@@QAEXPBD@Z PROC			; UI::CWindow::SetName, COMDAT
; _this$ = ecx

; 180  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 403  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00003	8b 55 08	 mov	 edx, DWORD PTR _c_szName$[ebp]
  00006	8b c2		 mov	 eax, edx
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 180  : 	{

  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	8b f1		 mov	 esi, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 403  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0000c	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0000f	90		 npad	 1
$LL9@SetName:
  00010	8a 08		 mov	 cl, BYTE PTR [eax]
  00012	40		 inc	 eax
  00013	84 c9		 test	 cl, cl
  00015	75 f9		 jne	 SHORT $LL9@SetName
  00017	2b c7		 sub	 eax, edi
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 181  : 		m_strName = c_szName;

  00019	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3395 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0001c	50		 push	 eax
  0001d	52		 push	 edx
  0001e	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 182  : 	}

  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?SetName@CWindow@UI@@QAEXPBD@Z ENDP			; UI::CWindow::SetName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterBase\Stl.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Render@CWindow@UI@@QAEXXZ
_TEXT	SEGMENT
?Render@CWindow@UI@@QAEXXZ PROC				; UI::CWindow::Render, COMDAT
; _this$ = ecx

; 137  : 	{

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 138  : 		if (!IsShow())

  00003	80 7f 55 00	 cmp	 BYTE PTR [edi+85], 0
  00007	0f 84 a2 00 00
	00		 je	 $LN29@Render

; 139  : 			return;
; 140  : 
; 141  : 		OnRender();

  0000d	8b 07		 mov	 eax, DWORD PTR [edi]
  0000f	ff 50 04	 call	 DWORD PTR [eax+4]

; 142  : 
; 143  : 		if (g_bOutlineBoxEnable)

  00012	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_bOutlineBoxEnable@@3HA, 0 ; g_bOutlineBoxEnable
  00019	74 7a		 je	 SHORT $LN3@Render

; 144  : 		{
; 145  : 			CPythonGraphic::Instance().SetDiffuseColor(1.0f, 1.0f, 1.0f);

  0001b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  00021	83 ec 10	 sub	 esp, 16			; 00000010H
  00024	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  0002c	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00034	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  0003c	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00043	e8 00 00 00 00	 call	 ?SetDiffuseColor@CScreen@@QAEXMMMM@Z ; CScreen::SetDiffuseColor
  00048	66 0f 6e 47 40	 movd	 xmm0, DWORD PTR [edi+64]

; 146  : 			CPythonGraphic::Instance().RenderBox2d(m_rect.left, m_rect.top, m_rect.right, m_rect.bottom);

  0004d	83 ec 14	 sub	 esp, 20			; 00000014H
  00050	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00053	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  00059	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR [esp+16], 0
  00061	f3 0f 11 44 24
	0c		 movss	 DWORD PTR [esp+12], xmm0
  00067	66 0f 6e 47 3c	 movd	 xmm0, DWORD PTR [edi+60]
  0006c	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0006f	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00075	66 0f 6e 47 38	 movd	 xmm0, DWORD PTR [edi+56]
  0007a	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0007d	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00083	66 0f 6e 47 34	 movd	 xmm0, DWORD PTR [edi+52]
  00088	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0008b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00090	e8 00 00 00 00	 call	 ?RenderBox2d@CScreen@@QAEXMMMMM@Z ; CScreen::RenderBox2d
$LN3@Render:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00095	8b 7f 64	 mov	 edi, DWORD PTR [edi+100]
  00098	56		 push	 esi
  00099	8b 37		 mov	 esi, DWORD PTR [edi]

; 73   :         return _Ptr == _Right._Ptr;

  0009b	3b f7		 cmp	 esi, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  0009d	74 0f		 je	 SHORT $LN69@Render
  0009f	90		 npad	 1
$LL68@Render:
; File C:\Marty 5.5\Src-Client\Client\eterBase\Stl.h

; 59   : 		{((_P->*_Ptr)()); }

  000a0	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000a3	e8 00 00 00 00	 call	 ?Render@CWindow@UI@@QAEXXZ ; UI::CWindow::Render
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 51   :         _Ptr = _Ptr->_Next;

  000a8	8b 36		 mov	 esi, DWORD PTR [esi]

; 73   :         return _Ptr == _Right._Ptr;

  000aa	3b f7		 cmp	 esi, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  000ac	75 f2		 jne	 SHORT $LL68@Render
$LN69@Render:
  000ae	5e		 pop	 esi
$LN29@Render:
  000af	5f		 pop	 edi
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 150  : 	}

  000b0	c3		 ret	 0
?Render@CWindow@UI@@QAEXXZ ENDP				; UI::CWindow::Render
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Update@CWindow@UI@@QAEXXZ
_TEXT	SEGMENT
?Update@CWindow@UI@@QAEXXZ PROC				; UI::CWindow::Update, COMDAT
; _this$ = ecx

; 120  : 	{

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx

; 121  : 		if (!IsShow())

  00003	80 7b 55 00	 cmp	 BYTE PTR [ebx+85], 0
  00007	74 35		 je	 SHORT $LN1@Update

; 122  : 			return;
; 123  : 
; 124  : 		__RemoveReserveChildren();

  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	e8 00 00 00 00	 call	 ?__RemoveReserveChildren@CWindow@UI@@QAEXXZ ; UI::CWindow::__RemoveReserveChildren

; 125  : 
; 126  : 		OnUpdate();

  00010	8b 03		 mov	 eax, DWORD PTR [ebx]
  00012	8b cb		 mov	 ecx, ebx
  00014	ff 50 08	 call	 DWORD PTR [eax+8]

; 127  : 
; 128  : 		m_isUpdatingChildren = TRUE;

  00017	c7 43 6c 01 00
	00 00		 mov	 DWORD PTR [ebx+108], 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1106 :         return _Unchecked_iterator(_Mypair._Myval2._Myhead->_Next, nullptr);

  0001e	8b 7b 64	 mov	 edi, DWORD PTR [ebx+100]

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00021	8b 37		 mov	 esi, DWORD PTR [edi]

; 73   :         return _Ptr == _Right._Ptr;

  00023	3b f7		 cmp	 esi, edi
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 130  : 		for (auto& Child : m_pChildList)

  00025	74 0e		 je	 SHORT $LN3@Update
$LL22@Update:

; 131  : 			Child->Update();

  00027	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0002a	e8 00 00 00 00	 call	 ?Update@CWindow@UI@@QAEXXZ ; UI::CWindow::Update
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 51   :         _Ptr = _Ptr->_Next;

  0002f	8b 36		 mov	 esi, DWORD PTR [esi]

; 73   :         return _Ptr == _Right._Ptr;

  00031	3b f7		 cmp	 esi, edi
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 130  : 		for (auto& Child : m_pChildList)

  00033	75 f2		 jne	 SHORT $LL22@Update
$LN3@Update:

; 132  : 
; 133  : 		m_isUpdatingChildren = FALSE;

  00035	5f		 pop	 edi
  00036	c7 43 6c 00 00
	00 00		 mov	 DWORD PTR [ebx+108], 0
  0003d	5e		 pop	 esi
$LN1@Update:

; 134  : 	}

  0003e	5b		 pop	 ebx
  0003f	c3		 ret	 0
?Update@CWindow@UI@@QAEXXZ ENDP				; UI::CWindow::Update
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?DestroyHandle@CWindow@UI@@QAEXXZ
_TEXT	SEGMENT
?DestroyHandle@CWindow@UI@@QAEXXZ PROC			; UI::CWindow::DestroyHandle, COMDAT
; _this$ = ecx

; 82   : 		m_poHandler = NULL;

  00000	c7 41 5c 00 00
	00 00		 mov	 DWORD PTR [ecx+92], 0

; 83   : 	}

  00007	c3		 ret	 0
?DestroyHandle@CWindow@UI@@QAEXXZ ENDP			; UI::CWindow::DestroyHandle
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Clear@CWindow@UI@@QAEXXZ
_TEXT	SEGMENT
?Clear@CWindow@UI@@QAEXXZ PROC				; UI::CWindow::Clear, COMDAT
; _this$ = ecx

; 71   : 	{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 38   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00005	8b 5f 64	 mov	 ebx, DWORD PTR [edi+100]
  00008	8b 33		 mov	 esi, DWORD PTR [ebx]

; 73   :         return _Ptr == _Right._Ptr;

  0000a	3b f3		 cmp	 esi, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  0000c	74 10		 je	 SHORT $LN21@Clear
  0000e	66 90		 npad	 2
$LL43@Clear:
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 66   : 			pWin->Clear();

  00010	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00013	e8 00 00 00 00	 call	 ?Clear@CWindow@UI@@QAEXXZ ; UI::CWindow::Clear
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 51   :         _Ptr = _Ptr->_Next;

  00018	8b 36		 mov	 esi, DWORD PTR [esi]

; 73   :         return _Ptr == _Right._Ptr;

  0001a	3b f3		 cmp	 esi, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	75 f2		 jne	 SHORT $LL43@Clear
$LN21@Clear:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1490 :         _Node::_Free_non_head(_Getal(), _My_data._Myhead);

  0001e	8b 4f 64	 mov	 ecx, DWORD PTR [edi+100]

; 325  :         _Head->_Prev->_Next = nullptr;

  00021	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00024	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 326  : 
; 327  :         auto _Pnode = _Head->_Next;

  0002a	8b 01		 mov	 eax, DWORD PTR [ecx]

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  0002c	85 c0		 test	 eax, eax
  0002e	74 13		 je	 SHORT $LN58@Clear
$LL59@Clear:

; 329  :             _Pnext = _Pnode->_Next;

  00030	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00032	6a 0c		 push	 12			; 0000000cH
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0003a	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  0003d	8b c6		 mov	 eax, esi
  0003f	85 f6		 test	 esi, esi
  00041	75 ed		 jne	 SHORT $LL59@Clear
$LN58@Clear:

; 1491 :         _My_data._Myhead->_Next = _My_data._Myhead;

  00043	8b 47 64	 mov	 eax, DWORD PTR [edi+100]
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 76   : 		DestroyHandle();

  00046	8b cf		 mov	 ecx, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1491 :         _My_data._Myhead->_Next = _My_data._Myhead;

  00048	89 00		 mov	 DWORD PTR [eax], eax

; 1492 :         _My_data._Myhead->_Prev = _My_data._Myhead;

  0004a	8b 47 64	 mov	 eax, DWORD PTR [edi+100]
  0004d	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1493 :         _My_data._Mysize        = 0;

  00050	c7 47 68 00 00
	00 00		 mov	 DWORD PTR [edi+104], 0
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 75   : 		m_pParent = NULL;

  00057	c7 47 60 00 00
	00 00		 mov	 DWORD PTR [edi+96], 0

; 76   : 		DestroyHandle();

  0005e	e8 00 00 00 00	 call	 ?DestroyHandle@CWindow@UI@@QAEXXZ ; UI::CWindow::DestroyHandle

; 77   : 		Hide();

  00063	8b cf		 mov	 ecx, edi
  00065	5f		 pop	 edi
  00066	5e		 pop	 esi
  00067	5b		 pop	 ebx
  00068	e9 00 00 00 00	 jmp	 ?Hide@CWindow@UI@@QAEXXZ ; UI::CWindow::Hide
?Clear@CWindow@UI@@QAEXXZ ENDP				; UI::CWindow::Clear
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?AddChild@CWindow@UI@@QAEXPAV12@@Z
_TEXT	SEGMENT
_pWin$ = 8						; size = 4
?AddChild@CWindow@UI@@QAEXPAV12@@Z PROC			; UI::CWindow::AddChild, COMDAT
; _this$ = ecx

; 308  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 309  : 		m_pChildList.push_back(pWin);

  00006	8d 45 08	 lea	 eax, DWORD PTR _pWin$[ebp]
  00009	50		 push	 eax
  0000a	8d 4e 64	 lea	 ecx, DWORD PTR [esi+100]
  0000d	e8 00 00 00 00	 call	 ?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::push_back

; 310  : 		pWin->m_pParent = this;

  00012	8b 45 08	 mov	 eax, DWORD PTR _pWin$[ebp]
  00015	89 70 60	 mov	 DWORD PTR [eax+96], esi
  00018	5e		 pop	 esi

; 311  : 	}

  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
?AddChild@CWindow@UI@@QAEXPAV12@@Z ENDP			; UI::CWindow::AddChild
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??1CWindow@UI@@UAE@XZ
_TEXT	SEGMENT
??1CWindow@UI@@UAE@XZ PROC				; UI::CWindow::~CWindow, COMDAT
; _this$ = ecx

; 40   : 	{

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx
  00004	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CWindow@UI@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1501 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

  0000a	8b 57 70	 mov	 edx, DWORD PTR [edi+112]

; 325  :         _Head->_Prev->_Next = nullptr;

  0000d	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00010	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 326  : 
; 327  :         auto _Pnode = _Head->_Next;

  00016	8b 02		 mov	 eax, DWORD PTR [edx]

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00018	85 c0		 test	 eax, eax
  0001a	74 17		 je	 SHORT $LN9@CWindow
  0001c	0f 1f 40 00	 npad	 4
$LL10@CWindow:

; 329  :             _Pnext = _Pnode->_Next;

  00020	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00022	6a 0c		 push	 12			; 0000000cH
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002a	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  0002d	8b c6		 mov	 eax, esi
  0002f	85 f6		 test	 esi, esi
  00031	75 ed		 jne	 SHORT $LL10@CWindow
$LN9@CWindow:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00033	6a 0c		 push	 12			; 0000000cH
  00035	ff 77 70	 push	 DWORD PTR [edi+112]
  00038	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1501 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

  0003d	8b 4f 64	 mov	 ecx, DWORD PTR [edi+100]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00040	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 325  :         _Head->_Prev->_Next = nullptr;

  00043	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00046	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 326  : 
; 327  :         auto _Pnode = _Head->_Next;

  0004c	8b 01		 mov	 eax, DWORD PTR [ecx]

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  0004e	85 c0		 test	 eax, eax
  00050	74 13		 je	 SHORT $LN65@CWindow
$LL66@CWindow:

; 329  :             _Pnext = _Pnode->_Next;

  00052	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00054	6a 0c		 push	 12			; 0000000cH
  00056	50		 push	 eax
  00057	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0005c	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  0005f	8b c6		 mov	 eax, esi
  00061	85 f6		 test	 esi, esi
  00063	75 ed		 jne	 SHORT $LL66@CWindow
$LN65@CWindow:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00065	6a 0c		 push	 12			; 0000000cH
  00067	ff 77 64	 push	 DWORD PTR [edi+100]
  0006a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

  0006f	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00072	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

  00075	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4832 :         if (_My_data._Large_string_engaged()) {

  00078	72 28		 jb	 SHORT $LN126@CWindow
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  0007d	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0007e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00084	72 12		 jb	 SHORT $LN136@CWindow

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00086	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00089	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0008c	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0008e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00091	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00094	77 21		 ja	 SHORT $LN133@CWindow

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00096	8b c2		 mov	 eax, edx
$LN136@CWindow:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00098	51		 push	 ecx
  00099	50		 push	 eax
  0009a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0009f	83 c4 08	 add	 esp, 8
$LN126@CWindow:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

  000a2	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;

  000a9	c7 47 18 0f 00
	00 00		 mov	 DWORD PTR [edi+24], 15	; 0000000fH

; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  000b0	c6 47 04 00	 mov	 BYTE PTR [edi+4], 0
  000b4	5f		 pop	 edi
  000b5	5e		 pop	 esi
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 41   : 	}

  000b6	c3		 ret	 0
$LN133@CWindow:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000b7	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN154@CWindow:
  000bc	cc		 int	 3
??1CWindow@UI@@UAE@XZ ENDP				; UI::CWindow::~CWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ??0CWindow@UI@@QAE@PAU_object@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ppyObject$ = 8						; size = 4
??0CWindow@UI@@QAE@PAU_object@@@Z PROC			; UI::CWindow::CWindow, COMDAT
; _this$ = ecx

; 25   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CWindow@UI@@QAE@PAU_object@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00029	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CWindow@UI@@6B@
  0002f	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  00032	0f 11 46 04	 movups	 XMMWORD PTR [esi+4], xmm0

; 4821 :         _My_data._Mysize = 0;

  00036	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

  0003d	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00044	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 17   : 		m_poHandler(ppyObject),

  00048	8b 45 08	 mov	 eax, DWORD PTR _ppyObject$[ebp]
  0004b	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0
  00052	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0
  00059	c7 46 2c 00 00
	00 00		 mov	 DWORD PTR [esi+44], 0
  00060	c7 46 30 00 00
	00 00		 mov	 DWORD PTR [esi+48], 0
  00067	c6 46 55 00	 mov	 BYTE PTR [esi+85], 0
  0006b	c7 46 58 00 00
	00 00		 mov	 DWORD PTR [esi+88], 0
  00072	89 46 5c	 mov	 DWORD PTR [esi+92], eax

; 18   : 		m_bShow(false),
; 19   : 		m_pParent(NULL),

  00075	c7 46 60 00 00
	00 00		 mov	 DWORD PTR [esi+96], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

  0007c	6a 0c		 push	 12			; 0000000cH
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 25   : 	{

  0007e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 354  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

  00085	c7 46 64 00 00
	00 00		 mov	 DWORD PTR [esi+100], 0
  0008c	c7 46 68 00 00
	00 00		 mov	 DWORD PTR [esi+104], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

  00093	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1837 :         _Construct_in_place(_Newhead->_Next, _Newhead);

  00098	89 00		 mov	 DWORD PTR [eax], eax

; 1838 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

  0009a	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1839 :         _Mypair._Myval2._Myhead = _Newhead;

  0009d	89 46 64	 mov	 DWORD PTR [esi+100], eax
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 21   : 		m_isUpdatingChildren(FALSE)

  000a0	c7 46 6c 00 00
	00 00		 mov	 DWORD PTR [esi+108], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

  000a7	6a 0c		 push	 12			; 0000000cH
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 25   : 	{

  000a9	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 354  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

  000ad	c7 46 70 00 00
	00 00		 mov	 DWORD PTR [esi+112], 0
  000b4	c7 46 74 00 00
	00 00		 mov	 DWORD PTR [esi+116], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

  000bb	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000c0	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1837 :         _Construct_in_place(_Newhead->_Next, _Newhead);

  000c3	89 00		 mov	 DWORD PTR [eax], eax

; 1838 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

  000c5	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1839 :         _Mypair._Myval2._Myhead = _Newhead;

  000c8	89 46 70	 mov	 DWORD PTR [esi+112], eax
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp

; 37   : 	}

  000cb	8b c6		 mov	 eax, esi
  000cd	c6 46 78 00	 mov	 BYTE PTR [esi+120], 0
  000d1	c7 46 1c 00 00
	00 00		 mov	 DWORD PTR [esi+28], 0
  000d8	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0
  000df	c7 46 38 00 00
	00 00		 mov	 DWORD PTR [esi+56], 0
  000e6	c7 46 3c 00 00
	00 00		 mov	 DWORD PTR [esi+60], 0
  000ed	c7 46 34 00 00
	00 00		 mov	 DWORD PTR [esi+52], 0
  000f4	c7 46 40 00 00
	00 00		 mov	 DWORD PTR [esi+64], 0
  000fb	c7 46 48 00 00
	00 00		 mov	 DWORD PTR [esi+72], 0
  00102	c7 46 4c 00 00
	00 00		 mov	 DWORD PTR [esi+76], 0
  00109	c7 46 44 00 00
	00 00		 mov	 DWORD PTR [esi+68], 0
  00110	c7 46 50 00 00
	00 00		 mov	 DWORD PTR [esi+80], 0
  00117	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0011a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00121	59		 pop	 ecx
  00122	5e		 pop	 esi
  00123	8b e5		 mov	 esp, ebp
  00125	5d		 pop	 ebp
  00126	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CWindow@UI@@QAE@PAU_object@@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0CWindow@UI@@QAE@PAU_object@@@Z$1:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 64	 add	 ecx, 100		; 00000064H
  00011	e9 00 00 00 00	 jmp	 ??1?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@XZ ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::~list<UI::CWindow *,std::allocator<UI::CWindow *> >
  00016	cc		 int	 3
  00017	cc		 int	 3
  00018	cc		 int	 3
  00019	cc		 int	 3
  0001a	cc		 int	 3
__ehhandler$??0CWindow@UI@@QAE@PAU_object@@@Z:
  0001b	90		 npad	 1
  0001c	90		 npad	 1
  0001d	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00021	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00024	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00027	33 c8		 xor	 ecx, eax
  00029	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002e	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CWindow@UI@@QAE@PAU_object@@@Z
  00033	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CWindow@UI@@QAE@PAU_object@@@Z ENDP			; UI::CWindow::CWindow
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?IsType@CWindow@UI@@QAEHK@Z
_TEXT	SEGMENT
_dwType$ = 8						; size = 4
?IsType@CWindow@UI@@QAEHK@Z PROC			; UI::CWindow::IsType, COMDAT
; _this$ = ecx

; 50   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 51   : 		return OnIsType(dwType);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]

; 52   : 	}

  00005	5d		 pop	 ebp

; 51   : 		return OnIsType(dwType);

  00006	ff a0 94 00 00
	00		 jmp	 DWORD PTR [eax+148]
?IsType@CWindow@UI@@QAEHK@Z ENDP			; UI::CWindow::IsType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterPythonLib\PythonWindow.cpp
;	COMDAT ?Type@CWindow@UI@@SAKXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?Type@CWindow@UI@@SAKXZ PROC				; UI::CWindow::Type, COMDAT

; 44   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Type@CWindow@UI@@SAKXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 45   : 		static DWORD s_dwType = GetCRC32("CWindow", strlen("CWindow"));

  00022	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0002e	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??Type@CWindow@UI@@SAKXZ@4HA
  00036	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  0003c	7f 14		 jg	 SHORT $LN9@Type
$LN5@Type:

; 46   : 		return (s_dwType);
; 47   : 	}

  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_dwType@?1??Type@CWindow@UI@@SAKXZ@4KA
  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
$LN9@Type:

; 45   : 		static DWORD s_dwType = GetCRC32("CWindow", strlen("CWindow"));

  00052	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CWindow@UI@@SAKXZ@4HA
  00057	e8 00 00 00 00	 call	 __Init_thread_header
  0005c	83 c4 04	 add	 esp, 4
  0005f	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??Type@CWindow@UI@@SAKXZ@4HA, -1
  00066	75 d6		 jne	 SHORT $LN5@Type
  00068	6a 07		 push	 7
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_07EFPFKGGH@CWindow@
  0006f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00076	e8 00 00 00 00	 call	 ?GetCRC32@@YAKPBDI@Z	; GetCRC32
  0007b	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CWindow@UI@@SAKXZ@4HA
  00080	a3 00 00 00 00	 mov	 DWORD PTR ?s_dwType@?1??Type@CWindow@UI@@SAKXZ@4KA, eax
  00085	e8 00 00 00 00	 call	 __Init_thread_footer
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008d	eb af		 jmp	 SHORT $LN5@Type
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Type@CWindow@UI@@SAKXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CWindow@UI@@SAKXZ@4HA
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$?Type@CWindow@UI@@SAKXZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Type@CWindow@UI@@SAKXZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Type@CWindow@UI@@SAKXZ ENDP				; UI::CWindow::Type
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCGraphicExpandedImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicExpandedImageInstance@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCGraphicExpandedImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicExpandedImageInstance@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CGraphicExpandedImageInstance * *,CGraphicExpandedImageInstance * *>, COMDAT

; 4526 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4527 :     auto _FirstPtr              = _To_address(_First);
; 4528 :     auto _LastPtr               = _To_address(_Last);
; 4529 :     auto _DestPtr               = _To_address(_Dest);
; 4530 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4531 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4532 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4535 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4536 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4537 :     } else {
; 4538 :         return _Dest + (_LastPtr - _FirstPtr);
; 4539 :     }
; 4540 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCGraphicExpandedImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicExpandedImageInstance@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CGraphicExpandedImageInstance * *,CGraphicExpandedImageInstance * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 137  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 138  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 139  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 140  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 87   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 141  :         _Throw_bad_array_new_length(); // add overflow
; 142  :     }
; 143  : 
; 144  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 87   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 146  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 147  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 148  : 
; 149  : #ifdef _DEBUG
; 150  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 151  : #endif // _DEBUG
; 152  :     return _Ptr;
; 153  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCGraphicExpandedImageInstance@@@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@AAEPAPAVCGraphicExpandedImageInstance@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
__Newsize$1$ = -12					; size = 4
tv607 = -8						; size = 4
tv590 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCGraphicExpandedImageInstance@@@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@AAEPAPAVCGraphicExpandedImageInstance@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Emplace_reallocate<CGraphicExpandedImageInstance * const &>, COMDAT
; _this$ = ecx

; 812  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 813  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 814  :         _Alty& _Al        = _Getal();
; 815  :         auto& _My_data    = _Mypair._Myval2;
; 816  :         pointer& _Myfirst = _My_data._Myfirst;
; 817  :         pointer& _Mylast  = _My_data._Mylast;
; 818  : 
; 819  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 820  : 
; 821  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b d9		 sub	 ebx, ecx

; 822  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c1		 sub	 eax, ecx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 823  : 
; 824  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 0f 01 00
	00		 je	 $LN96@Emplace_re

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 56 08	 mov	 edx, DWORD PTR [esi+8]

; 826  :         }
; 827  : 
; 828  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b d1		 sub	 edx, ecx

; 826  :         }
; 827  : 
; 828  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f4	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 fa 02	 sar	 edx, 2

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b ca		 mov	 ecx, edx
  0003d	d1 e9		 shr	 ecx, 1
  0003f	2b c1		 sub	 eax, ecx
  00041	3b d0		 cmp	 edx, eax
  00043	76 15		 jbe	 SHORT $LN12@Emplace_re

; 1967 :             return _Max; // geometric growth would overflow

  00045	b8 fc ff ff ff	 mov	 eax, -4			; fffffffcH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004a	50		 push	 eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1967 :             return _Max; // geometric growth would overflow

  0004b	89 45 f8	 mov	 DWORD PTR tv607[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b f8		 mov	 edi, eax
  00058	eb 47		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1970 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 70   :         if (_Count > _Max_possible) {

  0005d	8b cf		 mov	 ecx, edi
  0005f	3b c7		 cmp	 eax, edi
  00061	0f 43 c8	 cmovae	 ecx, eax
  00064	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  0006a	0f 87 cc 00 00
	00		 ja	 $LN97@Emplace_re

; 72   :         }
; 73   :     }
; 74   : 
; 75   :     return _Count * _Ty_size;

  00070	8d 04 8d 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*4]
  00077	89 45 f8	 mov	 DWORD PTR tv607[ebp], eax

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0007a	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0007f	72 0d		 jb	 SHORT $LN24@Emplace_re

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00087	83 c4 04	 add	 esp, 4
  0008a	8b f8		 mov	 edi, eax
  0008c	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 240  :         }
; 241  :     }
; 242  : #endif // defined(_M_IX86) || defined(_M_X64)
; 243  : 
; 244  :     if (_Bytes != 0) {

  0008e	85 c0		 test	 eax, eax
  00090	74 0d		 je	 SHORT $LN25@Emplace_re

; 87   :         return ::operator new(_Bytes);

  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00098	83 c4 04	 add	 esp, 4

; 245  :         return _Traits::_Allocate(_Bytes);

  0009b	8b f8		 mov	 edi, eax
  0009d	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 246  :     }
; 247  : 
; 248  :     return nullptr;

  0009f	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 836  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000a1	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a4	8d 0c 9f	 lea	 ecx, DWORD PTR [edi+ebx*4]

; 837  :         _Constructed_first = _Newvec + _Whereoff;
; 838  : 
; 839  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000a7	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  000aa	89 4d fc	 mov	 DWORD PTR tv590[ebp], ecx
  000ad	8b 00		 mov	 eax, DWORD PTR [eax]
  000af	89 01		 mov	 DWORD PTR [ecx], eax
  000b1	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000b4	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000b6	3b d8		 cmp	 ebx, eax
  000b8	75 07		 jne	 SHORT $LN4@Emplace_re

; 845  :         } else { // provide basic guarantee

  000ba	8b 5d fc	 mov	 ebx, DWORD PTR tv590[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1939 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bd	8b d7		 mov	 edx, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 845  :         } else { // provide basic guarantee

  000bf	eb 16		 jmp	 SHORT $LN52@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1939 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c1	57		 push	 edi
  000c2	53		 push	 ebx
  000c3	51		 push	 ecx
  000c4	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGraphicExpandedImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicExpandedImageInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicExpandedImageInstance * *,CGraphicExpandedImageInstance * *>
  000c9	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000cc	8b cb		 mov	 ecx, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 848  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000ce	8b 5d fc	 mov	 ebx, DWORD PTR tv590[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1939 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000d1	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 848  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000d4	8d 53 04	 lea	 edx, DWORD PTR [ebx+4]
$LN52@Emplace_re:
  000d7	52		 push	 edx
  000d8	50		 push	 eax
  000d9	51		 push	 ecx
  000da	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGraphicExpandedImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicExpandedImageInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicExpandedImageInstance * *,CGraphicExpandedImageInstance * *>

; 2023 :         if (_Myfirst) { // destroy and deallocate old array

  000df	8b 06		 mov	 eax, DWORD PTR [esi]

; 848  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000e1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2023 :         if (_Myfirst) { // destroy and deallocate old array

  000e4	85 c0		 test	 eax, eax
  000e6	74 2c		 je	 SHORT $LN70@Emplace_re

; 2024 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2025 :             _ASAN_VECTOR_REMOVE;
; 2026 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e8	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000eb	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ed	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000f0	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f6	72 12		 jb	 SHORT $LN80@Emplace_re

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f8	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000fb	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000fe	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00100	83 c0 fc	 add	 eax, -4			; fffffffcH
  00103	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00106	77 2a		 ja	 SHORT $LN77@Emplace_re

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00108	8b c2		 mov	 eax, edx
$LN80@Emplace_re:

; 265  :         ::operator delete(_Ptr, _Bytes);

  0010a	51		 push	 ecx
  0010b	50		 push	 eax
  0010c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00111	83 c4 08	 add	 esp, 8
$LN70@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2030 :         _Mylast  = _Newvec + _Newsize;

  00114	8b 45 f4	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  00117	89 3e		 mov	 DWORD PTR [esi], edi
  00119	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 849  :         }
; 850  :         _CATCH_ALL
; 851  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 852  :         _Al.deallocate(_Newvec, _Newcapacity);
; 853  :         _RERAISE;
; 854  :         _CATCH_END
; 855  : 
; 856  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 857  :         return _Newvec + _Whereoff;

  0011c	8b c3		 mov	 eax, ebx

; 2030 :         _Mylast  = _Newvec + _Newsize;

  0011e	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 2031 :         _Myend   = _Newvec + _Newcapacity;

  00121	8b 4d f8	 mov	 ecx, DWORD PTR tv607[ebp]
  00124	03 cf		 add	 ecx, edi

; 858  :     }

  00126	5f		 pop	 edi

; 2031 :         _Myend   = _Newvec + _Newcapacity;

  00127	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 858  :     }

  0012a	5e		 pop	 esi
  0012b	5b		 pop	 ebx
  0012c	8b e5		 mov	 esp, ebp
  0012e	5d		 pop	 ebp
  0012f	c2 08 00	 ret	 8
$LN77@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00132	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN96@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 825  :             _Xlength();

  00137	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Xlength
$LN97@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 71   :             _Throw_bad_array_new_length(); // multiply overflow

  0013c	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN94@Emplace_re:
  00141	cc		 int	 3
??$_Emplace_reallocate@ABQAVCGraphicExpandedImageInstance@@@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@AAEPAPAVCGraphicExpandedImageInstance@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Emplace_reallocate<CGraphicExpandedImageInstance * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
;	COMDAT ?remove@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@ABQAVCWindow@UI@@@Z
_TEXT	SEGMENT
__Op$1 = -12						; size = 12
__Val$ = 8						; size = 4
?remove@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@ABQAVCWindow@UI@@@Z PROC ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::remove, COMDAT
; _this$ = ecx

; 1663 :     auto remove(const _Ty& _Val) { // erase each element matching _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx

; 1597 :         explicit _List_node_remove_op(list& _List_) noexcept : _List(_List_), _Head(), _Tail(_STD addressof(_Head)) {}

  0000b	8d 45 f8	 lea	 eax, DWORD PTR __Op$1[ebp+4]
  0000e	33 d2		 xor	 edx, edx
  00010	89 7d f4	 mov	 DWORD PTR __Op$1[ebp], edi
  00013	89 55 f8	 mov	 DWORD PTR __Op$1[ebp+4], edx
  00016	89 45 fc	 mov	 DWORD PTR __Op$1[ebp+8], eax

; 1671 :         const auto _Last         = _My_data._Myhead;

  00019	8b 1f		 mov	 ebx, DWORD PTR [edi]

; 1672 :         const size_type _Oldsize = _My_data._Mysize;
; 1673 :         for (auto _First = _Last->_Next; _First != _Last;) {

  0001b	8b 03		 mov	 eax, DWORD PTR [ebx]
  0001d	3b c3		 cmp	 eax, ebx
  0001f	74 36		 je	 SHORT $LN7@remove
  00021	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
$LL6@remove:

; 1664 :         return remove_if([&](const _Ty& _Other) { return _Other == _Val; });

  00024	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]

; 1674 :             auto _Next = _First->_Next;

  00027	8b 30		 mov	 esi, DWORD PTR [eax]

; 1664 :         return remove_if([&](const _Ty& _Other) { return _Other == _Val; });

  00029	3b 0a		 cmp	 ecx, DWORD PTR [edx]

; 1675 :             if (_Pred(_First->_Myval)) {

  0002b	75 21		 jne	 SHORT $LN16@remove

; 1608 :             --_List._Mypair._Myval2._Mysize;

  0002d	ff 4f 04	 dec	 DWORD PTR [edi+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00030	8b 10		 mov	 edx, DWORD PTR [eax]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

  00032	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1610 :             const auto _Prev = _Removed->_Prev;

  00038	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 1611 :             _Prev->_Next     = _Next;

  0003b	89 11		 mov	 DWORD PTR [ecx], edx

; 1612 :             _Next->_Prev     = _Prev;

  0003d	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 1613 : 
; 1614 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1615 :             // mark removed node for IDL to snip out later
; 1616 :             _Removed->_Prev = nullptr;
; 1617 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1618 : 
; 1619 :             *_Tail = _Removed;

  00040	8b 4d fc	 mov	 ecx, DWORD PTR __Op$1[ebp+8]
  00043	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  00046	89 01		 mov	 DWORD PTR [ecx], eax

; 1620 :             _Tail  = _STD addressof(_Removed->_Next);

  00048	8b 7d f4	 mov	 edi, DWORD PTR __Op$1[ebp]
  0004b	89 45 fc	 mov	 DWORD PTR __Op$1[ebp+8], eax
$LN16@remove:

; 1679 :             _First = _Next;

  0004e	8b c6		 mov	 eax, esi
  00050	3b f3		 cmp	 esi, ebx
  00052	75 d0		 jne	 SHORT $LL6@remove
  00054	8b 55 f8	 mov	 edx, DWORD PTR __Op$1[ebp+4]
$LN7@remove:

; 1646 :             auto _Target = _Head;

  00057	85 d2		 test	 edx, edx

; 1647 :             while (_Target) {

  00059	74 18		 je	 SHORT $LN21@remove
  0005b	0f 1f 44 00 00	 npad	 5
$LL20@remove:

; 1648 :                 auto _Next = _Target->_Next;

  00060	8b 32		 mov	 esi, DWORD PTR [edx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00062	6a 0c		 push	 12			; 0000000cH
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0006a	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1654 :                 _Target = _Next;

  0006d	8b d6		 mov	 edx, esi
  0006f	85 f6		 test	 esi, esi
  00071	75 ed		 jne	 SHORT $LL20@remove
$LN21@remove:
  00073	5f		 pop	 edi

; 1665 :     }

  00074	5e		 pop	 esi
  00075	5b		 pop	 ebx
  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c2 04 00	 ret	 4
?remove@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@ABQAVCWindow@UI@@@Z ENDP ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::remove
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
;	COMDAT ?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z
_TEXT	SEGMENT
__Op$2 = -20						; size = 8
__$EHRec$ = -12						; size = 12
__Val$ = 8						; size = 4
?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z PROC ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::push_back, COMDAT
; _this$ = ecx

; 1258 :     void push_back(const _Ty& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001b	33 c5		 xor	 eax, ebp
  0001d	50		 push	 eax
  0001e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00021	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00027	8b f1		 mov	 esi, ecx

; 1015 :         if (_Mysize == max_size()) {

  00029	81 7e 04 55 55
	55 15		 cmp	 DWORD PTR [esi+4], 357913941 ; 15555555H

; 1259 :         _Emplace(_Mypair._Myval2._Myhead, _Val);

  00030	8b 3e		 mov	 edi, DWORD PTR [esi]

; 1015 :         if (_Mysize == max_size()) {

  00032	74 46		 je	 SHORT $LN62@push_back
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  00034	89 75 ec	 mov	 DWORD PTR __Op$2[ebp], esi

; 87   :         return ::operator new(_Bytes);

  00037	6a 0c		 push	 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 584  :     explicit _List_node_emplace_op2(_Alnode& _Al_, _Valtys&&... _Vals) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  00039	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  00040	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR __Op$2[ebp+4], 0

; 87   :         return ::operator new(_Bytes);

  00047	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 586  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  0004c	8b 4d 08	 mov	 ecx, DWORD PTR __Val$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

  0004f	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 586  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  00052	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00054	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1020 :         ++_Mysize;

  00057	ff 46 04	 inc	 DWORD PTR [esi+4]

; 599  :         const pointer _Insert_after = _Insert_before->_Prev;

  0005a	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]

; 600  :         _Construct_in_place(this->_Ptr->_Next, _Insert_before);

  0005d	89 38		 mov	 DWORD PTR [eax], edi

; 601  :         _Construct_in_place(this->_Ptr->_Prev, _Insert_after);

  0005f	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 602  :         const auto _Result    = this->_Ptr;
; 603  :         this->_Ptr            = pointer{};
; 604  :         _Insert_before->_Prev = _Result;

  00062	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 605  :         _Insert_after->_Next  = _Result;

  00065	89 01		 mov	 DWORD PTR [ecx], eax

; 1260 :     }

  00067	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00071	59		 pop	 ecx
  00072	5f		 pop	 edi
  00073	5e		 pop	 esi
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c2 04 00	 ret	 4
$LN62@push_back:

; 1016 :             _Xlength_error("list too long");

  0007a	68 00 00 00 00	 push	 OFFSET ??_C@_0O@NKNMEGII@list?5too?5long@
  0007f	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN60@push_back:
  00084	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z$1:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Op$2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAVCWindow@UI@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<UI::CWindow *,void *> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?push_back@?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAEXABQAVCWindow@UI@@@Z ENDP ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::push_back
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
;	COMDAT ??1?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@XZ PROC ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::~list<UI::CWindow *,std::allocator<UI::CWindow *> >, COMDAT
; _this$ = ecx

; 1045 :     ~list() noexcept {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 1501 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

  00003	8b 17		 mov	 edx, DWORD PTR [edi]

; 325  :         _Head->_Prev->_Next = nullptr;

  00005	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00008	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 326  : 
; 327  :         auto _Pnode = _Head->_Next;

  0000e	8b 02		 mov	 eax, DWORD PTR [edx]

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00010	85 c0		 test	 eax, eax
  00012	74 15		 je	 SHORT $LN7@list
  00014	56		 push	 esi
$LL8@list:

; 329  :             _Pnext = _Pnode->_Next;

  00015	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00017	6a 0c		 push	 12			; 0000000cH
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001f	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00022	8b c6		 mov	 eax, esi
  00024	85 f6		 test	 esi, esi
  00026	75 ed		 jne	 SHORT $LL8@list
  00028	5e		 pop	 esi
$LN7@list:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00029	6a 0c		 push	 12			; 0000000cH
  0002b	ff 37		 push	 DWORD PTR [edi]
  0002d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00032	83 c4 08	 add	 esp, 8
  00035	5f		 pop	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1051 :     }

  00036	c3		 ret	 0
??1?$list@PAVCWindow@UI@@V?$allocator@PAVCWindow@UI@@@std@@@std@@QAE@XZ ENDP ; std::list<UI::CWindow *,std::allocator<UI::CWindow *> >::~list<UI::CWindow *,std::allocator<UI::CWindow *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@CAXXZ PROC ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Xlength, COMDAT

; 2138 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@CAXXZ ENDP ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterlib\GrpExpandedImageInstance.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterlib\GrpExpandedImageInstance.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterlib\GrpExpandedImageInstance.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterlib\GrpExpandedImageInstance.h
;	COMDAT ?DeleteExpandedImageInstance@CGraphicExpandedImageInstance@@SAXPAV1@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
_pkInstance$ = 8					; size = 4
?DeleteExpandedImageInstance@CGraphicExpandedImageInstance@@SAXPAV1@@Z PROC ; CGraphicExpandedImageInstance::DeleteExpandedImageInstance, COMDAT

; 10   : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 11   : 			pkInstance->Destroy();

  00004	8b 75 08	 mov	 esi, DWORD PTR _pkInstance$[ebp]
  00007	8b ce		 mov	 ecx, esi
  00009	e8 00 00 00 00	 call	 ?Destroy@CGraphicExpandedImageInstance@@QAEXXZ ; CGraphicExpandedImageInstance::Destroy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  0000e	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+20
; File C:\Marty 5.5\Src-Client\Client\eterlib\GrpExpandedImageInstance.h

; 12   : 			ms_kPool.Free(pkInstance);

  00013	89 75 08	 mov	 DWORD PTR _pkData$[ebp], esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  00016	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+24
  0001c	74 0c		 je	 SHORT $LN8@DeleteExpa

; 797  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  0001e	89 30		 mov	 DWORD PTR [eax], esi

; 798  :         } else {
; 799  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 800  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 801  :             _ASAN_VECTOR_RELEASE_GUARD;
; 802  :         }
; 803  : 
; 804  :         _Orphan_range(_Mylast, _Mylast);
; 805  :         _Ty& _Result = *_Mylast;
; 806  :         ++_Mylast;

  00020	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+20, 4
  00027	5e		 pop	 esi
; File C:\Marty 5.5\Src-Client\Client\eterlib\GrpExpandedImageInstance.h

; 13   : 		}

  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
$LN8@DeleteExpa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0002a	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  0002d	51		 push	 ecx
  0002e	50		 push	 eax
  0002f	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CGraphicExpandedImageInstance@@2V?$CDynamicPool@VCGraphicExpandedImageInstance@@@@A+16
  00034	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicExpandedImageInstance@@@?$vector@PAVCGraphicExpandedImageInstance@@V?$allocator@PAVCGraphicExpandedImageInstance@@@std@@@std@@AAEPAPAVCGraphicExpandedImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicExpandedImageInstance *,std::allocator<CGraphicExpandedImageInstance *> >::_Emplace_reallocate<CGraphicExpandedImageInstance * const &>
  00039	5e		 pop	 esi
; File C:\Marty 5.5\Src-Client\Client\eterlib\GrpExpandedImageInstance.h

; 13   : 		}

  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?DeleteExpandedImageInstance@CGraphicExpandedImageInstance@@SAXPAV1@@Z ENDP ; CGraphicExpandedImageInstance::DeleteExpandedImageInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z
_TEXT	SEGMENT
__Old$1$ = -4						; size = 4
__Ptr$ = 8						; size = 4
$T1 = 12						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 3374 :         _In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx

; 3375 :         // assign [_Ptr, _Ptr + _Count)
; 3376 :         if (_Count <= _Mypair._Myval2._Myres) {

  00005	8b 5d 0c	 mov	 ebx, DWORD PTR __Count$[ebp]
  00008	56		 push	 esi
  00009	8b f1		 mov	 esi, ecx
  0000b	57		 push	 edi
  0000c	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0000f	89 4d fc	 mov	 DWORD PTR __Old$1$[ebp], ecx
  00012	3b d9		 cmp	 ebx, ecx
  00014	77 28		 ja	 SHORT $LN2@assign

; 2226 :         value_type* _Result = _Bx._Buf;

  00016	8b fe		 mov	 edi, esi

; 2244 :         return _BUF_SIZE <= _Myres;

  00018	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 2227 :         if (_Large_string_engaged()) {

  0001b	72 02		 jb	 SHORT $LN5@assign

; 2228 :             _Result = _Unfancy(_Bx._Ptr);

  0001d	8b 3e		 mov	 edi, DWORD PTR [esi]
$LN5@assign:

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0001f	53		 push	 ebx
  00020	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 3377 :             _ASAN_STRING_MODIFY(*this, _Mypair._Myval2._Mysize, _Count);
; 3378 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();
; 3379 :             _Mypair._Myval2._Mysize = _Count;

  00023	89 5e 10	 mov	 DWORD PTR [esi+16], ebx

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00026	57		 push	 edi
  00027	e8 00 00 00 00	 call	 _memmove
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3380 :             _Traits::move(_Old_ptr, _Ptr, _Count);
; 3381 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0002f	c6 04 1f 00	 mov	 BYTE PTR [edi+ebx], 0

; 3390 :             },
; 3391 :             _Ptr);
; 3392 :     }

  00033	8b c6		 mov	 eax, esi
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 08 00	 ret	 8
$LN2@assign:

; 4734 :         if (_New_size > max_size()) {

  0003e	81 fb ff ff ff
	7f		 cmp	 ebx, 2147483647		; 7fffffffH
  00044	0f 87 d4 00 00
	00		 ja	 $LN69@assign

; 4714 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  0004a	8b fb		 mov	 edi, ebx
  0004c	83 cf 0f	 or	 edi, 15			; 0000000fH
  0004f	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH

; 4715 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00055	76 15		 jbe	 SHORT $LN19@assign

; 4716 :             return _Max;

  00057	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  0005c	bf ff ff ff 7f	 mov	 edi, 2147483647		; 7fffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00061	50		 push	 eax
  00062	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00067	83 c4 04	 add	 esp, 4
  0006a	eb 52		 jmp	 SHORT $LN67@assign
$LN19@assign:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4719 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  0006c	8b d1		 mov	 edx, ecx
  0006e	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00073	d1 ea		 shr	 edx, 1
  00075	2b c2		 sub	 eax, edx
  00077	3b c8		 cmp	 ecx, eax
  00079	76 15		 jbe	 SHORT $LN20@assign

; 4720 :             return _Max;

  0007b	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  00080	bf ff ff ff 7f	 mov	 edi, 2147483647		; 7fffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  0008b	83 c4 04	 add	 esp, 4
  0008e	eb 2e		 jmp	 SHORT $LN67@assign
$LN20@assign:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4723 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00090	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 47   :     return _Left < _Right ? _Right : _Left;

  00093	3b f8		 cmp	 edi, eax
  00095	0f 42 f8	 cmovb	 edi, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4741 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00098	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0009b	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  000a0	72 0b		 jb	 SHORT $LN27@assign

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  000a2	50		 push	 eax
  000a3	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  000a8	83 c4 04	 add	 esp, 4
  000ab	eb 11		 jmp	 SHORT $LN67@assign
$LN27@assign:

; 240  :         }
; 241  :     }
; 242  : #endif // defined(_M_IX86) || defined(_M_X64)
; 243  : 
; 244  :     if (_Bytes != 0) {

  000ad	85 c0		 test	 eax, eax
  000af	74 0b		 je	 SHORT $LN28@assign

; 87   :         return ::operator new(_Bytes);

  000b1	50		 push	 eax
  000b2	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000b7	83 c4 04	 add	 esp, 4

; 245  :         return _Traits::_Allocate(_Bytes);

  000ba	eb 02		 jmp	 SHORT $LN67@assign
$LN28@assign:

; 246  :     }
; 247  : 
; 248  :     return nullptr;

  000bc	33 c0		 xor	 eax, eax
$LN67@assign:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000be	53		 push	 ebx
  000bf	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 4746 :         _Mypair._Myval2._Mysize = _New_size;

  000c2	89 45 0c	 mov	 DWORD PTR $T1[ebp], eax

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000c5	50		 push	 eax

; 4746 :         _Mypair._Myval2._Mysize = _New_size;

  000c6	89 5e 10	 mov	 DWORD PTR [esi+16], ebx

; 4747 :         _Mypair._Myval2._Myres  = _New_capacity;

  000c9	89 7e 14	 mov	 DWORD PTR [esi+20], edi

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000cc	e8 00 00 00 00	 call	 _memcpy

; 3389 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000d1	8b 7d 0c	 mov	 edi, DWORD PTR $T1[ebp]

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000d4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4749 :         if (_BUF_SIZE <= _Old_capacity) {

  000d7	8b 45 fc	 mov	 eax, DWORD PTR __Old$1$[ebp]

; 3389 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000da	c6 04 1f 00	 mov	 BYTE PTR [edi+ebx], 0

; 4749 :         if (_BUF_SIZE <= _Old_capacity) {

  000de	83 f8 10	 cmp	 eax, 16			; 00000010H
  000e1	72 29		 jb	 SHORT $LN13@assign

; 4750 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  000e3	8d 48 01	 lea	 ecx, DWORD PTR [eax+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000e6	8b 06		 mov	 eax, DWORD PTR [esi]

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000e8	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000ee	72 12		 jb	 SHORT $LN50@assign

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f0	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000f3	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000f6	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000f8	83 c0 fc	 add	 eax, -4			; fffffffcH
  000fb	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000fe	77 19		 ja	 SHORT $LN47@assign

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00100	8b c2		 mov	 eax, edx
$LN50@assign:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00102	51		 push	 ecx
  00103	50		 push	 eax
  00104	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00109	83 c4 08	 add	 esp, 8
$LN13@assign:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3385 :         return _Reallocate_for(

  0010c	89 3e		 mov	 DWORD PTR [esi], edi

; 3390 :             },
; 3391 :             _Ptr);
; 3392 :     }

  0010e	8b c6		 mov	 eax, esi
  00110	5f		 pop	 edi
  00111	5e		 pop	 esi
  00112	5b		 pop	 ebx
  00113	8b e5		 mov	 esp, ebp
  00115	5d		 pop	 ebp
  00116	c2 08 00	 ret	 8
$LN47@assign:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00119	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN69@assign:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4735 :             _Xlen_string(); // result too long

  0011e	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN65@assign:
  00123	cc		 int	 3
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z
_TEXT	SEGMENT
tv507 = -12						; size = 4
__Old$1$ = -8						; size = 4
tv519 = -4						; size = 4
__Old_size$1$ = -4					; size = 4
__Ptr$ = 8						; size = 4
tv512 = 12						; size = 4
$T1 = 12						; size = 4
__Count$ = 12						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx

; 3268 :         _In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 3269 :         // append [_Ptr, _Ptr + _Count)
; 3270 :         const size_type _Old_size = _Mypair._Myval2._Mysize;
; 3271 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

  00007	8b 5d 0c	 mov	 ebx, DWORD PTR __Count$[ebp]
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b f9		 mov	 edi, ecx
  0000e	8b 57 14	 mov	 edx, DWORD PTR [edi+20]
  00011	8b c2		 mov	 eax, edx
  00013	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  00016	2b c1		 sub	 eax, ecx
  00018	89 4d fc	 mov	 DWORD PTR __Old_size$1$[ebp], ecx
  0001b	89 55 f8	 mov	 DWORD PTR __Old$1$[ebp], edx
  0001e	3b d8		 cmp	 ebx, eax
  00020	77 2e		 ja	 SHORT $LN2@append

; 3272 :             _ASAN_STRING_MODIFY(*this, _Old_size, _Old_size + _Count);
; 3273 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

  00022	8d 04 19	 lea	 eax, DWORD PTR [ecx+ebx]
  00025	89 47 10	 mov	 DWORD PTR [edi+16], eax

; 2226 :         value_type* _Result = _Bx._Buf;

  00028	8b c7		 mov	 eax, edi

; 2244 :         return _BUF_SIZE <= _Myres;

  0002a	83 fa 10	 cmp	 edx, 16			; 00000010H

; 2227 :         if (_Large_string_engaged()) {

  0002d	72 02		 jb	 SHORT $LN5@append

; 2228 :             _Result = _Unfancy(_Bx._Ptr);

  0002f	8b 07		 mov	 eax, DWORD PTR [edi]
$LN5@append:

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00031	53		 push	 ebx
  00032	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 3274 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();
; 3275 :             _Traits::move(_Old_ptr + _Old_size, _Ptr, _Count);

  00035	8d 34 08	 lea	 esi, DWORD PTR [eax+ecx]

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00038	56		 push	 esi
  00039	e8 00 00 00 00	 call	 _memmove
  0003e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3276 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

  00041	c6 04 1e 00	 mov	 BYTE PTR [esi+ebx], 0

; 3289 :     }

  00045	8b c7		 mov	 eax, edi
  00047	5f		 pop	 edi
  00048	5e		 pop	 esi
  00049	5b		 pop	 ebx
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c2 08 00	 ret	 8
$LN2@append:

; 4766 :         if (max_size() - _Old_size < _Size_increase) {

  00050	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00055	2b c1		 sub	 eax, ecx
  00057	3b c3		 cmp	 eax, ebx
  00059	0f 82 26 01 00
	00		 jb	 $LN77@append

; 4768 :         }
; 4769 : 
; 4770 :         const size_type _New_size     = _Old_size + _Size_increase;

  0005f	8d 34 19	 lea	 esi, DWORD PTR [ecx+ebx]

; 4714 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00062	83 ce 0f	 or	 esi, 15			; 0000000fH
  00065	81 fe ff ff ff
	7f		 cmp	 esi, 2147483647		; 7fffffffH

; 4715 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  0006b	76 18		 jbe	 SHORT $LN19@append

; 4716 :             return _Max;

  0006d	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  00072	be ff ff ff 7f	 mov	 esi, 2147483647		; 7fffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  0007d	8b 4d fc	 mov	 ecx, DWORD PTR __Old_size$1$[ebp]
  00080	83 c4 04	 add	 esp, 4
  00083	eb 61		 jmp	 SHORT $LN75@append
$LN19@append:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4719 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  00085	8b c2		 mov	 eax, edx
  00087	d1 e8		 shr	 eax, 1
  00089	89 45 0c	 mov	 DWORD PTR tv512[ebp], eax
  0008c	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00091	2b 45 0c	 sub	 eax, DWORD PTR tv512[ebp]
  00094	3b d0		 cmp	 edx, eax
  00096	76 18		 jbe	 SHORT $LN20@append

; 4720 :             return _Max;

  00098	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  0009d	be ff ff ff 7f	 mov	 esi, 2147483647		; 7fffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  000a2	50		 push	 eax
  000a3	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  000a8	8b 4d fc	 mov	 ecx, DWORD PTR __Old_size$1$[ebp]
  000ab	83 c4 04	 add	 esp, 4
  000ae	eb 36		 jmp	 SHORT $LN75@append
$LN20@append:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4723 :         return (_STD max)(_Masked, _Old + _Old / 2);

  000b0	8b 45 0c	 mov	 eax, DWORD PTR tv512[ebp]
  000b3	03 c2		 add	 eax, edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 47   :     return _Left < _Right ? _Right : _Left;

  000b5	3b f0		 cmp	 esi, eax
  000b7	0f 42 f0	 cmovb	 esi, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4774 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000ba	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000bd	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  000c2	72 0e		 jb	 SHORT $LN27@append

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  000c4	50		 push	 eax
  000c5	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  000ca	8b 4d fc	 mov	 ecx, DWORD PTR __Old_size$1$[ebp]
  000cd	83 c4 04	 add	 esp, 4
  000d0	eb 14		 jmp	 SHORT $LN75@append
$LN27@append:

; 240  :         }
; 241  :     }
; 242  : #endif // defined(_M_IX86) || defined(_M_X64)
; 243  : 
; 244  :     if (_Bytes != 0) {

  000d2	85 c0		 test	 eax, eax
  000d4	74 0e		 je	 SHORT $LN28@append

; 87   :         return ::operator new(_Bytes);

  000d6	50		 push	 eax
  000d7	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 245  :         return _Traits::_Allocate(_Bytes);

  000dc	8b 4d fc	 mov	 ecx, DWORD PTR __Old_size$1$[ebp]

; 87   :         return ::operator new(_Bytes);

  000df	83 c4 04	 add	 esp, 4

; 245  :         return _Traits::_Allocate(_Bytes);

  000e2	eb 02		 jmp	 SHORT $LN75@append
$LN28@append:

; 246  :     }
; 247  : 
; 248  :     return nullptr;

  000e4	33 c0		 xor	 eax, eax
$LN75@append:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4782 :         if (_BUF_SIZE <= _Old_capacity) {

  000e6	83 7d f8 10	 cmp	 DWORD PTR __Old$1$[ebp], 16 ; 00000010H
  000ea	8d 14 19	 lea	 edx, DWORD PTR [ecx+ebx]
  000ed	89 77 14	 mov	 DWORD PTR [edi+20], esi
  000f0	8d 34 08	 lea	 esi, DWORD PTR [eax+ecx]
  000f3	89 57 10	 mov	 DWORD PTR [edi+16], edx
  000f6	8d 14 1e	 lea	 edx, DWORD PTR [esi+ebx]
  000f9	89 45 0c	 mov	 DWORD PTR $T1[ebp], eax
  000fc	89 75 fc	 mov	 DWORD PTR tv519[ebp], esi
  000ff	89 55 f4	 mov	 DWORD PTR tv507[ebp], edx
  00102	51		 push	 ecx
  00103	72 56		 jb	 SHORT $LN13@append

; 4783 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

  00105	8b 37		 mov	 esi, DWORD PTR [edi]

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00107	56		 push	 esi
  00108	50		 push	 eax
  00109	e8 00 00 00 00	 call	 _memcpy
  0010e	53		 push	 ebx
  0010f	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00112	ff 75 fc	 push	 DWORD PTR tv519[ebp]
  00115	e8 00 00 00 00	 call	 _memcpy

; 3286 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  0011a	8b 45 f4	 mov	 eax, DWORD PTR tv507[ebp]

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0011d	83 c4 18	 add	 esp, 24			; 00000018H

; 4785 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

  00120	8b 4d f8	 mov	 ecx, DWORD PTR __Old$1$[ebp]
  00123	41		 inc	 ecx

; 3286 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  00124	c6 00 00	 mov	 BYTE PTR [eax], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00127	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0012d	72 12		 jb	 SHORT $LN52@append

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0012f	8b 56 fc	 mov	 edx, DWORD PTR [esi-4]
  00132	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00135	2b f2		 sub	 esi, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00137	8d 46 fc	 lea	 eax, DWORD PTR [esi-4]
  0013a	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0013d	77 4b		 ja	 SHORT $LN49@append

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0013f	8b f2		 mov	 esi, edx
$LN52@append:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00141	51		 push	 ecx
  00142	56		 push	 esi
  00143	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3280 :         return _Reallocate_grow_by(

  00148	8b 45 0c	 mov	 eax, DWORD PTR $T1[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  0014b	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3280 :         return _Reallocate_grow_by(

  0014e	89 07		 mov	 DWORD PTR [edi], eax

; 3289 :     }

  00150	8b c7		 mov	 eax, edi
  00152	5f		 pop	 edi
  00153	5e		 pop	 esi
  00154	5b		 pop	 ebx
  00155	8b e5		 mov	 esp, ebp
  00157	5d		 pop	 ebp
  00158	c2 08 00	 ret	 8
$LN13@append:

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0015b	57		 push	 edi
  0015c	50		 push	 eax
  0015d	e8 00 00 00 00	 call	 _memcpy
  00162	53		 push	 ebx
  00163	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00166	56		 push	 esi
  00167	e8 00 00 00 00	 call	 _memcpy

; 3286 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  0016c	8d 04 1e	 lea	 eax, DWORD PTR [esi+ebx]

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0016f	83 c4 18	 add	 esp, 24			; 00000018H

; 3286 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  00172	c6 00 00	 mov	 BYTE PTR [eax], 0

; 3280 :         return _Reallocate_grow_by(

  00175	8b 45 0c	 mov	 eax, DWORD PTR $T1[ebp]
  00178	89 07		 mov	 DWORD PTR [edi], eax

; 3289 :     }

  0017a	8b c7		 mov	 eax, edi
  0017c	5f		 pop	 edi
  0017d	5e		 pop	 esi
  0017e	5b		 pop	 ebx
  0017f	8b e5		 mov	 esp, ebp
  00181	5d		 pop	 ebp
  00182	c2 08 00	 ret	 8
$LN77@append:

; 4767 :             _Xlen_string(); // result too long

  00185	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN49@append:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0018a	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN73@append:
  0018f	cc		 int	 3
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 3118 :     _CONSTEXPR20 ~basic_string() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2244 :         return _BUF_SIZE <= _Myres;

  00003	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00006	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4832 :         if (_My_data._Large_string_engaged()) {

  00009	72 27		 jb	 SHORT $LN12@basic_stri
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000b	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  0000d	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0000e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00014	72 12		 jb	 SHORT $LN22@basic_stri

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00016	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00019	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0001c	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0001e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00021	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00024	77 1f		 ja	 SHORT $LN19@basic_stri

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00026	8b c2		 mov	 eax, edx
$LN22@basic_stri:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00028	51		 push	 ecx
  00029	50		 push	 eax
  0002a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002f	83 c4 08	 add	 esp, 8
$LN12@basic_stri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

  00032	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;

  00039	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00040	c6 06 00	 mov	 BYTE PTR [esi], 0
  00043	5e		 pop	 esi

; 3126 :     }

  00044	c3		 ret	 0
$LN19@basic_stri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00045	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN30@basic_stri:
  0004a	cc		 int	 3
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2312 :     _Xlength_error("string too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen_strin:
  0000a	cc		 int	 3
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 331  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 332  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
END

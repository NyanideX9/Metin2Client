; Listing generated by Microsoft (R) Optimizing Compiler Version 19.37.32822.0 

	TITLE	C:\Marty 5.5\Src-Client\Client\GameLib\Distribute\RaceDataFile.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
PUBLIC	??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vector deleting destructor'
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDe'
	DB	'corator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDec'
	DB	'orator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpd'
	DB	'ateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@N'
	DB	'EffectUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEff'
	DB	'ectUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffe'
	DB	'ctUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecora'
	DB	'tor@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDeco'
	DB	'rator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
CONST	SEGMENT
?_Fake_alloc@std@@3U_Fake_allocator@1@B	ORG $+1		; std::_Fake_alloc
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	___local_stdio_printf_options
PUBLIC	__snprintf
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	?LoadRaceData@CRaceData@@QAEHPBD@Z		; CRaceData::LoadRaceData
PUBLIC	??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position@	; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
PUBLIC	?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
PUBLIC	??_C@_0BC@NDOIOPFI@basemodelfilename@		; `string'
PUBLIC	??_C@_0N@FNBFCAFH@treefilename@			; `string'
PUBLIC	??_C@_0BC@KCFLFBNM@attributefilename@		; `string'
PUBLIC	??_C@_0O@OKJLKLAI@smokebonename@		; `string'
PUBLIC	??_C@_0BD@HKKNCHKI@motionlistfilename@		; `string'
PUBLIC	??_C@_0O@OGIHOCKK@smokefilename@		; `string'
PUBLIC	??_C@_0CA@DLOGAHGG@SmokeFileName?5ArgCount?$FL?$CFd?$FN?$CF2?$DN?$DN0@ ; `string'
PUBLIC	??_C@_0CI@MHBPKAGN@SmokeFileName?5SmokeNum?$FL?$CFd?$FN?5OUT?5@ ; `string'
PUBLIC	??_C@_0CF@GEINCGMO@CRaceData?3?3RegisterEffect2?$CI?$CFs?$CJ?5@ ; `string'
PUBLIC	??_C@_09IOJGLPMI@shapedata@			; `string'
PUBLIC	??_C@_08PEIJGPHF@pathname@			; `string'
PUBLIC	??_C@_0P@BDBLEP@shapedatacount@			; `string'
PUBLIC	??_C@_0M@GCDLCIFI@specialpath@			; `string'
PUBLIC	??_C@_0L@BLAJFEIP@shapeindex@			; `string'
PUBLIC	??_C@_05NCCFOPHA@model@				; `string'
PUBLIC	??_C@_0M@NFFHMNPF@local_model@			; `string'
PUBLIC	??_C@_0BB@OAFGNDMP@local_sourceskin@		; `string'
PUBLIC	??_C@_0BB@CMMEEAHN@local_targetskin@		; `string'
PUBLIC	??_C@_0L@ILFPKBGB@sourceskin@			; `string'
PUBLIC	??_C@_0L@EHMNDCND@targetskin@			; `string'
PUBLIC	??_C@_0N@LBPJELHP@sourceskin?$CFu@		; `string'
PUBLIC	??_C@_0N@OAMIJCJ@targetskin?$CFu@		; `string'
PUBLIC	??_C@_08HKPOBGLF@hairdata@			; `string'
PUBLIC	??_C@_0O@HCGNHJP@hairdatacount@			; `string'
PUBLIC	??_C@_09DFEJDBKH@hairindex@			; `string'
PUBLIC	??_C@_0O@OPEMPJIC@attachingdata@		; `string'
PUBLIC	??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@	; `string'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	__atoi64:PROC
EXTRN	_tolower:PROC
EXTRN	___stdio_common_vsprintf:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	?TraceError@@YAXPBDZZ:PROC			; TraceError
EXTRN	??0CTextFileLoader@@QAE@XZ:PROC			; CTextFileLoader::CTextFileLoader
EXTRN	??1CTextFileLoader@@UAE@XZ:PROC			; CTextFileLoader::~CTextFileLoader
EXTRN	?Load@CTextFileLoader@@QAE_NPBD@Z:PROC		; CTextFileLoader::Load
EXTRN	?SetTop@CTextFileLoader@@QAEXXZ:PROC		; CTextFileLoader::SetTop
EXTRN	?SetChildNode@CTextFileLoader@@QAEHPBD@Z:PROC	; CTextFileLoader::SetChildNode
EXTRN	?SetChildNode@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@K@Z:PROC ; CTextFileLoader::SetChildNode
EXTRN	?SetParentNode@CTextFileLoader@@QAEHXZ:PROC	; CTextFileLoader::SetParentNode
EXTRN	?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z:PROC ; CTextFileLoader::GetTokenVector
EXTRN	?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z:PROC ; CTextFileLoader::GetTokenDoubleWord
EXTRN	?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z:PROC ; CTextFileLoader::GetTokenString
EXTRN	?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z:PROC ; NRaceData::LoadAttachingData
EXTRN	?SetShapeModel@CRaceData@@QAEXIPBD@Z:PROC	; CRaceData::SetShapeModel
EXTRN	?AppendShapeSkin@CRaceData@@QAEXIIPBD0@Z:PROC	; CRaceData::AppendShapeSkin
EXTRN	?SetHairSkin@CRaceData@@QAEXIIPBD00@Z:PROC	; CRaceData::SetHairSkin
EXTRN	?RegisterEffect2@CEffectManager@@QAEHPBDPAK_N@Z:PROC ; CEffectManager::RegisterEffect2
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memcpy:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A DD 01H DUP (?) ; CSingleton<CEffectManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?__szSkin1@?BN@??LoadRaceData@CRaceData@@QAEHPBD@Z@4PADA
_BSS	SEGMENT
?__szSkin1@?BN@??LoadRaceData@CRaceData@@QAEHPBD@Z@4PADA DB 0cH DUP (?) ; `CRaceData::LoadRaceData'::`29'::__szSkin1
_BSS	ENDS
;	COMDAT ?__szSkin2@?BN@??LoadRaceData@CRaceData@@QAEHPBD@Z@4PADA
_BSS	SEGMENT
?__szSkin2@?BN@??LoadRaceData@CRaceData@@QAEHPBD@Z@4PADA DB 0cH DUP (?) ; `CRaceData::LoadRaceData'::`29'::__szSkin2
_BSS	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT ??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@
CONST	SEGMENT
??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@ DB 'invalid vector subscri'
	DB	'pt', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OPEMPJIC@attachingdata@
CONST	SEGMENT
??_C@_0O@OPEMPJIC@attachingdata@ DB 'attachingdata', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09DFEJDBKH@hairindex@
CONST	SEGMENT
??_C@_09DFEJDBKH@hairindex@ DB 'hairindex', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HCGNHJP@hairdatacount@
CONST	SEGMENT
??_C@_0O@HCGNHJP@hairdatacount@ DB 'hairdatacount', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08HKPOBGLF@hairdata@
CONST	SEGMENT
??_C@_08HKPOBGLF@hairdata@ DB 'hairdata', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OAMIJCJ@targetskin?$CFu@
CONST	SEGMENT
??_C@_0N@OAMIJCJ@targetskin?$CFu@ DB 'targetskin%u', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LBPJELHP@sourceskin?$CFu@
CONST	SEGMENT
??_C@_0N@LBPJELHP@sourceskin?$CFu@ DB 'sourceskin%u', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EHMNDCND@targetskin@
CONST	SEGMENT
??_C@_0L@EHMNDCND@targetskin@ DB 'targetskin', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@ILFPKBGB@sourceskin@
CONST	SEGMENT
??_C@_0L@ILFPKBGB@sourceskin@ DB 'sourceskin', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CMMEEAHN@local_targetskin@
CONST	SEGMENT
??_C@_0BB@CMMEEAHN@local_targetskin@ DB 'local_targetskin', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OAFGNDMP@local_sourceskin@
CONST	SEGMENT
??_C@_0BB@OAFGNDMP@local_sourceskin@ DB 'local_sourceskin', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NFFHMNPF@local_model@
CONST	SEGMENT
??_C@_0M@NFFHMNPF@local_model@ DB 'local_model', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05NCCFOPHA@model@
CONST	SEGMENT
??_C@_05NCCFOPHA@model@ DB 'model', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BLAJFEIP@shapeindex@
CONST	SEGMENT
??_C@_0L@BLAJFEIP@shapeindex@ DB 'shapeindex', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GCDLCIFI@specialpath@
CONST	SEGMENT
??_C@_0M@GCDLCIFI@specialpath@ DB 'specialpath', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BDBLEP@shapedatacount@
CONST	SEGMENT
??_C@_0P@BDBLEP@shapedatacount@ DB 'shapedatacount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08PEIJGPHF@pathname@
CONST	SEGMENT
??_C@_08PEIJGPHF@pathname@ DB 'pathname', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09IOJGLPMI@shapedata@
CONST	SEGMENT
??_C@_09IOJGLPMI@shapedata@ DB 'shapedata', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@GEINCGMO@CRaceData?3?3RegisterEffect2?$CI?$CFs?$CJ?5@
CONST	SEGMENT
??_C@_0CF@GEINCGMO@CRaceData?3?3RegisterEffect2?$CI?$CFs?$CJ?5@ DB 'CRace'
	DB	'Data::RegisterEffect2(%s) ERROR', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@MHBPKAGN@SmokeFileName?5SmokeNum?$FL?$CFd?$FN?5OUT?5@
CONST	SEGMENT
??_C@_0CI@MHBPKAGN@SmokeFileName?5SmokeNum?$FL?$CFd?$FN?5OUT?5@ DB 'Smoke'
	DB	'FileName SmokeNum[%d] OUT OF RANGE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@DLOGAHGG@SmokeFileName?5ArgCount?$FL?$CFd?$FN?$CF2?$DN?$DN0@
CONST	SEGMENT
??_C@_0CA@DLOGAHGG@SmokeFileName?5ArgCount?$FL?$CFd?$FN?$CF2?$DN?$DN0@ DB 'S'
	DB	'mokeFileName ArgCount[%d]%2==0', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OGIHOCKK@smokefilename@
CONST	SEGMENT
??_C@_0O@OGIHOCKK@smokefilename@ DB 'smokefilename', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HKKNCHKI@motionlistfilename@
CONST	SEGMENT
??_C@_0BD@HKKNCHKI@motionlistfilename@ DB 'motionlistfilename', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OKJLKLAI@smokebonename@
CONST	SEGMENT
??_C@_0O@OKJLKLAI@smokebonename@ DB 'smokebonename', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KCFLFBNM@attributefilename@
CONST	SEGMENT
??_C@_0BC@KCFLFBNM@attributefilename@ DB 'attributefilename', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FNBFCAFH@treefilename@
CONST	SEGMENT
??_C@_0N@FNBFCAFH@treefilename@ DB 'treefilename', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NDOIOPFI@basemodelfilename@
CONST	SEGMENT
??_C@_0BC@NDOIOPFI@basemodelfilename@ DB 'basemodelfilename', 00H ; `string'
CONST	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position@ DB 'invalid string position'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?LoadRaceData@CRaceData@@QAEHPBD@Z DD 019930522H
	DD	02cH
	DD	FLAT:__unwindtable$?LoadRaceData@CRaceData@@QAEHPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?LoadRaceData@CRaceData@@QAEHPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$4
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$5
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$6
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$7
	DD	07H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$8
	DD	08H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$9
	DD	07H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$10
	DD	07H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$11
	DD	07H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$12
	DD	07H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$13
	DD	0dH
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$14
	DD	0dH
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$15
	DD	0dH
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$16
	DD	0dH
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$17
	DD	011H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$18
	DD	012H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$19
	DD	013H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$20
	DD	012H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$21
	DD	015H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$22
	DD	012H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$23
	DD	017H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$24
	DD	012H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$25
	DD	019H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$26
	DD	012H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$27
	DD	01bH
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$28
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$29
	DD	01dH
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$30
	DD	01eH
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$31
	DD	01dH
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$32
	DD	01dH
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$33
	DD	01dH
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$34
	DD	01dH
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$35
	DD	023H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$36
	DD	024H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$37
	DD	025H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$38
	DD	026H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$39
	DD	027H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$40
	DD	025H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$41
	DD	029H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$42
	DD	02aH
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$43
xdata$x	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00026	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00029	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0002c	74 03		 je	 SHORT $LN24@CDynamicPo

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  0002e	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN24@CDynamicPo:

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00031	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00034	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00037	74 03		 je	 SHORT $LN27@CDynamicPo

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  00039	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN27@CDynamicPo:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  0003c	85 c0		 test	 eax, eax
  0003e	74 41		 je	 SHORT $LN33@CDynamicPo

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00040	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00043	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00045	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00048	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0004e	72 12		 jb	 SHORT $LN49@CDynamicPo

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00050	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00053	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00056	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00058	83 c0 fc	 add	 eax, -4			; fffffffcH
  0005b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0005e	77 6d		 ja	 SHORT $LN71@CDynamicPo

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00060	8b c2		 mov	 eax, edx
$LN49@CDynamicPo:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00062	51		 push	 ecx
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  00069	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00070	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2050 :             _Mylast  = nullptr;

  00073	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2051 :             _Myend   = nullptr;

  0007a	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN33@CDynamicPo:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  00081	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00084	85 c0		 test	 eax, eax
  00086	74 41		 je	 SHORT $LN58@CDynamicPo

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00088	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  0008b	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0008d	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00090	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00096	72 12		 jb	 SHORT $LN74@CDynamicPo

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00098	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0009b	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0009e	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000a0	83 c0 fc	 add	 eax, -4			; fffffffcH
  000a3	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000a6	77 25		 ja	 SHORT $LN71@CDynamicPo

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000a8	8b c2		 mov	 eax, edx
$LN74@CDynamicPo:

; 265  :         ::operator delete(_Ptr, _Bytes);

  000aa	51		 push	 ecx
  000ab	50		 push	 eax
  000ac	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  000b1	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  000b8	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2050 :             _Mylast  = nullptr;

  000bb	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2051 :             _Myend   = nullptr;

  000c2	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN58@CDynamicPo:
  000c9	5f		 pop	 edi
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 142  : 		}

  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	c3		 ret	 0
$LN71@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000cd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN92@CDynamicPo:
  000d2	cc		 int	 3
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00026	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00029	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0002c	74 03		 je	 SHORT $LN24@CDynamicPo

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  0002e	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN24@CDynamicPo:

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00031	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00034	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00037	74 03		 je	 SHORT $LN27@CDynamicPo

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  00039	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN27@CDynamicPo:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  0003c	85 c0		 test	 eax, eax
  0003e	74 41		 je	 SHORT $LN33@CDynamicPo

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00040	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00043	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00045	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00048	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0004e	72 12		 jb	 SHORT $LN49@CDynamicPo

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00050	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00053	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00056	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00058	83 c0 fc	 add	 eax, -4			; fffffffcH
  0005b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0005e	77 6d		 ja	 SHORT $LN71@CDynamicPo

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00060	8b c2		 mov	 eax, edx
$LN49@CDynamicPo:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00062	51		 push	 ecx
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  00069	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00070	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2050 :             _Mylast  = nullptr;

  00073	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2051 :             _Myend   = nullptr;

  0007a	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN33@CDynamicPo:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  00081	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00084	85 c0		 test	 eax, eax
  00086	74 41		 je	 SHORT $LN58@CDynamicPo

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00088	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  0008b	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0008d	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00090	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00096	72 12		 jb	 SHORT $LN74@CDynamicPo

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00098	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0009b	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0009e	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000a0	83 c0 fc	 add	 eax, -4			; fffffffcH
  000a3	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000a6	77 25		 ja	 SHORT $LN71@CDynamicPo

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000a8	8b c2		 mov	 eax, edx
$LN74@CDynamicPo:

; 265  :         ::operator delete(_Ptr, _Bytes);

  000aa	51		 push	 ecx
  000ab	50		 push	 eax
  000ac	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  000b1	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  000b8	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2050 :             _Mylast  = nullptr;

  000bb	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2051 :             _Myend   = nullptr;

  000c2	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN58@CDynamicPo:
  000c9	5f		 pop	 edi
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 142  : 		}

  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	c3		 ret	 0
$LN71@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000cd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN92@CDynamicPo:
  000d2	cc		 int	 3
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00026	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00029	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0002c	74 03		 je	 SHORT $LN24@CDynamicPo

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  0002e	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN24@CDynamicPo:

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00031	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00034	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00037	74 03		 je	 SHORT $LN27@CDynamicPo

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  00039	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN27@CDynamicPo:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  0003c	85 c0		 test	 eax, eax
  0003e	74 41		 je	 SHORT $LN33@CDynamicPo

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00040	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00043	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00045	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00048	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0004e	72 12		 jb	 SHORT $LN49@CDynamicPo

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00050	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00053	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00056	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00058	83 c0 fc	 add	 eax, -4			; fffffffcH
  0005b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0005e	77 6d		 ja	 SHORT $LN71@CDynamicPo

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00060	8b c2		 mov	 eax, edx
$LN49@CDynamicPo:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00062	51		 push	 ecx
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  00069	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00070	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2050 :             _Mylast  = nullptr;

  00073	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2051 :             _Myend   = nullptr;

  0007a	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN33@CDynamicPo:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  00081	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00084	85 c0		 test	 eax, eax
  00086	74 41		 je	 SHORT $LN58@CDynamicPo

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00088	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  0008b	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0008d	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00090	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00096	72 12		 jb	 SHORT $LN74@CDynamicPo

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00098	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0009b	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0009e	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000a0	83 c0 fc	 add	 eax, -4			; fffffffcH
  000a3	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000a6	77 25		 ja	 SHORT $LN71@CDynamicPo

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000a8	8b c2		 mov	 eax, edx
$LN74@CDynamicPo:

; 265  :         ::operator delete(_Ptr, _Bytes);

  000aa	51		 push	 ecx
  000ab	50		 push	 eax
  000ac	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  000b1	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  000b8	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2050 :             _Mylast  = nullptr;

  000bb	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2051 :             _Myend   = nullptr;

  000c2	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN58@CDynamicPo:
  000c9	5f		 pop	 edi
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 142  : 		}

  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	c3		 ret	 0
$LN71@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000cd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN92@CDynamicPo:
  000d2	cc		 int	 3
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00026	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00029	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0002c	74 03		 je	 SHORT $LN24@CDynamicPo

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  0002e	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN24@CDynamicPo:

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00031	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00034	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00037	74 03		 je	 SHORT $LN27@CDynamicPo

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  00039	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN27@CDynamicPo:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  0003c	85 c0		 test	 eax, eax
  0003e	74 41		 je	 SHORT $LN33@CDynamicPo

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00040	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00043	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00045	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00048	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0004e	72 12		 jb	 SHORT $LN49@CDynamicPo

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00050	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00053	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00056	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00058	83 c0 fc	 add	 eax, -4			; fffffffcH
  0005b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0005e	77 6d		 ja	 SHORT $LN71@CDynamicPo

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00060	8b c2		 mov	 eax, edx
$LN49@CDynamicPo:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00062	51		 push	 ecx
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  00069	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00070	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2050 :             _Mylast  = nullptr;

  00073	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2051 :             _Myend   = nullptr;

  0007a	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN33@CDynamicPo:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  00081	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00084	85 c0		 test	 eax, eax
  00086	74 41		 je	 SHORT $LN58@CDynamicPo

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00088	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  0008b	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0008d	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00090	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00096	72 12		 jb	 SHORT $LN74@CDynamicPo

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00098	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0009b	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0009e	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000a0	83 c0 fc	 add	 eax, -4			; fffffffcH
  000a3	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000a6	77 25		 ja	 SHORT $LN71@CDynamicPo

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000a8	8b c2		 mov	 eax, edx
$LN74@CDynamicPo:

; 265  :         ::operator delete(_Ptr, _Bytes);

  000aa	51		 push	 ecx
  000ab	50		 push	 eax
  000ac	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  000b1	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  000b8	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2050 :             _Mylast  = nullptr;

  000bb	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2051 :             _Myend   = nullptr;

  000c2	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN58@CDynamicPo:
  000c9	5f		 pop	 edi
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 142  : 		}

  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	c3		 ret	 0
$LN71@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000cd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN92@CDynamicPo:
  000d2	cc		 int	 3
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00026	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00029	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0002c	74 03		 je	 SHORT $LN24@CDynamicPo

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  0002e	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN24@CDynamicPo:

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00031	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00034	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00037	74 03		 je	 SHORT $LN27@CDynamicPo

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  00039	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN27@CDynamicPo:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  0003c	85 c0		 test	 eax, eax
  0003e	74 41		 je	 SHORT $LN33@CDynamicPo

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00040	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00043	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00045	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00048	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0004e	72 12		 jb	 SHORT $LN49@CDynamicPo

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00050	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00053	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00056	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00058	83 c0 fc	 add	 eax, -4			; fffffffcH
  0005b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0005e	77 6d		 ja	 SHORT $LN71@CDynamicPo

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00060	8b c2		 mov	 eax, edx
$LN49@CDynamicPo:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00062	51		 push	 ecx
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  00069	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00070	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2050 :             _Mylast  = nullptr;

  00073	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2051 :             _Myend   = nullptr;

  0007a	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN33@CDynamicPo:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  00081	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00084	85 c0		 test	 eax, eax
  00086	74 41		 je	 SHORT $LN58@CDynamicPo

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00088	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  0008b	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0008d	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00090	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00096	72 12		 jb	 SHORT $LN74@CDynamicPo

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00098	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0009b	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0009e	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000a0	83 c0 fc	 add	 eax, -4			; fffffffcH
  000a3	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000a6	77 25		 ja	 SHORT $LN71@CDynamicPo

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000a8	8b c2		 mov	 eax, edx
$LN74@CDynamicPo:

; 265  :         ::operator delete(_Ptr, _Bytes);

  000aa	51		 push	 ecx
  000ab	50		 push	 eax
  000ac	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  000b1	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  000b8	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2050 :             _Mylast  = nullptr;

  000bb	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2051 :             _Myend   = nullptr;

  000c2	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN58@CDynamicPo:
  000c9	5f		 pop	 edi
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 142  : 		}

  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	c3		 ret	 0
$LN71@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000cd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN92@CDynamicPo:
  000d2	cc		 int	 3
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00026	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00029	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0002c	74 03		 je	 SHORT $LN24@CDynamicPo

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  0002e	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN24@CDynamicPo:

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00031	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00034	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00037	74 03		 je	 SHORT $LN27@CDynamicPo

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  00039	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN27@CDynamicPo:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  0003c	85 c0		 test	 eax, eax
  0003e	74 41		 je	 SHORT $LN33@CDynamicPo

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00040	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00043	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00045	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00048	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0004e	72 12		 jb	 SHORT $LN49@CDynamicPo

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00050	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00053	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00056	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00058	83 c0 fc	 add	 eax, -4			; fffffffcH
  0005b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0005e	77 6d		 ja	 SHORT $LN71@CDynamicPo

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00060	8b c2		 mov	 eax, edx
$LN49@CDynamicPo:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00062	51		 push	 ecx
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  00069	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00070	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2050 :             _Mylast  = nullptr;

  00073	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2051 :             _Myend   = nullptr;

  0007a	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN33@CDynamicPo:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  00081	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00084	85 c0		 test	 eax, eax
  00086	74 41		 je	 SHORT $LN58@CDynamicPo

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00088	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  0008b	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0008d	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00090	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00096	72 12		 jb	 SHORT $LN74@CDynamicPo

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00098	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0009b	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0009e	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000a0	83 c0 fc	 add	 eax, -4			; fffffffcH
  000a3	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000a6	77 25		 ja	 SHORT $LN71@CDynamicPo

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000a8	8b c2		 mov	 eax, edx
$LN74@CDynamicPo:

; 265  :         ::operator delete(_Ptr, _Bytes);

  000aa	51		 push	 ecx
  000ab	50		 push	 eax
  000ac	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  000b1	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  000b8	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2050 :             _Mylast  = nullptr;

  000bb	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2051 :             _Myend   = nullptr;

  000c2	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN58@CDynamicPo:
  000c9	5f		 pop	 edi
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 142  : 		}

  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	c3		 ret	 0
$LN71@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000cd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN92@CDynamicPo:
  000d2	cc		 int	 3
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00026	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00029	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0002c	74 03		 je	 SHORT $LN24@CDynamicPo

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  0002e	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN24@CDynamicPo:

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00031	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00034	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00037	74 03		 je	 SHORT $LN27@CDynamicPo

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  00039	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN27@CDynamicPo:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  0003c	85 c0		 test	 eax, eax
  0003e	74 41		 je	 SHORT $LN33@CDynamicPo

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00040	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00043	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00045	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00048	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0004e	72 12		 jb	 SHORT $LN49@CDynamicPo

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00050	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00053	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00056	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00058	83 c0 fc	 add	 eax, -4			; fffffffcH
  0005b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0005e	77 6d		 ja	 SHORT $LN71@CDynamicPo

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00060	8b c2		 mov	 eax, edx
$LN49@CDynamicPo:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00062	51		 push	 ecx
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  00069	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00070	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2050 :             _Mylast  = nullptr;

  00073	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2051 :             _Myend   = nullptr;

  0007a	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN33@CDynamicPo:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  00081	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00084	85 c0		 test	 eax, eax
  00086	74 41		 je	 SHORT $LN58@CDynamicPo

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00088	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  0008b	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0008d	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00090	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00096	72 12		 jb	 SHORT $LN74@CDynamicPo

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00098	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0009b	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0009e	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000a0	83 c0 fc	 add	 eax, -4			; fffffffcH
  000a3	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000a6	77 25		 ja	 SHORT $LN71@CDynamicPo

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000a8	8b c2		 mov	 eax, edx
$LN74@CDynamicPo:

; 265  :         ::operator delete(_Ptr, _Bytes);

  000aa	51		 push	 ecx
  000ab	50		 push	 eax
  000ac	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  000b1	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  000b8	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2050 :             _Mylast  = nullptr;

  000bb	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2051 :             _Myend   = nullptr;

  000c2	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN58@CDynamicPo:
  000c9	5f		 pop	 edi
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 142  : 		}

  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	c3		 ret	 0
$LN71@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000cd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN92@CDynamicPo:
  000d2	cc		 int	 3
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00026	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00029	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0002c	74 03		 je	 SHORT $LN24@CDynamicPo

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  0002e	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN24@CDynamicPo:

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00031	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00034	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00037	74 03		 je	 SHORT $LN27@CDynamicPo

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  00039	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN27@CDynamicPo:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  0003c	85 c0		 test	 eax, eax
  0003e	74 41		 je	 SHORT $LN33@CDynamicPo

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00040	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00043	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00045	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00048	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0004e	72 12		 jb	 SHORT $LN49@CDynamicPo

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00050	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00053	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00056	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00058	83 c0 fc	 add	 eax, -4			; fffffffcH
  0005b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0005e	77 6d		 ja	 SHORT $LN71@CDynamicPo

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00060	8b c2		 mov	 eax, edx
$LN49@CDynamicPo:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00062	51		 push	 ecx
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  00069	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00070	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2050 :             _Mylast  = nullptr;

  00073	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2051 :             _Myend   = nullptr;

  0007a	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN33@CDynamicPo:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  00081	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00084	85 c0		 test	 eax, eax
  00086	74 41		 je	 SHORT $LN58@CDynamicPo

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00088	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  0008b	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0008d	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00090	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00096	72 12		 jb	 SHORT $LN74@CDynamicPo

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00098	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0009b	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0009e	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000a0	83 c0 fc	 add	 eax, -4			; fffffffcH
  000a3	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000a6	77 25		 ja	 SHORT $LN71@CDynamicPo

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000a8	8b c2		 mov	 eax, edx
$LN74@CDynamicPo:

; 265  :         ::operator delete(_Ptr, _Bytes);

  000aa	51		 push	 ecx
  000ab	50		 push	 eax
  000ac	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  000b1	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  000b8	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2050 :             _Mylast  = nullptr;

  000bb	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2051 :             _Myend   = nullptr;

  000c2	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN58@CDynamicPo:
  000c9	5f		 pop	 edi
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 142  : 		}

  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	c3		 ret	 0
$LN71@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000cd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN92@CDynamicPo:
  000d2	cc		 int	 3
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Marty 5.5\Src-Client\Client\eterBase\filename.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterBase\filename.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterBase\filename.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\eterBase\filename.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
;	COMDAT ?LoadRaceData@CRaceData@@QAEHPBD@Z
_TEXT	SEGMENT
_pSmokeTokenVector$ = -348				; size = 4
_i$1$ = -344						; size = 4
_eSmoke$1$ = -344					; size = 4
_this$GSCopy$1$ = -340					; size = 4
_nLength$1$ = -336					; size = 4
_i$1$ = -336						; size = 4
_rdwCRCEft$1$ = -336					; size = 4
tv6012 = -336						; size = 4
tv5994 = -336						; size = 4
_dwShapeIndex$2 = -336					; size = 4
__Result$1$ = -332					; size = 4
_i$1$ = -332						; size = 4
_uLine$1$ = -332					; size = 4
_dwShapeDataCount$3 = -332				; size = 4
_i$1$ = -328						; size = 4
tv5968 = -328						; size = 4
_dwHairDataCount$4 = -328				; size = 4
_dwShapeIndex$5 = -328					; size = 4
$T6 = -324						; size = 4
tv6013 = -324						; size = 4
$T7 = -324						; size = 4
$T8 = -320						; size = 4
_uLineCount$1$ = -320					; size = 4
$T9 = -313						; size = 1
$T10 = -313						; size = 1
$T11 = -313						; size = 1
$T12 = -313						; size = 1
$T13 = -313						; size = 1
$T14 = -313						; size = 1
_TextFileLoader$ = -312					; size = 128
$T15 = -184						; size = 24
$T16 = -184						; size = 24
$T17 = -184						; size = 24
$T18 = -184						; size = 24
_strModel$19 = -160					; size = 24
_strTargetSkin$20 = -160				; size = 24
_strTargetSkin$21 = -136				; size = 24
$T22 = -136						; size = 24
_strPathName$23 = -136					; size = 24
_strSourceSkin$24 = -112				; size = 24
_strModel$25 = -112					; size = 24
$T26 = -112						; size = 24
_strPathName$27 = -88					; size = 24
$T28 = -88						; size = 24
$T29 = -88						; size = 24
$T30 = -88						; size = 24
$T31 = -88						; size = 24
$T32 = -88						; size = 24
$T33 = -64						; size = 24
$T34 = -64						; size = 24
$T35 = -64						; size = 24
$T36 = -64						; size = 24
$T37 = -64						; size = 24
_strSourceSkin$38 = -64					; size = 24
$T39 = -40						; size = 24
$T40 = -40						; size = 24
$T41 = -40						; size = 24
$T42 = -40						; size = 24
$T43 = -40						; size = 24
$T44 = -40						; size = 24
$T45 = -40						; size = 24
$T46 = -40						; size = 24
$T47 = -40						; size = 24
$T48 = -40						; size = 24
$T49 = -40						; size = 24
$T50 = -40						; size = 24
$T51 = -40						; size = 24
$T52 = -40						; size = 24
$T53 = -40						; size = 24
$T54 = -40						; size = 24
$T55 = -40						; size = 24
$T56 = -40						; size = 24
$T57 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_c_szFileName$ = 8					; size = 4
?LoadRaceData@CRaceData@@QAEHPBD@Z PROC			; CRaceData::LoadRaceData, COMDAT
; _this$ = ecx

; 11   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadRaceData@CRaceData@@QAEHPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 50 01 00
	00		 sub	 esp, 336		; 00000150H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	56		 push	 esi
  00022	57		 push	 edi
  00023	50		 push	 eax
  00024	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00027	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002d	89 8d ac fe ff
	ff		 mov	 DWORD PTR _this$GSCopy$1$[ebp], ecx
  00033	8b 75 08	 mov	 esi, DWORD PTR _c_szFileName$[ebp]

; 12   : 	CTextFileLoader TextFileLoader;

  00036	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  0003c	33 ff		 xor	 edi, edi
  0003e	89 bd bc fe ff
	ff		 mov	 DWORD PTR $T7[ebp], edi
  00044	e8 00 00 00 00	 call	 ??0CTextFileLoader@@QAE@XZ ; CTextFileLoader::CTextFileLoader

; 13   : 	if (!TextFileLoader.Load(c_szFileName))

  00049	56		 push	 esi
  0004a	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00050	89 7d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], edi
  00053	e8 00 00 00 00	 call	 ?Load@CTextFileLoader@@QAE_NPBD@Z ; CTextFileLoader::Load
  00058	84 c0		 test	 al, al
  0005a	0f 84 1b 03 00
	00		 je	 $LN124@LoadRaceDa

; 14   : 		return FALSE;
; 15   : 
; 16   : 	TextFileLoader.SetTop();

  00060	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00066	e8 00 00 00 00	 call	 ?SetTop@CTextFileLoader@@QAEXXZ ; CTextFileLoader::SetTop

; 18   : 	TextFileLoader.GetTokenString("basemodelfilename", &m_strBaseModelFileName);

  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@NDOIOPFI@basemodelfilename@
  00070	8d 4d d8	 lea	 ecx, DWORD PTR $T57[ebp]
  00073	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00078	8b b5 ac fe ff
	ff		 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  0007e	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00084	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00088	8d 46 20	 lea	 eax, DWORD PTR [esi+32]
  0008b	50		 push	 eax
  0008c	8d 45 d8	 lea	 eax, DWORD PTR $T57[ebp]
  0008f	50		 push	 eax
  00090	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  00095	8b 4d ec	 mov	 ecx, DWORD PTR $T57[ebp+20]
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 18   : 	TextFileLoader.GetTokenString("basemodelfilename", &m_strBaseModelFileName);

  00098	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  0009c	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0009f	72 2c		 jb	 SHORT $LN886@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000a1	8b 55 d8	 mov	 edx, DWORD PTR $T57[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  000a4	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000a5	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000a7	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000ad	72 14		 jb	 SHORT $LN896@LoadRaceDa

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000af	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000b2	83 c1 23	 add	 ecx, 35			; 00000023H
  000b5	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000b7	83 c0 fc	 add	 eax, -4			; fffffffcH
  000ba	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000bd	0f 87 74 16 00
	00		 ja	 $LN264@LoadRaceDa
$LN896@LoadRaceDa:

; 265  :         ::operator delete(_Ptr, _Bytes);

  000c3	51		 push	 ecx
  000c4	52		 push	 edx
  000c5	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000ca	83 c4 08	 add	 esp, 8
$LN886@LoadRaceDa:
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 19   : 	TextFileLoader.GetTokenString("treefilename", &m_strTreeFileName);

  000cd	68 00 00 00 00	 push	 OFFSET ??_C@_0N@FNBFCAFH@treefilename@
  000d2	8d 4d d8	 lea	 ecx, DWORD PTR $T56[ebp]
  000d5	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000da	83 c6 38	 add	 esi, 56			; 00000038H
  000dd	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  000e1	56		 push	 esi
  000e2	8d 45 d8	 lea	 eax, DWORD PTR $T56[ebp]
  000e5	50		 push	 eax
  000e6	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  000ec	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  000f1	8b 4d ec	 mov	 ecx, DWORD PTR $T56[ebp+20]
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 19   : 	TextFileLoader.GetTokenString("treefilename", &m_strTreeFileName);

  000f4	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  000f8	83 f9 10	 cmp	 ecx, 16			; 00000010H
  000fb	72 2c		 jb	 SHORT $LN913@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000fd	8b 55 d8	 mov	 edx, DWORD PTR $T56[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00100	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00101	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00103	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00109	72 14		 jb	 SHORT $LN923@LoadRaceDa

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0010b	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0010e	83 c1 23	 add	 ecx, 35			; 00000023H
  00111	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00113	83 c0 fc	 add	 eax, -4			; fffffffcH
  00116	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00119	0f 87 1d 16 00
	00		 ja	 $LN1469@LoadRaceDa
$LN923@LoadRaceDa:

; 265  :         ::operator delete(_Ptr, _Bytes);

  0011f	51		 push	 ecx
  00120	52		 push	 edx
  00121	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00126	83 c4 08	 add	 esp, 8
$LN913@LoadRaceDa:
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 20   : 	TextFileLoader.GetTokenString("attributefilename", &m_strAttributeFileName);

  00129	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@KCFLFBNM@attributefilename@
  0012e	8d 4d d8	 lea	 ecx, DWORD PTR $T55[ebp]
  00131	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00136	8b 85 ac fe ff
	ff		 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  0013c	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00142	83 c0 50	 add	 eax, 80			; 00000050H
  00145	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00149	50		 push	 eax
  0014a	8d 45 d8	 lea	 eax, DWORD PTR $T55[ebp]
  0014d	50		 push	 eax
  0014e	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  00153	8b 4d ec	 mov	 ecx, DWORD PTR $T55[ebp+20]
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 20   : 	TextFileLoader.GetTokenString("attributefilename", &m_strAttributeFileName);

  00156	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  0015a	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0015d	72 2c		 jb	 SHORT $LN940@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0015f	8b 55 d8	 mov	 edx, DWORD PTR $T55[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00162	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00163	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00165	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0016b	72 14		 jb	 SHORT $LN950@LoadRaceDa

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0016d	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00170	83 c1 23	 add	 ecx, 35			; 00000023H
  00173	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00175	83 c0 fc	 add	 eax, -4			; fffffffcH
  00178	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0017b	0f 87 c0 15 00
	00		 ja	 $LN1470@LoadRaceDa
$LN950@LoadRaceDa:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00181	51		 push	 ecx
  00182	52		 push	 edx
  00183	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00188	83 c4 08	 add	 esp, 8
$LN940@LoadRaceDa:
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 21   : 	TextFileLoader.GetTokenString("smokebonename", &m_strSmokeBoneName);

  0018b	68 00 00 00 00	 push	 OFFSET ??_C@_0O@OKJLKLAI@smokebonename@
  00190	8d 4d d8	 lea	 ecx, DWORD PTR $T54[ebp]
  00193	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00198	8b 85 ac fe ff
	ff		 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  0019e	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  001a4	83 e8 80	 sub	 eax, -128		; ffffff80H
  001a7	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  001ab	50		 push	 eax
  001ac	8d 45 d8	 lea	 eax, DWORD PTR $T54[ebp]
  001af	50		 push	 eax
  001b0	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  001b5	8b 4d ec	 mov	 ecx, DWORD PTR $T54[ebp+20]
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 21   : 	TextFileLoader.GetTokenString("smokebonename", &m_strSmokeBoneName);

  001b8	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  001bc	83 f9 10	 cmp	 ecx, 16			; 00000010H
  001bf	72 2c		 jb	 SHORT $LN967@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001c1	8b 55 d8	 mov	 edx, DWORD PTR $T54[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  001c4	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001c5	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  001c7	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  001cd	72 14		 jb	 SHORT $LN977@LoadRaceDa

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  001cf	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  001d2	83 c1 23	 add	 ecx, 35			; 00000023H
  001d5	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  001d7	83 c0 fc	 add	 eax, -4			; fffffffcH
  001da	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  001dd	0f 87 63 15 00
	00		 ja	 $LN1471@LoadRaceDa
$LN977@LoadRaceDa:

; 265  :         ::operator delete(_Ptr, _Bytes);

  001e3	51		 push	 ecx
  001e4	52		 push	 edx
  001e5	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  001ea	83 c4 08	 add	 esp, 8
$LN967@LoadRaceDa:
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 22   : 	TextFileLoader.GetTokenString("motionlistfilename", &m_strMotionListFileName);

  001ed	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@HKKNCHKI@motionlistfilename@
  001f2	8d 4d d8	 lea	 ecx, DWORD PTR $T53[ebp]
  001f5	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  001fa	8b 85 ac fe ff
	ff		 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00200	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00206	83 c0 68	 add	 eax, 104		; 00000068H
  00209	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  0020d	50		 push	 eax
  0020e	8d 45 d8	 lea	 eax, DWORD PTR $T53[ebp]
  00211	50		 push	 eax
  00212	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  00217	8b 4d ec	 mov	 ecx, DWORD PTR $T53[ebp+20]
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 22   : 	TextFileLoader.GetTokenString("motionlistfilename", &m_strMotionListFileName);

  0021a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  0021e	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00221	72 2c		 jb	 SHORT $LN994@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00223	8b 55 d8	 mov	 edx, DWORD PTR $T53[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00226	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00227	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00229	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0022f	72 14		 jb	 SHORT $LN1004@LoadRaceDa

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00231	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00234	83 c1 23	 add	 ecx, 35			; 00000023H
  00237	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00239	83 c0 fc	 add	 eax, -4			; fffffffcH
  0023c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0023f	0f 87 06 15 00
	00		 ja	 $LN1472@LoadRaceDa
$LN1004@LoadRaceDa:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00245	51		 push	 ecx
  00246	52		 push	 edx
  00247	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0024c	83 c4 08	 add	 esp, 8
$LN994@LoadRaceDa:
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 24   : 	if (!m_strTreeFileName.empty())

  0024f	8b 85 ac fe ff
	ff		 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00255	83 78 48 00	 cmp	 DWORD PTR [eax+72], 0
  00259	0f 84 85 00 00
	00		 je	 $LN1222@LoadRaceDa
; File C:\Marty 5.5\Src-Client\Client\eterBase\filename.h

; 225  : 		size_t nLength = str.length();

  0025f	8b 46 10	 mov	 eax, DWORD PTR [esi+16]

; 226  : 
; 227  : 		for (size_t i = 0; i<nLength; ++i)

  00262	33 c9		 xor	 ecx, ecx
  00264	89 85 b0 fe ff
	ff		 mov	 DWORD PTR _nLength$1$[ebp], eax
  0026a	89 8d b8 fe ff
	ff		 mov	 DWORD PTR _i$1$[ebp], ecx
  00270	85 c0		 test	 eax, eax
  00272	74 70		 je	 SHORT $LN1222@LoadRaceDa
$LL1223@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2267 :         if (_Mysize <= _Off) {

  00274	39 4e 10	 cmp	 DWORD PTR [esi+16], ecx
  00277	0f 86 d8 14 00
	00		 jbe	 $LN1397@LoadRaceDa

; 2244 :         return _BUF_SIZE <= _Myres;

  0027d	8b 46 14	 mov	 eax, DWORD PTR [esi+20]

; 2226 :         value_type* _Result = _Bx._Buf;

  00280	8b d6		 mov	 edx, esi

; 2227 :         if (_Large_string_engaged()) {

  00282	83 f8 10	 cmp	 eax, 16			; 00000010H
  00285	72 02		 jb	 SHORT $LN1437@LoadRaceDa

; 2228 :             _Result = _Unfancy(_Bx._Ptr);

  00287	8b 16		 mov	 edx, DWORD PTR [esi]
$LN1437@LoadRaceDa:
; File C:\Marty 5.5\Src-Client\Client\eterBase\filename.h

; 229  : 			if (str.at(i) == '\\')

  00289	80 3c 0a 5c	 cmp	 BYTE PTR [edx+ecx], 92	; 0000005cH
  0028d	75 0f		 jne	 SHORT $LN1224@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2226 :         value_type* _Result = _Bx._Buf;

  0028f	8b d6		 mov	 edx, esi

; 2227 :         if (_Large_string_engaged()) {

  00291	83 f8 10	 cmp	 eax, 16			; 00000010H
  00294	72 02		 jb	 SHORT $LN1434@LoadRaceDa

; 2228 :             _Result = _Unfancy(_Bx._Ptr);

  00296	8b 16		 mov	 edx, DWORD PTR [esi]
$LN1434@LoadRaceDa:
; File C:\Marty 5.5\Src-Client\Client\eterBase\filename.h

; 230  : 				str.at(i) = '/';

  00298	c6 04 0a 2f	 mov	 BYTE PTR [edx+ecx], 47	; 0000002fH
  0029c	eb 37		 jmp	 SHORT $LN1221@LoadRaceDa
$LN1224@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2227 :         if (_Large_string_engaged()) {

  0029e	83 f8 10	 cmp	 eax, 16			; 00000010H
  002a1	72 0e		 jb	 SHORT $LN1435@LoadRaceDa

; 2228 :             _Result = _Unfancy(_Bx._Ptr);

  002a3	8b 06		 mov	 eax, DWORD PTR [esi]
  002a5	03 c1		 add	 eax, ecx
  002a7	8b 0e		 mov	 ecx, DWORD PTR [esi]
  002a9	89 8d b4 fe ff
	ff		 mov	 DWORD PTR __Result$1$[ebp], ecx
  002af	eb 09		 jmp	 SHORT $LN1436@LoadRaceDa
$LN1435@LoadRaceDa:

; 4015 :         return _Mypair._Myval2._Myptr()[_Off];

  002b1	8d 04 0e	 lea	 eax, DWORD PTR [esi+ecx]

; 2226 :         value_type* _Result = _Bx._Buf;

  002b4	89 b5 b4 fe ff
	ff		 mov	 DWORD PTR __Result$1$[ebp], esi
$LN1436@LoadRaceDa:
; File C:\Marty 5.5\Src-Client\Client\eterBase\filename.h

; 232  : 				str.at(i) = (char)tolower(str.at(i));

  002ba	0f be 00	 movsx	 eax, BYTE PTR [eax]
  002bd	50		 push	 eax
  002be	e8 00 00 00 00	 call	 _tolower
  002c3	8b 8d b8 fe ff
	ff		 mov	 ecx, DWORD PTR _i$1$[ebp]
  002c9	83 c4 04	 add	 esp, 4
  002cc	8b 95 b4 fe ff
	ff		 mov	 edx, DWORD PTR __Result$1$[ebp]
  002d2	88 04 0a	 mov	 BYTE PTR [edx+ecx], al
$LN1221@LoadRaceDa:

; 226  : 
; 227  : 		for (size_t i = 0; i<nLength; ++i)

  002d5	41		 inc	 ecx
  002d6	89 8d b8 fe ff
	ff		 mov	 DWORD PTR _i$1$[ebp], ecx
  002dc	3b 8d b0 fe ff
	ff		 cmp	 ecx, DWORD PTR _nLength$1$[ebp]
  002e2	72 90		 jb	 SHORT $LL1223@LoadRaceDa
$LN1222@LoadRaceDa:
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 30   : 	if (TextFileLoader.GetTokenVector("smokefilename", &pSmokeTokenVector))

  002e4	68 00 00 00 00	 push	 OFFSET ??_C@_0O@OGIHOCKK@smokefilename@
  002e9	8d 4d d8	 lea	 ecx, DWORD PTR $T52[ebp]
  002ec	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  002f1	8d 85 a4 fe ff
	ff		 lea	 eax, DWORD PTR _pSmokeTokenVector$[ebp]
  002f7	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  002fb	50		 push	 eax
  002fc	8d 45 d8	 lea	 eax, DWORD PTR $T52[ebp]
  002ff	50		 push	 eax
  00300	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00306	e8 00 00 00 00	 call	 ?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z ; CTextFileLoader::GetTokenVector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  0030b	8b 4d ec	 mov	 ecx, DWORD PTR $T52[ebp+20]
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 30   : 	if (TextFileLoader.GetTokenVector("smokefilename", &pSmokeTokenVector))

  0030e	8b f0		 mov	 esi, eax
  00310	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  00314	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00317	72 2c		 jb	 SHORT $LN1023@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00319	8b 55 d8	 mov	 edx, DWORD PTR $T52[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  0031c	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0031d	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0031f	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00325	72 14		 jb	 SHORT $LN1033@LoadRaceDa

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00327	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0032a	83 c1 23	 add	 ecx, 35			; 00000023H
  0032d	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0032f	83 c0 fc	 add	 eax, -4			; fffffffcH
  00332	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00335	0f 87 15 14 00
	00		 ja	 $LN1473@LoadRaceDa
$LN1033@LoadRaceDa:

; 265  :         ::operator delete(_Ptr, _Bytes);

  0033b	51		 push	 ecx
  0033c	52		 push	 edx
  0033d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00342	83 c4 08	 add	 esp, 8
$LN1023@LoadRaceDa:
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 30   : 	if (TextFileLoader.GetTokenVector("smokefilename", &pSmokeTokenVector))

  00345	85 f6		 test	 esi, esi
  00347	0f 84 8a 01 00
	00		 je	 $LN3@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0034d	8b 85 a4 fe ff
	ff		 mov	 eax, DWORD PTR _pSmokeTokenVector$[ebp]
  00353	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00356	2b 08		 sub	 ecx, DWORD PTR [eax]
  00358	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0035d	f7 e9		 imul	 ecx
  0035f	c1 fa 02	 sar	 edx, 2
  00362	8b c2		 mov	 eax, edx
  00364	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00367	03 c2		 add	 eax, edx
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 32   : 		if (pSmokeTokenVector->size()%2!=0)

  00369	a8 01		 test	 al, 1
  0036b	74 3a		 je	 SHORT $LN17@LoadRaceDa

; 33   : 		{
; 34   : 			TraceError("SmokeFileName ArgCount[%d]%2==0", pSmokeTokenVector->size());

  0036d	50		 push	 eax
  0036e	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@DLOGAHGG@SmokeFileName?5ArgCount?$FL?$CFd?$FN?$CF2?$DN?$DN0@
$LN1466@LoadRaceDa:
  00373	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
$LN1467@LoadRaceDa:
  00378	83 c4 08	 add	 esp, 8
$LN124@LoadRaceDa:
  0037b	33 f6		 xor	 esi, esi
$LN125@LoadRaceDa:

; 195  : 	}
; 196  : 
; 197  : 	return TRUE;

  0037d	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00383	e8 00 00 00 00	 call	 ??1CTextFileLoader@@UAE@XZ ; CTextFileLoader::~CTextFileLoader
  00388	8b c6		 mov	 eax, esi

; 198  : }

  0038a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0038d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00394	59		 pop	 ecx
  00395	5f		 pop	 edi
  00396	5e		 pop	 esi
  00397	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0039a	33 cd		 xor	 ecx, ebp
  0039c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003a1	8b e5		 mov	 esp, ebp
  003a3	5d		 pop	 ebp
  003a4	c2 04 00	 ret	 4
$LN17@LoadRaceDa:

; 35   : 			return FALSE;
; 36   : 		}
; 37   : 
; 38   : 		UINT uLineCount=pSmokeTokenVector->size()/2;

  003a7	d1 e8		 shr	 eax, 1
  003a9	89 85 c0 fe ff
	ff		 mov	 DWORD PTR _uLineCount$1$[ebp], eax

; 39   : 
; 40   : 		for (UINT uLine=0; uLine<uLineCount; ++uLine)

  003af	c7 85 b4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _uLine$1$[ebp], 0
  003b9	0f 84 18 01 00
	00		 je	 $LN3@LoadRaceDa

; 35   : 			return FALSE;
; 36   : 		}
; 37   : 
; 38   : 		UINT uLineCount=pSmokeTokenVector->size()/2;

  003bf	33 f6		 xor	 esi, esi
  003c1	c7 85 b8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv5968[ebp], 0
  003cb	89 b5 bc fe ff
	ff		 mov	 DWORD PTR tv6013[ebp], esi
$LL4@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1904 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  003d1	8b 85 a4 fe ff
	ff		 mov	 eax, DWORD PTR _pSmokeTokenVector$[ebp]
  003d7	8b 10		 mov	 edx, DWORD PTR [eax]
  003d9	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  003dc	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  003e1	2b ca		 sub	 ecx, edx
  003e3	89 95 b0 fe ff
	ff		 mov	 DWORD PTR tv5994[ebp], edx
  003e9	f7 e9		 imul	 ecx
  003eb	c1 fa 02	 sar	 edx, 2
  003ee	8b c2		 mov	 eax, edx
  003f0	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  003f3	03 c2		 add	 eax, edx
  003f5	3b 85 b8 fe ff
	ff		 cmp	 eax, DWORD PTR tv5968[ebp]
  003fb	0f 86 59 13 00
	00		 jbe	 $LN1403@LoadRaceDa

; 1908 :         return _My_data._Myfirst[_Pos];

  00401	8b 85 b0 fe ff
	ff		 mov	 eax, DWORD PTR tv5994[ebp]
  00407	03 c6		 add	 eax, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

  00409	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  0040d	72 02		 jb	 SHORT $LN571@LoadRaceDa

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

  0040f	8b 00		 mov	 eax, DWORD PTR [eax]
$LN571@LoadRaceDa:
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 42   : 			int eSmoke=atoi(pSmokeTokenVector->at(uLine*2+0).c_str());

  00411	50		 push	 eax
  00412	e8 00 00 00 00	 call	 __atoi64
  00417	83 c4 04	 add	 esp, 4
  0041a	89 85 a8 fe ff
	ff		 mov	 DWORD PTR _eSmoke$1$[ebp], eax

; 43   : 			if (eSmoke<0 || eSmoke>=SMOKE_NUM)

  00420	85 c0		 test	 eax, eax
  00422	0f 88 14 04 00
	00		 js	 $LN19@LoadRaceDa
  00428	83 f8 04	 cmp	 eax, 4
  0042b	0f 8d 0b 04 00
	00		 jge	 $LN19@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1904 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00431	8b 8d a4 fe ff
	ff		 mov	 ecx, DWORD PTR _pSmokeTokenVector$[ebp]
  00437	8b 01		 mov	 eax, DWORD PTR [ecx]
  00439	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0043c	2b c8		 sub	 ecx, eax
  0043e	89 85 b0 fe ff
	ff		 mov	 DWORD PTR tv6012[ebp], eax
  00444	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00449	f7 e9		 imul	 ecx
  0044b	8b 85 b8 fe ff
	ff		 mov	 eax, DWORD PTR tv5968[ebp]
  00451	c1 fa 02	 sar	 edx, 2
  00454	40		 inc	 eax
  00455	8b ca		 mov	 ecx, edx
  00457	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  0045a	03 ca		 add	 ecx, edx
  0045c	3b c8		 cmp	 ecx, eax
  0045e	0f 86 f6 12 00
	00		 jbe	 $LN1403@LoadRaceDa

; 1908 :         return _My_data._Myfirst[_Pos];

  00464	8b 85 b0 fe ff
	ff		 mov	 eax, DWORD PTR tv6012[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 51   : 			DWORD& rdwCRCEft=m_adwSmokeEffectID[eSmoke];

  0046a	8b 8d ac fe ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1908 :         return _My_data._Myfirst[_Pos];

  00470	83 c0 18	 add	 eax, 24			; 00000018H
  00473	03 f0		 add	 esi, eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 51   : 			DWORD& rdwCRCEft=m_adwSmokeEffectID[eSmoke];

  00475	8b 85 a8 fe ff
	ff		 mov	 eax, DWORD PTR _eSmoke$1$[ebp]
  0047b	8d 0c 81	 lea	 ecx, DWORD PTR [ecx+eax*4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

  0047e	8b c6		 mov	 eax, esi
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 51   : 			DWORD& rdwCRCEft=m_adwSmokeEffectID[eSmoke];

  00480	83 c1 08	 add	 ecx, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

  00483	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 51   : 			DWORD& rdwCRCEft=m_adwSmokeEffectID[eSmoke];

  00487	89 8d b0 fe ff
	ff		 mov	 DWORD PTR _rdwCRCEft$1$[ebp], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

  0048d	72 02		 jb	 SHORT $LN1438@LoadRaceDa

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

  0048f	8b 06		 mov	 eax, DWORD PTR [esi]
$LN1438@LoadRaceDa:
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 52   : 			if (!CEffectManager::Instance().RegisterEffect2(c_rstrEffectFileName.c_str(), &rdwCRCEft))

  00491	6a 00		 push	 0
  00493	51		 push	 ecx
  00494	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
  0049a	50		 push	 eax
  0049b	e8 00 00 00 00	 call	 ?RegisterEffect2@CEffectManager@@QAEHPBDPAK_N@Z ; CEffectManager::RegisterEffect2
  004a0	85 c0		 test	 eax, eax
  004a2	0f 84 70 03 00
	00		 je	 $LN1404@LoadRaceDa

; 39   : 
; 40   : 		for (UINT uLine=0; uLine<uLineCount; ++uLine)

  004a8	8b 85 b4 fe ff
	ff		 mov	 eax, DWORD PTR _uLine$1$[ebp]
  004ae	8b b5 bc fe ff
	ff		 mov	 esi, DWORD PTR tv6013[ebp]
  004b4	40		 inc	 eax
  004b5	83 85 b8 fe ff
	ff 02		 add	 DWORD PTR tv5968[ebp], 2
  004bc	83 c6 30	 add	 esi, 48			; 00000030H
  004bf	89 85 b4 fe ff
	ff		 mov	 DWORD PTR _uLine$1$[ebp], eax
  004c5	89 b5 bc fe ff
	ff		 mov	 DWORD PTR tv6013[ebp], esi
  004cb	3b 85 c0 fe ff
	ff		 cmp	 eax, DWORD PTR _uLineCount$1$[ebp]
  004d1	0f 82 fa fe ff
	ff		 jb	 $LL4@LoadRaceDa
$LN3@LoadRaceDa:

; 57   : 			}
; 58   : 		}
; 59   : 	}
; 60   : 
; 61   : 	if (TextFileLoader.SetChildNode("shapedata"))

  004d7	68 00 00 00 00	 push	 OFFSET ??_C@_09IOJGLPMI@shapedata@
  004dc	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  004e2	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHPBD@Z ; CTextFileLoader::SetChildNode
  004e7	85 c0		 test	 eax, eax
  004e9	0f 84 c6 0a 00
	00		 je	 $LN230@LoadRaceDa
  004ef	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4821 :         _My_data._Mysize = 0;

  004f2	c7 45 88 00 00
	00 00		 mov	 DWORD PTR _strPathName$23[ebp+16], 0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  004f9	0f 11 85 78 ff
	ff ff		 movups	 XMMWORD PTR _strPathName$23[ebp], xmm0

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

  00500	c7 45 8c 0f 00
	00 00		 mov	 DWORD PTR _strPathName$23[ebp+20], 15 ; 0000000fH

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00507	c6 85 78 ff ff
	ff 00		 mov	 BYTE PTR _strPathName$23[ebp], 0
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 65   : 		if (TextFileLoader.GetTokenString("pathname", &strPathName) &&

  0050e	68 00 00 00 00	 push	 OFFSET ??_C@_08PEIJGPHF@pathname@
  00513	8d 4d 90	 lea	 ecx, DWORD PTR $T26[ebp]
  00516	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  0051a	c7 85 b4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _dwShapeDataCount$3[ebp], 0
  00524	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00529	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _strPathName$23[ebp]
  0052f	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  00533	50		 push	 eax
  00534	8d 45 90	 lea	 eax, DWORD PTR $T26[ebp]
  00537	bf 01 00 00 00	 mov	 edi, 1
  0053c	50		 push	 eax
  0053d	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00543	89 bd c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], edi
  00549	89 bd bc fe ff
	ff		 mov	 DWORD PTR $T7[ebp], edi
  0054f	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  00554	85 c0		 test	 eax, eax
  00556	74 46		 je	 SHORT $LN39@LoadRaceDa
  00558	68 00 00 00 00	 push	 OFFSET ??_C@_0P@BDBLEP@shapedatacount@
  0055d	8d 4d d8	 lea	 ecx, DWORD PTR $T51[ebp]
  00560	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00565	8d 85 b4 fe ff
	ff		 lea	 eax, DWORD PTR _dwShapeDataCount$3[ebp]
  0056b	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 9
  00572	50		 push	 eax
  00573	8d 45 d8	 lea	 eax, DWORD PTR $T51[ebp]
  00576	bf 03 00 00 00	 mov	 edi, 3
  0057b	50		 push	 eax
  0057c	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00582	89 bd c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], edi
  00588	89 bd bc fe ff
	ff		 mov	 DWORD PTR $T7[ebp], edi
  0058e	e8 00 00 00 00	 call	 ?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z ; CTextFileLoader::GetTokenDoubleWord
  00593	c6 85 c7 fe ff
	ff 01		 mov	 BYTE PTR $T14[ebp], 1
  0059a	85 c0		 test	 eax, eax
  0059c	75 07		 jne	 SHORT $LN40@LoadRaceDa
$LN39@LoadRaceDa:
  0059e	c6 85 c7 fe ff
	ff 00		 mov	 BYTE PTR $T14[ebp], 0
$LN40@LoadRaceDa:
  005a5	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  005ab	a8 02		 test	 al, 2
  005ad	74 17		 je	 SHORT $LN63@LoadRaceDa
  005af	83 e0 fd	 and	 eax, -3			; fffffffdH
  005b2	8d 4d d8	 lea	 ecx, DWORD PTR $T51[ebp]
  005b5	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  005bb	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  005c0	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
$LN63@LoadRaceDa:
  005c6	c7 45 fc 07 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 7
  005cd	a8 01		 test	 al, 1
  005cf	74 11		 je	 SHORT $LN64@LoadRaceDa
  005d1	83 e0 fe	 and	 eax, -2			; fffffffeH
  005d4	8d 4d 90	 lea	 ecx, DWORD PTR $T26[ebp]
  005d7	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  005dd	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN64@LoadRaceDa:
  005e2	80 bd c7 fe ff
	ff 00		 cmp	 BYTE PTR $T14[ebp], 0
  005e9	0f 84 7a 09 00
	00		 je	 $LN1442@LoadRaceDa

; 68   : 			for (DWORD i = 0; i < dwShapeDataCount; ++i)

  005ef	33 c9		 xor	 ecx, ecx
  005f1	89 8d b0 fe ff
	ff		 mov	 DWORD PTR _i$1$[ebp], ecx
  005f7	39 8d b4 fe ff
	ff		 cmp	 DWORD PTR _dwShapeDataCount$3[ebp], ecx
  005fd	0f 86 66 09 00
	00		 jbe	 $LN1442@LoadRaceDa
$LL7@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00603	a0 08 00 00 00	 mov	 al, BYTE PTR ??_C@_09IOJGLPMI@shapedata@+8
  00608	0f 57 c0	 xorps	 xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  0060b	0f 11 45 a8	 movups	 XMMWORD PTR $T32[ebp], xmm0

; 2629 :             _My_data._Mysize = _Count;

  0060f	c7 45 b8 09 00
	00 00		 mov	 DWORD PTR $T32[ebp+16], 9

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00616	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_09IOJGLPMI@shapedata@

; 2630 :             _My_data._Myres  = _BUF_SIZE - 1;

  0061e	c7 45 bc 0f 00
	00 00		 mov	 DWORD PTR $T32[ebp+20], 15 ; 0000000fH

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00625	66 0f d6 45 a8	 movq	 QWORD PTR $T32[ebp], xmm0
  0062a	88 45 b0	 mov	 BYTE PTR $T32[ebp+8], al

; 2637 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

  0062d	c6 45 b1 00	 mov	 BYTE PTR $T32[ebp+9], 0
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 70   : 				if (!TextFileLoader.SetChildNode("shapedata", i))

  00631	51		 push	 ecx
  00632	8d 45 a8	 lea	 eax, DWORD PTR $T32[ebp]
  00635	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+8], 10 ; 0000000aH
  00639	50		 push	 eax
  0063a	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00640	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@K@Z ; CTextFileLoader::SetChildNode
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  00645	8b 4d bc	 mov	 ecx, DWORD PTR $T32[ebp+20]
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 70   : 				if (!TextFileLoader.SetChildNode("shapedata", i))

  00648	8b f0		 mov	 esi, eax
  0064a	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  0064e	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00651	72 2c		 jb	 SHORT $LN257@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00653	8b 55 a8	 mov	 edx, DWORD PTR $T32[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00656	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00657	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00659	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0065f	72 14		 jb	 SHORT $LN267@LoadRaceDa

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00661	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00664	83 c1 23	 add	 ecx, 35			; 00000023H
  00667	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00669	83 c0 fc	 add	 eax, -4			; fffffffcH
  0066c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0066f	0f 87 c2 10 00
	00		 ja	 $LN264@LoadRaceDa
$LN267@LoadRaceDa:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00675	51		 push	 ecx
  00676	52		 push	 edx
  00677	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0067c	83 c4 08	 add	 esp, 8
$LN257@LoadRaceDa:
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 70   : 				if (!TextFileLoader.SetChildNode("shapedata", i))

  0067f	85 f6		 test	 esi, esi
  00681	0f 84 c9 08 00
	00		 je	 $LN5@LoadRaceDa

; 76   : 				TextFileLoader.GetTokenString("specialpath", &strPathName);

  00687	68 00 00 00 00	 push	 OFFSET ??_C@_0M@GCDLCIFI@specialpath@
  0068c	8d 4d d8	 lea	 ecx, DWORD PTR $T50[ebp]
  0068f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00694	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _strPathName$23[ebp]
  0069a	c6 45 fc 0b	 mov	 BYTE PTR __$EHRec$[ebp+8], 11 ; 0000000bH
  0069e	50		 push	 eax
  0069f	8d 45 d8	 lea	 eax, DWORD PTR $T50[ebp]
  006a2	50		 push	 eax
  006a3	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  006a9	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  006ae	8b 4d ec	 mov	 ecx, DWORD PTR $T50[ebp+20]
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 76   : 				TextFileLoader.GetTokenString("specialpath", &strPathName);

  006b1	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  006b5	83 f9 10	 cmp	 ecx, 16			; 00000010H
  006b8	72 2c		 jb	 SHORT $LN683@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  006ba	8b 55 d8	 mov	 edx, DWORD PTR $T50[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  006bd	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  006be	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  006c0	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  006c6	72 14		 jb	 SHORT $LN693@LoadRaceDa

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  006c8	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  006cb	83 c1 23	 add	 ecx, 35			; 00000023H
  006ce	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  006d0	83 c0 fc	 add	 eax, -4			; fffffffcH
  006d3	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  006d6	0f 87 5b 10 00
	00		 ja	 $LN264@LoadRaceDa
$LN693@LoadRaceDa:

; 265  :         ::operator delete(_Ptr, _Bytes);

  006dc	51		 push	 ecx
  006dd	52		 push	 edx
  006de	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  006e3	83 c4 08	 add	 esp, 8
$LN683@LoadRaceDa:
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 80   : 				if (!TextFileLoader.GetTokenDoubleWord("shapeindex", &dwShapeIndex))

  006e6	68 00 00 00 00	 push	 OFFSET ??_C@_0L@BLAJFEIP@shapeindex@
  006eb	8d 4d d8	 lea	 ecx, DWORD PTR $T49[ebp]
  006ee	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  006f3	8d 85 b8 fe ff
	ff		 lea	 eax, DWORD PTR _dwShapeIndex$5[ebp]
  006f9	c6 45 fc 0c	 mov	 BYTE PTR __$EHRec$[ebp+8], 12 ; 0000000cH
  006fd	50		 push	 eax
  006fe	8d 45 d8	 lea	 eax, DWORD PTR $T49[ebp]
  00701	50		 push	 eax
  00702	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00708	e8 00 00 00 00	 call	 ?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z ; CTextFileLoader::GetTokenDoubleWord
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  0070d	8b 4d ec	 mov	 ecx, DWORD PTR $T49[ebp+20]
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 80   : 				if (!TextFileLoader.GetTokenDoubleWord("shapeindex", &dwShapeIndex))

  00710	8b f0		 mov	 esi, eax
  00712	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  00716	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00719	72 2c		 jb	 SHORT $LN710@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0071b	8b 55 d8	 mov	 edx, DWORD PTR $T49[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  0071e	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0071f	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00721	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00727	72 14		 jb	 SHORT $LN720@LoadRaceDa

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00729	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0072c	83 c1 23	 add	 ecx, 35			; 00000023H
  0072f	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00731	83 c0 fc	 add	 eax, -4			; fffffffcH
  00734	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00737	0f 87 fa 0f 00
	00		 ja	 $LN264@LoadRaceDa
$LN720@LoadRaceDa:

; 265  :         ::operator delete(_Ptr, _Bytes);

  0073d	51		 push	 ecx
  0073e	52		 push	 edx
  0073f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00744	83 c4 08	 add	 esp, 8
$LN710@LoadRaceDa:
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 80   : 				if (!TextFileLoader.GetTokenDoubleWord("shapeindex", &dwShapeIndex))

  00747	85 f6		 test	 esi, esi
  00749	0f 84 01 08 00
	00		 je	 $LN5@LoadRaceDa
  0074f	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4821 :         _My_data._Mysize = 0;

  00752	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR _strModel$25[ebp+16], 0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  00759	0f 11 45 90	 movups	 XMMWORD PTR _strModel$25[ebp], xmm0

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

  0075d	c7 45 a4 0f 00
	00 00		 mov	 DWORD PTR _strModel$25[ebp+20], 15 ; 0000000fH

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00764	c6 45 90 00	 mov	 BYTE PTR _strModel$25[ebp], 0
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 87   : 				if (TextFileLoader.GetTokenString("model", &strModel))

  00768	68 00 00 00 00	 push	 OFFSET ??_C@_05NCCFOPHA@model@
  0076d	8d 4d d8	 lea	 ecx, DWORD PTR $T48[ebp]
  00770	c6 45 fc 0d	 mov	 BYTE PTR __$EHRec$[ebp+8], 13 ; 0000000dH
  00774	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00779	8d 45 90	 lea	 eax, DWORD PTR _strModel$25[ebp]
  0077c	c6 45 fc 0e	 mov	 BYTE PTR __$EHRec$[ebp+8], 14 ; 0000000eH
  00780	50		 push	 eax
  00781	8d 45 d8	 lea	 eax, DWORD PTR $T48[ebp]
  00784	50		 push	 eax
  00785	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  0078b	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  00790	8b 4d ec	 mov	 ecx, DWORD PTR $T48[ebp+20]
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 87   : 				if (TextFileLoader.GetTokenString("model", &strModel))

  00793	8b f0		 mov	 esi, eax
  00795	c6 45 fc 0d	 mov	 BYTE PTR __$EHRec$[ebp+8], 13 ; 0000000dH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  00799	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0079c	72 2c		 jb	 SHORT $LN1076@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0079e	8b 55 d8	 mov	 edx, DWORD PTR $T48[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  007a1	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  007a2	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  007a4	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  007aa	72 14		 jb	 SHORT $LN1086@LoadRaceDa

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  007ac	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  007af	83 c1 23	 add	 ecx, 35			; 00000023H
  007b2	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  007b4	83 c0 fc	 add	 eax, -4			; fffffffcH
  007b7	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  007ba	0f 87 77 0f 00
	00		 ja	 $LN264@LoadRaceDa
$LN1086@LoadRaceDa:

; 265  :         ::operator delete(_Ptr, _Bytes);

  007c0	51		 push	 ecx
  007c1	52		 push	 edx
  007c2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  007c7	83 c4 08	 add	 esp, 8
$LN1076@LoadRaceDa:
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 87   : 				if (TextFileLoader.GetTokenString("model", &strModel))

  007ca	85 f6		 test	 esi, esi
  007cc	74 79		 je	 SHORT $LN25@LoadRaceDa

; 89   : 					SetShapeModel(dwShapeIndex, (strPathName + strModel).c_str());

  007ce	8d 45 90	 lea	 eax, DWORD PTR _strModel$25[ebp]
  007d1	50		 push	 eax
  007d2	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _strPathName$23[ebp]
  007d8	50		 push	 eax
  007d9	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR $T18[ebp]
  007df	50		 push	 eax
  007e0	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  007e5	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

  007e8	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 89   : 					SetShapeModel(dwShapeIndex, (strPathName + strModel).c_str());

  007ec	c6 45 fc 0f	 mov	 BYTE PTR __$EHRec$[ebp+8], 15 ; 0000000fH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

  007f0	72 02		 jb	 SHORT $LN1315@LoadRaceDa

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

  007f2	8b 00		 mov	 eax, DWORD PTR [eax]
$LN1315@LoadRaceDa:
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 89   : 					SetShapeModel(dwShapeIndex, (strPathName + strModel).c_str());

  007f4	8b bd ac fe ff
	ff		 mov	 edi, DWORD PTR _this$GSCopy$1$[ebp]
  007fa	8b cf		 mov	 ecx, edi
  007fc	50		 push	 eax
  007fd	ff b5 b8 fe ff
	ff		 push	 DWORD PTR _dwShapeIndex$5[ebp]
  00803	e8 00 00 00 00	 call	 ?SetShapeModel@CRaceData@@QAEXIPBD@Z ; CRaceData::SetShapeModel
  00808	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR $T18[ebp]
  0080e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 90   : 				}

  00813	e9 88 00 00 00	 jmp	 $LN26@LoadRaceDa
$LN1404@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

  00818	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2236 :         if (_Large_string_engaged()) {

  0081c	72 02		 jb	 SHORT $LN1354@LoadRaceDa

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

  0081e	8b 36		 mov	 esi, DWORD PTR [esi]
$LN1354@LoadRaceDa:
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 54   : 				TraceError("CRaceData::RegisterEffect2(%s) ERROR", c_rstrEffectFileName.c_str());

  00820	56		 push	 esi
  00821	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@GEINCGMO@CRaceData?3?3RegisterEffect2?$CI?$CFs?$CJ?5@
  00826	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError

; 55   : 				rdwCRCEft=0;

  0082b	8b 85 b0 fe ff
	ff		 mov	 eax, DWORD PTR _rdwCRCEft$1$[ebp]
  00831	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 56   : 				return false;

  00837	e9 3c fb ff ff	 jmp	 $LN1467@LoadRaceDa
$LN19@LoadRaceDa:

; 44   : 			{
; 45   : 				TraceError("SmokeFileName SmokeNum[%d] OUT OF RANGE", eSmoke);

  0083c	50		 push	 eax
  0083d	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@MHBPKAGN@SmokeFileName?5SmokeNum?$FL?$CFd?$FN?5OUT?5@
  00842	e9 2c fb ff ff	 jmp	 $LN1466@LoadRaceDa
$LN25@LoadRaceDa:

; 91   : 				else
; 92   : 				{
; 93   : 					if (!TextFileLoader.GetTokenString("local_model", &strModel))

  00847	68 00 00 00 00	 push	 OFFSET ??_C@_0M@NFFHMNPF@local_model@
  0084c	8d 4d d8	 lea	 ecx, DWORD PTR $T47[ebp]
  0084f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00854	8d 45 90	 lea	 eax, DWORD PTR _strModel$25[ebp]
  00857	c6 45 fc 10	 mov	 BYTE PTR __$EHRec$[ebp+8], 16 ; 00000010H
  0085b	50		 push	 eax
  0085c	8d 45 d8	 lea	 eax, DWORD PTR $T47[ebp]
  0085f	50		 push	 eax
  00860	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00866	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  0086b	8d 4d d8	 lea	 ecx, DWORD PTR $T47[ebp]
  0086e	c6 45 fc 0d	 mov	 BYTE PTR __$EHRec$[ebp+8], 13 ; 0000000dH
  00872	8b f0		 mov	 esi, eax
  00874	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00879	85 f6		 test	 esi, esi
  0087b	0f 84 97 06 00
	00		 je	 $LN1463@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

  00881	83 7d a4 10	 cmp	 DWORD PTR _strModel$25[ebp+20], 16 ; 00000010H
  00885	8d 45 90	 lea	 eax, DWORD PTR _strModel$25[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 96   : 					SetShapeModel(dwShapeIndex, strModel.c_str());

  00888	8b bd ac fe ff
	ff		 mov	 edi, DWORD PTR _this$GSCopy$1$[ebp]
  0088e	8b cf		 mov	 ecx, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

  00890	0f 43 45 90	 cmovae	 eax, DWORD PTR _strModel$25[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 96   : 					SetShapeModel(dwShapeIndex, strModel.c_str());

  00894	50		 push	 eax
  00895	ff b5 b8 fe ff
	ff		 push	 DWORD PTR _dwShapeIndex$5[ebp]
  0089b	e8 00 00 00 00	 call	 ?SetShapeModel@CRaceData@@QAEXIPBD@Z ; CRaceData::SetShapeModel
$LN26@LoadRaceDa:
  008a0	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4821 :         _My_data._Mysize = 0;

  008a3	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _strSourceSkin$38[ebp+16], 0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  008aa	0f 11 45 c0	 movups	 XMMWORD PTR _strSourceSkin$38[ebp], xmm0

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

  008ae	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR _strSourceSkin$38[ebp+20], 15 ; 0000000fH

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  008b5	c6 45 c0 00	 mov	 BYTE PTR _strSourceSkin$38[ebp], 0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  008b9	0f 11 85 60 ff
	ff ff		 movups	 XMMWORD PTR _strTargetSkin$20[ebp], xmm0

; 4821 :         _My_data._Mysize = 0;

  008c0	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _strTargetSkin$20[ebp+16], 0

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

  008ca	c7 85 74 ff ff
	ff 0f 00 00 00	 mov	 DWORD PTR _strTargetSkin$20[ebp+20], 15 ; 0000000fH

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  008d4	c6 85 60 ff ff
	ff 00		 mov	 BYTE PTR _strTargetSkin$20[ebp], 0
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 109  : 				if (TextFileLoader.GetTokenString("local_sourceskin", &strSourceSkin) &&

  008db	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@OAFGNDMP@local_sourceskin@
  008e0	8d 4d a8	 lea	 ecx, DWORD PTR $T31[ebp]
  008e3	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  008e7	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  008ec	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  008f2	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  008f8	83 c8 04	 or	 eax, 4
  008fb	c6 45 fc 13	 mov	 BYTE PTR __$EHRec$[ebp+8], 19 ; 00000013H
  008ff	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  00905	89 85 bc fe ff
	ff		 mov	 DWORD PTR $T7[ebp], eax
  0090b	8d 45 c0	 lea	 eax, DWORD PTR _strSourceSkin$38[ebp]
  0090e	50		 push	 eax
  0090f	8d 45 a8	 lea	 eax, DWORD PTR $T31[ebp]
  00912	50		 push	 eax
  00913	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  00918	85 c0		 test	 eax, eax
  0091a	74 4a		 je	 SHORT $LN41@LoadRaceDa
  0091c	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@CMMEEAHN@local_targetskin@
  00921	8d 4d d8	 lea	 ecx, DWORD PTR $T46[ebp]
  00924	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00929	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  0092f	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00935	83 c8 08	 or	 eax, 8
  00938	c7 45 fc 14 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 20 ; 00000014H
  0093f	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  00945	89 85 bc fe ff
	ff		 mov	 DWORD PTR $T7[ebp], eax
  0094b	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _strTargetSkin$20[ebp]
  00951	50		 push	 eax
  00952	8d 45 d8	 lea	 eax, DWORD PTR $T46[ebp]
  00955	50		 push	 eax
  00956	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  0095b	c6 85 c7 fe ff
	ff 01		 mov	 BYTE PTR $T13[ebp], 1
  00962	85 c0		 test	 eax, eax
  00964	75 07		 jne	 SHORT $LN42@LoadRaceDa
$LN41@LoadRaceDa:
  00966	c6 85 c7 fe ff
	ff 00		 mov	 BYTE PTR $T13[ebp], 0
$LN42@LoadRaceDa:
  0096d	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  00973	a8 08		 test	 al, 8
  00975	74 17		 je	 SHORT $LN78@LoadRaceDa
  00977	83 e0 f7	 and	 eax, -9			; fffffff7H
  0097a	8d 4d d8	 lea	 ecx, DWORD PTR $T46[ebp]
  0097d	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  00983	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00988	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
$LN78@LoadRaceDa:
  0098e	c7 45 fc 12 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 18 ; 00000012H
  00995	a8 04		 test	 al, 4
  00997	74 11		 je	 SHORT $LN79@LoadRaceDa
  00999	83 e0 fb	 and	 eax, -5			; fffffffbH
  0099c	8d 4d a8	 lea	 ecx, DWORD PTR $T31[ebp]
  0099f	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  009a5	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN79@LoadRaceDa:
  009aa	80 bd c7 fe ff
	ff 00		 cmp	 BYTE PTR $T13[ebp], 0
  009b1	74 30		 je	 SHORT $LN28@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

  009b3	83 bd 74 ff ff
	ff 10		 cmp	 DWORD PTR _strTargetSkin$20[ebp+20], 16 ; 00000010H
  009ba	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _strTargetSkin$20[ebp]

; 2235 :         const value_type* _Result = _Bx._Buf;

  009c0	8d 45 c0	 lea	 eax, DWORD PTR _strSourceSkin$38[ebp]

; 2236 :         if (_Large_string_engaged()) {

  009c3	0f 43 8d 60 ff
	ff ff		 cmovae	 ecx, DWORD PTR _strTargetSkin$20[ebp]
  009ca	83 7d d4 10	 cmp	 DWORD PTR _strSourceSkin$38[ebp+20], 16 ; 00000010H
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 112  : 					AppendShapeSkin(dwShapeIndex, 0, strSourceSkin.c_str(), strTargetSkin.c_str());

  009ce	51		 push	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

  009cf	0f 43 45 c0	 cmovae	 eax, DWORD PTR _strSourceSkin$38[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 112  : 					AppendShapeSkin(dwShapeIndex, 0, strSourceSkin.c_str(), strTargetSkin.c_str());

  009d3	8b cf		 mov	 ecx, edi
  009d5	50		 push	 eax
  009d6	6a 00		 push	 0
  009d8	ff b5 b8 fe ff
	ff		 push	 DWORD PTR _dwShapeIndex$5[ebp]
  009de	e8 00 00 00 00	 call	 ?AppendShapeSkin@CRaceData@@QAEXIIPBD0@Z ; CRaceData::AppendShapeSkin
$LN28@LoadRaceDa:

; 113  : 				}
; 114  : 				// END_OF_LOCAL_PATH_SUPPORT
; 115  : 
; 116  : 				if (TextFileLoader.GetTokenString("sourceskin", &strSourceSkin) &&

  009e3	68 00 00 00 00	 push	 OFFSET ??_C@_0L@ILFPKBGB@sourceskin@
  009e8	8d 4d a8	 lea	 ecx, DWORD PTR $T30[ebp]
  009eb	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  009f0	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  009f6	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  009fc	83 c8 10	 or	 eax, 16			; 00000010H
  009ff	c6 45 fc 15	 mov	 BYTE PTR __$EHRec$[ebp+8], 21 ; 00000015H
  00a03	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  00a09	89 85 bc fe ff
	ff		 mov	 DWORD PTR $T7[ebp], eax
  00a0f	8d 45 c0	 lea	 eax, DWORD PTR _strSourceSkin$38[ebp]
  00a12	50		 push	 eax
  00a13	8d 45 a8	 lea	 eax, DWORD PTR $T30[ebp]
  00a16	50		 push	 eax
  00a17	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  00a1c	85 c0		 test	 eax, eax
  00a1e	74 4a		 je	 SHORT $LN43@LoadRaceDa
  00a20	68 00 00 00 00	 push	 OFFSET ??_C@_0L@EHMNDCND@targetskin@
  00a25	8d 4d d8	 lea	 ecx, DWORD PTR $T45[ebp]
  00a28	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00a2d	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  00a33	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00a39	83 c8 20	 or	 eax, 32			; 00000020H
  00a3c	c7 45 fc 16 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 22 ; 00000016H
  00a43	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  00a49	89 85 bc fe ff
	ff		 mov	 DWORD PTR $T7[ebp], eax
  00a4f	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _strTargetSkin$20[ebp]
  00a55	50		 push	 eax
  00a56	8d 45 d8	 lea	 eax, DWORD PTR $T45[ebp]
  00a59	50		 push	 eax
  00a5a	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  00a5f	c6 85 c7 fe ff
	ff 01		 mov	 BYTE PTR $T12[ebp], 1
  00a66	85 c0		 test	 eax, eax
  00a68	75 07		 jne	 SHORT $LN44@LoadRaceDa
$LN43@LoadRaceDa:
  00a6a	c6 85 c7 fe ff
	ff 00		 mov	 BYTE PTR $T12[ebp], 0
$LN44@LoadRaceDa:
  00a71	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  00a77	a8 20		 test	 al, 32			; 00000020H
  00a79	74 17		 je	 SHORT $LN84@LoadRaceDa
  00a7b	83 e0 df	 and	 eax, -33		; ffffffdfH
  00a7e	8d 4d d8	 lea	 ecx, DWORD PTR $T45[ebp]
  00a81	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  00a87	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00a8c	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
$LN84@LoadRaceDa:
  00a92	c7 45 fc 12 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 18 ; 00000012H
  00a99	a8 10		 test	 al, 16			; 00000010H
  00a9b	74 11		 je	 SHORT $LN85@LoadRaceDa
  00a9d	83 e0 ef	 and	 eax, -17		; ffffffefH
  00aa0	8d 4d a8	 lea	 ecx, DWORD PTR $T30[ebp]
  00aa3	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  00aa9	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN85@LoadRaceDa:
  00aae	80 bd c7 fe ff
	ff 00		 cmp	 BYTE PTR $T12[ebp], 0
  00ab5	74 73		 je	 SHORT $LN29@LoadRaceDa

; 119  : 					AppendShapeSkin(dwShapeIndex, 0, (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  00ab7	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _strTargetSkin$20[ebp]
  00abd	50		 push	 eax
  00abe	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _strPathName$23[ebp]
  00ac4	50		 push	 eax
  00ac5	8d 45 d8	 lea	 eax, DWORD PTR $T44[ebp]
  00ac8	50		 push	 eax
  00ac9	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00ace	8b f0		 mov	 esi, eax
  00ad0	8d 45 c0	 lea	 eax, DWORD PTR _strSourceSkin$38[ebp]
  00ad3	c6 45 fc 17	 mov	 BYTE PTR __$EHRec$[ebp+8], 23 ; 00000017H
  00ad7	50		 push	 eax
  00ad8	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _strPathName$23[ebp]
  00ade	50		 push	 eax
  00adf	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR $T17[ebp]
  00ae5	50		 push	 eax
  00ae6	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00aeb	83 c4 18	 add	 esp, 24			; 00000018H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

  00aee	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 119  : 					AppendShapeSkin(dwShapeIndex, 0, (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  00af2	c6 45 fc 18	 mov	 BYTE PTR __$EHRec$[ebp+8], 24 ; 00000018H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

  00af6	72 02		 jb	 SHORT $LN1326@LoadRaceDa

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

  00af8	8b 00		 mov	 eax, DWORD PTR [eax]
$LN1326@LoadRaceDa:

; 2236 :         if (_Large_string_engaged()) {

  00afa	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  00afe	72 02		 jb	 SHORT $LN1347@LoadRaceDa

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

  00b00	8b 36		 mov	 esi, DWORD PTR [esi]
$LN1347@LoadRaceDa:
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 119  : 					AppendShapeSkin(dwShapeIndex, 0, (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  00b02	56		 push	 esi
  00b03	50		 push	 eax
  00b04	6a 00		 push	 0
  00b06	ff b5 b8 fe ff
	ff		 push	 DWORD PTR _dwShapeIndex$5[ebp]
  00b0c	8b cf		 mov	 ecx, edi
  00b0e	e8 00 00 00 00	 call	 ?AppendShapeSkin@CRaceData@@QAEXIIPBD0@Z ; CRaceData::AppendShapeSkin
  00b13	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR $T17[ebp]
  00b19	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00b1e	8d 4d d8	 lea	 ecx, DWORD PTR $T44[ebp]
  00b21	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  00b25	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN29@LoadRaceDa:

; 122  : 				for (DWORD i=2; i<=9; i++)

  00b2a	bf 02 00 00 00	 mov	 edi, 2
  00b2f	89 bd a8 fe ff
	ff		 mov	 DWORD PTR _i$1$[ebp], edi
$LL10@LoadRaceDa:

; 123  : 				{
; 124  : 					_snprintf(__szSkin1, sizeof(__szSkin1), "sourceskin%u", i);

  00b35	57		 push	 edi
  00b36	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LBPJELHP@sourceskin?$CFu@
  00b3b	6a 0c		 push	 12			; 0000000cH
  00b3d	68 00 00 00 00	 push	 OFFSET ?__szSkin1@?BN@??LoadRaceData@CRaceData@@QAEHPBD@Z@4PADA
  00b42	e8 00 00 00 00	 call	 __snprintf

; 125  : 					_snprintf(__szSkin2, sizeof(__szSkin2), "targetskin%u", i);

  00b47	57		 push	 edi
  00b48	68 00 00 00 00	 push	 OFFSET ??_C@_0N@OAMIJCJ@targetskin?$CFu@
  00b4d	6a 0c		 push	 12			; 0000000cH
  00b4f	68 00 00 00 00	 push	 OFFSET ?__szSkin2@?BN@??LoadRaceData@CRaceData@@QAEHPBD@Z@4PADA
  00b54	e8 00 00 00 00	 call	 __snprintf
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 403  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00b59	be 00 00 00 00	 mov	 esi, OFFSET ?__szSkin1@?BN@??LoadRaceData@CRaceData@@QAEHPBD@Z@4PADA

; 2293 :     size_type _Mysize = 0; // current length of string

  00b5e	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR $T29[ebp+16], 0
  00b65	0f 57 c0	 xorps	 xmm0, xmm0

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

  00b68	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR $T29[ebp+20], 0
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 125  : 					_snprintf(__szSkin2, sizeof(__szSkin2), "targetskin%u", i);

  00b6f	83 c4 20	 add	 esp, 32			; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  00b72	0f 11 45 a8	 movups	 XMMWORD PTR $T29[ebp], xmm0

; 403  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00b76	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
  00b79	0f 1f 80 00 00
	00 00		 npad	 7
$LL1445@LoadRaceDa:
  00b80	8a 06		 mov	 al, BYTE PTR [esi]
  00b82	46		 inc	 esi
  00b83	84 c0		 test	 al, al
  00b85	75 f9		 jne	 SHORT $LL1445@LoadRaceDa
  00b87	2b f1		 sub	 esi, ecx

; 2620 :         if (_Count > max_size()) {

  00b89	81 fe ff ff ff
	7f		 cmp	 esi, 2147483647		; 7fffffffH
  00b8f	0f 87 cf 0b 00
	00		 ja	 $LN1405@LoadRaceDa

; 2622 :         }
; 2623 : 
; 2624 :         auto& _Al       = _Getal();
; 2625 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);
; 2626 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 2627 : 
; 2628 :         if (_Count < _BUF_SIZE) {

  00b95	c7 45 bc 0f 00
	00 00		 mov	 DWORD PTR $T29[ebp+20], 15 ; 0000000fH
  00b9c	83 fe 10	 cmp	 esi, 16			; 00000010H
  00b9f	73 19		 jae	 SHORT $LN532@LoadRaceDa

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00ba1	56		 push	 esi
  00ba2	8d 45 a8	 lea	 eax, DWORD PTR $T29[ebp]

; 2629 :             _My_data._Mysize = _Count;

  00ba5	89 75 b8	 mov	 DWORD PTR $T29[ebp+16], esi

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00ba8	68 00 00 00 00	 push	 OFFSET ?__szSkin1@?BN@??LoadRaceData@CRaceData@@QAEHPBD@Z@4PADA
  00bad	50		 push	 eax
  00bae	e8 00 00 00 00	 call	 _memcpy

; 2637 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

  00bb3	c6 44 35 a8 00	 mov	 BYTE PTR $T29[ebp+esi], 0

; 2638 :             } else { // _Strat == _Construct_strategy::_From_string
; 2639 : #ifdef _INSERT_STRING_ANNOTATION
; 2640 :                 _Traits::copy(_My_data._Bx._Buf, _Arg, _Count + 1);
; 2641 : #else // ^^^ _INSERT_STRING_ANNOTATION / !_INSERT_STRING_ANNOTATION vvv
; 2642 :                 _Traits::copy(_My_data._Bx._Buf, _Arg, _BUF_SIZE);
; 2643 : #endif // !_INSERT_STRING_ANNOTATION
; 2644 :             }
; 2645 : 
; 2646 :             _Proxy._Release();
; 2647 :             return;

  00bb8	eb 7e		 jmp	 SHORT $LN1464@LoadRaceDa
$LN532@LoadRaceDa:

; 4714 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00bba	8b fe		 mov	 edi, esi
  00bbc	83 cf 0f	 or	 edi, 15			; 0000000fH
  00bbf	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH

; 4715 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00bc5	76 15		 jbe	 SHORT $LN539@LoadRaceDa

; 4716 :             return _Max;

  00bc7	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  00bcc	bf ff ff ff 7f	 mov	 edi, 2147483647		; 7fffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00bd1	50		 push	 eax
  00bd2	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00bd7	83 c4 04	 add	 esp, 4
  00bda	eb 31		 jmp	 SHORT $LN1465@LoadRaceDa
$LN539@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4723 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00bdc	83 ff 16	 cmp	 edi, 22			; 00000016H
  00bdf	b8 16 00 00 00	 mov	 eax, 22			; 00000016H
  00be4	0f 42 f8	 cmovb	 edi, eax

; 2652 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00be7	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00bea	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  00bef	72 0b		 jb	 SHORT $LN547@LoadRaceDa

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00bf1	50		 push	 eax
  00bf2	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00bf7	83 c4 04	 add	 esp, 4
  00bfa	eb 11		 jmp	 SHORT $LN1465@LoadRaceDa
$LN547@LoadRaceDa:

; 240  :         }
; 241  :     }
; 242  : #endif // defined(_M_IX86) || defined(_M_X64)
; 243  : 
; 244  :     if (_Bytes != 0) {

  00bfc	85 c0		 test	 eax, eax
  00bfe	74 0b		 je	 SHORT $LN548@LoadRaceDa

; 87   :         return ::operator new(_Bytes);

  00c00	50		 push	 eax
  00c01	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00c06	83 c4 04	 add	 esp, 4

; 245  :         return _Traits::_Allocate(_Bytes);

  00c09	eb 02		 jmp	 SHORT $LN1465@LoadRaceDa
$LN548@LoadRaceDa:

; 246  :     }
; 247  : 
; 248  :     return nullptr;

  00c0b	33 c0		 xor	 eax, eax
$LN1465@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00c0d	56		 push	 esi
  00c0e	68 00 00 00 00	 push	 OFFSET ?__szSkin1@?BN@??LoadRaceData@CRaceData@@QAEHPBD@Z@4PADA
  00c13	50		 push	 eax

; 2653 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  00c14	89 85 bc fe ff
	ff		 mov	 DWORD PTR $T6[ebp], eax
  00c1a	89 45 a8	 mov	 DWORD PTR $T29[ebp], eax

; 2654 : 
; 2655 :         _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);
; 2656 : 
; 2657 :         _My_data._Mysize = _Count;

  00c1d	89 75 b8	 mov	 DWORD PTR $T29[ebp+16], esi

; 2658 :         _My_data._Myres  = _New_capacity;

  00c20	89 7d bc	 mov	 DWORD PTR $T29[ebp+20], edi

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00c23	e8 00 00 00 00	 call	 _memcpy

; 2664 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());

  00c28	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR $T6[ebp]
  00c2e	8b bd a8 fe ff
	ff		 mov	 edi, DWORD PTR _i$1$[ebp]
  00c34	c6 04 30 00	 mov	 BYTE PTR [eax+esi], 0
$LN1464@LoadRaceDa:
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 126  : 					if (TextFileLoader.GetTokenString(__szSkin1, &strSourceSkin) &&

  00c38	83 c4 0c	 add	 esp, 12			; 0000000cH
  00c3b	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  00c41	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00c47	83 c8 40	 or	 eax, 64			; 00000040H
  00c4a	c6 45 fc 19	 mov	 BYTE PTR __$EHRec$[ebp+8], 25 ; 00000019H
  00c4e	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  00c54	89 85 bc fe ff
	ff		 mov	 DWORD PTR $T7[ebp], eax
  00c5a	8d 45 c0	 lea	 eax, DWORD PTR _strSourceSkin$38[ebp]
  00c5d	50		 push	 eax
  00c5e	8d 45 a8	 lea	 eax, DWORD PTR $T29[ebp]
  00c61	50		 push	 eax
  00c62	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  00c67	85 c0		 test	 eax, eax
  00c69	74 4c		 je	 SHORT $LN45@LoadRaceDa
  00c6b	68 00 00 00 00	 push	 OFFSET ?__szSkin2@?BN@??LoadRaceData@CRaceData@@QAEHPBD@Z@4PADA
  00c70	8d 4d d8	 lea	 ecx, DWORD PTR $T43[ebp]
  00c73	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00c78	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  00c7e	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00c84	0d 80 00 00 00	 or	 eax, 128		; 00000080H
  00c89	c7 45 fc 1a 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 26 ; 0000001aH
  00c90	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  00c96	89 85 bc fe ff
	ff		 mov	 DWORD PTR $T7[ebp], eax
  00c9c	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _strTargetSkin$20[ebp]
  00ca2	50		 push	 eax
  00ca3	8d 45 d8	 lea	 eax, DWORD PTR $T43[ebp]
  00ca6	50		 push	 eax
  00ca7	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  00cac	c6 85 c7 fe ff
	ff 01		 mov	 BYTE PTR $T11[ebp], 1
  00cb3	85 c0		 test	 eax, eax
  00cb5	75 07		 jne	 SHORT $LN46@LoadRaceDa
$LN45@LoadRaceDa:
  00cb7	c6 85 c7 fe ff
	ff 00		 mov	 BYTE PTR $T11[ebp], 0
$LN46@LoadRaceDa:
  00cbe	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  00cc4	c7 45 fc 19 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 25 ; 00000019H
  00ccb	84 c0		 test	 al, al
  00ccd	79 57		 jns	 SHORT $LN818@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  00ccf	8b 4d ec	 mov	 ecx, DWORD PTR $T43[ebp+20]
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 126  : 					if (TextFileLoader.GetTokenString(__szSkin1, &strSourceSkin) &&

  00cd2	25 7f ff ff ff	 and	 eax, -129		; ffffff7fH
  00cd7	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  00cdd	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00ce0	72 32		 jb	 SHORT $LN825@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00ce2	8b 55 d8	 mov	 edx, DWORD PTR $T43[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00ce5	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00ce6	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00ce8	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00cee	72 14		 jb	 SHORT $LN835@LoadRaceDa

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00cf0	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00cf3	83 c1 23	 add	 ecx, 35			; 00000023H
  00cf6	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00cf8	83 c0 fc	 add	 eax, -4			; fffffffcH
  00cfb	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00cfe	0f 87 33 0a 00
	00		 ja	 $LN264@LoadRaceDa
$LN835@LoadRaceDa:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00d04	51		 push	 ecx
  00d05	52		 push	 edx
  00d06	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00d0b	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  00d11	83 c4 08	 add	 esp, 8
$LN825@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

  00d14	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T43[ebp+16], 0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;

  00d1b	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T43[ebp+20], 15 ; 0000000fH

; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00d22	c6 45 d8 00	 mov	 BYTE PTR $T43[ebp], 0
$LN818@LoadRaceDa:
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 126  : 					if (TextFileLoader.GetTokenString(__szSkin1, &strSourceSkin) &&

  00d26	c7 45 fc 12 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 18 ; 00000012H
  00d2d	a8 40		 test	 al, 64			; 00000040H
  00d2f	74 3d		 je	 SHORT $LN852@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  00d31	8b 4d bc	 mov	 ecx, DWORD PTR $T29[ebp+20]
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 126  : 					if (TextFileLoader.GetTokenString(__szSkin1, &strSourceSkin) &&

  00d34	83 e0 bf	 and	 eax, -65		; ffffffbfH
  00d37	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  00d3d	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00d40	72 2c		 jb	 SHORT $LN852@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00d42	8b 55 a8	 mov	 edx, DWORD PTR $T29[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00d45	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00d46	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00d48	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00d4e	72 14		 jb	 SHORT $LN862@LoadRaceDa

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00d50	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00d53	83 c1 23	 add	 ecx, 35			; 00000023H
  00d56	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00d58	83 c0 fc	 add	 eax, -4			; fffffffcH
  00d5b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00d5e	0f 87 d3 09 00
	00		 ja	 $LN264@LoadRaceDa
$LN862@LoadRaceDa:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00d64	51		 push	 ecx
  00d65	52		 push	 edx
  00d66	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00d6b	83 c4 08	 add	 esp, 8
$LN852@LoadRaceDa:
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 126  : 					if (TextFileLoader.GetTokenString(__szSkin1, &strSourceSkin) &&

  00d6e	80 bd c7 fe ff
	ff 00		 cmp	 BYTE PTR $T11[ebp], 0
  00d75	0f 84 df 00 00
	00		 je	 $LN8@LoadRaceDa

; 129  : 						AppendShapeSkin(dwShapeIndex, 0, (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  00d7b	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _strTargetSkin$20[ebp]
  00d81	50		 push	 eax
  00d82	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _strPathName$23[ebp]
  00d88	50		 push	 eax
  00d89	8d 45 a8	 lea	 eax, DWORD PTR $T28[ebp]
  00d8c	50		 push	 eax
  00d8d	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00d92	8b f0		 mov	 esi, eax
  00d94	8d 45 c0	 lea	 eax, DWORD PTR _strSourceSkin$38[ebp]
  00d97	c6 45 fc 1b	 mov	 BYTE PTR __$EHRec$[ebp+8], 27 ; 0000001bH
  00d9b	50		 push	 eax
  00d9c	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _strPathName$23[ebp]
  00da2	50		 push	 eax
  00da3	8d 45 d8	 lea	 eax, DWORD PTR $T42[ebp]
  00da6	50		 push	 eax
  00da7	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00dac	83 c4 18	 add	 esp, 24			; 00000018H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

  00daf	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 129  : 						AppendShapeSkin(dwShapeIndex, 0, (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  00db3	c6 45 fc 1c	 mov	 BYTE PTR __$EHRec$[ebp+8], 28 ; 0000001cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

  00db7	72 02		 jb	 SHORT $LN809@LoadRaceDa

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

  00db9	8b 00		 mov	 eax, DWORD PTR [eax]
$LN809@LoadRaceDa:

; 2236 :         if (_Large_string_engaged()) {

  00dbb	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  00dbf	72 02		 jb	 SHORT $LN870@LoadRaceDa

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

  00dc1	8b 36		 mov	 esi, DWORD PTR [esi]
$LN870@LoadRaceDa:
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 129  : 						AppendShapeSkin(dwShapeIndex, 0, (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  00dc3	8b 8d ac fe ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  00dc9	56		 push	 esi
  00dca	50		 push	 eax
  00dcb	6a 00		 push	 0
  00dcd	ff b5 b8 fe ff
	ff		 push	 DWORD PTR _dwShapeIndex$5[ebp]
  00dd3	e8 00 00 00 00	 call	 ?AppendShapeSkin@CRaceData@@QAEXIIPBD0@Z ; CRaceData::AppendShapeSkin
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  00dd8	8b 4d ec	 mov	 ecx, DWORD PTR $T42[ebp+20]
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 129  : 						AppendShapeSkin(dwShapeIndex, 0, (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  00ddb	c6 45 fc 1b	 mov	 BYTE PTR __$EHRec$[ebp+8], 27 ; 0000001bH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  00ddf	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00de2	72 2c		 jb	 SHORT $LN791@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00de4	8b 55 d8	 mov	 edx, DWORD PTR $T42[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00de7	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00de8	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00dea	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00df0	72 14		 jb	 SHORT $LN801@LoadRaceDa

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00df2	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00df5	83 c1 23	 add	 ecx, 35			; 00000023H
  00df8	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00dfa	83 c0 fc	 add	 eax, -4			; fffffffcH
  00dfd	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00e00	0f 87 31 09 00
	00		 ja	 $LN264@LoadRaceDa
$LN801@LoadRaceDa:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00e06	51		 push	 ecx
  00e07	52		 push	 edx
  00e08	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00e0d	83 c4 08	 add	 esp, 8
$LN791@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  00e10	8b 4d bc	 mov	 ecx, DWORD PTR $T28[ebp+20]

; 4841 :         _My_data._Mysize = 0;

  00e13	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T42[ebp+16], 0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;

  00e1a	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T42[ebp+20], 15 ; 0000000fH

; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00e21	c6 45 d8 00	 mov	 BYTE PTR $T42[ebp], 0
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 129  : 						AppendShapeSkin(dwShapeIndex, 0, (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  00e25	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  00e29	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00e2c	72 2c		 jb	 SHORT $LN8@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00e2e	8b 55 a8	 mov	 edx, DWORD PTR $T28[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00e31	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00e32	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00e34	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00e3a	72 14		 jb	 SHORT $LN774@LoadRaceDa

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00e3c	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00e3f	83 c1 23	 add	 ecx, 35			; 00000023H
  00e42	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00e44	83 c0 fc	 add	 eax, -4			; fffffffcH
  00e47	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00e4a	0f 87 e7 08 00
	00		 ja	 $LN264@LoadRaceDa
$LN774@LoadRaceDa:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00e50	51		 push	 ecx
  00e51	52		 push	 edx
  00e52	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00e57	83 c4 08	 add	 esp, 8
$LN8@LoadRaceDa:
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 122  : 				for (DWORD i=2; i<=9; i++)

  00e5a	47		 inc	 edi
  00e5b	89 bd a8 fe ff
	ff		 mov	 DWORD PTR _i$1$[ebp], edi
  00e61	83 ff 09	 cmp	 edi, 9
  00e64	0f 86 cb fc ff
	ff		 jbe	 $LL10@LoadRaceDa

; 130  : 					}
; 131  : 				}
; 132  : #else
; 133  : 				if (TextFileLoader.GetTokenString("sourceskin2", &strSourceSkin) &&
; 134  : 					TextFileLoader.GetTokenString("targetskin2", &strTargetSkin))
; 135  : 				{
; 136  : 					AppendShapeSkin(dwShapeIndex, 0, (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());
; 137  : 				}
; 138  : #endif
; 139  : 				TextFileLoader.SetParentNode();

  00e6a	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00e70	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  00e75	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR _strTargetSkin$20[ebp+20]
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 140  : 			}

  00e7b	c6 45 fc 11	 mov	 BYTE PTR __$EHRec$[ebp+8], 17 ; 00000011H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  00e7f	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00e82	72 2f		 jb	 SHORT $LN503@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00e84	8b 95 60 ff ff
	ff		 mov	 edx, DWORD PTR _strTargetSkin$20[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00e8a	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00e8b	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00e8d	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00e93	72 14		 jb	 SHORT $LN513@LoadRaceDa

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00e95	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00e98	83 c1 23	 add	 ecx, 35			; 00000023H
  00e9b	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00e9d	83 c0 fc	 add	 eax, -4			; fffffffcH
  00ea0	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00ea3	0f 87 8e 08 00
	00		 ja	 $LN264@LoadRaceDa
$LN513@LoadRaceDa:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00ea9	51		 push	 ecx
  00eaa	52		 push	 edx
  00eab	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00eb0	83 c4 08	 add	 esp, 8
$LN503@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  00eb3	8b 4d d4	 mov	 ecx, DWORD PTR _strSourceSkin$38[ebp+20]

; 4841 :         _My_data._Mysize = 0;

  00eb6	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _strTargetSkin$20[ebp+16], 0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;

  00ec0	c7 85 74 ff ff
	ff 0f 00 00 00	 mov	 DWORD PTR _strTargetSkin$20[ebp+20], 15 ; 0000000fH

; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00eca	c6 85 60 ff ff
	ff 00		 mov	 BYTE PTR _strTargetSkin$20[ebp], 0
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 140  : 			}

  00ed1	c6 45 fc 0d	 mov	 BYTE PTR __$EHRec$[ebp+8], 13 ; 0000000dH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  00ed5	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00ed8	72 2c		 jb	 SHORT $LN476@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00eda	8b 55 c0	 mov	 edx, DWORD PTR _strSourceSkin$38[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00edd	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00ede	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00ee0	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00ee6	72 14		 jb	 SHORT $LN486@LoadRaceDa

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00ee8	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00eeb	83 c1 23	 add	 ecx, 35			; 00000023H
  00eee	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00ef0	83 c0 fc	 add	 eax, -4			; fffffffcH
  00ef3	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00ef6	0f 87 3b 08 00
	00		 ja	 $LN264@LoadRaceDa
$LN486@LoadRaceDa:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00efc	51		 push	 ecx
  00efd	52		 push	 edx
  00efe	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00f03	83 c4 08	 add	 esp, 8
$LN476@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

  00f06	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _strSourceSkin$38[ebp+16], 0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;

  00f0d	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR _strSourceSkin$38[ebp+20], 15 ; 0000000fH

; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00f14	c6 45 c0 00	 mov	 BYTE PTR _strSourceSkin$38[ebp], 0
$LN1463@LoadRaceDa:
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 68   : 			for (DWORD i = 0; i < dwShapeDataCount; ++i)

  00f18	8b 4d a4	 mov	 ecx, DWORD PTR _strModel$25[ebp+20]
  00f1b	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  00f1f	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00f22	72 2c		 jb	 SHORT $LN5@LoadRaceDa
  00f24	8b 55 90	 mov	 edx, DWORD PTR _strModel$25[ebp]
  00f27	41		 inc	 ecx
  00f28	8b c2		 mov	 eax, edx
  00f2a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00f30	72 14		 jb	 SHORT $LN459@LoadRaceDa
  00f32	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00f35	83 c1 23	 add	 ecx, 35			; 00000023H
  00f38	2b c2		 sub	 eax, edx
  00f3a	83 c0 fc	 add	 eax, -4			; fffffffcH
  00f3d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00f40	0f 87 f1 07 00
	00		 ja	 $LN264@LoadRaceDa
$LN459@LoadRaceDa:
  00f46	51		 push	 ecx
  00f47	52		 push	 edx
  00f48	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00f4d	83 c4 08	 add	 esp, 8
$LN5@LoadRaceDa:
  00f50	8b 8d b0 fe ff
	ff		 mov	 ecx, DWORD PTR _i$1$[ebp]
  00f56	41		 inc	 ecx
  00f57	89 8d b0 fe ff
	ff		 mov	 DWORD PTR _i$1$[ebp], ecx
  00f5d	3b 8d b4 fe ff
	ff		 cmp	 ecx, DWORD PTR _dwShapeDataCount$3[ebp]
  00f63	0f 82 9a f6 ff
	ff		 jb	 $LL7@LoadRaceDa
$LN1442@LoadRaceDa:

; 141  : 		}
; 142  : 
; 143  : 		TextFileLoader.SetParentNode();

  00f69	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00f6f	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  00f74	8b 4d 8c	 mov	 ecx, DWORD PTR _strPathName$23[ebp+20]
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 144  : 	}

  00f77	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  00f7b	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00f7e	72 2f		 jb	 SHORT $LN1456@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00f80	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR _strPathName$23[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00f86	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00f87	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00f89	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00f8f	72 14		 jb	 SHORT $LN240@LoadRaceDa

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00f91	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00f94	83 c1 23	 add	 ecx, 35			; 00000023H
  00f97	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00f99	83 c0 fc	 add	 eax, -4			; fffffffcH
  00f9c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00f9f	0f 87 ba 07 00
	00		 ja	 $LN1474@LoadRaceDa
$LN240@LoadRaceDa:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00fa5	51		 push	 ecx
  00fa6	52		 push	 edx
  00fa7	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00fac	83 c4 08	 add	 esp, 8
$LN1456@LoadRaceDa:
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 146  : 	if (TextFileLoader.SetChildNode("hairdata"))

  00faf	8b bd c0 fe ff
	ff		 mov	 edi, DWORD PTR $T8[ebp]
$LN230@LoadRaceDa:
  00fb5	68 00 00 00 00	 push	 OFFSET ??_C@_08HKPOBGLF@hairdata@
  00fba	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00fc0	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHPBD@Z ; CTextFileLoader::SetChildNode
  00fc5	85 c0		 test	 eax, eax
  00fc7	0f 84 1e 07 00
	00		 je	 $LN138@LoadRaceDa
  00fcd	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4821 :         _My_data._Mysize = 0;

  00fd0	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR _strPathName$27[ebp+16], 0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  00fd7	0f 11 45 a8	 movups	 XMMWORD PTR _strPathName$27[ebp], xmm0

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

  00fdb	c7 45 bc 0f 00
	00 00		 mov	 DWORD PTR _strPathName$27[ebp+20], 15 ; 0000000fH

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00fe2	c6 45 a8 00	 mov	 BYTE PTR _strPathName$27[ebp], 0
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 150  : 		if (TextFileLoader.GetTokenString("pathname", &strPathName) &&

  00fe6	68 00 00 00 00	 push	 OFFSET ??_C@_08PEIJGPHF@pathname@
  00feb	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR $T22[ebp]
  00ff1	c6 45 fc 1d	 mov	 BYTE PTR __$EHRec$[ebp+8], 29 ; 0000001dH
  00ff5	c7 85 b8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _dwHairDataCount$4[ebp], 0
  00fff	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01004	8d 45 a8	 lea	 eax, DWORD PTR _strPathName$27[ebp]
  01007	c6 45 fc 1e	 mov	 BYTE PTR __$EHRec$[ebp+8], 30 ; 0000001eH
  0100b	50		 push	 eax
  0100c	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR $T22[ebp]
  01012	81 cf 00 01 00
	00		 or	 edi, 256		; 00000100H
  01018	50		 push	 eax
  01019	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  0101f	89 bd c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], edi
  01025	89 bd bc fe ff
	ff		 mov	 DWORD PTR $T7[ebp], edi
  0102b	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  01030	85 c0		 test	 eax, eax
  01032	74 47		 je	 SHORT $LN47@LoadRaceDa
  01034	68 00 00 00 00	 push	 OFFSET ??_C@_0O@HCGNHJP@hairdatacount@
  01039	8d 4d d8	 lea	 ecx, DWORD PTR $T41[ebp]
  0103c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01041	8d 85 b8 fe ff
	ff		 lea	 eax, DWORD PTR _dwHairDataCount$4[ebp]
  01047	c7 45 fc 1f 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 31 ; 0000001fH
  0104e	50		 push	 eax
  0104f	8d 45 d8	 lea	 eax, DWORD PTR $T41[ebp]
  01052	81 cf 00 02 00
	00		 or	 edi, 512		; 00000200H
  01058	50		 push	 eax
  01059	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  0105f	89 bd c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], edi
  01065	89 bd bc fe ff
	ff		 mov	 DWORD PTR $T7[ebp], edi
  0106b	e8 00 00 00 00	 call	 ?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z ; CTextFileLoader::GetTokenDoubleWord
  01070	c6 85 c7 fe ff
	ff 01		 mov	 BYTE PTR $T10[ebp], 1
  01077	85 c0		 test	 eax, eax
  01079	75 07		 jne	 SHORT $LN48@LoadRaceDa
$LN47@LoadRaceDa:
  0107b	c6 85 c7 fe ff
	ff 00		 mov	 BYTE PTR $T10[ebp], 0
$LN48@LoadRaceDa:
  01082	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  01088	a9 00 02 00 00	 test	 eax, 512		; 00000200H
  0108d	74 19		 je	 SHORT $LN101@LoadRaceDa
  0108f	25 ff fd ff ff	 and	 eax, -513		; fffffdffH
  01094	8d 4d d8	 lea	 ecx, DWORD PTR $T41[ebp]
  01097	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  0109d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  010a2	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
$LN101@LoadRaceDa:
  010a8	c7 45 fc 1d 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 29 ; 0000001dH
  010af	a9 00 01 00 00	 test	 eax, 256		; 00000100H
  010b4	74 16		 je	 SHORT $LN102@LoadRaceDa
  010b6	25 ff fe ff ff	 and	 eax, -257		; fffffeffH
  010bb	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR $T22[ebp]
  010c1	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  010c7	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN102@LoadRaceDa:
  010cc	80 bd c7 fe ff
	ff 00		 cmp	 BYTE PTR $T10[ebp], 0
  010d3	0f 84 cf 05 00
	00		 je	 $LN1443@LoadRaceDa

; 154  : 			for (DWORD i = 0; i < dwHairDataCount; ++i)

  010d9	33 ff		 xor	 edi, edi
  010db	89 bd b4 fe ff
	ff		 mov	 DWORD PTR _i$1$[ebp], edi
  010e1	39 bd b8 fe ff
	ff		 cmp	 DWORD PTR _dwHairDataCount$4[ebp], edi
  010e7	0f 86 bb 05 00
	00		 jbe	 $LN1443@LoadRaceDa
  010ed	0f 1f 00	 npad	 3
$LL13@LoadRaceDa:
  010f0	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2629 :             _My_data._Mysize = _Count;

  010f3	c7 45 d0 08 00
	00 00		 mov	 DWORD PTR $T37[ebp+16], 8

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  010fa	0f 11 45 c0	 movups	 XMMWORD PTR $T37[ebp], xmm0

; 2630 :             _My_data._Myres  = _BUF_SIZE - 1;

  010fe	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T37[ebp+20], 15 ; 0000000fH

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  01105	c7 45 c0 68 61
	69 72		 mov	 DWORD PTR $T37[ebp], 1919508840 ; 72696168H
  0110c	c7 45 c4 64 61
	74 61		 mov	 DWORD PTR $T37[ebp+4], 1635017060 ; 61746164H

; 2637 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

  01113	c6 45 c8 00	 mov	 BYTE PTR $T37[ebp+8], 0
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 156  : 				if (!TextFileLoader.SetChildNode("hairdata", i))

  01117	57		 push	 edi
  01118	8d 45 c0	 lea	 eax, DWORD PTR $T37[ebp]
  0111b	c6 45 fc 20	 mov	 BYTE PTR __$EHRec$[ebp+8], 32 ; 00000020H
  0111f	50		 push	 eax
  01120	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  01126	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@K@Z ; CTextFileLoader::SetChildNode
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  0112b	8b 4d d4	 mov	 ecx, DWORD PTR $T37[ebp+20]
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 156  : 				if (!TextFileLoader.SetChildNode("hairdata", i))

  0112e	8b f0		 mov	 esi, eax
  01130	c6 45 fc 1d	 mov	 BYTE PTR __$EHRec$[ebp+8], 29 ; 0000001dH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  01134	83 f9 10	 cmp	 ecx, 16			; 00000010H
  01137	72 2c		 jb	 SHORT $LN203@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01139	8b 55 c0	 mov	 edx, DWORD PTR $T37[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  0113c	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0113d	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0113f	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  01145	72 14		 jb	 SHORT $LN213@LoadRaceDa

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  01147	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0114a	83 c1 23	 add	 ecx, 35			; 00000023H
  0114d	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0114f	83 c0 fc	 add	 eax, -4			; fffffffcH
  01152	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  01155	0f 87 dc 05 00
	00		 ja	 $LN264@LoadRaceDa
$LN213@LoadRaceDa:

; 265  :         ::operator delete(_Ptr, _Bytes);

  0115b	51		 push	 ecx
  0115c	52		 push	 edx
  0115d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  01162	83 c4 08	 add	 esp, 8
$LN203@LoadRaceDa:
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 156  : 				if (!TextFileLoader.SetChildNode("hairdata", i))

  01165	85 f6		 test	 esi, esi
  01167	0f 84 28 05 00
	00		 je	 $LN11@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0116d	66 a1 08 00 00
	00		 mov	 ax, WORD PTR ??_C@_0M@GCDLCIFI@specialpath@+8
  01173	0f 57 c0	 xorps	 xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  01176	0f 11 45 c0	 movups	 XMMWORD PTR $T36[ebp], xmm0

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0117a	66 89 45 c8	 mov	 WORD PTR $T36[ebp+8], ax
  0117e	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0M@GCDLCIFI@specialpath@
  01186	a0 0a 00 00 00	 mov	 al, BYTE PTR ??_C@_0M@GCDLCIFI@specialpath@+10

; 2629 :             _My_data._Mysize = _Count;

  0118b	c7 45 d0 0b 00
	00 00		 mov	 DWORD PTR $T36[ebp+16], 11 ; 0000000bH

; 2630 :             _My_data._Myres  = _BUF_SIZE - 1;

  01192	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T36[ebp+20], 15 ; 0000000fH

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  01199	66 0f d6 45 c0	 movq	 QWORD PTR $T36[ebp], xmm0
  0119e	88 45 ca	 mov	 BYTE PTR $T36[ebp+10], al

; 2637 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

  011a1	c6 45 cb 00	 mov	 BYTE PTR $T36[ebp+11], 0
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 162  : 				TextFileLoader.GetTokenString("specialpath", &strPathName);

  011a5	8d 45 a8	 lea	 eax, DWORD PTR _strPathName$27[ebp]
  011a8	c6 45 fc 21	 mov	 BYTE PTR __$EHRec$[ebp+8], 33 ; 00000021H
  011ac	50		 push	 eax
  011ad	8d 45 c0	 lea	 eax, DWORD PTR $T36[ebp]
  011b0	50		 push	 eax
  011b1	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  011b7	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  011bc	8b 4d d4	 mov	 ecx, DWORD PTR $T36[ebp+20]
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 162  : 				TextFileLoader.GetTokenString("specialpath", &strPathName);

  011bf	c6 45 fc 1d	 mov	 BYTE PTR __$EHRec$[ebp+8], 29 ; 0000001dH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  011c3	83 f9 10	 cmp	 ecx, 16			; 00000010H
  011c6	72 2c		 jb	 SHORT $LN422@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  011c8	8b 55 c0	 mov	 edx, DWORD PTR $T36[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  011cb	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  011cc	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  011ce	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  011d4	72 14		 jb	 SHORT $LN432@LoadRaceDa

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  011d6	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  011d9	83 c1 23	 add	 ecx, 35			; 00000023H
  011dc	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  011de	83 c0 fc	 add	 eax, -4			; fffffffcH
  011e1	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  011e4	0f 87 4d 05 00
	00		 ja	 $LN264@LoadRaceDa
$LN432@LoadRaceDa:

; 265  :         ::operator delete(_Ptr, _Bytes);

  011ea	51		 push	 ecx
  011eb	52		 push	 edx
  011ec	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  011f1	83 c4 08	 add	 esp, 8
$LN422@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  011f4	a0 08 00 00 00	 mov	 al, BYTE PTR ??_C@_09DFEJDBKH@hairindex@+8
  011f9	0f 57 c0	 xorps	 xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  011fc	0f 11 45 c0	 movups	 XMMWORD PTR $T35[ebp], xmm0

; 2629 :             _My_data._Mysize = _Count;

  01200	c7 45 d0 09 00
	00 00		 mov	 DWORD PTR $T35[ebp+16], 9

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  01207	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_09DFEJDBKH@hairindex@

; 2630 :             _My_data._Myres  = _BUF_SIZE - 1;

  0120f	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T35[ebp+20], 15 ; 0000000fH

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  01216	66 0f d6 45 c0	 movq	 QWORD PTR $T35[ebp], xmm0
  0121b	88 45 c8	 mov	 BYTE PTR $T35[ebp+8], al

; 2637 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

  0121e	c6 45 c9 00	 mov	 BYTE PTR $T35[ebp+9], 0
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 166  : 				if (!TextFileLoader.GetTokenDoubleWord("hairindex", &dwShapeIndex))

  01222	8d 85 b0 fe ff
	ff		 lea	 eax, DWORD PTR _dwShapeIndex$2[ebp]
  01228	c6 45 fc 22	 mov	 BYTE PTR __$EHRec$[ebp+8], 34 ; 00000022H
  0122c	50		 push	 eax
  0122d	8d 45 c0	 lea	 eax, DWORD PTR $T35[ebp]
  01230	50		 push	 eax
  01231	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  01237	e8 00 00 00 00	 call	 ?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z ; CTextFileLoader::GetTokenDoubleWord
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  0123c	8b 4d d4	 mov	 ecx, DWORD PTR $T35[ebp+20]
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 166  : 				if (!TextFileLoader.GetTokenDoubleWord("hairindex", &dwShapeIndex))

  0123f	8b f0		 mov	 esi, eax
  01241	c6 45 fc 1d	 mov	 BYTE PTR __$EHRec$[ebp+8], 29 ; 0000001dH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  01245	83 f9 10	 cmp	 ecx, 16			; 00000010H
  01248	72 2c		 jb	 SHORT $LN358@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0124a	8b 55 c0	 mov	 edx, DWORD PTR $T35[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  0124d	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0124e	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  01250	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  01256	72 14		 jb	 SHORT $LN368@LoadRaceDa

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  01258	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0125b	83 c1 23	 add	 ecx, 35			; 00000023H
  0125e	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  01260	83 c0 fc	 add	 eax, -4			; fffffffcH
  01263	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  01266	0f 87 cb 04 00
	00		 ja	 $LN264@LoadRaceDa
$LN368@LoadRaceDa:

; 265  :         ::operator delete(_Ptr, _Bytes);

  0126c	51		 push	 ecx
  0126d	52		 push	 edx
  0126e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  01273	83 c4 08	 add	 esp, 8
$LN358@LoadRaceDa:
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 166  : 				if (!TextFileLoader.GetTokenDoubleWord("hairindex", &dwShapeIndex))

  01276	85 f6		 test	 esi, esi
  01278	0f 84 17 04 00
	00		 je	 $LN11@LoadRaceDa
  0127e	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4821 :         _My_data._Mysize = 0;

  01281	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _strModel$19[ebp+16], 0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  0128b	0f 11 85 60 ff
	ff ff		 movups	 XMMWORD PTR _strModel$19[ebp], xmm0

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

  01292	c7 85 74 ff ff
	ff 0f 00 00 00	 mov	 DWORD PTR _strModel$19[ebp+20], 15 ; 0000000fH

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  0129c	c6 85 60 ff ff
	ff 00		 mov	 BYTE PTR _strModel$19[ebp], 0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  012a3	0f 11 45 90	 movups	 XMMWORD PTR _strSourceSkin$24[ebp], xmm0

; 4821 :         _My_data._Mysize = 0;

  012a7	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR _strSourceSkin$24[ebp+16], 0

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

  012ae	c7 45 a4 0f 00
	00 00		 mov	 DWORD PTR _strSourceSkin$24[ebp+20], 15 ; 0000000fH

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  012b5	c6 45 90 00	 mov	 BYTE PTR _strSourceSkin$24[ebp], 0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  012b9	0f 11 85 78 ff
	ff ff		 movups	 XMMWORD PTR _strTargetSkin$21[ebp], xmm0

; 4821 :         _My_data._Mysize = 0;

  012c0	c7 45 88 00 00
	00 00		 mov	 DWORD PTR _strTargetSkin$21[ebp+16], 0

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

  012c7	c7 45 8c 0f 00
	00 00		 mov	 DWORD PTR _strTargetSkin$21[ebp+20], 15 ; 0000000fH

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  012ce	c6 85 78 ff ff
	ff 00		 mov	 BYTE PTR _strTargetSkin$21[ebp], 0
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 175  : 					TextFileLoader.GetTokenString("sourceskin", &strSourceSkin) &&

  012d5	68 00 00 00 00	 push	 OFFSET ??_C@_05NCCFOPHA@model@
  012da	8d 4d d8	 lea	 ecx, DWORD PTR $T40[ebp]
  012dd	c6 45 fc 25	 mov	 BYTE PTR __$EHRec$[ebp+8], 37 ; 00000025H
  012e1	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  012e6	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  012ec	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  012f2	0d 00 04 00 00	 or	 eax, 1024		; 00000400H
  012f7	c6 45 fc 26	 mov	 BYTE PTR __$EHRec$[ebp+8], 38 ; 00000026H
  012fb	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  01301	89 85 bc fe ff
	ff		 mov	 DWORD PTR $T7[ebp], eax
  01307	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _strModel$19[ebp]
  0130d	50		 push	 eax
  0130e	8d 45 d8	 lea	 eax, DWORD PTR $T40[ebp]
  01311	50		 push	 eax
  01312	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  01317	85 c0		 test	 eax, eax
  01319	0f 84 94 00 00
	00		 je	 $LN49@LoadRaceDa
  0131f	68 00 00 00 00	 push	 OFFSET ??_C@_0L@ILFPKBGB@sourceskin@
  01324	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR $T16[ebp]
  0132a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0132f	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  01335	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  0133b	0d 00 08 00 00	 or	 eax, 2048		; 00000800H
  01340	c7 45 fc 27 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 39 ; 00000027H
  01347	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  0134d	89 85 bc fe ff
	ff		 mov	 DWORD PTR $T7[ebp], eax
  01353	8d 45 90	 lea	 eax, DWORD PTR _strSourceSkin$24[ebp]
  01356	50		 push	 eax
  01357	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR $T16[ebp]
  0135d	50		 push	 eax
  0135e	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  01363	85 c0		 test	 eax, eax
  01365	74 4c		 je	 SHORT $LN49@LoadRaceDa
  01367	68 00 00 00 00	 push	 OFFSET ??_C@_0L@EHMNDCND@targetskin@
  0136c	8d 4d c0	 lea	 ecx, DWORD PTR $T34[ebp]
  0136f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01374	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  0137a	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  01380	0d 00 10 00 00	 or	 eax, 4096		; 00001000H
  01385	c7 45 fc 28 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 40 ; 00000028H
  0138c	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  01392	89 85 bc fe ff
	ff		 mov	 DWORD PTR $T7[ebp], eax
  01398	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _strTargetSkin$21[ebp]
  0139e	50		 push	 eax
  0139f	8d 45 c0	 lea	 eax, DWORD PTR $T34[ebp]
  013a2	50		 push	 eax
  013a3	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  013a8	c6 85 c7 fe ff
	ff 01		 mov	 BYTE PTR $T9[ebp], 1
  013af	85 c0		 test	 eax, eax
  013b1	75 07		 jne	 SHORT $LN50@LoadRaceDa
$LN49@LoadRaceDa:
  013b3	c6 85 c7 fe ff
	ff 00		 mov	 BYTE PTR $T9[ebp], 0
$LN50@LoadRaceDa:
  013ba	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  013c0	a9 00 10 00 00	 test	 eax, 4096		; 00001000H
  013c5	74 19		 je	 SHORT $LN115@LoadRaceDa
  013c7	25 ff ef ff ff	 and	 eax, -4097		; ffffefffH
  013cc	8d 4d c0	 lea	 ecx, DWORD PTR $T34[ebp]
  013cf	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  013d5	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  013da	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
$LN115@LoadRaceDa:
  013e0	a9 00 08 00 00	 test	 eax, 2048		; 00000800H
  013e5	74 1c		 je	 SHORT $LN116@LoadRaceDa
  013e7	25 ff f7 ff ff	 and	 eax, -2049		; fffff7ffH
  013ec	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR $T16[ebp]
  013f2	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  013f8	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  013fd	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
$LN116@LoadRaceDa:
  01403	c7 45 fc 25 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 37 ; 00000025H
  0140a	a9 00 04 00 00	 test	 eax, 1024		; 00000400H
  0140f	74 3f		 je	 SHORT $LN1110@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  01411	8b 4d ec	 mov	 ecx, DWORD PTR $T40[ebp+20]
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 175  : 					TextFileLoader.GetTokenString("sourceskin", &strSourceSkin) &&

  01414	25 ff fb ff ff	 and	 eax, -1025		; fffffbffH
  01419	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  0141f	83 f9 10	 cmp	 ecx, 16			; 00000010H
  01422	72 2c		 jb	 SHORT $LN1110@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01424	8b 55 d8	 mov	 edx, DWORD PTR $T40[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  01427	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01428	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0142a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  01430	72 14		 jb	 SHORT $LN1120@LoadRaceDa

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  01432	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  01435	83 c1 23	 add	 ecx, 35			; 00000023H
  01438	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0143a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0143d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  01440	0f 87 f1 02 00
	00		 ja	 $LN264@LoadRaceDa
$LN1120@LoadRaceDa:

; 265  :         ::operator delete(_Ptr, _Bytes);

  01446	51		 push	 ecx
  01447	52		 push	 edx
  01448	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0144d	83 c4 08	 add	 esp, 8
$LN1110@LoadRaceDa:
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 175  : 					TextFileLoader.GetTokenString("sourceskin", &strSourceSkin) &&

  01450	80 bd c7 fe ff
	ff 00		 cmp	 BYTE PTR $T9[ebp], 0
  01457	0f 84 55 01 00
	00		 je	 $LN1137@LoadRaceDa

; 178  : 					SetHairSkin(dwShapeIndex, 0, (strPathName + strModel).c_str(), (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  0145d	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _strTargetSkin$21[ebp]
  01463	50		 push	 eax
  01464	8d 45 a8	 lea	 eax, DWORD PTR _strPathName$27[ebp]
  01467	50		 push	 eax
  01468	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR $T15[ebp]
  0146e	50		 push	 eax
  0146f	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  01474	8b f8		 mov	 edi, eax
  01476	8d 45 90	 lea	 eax, DWORD PTR _strSourceSkin$24[ebp]
  01479	c6 45 fc 29	 mov	 BYTE PTR __$EHRec$[ebp+8], 41 ; 00000029H
  0147d	50		 push	 eax
  0147e	8d 45 a8	 lea	 eax, DWORD PTR _strPathName$27[ebp]
  01481	50		 push	 eax
  01482	8d 45 c0	 lea	 eax, DWORD PTR $T33[ebp]
  01485	50		 push	 eax
  01486	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  0148b	8b f0		 mov	 esi, eax
  0148d	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _strModel$19[ebp]
  01493	c6 45 fc 2a	 mov	 BYTE PTR __$EHRec$[ebp+8], 42 ; 0000002aH
  01497	50		 push	 eax
  01498	8d 45 a8	 lea	 eax, DWORD PTR _strPathName$27[ebp]
  0149b	50		 push	 eax
  0149c	8d 45 d8	 lea	 eax, DWORD PTR $T39[ebp]
  0149f	50		 push	 eax
  014a0	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  014a5	83 c4 24	 add	 esp, 36			; 00000024H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

  014a8	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 178  : 					SetHairSkin(dwShapeIndex, 0, (strPathName + strModel).c_str(), (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  014ac	c6 45 fc 2b	 mov	 BYTE PTR __$EHRec$[ebp+8], 43 ; 0000002bH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

  014b0	72 02		 jb	 SHORT $LN1094@LoadRaceDa

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

  014b2	8b 00		 mov	 eax, DWORD PTR [eax]
$LN1094@LoadRaceDa:

; 2236 :         if (_Large_string_engaged()) {

  014b4	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  014b8	72 02		 jb	 SHORT $LN1209@LoadRaceDa

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

  014ba	8b 36		 mov	 esi, DWORD PTR [esi]
$LN1209@LoadRaceDa:

; 2236 :         if (_Large_string_engaged()) {

  014bc	83 7f 14 10	 cmp	 DWORD PTR [edi+20], 16	; 00000010H
  014c0	72 02		 jb	 SHORT $LN1216@LoadRaceDa

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

  014c2	8b 3f		 mov	 edi, DWORD PTR [edi]
$LN1216@LoadRaceDa:
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 178  : 					SetHairSkin(dwShapeIndex, 0, (strPathName + strModel).c_str(), (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  014c4	8b 8d ac fe ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  014ca	57		 push	 edi
  014cb	56		 push	 esi
  014cc	50		 push	 eax
  014cd	6a 00		 push	 0
  014cf	ff b5 b0 fe ff
	ff		 push	 DWORD PTR _dwShapeIndex$2[ebp]
  014d5	e8 00 00 00 00	 call	 ?SetHairSkin@CRaceData@@QAEXIIPBD00@Z ; CRaceData::SetHairSkin
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  014da	8b 4d ec	 mov	 ecx, DWORD PTR $T39[ebp+20]
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 178  : 					SetHairSkin(dwShapeIndex, 0, (strPathName + strModel).c_str(), (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  014dd	c6 45 fc 2a	 mov	 BYTE PTR __$EHRec$[ebp+8], 42 ; 0000002aH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  014e1	83 f9 10	 cmp	 ecx, 16			; 00000010H
  014e4	72 2c		 jb	 SHORT $LN1191@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  014e6	8b 55 d8	 mov	 edx, DWORD PTR $T39[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  014e9	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  014ea	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  014ec	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  014f2	72 14		 jb	 SHORT $LN1201@LoadRaceDa

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  014f4	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  014f7	83 c1 23	 add	 ecx, 35			; 00000023H
  014fa	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  014fc	83 c0 fc	 add	 eax, -4			; fffffffcH
  014ff	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  01502	0f 87 2f 02 00
	00		 ja	 $LN264@LoadRaceDa
$LN1201@LoadRaceDa:

; 265  :         ::operator delete(_Ptr, _Bytes);

  01508	51		 push	 ecx
  01509	52		 push	 edx
  0150a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0150f	83 c4 08	 add	 esp, 8
$LN1191@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  01512	8b 4d d4	 mov	 ecx, DWORD PTR $T33[ebp+20]

; 4841 :         _My_data._Mysize = 0;

  01515	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T39[ebp+16], 0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;

  0151c	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T39[ebp+20], 15 ; 0000000fH

; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  01523	c6 45 d8 00	 mov	 BYTE PTR $T39[ebp], 0
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 178  : 					SetHairSkin(dwShapeIndex, 0, (strPathName + strModel).c_str(), (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  01527	c6 45 fc 29	 mov	 BYTE PTR __$EHRec$[ebp+8], 41 ; 00000029H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  0152b	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0152e	72 2c		 jb	 SHORT $LN1164@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01530	8b 55 c0	 mov	 edx, DWORD PTR $T33[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  01533	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01534	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  01536	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0153c	72 14		 jb	 SHORT $LN1174@LoadRaceDa

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0153e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  01541	83 c1 23	 add	 ecx, 35			; 00000023H
  01544	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  01546	83 c0 fc	 add	 eax, -4			; fffffffcH
  01549	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0154c	0f 87 e5 01 00
	00		 ja	 $LN264@LoadRaceDa
$LN1174@LoadRaceDa:

; 265  :         ::operator delete(_Ptr, _Bytes);

  01552	51		 push	 ecx
  01553	52		 push	 edx
  01554	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  01559	83 c4 08	 add	 esp, 8
$LN1164@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  0155c	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR $T15[ebp+20]

; 4841 :         _My_data._Mysize = 0;

  01562	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T33[ebp+16], 0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;

  01569	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T33[ebp+20], 15 ; 0000000fH

; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  01570	c6 45 c0 00	 mov	 BYTE PTR $T33[ebp], 0
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 178  : 					SetHairSkin(dwShapeIndex, 0, (strPathName + strModel).c_str(), (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  01574	c6 45 fc 25	 mov	 BYTE PTR __$EHRec$[ebp+8], 37 ; 00000025H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  01578	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0157b	72 2f		 jb	 SHORT $LN1457@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0157d	8b 95 48 ff ff
	ff		 mov	 edx, DWORD PTR $T15[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  01583	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01584	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  01586	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0158c	72 14		 jb	 SHORT $LN1147@LoadRaceDa

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0158e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  01591	83 c1 23	 add	 ecx, 35			; 00000023H
  01594	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  01596	83 c0 fc	 add	 eax, -4			; fffffffcH
  01599	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0159c	0f 87 95 01 00
	00		 ja	 $LN264@LoadRaceDa
$LN1147@LoadRaceDa:

; 265  :         ::operator delete(_Ptr, _Bytes);

  015a2	51		 push	 ecx
  015a3	52		 push	 edx
  015a4	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  015a9	83 c4 08	 add	 esp, 8
$LN1457@LoadRaceDa:
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 181  : 				TextFileLoader.SetParentNode();

  015ac	8b bd b4 fe ff
	ff		 mov	 edi, DWORD PTR _i$1$[ebp]
$LN1137@LoadRaceDa:
  015b2	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  015b8	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  015bd	8b 4d 8c	 mov	 ecx, DWORD PTR _strTargetSkin$21[ebp+20]
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 182  : 			}

  015c0	c6 45 fc 24	 mov	 BYTE PTR __$EHRec$[ebp+8], 36 ; 00000024H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  015c4	83 f9 10	 cmp	 ecx, 16			; 00000010H
  015c7	72 2f		 jb	 SHORT $LN617@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  015c9	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR _strTargetSkin$21[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  015cf	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  015d0	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  015d2	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  015d8	72 14		 jb	 SHORT $LN627@LoadRaceDa

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  015da	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  015dd	83 c1 23	 add	 ecx, 35			; 00000023H
  015e0	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  015e2	83 c0 fc	 add	 eax, -4			; fffffffcH
  015e5	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  015e8	0f 87 49 01 00
	00		 ja	 $LN264@LoadRaceDa
$LN627@LoadRaceDa:

; 265  :         ::operator delete(_Ptr, _Bytes);

  015ee	51		 push	 ecx
  015ef	52		 push	 edx
  015f0	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  015f5	83 c4 08	 add	 esp, 8
$LN617@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  015f8	8b 4d a4	 mov	 ecx, DWORD PTR _strSourceSkin$24[ebp+20]

; 4841 :         _My_data._Mysize = 0;

  015fb	c7 45 88 00 00
	00 00		 mov	 DWORD PTR _strTargetSkin$21[ebp+16], 0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;

  01602	c7 45 8c 0f 00
	00 00		 mov	 DWORD PTR _strTargetSkin$21[ebp+20], 15 ; 0000000fH

; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  01609	c6 85 78 ff ff
	ff 00		 mov	 BYTE PTR _strTargetSkin$21[ebp], 0
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 182  : 			}

  01610	c6 45 fc 23	 mov	 BYTE PTR __$EHRec$[ebp+8], 35 ; 00000023H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  01614	83 f9 10	 cmp	 ecx, 16			; 00000010H
  01617	72 2c		 jb	 SHORT $LN590@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01619	8b 55 90	 mov	 edx, DWORD PTR _strSourceSkin$24[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  0161c	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0161d	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0161f	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  01625	72 14		 jb	 SHORT $LN600@LoadRaceDa

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  01627	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0162a	83 c1 23	 add	 ecx, 35			; 00000023H
  0162d	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0162f	83 c0 fc	 add	 eax, -4			; fffffffcH
  01632	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  01635	0f 87 fc 00 00
	00		 ja	 $LN264@LoadRaceDa
$LN600@LoadRaceDa:

; 265  :         ::operator delete(_Ptr, _Bytes);

  0163b	51		 push	 ecx
  0163c	52		 push	 edx
  0163d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  01642	83 c4 08	 add	 esp, 8
$LN590@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  01645	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR _strModel$19[ebp+20]

; 4841 :         _My_data._Mysize = 0;

  0164b	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR _strSourceSkin$24[ebp+16], 0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;

  01652	c7 45 a4 0f 00
	00 00		 mov	 DWORD PTR _strSourceSkin$24[ebp+20], 15 ; 0000000fH

; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  01659	c6 45 90 00	 mov	 BYTE PTR _strSourceSkin$24[ebp], 0
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 182  : 			}

  0165d	c6 45 fc 1d	 mov	 BYTE PTR __$EHRec$[ebp+8], 29 ; 0000001dH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

  01661	83 f9 10	 cmp	 ecx, 16			; 00000010H
  01664	72 2f		 jb	 SHORT $LN11@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01666	8b 95 60 ff ff
	ff		 mov	 edx, DWORD PTR _strModel$19[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  0166c	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0166d	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0166f	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  01675	72 14		 jb	 SHORT $LN747@LoadRaceDa

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  01677	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0167a	83 c1 23	 add	 ecx, 35			; 00000023H
  0167d	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0167f	83 c0 fc	 add	 eax, -4			; fffffffcH
  01682	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  01685	0f 87 ac 00 00
	00		 ja	 $LN264@LoadRaceDa
$LN747@LoadRaceDa:

; 265  :         ::operator delete(_Ptr, _Bytes);

  0168b	51		 push	 ecx
  0168c	52		 push	 edx
  0168d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  01692	83 c4 08	 add	 esp, 8
$LN11@LoadRaceDa:
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 154  : 			for (DWORD i = 0; i < dwHairDataCount; ++i)

  01695	47		 inc	 edi
  01696	89 bd b4 fe ff
	ff		 mov	 DWORD PTR _i$1$[ebp], edi
  0169c	3b bd b8 fe ff
	ff		 cmp	 edi, DWORD PTR _dwHairDataCount$4[ebp]
  016a2	0f 82 48 fa ff
	ff		 jb	 $LL13@LoadRaceDa
$LN1443@LoadRaceDa:

; 183  : 		}
; 184  : 
; 185  : 		TextFileLoader.SetParentNode();

  016a8	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  016ae	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

  016b3	8b 4d bc	 mov	 ecx, DWORD PTR _strPathName$27[ebp+20]
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 186  : 	}

  016b6	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

  016ba	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4832 :         if (_My_data._Large_string_engaged()) {

  016bd	72 2c		 jb	 SHORT $LN138@LoadRaceDa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  016bf	8b 55 a8	 mov	 edx, DWORD PTR _strPathName$27[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  016c2	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  016c3	8b c2		 mov	 eax, edx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  016c5	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  016cb	72 14		 jb	 SHORT $LN148@LoadRaceDa

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  016cd	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  016d0	83 c1 23	 add	 ecx, 35			; 00000023H
  016d3	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  016d5	83 c0 fc	 add	 eax, -4			; fffffffcH
  016d8	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  016db	0f 87 88 00 00
	00		 ja	 $LN1475@LoadRaceDa
$LN148@LoadRaceDa:

; 265  :         ::operator delete(_Ptr, _Bytes);

  016e1	51		 push	 ecx
  016e2	52		 push	 edx
  016e3	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  016e8	83 c4 08	 add	 esp, 8
$LN138@LoadRaceDa:
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp

; 189  : 	if (TextFileLoader.SetChildNode("attachingdata"))

  016eb	68 00 00 00 00	 push	 OFFSET ??_C@_0O@OPEMPJIC@attachingdata@
  016f0	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  016f6	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHPBD@Z ; CTextFileLoader::SetChildNode
  016fb	85 c0		 test	 eax, eax
  016fd	74 2e		 je	 SHORT $LN36@LoadRaceDa

; 190  : 	{
; 191  : 		if (!NRaceData::LoadAttachingData(TextFileLoader, &m_AttachingDataVector))

  016ff	8b 85 ac fe ff
	ff		 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  01705	05 d0 00 00 00	 add	 eax, 208		; 000000d0H
  0170a	50		 push	 eax
  0170b	8d 85 c8 fe ff
	ff		 lea	 eax, DWORD PTR _TextFileLoader$[ebp]
  01711	50		 push	 eax
  01712	e8 00 00 00 00	 call	 ?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z ; NRaceData::LoadAttachingData
  01717	83 c4 08	 add	 esp, 8
  0171a	85 c0		 test	 eax, eax
  0171c	0f 84 59 ec ff
	ff		 je	 $LN124@LoadRaceDa

; 192  : 			return FALSE;
; 193  : 
; 194  : 		TextFileLoader.SetParentNode();

  01722	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  01728	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
$LN36@LoadRaceDa:

; 195  : 	}
; 196  : 
; 197  : 	return TRUE;

  0172d	be 01 00 00 00	 mov	 esi, 1
  01732	e9 46 ec ff ff	 jmp	 $LN125@LoadRaceDa
$LN264@LoadRaceDa:

; 198  : }

  01737	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1469@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0173c	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1470@LoadRaceDa:
  01741	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1471@LoadRaceDa:
  01746	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1472@LoadRaceDa:
  0174b	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1473@LoadRaceDa:
  01750	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1397@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2268 :             _Xran();

  01755	e8 00 00 00 00	 call	 ?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
$LN1403@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1905 :             _Xrange();

  0175a	e8 00 00 00 00	 call	 ?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
$LN1474@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0175f	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1405@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2621 :             _Xlen_string(); // result too long

  01764	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN1475@LoadRaceDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  01769	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1459@LoadRaceDa:
  0176e	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$0:
  00000	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CTextFileLoader@@UAE@XZ ; CTextFileLoader::~CTextFileLoader
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$1:
  0000b	8d 4d d8	 lea	 ecx, DWORD PTR $T57[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$2:
  00013	8d 4d d8	 lea	 ecx, DWORD PTR $T56[ebp]
  00016	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$3:
  0001b	8d 4d d8	 lea	 ecx, DWORD PTR $T55[ebp]
  0001e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$4:
  00023	8d 4d d8	 lea	 ecx, DWORD PTR $T54[ebp]
  00026	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$5:
  0002b	8d 4d d8	 lea	 ecx, DWORD PTR $T53[ebp]
  0002e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$6:
  00033	8d 4d d8	 lea	 ecx, DWORD PTR $T52[ebp]
  00036	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$7:
  0003b	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _strPathName$23[ebp]
  00041	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$8:
  00046	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR $T7[ebp]
  0004c	83 e0 01	 and	 eax, 1
  0004f	0f 84 0f 00 00
	00		 je	 $LN60@LoadRaceDa
  00055	83 a5 bc fe ff
	ff fe		 and	 DWORD PTR $T7[ebp], -2	; fffffffeH
  0005c	8d 4d 90	 lea	 ecx, DWORD PTR $T26[ebp]
  0005f	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN60@LoadRaceDa:
  00064	c3		 ret	 0
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$9:
  00065	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR $T7[ebp]
  0006b	83 e0 02	 and	 eax, 2
  0006e	0f 84 0f 00 00
	00		 je	 $LN62@LoadRaceDa
  00074	83 a5 bc fe ff
	ff fd		 and	 DWORD PTR $T7[ebp], -3	; fffffffdH
  0007b	8d 4d d8	 lea	 ecx, DWORD PTR $T51[ebp]
  0007e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN62@LoadRaceDa:
  00083	c3		 ret	 0
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$10:
  00084	8d 4d a8	 lea	 ecx, DWORD PTR $T32[ebp]
  00087	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$11:
  0008c	8d 4d d8	 lea	 ecx, DWORD PTR $T50[ebp]
  0008f	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$12:
  00094	8d 4d d8	 lea	 ecx, DWORD PTR $T49[ebp]
  00097	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$13:
  0009c	8d 4d 90	 lea	 ecx, DWORD PTR _strModel$25[ebp]
  0009f	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$14:
  000a4	8d 4d d8	 lea	 ecx, DWORD PTR $T48[ebp]
  000a7	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$15:
  000ac	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR $T18[ebp]
  000b2	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$16:
  000b7	8d 4d d8	 lea	 ecx, DWORD PTR $T47[ebp]
  000ba	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$17:
  000bf	8d 4d c0	 lea	 ecx, DWORD PTR _strSourceSkin$38[ebp]
  000c2	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$18:
  000c7	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _strTargetSkin$20[ebp]
  000cd	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$19:
  000d2	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR $T7[ebp]
  000d8	83 e0 04	 and	 eax, 4
  000db	0f 84 0f 00 00
	00		 je	 $LN75@LoadRaceDa
  000e1	83 a5 bc fe ff
	ff fb		 and	 DWORD PTR $T7[ebp], -5	; fffffffbH
  000e8	8d 4d a8	 lea	 ecx, DWORD PTR $T31[ebp]
  000eb	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN75@LoadRaceDa:
  000f0	c3		 ret	 0
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$20:
  000f1	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR $T7[ebp]
  000f7	83 e0 08	 and	 eax, 8
  000fa	0f 84 0f 00 00
	00		 je	 $LN77@LoadRaceDa
  00100	83 a5 bc fe ff
	ff f7		 and	 DWORD PTR $T7[ebp], -9	; fffffff7H
  00107	8d 4d d8	 lea	 ecx, DWORD PTR $T46[ebp]
  0010a	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN77@LoadRaceDa:
  0010f	c3		 ret	 0
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$21:
  00110	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR $T7[ebp]
  00116	83 e0 10	 and	 eax, 16			; 00000010H
  00119	0f 84 0f 00 00
	00		 je	 $LN81@LoadRaceDa
  0011f	83 a5 bc fe ff
	ff ef		 and	 DWORD PTR $T7[ebp], -17	; ffffffefH
  00126	8d 4d a8	 lea	 ecx, DWORD PTR $T30[ebp]
  00129	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN81@LoadRaceDa:
  0012e	c3		 ret	 0
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$22:
  0012f	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR $T7[ebp]
  00135	83 e0 20	 and	 eax, 32			; 00000020H
  00138	0f 84 0f 00 00
	00		 je	 $LN83@LoadRaceDa
  0013e	83 a5 bc fe ff
	ff df		 and	 DWORD PTR $T7[ebp], -33	; ffffffdfH
  00145	8d 4d d8	 lea	 ecx, DWORD PTR $T45[ebp]
  00148	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN83@LoadRaceDa:
  0014d	c3		 ret	 0
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$23:
  0014e	8d 4d d8	 lea	 ecx, DWORD PTR $T44[ebp]
  00151	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$24:
  00156	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR $T17[ebp]
  0015c	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$25:
  00161	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR $T7[ebp]
  00167	83 e0 40	 and	 eax, 64			; 00000040H
  0016a	0f 84 0f 00 00
	00		 je	 $LN89@LoadRaceDa
  00170	83 a5 bc fe ff
	ff bf		 and	 DWORD PTR $T7[ebp], -65	; ffffffbfH
  00177	8d 4d a8	 lea	 ecx, DWORD PTR $T29[ebp]
  0017a	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN89@LoadRaceDa:
  0017f	c3		 ret	 0
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$26:
  00180	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR $T7[ebp]
  00186	25 80 00 00 00	 and	 eax, 128		; 00000080H
  0018b	0f 84 12 00 00
	00		 je	 $LN91@LoadRaceDa
  00191	81 a5 bc fe ff
	ff 7f ff ff ff	 and	 DWORD PTR $T7[ebp], -129 ; ffffff7fH
  0019b	8d 4d d8	 lea	 ecx, DWORD PTR $T43[ebp]
  0019e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN91@LoadRaceDa:
  001a3	c3		 ret	 0
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$27:
  001a4	8d 4d a8	 lea	 ecx, DWORD PTR $T28[ebp]
  001a7	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$28:
  001ac	8d 4d d8	 lea	 ecx, DWORD PTR $T42[ebp]
  001af	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$29:
  001b4	8d 4d a8	 lea	 ecx, DWORD PTR _strPathName$27[ebp]
  001b7	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$30:
  001bc	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR $T7[ebp]
  001c2	25 00 01 00 00	 and	 eax, 256		; 00000100H
  001c7	0f 84 15 00 00
	00		 je	 $LN98@LoadRaceDa
  001cd	81 a5 bc fe ff
	ff ff fe ff ff	 and	 DWORD PTR $T7[ebp], -257 ; fffffeffH
  001d7	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR $T22[ebp]
  001dd	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN98@LoadRaceDa:
  001e2	c3		 ret	 0
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$31:
  001e3	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR $T7[ebp]
  001e9	25 00 02 00 00	 and	 eax, 512		; 00000200H
  001ee	0f 84 12 00 00
	00		 je	 $LN100@LoadRaceDa
  001f4	81 a5 bc fe ff
	ff ff fd ff ff	 and	 DWORD PTR $T7[ebp], -513 ; fffffdffH
  001fe	8d 4d d8	 lea	 ecx, DWORD PTR $T41[ebp]
  00201	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN100@LoadRaceDa:
  00206	c3		 ret	 0
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$32:
  00207	8d 4d c0	 lea	 ecx, DWORD PTR $T37[ebp]
  0020a	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$33:
  0020f	8d 4d c0	 lea	 ecx, DWORD PTR $T36[ebp]
  00212	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$34:
  00217	8d 4d c0	 lea	 ecx, DWORD PTR $T35[ebp]
  0021a	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$35:
  0021f	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _strModel$19[ebp]
  00225	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$36:
  0022a	8d 4d 90	 lea	 ecx, DWORD PTR _strSourceSkin$24[ebp]
  0022d	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$37:
  00232	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _strTargetSkin$21[ebp]
  00238	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$38:
  0023d	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR $T7[ebp]
  00243	25 00 04 00 00	 and	 eax, 1024		; 00000400H
  00248	0f 84 12 00 00
	00		 je	 $LN110@LoadRaceDa
  0024e	81 a5 bc fe ff
	ff ff fb ff ff	 and	 DWORD PTR $T7[ebp], -1025 ; fffffbffH
  00258	8d 4d d8	 lea	 ecx, DWORD PTR $T40[ebp]
  0025b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN110@LoadRaceDa:
  00260	c3		 ret	 0
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$39:
  00261	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR $T7[ebp]
  00267	25 00 08 00 00	 and	 eax, 2048		; 00000800H
  0026c	0f 84 15 00 00
	00		 je	 $LN112@LoadRaceDa
  00272	81 a5 bc fe ff
	ff ff f7 ff ff	 and	 DWORD PTR $T7[ebp], -2049 ; fffff7ffH
  0027c	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR $T16[ebp]
  00282	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN112@LoadRaceDa:
  00287	c3		 ret	 0
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$40:
  00288	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR $T7[ebp]
  0028e	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00293	0f 84 12 00 00
	00		 je	 $LN114@LoadRaceDa
  00299	81 a5 bc fe ff
	ff ff ef ff ff	 and	 DWORD PTR $T7[ebp], -4097 ; ffffefffH
  002a3	8d 4d c0	 lea	 ecx, DWORD PTR $T34[ebp]
  002a6	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN114@LoadRaceDa:
  002ab	c3		 ret	 0
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$41:
  002ac	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR $T15[ebp]
  002b2	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$42:
  002b7	8d 4d c0	 lea	 ecx, DWORD PTR $T33[ebp]
  002ba	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$43:
  002bf	8d 4d d8	 lea	 ecx, DWORD PTR $T39[ebp]
  002c2	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  002c7	cc		 int	 3
  002c8	cc		 int	 3
  002c9	cc		 int	 3
  002ca	cc		 int	 3
  002cb	cc		 int	 3
__ehhandler$?LoadRaceData@CRaceData@@QAEHPBD@Z:
  002cc	90		 npad	 1
  002cd	90		 npad	 1
  002ce	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  002d2	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  002d5	8b 8a a4 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-348]
  002db	33 c8		 xor	 ecx, eax
  002dd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002e2	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  002e5	33 c8		 xor	 ecx, eax
  002e7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002ec	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadRaceData@CRaceData@@QAEHPBD@Z
  002f1	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadRaceData@CRaceData@@QAEHPBD@Z ENDP			; CRaceData::LoadRaceData
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 137  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 138  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 139  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 140  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 87   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 141  :         _Throw_bad_array_new_length(); // add overflow
; 142  :     }
; 143  : 
; 144  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 87   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 146  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 147  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 148  : 
; 149  : #ifdef _DEBUG
; 150  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 151  : #endif // _DEBUG
; 152  :     return _Ptr;
; 153  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange, COMDAT

; 2142 :         _Xout_of_range("invalid vector subscript");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@
  00005	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPBD@Z ; std::_Xout_of_range
$LN3@Xrange:
  0000a	cc		 int	 3
?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
_TEXT	SEGMENT
__Right_size$1$ = -8					; size = 4
__New_size$1$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
__Left_size$1$ = 12					; size = 4
__Left$ = 12						; size = 4
__Ptr$1$ = 16						; size = 4
__Right$ = 16						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4900 :     const basic_string<_Elem, _Traits, _Alloc>& _Left, const basic_string<_Elem, _Traits, _Alloc>& _Right) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 4901 :     const auto _Left_size  = _Left.size();
; 4902 :     const auto _Right_size = _Right.size();

  00007	8b 5d 10	 mov	 ebx, DWORD PTR __Right$[ebp]

; 4903 :     if (_Left.max_size() - _Left_size < _Right_size) {

  0000a	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  0000f	56		 push	 esi
  00010	57		 push	 edi
  00011	8b 7d 0c	 mov	 edi, DWORD PTR __Left$[ebp]
  00014	8b 73 10	 mov	 esi, DWORD PTR [ebx+16]
  00017	89 75 f8	 mov	 DWORD PTR __Right_size$1$[ebp], esi
  0001a	8b 57 10	 mov	 edx, DWORD PTR [edi+16]
  0001d	2b c2		 sub	 eax, edx
  0001f	89 55 0c	 mov	 DWORD PTR __Left_size$1$[ebp], edx
  00022	3b c6		 cmp	 eax, esi
  00024	0f 82 d7 00 00
	00		 jb	 $LN59@operator

; 2244 :         return _BUF_SIZE <= _Myres;

  0002a	83 7f 14 10	 cmp	 DWORD PTR [edi+20], 16	; 00000010H

; 2236 :         if (_Large_string_engaged()) {

  0002e	72 02		 jb	 SHORT $LN9@operator

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

  00030	8b 3f		 mov	 edi, DWORD PTR [edi]
$LN9@operator:

; 2244 :         return _BUF_SIZE <= _Myres;

  00032	83 7b 14 10	 cmp	 DWORD PTR [ebx+20], 16	; 00000010H

; 2236 :         if (_Large_string_engaged()) {

  00036	72 02		 jb	 SHORT $LN16@operator

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

  00038	8b 1b		 mov	 ebx, DWORD PTR [ebx]
$LN16@operator:

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  0003a	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]

; 2787 :         const auto _New_size    = static_cast<size_type>(_Left_size + _Right_size);

  0003d	8d 04 16	 lea	 eax, DWORD PTR [esi+edx]
  00040	89 45 fc	 mov	 DWORD PTR __New_size$1$[ebp], eax
  00043	0f 57 c0	 xorps	 xmm0, xmm0

; 2788 :         size_type _New_capacity = _BUF_SIZE - 1;

  00046	be 0f 00 00 00	 mov	 esi, 15			; 0000000fH

; 2789 :         auto& _My_data          = _Mypair._Myval2;
; 2790 :         _Elem* _Ptr             = _My_data._Bx._Buf;

  0004b	8b c1		 mov	 eax, ecx
  0004d	89 45 10	 mov	 DWORD PTR __Ptr$1$[ebp], eax

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  00050	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

  00053	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

  0005a	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0

; 2794 :         if (_New_capacity < _New_size) {

  00061	39 75 fc	 cmp	 DWORD PTR __New_size$1$[ebp], esi
  00064	76 61		 jbe	 SHORT $LN21@operator

; 4714 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00066	8b 75 fc	 mov	 esi, DWORD PTR __New_size$1$[ebp]
  00069	83 ce 0f	 or	 esi, 15			; 0000000fH
  0006c	81 fe ff ff ff
	7f		 cmp	 esi, 2147483647		; 7fffffffH

; 4715 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00072	76 18		 jbe	 SHORT $LN36@operator

; 4716 :             return _Max;

  00074	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  00079	be ff ff ff 7f	 mov	 esi, 2147483647		; 7fffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00084	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00087	83 c4 04	 add	 esp, 4
  0008a	eb 36		 jmp	 SHORT $LN57@operator
$LN36@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 47   :     return _Left < _Right ? _Right : _Left;

  0008c	b8 16 00 00 00	 mov	 eax, 22			; 00000016H
  00091	3b f0		 cmp	 esi, eax
  00093	0f 42 f0	 cmovb	 esi, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2796 :             const pointer _Fancyptr = _Getal().allocate(_New_capacity + 1); // throws

  00096	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00099	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0009e	72 0e		 jb	 SHORT $LN44@operator

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  000a0	50		 push	 eax
  000a1	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  000a6	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000a9	83 c4 04	 add	 esp, 4
  000ac	eb 14		 jmp	 SHORT $LN57@operator
$LN44@operator:

; 240  :         }
; 241  :     }
; 242  : #endif // defined(_M_IX86) || defined(_M_X64)
; 243  : 
; 244  :     if (_Bytes != 0) {

  000ae	85 c0		 test	 eax, eax
  000b0	74 0e		 je	 SHORT $LN45@operator

; 87   :         return ::operator new(_Bytes);

  000b2	50		 push	 eax
  000b3	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 245  :         return _Traits::_Allocate(_Bytes);

  000b8	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]

; 87   :         return ::operator new(_Bytes);

  000bb	83 c4 04	 add	 esp, 4

; 245  :         return _Traits::_Allocate(_Bytes);

  000be	eb 02		 jmp	 SHORT $LN57@operator
$LN45@operator:

; 246  :     }
; 247  : 
; 248  :     return nullptr;

  000c0	33 c0		 xor	 eax, eax
$LN57@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2798 :             _Construct_in_place(_My_data._Bx._Ptr, _Fancyptr);

  000c2	89 45 10	 mov	 DWORD PTR __Ptr$1$[ebp], eax
  000c5	89 01		 mov	 DWORD PTR [ecx], eax
$LN21@operator:

; 2799 : 
; 2800 :             _Start_element_lifetimes(_Ptr, _New_capacity + 1);
; 2801 :         }
; 2802 : 
; 2803 :         _My_data._Mysize = _New_size;

  000c7	8b 55 fc	 mov	 edx, DWORD PTR __New_size$1$[ebp]
  000ca	89 51 10	 mov	 DWORD PTR [ecx+16], edx

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000cd	8b 55 0c	 mov	 edx, DWORD PTR __Left_size$1$[ebp]
  000d0	52		 push	 edx
  000d1	57		 push	 edi
  000d2	50		 push	 eax

; 2804 :         _My_data._Myres  = _New_capacity;

  000d3	89 71 14	 mov	 DWORD PTR [ecx+20], esi

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000d6	e8 00 00 00 00	 call	 _memcpy
  000db	ff 75 f8	 push	 DWORD PTR __Right_size$1$[ebp]

; 2806 :         _Traits::copy(_Ptr + static_cast<ptrdiff_t>(_Left_size), _Right_ptr, _Right_size);

  000de	8b 4d 0c	 mov	 ecx, DWORD PTR __Left_size$1$[ebp]
  000e1	8b 75 10	 mov	 esi, DWORD PTR __Ptr$1$[ebp]
  000e4	03 ce		 add	 ecx, esi

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000e6	53		 push	 ebx
  000e7	51		 push	 ecx
  000e8	e8 00 00 00 00	 call	 _memcpy

; 2807 :         _Traits::assign(_Ptr[_New_size], _Elem());

  000ed	8b 45 fc	 mov	 eax, DWORD PTR __New_size$1$[ebp]

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000f0	83 c4 18	 add	 esp, 24			; 00000018H

; 4908 : }

  000f3	5f		 pop	 edi

; 2807 :         _Traits::assign(_Ptr[_New_size], _Elem());

  000f4	c6 04 06 00	 mov	 BYTE PTR [esi+eax], 0

; 4905 :     }
; 4906 : 
; 4907 :     return {_String_constructor_concat_tag{}, _Left, _Left.c_str(), _Left_size, _Right.c_str(), _Right_size};

  000f8	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 4908 : }

  000fb	5e		 pop	 esi
  000fc	5b		 pop	 ebx
  000fd	8b e5		 mov	 esp, ebp
  000ff	5d		 pop	 ebp
  00100	c3		 ret	 0
$LN59@operator:

; 4904 :         _Xlen_string();

  00101	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN56@operator:
  00106	cc		 int	 3
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 3118 :     _CONSTEXPR20 ~basic_string() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2244 :         return _BUF_SIZE <= _Myres;

  00003	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00006	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4832 :         if (_My_data._Large_string_engaged()) {

  00009	72 27		 jb	 SHORT $LN12@basic_stri
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000b	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  0000d	41		 inc	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0000e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00014	72 12		 jb	 SHORT $LN22@basic_stri

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00016	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00019	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0001c	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0001e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00021	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00024	77 1f		 ja	 SHORT $LN19@basic_stri

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00026	8b c2		 mov	 eax, edx
$LN22@basic_stri:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00028	51		 push	 ecx
  00029	50		 push	 eax
  0002a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002f	83 c4 08	 add	 esp, 8
$LN12@basic_stri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

  00032	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;

  00039	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00040	c6 06 00	 mov	 BYTE PTR [esi], 0
  00043	5e		 pop	 esi

; 3126 :     }

  00044	c3		 ret	 0
$LN19@basic_stri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00045	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN30@basic_stri:
  0004a	cc		 int	 3
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2539 :     _CONSTEXPR20 basic_string(_In_z_ const _Elem* const _Ptr) : _Mypair(_Zero_then_variadic_args_t{}) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	8b d9		 mov	 ebx, ecx
  00008	0f 57 c0	 xorps	 xmm0, xmm0
  0000b	57		 push	 edi

; 403  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0000c	8b 7d 08	 mov	 edi, DWORD PTR __Ptr$[ebp]
  0000f	8b f7		 mov	 esi, edi

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  00011	0f 11 03	 movups	 XMMWORD PTR [ebx], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

  00014	c7 43 10 00 00
	00 00		 mov	 DWORD PTR [ebx+16], 0

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

  0001b	c7 43 14 00 00
	00 00		 mov	 DWORD PTR [ebx+20], 0

; 403  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00022	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
$LL39@basic_stri:
  00025	8a 06		 mov	 al, BYTE PTR [esi]
  00027	46		 inc	 esi
  00028	84 c0		 test	 al, al
  0002a	75 f9		 jne	 SHORT $LL39@basic_stri
  0002c	2b f1		 sub	 esi, ecx

; 2620 :         if (_Count > max_size()) {

  0002e	81 fe ff ff ff
	7f		 cmp	 esi, 2147483647		; 7fffffffH
  00034	0f 87 a5 00 00
	00		 ja	 $LN49@basic_stri

; 2622 :         }
; 2623 : 
; 2624 :         auto& _Al       = _Getal();
; 2625 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);
; 2626 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 2627 : 
; 2628 :         if (_Count < _BUF_SIZE) {

  0003a	c7 43 14 0f 00
	00 00		 mov	 DWORD PTR [ebx+20], 15	; 0000000fH
  00041	83 fe 10	 cmp	 esi, 16			; 00000010H
  00044	73 1d		 jae	 SHORT $LN15@basic_stri

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00046	56		 push	 esi
  00047	57		 push	 edi
  00048	53		 push	 ebx

; 2629 :             _My_data._Mysize = _Count;

  00049	89 73 10	 mov	 DWORD PTR [ebx+16], esi

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0004c	e8 00 00 00 00	 call	 _memcpy

; 2637 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

  00051	c6 04 1e 00	 mov	 BYTE PTR [esi+ebx], 0

; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));
; 2541 :     }

  00055	83 c4 0c	 add	 esp, 12			; 0000000cH
  00058	8b c3		 mov	 eax, ebx
  0005a	5f		 pop	 edi
  0005b	5e		 pop	 esi
  0005c	5b		 pop	 ebx
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c2 04 00	 ret	 4
$LN15@basic_stri:

; 4714 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00063	8b fe		 mov	 edi, esi
  00065	83 cf 0f	 or	 edi, 15			; 0000000fH
  00068	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH

; 4715 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  0006e	76 15		 jbe	 SHORT $LN22@basic_stri

; 4716 :             return _Max;

  00070	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  00075	bf ff ff ff 7f	 mov	 edi, 2147483647		; 7fffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0007a	50		 push	 eax
  0007b	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00080	83 c4 04	 add	 esp, 4
  00083	eb 30		 jmp	 SHORT $LN47@basic_stri
$LN22@basic_stri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 47   :     return _Left < _Right ? _Right : _Left;

  00085	b8 16 00 00 00	 mov	 eax, 22			; 00000016H
  0008a	3b f8		 cmp	 edi, eax
  0008c	0f 42 f8	 cmovb	 edi, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2652 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  0008f	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00092	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  00097	72 0b		 jb	 SHORT $LN30@basic_stri

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00099	50		 push	 eax
  0009a	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  0009f	83 c4 04	 add	 esp, 4
  000a2	eb 11		 jmp	 SHORT $LN47@basic_stri
$LN30@basic_stri:

; 240  :         }
; 241  :     }
; 242  : #endif // defined(_M_IX86) || defined(_M_X64)
; 243  : 
; 244  :     if (_Bytes != 0) {

  000a4	85 c0		 test	 eax, eax
  000a6	74 0b		 je	 SHORT $LN31@basic_stri

; 87   :         return ::operator new(_Bytes);

  000a8	50		 push	 eax
  000a9	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000ae	83 c4 04	 add	 esp, 4

; 245  :         return _Traits::_Allocate(_Bytes);

  000b1	eb 02		 jmp	 SHORT $LN47@basic_stri
$LN31@basic_stri:

; 246  :     }
; 247  : 
; 248  :     return nullptr;

  000b3	33 c0		 xor	 eax, eax
$LN47@basic_stri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000b5	56		 push	 esi
  000b6	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 2653 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  000b9	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000bc	50		 push	 eax

; 2653 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  000bd	89 03		 mov	 DWORD PTR [ebx], eax

; 2654 : 
; 2655 :         _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);
; 2656 : 
; 2657 :         _My_data._Mysize = _Count;

  000bf	89 73 10	 mov	 DWORD PTR [ebx+16], esi

; 2658 :         _My_data._Myres  = _New_capacity;

  000c2	89 7b 14	 mov	 DWORD PTR [ebx+20], edi

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000c5	e8 00 00 00 00	 call	 _memcpy

; 2664 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());

  000ca	8b 45 fc	 mov	 eax, DWORD PTR $T1[ebp]

; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));
; 2541 :     }

  000cd	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d0	5f		 pop	 edi

; 2664 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());

  000d1	c6 04 30 00	 mov	 BYTE PTR [eax+esi], 0

; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));
; 2541 :     }

  000d5	8b c3		 mov	 eax, ebx
  000d7	5e		 pop	 esi
  000d8	5b		 pop	 ebx
  000d9	8b e5		 mov	 esp, ebp
  000db	5d		 pop	 ebp
  000dc	c2 04 00	 ret	 4
$LN49@basic_stri:

; 2621 :             _Xlen_string(); // result too long

  000df	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN45@basic_stri:
  000e4	cc		 int	 3
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ
_TEXT	SEGMENT
?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Xran, COMDAT

; 2273 :         _Xout_of_range("invalid string position");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position@
  00005	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPBD@Z ; std::_Xout_of_range
$LN3@Xran:
  0000a	cc		 int	 3
?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2312 :     _Xlength_error("string too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen_strin:
  0000a	cc		 int	 3
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 331  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 332  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h
;	COMDAT __snprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__snprintf PROC						; COMDAT

; 1947 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1392 :         int const _Result = __stdio_common_vsprintf(

  00003	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00006	50		 push	 eax
  00007	6a 00		 push	 0
  00009	ff 75 10	 push	 DWORD PTR __Format$[ebp]
  0000c	ff 75 0c	 push	 DWORD PTR __BufferCount$[ebp]
  0000f	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00012	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	ff 70 04	 push	 DWORD PTR [eax+4]
  0001c	83 c9 01	 or	 ecx, 1
  0001f	51		 push	 ecx
  00020	e8 00 00 00 00	 call	 ___stdio_common_vsprintf

; 1393 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1394 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1395 : 
; 1396 :         return _Result < 0 ? -1 : _Result;

  00025	83 c9 ff	 or	 ecx, -1
  00028	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002b	85 c0		 test	 eax, eax
  0002d	0f 48 c1	 cmovs	 eax, ecx

; 1948 :         int _Result;
; 1949 :         va_list _ArgList;
; 1950 :         __crt_va_start(_ArgList, _Format);
; 1951 :         _Result = _vsnprintf(_Buffer, _BufferCount, _Format, _ArgList);
; 1952 :         __crt_va_end(_ArgList);
; 1953 :         return _Result;
; 1954 :     }

  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
__snprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 91   :         static unsigned __int64 _OptionsStorage;
; 92   :         return &_OptionsStorage;

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 93   :     }

  00005	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\RaceDataFile.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.43.34808.0 

	TITLE	C:\Marty 5.5\Src-Client\Client\GameLib\Distribute\SnowEnvironment.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
?_Fake_alloc@std@@3U_Fake_allocator@1@B	ORG $+1		; std::_Fake_alloc
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??0CSnowEnvironment@@QAE@XZ			; CSnowEnvironment::CSnowEnvironment
PUBLIC	??1CSnowEnvironment@@UAE@XZ			; CSnowEnvironment::~CSnowEnvironment
PUBLIC	?Create@CSnowEnvironment@@QAE_NXZ		; CSnowEnvironment::Create
PUBLIC	?Destroy@CSnowEnvironment@@QAEXXZ		; CSnowEnvironment::Destroy
PUBLIC	?Enable@CSnowEnvironment@@QAEXXZ		; CSnowEnvironment::Enable
PUBLIC	?Disable@CSnowEnvironment@@QAEXXZ		; CSnowEnvironment::Disable
PUBLIC	?Update@CSnowEnvironment@@QAEXABUD3DXVECTOR3@@@Z ; CSnowEnvironment::Update
PUBLIC	?Deform@CSnowEnvironment@@QAEXXZ		; CSnowEnvironment::Deform
PUBLIC	?Render@CSnowEnvironment@@QAEXXZ		; CSnowEnvironment::Render
PUBLIC	?__Initialize@CSnowEnvironment@@IAEXXZ		; CSnowEnvironment::__Initialize
PUBLIC	?__CreateBlurTexture@CSnowEnvironment@@IAE_NXZ	; CSnowEnvironment::__CreateBlurTexture
PUBLIC	?__CreateGeometry@CSnowEnvironment@@IAE_NXZ	; CSnowEnvironment::__CreateGeometry
PUBLIC	?__BeginBlur@CSnowEnvironment@@IAEXXZ		; CSnowEnvironment::__BeginBlur
PUBLIC	?__ApplyBlur@CSnowEnvironment@@IAEXXZ		; CSnowEnvironment::__ApplyBlur
PUBLIC	??1?$vector@PAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@QAE@XZ ; std::vector<CSnowParticle *,std::allocator<CSnowParticle *> >::~vector<CSnowParticle *,std::allocator<CSnowParticle *> >
PUBLIC	?_Change_array@?$vector@PAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@AAEXQAPAVCSnowParticle@@II@Z ; std::vector<CSnowParticle *,std::allocator<CSnowParticle *> >::_Change_array
PUBLIC	?_Xlength@?$vector@PAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@CAXXZ ; std::vector<CSnowParticle *,std::allocator<CSnowParticle *> >::_Xlength
PUBLIC	??_GCSnowEnvironment@@UAEPAXI@Z			; CSnowEnvironment::`scalar deleting destructor'
PUBLIC	??1BlurVertex@@QAE@XZ				; BlurVertex::~BlurVertex
PUBLIC	??$_Copy_memmove@PAPAVCSnowParticle@@PAPAV1@@std@@YAPAPAVCSnowParticle@@PAPAV1@00@Z ; std::_Copy_memmove<CSnowParticle * *,CSnowParticle * *>
PUBLIC	??$_Copy_memmove_tail@PAPAVCSnowParticle@@@std@@YAPAPAVCSnowParticle@@QBDQAPAV1@II@Z ; std::_Copy_memmove_tail<CSnowParticle * *>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_7CSnowEnvironment@@6B@			; CSnowEnvironment::`vftable'
PUBLIC	?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
PUBLIC	??_C@_0BO@KOAGJMMK@d?3?1ymir?5work?1special?1snow?4dds@ ; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4CSnowEnvironment@@6B@			; CSnowEnvironment::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCSnowEnvironment@@@8			; CSnowEnvironment `RTTI Type Descriptor'
PUBLIC	??_R3CSnowEnvironment@@8			; CSnowEnvironment::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CSnowEnvironment@@8			; CSnowEnvironment::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CSnowEnvironment@@8		; CSnowEnvironment::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CScreen@@8			; CScreen::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCScreen@@@8				; CScreen `RTTI Type Descriptor'
PUBLIC	??_R3CScreen@@8					; CScreen::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CScreen@@8					; CScreen::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGraphicCollisionObject@@8	; CGraphicCollisionObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGraphicCollisionObject@@@8		; CGraphicCollisionObject `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicCollisionObject@@8			; CGraphicCollisionObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicCollisionObject@@8			; CGraphicCollisionObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGraphicBase@@8			; CGraphicBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGraphicBase@@@8			; CGraphicBase `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicBase@@8				; CGraphicBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicBase@@8				; CGraphicBase::`RTTI Base Class Array'
PUBLIC	__real@447a0000
PUBLIC	__real@455ac000
PUBLIC	__xmm@3f800000000000000000000000000000
PUBLIC	__xmm@41f00000000000000000000000000000
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_abort:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?GetCurrentMillisecond@CTimer@@QAEKXZ:PROC	; CTimer::GetCurrentMillisecond
EXTRN	??0CScreen@@QAE@XZ:PROC				; CScreen::CScreen
EXTRN	??1CScreen@@UAE@XZ:PROC				; CScreen::~CScreen
EXTRN	?SetTextureStage@CGraphicTexture@@QBEXH@Z:PROC	; CGraphicTexture::SetTextureStage
EXTRN	?GetTextureReference@CGraphicImage@@QBEABVCGraphicTexture@@XZ:PROC ; CGraphicImage::GetTextureReference
EXTRN	?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z:PROC ; CGraphicImageInstance::SetImagePointer
EXTRN	?GetGraphicImagePointer@CGraphicImageInstance@@QAEPAVCGraphicImage@@XZ:PROC ; CGraphicImageInstance::GetGraphicImagePointer
EXTRN	?New@CGraphicImageInstance@@SAPAV1@XZ:PROC	; CGraphicImageInstance::New
EXTRN	?Delete@CGraphicImageInstance@@SAXPAV1@@Z:PROC	; CGraphicImageInstance::Delete
EXTRN	??_ECSnowEnvironment@@UAEPAXI@Z:PROC		; CSnowEnvironment::`vector deleting destructor'
EXTRN	?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; CStateManager::SaveRenderState
EXTRN	?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z:PROC ; CStateManager::RestoreRenderState
EXTRN	?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; CStateManager::SetRenderState
EXTRN	?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z:PROC ; CStateManager::SetTexture
EXTRN	?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z:PROC ; CStateManager::SetTextureStageState
EXTRN	?SetVertexShader@CStateManager@@QAEXK@Z:PROC	; CStateManager::SetVertexShader
EXTRN	?SetStreamSource@CStateManager@@QAEXIPAUIDirect3DVertexBuffer8@@I@Z:PROC ; CStateManager::SetStreamSource
EXTRN	?SetIndices@CStateManager@@QAEXPAUIDirect3DIndexBuffer8@@I@Z:PROC ; CStateManager::SetIndices
EXTRN	?DrawPrimitiveUP@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IPBXI@Z:PROC ; CStateManager::DrawPrimitiveUP
EXTRN	?DrawIndexedPrimitive@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IIII@Z:PROC ; CStateManager::DrawIndexedPrimitive
EXTRN	?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ:PROC ; CCameraManager::GetCurrentCamera
EXTRN	?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z:PROC ; CResourceManager::GetResourcePointer
EXTRN	??1CSnowParticle@@QAE@XZ:PROC			; CSnowParticle::~CSnowParticle
EXTRN	?New@CSnowParticle@@SAPAV1@XZ:PROC		; CSnowParticle::New
EXTRN	?Delete@CSnowParticle@@SAXPAV1@@Z:PROC		; CSnowParticle::Delete
EXTRN	?DestroyPool@CSnowParticle@@SAXXZ:PROC		; CSnowParticle::DestroyPool
EXTRN	?Init@CSnowParticle@@QAEXABUD3DXVECTOR3@@@Z:PROC ; CSnowParticle::Init
EXTRN	?SetCameraVertex@CSnowParticle@@QAEXABUD3DXVECTOR3@@0@Z:PROC ; CSnowParticle::SetCameraVertex
EXTRN	?IsActivate@CSnowParticle@@QAE_NXZ:PROC		; CSnowParticle::IsActivate
EXTRN	?Update@CSnowParticle@@QAEXMABUD3DXVECTOR3@@@Z:PROC ; CSnowParticle::Update
EXTRN	?GetVerticies@CSnowParticle@@QAEXAAUSParticleVertex@@000@Z:PROC ; CSnowParticle::GetVerticies
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memmove:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A:DWORD ; CGraphicBase::ms_lpd3dDevice
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A DD 01H DUP (?) ; CSingleton<CTimer>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A DD 01H DUP (?) ; CSingleton<CStateManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A DD 01H DUP (?) ; CSingleton<CCameraManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A DD 01H DUP (?) ; CSingleton<CResourceManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?s_lLastTime@?1??Deform@CSnowEnvironment@@QAEXXZ@4JA
_BSS	SEGMENT
?s_lLastTime@?1??Deform@CSnowEnvironment@@QAEXXZ@4JA DD 01H DUP (?) ; `CSnowEnvironment::Deform'::`2'::s_lLastTime
_BSS	ENDS
;	COMDAT ?$TSS0@?1??Deform@CSnowEnvironment@@QAEXXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??Deform@CSnowEnvironment@@QAEXXZ@4HA DD 01H DUP (?) ; `CSnowEnvironment::Deform'::`2'::$TSS0
_BSS	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __xmm@3f800000000000000000000000000000
CONST	SEGMENT
__xmm@3f800000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __real@455ac000
CONST	SEGMENT
__real@455ac000 DD 0455ac000r			; 3500
CONST	ENDS
;	COMDAT __real@447a0000
CONST	SEGMENT
__real@447a0000 DD 0447a0000r			; 1000
CONST	ENDS
;	COMDAT ??_R2CGraphicBase@@8
rdata$r	SEGMENT
??_R2CGraphicBase@@8 DD FLAT:??_R1A@?0A@EA@CGraphicBase@@8 ; CGraphicBase::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CGraphicBase@@8
rdata$r	SEGMENT
??_R3CGraphicBase@@8 DD 00H				; CGraphicBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicBase@@@8
data$rs	SEGMENT
??_R0?AVCGraphicBase@@@8 DD FLAT:??_7type_info@@6B@	; CGraphicBase `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicBase@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicBase@@8 DD FLAT:??_R0?AVCGraphicBase@@@8 ; CGraphicBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R2CGraphicCollisionObject@@8
rdata$r	SEGMENT
??_R2CGraphicCollisionObject@@8 DD FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8 ; CGraphicCollisionObject::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CGraphicCollisionObject@@8
rdata$r	SEGMENT
??_R3CGraphicCollisionObject@@8 DD 00H			; CGraphicCollisionObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CGraphicCollisionObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicCollisionObject@@@8
data$rs	SEGMENT
??_R0?AVCGraphicCollisionObject@@@8 DD FLAT:??_7type_info@@6B@ ; CGraphicCollisionObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicCollisionObject@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicCollisionObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicCollisionObject@@8 DD FLAT:??_R0?AVCGraphicCollisionObject@@@8 ; CGraphicCollisionObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicCollisionObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CScreen@@8
rdata$r	SEGMENT
??_R2CScreen@@8 DD FLAT:??_R1A@?0A@EA@CScreen@@8	; CScreen::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CScreen@@8
rdata$r	SEGMENT
??_R3CScreen@@8 DD 00H					; CScreen::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CScreen@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCScreen@@@8
data$rs	SEGMENT
??_R0?AVCScreen@@@8 DD FLAT:??_7type_info@@6B@		; CScreen `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCScreen@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CScreen@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CScreen@@8 DD FLAT:??_R0?AVCScreen@@@8	; CScreen::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CScreen@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CSnowEnvironment@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CSnowEnvironment@@8 DD FLAT:??_R0?AVCSnowEnvironment@@@8 ; CSnowEnvironment::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CSnowEnvironment@@8
rdata$r	ENDS
;	COMDAT ??_R2CSnowEnvironment@@8
rdata$r	SEGMENT
??_R2CSnowEnvironment@@8 DD FLAT:??_R1A@?0A@EA@CSnowEnvironment@@8 ; CSnowEnvironment::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CScreen@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CSnowEnvironment@@8
rdata$r	SEGMENT
??_R3CSnowEnvironment@@8 DD 00H				; CSnowEnvironment::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CSnowEnvironment@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCSnowEnvironment@@@8
data$rs	SEGMENT
??_R0?AVCSnowEnvironment@@@8 DD FLAT:??_7type_info@@6B@	; CSnowEnvironment `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCSnowEnvironment@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CSnowEnvironment@@6B@
rdata$r	SEGMENT
??_R4CSnowEnvironment@@6B@ DD 00H			; CSnowEnvironment::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCSnowEnvironment@@@8
	DD	FLAT:??_R3CSnowEnvironment@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@KOAGJMMK@d?3?1ymir?5work?1special?1snow?4dds@
CONST	SEGMENT
??_C@_0BO@KOAGJMMK@d?3?1ymir?5work?1special?1snow?4dds@ DB 'd:/ymir work/'
	DB	'special/snow.dds', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CSnowEnvironment@@6B@
CONST	SEGMENT
??_7CSnowEnvironment@@6B@ DD FLAT:??_R4CSnowEnvironment@@6B@ ; CSnowEnvironment::`vftable'
	DD	FLAT:??_ECSnowEnvironment@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?__ApplyBlur@CSnowEnvironment@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?__ApplyBlur@CSnowEnvironment@@IAEXXZ$0
__ehfuncinfo$?__ApplyBlur@CSnowEnvironment@@IAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?__ApplyBlur@CSnowEnvironment@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Deform@CSnowEnvironment@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Deform@CSnowEnvironment@@QAEXXZ$0
__ehfuncinfo$?Deform@CSnowEnvironment@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Deform@CSnowEnvironment@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CSnowEnvironment@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CSnowEnvironment@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CSnowEnvironment@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CSnowEnvironment@@QAE@XZ$1
__ehfuncinfo$??0CSnowEnvironment@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CSnowEnvironment@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xutility
;	COMDAT ??$_Copy_memmove_tail@PAPAVCSnowParticle@@@std@@YAPAPAVCSnowParticle@@QBDQAPAV1@II@Z
_TEXT	SEGMENT
__First_ch$ = 8						; size = 4
__Dest$ = 12						; size = 4
__Byte_count$ = 16					; size = 4
__Object_count$ = 20					; size = 4
??$_Copy_memmove_tail@PAPAVCSnowParticle@@@std@@YAPAPAVCSnowParticle@@QBDQAPAV1@II@Z PROC ; std::_Copy_memmove_tail<CSnowParticle * *>, COMDAT

; 4763 :     const char* const _First_ch, const _OutCtgIt _Dest, const size_t _Byte_count, const size_t _Object_count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 4764 :     _STL_INTERNAL_CHECK(_Byte_count == _Object_count * sizeof(*_Dest));
; 4765 :     const auto _Dest_ptr = _STD _To_address(_Dest);
; 4766 :     const auto _Dest_ch  = const_cast<char*>(reinterpret_cast<const volatile char*>(_Dest_ptr));
; 4767 :     _CSTD memmove(_Dest_ch, _First_ch, _Byte_count);

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 10	 mov	 edi, DWORD PTR __Byte_count$[ebp]
  0000b	57		 push	 edi
  0000c	ff 75 08	 push	 DWORD PTR __First_ch$[ebp]
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 _memmove
  00015	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4768 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4769 :         (void) _Object_count;
; 4770 :         // CodeQL [SM02986] This cast is correct: we're bypassing pointer arithmetic for performance.
; 4771 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Byte_count);

  00018	8d 04 3e	 lea	 eax, DWORD PTR [esi+edi]
  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi

; 4772 :     } else {
; 4773 :         return _Dest + static_cast<_Iter_diff_t<_OutCtgIt>>(_Object_count);
; 4774 :     }
; 4775 : }

  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??$_Copy_memmove_tail@PAPAVCSnowParticle@@@std@@YAPAPAVCSnowParticle@@QBDQAPAV1@II@Z ENDP ; std::_Copy_memmove_tail<CSnowParticle * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCSnowParticle@@PAPAV1@@std@@YAPAPAVCSnowParticle@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCSnowParticle@@PAPAV1@@std@@YAPAPAVCSnowParticle@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CSnowParticle * *,CSnowParticle * *>, COMDAT

; 4778 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4779 :     _STL_INTERNAL_CHECK(_First <= _Last);
; 4780 :     const auto _First_ptr    = _STD _To_address(_First);
; 4781 :     const auto _Last_ptr     = _STD _To_address(_Last);
; 4782 :     const auto _Object_count = static_cast<size_t>(_Last_ptr - _First_ptr);

  00003	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	2b ca		 sub	 ecx, edx
  0000b	8b c1		 mov	 eax, ecx
  0000d	c1 f8 02	 sar	 eax, 2

; 4783 :     const auto _First_ch     = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First_ptr));
; 4784 :     const auto _Last_ch      = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last_ptr));
; 4785 :     const auto _Byte_count   = static_cast<size_t>(_Last_ch - _First_ch);
; 4786 :     return _STD _Copy_memmove_tail(_First_ch, _STD move(_Dest), _Byte_count, _Object_count);

  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00015	52		 push	 edx
  00016	e8 00 00 00 00	 call	 ??$_Copy_memmove_tail@PAPAVCSnowParticle@@@std@@YAPAPAVCSnowParticle@@QBDQAPAV1@II@Z ; std::_Copy_memmove_tail<CSnowParticle * *>
  0001b	83 c4 10	 add	 esp, 16			; 00000010H

; 4787 : }

  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
??$_Copy_memmove@PAPAVCSnowParticle@@PAPAV1@@std@@YAPAPAVCSnowParticle@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CSnowParticle * *,CSnowParticle * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowParticle.h
;	COMDAT ??1BlurVertex@@QAE@XZ
_TEXT	SEGMENT
??1BlurVertex@@QAE@XZ PROC				; BlurVertex::~BlurVertex, COMDAT
; _this$ = ecx

; 19   : 	~BlurVertex(){};

  00000	c2 00 00	 ret	 0
??1BlurVertex@@QAE@XZ ENDP				; BlurVertex::~BlurVertex
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCSnowEnvironment@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSnowEnvironment@@UAEPAXI@Z PROC			; CSnowEnvironment::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CSnowEnvironment@@UAE@XZ ; CSnowEnvironment::~CSnowEnvironment
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN5@scalar
  00011	6a 58		 push	 88			; 00000058H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN5@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCSnowEnvironment@@UAEPAXI@Z ENDP			; CSnowEnvironment::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@CAXXZ PROC ; std::vector<CSnowParticle *,std::allocator<CSnowParticle *> >::_Xlength, COMDAT

; 2169 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@CAXXZ ENDP ; std::vector<CSnowParticle *,std::allocator<CSnowParticle *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
;	COMDAT ?_Change_array@?$vector@PAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@AAEXQAPAVCSnowParticle@@II@Z
_TEXT	SEGMENT
__Newvec$ = 8						; size = 4
__Newsize$ = 12						; size = 4
__Newcapacity$ = 16					; size = 4
?_Change_array@?$vector@PAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@AAEXQAPAVCSnowParticle@@II@Z PROC ; std::vector<CSnowParticle *,std::allocator<CSnowParticle *> >::_Change_array, COMDAT
; _this$ = ecx

; 2044 :         const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 2045 :         // orphan all iterators, discard old array, acquire new array
; 2046 :         auto& _Al         = _Getal();
; 2047 :         auto& _My_data    = _Mypair._Myval2;
; 2048 :         pointer& _Myfirst = _My_data._Myfirst;
; 2049 :         pointer& _Mylast  = _My_data._Mylast;
; 2050 :         pointer& _Myend   = _My_data._Myend;
; 2051 : 
; 2052 :         _My_data._Orphan_all();
; 2053 : 
; 2054 :         if (_Myfirst) { // destroy and deallocate old array

  00006	8b 06		 mov	 eax, DWORD PTR [esi]
  00008	85 c0		 test	 eax, eax
  0000a	74 2c		 je	 SHORT $LN10@Change_arr

; 2055 :             _STD _Destroy_range(_Myfirst, _Mylast, _Al);
; 2056 :             _ASAN_VECTOR_REMOVE;
; 2057 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0000c	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0000f	2b c8		 sub	 ecx, eax
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 981  :         _STD _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00011	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 284  :         if (_Bytes >= _Big_allocation_threshold) {

  00014	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0001a	72 12		 jb	 SHORT $LN21@Change_arr

; 205  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0001c	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0001f	83 c1 23	 add	 ecx, 35			; 00000023H

; 206  : 
; 207  :     // If the following asserts, it likely means that we are performing
; 208  :     // an aligned delete on memory coming from an unaligned allocation.
; 209  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 210  : 
; 211  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 212  :     // in range [_Min_back_shift, _Non_user_size]
; 213  : #ifdef _DEBUG
; 214  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 215  : #else // ^^^ defined(_DEBUG) / !defined(_DEBUG) vvv
; 216  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 217  : #endif // ^^^ !defined(_DEBUG) ^^^
; 218  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00022	2b c2		 sub	 eax, edx

; 219  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00024	83 c0 fc	 add	 eax, -4			; fffffffcH
  00027	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0002a	77 28		 ja	 SHORT $LN18@Change_arr

; 220  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0002c	8b c2		 mov	 eax, edx
$LN21@Change_arr:

; 289  :         ::operator delete(_Ptr, _Bytes);

  0002e	51		 push	 ecx
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00035	83 c4 08	 add	 esp, 8
$LN10@Change_arr:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 2060 :         _Myfirst = _Newvec;

  00038	8b 4d 08	 mov	 ecx, DWORD PTR __Newvec$[ebp]

; 2061 :         _Mylast  = _Newvec + _Newsize;

  0003b	8b 45 0c	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0003e	89 0e		 mov	 DWORD PTR [esi], ecx
  00040	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  00043	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 2062 :         _Myend   = _Newvec + _Newcapacity;

  00046	8b 45 10	 mov	 eax, DWORD PTR __Newcapacity$[ebp]
  00049	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  0004c	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0004f	5e		 pop	 esi

; 2064 :     }

  00050	5d		 pop	 ebp
  00051	c2 0c 00	 ret	 12			; 0000000cH
$LN18@Change_arr:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 219  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00054	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN28@Change_arr:
  00059	cc		 int	 3
?_Change_array@?$vector@PAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@AAEXQAPAVCSnowParticle@@II@Z ENDP ; std::vector<CSnowParticle *,std::allocator<CSnowParticle *> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
;	COMDAT ??1?$vector@PAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@QAE@XZ PROC ; std::vector<CSnowParticle *,std::allocator<CSnowParticle *> >::~vector<CSnowParticle *,std::allocator<CSnowParticle *> >, COMDAT
; _this$ = ecx

; 814  :     _CONSTEXPR20 ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2075 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	85 c0		 test	 eax, eax
  00007	74 40		 je	 SHORT $LN5@vector

; 2076 :             _STD _Destroy_range(_Myfirst, _Mylast, _Al);
; 2077 :             _ASAN_VECTOR_REMOVE;
; 2078 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0000c	2b c8		 sub	 ecx, eax
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 981  :         _STD _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000e	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 284  :         if (_Bytes >= _Big_allocation_threshold) {

  00011	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00017	72 12		 jb	 SHORT $LN24@vector

; 205  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00019	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0001c	83 c1 23	 add	 ecx, 35			; 00000023H

; 206  : 
; 207  :     // If the following asserts, it likely means that we are performing
; 208  :     // an aligned delete on memory coming from an unaligned allocation.
; 209  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 210  : 
; 211  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 212  :     // in range [_Min_back_shift, _Non_user_size]
; 213  : #ifdef _DEBUG
; 214  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 215  : #else // ^^^ defined(_DEBUG) / !defined(_DEBUG) vvv
; 216  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 217  : #endif // ^^^ !defined(_DEBUG) ^^^
; 218  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0001f	2b c2		 sub	 eax, edx

; 219  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00021	83 c0 fc	 add	 eax, -4			; fffffffcH
  00024	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00027	77 22		 ja	 SHORT $LN21@vector

; 220  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00029	8b c2		 mov	 eax, edx
$LN24@vector:

; 289  :         ::operator delete(_Ptr, _Bytes);

  0002b	51		 push	 ecx
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 2080 :             _Myfirst = nullptr;

  00032	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 289  :         ::operator delete(_Ptr, _Bytes);

  00038	83 c4 08	 add	 esp, 8
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 2081 :             _Mylast  = nullptr;

  0003b	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 2082 :             _Myend   = nullptr;

  00042	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN5@vector:
  00049	5e		 pop	 esi

; 820  :     }

  0004a	c3		 ret	 0
$LN21@vector:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 219  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004b	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN32@vector:
  00050	cc		 int	 3
??1?$vector@PAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@QAE@XZ ENDP ; std::vector<CSnowParticle *,std::allocator<CSnowParticle *> >::~vector<CSnowParticle *,std::allocator<CSnowParticle *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowParticle.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
;	COMDAT ?__ApplyBlur@CSnowEnvironment@@IAEXXZ
_TEXT	SEGMENT
tv407 = -168						; size = 4
tv406 = -164						; size = 4
_desc$2 = -160						; size = 32
_V$3 = -128						; size = 112
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?__ApplyBlur@CSnowEnvironment@@IAEXXZ PROC		; CSnowEnvironment::__ApplyBlur, COMDAT
; _this$ = ecx

; 104  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?__ApplyBlur@CSnowEnvironment@@IAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 9c 00 00
	00		 sub	 esp, 156		; 0000009cH
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	56		 push	 esi
  00022	50		 push	 eax
  00023	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00026	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002c	8b f1		 mov	 esi, ecx

; 105  : 	if (!m_bBlurEnable)

  0002e	83 7e 50 00	 cmp	 DWORD PTR [esi+80], 0
  00032	0f 84 b4 01 00
	00		 je	 $LN1@ApplyBlur

; 106  : 		return;
; 107  : 
; 108  : //			{
; 109  : //				STATEMANAGER.SetRenderState( D3DRS_ALPHABLENDENABLE,   TRUE );
; 110  : //				STATEMANAGER.SetRenderState( D3DRS_SRCBLEND,  D3DBLEND_SRCALPHA );
; 111  : //				STATEMANAGER.SetRenderState( D3DRS_DESTBLEND, D3DBLEND_INVSRCALPHA );
; 112  : //				STATEMANAGER.SetRenderState( D3DRS_COLORVERTEX ,TRUE);
; 113  : //				STATEMANAGER.SetRenderState( D3DRS_DIFFUSEMATERIALSOURCE , D3DMCS_COLOR1 );
; 114  : //				STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP, D3DTOP_MODULATE);
; 115  : //				STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG1, D3DTA_TEXTURE);
; 116  : //				STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG2, D3DTA_DIFFUSE);
; 117  : //				STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAOP, D3DTOP_MODULATE);
; 118  : //				STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAARG1, D3DTA_TEXTURE);
; 119  : //				STATEMANAGER.SetTextureStageState(0,  D3DTSS_ALPHAARG2, D3DTA_DIFFUSE);
; 120  : //				DWORD	alphaColor = 0xFFFFFF | ((DWORD)(0.6f*255.0f) << 24);
; 121  : //
; 122  : //				BlurVertex V[4] = { BlurVertex(D3DXVECTOR3(0.0f,0.0f,0.0f),1.0f,		alphaColor, 0,0) ,
; 123  : //									BlurVertex(D3DXVECTOR3(wTextureSize,0.0f,0.0f),1.0f,		alphaColor, 1,0) ,
; 124  : //									BlurVertex(D3DXVECTOR3(0.0f,wTextureSize,0.0f),1.0f,		alphaColor, 0,1) ,
; 125  : //									BlurVertex(D3DXVECTOR3(wTextureSize,wTextureSize,0.0f),1.0f,	alphaColor, 1,1) };
; 126  : //				STATEMANAGER.SetTexture(0,m_lpAccumTexture);
; 127  : //				STATEMANAGER.SetVertexShader( D3DFVF_XYZRHW | D3DFVF_DIFFUSE|D3DFVF_TEX1 );
; 128  : //				STATEMANAGER.DrawPrimitiveUP(D3DPT_TRIANGLESTRIP,2,V,sizeof(BlurVertex));
; 129  : //			}
; 130  : //
; 131  : //			{
; 132  : //				STATEMANAGER.SetRenderTarget(m_lpAccumRenderTargetSurface, m_lpAccumDepthSurface);
; 133  : //
; 134  : //				BlurVertex V[4] = { BlurVertex(D3DXVECTOR3(0.0f,0.0f,0.0f),1.0f,		0xFFFFFF, 0,0) ,
; 135  : //									BlurVertex(D3DXVECTOR3(wTextureSize,0.0f,0.0f),1.0f,		0xFFFFFF, 1,0) ,
; 136  : //									BlurVertex(D3DXVECTOR3(0.0f,wTextureSize,0.0f),1.0f,		0xFFFFFF, 0,1) ,
; 137  : //									BlurVertex(D3DXVECTOR3(wTextureSize,wTextureSize,0.0f),1.0f,	0xFFFFFF, 1,1) };
; 138  : //
; 139  : //				STATEMANAGER.SetTexture(0,m_lpSnowTexture);
; 140  : //				STATEMANAGER.SetRenderState( D3DRS_ALPHABLENDENABLE,   FALSE);
; 141  : //				STATEMANAGER.SetVertexShader( D3DFVF_XYZRHW | D3DFVF_DIFFUSE|D3DFVF_TEX1 );
; 142  : //				STATEMANAGER.DrawPrimitiveUP(D3DPT_TRIANGLESTRIP,2,V,sizeof(BlurVertex));
; 143  : //			}
; 144  : 
; 145  : 	///////////////
; 146  : 	{
; 147  : 		ms_lpd3dDevice->SetRenderTarget(m_lpOldSurface, m_lpOldDepthStencilSurface);

  00038	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  0003d	ff 76 08	 push	 DWORD PTR [esi+8]
  00040	ff 76 04	 push	 DWORD PTR [esi+4]
  00043	8b 08		 mov	 ecx, DWORD PTR [eax]
  00045	50		 push	 eax
  00046	ff 51 7c	 call	 DWORD PTR [ecx+124]

; 148  : 
; 149  : 		STATEMANAGER.SetTexture(0,m_lpSnowTexture);

  00049	ff 76 0c	 push	 DWORD PTR [esi+12]
  0004c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00052	6a 00		 push	 0
  00054	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 150  : 		STATEMANAGER.SetRenderState( D3DRS_ALPHABLENDENABLE,   TRUE);

  00059	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0005f	6a 01		 push	 1
  00061	6a 1b		 push	 27			; 0000001bH
  00063	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 151  : 
; 152  : 		D3DSURFACE_DESC	desc;
; 153  : 		m_lpOldSurface->GetDesc(&desc);

  00068	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0006b	8d 95 60 ff ff
	ff		 lea	 edx, DWORD PTR _desc$2[ebp]
  00071	52		 push	 edx
  00072	50		 push	 eax
  00073	8b 08		 mov	 ecx, DWORD PTR [eax]
  00075	ff 51 20	 call	 DWORD PTR [ecx+32]

; 154  : 		float sx = (float)desc.Width ;

  00078	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _desc$2[ebp+24]

; 155  : 		float sy = (float)desc.Height;
; 156  : 		SAFE_RELEASE( m_lpOldSurface );

  0007e	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00081	66 0f 6e c0	 movd	 xmm0, eax
  00085	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  00089	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0008c	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  00095	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR _desc$2[ebp+28]
  0009b	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  0009f	f3 0f 11 85 5c
	ff ff ff	 movss	 DWORD PTR tv406[ebp], xmm0
  000a7	66 0f 6e c0	 movd	 xmm0, eax
  000ab	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  000af	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000b2	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  000bb	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  000bf	f3 0f 11 85 58
	ff ff ff	 movss	 DWORD PTR tv407[ebp], xmm0
  000c7	85 c9		 test	 ecx, ecx
  000c9	74 0d		 je	 SHORT $LN3@ApplyBlur
  000cb	8b 01		 mov	 eax, DWORD PTR [ecx]
  000cd	51		 push	 ecx
  000ce	ff 50 08	 call	 DWORD PTR [eax+8]
  000d1	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
$LN3@ApplyBlur:

; 157  : 		SAFE_RELEASE( m_lpOldDepthStencilSurface );

  000d8	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000db	85 c9		 test	 ecx, ecx
  000dd	74 0d		 je	 SHORT $LN4@ApplyBlur
  000df	8b 01		 mov	 eax, DWORD PTR [ecx]
  000e1	51		 push	 ecx
  000e2	ff 50 08	 call	 DWORD PTR [eax+8]
  000e5	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@ApplyBlur:
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowParticle.h

; 18   : 	BlurVertex(D3DXVECTOR3 p, float w,DWORD c,float u,float v):pos(p),rhw(w),color(c),tu(u),tv(v) {}

  000ec	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@3f800000000000000000000000000000
  000f3	f3 0f 10 8d 5c
	ff ff ff	 movss	 xmm1, DWORD PTR tv406[ebp]
  000fb	0f 11 45 80	 movups	 XMMWORD PTR _V$3[ebp], xmm0
  000ff	c7 45 90 ff ff
	ff 00		 mov	 DWORD PTR _V$3[ebp+16], 16777215 ; 00ffffffH
  00106	f3 0f 10 85 58
	ff ff ff	 movss	 xmm0, DWORD PTR tv407[ebp]
  0010e	c7 45 94 00 00
	00 00		 mov	 DWORD PTR _V$3[ebp+20], 0
  00115	c7 45 98 00 00
	00 00		 mov	 DWORD PTR _V$3[ebp+24], 0
  0011c	f3 0f 11 4d 9c	 movss	 DWORD PTR _V$3[ebp+28], xmm1
  00121	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR _V$3[ebp+32], 0
  00128	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR _V$3[ebp+36], 0
  0012f	c7 45 a8 00 00
	80 3f		 mov	 DWORD PTR _V$3[ebp+40], 1065353216 ; 3f800000H
  00136	c7 45 ac ff ff
	ff 00		 mov	 DWORD PTR _V$3[ebp+44], 16777215 ; 00ffffffH
  0013d	c7 45 b0 00 00
	80 3f		 mov	 DWORD PTR _V$3[ebp+48], 1065353216 ; 3f800000H
  00144	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR _V$3[ebp+52], 0
  0014b	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR _V$3[ebp+56], 0
  00152	f3 0f 11 45 bc	 movss	 DWORD PTR _V$3[ebp+60], xmm0
  00157	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _V$3[ebp+64], 0
  0015e	c7 45 c4 00 00
	80 3f		 mov	 DWORD PTR _V$3[ebp+68], 1065353216 ; 3f800000H
  00165	c7 45 c8 ff ff
	ff 00		 mov	 DWORD PTR _V$3[ebp+72], 16777215 ; 00ffffffH
  0016c	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _V$3[ebp+76], 0
  00173	c7 45 d0 00 00
	80 3f		 mov	 DWORD PTR _V$3[ebp+80], 1065353216 ; 3f800000H
  0017a	f3 0f 11 4d d4	 movss	 DWORD PTR _V$3[ebp+84], xmm1
  0017f	f3 0f 11 45 d8	 movss	 DWORD PTR _V$3[ebp+88], xmm0
  00184	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _V$3[ebp+92], 0
  0018b	c7 45 e0 00 00
	80 3f		 mov	 DWORD PTR _V$3[ebp+96], 1065353216 ; 3f800000H
  00192	c7 45 e4 ff ff
	ff 00		 mov	 DWORD PTR _V$3[ebp+100], 16777215 ; 00ffffffH
  00199	c7 45 e8 00 00
	80 3f		 mov	 DWORD PTR _V$3[ebp+104], 1065353216 ; 3f800000H
  001a0	c7 45 ec 00 00
	80 3f		 mov	 DWORD PTR _V$3[ebp+108], 1065353216 ; 3f800000H
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp

; 164  : 		STATEMANAGER.SetVertexShader( D3DFVF_XYZRHW | D3DFVF_DIFFUSE|D3DFVF_TEX1 );

  001a7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001ad	68 44 01 00 00	 push	 324			; 00000144H
  001b2	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  001b9	e8 00 00 00 00	 call	 ?SetVertexShader@CStateManager@@QAEXK@Z ; CStateManager::SetVertexShader

; 165  : 		STATEMANAGER.DrawPrimitiveUP(D3DPT_TRIANGLESTRIP,2,V,sizeof(BlurVertex));

  001be	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001c4	8d 45 80	 lea	 eax, DWORD PTR _V$3[ebp]
  001c7	6a 1c		 push	 28			; 0000001cH
  001c9	50		 push	 eax
  001ca	6a 02		 push	 2
  001cc	6a 05		 push	 5
  001ce	e8 00 00 00 00	 call	 ?DrawPrimitiveUP@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IPBXI@Z ; CStateManager::DrawPrimitiveUP

; 166  : 	}

  001d3	68 00 00 00 00	 push	 OFFSET ??1BlurVertex@@QAE@XZ ; BlurVertex::~BlurVertex
  001d8	6a 04		 push	 4
  001da	6a 1c		 push	 28			; 0000001cH
  001dc	8d 45 80	 lea	 eax, DWORD PTR _V$3[ebp]
  001df	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001e6	50		 push	 eax
  001e7	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
$LN1@ApplyBlur:

; 167  : }

  001ec	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001ef	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001f6	59		 pop	 ecx
  001f7	5e		 pop	 esi
  001f8	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001fb	33 cd		 xor	 ecx, ebp
  001fd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00202	8b e5		 mov	 esp, ebp
  00204	5d		 pop	 ebp
  00205	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?__ApplyBlur@CSnowEnvironment@@IAEXXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ??1BlurVertex@@QAE@XZ ; BlurVertex::~BlurVertex
  00005	6a 04		 push	 4
  00007	6a 1c		 push	 28			; 0000001cH
  00009	8d 45 80	 lea	 eax, DWORD PTR _V$3[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00012	c3		 ret	 0
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
  00017	cc		 int	 3
__ehhandler$?__ApplyBlur@CSnowEnvironment@@IAEXXZ:
  00018	90		 npad	 1
  00019	90		 npad	 1
  0001a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00021	8b 8a 5c ff ff
	ff		 mov	 ecx, DWORD PTR [edx-164]
  00027	33 c8		 xor	 ecx, eax
  00029	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002e	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00031	33 c8		 xor	 ecx, eax
  00033	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00038	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?__ApplyBlur@CSnowEnvironment@@IAEXXZ
  0003d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?__ApplyBlur@CSnowEnvironment@@IAEXXZ ENDP		; CSnowEnvironment::__ApplyBlur
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
;	COMDAT ?__BeginBlur@CSnowEnvironment@@IAEXXZ
_TEXT	SEGMENT
?__BeginBlur@CSnowEnvironment@@IAEXXZ PROC		; CSnowEnvironment::__BeginBlur, COMDAT
; _this$ = ecx

; 89   : {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 90   : 	if (!m_bBlurEnable)

  00003	83 7f 50 00	 cmp	 DWORD PTR [edi+80], 0
  00007	0f 84 86 00 00
	00		 je	 $LN1@BeginBlur

; 91   : 		return;
; 92   : 
; 93   : 	ms_lpd3dDevice->GetRenderTarget(&m_lpOldSurface);

  0000d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  00013	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  00016	56		 push	 esi
  00017	50		 push	 eax
  00018	52		 push	 edx
  00019	8b 32		 mov	 esi, DWORD PTR [edx]
  0001b	ff 96 80 00 00
	00		 call	 DWORD PTR [esi+128]

; 94   : 	ms_lpd3dDevice->GetDepthStencilSurface(&m_lpOldDepthStencilSurface);

  00021	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  00027	8d 47 08	 lea	 eax, DWORD PTR [edi+8]
  0002a	50		 push	 eax
  0002b	51		 push	 ecx
  0002c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002e	ff 92 84 00 00
	00		 call	 DWORD PTR [edx+132]

; 95   : 	ms_lpd3dDevice->SetRenderTarget(m_lpSnowRenderTargetSurface, m_lpSnowDepthSurface);

  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  00039	ff 77 14	 push	 DWORD PTR [edi+20]
  0003c	ff 77 10	 push	 DWORD PTR [edi+16]
  0003f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00041	50		 push	 eax
  00042	ff 51 7c	 call	 DWORD PTR [ecx+124]

; 96   : 	ms_lpd3dDevice->Clear(0L, NULL, D3DCLEAR_TARGET|D3DCLEAR_ZBUFFER, 0x00000000, 1.0f, 0L);

  00045	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  0004a	6a 00		 push	 0
  0004c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004e	51		 push	 ecx
  0004f	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00056	6a 00		 push	 0
  00058	6a 03		 push	 3
  0005a	6a 00		 push	 0
  0005c	6a 00		 push	 0
  0005e	50		 push	 eax
  0005f	ff 91 90 00 00
	00		 call	 DWORD PTR [ecx+144]

; 97   : 
; 98   : 	STATEMANAGER.SetRenderState(D3DRS_ALPHABLENDENABLE, TRUE);

  00065	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0006b	6a 01		 push	 1
  0006d	6a 1b		 push	 27			; 0000001bH
  0006f	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 99   : 	STATEMANAGER.SetRenderState(D3DRS_SRCBLEND, D3DBLEND_SRCALPHA);

  00074	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0007a	6a 05		 push	 5
  0007c	6a 13		 push	 19			; 00000013H
  0007e	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 100  : 	STATEMANAGER.SetRenderState(D3DRS_DESTBLEND, D3DBLEND_DESTALPHA);

  00083	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00089	6a 07		 push	 7
  0008b	6a 14		 push	 20			; 00000014H
  0008d	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState
  00092	5e		 pop	 esi
$LN1@BeginBlur:

; 101  : }

  00093	5f		 pop	 edi
  00094	c3		 ret	 0
?__BeginBlur@CSnowEnvironment@@IAEXXZ ENDP		; CSnowEnvironment::__BeginBlur
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
;	COMDAT ?__CreateGeometry@CSnowEnvironment@@IAE_NXZ
_TEXT	SEGMENT
tv608 = -12						; size = 4
_i$1$ = -8						; size = 4
_dstIndices$ = -4					; size = 4
?__CreateGeometry@CSnowEnvironment@@IAE_NXZ PROC	; CSnowEnvironment::__CreateGeometry, COMDAT
; _this$ = ecx

; 253  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 254  : 	if (FAILED(ms_lpd3dDevice->CreateVertexBuffer(sizeof(SParticleVertex)*m_dwParticleMaxNum*4,

  00003	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  00009	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0000c	53		 push	 ebx
  0000d	56		 push	 esi
  0000e	8b 32		 mov	 esi, DWORD PTR [edx]
  00010	8b d9		 mov	 ebx, ecx
  00012	8d 43 24	 lea	 eax, DWORD PTR [ebx+36]
  00015	50		 push	 eax
  00016	8b 43 4c	 mov	 eax, DWORD PTR [ebx+76]
  00019	6a 02		 push	 2
  0001b	68 02 01 00 00	 push	 258			; 00000102H
  00020	68 08 02 00 00	 push	 520			; 00000208H
  00025	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  00028	c1 e0 04	 shl	 eax, 4
  0002b	50		 push	 eax
  0002c	52		 push	 edx
  0002d	ff 56 5c	 call	 DWORD PTR [esi+92]
  00030	85 c0		 test	 eax, eax
  00032	0f 88 bc 00 00
	00		 js	 $LN26@CreateGeom

; 255  : 											D3DUSAGE_DYNAMIC|D3DUSAGE_WRITEONLY,
; 256  : 											D3DFVF_XYZ | D3DFVF_TEX1,
; 257  : 											D3DPOOL_SYSTEMMEM,
; 258  : 											&m_pVB)))
; 259  : 		return false;
; 260  : 
; 261  : 	if (FAILED(ms_lpd3dDevice->CreateIndexBuffer(sizeof(WORD)*m_dwParticleMaxNum*6,

  00038	8b 43 4c	 mov	 eax, DWORD PTR [ebx+76]
  0003b	8d 73 28	 lea	 esi, DWORD PTR [ebx+40]
  0003e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  00044	56		 push	 esi
  00045	6a 01		 push	 1
  00047	6a 65		 push	 101			; 00000065H
  00049	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004b	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0004e	6a 08		 push	 8
  00050	c1 e0 02	 shl	 eax, 2
  00053	50		 push	 eax
  00054	51		 push	 ecx
  00055	89 75 f4	 mov	 DWORD PTR tv608[ebp], esi
  00058	ff 52 60	 call	 DWORD PTR [edx+96]
  0005b	85 c0		 test	 eax, eax
  0005d	0f 88 91 00 00
	00		 js	 $LN26@CreateGeom

; 262  : 										   D3DUSAGE_WRITEONLY,
; 263  : 										   D3DFMT_INDEX16,
; 264  : 										   D3DPOOL_MANAGED,
; 265  : 										   &m_pIB)))
; 266  : 		return false;
; 267  : 
; 268  : 	WORD* dstIndices;
; 269  : 	if (FAILED(m_pIB->Lock(0, sizeof(WORD)*m_dwParticleMaxNum*6, (BYTE**)&dstIndices, 0)))

  00063	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00065	8d 45 fc	 lea	 eax, DWORD PTR _dstIndices$[ebp]
  00068	6a 00		 push	 0
  0006a	50		 push	 eax
  0006b	8b 43 4c	 mov	 eax, DWORD PTR [ebx+76]
  0006e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00070	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00073	c1 e0 02	 shl	 eax, 2
  00076	50		 push	 eax
  00077	6a 00		 push	 0
  00079	51		 push	 ecx
  0007a	ff 52 2c	 call	 DWORD PTR [edx+44]
  0007d	85 c0		 test	 eax, eax
  0007f	78 73		 js	 SHORT $LN26@CreateGeom

; 271  : 
; 272  : 	const WORD c_awFillRectIndices[6] = { 0, 2, 1, 2, 3, 1, };
; 273  : 	for (int i = 0; i < m_dwParticleMaxNum; ++i)

  00081	33 c0		 xor	 eax, eax
  00083	89 45 f8	 mov	 DWORD PTR _i$1$[ebp], eax
  00086	39 43 4c	 cmp	 DWORD PTR [ebx+76], eax
  00089	76 59		 jbe	 SHORT $LN3@CreateGeom
  0008b	57		 push	 edi
  0008c	bf 06 00 00 00	 mov	 edi, 6
$LL4@CreateGeom:

; 274  : 	{
; 275  : 		for (int j = 0; j < 6; ++j)
; 276  : 		{
; 277  : 			dstIndices[i*6 + j] = i*4 + c_awFillRectIndices[j];

  00091	8d 34 85 00 00
	00 00		 lea	 esi, DWORD PTR [eax*4]
  00098	8b 45 fc	 mov	 eax, DWORD PTR _dstIndices$[ebp]
  0009b	8d 4e 02	 lea	 ecx, DWORD PTR [esi+2]
  0009e	8d 56 01	 lea	 edx, DWORD PTR [esi+1]
  000a1	8d 7f 0c	 lea	 edi, DWORD PTR [edi+12]
  000a4	66 89 74 07 ee	 mov	 WORD PTR [edi+eax-18], si
  000a9	8b 45 fc	 mov	 eax, DWORD PTR _dstIndices$[ebp]
  000ac	66 89 4c 07 f0	 mov	 WORD PTR [edi+eax-16], cx
  000b1	8b 45 fc	 mov	 eax, DWORD PTR _dstIndices$[ebp]
  000b4	66 89 54 07 f2	 mov	 WORD PTR [edi+eax-14], dx
  000b9	8b 45 fc	 mov	 eax, DWORD PTR _dstIndices$[ebp]
  000bc	66 89 4c 07 f4	 mov	 WORD PTR [edi+eax-12], cx
  000c1	8d 4e 03	 lea	 ecx, DWORD PTR [esi+3]
  000c4	8b 45 fc	 mov	 eax, DWORD PTR _dstIndices$[ebp]
  000c7	66 89 4c 07 f6	 mov	 WORD PTR [edi+eax-10], cx
  000cc	8b 45 fc	 mov	 eax, DWORD PTR _dstIndices$[ebp]
  000cf	66 89 54 07 f8	 mov	 WORD PTR [edi+eax-8], dx
  000d4	8b 45 f8	 mov	 eax, DWORD PTR _i$1$[ebp]
  000d7	40		 inc	 eax
  000d8	89 45 f8	 mov	 DWORD PTR _i$1$[ebp], eax
  000db	3b 43 4c	 cmp	 eax, DWORD PTR [ebx+76]
  000de	72 b1		 jb	 SHORT $LL4@CreateGeom

; 271  : 
; 272  : 	const WORD c_awFillRectIndices[6] = { 0, 2, 1, 2, 3, 1, };
; 273  : 	for (int i = 0; i < m_dwParticleMaxNum; ++i)

  000e0	8b 75 f4	 mov	 esi, DWORD PTR tv608[ebp]
  000e3	5f		 pop	 edi
$LN3@CreateGeom:

; 278  : 		}
; 279  : 	}
; 280  : 
; 281  : 	m_pIB->Unlock();

  000e4	8b 06		 mov	 eax, DWORD PTR [esi]
  000e6	50		 push	 eax
  000e7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e9	ff 51 30	 call	 DWORD PTR [ecx+48]
  000ec	5e		 pop	 esi

; 282  : 	return true;

  000ed	b0 01		 mov	 al, 1

; 283  : }

  000ef	5b		 pop	 ebx
  000f0	8b e5		 mov	 esp, ebp
  000f2	5d		 pop	 ebp
  000f3	c3		 ret	 0
$LN26@CreateGeom:
  000f4	5e		 pop	 esi

; 270  : 		return false;

  000f5	32 c0		 xor	 al, al

; 283  : }

  000f7	5b		 pop	 ebx
  000f8	8b e5		 mov	 esp, ebp
  000fa	5d		 pop	 ebp
  000fb	c3		 ret	 0
?__CreateGeometry@CSnowEnvironment@@IAE_NXZ ENDP	; CSnowEnvironment::__CreateGeometry
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
;	COMDAT ?__CreateBlurTexture@CSnowEnvironment@@IAE_NXZ
_TEXT	SEGMENT
?__CreateBlurTexture@CSnowEnvironment@@IAE_NXZ PROC	; CSnowEnvironment::__CreateBlurTexture, COMDAT
; _this$ = ecx

; 231  : {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 232  : 	if (!m_bBlurEnable)

  00003	83 7f 50 00	 cmp	 DWORD PTR [edi+80], 0
  00007	0f 84 b2 00 00
	00		 je	 $LN8@CreateBlur

; 233  : 		return true;
; 234  : 
; 235  : 	if (FAILED(ms_lpd3dDevice->CreateTexture(m_wBlurTextureSize, m_wBlurTextureSize, 1, D3DUSAGE_RENDERTARGET, D3DFMT_X8R8G8B8, D3DPOOL_DEFAULT, &m_lpSnowTexture)))

  0000d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  00013	0f b7 47 38	 movzx	 eax, WORD PTR [edi+56]
  00017	56		 push	 esi
  00018	8d 77 0c	 lea	 esi, DWORD PTR [edi+12]
  0001b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001d	56		 push	 esi
  0001e	6a 00		 push	 0
  00020	6a 16		 push	 22			; 00000016H
  00022	6a 01		 push	 1
  00024	6a 01		 push	 1
  00026	50		 push	 eax
  00027	50		 push	 eax
  00028	51		 push	 ecx
  00029	ff 52 50	 call	 DWORD PTR [edx+80]
  0002c	85 c0		 test	 eax, eax
  0002e	0f 88 86 00 00
	00		 js	 $LN10@CreateBlur

; 236  : 		return false;
; 237  : 	if (FAILED(m_lpSnowTexture->GetSurfaceLevel(0, &m_lpSnowRenderTargetSurface)))

  00034	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00036	8d 47 10	 lea	 eax, DWORD PTR [edi+16]
  00039	50		 push	 eax
  0003a	6a 00		 push	 0
  0003c	51		 push	 ecx
  0003d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003f	ff 52 3c	 call	 DWORD PTR [edx+60]
  00042	85 c0		 test	 eax, eax
  00044	78 74		 js	 SHORT $LN10@CreateBlur

; 238  : 		return false;
; 239  : 	if (FAILED(ms_lpd3dDevice->CreateDepthStencilSurface(m_wBlurTextureSize, m_wBlurTextureSize, D3DFMT_D16, D3DMULTISAMPLE_NONE, &m_lpSnowDepthSurface)))

  00046	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  0004c	8d 47 14	 lea	 eax, DWORD PTR [edi+20]
  0004f	0f b7 4f 38	 movzx	 ecx, WORD PTR [edi+56]
  00053	50		 push	 eax
  00054	6a 00		 push	 0
  00056	8b 32		 mov	 esi, DWORD PTR [edx]
  00058	6a 50		 push	 80			; 00000050H
  0005a	51		 push	 ecx
  0005b	51		 push	 ecx
  0005c	52		 push	 edx
  0005d	ff 56 68	 call	 DWORD PTR [esi+104]
  00060	85 c0		 test	 eax, eax
  00062	78 56		 js	 SHORT $LN10@CreateBlur

; 240  : 		return false;
; 241  : 
; 242  : 	if (FAILED(ms_lpd3dDevice->CreateTexture(m_wBlurTextureSize, m_wBlurTextureSize, 1, D3DUSAGE_RENDERTARGET, D3DFMT_X8R8G8B8, D3DPOOL_DEFAULT, &m_lpAccumTexture)))

  00064	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  0006a	8d 77 18	 lea	 esi, DWORD PTR [edi+24]
  0006d	0f b7 47 38	 movzx	 eax, WORD PTR [edi+56]
  00071	56		 push	 esi
  00072	6a 00		 push	 0
  00074	8b 11		 mov	 edx, DWORD PTR [ecx]
  00076	6a 16		 push	 22			; 00000016H
  00078	6a 01		 push	 1
  0007a	6a 01		 push	 1
  0007c	50		 push	 eax
  0007d	50		 push	 eax
  0007e	51		 push	 ecx
  0007f	ff 52 50	 call	 DWORD PTR [edx+80]
  00082	85 c0		 test	 eax, eax
  00084	78 34		 js	 SHORT $LN10@CreateBlur

; 243  : 		return false;
; 244  : 	if (FAILED(m_lpAccumTexture->GetSurfaceLevel(0, &m_lpAccumRenderTargetSurface)))

  00086	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00088	8d 47 1c	 lea	 eax, DWORD PTR [edi+28]
  0008b	50		 push	 eax
  0008c	6a 00		 push	 0
  0008e	51		 push	 ecx
  0008f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00091	ff 52 3c	 call	 DWORD PTR [edx+60]
  00094	85 c0		 test	 eax, eax
  00096	78 22		 js	 SHORT $LN10@CreateBlur

; 245  : 		return false;
; 246  : 	if (FAILED(ms_lpd3dDevice->CreateDepthStencilSurface(m_wBlurTextureSize, m_wBlurTextureSize, D3DFMT_D16, D3DMULTISAMPLE_NONE, &m_lpAccumDepthSurface)))

  00098	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  0009e	8d 47 20	 lea	 eax, DWORD PTR [edi+32]
  000a1	0f b7 4f 38	 movzx	 ecx, WORD PTR [edi+56]
  000a5	50		 push	 eax
  000a6	6a 00		 push	 0
  000a8	8b 32		 mov	 esi, DWORD PTR [edx]
  000aa	6a 50		 push	 80			; 00000050H
  000ac	51		 push	 ecx
  000ad	51		 push	 ecx
  000ae	52		 push	 edx
  000af	ff 56 68	 call	 DWORD PTR [esi+104]
  000b2	85 c0		 test	 eax, eax
  000b4	5e		 pop	 esi
  000b5	0f 99 c0	 setns	 al
  000b8	5f		 pop	 edi

; 250  : }

  000b9	c3		 ret	 0
$LN10@CreateBlur:
  000ba	5e		 pop	 esi

; 247  : 		return false;

  000bb	32 c0		 xor	 al, al
  000bd	5f		 pop	 edi

; 250  : }

  000be	c3		 ret	 0
$LN8@CreateBlur:

; 248  : 
; 249  : 	return true;

  000bf	b0 01		 mov	 al, 1
  000c1	5f		 pop	 edi

; 250  : }

  000c2	c3		 ret	 0
?__CreateBlurTexture@CSnowEnvironment@@IAE_NXZ ENDP	; CSnowEnvironment::__CreateBlurTexture
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
;	COMDAT ?__Initialize@CSnowEnvironment@@IAEXXZ
_TEXT	SEGMENT
__Size$1$ = -4						; size = 4
?__Initialize@CSnowEnvironment@@IAEXXZ PROC		; CSnowEnvironment::__Initialize, COMDAT
; _this$ = ecx

; 326  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx

; 327  : 	m_bSnowEnable = FALSE;
; 328  : 	m_lpSnowTexture = NULL;
; 329  : 	m_lpSnowRenderTargetSurface = NULL;
; 330  : 	m_lpSnowDepthSurface = NULL;
; 331  : 	m_lpAccumTexture = NULL;
; 332  : 	m_lpAccumRenderTargetSurface = NULL;
; 333  : 	m_lpAccumDepthSurface = NULL;
; 334  : 	m_pVB = NULL;
; 335  : 	m_pIB = NULL;
; 336  : 	m_pImageInstance = NULL;
; 337  : 
; 338  : 	m_kVct_pkParticleSnow.reserve(m_dwParticleMaxNum);

  00008	8b 5e 4c	 mov	 ebx, DWORD PTR [esi+76]
  0000b	c7 46 54 00 00
	00 00		 mov	 DWORD PTR [esi+84], 0
  00012	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00019	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  00020	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00027	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
  0002e	c7 46 1c 00 00
	00 00		 mov	 DWORD PTR [esi+28], 0
  00035	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0
  0003c	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0
  00043	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0
  0004a	c7 46 3c 00 00
	00 00		 mov	 DWORD PTR [esi+60], 0
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1909 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00051	8b 46 48	 mov	 eax, DWORD PTR [esi+72]
  00054	8b 4e 40	 mov	 ecx, DWORD PTR [esi+64]
  00057	2b c1		 sub	 eax, ecx
  00059	c1 f8 02	 sar	 eax, 2

; 1710 :         if (_Newcapacity > capacity()) { // something to do (reserve() never shrinks)

  0005c	3b d8		 cmp	 ebx, eax
  0005e	0f 86 92 00 00
	00		 jbe	 $LN73@Initialize

; 1711 :             if (_Newcapacity > max_size()) {

  00064	81 fb ff ff ff
	3f		 cmp	 ebx, 1073741823		; 3fffffffH
  0006a	0f 87 91 00 00
	00		 ja	 $LN100@Initialize

; 1634 :         const auto _Size = static_cast<size_type>(_Mylast - _Myfirst);

  00070	8b 46 44	 mov	 eax, DWORD PTR [esi+68]
  00073	2b c1		 sub	 eax, ecx
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 122  :     return _Count * _Ty_size;

  00075	c1 e3 02	 shl	 ebx, 2
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1634 :         const auto _Size = static_cast<size_type>(_Mylast - _Myfirst);

  00078	c1 f8 02	 sar	 eax, 2
  0007b	89 45 fc	 mov	 DWORD PTR __Size$1$[ebp], eax
  0007e	57		 push	 edi
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 227  :     if (_Bytes == 0) {

  0007f	85 db		 test	 ebx, ebx
  00081	75 04		 jne	 SHORT $LN22@Initialize

; 228  :         return nullptr;

  00083	33 ff		 xor	 edi, edi
  00085	eb 1a		 jmp	 SHORT $LN21@Initialize
$LN22@Initialize:

; 229  :     }
; 230  : 
; 231  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 232  :     if (_STD is_constant_evaluated()) {
; 233  :         return _Traits::_Allocate(_Bytes);
; 234  :     }
; 235  : #endif // _HAS_CXX20
; 236  : 
; 237  : #ifdef __cpp_aligned_new
; 238  :     if constexpr (_Align > __STDCPP_DEFAULT_NEW_ALIGNMENT__) {
; 239  :         size_t _Passed_align = _Align;
; 240  : #if defined(_M_IX86) || defined(_M_X64)
; 241  :         if (_Bytes >= _Big_allocation_threshold) {
; 242  :             // boost the alignment of big allocations to help autovectorization
; 243  :             _Passed_align = (_STD max)(_Align, _Big_allocation_alignment);
; 244  :         }
; 245  : #endif // defined(_M_IX86) || defined(_M_X64)
; 246  :         return _Traits::_Allocate_aligned(_Bytes, _Passed_align);
; 247  :     } else
; 248  : #endif // defined(__cpp_aligned_new)
; 249  :     {
; 250  : #if defined(_M_IX86) || defined(_M_X64)
; 251  :         if (_Bytes >= _Big_allocation_threshold) {

  00087	53		 push	 ebx
  00088	81 fb 00 10 00
	00		 cmp	 ebx, 4096		; 00001000H
  0008e	72 07		 jb	 SHORT $LN23@Initialize

; 252  :             // boost the alignment of big allocations to help autovectorization
; 253  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00090	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00095	eb 05		 jmp	 SHORT $LN98@Initialize
$LN23@Initialize:

; 136  :         return ::operator new(_Bytes);

  00097	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
$LN98@Initialize:

; 1955 :             _STD _Copy_memmove(_UFirst, _ULast, _STD _Unfancy(_Dest));

  0009c	8b f8		 mov	 edi, eax
  0009e	83 c4 04	 add	 esp, 4
$LN21@Initialize:
  000a1	57		 push	 edi
  000a2	ff 76 44	 push	 DWORD PTR [esi+68]
  000a5	ff 76 40	 push	 DWORD PTR [esi+64]
  000a8	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCSnowParticle@@PAPAV1@@std@@YAPAPAVCSnowParticle@@PAPAV1@00@Z ; std::_Copy_memmove<CSnowParticle * *,CSnowParticle * *>
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 2054 :         if (_Myfirst) { // destroy and deallocate old array

  000ad	8b 46 40	 mov	 eax, DWORD PTR [esi+64]
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 1955 :             _STD _Copy_memmove(_UFirst, _ULast, _STD _Unfancy(_Dest));

  000b0	83 c4 0c	 add	 esp, 12			; 0000000cH
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 2054 :         if (_Myfirst) { // destroy and deallocate old array

  000b3	85 c0		 test	 eax, eax
  000b5	74 2c		 je	 SHORT $LN49@Initialize

; 2055 :             _STD _Destroy_range(_Myfirst, _Mylast, _Al);
; 2056 :             _ASAN_VECTOR_REMOVE;
; 2057 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b7	8b 4e 48	 mov	 ecx, DWORD PTR [esi+72]
  000ba	2b c8		 sub	 ecx, eax
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 981  :         _STD _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bc	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 284  :         if (_Bytes >= _Big_allocation_threshold) {

  000bf	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000c5	72 12		 jb	 SHORT $LN60@Initialize

; 205  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000c7	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000ca	83 c1 23	 add	 ecx, 35			; 00000023H

; 206  : 
; 207  :     // If the following asserts, it likely means that we are performing
; 208  :     // an aligned delete on memory coming from an unaligned allocation.
; 209  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 210  : 
; 211  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 212  :     // in range [_Min_back_shift, _Non_user_size]
; 213  : #ifdef _DEBUG
; 214  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 215  : #else // ^^^ defined(_DEBUG) / !defined(_DEBUG) vvv
; 216  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 217  : #endif // ^^^ !defined(_DEBUG) ^^^
; 218  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000cd	2b c2		 sub	 eax, edx

; 219  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000cf	83 c0 fc	 add	 eax, -4			; fffffffcH
  000d2	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000d5	77 25		 ja	 SHORT $LN57@Initialize

; 220  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000d7	8b c2		 mov	 eax, edx
$LN60@Initialize:

; 289  :         ::operator delete(_Ptr, _Bytes);

  000d9	51		 push	 ecx
  000da	50		 push	 eax
  000db	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000e0	83 c4 08	 add	 esp, 8
$LN49@Initialize:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 2061 :         _Mylast  = _Newvec + _Newsize;

  000e3	8b 45 fc	 mov	 eax, DWORD PTR __Size$1$[ebp]
  000e6	89 7e 40	 mov	 DWORD PTR [esi+64], edi
  000e9	8d 04 87	 lea	 eax, DWORD PTR [edi+eax*4]
  000ec	89 46 44	 mov	 DWORD PTR [esi+68], eax

; 2062 :         _Myend   = _Newvec + _Newcapacity;

  000ef	8d 04 3b	 lea	 eax, DWORD PTR [ebx+edi]
  000f2	89 46 48	 mov	 DWORD PTR [esi+72], eax
  000f5	5f		 pop	 edi
$LN73@Initialize:
  000f6	5e		 pop	 esi
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp

; 339  : }

  000f7	5b		 pop	 ebx
  000f8	8b e5		 mov	 esp, ebp
  000fa	5d		 pop	 ebp
  000fb	c3		 ret	 0
$LN57@Initialize:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 219  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fc	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN100@Initialize:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1712 :                 _Xlength();

  00101	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@CAXXZ ; std::vector<CSnowParticle *,std::allocator<CSnowParticle *> >::_Xlength
$LN97@Initialize:
  00106	cc		 int	 3
?__Initialize@CSnowEnvironment@@IAEXXZ ENDP		; CSnowEnvironment::__Initialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
;	COMDAT ?Render@CSnowEnvironment@@QAEXXZ
_TEXT	SEGMENT
_this$1$ = -20						; size = 4
_pv3Verticies$ = -16					; size = 4
_pCamera$1$ = -12					; size = 4
_i$1$ = -8						; size = 4
tv527 = -4						; size = 4
?Render@CSnowEnvironment@@QAEXXZ PROC			; CSnowEnvironment::Render, COMDAT
; _this$ = ecx

; 170  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	89 7d ec	 mov	 DWORD PTR _this$1$[ebp], edi

; 171  : 	if (!m_bSnowEnable)

  0000d	83 7f 54 00	 cmp	 DWORD PTR [edi+84], 0
  00011	75 0c		 jne	 SHORT $LN92@Render
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1895 :         return _My_data._Myfirst == _My_data._Mylast;

  00013	8b 47 40	 mov	 eax, DWORD PTR [edi+64]
  00016	3b 47 44	 cmp	 eax, DWORD PTR [edi+68]
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp

; 173  : 		if (m_kVct_pkParticleSnow.empty())

  00019	0f 84 09 02 00
	00		 je	 $LN1@Render
$LN92@Render:
  0001f	53		 push	 ebx

; 174  : 			return;
; 175  : 	}
; 176  : 
; 177  : 	__BeginBlur();

  00020	e8 00 00 00 00	 call	 ?__BeginBlur@CSnowEnvironment@@IAEXXZ ; CSnowEnvironment::__BeginBlur
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1900 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00025	8b 5f 44	 mov	 ebx, DWORD PTR [edi+68]
  00028	2b 5f 40	 sub	 ebx, DWORD PTR [edi+64]
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp

; 181  : 	CCamera * pCamera = CCameraManager::Instance().GetCurrentCamera();

  0002b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1900 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00031	c1 fb 02	 sar	 ebx, 2
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp

; 179  : 	DWORD dwParticleCount = min(m_dwParticleMaxNum, m_kVct_pkParticleSnow.size());

  00034	39 5f 4c	 cmp	 DWORD PTR [edi+76], ebx
  00037	0f 42 5f 4c	 cmovb	 ebx, DWORD PTR [edi+76]

; 181  : 	CCamera * pCamera = CCameraManager::Instance().GetCurrentCamera();

  0003b	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera
  00040	8b c8		 mov	 ecx, eax
  00042	89 4d f4	 mov	 DWORD PTR _pCamera$1$[ebp], ecx

; 182  : 	if (!pCamera)

  00045	85 c9		 test	 ecx, ecx
  00047	0f 84 da 01 00
	00		 je	 $LN99@Render

; 183  : 		return;
; 184  : 
; 185  : 	const D3DXVECTOR3 & c_rv3Up = pCamera->GetUp();
; 186  : 	const D3DXVECTOR3 & c_rv3Cross = pCamera->GetCross();
; 187  : 
; 188  : 	SParticleVertex * pv3Verticies;
; 189  : 	if (SUCCEEDED(m_pVB->Lock(0, sizeof(SParticleVertex)*dwParticleCount*4, (BYTE **) &pv3Verticies, D3DLOCK_DISCARD)))

  0004d	8b 57 24	 mov	 edx, DWORD PTR [edi+36]
  00050	8d 45 f0	 lea	 eax, DWORD PTR _pv3Verticies$[ebp]
  00053	68 00 20 00 00	 push	 8192			; 00002000H
  00058	50		 push	 eax
  00059	8d 04 9b	 lea	 eax, DWORD PTR [ebx+ebx*4]
  0005c	8b 0a		 mov	 ecx, DWORD PTR [edx]
  0005e	c1 e0 04	 shl	 eax, 4
  00061	50		 push	 eax
  00062	6a 00		 push	 0
  00064	52		 push	 edx
  00065	ff 51 2c	 call	 DWORD PTR [ecx+44]
  00068	85 c0		 test	 eax, eax
  0006a	78 66		 js	 SHORT $LN8@Render
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 46   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0006c	8b 77 40	 mov	 esi, DWORD PTR [edi+64]
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp

; 191  : 		int i = 0;

  0006f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$1$[ebp], 0

; 193  : 		for (; i < dwParticleCount && itor != m_kVct_pkParticleSnow.end(); ++i, ++itor)

  00076	85 db		 test	 ebx, ebx
  00078	74 4f		 je	 SHORT $LN93@Render
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1827 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  0007a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv527[ebp], 0
$LL4@Render:

; 46   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00081	3b 77 44	 cmp	 esi, DWORD PTR [edi+68]
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp

; 193  : 		for (; i < dwParticleCount && itor != m_kVct_pkParticleSnow.end(); ++i, ++itor)

  00084	74 43		 je	 SHORT $LN93@Render

; 194  : 		{
; 195  : 			CSnowParticle * pSnow = *itor;
; 196  : 			pSnow->SetCameraVertex(c_rv3Up, c_rv3Cross);

  00086	8b 4d f4	 mov	 ecx, DWORD PTR _pCamera$1$[ebp]
  00089	8b 3e		 mov	 edi, DWORD PTR [esi]
  0008b	8d 41 60	 lea	 eax, DWORD PTR [ecx+96]
  0008e	50		 push	 eax
  0008f	8d 41 48	 lea	 eax, DWORD PTR [ecx+72]
  00092	8b cf		 mov	 ecx, edi
  00094	50		 push	 eax
  00095	e8 00 00 00 00	 call	 ?SetCameraVertex@CSnowParticle@@QAEXABUD3DXVECTOR3@@0@Z ; CSnowParticle::SetCameraVertex

; 197  : 			pSnow->GetVerticies(pv3Verticies[i*4+0],

  0009a	8b 55 fc	 mov	 edx, DWORD PTR tv527[ebp]
  0009d	8b cf		 mov	 ecx, edi
  0009f	03 55 f0	 add	 edx, DWORD PTR _pv3Verticies$[ebp]
  000a2	8d 42 3c	 lea	 eax, DWORD PTR [edx+60]
  000a5	50		 push	 eax
  000a6	8d 42 28	 lea	 eax, DWORD PTR [edx+40]
  000a9	50		 push	 eax
  000aa	8d 42 14	 lea	 eax, DWORD PTR [edx+20]
  000ad	50		 push	 eax
  000ae	52		 push	 edx
  000af	e8 00 00 00 00	 call	 ?GetVerticies@CSnowParticle@@QAEXAAUSParticleVertex@@000@Z ; CSnowParticle::GetVerticies
  000b4	8b 45 f8	 mov	 eax, DWORD PTR _i$1$[ebp]
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 82   :         ++_Ptr;

  000b7	83 c6 04	 add	 esi, 4
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp

; 193  : 		for (; i < dwParticleCount && itor != m_kVct_pkParticleSnow.end(); ++i, ++itor)

  000ba	83 45 fc 50	 add	 DWORD PTR tv527[ebp], 80 ; 00000050H
  000be	40		 inc	 eax
  000bf	8b 7d ec	 mov	 edi, DWORD PTR _this$1$[ebp]
  000c2	89 45 f8	 mov	 DWORD PTR _i$1$[ebp], eax
  000c5	3b c3		 cmp	 eax, ebx
  000c7	72 b8		 jb	 SHORT $LL4@Render
$LN93@Render:

; 198  : 								pv3Verticies[i*4+1],
; 199  : 								pv3Verticies[i*4+2],
; 200  : 								pv3Verticies[i*4+3]);
; 201  : 		}
; 202  : 		m_pVB->Unlock();

  000c9	8b 47 24	 mov	 eax, DWORD PTR [edi+36]
  000cc	50		 push	 eax
  000cd	8b 08		 mov	 ecx, DWORD PTR [eax]
  000cf	ff 51 30	 call	 DWORD PTR [ecx+48]
$LN8@Render:

; 203  : 	}
; 204  : 
; 205  : 	STATEMANAGER.SaveRenderState(D3DRS_ZWRITEENABLE, FALSE);

  000d2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000d8	6a 00		 push	 0
  000da	6a 0e		 push	 14			; 0000000eH
  000dc	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 206  : 	STATEMANAGER.SaveRenderState(D3DRS_ALPHABLENDENABLE, TRUE);

  000e1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000e7	6a 01		 push	 1
  000e9	6a 1b		 push	 27			; 0000001bH
  000eb	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 207  : 	STATEMANAGER.SaveRenderState(D3DRS_CULLMODE, D3DCULL_NONE);

  000f0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000f6	6a 01		 push	 1
  000f8	6a 16		 push	 22			; 00000016H
  000fa	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 208  : 	STATEMANAGER.SetRenderState(D3DRS_SRCBLEND,  D3DBLEND_SRCALPHA);

  000ff	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00105	6a 05		 push	 5
  00107	6a 13		 push	 19			; 00000013H
  00109	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 209  : 	STATEMANAGER.SetRenderState(D3DRS_DESTBLEND, D3DBLEND_INVSRCALPHA);

  0010e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00114	6a 06		 push	 6
  00116	6a 14		 push	 20			; 00000014H
  00118	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 210  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG1, D3DTA_TEXTURE);

  0011d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00123	6a 02		 push	 2
  00125	6a 02		 push	 2
  00127	6a 00		 push	 0
  00129	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 211  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP, D3DTOP_SELECTARG1);

  0012e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00134	6a 02		 push	 2
  00136	6a 01		 push	 1
  00138	6a 00		 push	 0
  0013a	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 212  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAARG1, D3DTA_TEXTURE);

  0013f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00145	6a 02		 push	 2
  00147	6a 05		 push	 5
  00149	6a 00		 push	 0
  0014b	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 213  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAOP, D3DTOP_SELECTARG1);

  00150	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00156	6a 02		 push	 2
  00158	6a 04		 push	 4
  0015a	6a 00		 push	 0
  0015c	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 214  : 	STATEMANAGER.SetTexture(1, NULL);

  00161	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00167	6a 00		 push	 0
  00169	6a 01		 push	 1
  0016b	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 215  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_COLOROP, D3DTOP_DISABLE);

  00170	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00176	6a 01		 push	 1
  00178	6a 01		 push	 1
  0017a	6a 01		 push	 1
  0017c	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 216  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAOP, D3DTOP_DISABLE);

  00181	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00187	6a 01		 push	 1
  00189	6a 04		 push	 4
  0018b	6a 01		 push	 1
  0018d	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 217  : 
; 218  : 	m_pImageInstance->GetGraphicImagePointer()->GetTextureReference().SetTextureStage(0);

  00192	8b 4f 3c	 mov	 ecx, DWORD PTR [edi+60]
  00195	6a 00		 push	 0
  00197	e8 00 00 00 00	 call	 ?GetGraphicImagePointer@CGraphicImageInstance@@QAEPAVCGraphicImage@@XZ ; CGraphicImageInstance::GetGraphicImagePointer
  0019c	8b c8		 mov	 ecx, eax
  0019e	e8 00 00 00 00	 call	 ?GetTextureReference@CGraphicImage@@QBEABVCGraphicTexture@@XZ ; CGraphicImage::GetTextureReference
  001a3	8b c8		 mov	 ecx, eax
  001a5	e8 00 00 00 00	 call	 ?SetTextureStage@CGraphicTexture@@QBEXH@Z ; CGraphicTexture::SetTextureStage

; 219  : 	STATEMANAGER.SetIndices(m_pIB, 0);

  001aa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001b0	6a 00		 push	 0
  001b2	ff 77 28	 push	 DWORD PTR [edi+40]
  001b5	e8 00 00 00 00	 call	 ?SetIndices@CStateManager@@QAEXPAUIDirect3DIndexBuffer8@@I@Z ; CStateManager::SetIndices

; 220  : 	STATEMANAGER.SetStreamSource(0, m_pVB, sizeof(SParticleVertex));

  001ba	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001c0	6a 14		 push	 20			; 00000014H
  001c2	ff 77 24	 push	 DWORD PTR [edi+36]
  001c5	6a 00		 push	 0
  001c7	e8 00 00 00 00	 call	 ?SetStreamSource@CStateManager@@QAEXIPAUIDirect3DVertexBuffer8@@I@Z ; CStateManager::SetStreamSource

; 221  : 	STATEMANAGER.SetVertexShader(D3DFVF_XYZ | D3DFVF_TEX1);

  001cc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001d2	68 02 01 00 00	 push	 258			; 00000102H
  001d7	e8 00 00 00 00	 call	 ?SetVertexShader@CStateManager@@QAEXK@Z ; CStateManager::SetVertexShader

; 222  : 	STATEMANAGER.DrawIndexedPrimitive(D3DPT_TRIANGLELIST, 0, dwParticleCount*4, 0, dwParticleCount*2);

  001dc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001e2	8d 04 1b	 lea	 eax, DWORD PTR [ebx+ebx]
  001e5	50		 push	 eax
  001e6	6a 00		 push	 0
  001e8	8d 04 9d 00 00
	00 00		 lea	 eax, DWORD PTR [ebx*4]
  001ef	50		 push	 eax
  001f0	6a 00		 push	 0
  001f2	6a 04		 push	 4
  001f4	e8 00 00 00 00	 call	 ?DrawIndexedPrimitive@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IIII@Z ; CStateManager::DrawIndexedPrimitive

; 223  : 	STATEMANAGER.RestoreRenderState(D3DRS_ALPHABLENDENABLE);

  001f9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001ff	6a 1b		 push	 27			; 0000001bH
  00201	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 224  : 	STATEMANAGER.RestoreRenderState(D3DRS_ZWRITEENABLE);

  00206	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0020c	6a 0e		 push	 14			; 0000000eH
  0020e	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 225  : 	STATEMANAGER.RestoreRenderState(D3DRS_CULLMODE);

  00213	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00219	6a 16		 push	 22			; 00000016H
  0021b	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 226  : 
; 227  : 	__ApplyBlur();

  00220	8b cf		 mov	 ecx, edi
  00222	e8 00 00 00 00	 call	 ?__ApplyBlur@CSnowEnvironment@@IAEXXZ ; CSnowEnvironment::__ApplyBlur
$LN99@Render:
  00227	5b		 pop	 ebx
$LN1@Render:
  00228	5f		 pop	 edi

; 228  : }

  00229	5e		 pop	 esi
  0022a	8b e5		 mov	 esp, ebp
  0022c	5d		 pop	 ebp
  0022d	c3		 ret	 0
?Render@CSnowEnvironment@@QAEXXZ ENDP			; CSnowEnvironment::Render
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xutility
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
;	COMDAT ?Deform@CSnowEnvironment@@QAEXXZ
_TEXT	SEGMENT
__Newsize$1$ = -52					; size = 4
_pSnowParticle$1$ = -48					; size = 4
__Oldsize$1$ = -44					; size = 4
__Whereptr$1$ = -40					; size = 4
_p$1$ = -36						; size = 4
_fElapsedTime$1$ = -36					; size = 4
tv1140 = -32						; size = 4
$T2 = -32						; size = 4
_v3ChangedPos$ = -28					; size = 12
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?Deform@CSnowEnvironment@@QAEXXZ PROC			; CSnowEnvironment::Deform, COMDAT
; _this$ = ecx

; 36   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Deform@CSnowEnvironment@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 28	 sub	 esp, 40			; 00000028H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f9		 mov	 edi, ecx

; 37   : 	if (!m_bSnowEnable)

  0002d	83 7f 54 00	 cmp	 DWORD PTR [edi+84], 0
  00031	75 0c		 jne	 SHORT $LN186@Deform
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1895 :         return _My_data._Myfirst == _My_data._Mylast;

  00033	8b 47 40	 mov	 eax, DWORD PTR [edi+64]
  00036	3b 47 44	 cmp	 eax, DWORD PTR [edi+68]
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp

; 39   : 		if (m_kVct_pkParticleSnow.empty())

  00039	0f 84 28 02 00
	00		 je	 $LN7@Deform
$LN186@Deform:

; 40   : 			return;
; 41   : 	}
; 42   : 
; 43   : 	const D3DXVECTOR3 & c_rv3Pos=m_v3Center;
; 44   : 
; 45   : 	static long s_lLastTime = CTimer::Instance().GetCurrentMillisecond();

  0003f	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00045	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0004b	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  0004e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??Deform@CSnowEnvironment@@QAEXXZ@4HA
  00053	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  00059	0f 8f 24 02 00
	00		 jg	 $LN194@Deform
$LN2@Deform:

; 46   : 	long lcurTime = CTimer::Instance().GetCurrentMillisecond();

  0005f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
  00065	e8 00 00 00 00	 call	 ?GetCurrentMillisecond@CTimer@@QAEKXZ ; CTimer::GetCurrentMillisecond

; 47   : 	float fElapsedTime = float(lcurTime - s_lLastTime) / 1000.0f;

  0006a	8b c8		 mov	 ecx, eax
  0006c	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?s_lLastTime@?1??Deform@CSnowEnvironment@@QAEXXZ@4JA

; 48   : 	s_lLastTime = lcurTime;

  00072	a3 00 00 00 00	 mov	 DWORD PTR ?s_lLastTime@?1??Deform@CSnowEnvironment@@QAEXXZ@4JA, eax
  00077	66 0f 6e c1	 movd	 xmm0, ecx
  0007b	0f 5b c0	 cvtdq2ps xmm0, xmm0

; 49   : 
; 50   : 	CCamera * pCamera = CCameraManager::Instance().GetCurrentCamera();

  0007e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
  00084	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@447a0000
  0008c	f3 0f 11 45 dc	 movss	 DWORD PTR _fElapsedTime$1$[ebp], xmm0
  00091	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 51   : 	if (!pCamera)

  00096	85 c0		 test	 eax, eax
  00098	0f 84 c9 01 00
	00		 je	 $LN7@Deform
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  0009e	f3 0f 10 40 54	 movss	 xmm0, DWORD PTR [eax+84]
  000a3	f3 0f 10 50 58	 movss	 xmm2, DWORD PTR [eax+88]
  000a8	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@455ac000
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 46   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000b0	8b 77 40	 mov	 esi, DWORD PTR [edi+64]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  000b3	f3 0f 59 15 00
	00 00 00	 mulss	 xmm2, DWORD PTR __real@455ac000

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  000bb	f3 0f 58 47 2c	 addss	 xmm0, DWORD PTR [edi+44]
  000c0	f3 0f 58 57 30	 addss	 xmm2, DWORD PTR [edi+48]

; 180  :     x = fx;

  000c5	f3 0f 11 45 e4	 movss	 DWORD PTR _v3ChangedPos$[ebp], xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp

; 57   : 	v3ChangedPos.z = c_rv3Pos.z;

  000ca	f3 0f 10 47 34	 movss	 xmm0, DWORD PTR [edi+52]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 181  :     y = fy;

  000cf	f3 0f 11 55 e8	 movss	 DWORD PTR _v3ChangedPos$[ebp+4], xmm2
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp

; 57   : 	v3ChangedPos.z = c_rv3Pos.z;

  000d4	f3 0f 11 45 ec	 movss	 DWORD PTR _v3ChangedPos$[ebp+8], xmm0
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 46   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000d9	3b 77 44	 cmp	 esi, DWORD PTR [edi+68]
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp

; 60   : 	for (; itor != m_kVct_pkParticleSnow.end();)

  000dc	74 4e		 je	 SHORT $LN4@Deform
  000de	66 90		 npad	 2
$LL5@Deform:

; 61   : 	{
; 62   : 		CSnowParticle * pSnow = *itor;

  000e0	8b 1e		 mov	 ebx, DWORD PTR [esi]

; 63   : 		pSnow->Update(fElapsedTime, v3ChangedPos);

  000e2	8d 45 e4	 lea	 eax, DWORD PTR _v3ChangedPos$[ebp]
  000e5	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _fElapsedTime$1$[ebp]
  000ea	50		 push	 eax
  000eb	51		 push	 ecx
  000ec	8b cb		 mov	 ecx, ebx
  000ee	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f3	e8 00 00 00 00	 call	 ?Update@CSnowParticle@@QAEXMABUD3DXVECTOR3@@@Z ; CSnowParticle::Update

; 64   : 
; 65   : 		if (!pSnow->IsActivate())

  000f8	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  000fb	8b cb		 mov	 ecx, ebx
  000fd	89 45 e0	 mov	 DWORD PTR tv1140[ebp], eax
  00100	e8 00 00 00 00	 call	 ?IsActivate@CSnowParticle@@QAE_NXZ ; CSnowParticle::IsActivate
  00105	84 c0		 test	 al, al
  00107	75 1b		 jne	 SHORT $LN12@Deform

; 66   : 		{
; 67   : 			CSnowParticle::Delete(pSnow);

  00109	53		 push	 ebx
  0010a	e8 00 00 00 00	 call	 ?Delete@CSnowParticle@@SAXPAV1@@Z ; CSnowParticle::Delete
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xutility

; 5163 :                 return _STD _Copy_memmove(_First, _Last, _Dest);

  0010f	56		 push	 esi
  00110	ff 77 44	 push	 DWORD PTR [edi+68]
  00113	ff 75 e0	 push	 DWORD PTR tv1140[ebp]
  00116	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCSnowParticle@@PAPAV1@@std@@YAPAPAVCSnowParticle@@PAPAV1@00@Z ; std::_Copy_memmove<CSnowParticle * *,CSnowParticle * *>
  0011b	83 c4 10	 add	 esp, 16			; 00000010H
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1763 :         --_Mylast;

  0011e	83 47 44 fc	 add	 DWORD PTR [edi+68], -4	; fffffffcH
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp

; 70   : 		}

  00122	eb 03		 jmp	 SHORT $LN3@Deform
$LN12@Deform:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 82   :         ++_Ptr;

  00124	8b 75 e0	 mov	 esi, DWORD PTR tv1140[ebp]
$LN3@Deform:

; 166  :         return _Ptr == _Right._Ptr;

  00127	3b 77 44	 cmp	 esi, DWORD PTR [edi+68]
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp

; 60   : 	for (; itor != m_kVct_pkParticleSnow.end();)

  0012a	75 b4		 jne	 SHORT $LL5@Deform
$LN4@Deform:

; 71   : 		else
; 72   : 		{
; 73   : 			++itor;
; 74   : 		}
; 75   : 	}
; 76   : 
; 77   : 	if (m_bSnowEnable)

  0012c	83 7f 54 00	 cmp	 DWORD PTR [edi+84], 0
  00130	0f 84 31 01 00
	00		 je	 $LN7@Deform

; 79   : 		for (int p = 0; p < min(10, m_dwParticleMaxNum - m_kVct_pkParticleSnow.size()); ++p)

  00136	33 d2		 xor	 edx, edx
$LN192@Deform:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1900 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00138	8b 47 44	 mov	 eax, DWORD PTR [edi+68]
  0013b	bb 0a 00 00 00	 mov	 ebx, 10			; 0000000aH
  00140	2b 47 40	 sub	 eax, DWORD PTR [edi+64]
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp

; 79   : 		for (int p = 0; p < min(10, m_dwParticleMaxNum - m_kVct_pkParticleSnow.size()); ++p)

  00143	8b 4f 4c	 mov	 ecx, DWORD PTR [edi+76]
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1900 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00146	c1 f8 02	 sar	 eax, 2
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp

; 79   : 		for (int p = 0; p < min(10, m_dwParticleMaxNum - m_kVct_pkParticleSnow.size()); ++p)

  00149	2b c8		 sub	 ecx, eax
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1900 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0014b	89 55 dc	 mov	 DWORD PTR _p$1$[ebp], edx
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp

; 79   : 		for (int p = 0; p < min(10, m_dwParticleMaxNum - m_kVct_pkParticleSnow.size()); ++p)

  0014e	3b cb		 cmp	 ecx, ebx
  00150	0f 47 cb	 cmova	 ecx, ebx
  00153	3b d1		 cmp	 edx, ecx
  00155	0f 83 0c 01 00
	00		 jae	 $LN7@Deform

; 80   : 		{
; 81   : 			CSnowParticle * pSnowParticle = CSnowParticle::New();

  0015b	e8 00 00 00 00	 call	 ?New@CSnowParticle@@SAPAV1@XZ ; CSnowParticle::New
  00160	8b d8		 mov	 ebx, eax

; 82   : 			pSnowParticle->Init(v3ChangedPos);

  00162	8d 45 e4	 lea	 eax, DWORD PTR _v3ChangedPos$[ebp]
  00165	50		 push	 eax
  00166	8b cb		 mov	 ecx, ebx
  00168	89 5d d0	 mov	 DWORD PTR _pSnowParticle$1$[ebp], ebx
  0016b	e8 00 00 00 00	 call	 ?Init@CSnowParticle@@QAEXABUD3DXVECTOR3@@@Z ; CSnowParticle::Init
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 829  :         if (_Mylast != _My_data._Myend) {

  00170	8b 47 44	 mov	 eax, DWORD PTR [edi+68]
  00173	8b 4f 48	 mov	 ecx, DWORD PTR [edi+72]
  00176	89 45 d8	 mov	 DWORD PTR __Whereptr$1$[ebp], eax
  00179	3b c1		 cmp	 eax, ecx
  0017b	74 0c		 je	 SHORT $LN28@Deform
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp

; 79   : 		for (int p = 0; p < min(10, m_dwParticleMaxNum - m_kVct_pkParticleSnow.size()); ++p)

  0017d	8b 55 dc	 mov	 edx, DWORD PTR _p$1$[ebp]
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 845  :             _STD _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  00180	89 18		 mov	 DWORD PTR [eax], ebx

; 846  :         } else {
; 847  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 848  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 849  :             _ASAN_VECTOR_RELEASE_GUARD;
; 850  :         }
; 851  : 
; 852  :         _Orphan_range(_Mylast, _Mylast);
; 853  :         _Ty& _Result = *_Mylast;
; 854  :         ++_Mylast;

  00182	83 47 44 04	 add	 DWORD PTR [edi+68], 4
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp

; 79   : 		for (int p = 0; p < min(10, m_dwParticleMaxNum - m_kVct_pkParticleSnow.size()); ++p)

  00186	42		 inc	 edx
  00187	eb af		 jmp	 SHORT $LN192@Deform
$LN28@Deform:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 869  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00189	8b 57 40	 mov	 edx, DWORD PTR [edi+64]
  0018c	2b c2		 sub	 eax, edx
  0018e	c1 f8 02	 sar	 eax, 2
  00191	89 45 d4	 mov	 DWORD PTR __Oldsize$1$[ebp], eax

; 870  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);
; 871  : 
; 872  :         if (_Oldsize == max_size()) {

  00194	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00199	0f 84 33 01 00
	00		 je	 $LN178@Deform

; 1909 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0019f	2b ca		 sub	 ecx, edx

; 876  :         const size_type _Newsize = _Oldsize + 1;

  001a1	8d 58 01	 lea	 ebx, DWORD PTR [eax+1]

; 1909 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  001a4	c1 f9 02	 sar	 ecx, 2

; 1996 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  001a7	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  001ac	8b d1		 mov	 edx, ecx

; 876  :         const size_type _Newsize = _Oldsize + 1;

  001ae	89 5d cc	 mov	 DWORD PTR __Newsize$1$[ebp], ebx

; 1996 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  001b1	d1 ea		 shr	 edx, 1
  001b3	2b c2		 sub	 eax, edx
  001b5	3b c8		 cmp	 ecx, eax
  001b7	76 14		 jbe	 SHORT $LN39@Deform

; 1997 :             return _Max; // geometric growth would overflow

  001b9	b8 fc ff ff ff	 mov	 eax, -4			; fffffffcH
  001be	c7 45 e0 ff ff
	ff 3f		 mov	 DWORD PTR $T2[ebp], 1073741823 ; 3fffffffH
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 253  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  001c5	50		 push	 eax
  001c6	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  001cb	eb 40		 jmp	 SHORT $LN191@Deform
$LN39@Deform:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 2000 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  001cd	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 117  :         if (_Count > _Max_possible) {

  001d0	8b cb		 mov	 ecx, ebx
  001d2	3b c3		 cmp	 eax, ebx
  001d4	0f 43 c8	 cmovae	 ecx, eax
  001d7	89 4d e0	 mov	 DWORD PTR $T2[ebp], ecx
  001da	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  001e0	0f 87 e7 00 00
	00		 ja	 $LN179@Deform

; 119  :         }
; 120  :     }
; 121  : 
; 122  :     return _Count * _Ty_size;

  001e6	8d 04 8d 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*4]

; 227  :     if (_Bytes == 0) {

  001ed	85 c0		 test	 eax, eax
  001ef	75 07		 jne	 SHORT $LN54@Deform

; 228  :         return nullptr;

  001f1	33 db		 xor	 ebx, ebx
  001f3	89 4d e0	 mov	 DWORD PTR $T2[ebp], ecx
  001f6	eb 1a		 jmp	 SHORT $LN53@Deform
$LN54@Deform:

; 229  :     }
; 230  : 
; 231  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 232  :     if (_STD is_constant_evaluated()) {
; 233  :         return _Traits::_Allocate(_Bytes);
; 234  :     }
; 235  : #endif // _HAS_CXX20
; 236  : 
; 237  : #ifdef __cpp_aligned_new
; 238  :     if constexpr (_Align > __STDCPP_DEFAULT_NEW_ALIGNMENT__) {
; 239  :         size_t _Passed_align = _Align;
; 240  : #if defined(_M_IX86) || defined(_M_X64)
; 241  :         if (_Bytes >= _Big_allocation_threshold) {
; 242  :             // boost the alignment of big allocations to help autovectorization
; 243  :             _Passed_align = (_STD max)(_Align, _Big_allocation_alignment);
; 244  :         }
; 245  : #endif // defined(_M_IX86) || defined(_M_X64)
; 246  :         return _Traits::_Allocate_aligned(_Bytes, _Passed_align);
; 247  :     } else
; 248  : #endif // defined(__cpp_aligned_new)
; 249  :     {
; 250  : #if defined(_M_IX86) || defined(_M_X64)
; 251  :         if (_Bytes >= _Big_allocation_threshold) {

  001f8	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  001fd	72 08		 jb	 SHORT $LN55@Deform

; 253  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  001ff	50		 push	 eax
  00200	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00205	eb 06		 jmp	 SHORT $LN191@Deform
$LN55@Deform:

; 136  :         return ::operator new(_Bytes);

  00207	50		 push	 eax
  00208	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
$LN191@Deform:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 885  :         _Alty_traits::construct(_Al, _STD _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0020d	8b d8		 mov	 ebx, eax
  0020f	83 c4 04	 add	 esp, 4
$LN53@Deform:
  00212	8b 45 d4	 mov	 eax, DWORD PTR __Oldsize$1$[ebp]
  00215	8b 4d d0	 mov	 ecx, DWORD PTR _pSnowParticle$1$[ebp]
  00218	89 0c 83	 mov	 DWORD PTR [ebx+eax*4], ecx

; 886  :         _Constructed_first = _Newvec + _Whereoff;
; 887  : 
; 888  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  0021b	8b 4f 44	 mov	 ecx, DWORD PTR [edi+68]
  0021e	8b 45 d8	 mov	 eax, DWORD PTR __Whereptr$1$[ebp]
  00221	8b 57 40	 mov	 edx, DWORD PTR [edi+64]
  00224	3b c1		 cmp	 eax, ecx
  00226	75 04		 jne	 SHORT $LN34@Deform
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 1955 :             _STD _Copy_memmove(_UFirst, _ULast, _STD _Unfancy(_Dest));

  00228	8b c3		 mov	 eax, ebx
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 894  :         } else { // provide basic guarantee

  0022a	eb 18		 jmp	 SHORT $LN83@Deform
$LN34@Deform:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 1955 :             _STD _Copy_memmove(_UFirst, _ULast, _STD _Unfancy(_Dest));

  0022c	53		 push	 ebx
  0022d	50		 push	 eax
  0022e	52		 push	 edx
  0022f	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCSnowParticle@@PAPAV1@@std@@YAPAPAVCSnowParticle@@PAPAV1@00@Z ; std::_Copy_memmove<CSnowParticle * *,CSnowParticle * *>
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 897  :             _STD _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  00234	8b 45 d4	 mov	 eax, DWORD PTR __Oldsize$1$[ebp]
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 1955 :             _STD _Copy_memmove(_UFirst, _ULast, _STD _Unfancy(_Dest));

  00237	83 c4 0c	 add	 esp, 12			; 0000000cH
  0023a	8b 55 d8	 mov	 edx, DWORD PTR __Whereptr$1$[ebp]
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 897  :             _STD _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  0023d	40		 inc	 eax
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 1955 :             _STD _Copy_memmove(_UFirst, _ULast, _STD _Unfancy(_Dest));

  0023e	8b 4f 44	 mov	 ecx, DWORD PTR [edi+68]
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 897  :             _STD _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  00241	8d 04 83	 lea	 eax, DWORD PTR [ebx+eax*4]
$LN83@Deform:

; 898  :         }
; 899  : 
; 900  :         _Guard._New_begin = nullptr;

  00244	50		 push	 eax
  00245	51		 push	 ecx
  00246	52		 push	 edx
  00247	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCSnowParticle@@PAPAV1@@std@@YAPAPAVCSnowParticle@@PAPAV1@00@Z ; std::_Copy_memmove<CSnowParticle * *,CSnowParticle * *>
  0024c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 901  :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  0024f	8d 4f 40	 lea	 ecx, DWORD PTR [edi+64]
  00252	ff 75 e0	 push	 DWORD PTR $T2[ebp]
  00255	ff 75 cc	 push	 DWORD PTR __Newsize$1$[ebp]
  00258	53		 push	 ebx
  00259	e8 00 00 00 00	 call	 ?_Change_array@?$vector@PAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@AAEXQAPAVCSnowParticle@@II@Z ; std::vector<CSnowParticle *,std::allocator<CSnowParticle *> >::_Change_array
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp

; 79   : 		for (int p = 0; p < min(10, m_dwParticleMaxNum - m_kVct_pkParticleSnow.size()); ++p)

  0025e	8b 55 dc	 mov	 edx, DWORD PTR _p$1$[ebp]
  00261	42		 inc	 edx
  00262	e9 d1 fe ff ff	 jmp	 $LN192@Deform
$LN7@Deform:

; 86   : }

  00267	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0026a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00271	59		 pop	 ecx
  00272	5f		 pop	 edi
  00273	5e		 pop	 esi
  00274	5b		 pop	 ebx
  00275	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00278	33 cd		 xor	 ecx, ebp
  0027a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0027f	8b e5		 mov	 esp, ebp
  00281	5d		 pop	 ebp
  00282	c3		 ret	 0
$LN194@Deform:

; 40   : 			return;
; 41   : 	}
; 42   : 
; 43   : 	const D3DXVECTOR3 & c_rv3Pos=m_v3Center;
; 44   : 
; 45   : 	static long s_lLastTime = CTimer::Instance().GetCurrentMillisecond();

  00283	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Deform@CSnowEnvironment@@QAEXXZ@4HA
  00288	e8 00 00 00 00	 call	 __Init_thread_header
  0028d	83 c4 04	 add	 esp, 4
  00290	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??Deform@CSnowEnvironment@@QAEXXZ@4HA, -1
  00297	0f 85 c2 fd ff
	ff		 jne	 $LN2@Deform
  0029d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
  002a3	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  002aa	e8 00 00 00 00	 call	 ?GetCurrentMillisecond@CTimer@@QAEKXZ ; CTimer::GetCurrentMillisecond
  002af	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Deform@CSnowEnvironment@@QAEXXZ@4HA
  002b4	a3 00 00 00 00	 mov	 DWORD PTR ?s_lLastTime@?1??Deform@CSnowEnvironment@@QAEXXZ@4JA, eax
  002b9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  002c0	e8 00 00 00 00	 call	 __Init_thread_footer
  002c5	83 c4 04	 add	 esp, 4
  002c8	e9 92 fd ff ff	 jmp	 $LN2@Deform
$LN179@Deform:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 118  :             _Throw_bad_array_new_length(); // multiply overflow

  002cd	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN178@Deform:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 873  :             _Xlength();

  002d2	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@CAXXZ ; std::vector<CSnowParticle *,std::allocator<CSnowParticle *> >::_Xlength
$LN190@Deform:
  002d7	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Deform@CSnowEnvironment@@QAEXXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Deform@CSnowEnvironment@@QAEXXZ@4HA
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$?Deform@CSnowEnvironment@@QAEXXZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a c8	 mov	 ecx, DWORD PTR [edx-56]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00027	33 c8		 xor	 ecx, eax
  00029	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002e	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Deform@CSnowEnvironment@@QAEXXZ
  00033	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Deform@CSnowEnvironment@@QAEXXZ ENDP			; CSnowEnvironment::Deform
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
;	COMDAT ?Update@CSnowEnvironment@@QAEXABUD3DXVECTOR3@@@Z
_TEXT	SEGMENT
_c_rv3Pos$ = 8						; size = 4
?Update@CSnowEnvironment@@QAEXABUD3DXVECTOR3@@@Z PROC	; CSnowEnvironment::Update, COMDAT
; _this$ = ecx

; 25   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 26   : 	if (!m_bSnowEnable)

  00003	83 79 54 00	 cmp	 DWORD PTR [ecx+84], 0
  00007	75 08		 jne	 SHORT $LN3@Update
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1895 :         return _My_data._Myfirst == _My_data._Mylast;

  00009	8b 41 40	 mov	 eax, DWORD PTR [ecx+64]
  0000c	3b 41 44	 cmp	 eax, DWORD PTR [ecx+68]
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp

; 28   : 		if (m_kVct_pkParticleSnow.empty())

  0000f	74 12		 je	 SHORT $LN1@Update
$LN3@Update:

; 29   : 			return;
; 30   : 	}
; 31   : 
; 32   : 	m_v3Center=c_rv3Pos;

  00011	8b 45 08	 mov	 eax, DWORD PTR _c_rv3Pos$[ebp]
  00014	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  00018	66 0f d6 41 2c	 movq	 QWORD PTR [ecx+44], xmm0
  0001d	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00020	89 41 34	 mov	 DWORD PTR [ecx+52], eax
$LN1@Update:

; 33   : }

  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
?Update@CSnowEnvironment@@QAEXABUD3DXVECTOR3@@@Z ENDP	; CSnowEnvironment::Update
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
;	COMDAT ?Disable@CSnowEnvironment@@QAEXXZ
_TEXT	SEGMENT
?Disable@CSnowEnvironment@@QAEXXZ PROC			; CSnowEnvironment::Disable, COMDAT
; _this$ = ecx

; 21   : 	m_bSnowEnable = FALSE;

  00000	c7 41 54 00 00
	00 00		 mov	 DWORD PTR [ecx+84], 0

; 22   : }

  00007	c3		 ret	 0
?Disable@CSnowEnvironment@@QAEXXZ ENDP			; CSnowEnvironment::Disable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
;	COMDAT ?Enable@CSnowEnvironment@@QAEXXZ
_TEXT	SEGMENT
?Enable@CSnowEnvironment@@QAEXXZ PROC			; CSnowEnvironment::Enable, COMDAT
; _this$ = ecx

; 10   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 11   : 	if (!m_bSnowEnable)

  00003	83 7e 54 00	 cmp	 DWORD PTR [esi+84], 0
  00007	75 05		 jne	 SHORT $LN4@Enable

; 12   : 	{
; 13   : 		Create();

  00009	e8 00 00 00 00	 call	 ?Create@CSnowEnvironment@@QAE_NXZ ; CSnowEnvironment::Create
$LN4@Enable:

; 14   : 	}
; 15   : 
; 16   : 	m_bSnowEnable = TRUE;
; 17   : }

  0000e	c7 46 54 01 00
	00 00		 mov	 DWORD PTR [esi+84], 1
  00015	5e		 pop	 esi
  00016	c3		 ret	 0
?Enable@CSnowEnvironment@@QAEXXZ ENDP			; CSnowEnvironment::Enable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterBase\Stl.h
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterBase\Stl.h
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
;	COMDAT ?Destroy@CSnowEnvironment@@QAEXXZ
_TEXT	SEGMENT
?Destroy@CSnowEnvironment@@QAEXXZ PROC			; CSnowEnvironment::Destroy, COMDAT
; _this$ = ecx

; 303  : {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 304  : 	SAFE_RELEASE(m_lpSnowTexture);

  00003	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00006	85 c9		 test	 ecx, ecx
  00008	74 0d		 je	 SHORT $LN2@Destroy
  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	51		 push	 ecx
  0000d	ff 50 08	 call	 DWORD PTR [eax+8]
  00010	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN2@Destroy:

; 305  : 	SAFE_RELEASE(m_lpSnowRenderTargetSurface);

  00017	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0001a	85 c9		 test	 ecx, ecx
  0001c	74 0d		 je	 SHORT $LN3@Destroy
  0001e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00020	51		 push	 ecx
  00021	ff 50 08	 call	 DWORD PTR [eax+8]
  00024	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
$LN3@Destroy:

; 306  : 	SAFE_RELEASE(m_lpSnowDepthSurface);

  0002b	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  0002e	85 c9		 test	 ecx, ecx
  00030	74 0d		 je	 SHORT $LN4@Destroy
  00032	8b 01		 mov	 eax, DWORD PTR [ecx]
  00034	51		 push	 ecx
  00035	ff 50 08	 call	 DWORD PTR [eax+8]
  00038	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0
$LN4@Destroy:

; 307  : 	SAFE_RELEASE(m_lpAccumTexture);

  0003f	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00042	85 c9		 test	 ecx, ecx
  00044	74 0d		 je	 SHORT $LN5@Destroy
  00046	8b 01		 mov	 eax, DWORD PTR [ecx]
  00048	51		 push	 ecx
  00049	ff 50 08	 call	 DWORD PTR [eax+8]
  0004c	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN5@Destroy:

; 308  : 	SAFE_RELEASE(m_lpAccumRenderTargetSurface);

  00053	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  00056	85 c9		 test	 ecx, ecx
  00058	74 0d		 je	 SHORT $LN6@Destroy
  0005a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0005c	51		 push	 ecx
  0005d	ff 50 08	 call	 DWORD PTR [eax+8]
  00060	c7 47 1c 00 00
	00 00		 mov	 DWORD PTR [edi+28], 0
$LN6@Destroy:

; 309  : 	SAFE_RELEASE(m_lpAccumDepthSurface);

  00067	8b 4f 20	 mov	 ecx, DWORD PTR [edi+32]
  0006a	85 c9		 test	 ecx, ecx
  0006c	74 0d		 je	 SHORT $LN7@Destroy
  0006e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00070	51		 push	 ecx
  00071	ff 50 08	 call	 DWORD PTR [eax+8]
  00074	c7 47 20 00 00
	00 00		 mov	 DWORD PTR [edi+32], 0
$LN7@Destroy:

; 310  : 	SAFE_RELEASE(m_pVB);

  0007b	8b 4f 24	 mov	 ecx, DWORD PTR [edi+36]
  0007e	85 c9		 test	 ecx, ecx
  00080	74 0d		 je	 SHORT $LN8@Destroy
  00082	8b 01		 mov	 eax, DWORD PTR [ecx]
  00084	51		 push	 ecx
  00085	ff 50 08	 call	 DWORD PTR [eax+8]
  00088	c7 47 24 00 00
	00 00		 mov	 DWORD PTR [edi+36], 0
$LN8@Destroy:

; 311  : 	SAFE_RELEASE(m_pIB);

  0008f	8b 4f 28	 mov	 ecx, DWORD PTR [edi+40]
  00092	85 c9		 test	 ecx, ecx
  00094	74 0d		 je	 SHORT $LN9@Destroy
  00096	8b 01		 mov	 eax, DWORD PTR [ecx]
  00098	51		 push	 ecx
  00099	ff 50 08	 call	 DWORD PTR [eax+8]
  0009c	c7 47 28 00 00
	00 00		 mov	 DWORD PTR [edi+40], 0
$LN9@Destroy:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 46   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000a3	8b 47 44	 mov	 eax, DWORD PTR [edi+68]
  000a6	56		 push	 esi
  000a7	8b 77 40	 mov	 esi, DWORD PTR [edi+64]
  000aa	3b f0		 cmp	 esi, eax
; File C:\Marty 5.5\Src-Client\Client\eterBase\Stl.h

; 113  : 	for (auto i = container.begin(); i != container.end(); ++i)

  000ac	74 2b		 je	 SHORT $LN14@Destroy
  000ae	53		 push	 ebx
  000af	90		 npad	 1
$LL15@Destroy:

; 114  : 	{
; 115  : 		delete* i;

  000b0	8b 1e		 mov	 ebx, DWORD PTR [esi]
  000b2	85 db		 test	 ebx, ebx
  000b4	74 12		 je	 SHORT $LN50@Destroy
  000b6	8b cb		 mov	 ecx, ebx
  000b8	e8 00 00 00 00	 call	 ??1CSnowParticle@@QAE@XZ ; CSnowParticle::~CSnowParticle
  000bd	6a 48		 push	 72			; 00000048H
  000bf	53		 push	 ebx
  000c0	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000c5	83 c4 08	 add	 esp, 8
$LN50@Destroy:

; 116  : 		*i = NULL;

  000c8	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 82   :         ++_Ptr;

  000ce	83 c6 04	 add	 esi, 4

; 46   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000d1	8b 47 44	 mov	 eax, DWORD PTR [edi+68]

; 166  :         return _Ptr == _Right._Ptr;

  000d4	3b f0		 cmp	 esi, eax
; File C:\Marty 5.5\Src-Client\Client\eterBase\Stl.h

; 113  : 	for (auto i = container.begin(); i != container.end(); ++i)

  000d6	75 d8		 jne	 SHORT $LL15@Destroy
  000d8	5b		 pop	 ebx
$LN14@Destroy:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1797 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  000d9	8b 4f 40	 mov	 ecx, DWORD PTR [edi+64]
  000dc	5e		 pop	 esi
  000dd	3b c8		 cmp	 ecx, eax
  000df	74 03		 je	 SHORT $LN53@Destroy

; 1798 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1799 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1800 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1801 :             return;
; 1802 :         }
; 1803 : 
; 1804 :         _My_data._Orphan_all();
; 1805 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1806 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1807 :         _Mylast = _Myfirst;

  000e1	89 4f 44	 mov	 DWORD PTR [edi+68], ecx
$LN53@Destroy:
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp

; 314  : 	CSnowParticle::DestroyPool();

  000e4	e8 00 00 00 00	 call	 ?DestroyPool@CSnowParticle@@SAXXZ ; CSnowParticle::DestroyPool

; 315  : 
; 316  : 	if (m_pImageInstance)

  000e9	8b 47 3c	 mov	 eax, DWORD PTR [edi+60]
  000ec	85 c0		 test	 eax, eax
  000ee	74 10		 je	 SHORT $LN10@Destroy

; 317  : 	{
; 318  : 		CGraphicImageInstance::Delete(m_pImageInstance);

  000f0	50		 push	 eax
  000f1	e8 00 00 00 00	 call	 ?Delete@CGraphicImageInstance@@SAXPAV1@@Z ; CGraphicImageInstance::Delete
  000f6	83 c4 04	 add	 esp, 4

; 319  : 		m_pImageInstance = NULL;

  000f9	c7 47 3c 00 00
	00 00		 mov	 DWORD PTR [edi+60], 0
$LN10@Destroy:

; 320  : 	}
; 321  : 
; 322  : 	__Initialize();

  00100	8b cf		 mov	 ecx, edi
  00102	5f		 pop	 edi
  00103	e9 00 00 00 00	 jmp	 ?__Initialize@CSnowEnvironment@@IAEXXZ ; CSnowEnvironment::__Initialize
?Destroy@CSnowEnvironment@@QAEXXZ ENDP			; CSnowEnvironment::Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
;	COMDAT ?Create@CSnowEnvironment@@QAE_NXZ
_TEXT	SEGMENT
?Create@CSnowEnvironment@@QAE_NXZ PROC			; CSnowEnvironment::Create, COMDAT
; _this$ = ecx

; 286  : {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 287  : 	Destroy();

  00003	e8 00 00 00 00	 call	 ?Destroy@CSnowEnvironment@@QAEXXZ ; CSnowEnvironment::Destroy

; 288  : 
; 289  : 	if (!__CreateBlurTexture())

  00008	8b cf		 mov	 ecx, edi
  0000a	e8 00 00 00 00	 call	 ?__CreateBlurTexture@CSnowEnvironment@@IAE_NXZ ; CSnowEnvironment::__CreateBlurTexture
  0000f	84 c0		 test	 al, al
  00011	74 33		 je	 SHORT $LN5@Create

; 290  : 		return false;
; 291  : 
; 292  : 	if (!__CreateGeometry())

  00013	8b cf		 mov	 ecx, edi
  00015	e8 00 00 00 00	 call	 ?__CreateGeometry@CSnowEnvironment@@IAE_NXZ ; CSnowEnvironment::__CreateGeometry
  0001a	84 c0		 test	 al, al
  0001c	74 28		 je	 SHORT $LN5@Create

; 294  : 
; 295  : 	CGraphicImage * pImage = (CGraphicImage *)CResourceManager::Instance().GetResourcePointer("d:/ymir work/special/snow.dds");

  0001e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00024	56		 push	 esi
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@KOAGJMMK@d?3?1ymir?5work?1special?1snow?4dds@
  0002a	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  0002f	8b f0		 mov	 esi, eax

; 296  : 	m_pImageInstance = CGraphicImageInstance::New();

  00031	e8 00 00 00 00	 call	 ?New@CGraphicImageInstance@@SAPAV1@XZ ; CGraphicImageInstance::New

; 297  : 	m_pImageInstance->SetImagePointer(pImage);

  00036	56		 push	 esi
  00037	8b c8		 mov	 ecx, eax
  00039	89 47 3c	 mov	 DWORD PTR [edi+60], eax
  0003c	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer

; 298  : 
; 299  : 	return true;

  00041	5e		 pop	 esi
  00042	b0 01		 mov	 al, 1
  00044	5f		 pop	 edi

; 300  : }

  00045	c3		 ret	 0
$LN5@Create:

; 293  : 		return false;

  00046	32 c0		 xor	 al, al
  00048	5f		 pop	 edi

; 300  : }

  00049	c3		 ret	 0
?Create@CSnowEnvironment@@QAE_NXZ ENDP			; CSnowEnvironment::Create
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
;	COMDAT ??1CSnowEnvironment@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CSnowEnvironment@@UAE@XZ PROC			; CSnowEnvironment::~CSnowEnvironment, COMDAT
; _this$ = ecx

; 350  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CSnowEnvironment@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CSnowEnvironment@@6B@

; 351  : 	Destroy();

  0002b	e8 00 00 00 00	 call	 ?Destroy@CSnowEnvironment@@QAEXXZ ; CSnowEnvironment::Destroy
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 2075 :         if (_Myfirst) { // destroy and deallocate old array

  00030	8b 46 40	 mov	 eax, DWORD PTR [esi+64]
  00033	85 c0		 test	 eax, eax
  00035	74 41		 je	 SHORT $LN8@CSnowEnvir

; 2076 :             _STD _Destroy_range(_Myfirst, _Mylast, _Al);
; 2077 :             _ASAN_VECTOR_REMOVE;
; 2078 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00037	8b 4e 48	 mov	 ecx, DWORD PTR [esi+72]
  0003a	2b c8		 sub	 ecx, eax
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 981  :         _STD _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003c	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 284  :         if (_Bytes >= _Big_allocation_threshold) {

  0003f	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00045	72 12		 jb	 SHORT $LN27@CSnowEnvir

; 205  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00047	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0004a	83 c1 23	 add	 ecx, 35			; 00000023H

; 206  : 
; 207  :     // If the following asserts, it likely means that we are performing
; 208  :     // an aligned delete on memory coming from an unaligned allocation.
; 209  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 210  : 
; 211  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 212  :     // in range [_Min_back_shift, _Non_user_size]
; 213  : #ifdef _DEBUG
; 214  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 215  : #else // ^^^ defined(_DEBUG) / !defined(_DEBUG) vvv
; 216  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 217  : #endif // ^^^ !defined(_DEBUG) ^^^
; 218  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0004d	2b c2		 sub	 eax, edx

; 219  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004f	83 c0 fc	 add	 eax, -4			; fffffffcH
  00052	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00055	77 38		 ja	 SHORT $LN24@CSnowEnvir

; 220  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00057	8b c2		 mov	 eax, edx
$LN27@CSnowEnvir:

; 289  :         ::operator delete(_Ptr, _Bytes);

  00059	51		 push	 ecx
  0005a	50		 push	 eax
  0005b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 2080 :             _Myfirst = nullptr;

  00060	c7 46 40 00 00
	00 00		 mov	 DWORD PTR [esi+64], 0
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 289  :         ::operator delete(_Ptr, _Bytes);

  00067	83 c4 08	 add	 esp, 8
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 2081 :             _Mylast  = nullptr;

  0006a	c7 46 44 00 00
	00 00		 mov	 DWORD PTR [esi+68], 0

; 2082 :             _Myend   = nullptr;

  00071	c7 46 48 00 00
	00 00		 mov	 DWORD PTR [esi+72], 0
$LN8@CSnowEnvir:
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp

; 352  : }

  00078	8b ce		 mov	 ecx, esi
  0007a	e8 00 00 00 00	 call	 ??1CScreen@@UAE@XZ	; CScreen::~CScreen
  0007f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00082	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00089	59		 pop	 ecx
  0008a	5e		 pop	 esi
  0008b	8b e5		 mov	 esp, ebp
  0008d	5d		 pop	 ebp
  0008e	c3		 ret	 0
$LN24@CSnowEnvir:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 219  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0008f	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN34@CSnowEnvir:
  00094	cc		 int	 3
  00095	cc		 int	 3
  00096	cc		 int	 3
  00097	cc		 int	 3
  00098	cc		 int	 3
  00099	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CSnowEnvironment@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CSnowEnvironment@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CSnowEnvironment@@UAE@XZ ENDP			; CSnowEnvironment::~CSnowEnvironment
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp
;	COMDAT ??0CSnowEnvironment@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CSnowEnvironment@@QAE@XZ PROC			; CSnowEnvironment::CSnowEnvironment, COMDAT
; _this$ = ecx

; 342  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CSnowEnvironment@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00029	e8 00 00 00 00	 call	 ??0CScreen@@QAE@XZ	; CScreen::CScreen
  0002e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CSnowEnvironment@@6B@
  00034	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 400  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0003b	c7 46 40 00 00
	00 00		 mov	 DWORD PTR [esi+64], 0
  00042	c7 46 44 00 00
	00 00		 mov	 DWORD PTR [esi+68], 0
  00049	c7 46 48 00 00
	00 00		 mov	 DWORD PTR [esi+72], 0
; File C:\Marty 5.5\Src-Client\Client\GameLib\SnowEnvironment.cpp

; 345  : 	m_wBlurTextureSize = 512;

  00050	b8 00 02 00 00	 mov	 eax, 512		; 00000200H
  00055	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 346  : 
; 347  : 	__Initialize();

  00059	8b ce		 mov	 ecx, esi
  0005b	c7 46 50 00 00
	00 00		 mov	 DWORD PTR [esi+80], 0
  00062	c7 46 4c b8 0b
	00 00		 mov	 DWORD PTR [esi+76], 3000 ; 00000bb8H
  00069	66 89 46 38	 mov	 WORD PTR [esi+56], ax
  0006d	e8 00 00 00 00	 call	 ?__Initialize@CSnowEnvironment@@IAEXXZ ; CSnowEnvironment::__Initialize

; 348  : }

  00072	8b c6		 mov	 eax, esi
  00074	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00077	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007e	59		 pop	 ecx
  0007f	5e		 pop	 esi
  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CSnowEnvironment@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CScreen@@UAE@XZ	; CScreen::~CScreen
__unwindfunclet$??0CSnowEnvironment@@QAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 40	 add	 ecx, 64			; 00000040H
  0000e	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCSnowParticle@@V?$allocator@PAVCSnowParticle@@@std@@@std@@QAE@XZ ; std::vector<CSnowParticle *,std::allocator<CSnowParticle *> >::~vector<CSnowParticle *,std::allocator<CSnowParticle *> >
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
  00017	cc		 int	 3
__ehhandler$??0CSnowEnvironment@@QAE@XZ:
  00018	90		 npad	 1
  00019	90		 npad	 1
  0001a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00021	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00024	33 c8		 xor	 ecx, eax
  00026	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CSnowEnvironment@@QAE@XZ
  00030	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CSnowEnvironment@@QAE@XZ ENDP			; CSnowEnvironment::CSnowEnvironment
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 182  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 183  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 184  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 185  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 136  :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 186  :         _Throw_bad_array_new_length(); // add overflow
; 187  :     }
; 188  : 
; 189  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 136  :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 190  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 191  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 192  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 193  : 
; 194  : #ifdef _DEBUG
; 195  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 196  : #endif // defined(_DEBUG)
; 197  :     return _Ptr;
; 198  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 190  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 107  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 108  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 90   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 91   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN18@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN18@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 73   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 72   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 74   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 91   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 144  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 145  :     }

  00003	8b c1		 mov	 eax, ecx

; 66   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 67   :     {
; 68   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 144  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 145  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 90   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 91   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN13@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN13@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 73   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 72   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 74   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 90   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 91   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN8@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN8@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 96   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 97   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 91   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 92   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 73   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 74   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 75   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END

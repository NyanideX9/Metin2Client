; Listing generated by Microsoft (R) Optimizing Compiler Version 19.43.34808.0 

	TITLE	C:\Marty 5.5\Src-Client\Client\GameLib\Distribute\MapUtil.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
?_Fake_alloc@std@@3U_Fake_allocator@1@B	ORG $+1		; std::_Fake_alloc
CONST	ENDS
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
PUBLIC	?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
PUBLIC	?_Xlength@?$vector@UTGradientColor@@V?$allocator@UTGradientColor@@@std@@@std@@CAXXZ ; std::vector<TGradientColor,std::allocator<TGradientColor> >::_Xlength
PUBLIC	?Environment_Init@@YAXAAUSEnvironmentData@@@Z	; Environment_Init
PUBLIC	?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z ; Environment_Load
PUBLIC	?GetInterpolatedPosition@@YAXMPAUD3DXVECTOR3@@@Z ; GetInterpolatedPosition
PUBLIC	?GetLinearInterpolation@@YAMMMM@Z		; GetLinearInterpolation
PUBLIC	?PixelPositionToAttributeCellPosition@@YAXUD3DXVECTOR3@@PAUSCellPosition@@@Z ; PixelPositionToAttributeCellPosition
PUBLIC	?AttributeCellPositionToPixelPosition@@YAXUSCellPosition@@PAUD3DXVECTOR3@@@Z ; AttributeCellPositionToPixelPosition
PUBLIC	?GetPixelPositionDistance@@YAMABUD3DXVECTOR3@@0@Z ; GetPixelPositionDistance
PUBLIC	??0CEaseOutInterpolation@@QAE@XZ		; CEaseOutInterpolation::CEaseOutInterpolation
PUBLIC	??1CEaseOutInterpolation@@UAE@XZ		; CEaseOutInterpolation::~CEaseOutInterpolation
PUBLIC	?Initialize@CEaseOutInterpolation@@QAEXXZ	; CEaseOutInterpolation::Initialize
PUBLIC	?Setup@CEaseOutInterpolation@@QAEHMMM@Z		; CEaseOutInterpolation::Setup
PUBLIC	?Interpolate@CEaseOutInterpolation@@QAEXM@Z	; CEaseOutInterpolation::Interpolate
PUBLIC	?isPlaying@CEaseOutInterpolation@@QAEHXZ	; CEaseOutInterpolation::isPlaying
PUBLIC	?GetValue@CEaseOutInterpolation@@QAEMXZ		; CEaseOutInterpolation::GetValue
PUBLIC	?GetChangingValue@CEaseOutInterpolation@@QAEMXZ	; CEaseOutInterpolation::GetChangingValue
PUBLIC	??_GCEaseOutInterpolation@@UAEPAXI@Z		; CEaseOutInterpolation::`scalar deleting destructor'
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$_Resize@U_Value_init_tag@std@@@?$vector@UTGradientColor@@V?$allocator@UTGradientColor@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<TGradientColor,std::allocator<TGradientColor> >::_Resize<std::_Value_init_tag>
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@UTGradientColor@@@std@@@std@@YAPAUTGradientColor@@PAU1@IAAV?$allocator@UTGradientColor@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<TGradientColor> >
PUBLIC	??$_Copy_memmove@PAUTGradientColor@@PAU1@@std@@YAPAUTGradientColor@@PAU1@00@Z ; std::_Copy_memmove<TGradientColor *,TGradientColor *>
PUBLIC	??$_Copy_memmove_tail@PAUTGradientColor@@@std@@YAPAUTGradientColor@@QBDQAU1@II@Z ; std::_Copy_memmove_tail<TGradientColor *>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_7CEaseOutInterpolation@@6B@			; CEaseOutInterpolation::`vftable'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_C@_08FINKBBAF@reserved@			; `string'
PUBLIC	??_C@_0BB@GPOHGDLH@directionallight@		; `string'
PUBLIC	??_C@_09HPKLLIJF@direction@			; `string'
PUBLIC	??_C@_0L@EGCKCJDC@background@			; `string'
PUBLIC	??_C@_06OFNJOBDK@enable@			; `string'
PUBLIC	??_C@_07KFBPAAO@diffuse@			; `string'
PUBLIC	??_C@_07LIABELBC@ambient@			; `string'
PUBLIC	??_C@_09MNKJOHH@character@			; `string'
PUBLIC	??_C@_08KNOEMJMM@material@			; `string'
PUBLIC	??_C@_08GHNOEFBP@emissive@			; `string'
PUBLIC	??_C@_03KJMBPJEB@fog@				; `string'
PUBLIC	??_C@_09BCCBMEKP@isdensity@			; `string'
PUBLIC	??_C@_0N@HJCBLCNJ@neardistance@			; `string'
PUBLIC	??_C@_0M@IOALDGCK@fardistance@			; `string'
PUBLIC	??_C@_05PEENBMOG@color@				; `string'
PUBLIC	??_C@_06EOIELIPE@filter@			; `string'
PUBLIC	??_C@_08BJBIEDIL@alphasrc@			; `string'
PUBLIC	??_C@_09DCAIHJNN@alphadest@			; `string'
PUBLIC	??_C@_06BMKANHHL@skybox@			; `string'
PUBLIC	??_C@_0BD@MANDHJLJ@btexturerendermode@		; `string'
PUBLIC	??_C@_05MHMEBBGO@scale@				; `string'
PUBLIC	??_C@_0BD@JOBCGNII@gradientlevelupper@		; `string'
PUBLIC	??_C@_0BD@MFKMAGDB@gradientlevellower@		; `string'
PUBLIC	??_C@_0BC@MAAIOOFC@frontfacefilename@		; `string'
PUBLIC	??_C@_0BB@HMLADBDH@backfacefilename@		; `string'
PUBLIC	??_C@_0BB@OKAELDDH@leftfacefilename@		; `string'
PUBLIC	??_C@_0BC@BGDBKDJG@rightfacefilename@		; `string'
PUBLIC	??_C@_0BA@ODMABPL@topfacefilename@		; `string'
PUBLIC	??_C@_0BD@PAPHNGLP@bottomfacefilename@		; `string'
PUBLIC	??_C@_0L@HPPKMJB@cloudscale@			; `string'
PUBLIC	??_C@_0M@JAHFJEDG@cloudheight@			; `string'
PUBLIC	??_C@_0BC@BBJMDDCO@cloudtexturescale@		; `string'
PUBLIC	??_C@_0L@LJBHNMFK@cloudspeed@			; `string'
PUBLIC	??_C@_0BF@KCIBJMLM@cloudtexturefilename@	; `string'
PUBLIC	??_C@_0L@DEHGKBBJ@cloudcolor@			; `string'
PUBLIC	??_C@_08OAOFNDBJ@gradient@			; `string'
PUBLIC	??_C@_09JHLBAKBC@lensflare@			; `string'
PUBLIC	??_C@_0BA@KOCEAOMM@brightnesscolor@		; `string'
PUBLIC	??_C@_0O@GEBPBGOO@maxbrightness@		; `string'
PUBLIC	??_C@_0BA@GMIEGFJG@mainflareenable@		; `string'
PUBLIC	??_C@_0BJ@EAALILHN@mainflaretexturefilename@	; `string'
PUBLIC	??_C@_0O@JBMODIIN@mainflaresize@		; `string'
PUBLIC	??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@	; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4CEaseOutInterpolation@@6B@			; CEaseOutInterpolation::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCEaseOutInterpolation@@@8		; CEaseOutInterpolation `RTTI Type Descriptor'
PUBLIC	??_R3CEaseOutInterpolation@@8			; CEaseOutInterpolation::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CEaseOutInterpolation@@8			; CEaseOutInterpolation::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CEaseOutInterpolation@@8		; CEaseOutInterpolation::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@34000000
PUBLIC	__real@3c23d70a
PUBLIC	__real@42480000
PUBLIC	__xmm@3f8000003f8000003f8000003f800000
PUBLIC	__xmm@7fffffff7fffffff7fffffff7fffffff
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	_atof:PROC
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	??0CTextFileLoader@@QAE@XZ:PROC			; CTextFileLoader::CTextFileLoader
EXTRN	??1CTextFileLoader@@UAE@XZ:PROC			; CTextFileLoader::~CTextFileLoader
EXTRN	?Load@CTextFileLoader@@QAE_NPBD@Z:PROC		; CTextFileLoader::Load
EXTRN	?SetTop@CTextFileLoader@@QAEXXZ:PROC		; CTextFileLoader::SetTop
EXTRN	?SetChildNode@CTextFileLoader@@QAEHPBD@Z:PROC	; CTextFileLoader::SetChildNode
EXTRN	?SetParentNode@CTextFileLoader@@QAEHXZ:PROC	; CTextFileLoader::SetParentNode
EXTRN	?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z:PROC ; CTextFileLoader::GetTokenVector
EXTRN	?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z:PROC ; CTextFileLoader::GetTokenBoolean
EXTRN	?GetTokenByte@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAE@Z:PROC ; CTextFileLoader::GetTokenByte
EXTRN	?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z:PROC ; CTextFileLoader::GetTokenFloat
EXTRN	?GetTokenVector2@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR2@@@Z:PROC ; CTextFileLoader::GetTokenVector2
EXTRN	?GetTokenVector3@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR3@@@Z:PROC ; CTextFileLoader::GetTokenVector3
EXTRN	?GetTokenDirection@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_D3DVECTOR@@@Z:PROC ; CTextFileLoader::GetTokenDirection
EXTRN	?GetTokenColor@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXCOLOR@@@Z:PROC ; CTextFileLoader::GetTokenColor
EXTRN	?GetTokenColor@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_D3DCOLORVALUE@@@Z:PROC ; CTextFileLoader::GetTokenColor
EXTRN	?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z:PROC ; CTextFileLoader::GetTokenString
EXTRN	??_ECEaseOutInterpolation@@UAEPAXI@Z:PROC	; CEaseOutInterpolation::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__libm_sse2_sqrt_precise:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT __xmm@7fffffff7fffffff7fffffff7fffffff
CONST	SEGMENT
__xmm@7fffffff7fffffff7fffffff7fffffff DB 0ffH, 0ffH, 0ffH, 07fH, 0ffH, 0ffH
	DB	0ffH, 07fH, 0ffH, 0ffH, 0ffH, 07fH, 0ffH, 0ffH, 0ffH, 07fH
CONST	ENDS
;	COMDAT __xmm@3f8000003f8000003f8000003f800000
CONST	SEGMENT
__xmm@3f8000003f8000003f8000003f800000 DB 00H, 00H, 080H, '?', 00H, 00H, 080H
	DB	'?', 00H, 00H, 080H, '?', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __real@42480000
CONST	SEGMENT
__real@42480000 DD 042480000r			; 50
CONST	ENDS
;	COMDAT __real@3c23d70a
CONST	SEGMENT
__real@3c23d70a DD 03c23d70ar			; 0.01
CONST	ENDS
;	COMDAT __real@34000000
CONST	SEGMENT
__real@34000000 DD 034000000r			; 1.19209e-07
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@CEaseOutInterpolation@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CEaseOutInterpolation@@8 DD FLAT:??_R0?AVCEaseOutInterpolation@@@8 ; CEaseOutInterpolation::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CEaseOutInterpolation@@8
rdata$r	ENDS
;	COMDAT ??_R2CEaseOutInterpolation@@8
rdata$r	SEGMENT
??_R2CEaseOutInterpolation@@8 DD FLAT:??_R1A@?0A@EA@CEaseOutInterpolation@@8 ; CEaseOutInterpolation::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CEaseOutInterpolation@@8
rdata$r	SEGMENT
??_R3CEaseOutInterpolation@@8 DD 00H			; CEaseOutInterpolation::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CEaseOutInterpolation@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCEaseOutInterpolation@@@8
data$rs	SEGMENT
??_R0?AVCEaseOutInterpolation@@@8 DD FLAT:??_7type_info@@6B@ ; CEaseOutInterpolation `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCEaseOutInterpolation@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CEaseOutInterpolation@@6B@
rdata$r	SEGMENT
??_R4CEaseOutInterpolation@@6B@ DD 00H			; CEaseOutInterpolation::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCEaseOutInterpolation@@@8
	DD	FLAT:??_R3CEaseOutInterpolation@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@
CONST	SEGMENT
??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@ DB 'invalid vector subscri'
	DB	'pt', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JBMODIIN@mainflaresize@
CONST	SEGMENT
??_C@_0O@JBMODIIN@mainflaresize@ DB 'mainflaresize', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@EAALILHN@mainflaretexturefilename@
CONST	SEGMENT
??_C@_0BJ@EAALILHN@mainflaretexturefilename@ DB 'mainflaretexturefilename'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GMIEGFJG@mainflareenable@
CONST	SEGMENT
??_C@_0BA@GMIEGFJG@mainflareenable@ DB 'mainflareenable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GEBPBGOO@maxbrightness@
CONST	SEGMENT
??_C@_0O@GEBPBGOO@maxbrightness@ DB 'maxbrightness', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KOCEAOMM@brightnesscolor@
CONST	SEGMENT
??_C@_0BA@KOCEAOMM@brightnesscolor@ DB 'brightnesscolor', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09JHLBAKBC@lensflare@
CONST	SEGMENT
??_C@_09JHLBAKBC@lensflare@ DB 'lensflare', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08OAOFNDBJ@gradient@
CONST	SEGMENT
??_C@_08OAOFNDBJ@gradient@ DB 'gradient', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DEHGKBBJ@cloudcolor@
CONST	SEGMENT
??_C@_0L@DEHGKBBJ@cloudcolor@ DB 'cloudcolor', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KCIBJMLM@cloudtexturefilename@
CONST	SEGMENT
??_C@_0BF@KCIBJMLM@cloudtexturefilename@ DB 'cloudtexturefilename', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LJBHNMFK@cloudspeed@
CONST	SEGMENT
??_C@_0L@LJBHNMFK@cloudspeed@ DB 'cloudspeed', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BBJMDDCO@cloudtexturescale@
CONST	SEGMENT
??_C@_0BC@BBJMDDCO@cloudtexturescale@ DB 'cloudtexturescale', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JAHFJEDG@cloudheight@
CONST	SEGMENT
??_C@_0M@JAHFJEDG@cloudheight@ DB 'cloudheight', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HPPKMJB@cloudscale@
CONST	SEGMENT
??_C@_0L@HPPKMJB@cloudscale@ DB 'cloudscale', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PAPHNGLP@bottomfacefilename@
CONST	SEGMENT
??_C@_0BD@PAPHNGLP@bottomfacefilename@ DB 'bottomfacefilename', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@ODMABPL@topfacefilename@
CONST	SEGMENT
??_C@_0BA@ODMABPL@topfacefilename@ DB 'topfacefilename', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BGDBKDJG@rightfacefilename@
CONST	SEGMENT
??_C@_0BC@BGDBKDJG@rightfacefilename@ DB 'rightfacefilename', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OKAELDDH@leftfacefilename@
CONST	SEGMENT
??_C@_0BB@OKAELDDH@leftfacefilename@ DB 'leftfacefilename', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HMLADBDH@backfacefilename@
CONST	SEGMENT
??_C@_0BB@HMLADBDH@backfacefilename@ DB 'backfacefilename', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MAAIOOFC@frontfacefilename@
CONST	SEGMENT
??_C@_0BC@MAAIOOFC@frontfacefilename@ DB 'frontfacefilename', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MFKMAGDB@gradientlevellower@
CONST	SEGMENT
??_C@_0BD@MFKMAGDB@gradientlevellower@ DB 'gradientlevellower', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JOBCGNII@gradientlevelupper@
CONST	SEGMENT
??_C@_0BD@JOBCGNII@gradientlevelupper@ DB 'gradientlevelupper', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05MHMEBBGO@scale@
CONST	SEGMENT
??_C@_05MHMEBBGO@scale@ DB 'scale', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MANDHJLJ@btexturerendermode@
CONST	SEGMENT
??_C@_0BD@MANDHJLJ@btexturerendermode@ DB 'btexturerendermode', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06BMKANHHL@skybox@
CONST	SEGMENT
??_C@_06BMKANHHL@skybox@ DB 'skybox', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09DCAIHJNN@alphadest@
CONST	SEGMENT
??_C@_09DCAIHJNN@alphadest@ DB 'alphadest', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08BJBIEDIL@alphasrc@
CONST	SEGMENT
??_C@_08BJBIEDIL@alphasrc@ DB 'alphasrc', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06EOIELIPE@filter@
CONST	SEGMENT
??_C@_06EOIELIPE@filter@ DB 'filter', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05PEENBMOG@color@
CONST	SEGMENT
??_C@_05PEENBMOG@color@ DB 'color', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IOALDGCK@fardistance@
CONST	SEGMENT
??_C@_0M@IOALDGCK@fardistance@ DB 'fardistance', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HJCBLCNJ@neardistance@
CONST	SEGMENT
??_C@_0N@HJCBLCNJ@neardistance@ DB 'neardistance', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09BCCBMEKP@isdensity@
CONST	SEGMENT
??_C@_09BCCBMEKP@isdensity@ DB 'isdensity', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03KJMBPJEB@fog@
CONST	SEGMENT
??_C@_03KJMBPJEB@fog@ DB 'fog', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08GHNOEFBP@emissive@
CONST	SEGMENT
??_C@_08GHNOEFBP@emissive@ DB 'emissive', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08KNOEMJMM@material@
CONST	SEGMENT
??_C@_08KNOEMJMM@material@ DB 'material', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09MNKJOHH@character@
CONST	SEGMENT
??_C@_09MNKJOHH@character@ DB 'character', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07LIABELBC@ambient@
CONST	SEGMENT
??_C@_07LIABELBC@ambient@ DB 'ambient', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07KFBPAAO@diffuse@
CONST	SEGMENT
??_C@_07KFBPAAO@diffuse@ DB 'diffuse', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06OFNJOBDK@enable@
CONST	SEGMENT
??_C@_06OFNJOBDK@enable@ DB 'enable', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EGCKCJDC@background@
CONST	SEGMENT
??_C@_0L@EGCKCJDC@background@ DB 'background', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09HPKLLIJF@direction@
CONST	SEGMENT
??_C@_09HPKLLIJF@direction@ DB 'direction', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GPOHGDLH@directionallight@
CONST	SEGMENT
??_C@_0BB@GPOHGDLH@directionallight@ DB 'directionallight', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08FINKBBAF@reserved@
CONST	SEGMENT
??_C@_08FINKBBAF@reserved@ DB 'reserved', 00H		; `string'
CONST	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_7CEaseOutInterpolation@@6B@
CONST	SEGMENT
??_7CEaseOutInterpolation@@6B@ DD FLAT:??_R4CEaseOutInterpolation@@6B@ ; CEaseOutInterpolation::`vftable'
	DD	FLAT:??_ECEaseOutInterpolation@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z DD 019930522H
	DD	02cH
	DD	FLAT:__unwindtable$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$4
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$5
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$6
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$7
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$8
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$9
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$10
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$11
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$12
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$13
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$14
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$15
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$16
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$17
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$18
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$19
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$20
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$21
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$22
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$23
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$24
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$25
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$26
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$27
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$28
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$29
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$30
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$31
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$32
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$33
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$34
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$35
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$36
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$37
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$38
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$39
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$40
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$41
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$42
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$43
xdata$x	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xutility
;	COMDAT ??$_Copy_memmove_tail@PAUTGradientColor@@@std@@YAPAUTGradientColor@@QBDQAU1@II@Z
_TEXT	SEGMENT
__First_ch$ = 8						; size = 4
__Dest$ = 12						; size = 4
__Byte_count$ = 16					; size = 4
__Object_count$ = 20					; size = 4
??$_Copy_memmove_tail@PAUTGradientColor@@@std@@YAPAUTGradientColor@@QBDQAU1@II@Z PROC ; std::_Copy_memmove_tail<TGradientColor *>, COMDAT

; 4763 :     const char* const _First_ch, const _OutCtgIt _Dest, const size_t _Byte_count, const size_t _Object_count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 4764 :     _STL_INTERNAL_CHECK(_Byte_count == _Object_count * sizeof(*_Dest));
; 4765 :     const auto _Dest_ptr = _STD _To_address(_Dest);
; 4766 :     const auto _Dest_ch  = const_cast<char*>(reinterpret_cast<const volatile char*>(_Dest_ptr));
; 4767 :     _CSTD memmove(_Dest_ch, _First_ch, _Byte_count);

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 10	 mov	 edi, DWORD PTR __Byte_count$[ebp]
  0000b	57		 push	 edi
  0000c	ff 75 08	 push	 DWORD PTR __First_ch$[ebp]
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 _memmove
  00015	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4768 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4769 :         (void) _Object_count;
; 4770 :         // CodeQL [SM02986] This cast is correct: we're bypassing pointer arithmetic for performance.
; 4771 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Byte_count);

  00018	8d 04 3e	 lea	 eax, DWORD PTR [esi+edi]
  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi

; 4772 :     } else {
; 4773 :         return _Dest + static_cast<_Iter_diff_t<_OutCtgIt>>(_Object_count);
; 4774 :     }
; 4775 : }

  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??$_Copy_memmove_tail@PAUTGradientColor@@@std@@YAPAUTGradientColor@@QBDQAU1@II@Z ENDP ; std::_Copy_memmove_tail<TGradientColor *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xutility
;	COMDAT ??$_Copy_memmove@PAUTGradientColor@@PAU1@@std@@YAPAUTGradientColor@@PAU1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAUTGradientColor@@PAU1@@std@@YAPAUTGradientColor@@PAU1@00@Z PROC ; std::_Copy_memmove<TGradientColor *,TGradientColor *>, COMDAT

; 4778 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4779 :     _STL_INTERNAL_CHECK(_First <= _Last);
; 4780 :     const auto _First_ptr    = _STD _To_address(_First);
; 4781 :     const auto _Last_ptr     = _STD _To_address(_Last);
; 4782 :     const auto _Object_count = static_cast<size_t>(_Last_ptr - _First_ptr);

  00003	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	2b ca		 sub	 ecx, edx
  0000b	8b c1		 mov	 eax, ecx
  0000d	c1 f8 05	 sar	 eax, 5

; 4783 :     const auto _First_ch     = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First_ptr));
; 4784 :     const auto _Last_ch      = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last_ptr));
; 4785 :     const auto _Byte_count   = static_cast<size_t>(_Last_ch - _First_ch);
; 4786 :     return _STD _Copy_memmove_tail(_First_ch, _STD move(_Dest), _Byte_count, _Object_count);

  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00015	52		 push	 edx
  00016	e8 00 00 00 00	 call	 ??$_Copy_memmove_tail@PAUTGradientColor@@@std@@YAPAUTGradientColor@@QBDQAU1@II@Z ; std::_Copy_memmove_tail<TGradientColor *>
  0001b	83 c4 10	 add	 esp, 16			; 00000010H

; 4787 : }

  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
??$_Copy_memmove@PAUTGradientColor@@PAU1@@std@@YAPAUTGradientColor@@PAU1@00@Z ENDP ; std::_Copy_memmove<TGradientColor *,TGradientColor *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterLib\SkyBox.h
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterLib\SkyBox.h
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@UTGradientColor@@@std@@@std@@YAPAUTGradientColor@@PAU1@IAAV?$allocator@UTGradientColor@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Uninitialized_value_construct_n@V?$allocator@UTGradientColor@@@std@@@std@@YAPAUTGradientColor@@PAU1@IAAV?$allocator@UTGradientColor@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<TGradientColor> >, COMDAT

; 2041 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2056 :     for (; 0 < _Count; --_Count) {

  00003	8b 55 0c	 mov	 edx, DWORD PTR __Count$[ebp]

; 1796 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00006	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]

; 2056 :     for (; 0 < _Count; --_Count) {

  00009	85 d2		 test	 edx, edx
  0000b	74 4f		 je	 SHORT $LN3@Uninitiali
  0000d	8d 48 18	 lea	 ecx, DWORD PTR [eax+24]
$LL4@Uninitiali:
  00010	0f 57 c0	 xorps	 xmm0, xmm0

; 1808 :         ++_Last;

  00013	8d 49 20	 lea	 ecx, DWORD PTR [ecx+32]

; 732  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00016	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  00019	0f 11 40 10	 movups	 XMMWORD PTR [eax+16], xmm0
; File C:\Marty 5.5\Src-Client\Client\eterLib\SkyBox.h

; 22   : 	SColor(float _r = 0.0f, float _g = 0.0f, float _b = 0.0f, float _a = 0.0f) : r(_r), g(_g), b(_b), a(_a) {}

  0001d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 1808 :         ++_Last;

  00023	83 c0 20	 add	 eax, 32			; 00000020H
; File C:\Marty 5.5\Src-Client\Client\eterLib\SkyBox.h

; 22   : 	SColor(float _r = 0.0f, float _g = 0.0f, float _b = 0.0f, float _a = 0.0f) : r(_r), g(_g), b(_b), a(_a) {}

  00026	c7 41 cc 00 00
	00 00		 mov	 DWORD PTR [ecx-52], 0
  0002d	c7 41 d0 00 00
	00 00		 mov	 DWORD PTR [ecx-48], 0
  00034	c7 41 d4 00 00
	00 00		 mov	 DWORD PTR [ecx-44], 0
  0003b	c7 41 d8 00 00
	00 00		 mov	 DWORD PTR [ecx-40], 0
  00042	c7 41 dc 00 00
	00 00		 mov	 DWORD PTR [ecx-36], 0
  00049	c7 41 e0 00 00
	00 00		 mov	 DWORD PTR [ecx-32], 0
  00050	c7 41 e4 00 00
	00 00		 mov	 DWORD PTR [ecx-28], 0
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 2056 :     for (; 0 < _Count; --_Count) {

  00057	83 ea 01	 sub	 edx, 1
  0005a	75 b4		 jne	 SHORT $LL4@Uninitiali
$LN3@Uninitiali:

; 2057 :         _Backout._Emplace_back();
; 2058 :     }
; 2059 : 
; 2060 :     return _Backout._Release();
; 2061 : }

  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
??$_Uninitialized_value_construct_n@V?$allocator@UTGradientColor@@@std@@@std@@YAPAUTGradientColor@@PAU1@IAAV?$allocator@UTGradientColor@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<TGradientColor> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
;	COMDAT ??$_Resize@U_Value_init_tag@std@@@?$vector@UTGradientColor@@V?$allocator@UTGradientColor@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
_TEXT	SEGMENT
$T2 = -4						; size = 4
__Newsize$ = 8						; size = 4
$T3 = 8							; size = 4
__Val$ = 12						; size = 4
??$_Resize@U_Value_init_tag@std@@@?$vector@UTGradientColor@@V?$allocator@UTGradientColor@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z PROC ; std::vector<TGradientColor,std::allocator<TGradientColor> >::_Resize<std::_Value_init_tag>, COMDAT
; _this$ = ecx

; 1574 :     _CONSTEXPR20 void _Resize(const size_type _Newsize, const _Ty2& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi

; 1575 :         // trim or append elements, provide strong guarantee
; 1576 :         auto& _Al           = _Getal();
; 1577 :         auto& _My_data      = _Mypair._Myval2;
; 1578 :         pointer& _Myfirst   = _My_data._Myfirst;
; 1579 :         pointer& _Mylast    = _My_data._Mylast;
; 1580 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);
; 1581 :         if (_Newsize < _Oldsize) { // trim

  00006	8b 75 08	 mov	 esi, DWORD PTR __Newsize$[ebp]
  00009	57		 push	 edi
  0000a	8b f9		 mov	 edi, ecx
  0000c	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  0000f	8b da		 mov	 ebx, edx
  00011	8b 07		 mov	 eax, DWORD PTR [edi]
  00013	2b d8		 sub	 ebx, eax
  00015	c1 fb 05	 sar	 ebx, 5
  00018	3b f3		 cmp	 esi, ebx
  0001a	73 11		 jae	 SHORT $LN2@Resize

; 1582 :             const pointer _Newlast = _Myfirst + _Newsize;

  0001c	c1 e6 05	 shl	 esi, 5
  0001f	03 f0		 add	 esi, eax

; 1583 :             _Orphan_range(_Newlast, _Mylast);
; 1584 :             _Destroy_range(_Newlast, _Mylast, _Al);
; 1585 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1586 :             _Mylast = _Newlast;

  00021	89 77 04	 mov	 DWORD PTR [edi+4], esi
  00024	5f		 pop	 edi

; 1610 :     }

  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 08 00	 ret	 8
$LN2@Resize:

; 1587 :             return;
; 1588 :         }
; 1589 : 
; 1590 :         if (_Newsize > _Oldsize) { // append

  0002d	0f 86 0c 01 00
	00		 jbe	 $LN3@Resize

; 1591 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  00033	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00036	2b c8		 sub	 ecx, eax
  00038	c1 f9 05	 sar	 ecx, 5

; 1592 :             if (_Newsize > _Oldcapacity) { // reallocate

  0003b	3b f1		 cmp	 esi, ecx
  0003d	0f 86 ec 00 00
	00		 jbe	 $LN4@Resize

; 1538 :         if (_Newsize > max_size()) {

  00043	81 fe ff ff ff
	07		 cmp	 esi, 134217727		; 07ffffffH
  00049	0f 87 f9 00 00
	00		 ja	 $LN110@Resize

; 1996 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  0004f	8b d1		 mov	 edx, ecx
  00051	b8 ff ff ff 07	 mov	 eax, 134217727		; 07ffffffH
  00056	d1 ea		 shr	 edx, 1
  00058	2b c2		 sub	 eax, edx
  0005a	3b c8		 cmp	 ecx, eax
  0005c	76 19		 jbe	 SHORT $LN11@Resize

; 1997 :             return _Max; // geometric growth would overflow

  0005e	b8 e0 ff ff ff	 mov	 eax, -32		; ffffffe0H
  00063	c7 45 fc e0 ff
	ff ff		 mov	 DWORD PTR $T2[ebp], -32	; ffffffe0H
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 253  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0006a	50		 push	 eax
  0006b	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00070	8b c8		 mov	 ecx, eax
  00072	89 4d 08	 mov	 DWORD PTR $T3[ebp], ecx
  00075	eb 46		 jmp	 SHORT $LN108@Resize
$LN11@Resize:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 2000 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00077	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 2001 : 
; 2002 :         if (_Geometric < _Newsize) {

  0007a	3b c6		 cmp	 eax, esi
  0007c	73 13		 jae	 SHORT $LN12@Resize

; 2003 :             return _Newsize; // geometric growth would be insufficient

  0007e	8b c6		 mov	 eax, esi
$LN22@Resize:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 122  :     return _Count * _Ty_size;

  00080	c1 e0 05	 shl	 eax, 5
  00083	89 45 fc	 mov	 DWORD PTR $T2[ebp], eax

; 227  :     if (_Bytes == 0) {

  00086	85 c0		 test	 eax, eax
  00088	75 14		 jne	 SHORT $LN26@Resize

; 228  :         return nullptr;

  0008a	33 c9		 xor	 ecx, ecx
  0008c	89 4d 08	 mov	 DWORD PTR $T3[ebp], ecx
  0008f	eb 2f		 jmp	 SHORT $LN25@Resize
$LN12@Resize:

; 117  :         if (_Count > _Max_possible) {

  00091	3d ff ff ff 07	 cmp	 eax, 134217727		; 07ffffffH
  00096	0f 87 b1 00 00
	00		 ja	 $LN111@Resize
  0009c	eb e2		 jmp	 SHORT $LN22@Resize
$LN26@Resize:

; 251  :         if (_Bytes >= _Big_allocation_threshold) {

  0009e	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  000a3	72 0d		 jb	 SHORT $LN27@Resize

; 253  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  000ab	8b c8		 mov	 ecx, eax
  000ad	89 4d 08	 mov	 DWORD PTR $T3[ebp], ecx
  000b0	eb 0b		 jmp	 SHORT $LN108@Resize
$LN27@Resize:

; 136  :         return ::operator new(_Bytes);

  000b2	50		 push	 eax
  000b3	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 256  :         return _Traits::_Allocate(_Bytes);

  000b8	8b c8		 mov	 ecx, eax
  000ba	89 45 08	 mov	 DWORD PTR $T3[ebp], eax
$LN108@Resize:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1560 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

  000bd	83 c4 04	 add	 esp, 4
$LN25@Resize:
  000c0	8b c6		 mov	 eax, esi
  000c2	2b c3		 sub	 eax, ebx
  000c4	c1 e3 05	 shl	 ebx, 5
  000c7	57		 push	 edi
  000c8	50		 push	 eax
  000c9	03 d9		 add	 ebx, ecx
  000cb	53		 push	 ebx
  000cc	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@UTGradientColor@@@std@@@std@@YAPAUTGradientColor@@PAU1@IAAV?$allocator@UTGradientColor@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<TGradientColor> >
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 1955 :             _STD _Copy_memmove(_UFirst, _ULast, _STD _Unfancy(_Dest));

  000d1	8b 5d 08	 mov	 ebx, DWORD PTR $T3[ebp]
  000d4	53		 push	 ebx
  000d5	ff 77 04	 push	 DWORD PTR [edi+4]
  000d8	ff 37		 push	 DWORD PTR [edi]
  000da	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUTGradientColor@@PAU1@@std@@YAPAUTGradientColor@@PAU1@00@Z ; std::_Copy_memmove<TGradientColor *,TGradientColor *>
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 2054 :         if (_Myfirst) { // destroy and deallocate old array

  000df	8b 07		 mov	 eax, DWORD PTR [edi]
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 1955 :             _STD _Copy_memmove(_UFirst, _ULast, _STD _Unfancy(_Dest));

  000e1	83 c4 18	 add	 esp, 24			; 00000018H
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 2054 :         if (_Myfirst) { // destroy and deallocate old array

  000e4	85 c0		 test	 eax, eax
  000e6	74 2c		 je	 SHORT $LN55@Resize

; 2055 :             _STD _Destroy_range(_Myfirst, _Mylast, _Al);
; 2056 :             _ASAN_VECTOR_REMOVE;
; 2057 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e8	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  000eb	2b c8		 sub	 ecx, eax
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 981  :         _STD _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ed	83 e1 e0	 and	 ecx, -32		; ffffffe0H

; 284  :         if (_Bytes >= _Big_allocation_threshold) {

  000f0	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f6	72 12		 jb	 SHORT $LN66@Resize

; 205  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f8	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000fb	83 c1 23	 add	 ecx, 35			; 00000023H

; 206  : 
; 207  :     // If the following asserts, it likely means that we are performing
; 208  :     // an aligned delete on memory coming from an unaligned allocation.
; 209  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 210  : 
; 211  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 212  :     // in range [_Min_back_shift, _Non_user_size]
; 213  : #ifdef _DEBUG
; 214  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 215  : #else // ^^^ defined(_DEBUG) / !defined(_DEBUG) vvv
; 216  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 217  : #endif // ^^^ !defined(_DEBUG) ^^^
; 218  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000fe	2b c2		 sub	 eax, edx

; 219  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00100	83 c0 fc	 add	 eax, -4			; fffffffcH
  00103	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00106	77 4a		 ja	 SHORT $LN63@Resize

; 220  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00108	8b c2		 mov	 eax, edx
$LN66@Resize:

; 289  :         ::operator delete(_Ptr, _Bytes);

  0010a	51		 push	 ecx
  0010b	50		 push	 eax
  0010c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00111	83 c4 08	 add	 esp, 8
$LN55@Resize:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 2062 :         _Myend   = _Newvec + _Newcapacity;

  00114	8b 45 fc	 mov	 eax, DWORD PTR $T2[ebp]
  00117	c1 e6 05	 shl	 esi, 5
  0011a	03 f3		 add	 esi, ebx
  0011c	89 1f		 mov	 DWORD PTR [edi], ebx
  0011e	89 77 04	 mov	 DWORD PTR [edi+4], esi
  00121	03 c3		 add	 eax, ebx
  00123	89 47 08	 mov	 DWORD PTR [edi+8], eax
  00126	5f		 pop	 edi

; 1610 :     }

  00127	5e		 pop	 esi
  00128	5b		 pop	 ebx
  00129	8b e5		 mov	 esp, ebp
  0012b	5d		 pop	 ebp
  0012c	c2 08 00	 ret	 8
$LN4@Resize:

; 1593 :                 _Resize_reallocate(_Newsize, _Val);
; 1594 :                 return;
; 1595 :             }
; 1596 : 
; 1597 :             _ASAN_VECTOR_EXTEND_GUARD(_Newsize);
; 1598 :             const pointer _Oldlast = _Mylast;
; 1599 :             if constexpr (is_same_v<_Ty2, _Ty>) {
; 1600 :                 _Mylast = _Uninitialized_fill_n(_Oldlast, _Newsize - _Oldsize, _Val, _Al);
; 1601 :             } else {
; 1602 :                 _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Ty2, _Value_init_tag>);
; 1603 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

  0012f	57		 push	 edi
  00130	2b f3		 sub	 esi, ebx
  00132	56		 push	 esi
  00133	52		 push	 edx
  00134	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@UTGradientColor@@@std@@@std@@YAPAUTGradientColor@@PAU1@IAAV?$allocator@UTGradientColor@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<TGradientColor> >
  00139	83 c4 0c	 add	 esp, 12			; 0000000cH
  0013c	89 47 04	 mov	 DWORD PTR [edi+4], eax
$LN3@Resize:

; 1610 :     }

  0013f	5f		 pop	 edi
  00140	5e		 pop	 esi
  00141	5b		 pop	 ebx
  00142	8b e5		 mov	 esp, ebp
  00144	5d		 pop	 ebp
  00145	c2 08 00	 ret	 8
$LN110@Resize:

; 1539 :             _Xlength();

  00148	e8 00 00 00 00	 call	 ?_Xlength@?$vector@UTGradientColor@@V?$allocator@UTGradientColor@@@std@@@std@@CAXXZ ; std::vector<TGradientColor,std::allocator<TGradientColor> >::_Xlength
$LN111@Resize:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 118  :             _Throw_bad_array_new_length(); // multiply overflow

  0014d	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN63@Resize:

; 219  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00152	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN107@Resize:
  00157	cc		 int	 3
??$_Resize@U_Value_init_tag@std@@@?$vector@UTGradientColor@@V?$allocator@UTGradientColor@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ENDP ; std::vector<TGradientColor,std::allocator<TGradientColor> >::_Resize<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 182  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 183  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 184  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 185  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 136  :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 186  :         _Throw_bad_array_new_length(); // add overflow
; 187  :     }
; 188  : 
; 189  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 136  :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 190  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 191  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 192  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 193  : 
; 194  : #ifdef _DEBUG
; 195  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 196  : #endif // defined(_DEBUG)
; 197  :     return _Ptr;
; 198  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 190  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCEaseOutInterpolation@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCEaseOutInterpolation@@UAEPAXI@Z PROC		; CEaseOutInterpolation::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CEaseOutInterpolation@@UAE@XZ ; CEaseOutInterpolation::~CEaseOutInterpolation
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN5@scalar
  00011	6a 1c		 push	 28			; 0000001cH
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN5@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCEaseOutInterpolation@@UAEPAXI@Z ENDP		; CEaseOutInterpolation::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
;	COMDAT ?GetChangingValue@CEaseOutInterpolation@@QAEMXZ
_TEXT	SEGMENT
?GetChangingValue@CEaseOutInterpolation@@QAEMXZ PROC	; CEaseOutInterpolation::GetChangingValue, COMDAT
; _this$ = ecx

; 305  : 	return m_fValue - m_fLastValue;

  00000	d9 41 08	 fld	 DWORD PTR [ecx+8]
  00003	d8 61 18	 fsub	 DWORD PTR [ecx+24]

; 306  : }

  00006	c3		 ret	 0
?GetChangingValue@CEaseOutInterpolation@@QAEMXZ ENDP	; CEaseOutInterpolation::GetChangingValue
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
;	COMDAT ?GetValue@CEaseOutInterpolation@@QAEMXZ
_TEXT	SEGMENT
?GetValue@CEaseOutInterpolation@@QAEMXZ PROC		; CEaseOutInterpolation::GetValue, COMDAT
; _this$ = ecx

; 300  : 	return m_fValue;

  00000	d9 41 08	 fld	 DWORD PTR [ecx+8]

; 301  : }

  00003	c3		 ret	 0
?GetValue@CEaseOutInterpolation@@QAEMXZ ENDP		; CEaseOutInterpolation::GetValue
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
;	COMDAT ?isPlaying@CEaseOutInterpolation@@QAEHXZ
_TEXT	SEGMENT
?isPlaying@CEaseOutInterpolation@@QAEHXZ PROC		; CEaseOutInterpolation::isPlaying, COMDAT
; _this$ = ecx

; 295  : 	return m_fRemainingTime > 0.0f;

  00000	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
  00005	33 c0		 xor	 eax, eax
  00007	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@00000000
  0000e	0f 97 c0	 seta	 al

; 296  : }

  00011	c3		 ret	 0
?isPlaying@CEaseOutInterpolation@@QAEHXZ ENDP		; CEaseOutInterpolation::isPlaying
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
;	COMDAT ?Interpolate@CEaseOutInterpolation@@QAEXM@Z
_TEXT	SEGMENT
_fElapsedTime$ = 8					; size = 4
?Interpolate@CEaseOutInterpolation@@QAEXM@Z PROC	; CEaseOutInterpolation::Interpolate, COMDAT
; _this$ = ecx

; 279  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	m_fLastValue = m_fValue;
; 281  : 
; 282  : 	m_fRemainingTime -= fElapsedTime;

  00003	f3 0f 10 4d 08	 movss	 xmm1, DWORD PTR _fElapsedTime$[ebp]
  00008	56		 push	 esi
  00009	8b f1		 mov	 esi, ecx
  0000b	f3 0f 10 46 04	 movss	 xmm0, DWORD PTR [esi+4]
  00010	f3 0f 10 56 08	 movss	 xmm2, DWORD PTR [esi+8]
  00015	f3 0f 5c c1	 subss	 xmm0, xmm1
  00019	f3 0f 11 56 18	 movss	 DWORD PTR [esi+24], xmm2
  0001e	f3 0f 11 46 04	 movss	 DWORD PTR [esi+4], xmm0

; 283  : 	m_fSpeed += m_fAcceleration * fElapsedTime;

  00023	0f 28 c1	 movaps	 xmm0, xmm1
  00026	f3 0f 59 46 10	 mulss	 xmm0, DWORD PTR [esi+16]
  0002b	f3 0f 58 46 0c	 addss	 xmm0, DWORD PTR [esi+12]
  00030	f3 0f 11 46 0c	 movss	 DWORD PTR [esi+12], xmm0

; 284  : 	m_fValue += m_fSpeed * fElapsedTime;

  00035	f3 0f 59 c1	 mulss	 xmm0, xmm1
  00039	f3 0f 58 c2	 addss	 xmm0, xmm2
  0003d	f3 0f 11 46 08	 movss	 DWORD PTR [esi+8], xmm0

; 285  : 
; 286  : 	if (!isPlaying())

  00042	e8 00 00 00 00	 call	 ?isPlaying@CEaseOutInterpolation@@QAEHXZ ; CEaseOutInterpolation::isPlaying
  00047	85 c0		 test	 eax, eax
  00049	75 06		 jne	 SHORT $LN2@Interpolat

; 287  : 	{
; 288  : 		m_fValue = 0.0f;

  0004b	89 46 08	 mov	 DWORD PTR [esi+8], eax

; 289  : 		m_fLastValue = 0.0f;

  0004e	89 46 18	 mov	 DWORD PTR [esi+24], eax
$LN2@Interpolat:
  00051	5e		 pop	 esi

; 290  : 	}
; 291  : }

  00052	5d		 pop	 ebp
  00053	c2 04 00	 ret	 4
?Interpolate@CEaseOutInterpolation@@QAEXM@Z ENDP	; CEaseOutInterpolation::Interpolate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
; File D:\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_math.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
; File D:\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_math.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
;	COMDAT ?Setup@CEaseOutInterpolation@@QAEHMMM@Z
_TEXT	SEGMENT
_fStart$ = 8						; size = 4
_fEnd$ = 12						; size = 4
_fTime$ = 16						; size = 4
?Setup@CEaseOutInterpolation@@QAEHMMM@Z PROC		; CEaseOutInterpolation::Setup, COMDAT
; _this$ = ecx

; 260  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File D:\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_math.h

; 720  :             return (float)fabs(_X);

  00003	f3 0f 10 5d 10	 movss	 xmm3, DWORD PTR _fTime$[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp

; 262  : 	if( fabs(fTime) < FLT_EPSILON )

  00008	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@34000000
; File D:\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_math.h

; 720  :             return (float)fabs(_X);

  00010	0f 28 cb	 movaps	 xmm1, xmm3
  00013	0f 54 0d 00 00
	00 00		 andps	 xmm1, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp

; 262  : 	if( fabs(fTime) < FLT_EPSILON )

  0001a	0f 2f c1	 comiss	 xmm0, xmm1
  0001d	76 08		 jbe	 SHORT $LN2@Setup

; 263  : 	{
; 264  : 		fTime = 0.01f;

  0001f	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@3c23d70a
$LN2@Setup:

; 265  : 	}
; 266  : 
; 267  : 	m_fValue = fStart;

  00027	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fStart$[ebp]

; 268  : 	m_fStartValue = fStart;
; 269  : 	m_fLastValue = fStart;
; 270  : 
; 271  : 	m_fSpeed = (2.0f * (fEnd - fStart)) / fTime;
; 272  : 	m_fAcceleration = 2.0f * (fEnd - fStart) / (fTime * fTime) - 2.0f * m_fSpeed / fTime;
; 273  : 	m_fRemainingTime = fTime;
; 274  : 
; 275  : 	return TRUE;

  0002c	b8 01 00 00 00	 mov	 eax, 1
  00031	f3 0f 10 55 0c	 movss	 xmm2, DWORD PTR _fEnd$[ebp]
  00036	f3 0f 5c d0	 subss	 xmm2, xmm0
  0003a	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0
  0003f	f3 0f 11 41 14	 movss	 DWORD PTR [ecx+20], xmm0
  00044	f3 0f 11 41 18	 movss	 DWORD PTR [ecx+24], xmm0
  00049	0f 28 c3	 movaps	 xmm0, xmm3
  0004c	f3 0f 59 c3	 mulss	 xmm0, xmm3
  00050	f3 0f 58 d2	 addss	 xmm2, xmm2
  00054	f3 0f 11 59 04	 movss	 DWORD PTR [ecx+4], xmm3
  00059	0f 28 ca	 movaps	 xmm1, xmm2
  0005c	f3 0f 5e cb	 divss	 xmm1, xmm3
  00060	f3 0f 5e d0	 divss	 xmm2, xmm0
  00064	f3 0f 11 49 0c	 movss	 DWORD PTR [ecx+12], xmm1
  00069	f3 0f 58 c9	 addss	 xmm1, xmm1
  0006d	f3 0f 5e cb	 divss	 xmm1, xmm3
  00071	f3 0f 5c d1	 subss	 xmm2, xmm1
  00075	f3 0f 11 51 10	 movss	 DWORD PTR [ecx+16], xmm2

; 276  : }

  0007a	5d		 pop	 ebp
  0007b	c2 0c 00	 ret	 12			; 0000000cH
?Setup@CEaseOutInterpolation@@QAEHMMM@Z ENDP		; CEaseOutInterpolation::Setup
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
;	COMDAT ?Initialize@CEaseOutInterpolation@@QAEXXZ
_TEXT	SEGMENT
?Initialize@CEaseOutInterpolation@@QAEXXZ PROC		; CEaseOutInterpolation::Initialize, COMDAT
; _this$ = ecx

; 250  : 	m_fRemainingTime = 0.0f;

  00000	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 251  : 	m_fValue = 0.0f;

  00007	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0

; 252  : 	m_fSpeed = 0.0f;

  0000e	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0

; 253  : 	m_fAcceleration = 0.0f;

  00015	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0

; 254  : 	m_fStartValue = 0.0f;

  0001c	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0

; 255  : 	m_fLastValue = 0.0f;

  00023	c7 41 18 00 00
	00 00		 mov	 DWORD PTR [ecx+24], 0

; 256  : }

  0002a	c3		 ret	 0
?Initialize@CEaseOutInterpolation@@QAEXXZ ENDP		; CEaseOutInterpolation::Initialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
;	COMDAT ??1CEaseOutInterpolation@@UAE@XZ
_TEXT	SEGMENT
??1CEaseOutInterpolation@@UAE@XZ PROC			; CEaseOutInterpolation::~CEaseOutInterpolation, COMDAT
; _this$ = ecx

; 245  : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CEaseOutInterpolation@@6B@

; 246  : }

  00006	c3		 ret	 0
??1CEaseOutInterpolation@@UAE@XZ ENDP			; CEaseOutInterpolation::~CEaseOutInterpolation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
;	COMDAT ??0CEaseOutInterpolation@@QAE@XZ
_TEXT	SEGMENT
??0CEaseOutInterpolation@@QAE@XZ PROC			; CEaseOutInterpolation::CEaseOutInterpolation, COMDAT
; _this$ = ecx

; 240  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CEaseOutInterpolation@@6B@

; 241  : 	Initialize();

  00009	e8 00 00 00 00	 call	 ?Initialize@CEaseOutInterpolation@@QAEXXZ ; CEaseOutInterpolation::Initialize

; 242  : }

  0000e	8b c6		 mov	 eax, esi
  00010	5e		 pop	 esi
  00011	c3		 ret	 0
??0CEaseOutInterpolation@@QAE@XZ ENDP			; CEaseOutInterpolation::CEaseOutInterpolation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
; File D:\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_math.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
; File D:\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_math.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
;	COMDAT ?GetPixelPositionDistance@@YAMABUD3DXVECTOR3@@0@Z
_TEXT	SEGMENT
tv175 = -4						; size = 4
_c_rsrcPosition$ = 8					; size = 4
_c_rdstPosition$ = 12					; size = 4
?GetPixelPositionDistance@@YAMABUD3DXVECTOR3@@0@Z PROC	; GetPixelPositionDistance, COMDAT

; 231  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H

; 232  : 	int idx = c_rsrcPosition.x - c_rdstPosition.x;

  00006	8b 4d 08	 mov	 ecx, DWORD PTR _c_rsrcPosition$[ebp]
  00009	0f 57 c9	 xorps	 xmm1, xmm1
  0000c	8b 45 0c	 mov	 eax, DWORD PTR _c_rdstPosition$[ebp]
  0000f	83 ec 08	 sub	 esp, 8
  00012	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  00016	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  0001a	f3 0f 2c d0	 cvttss2si edx, xmm0

; 233  : 	int idy = c_rsrcPosition.y - c_rdstPosition.y;

  0001e	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
  00023	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]

; 235  : 	return sqrtf(float(idx*idx + idy*idy));

  00028	0f af d2	 imul	 edx, edx
  0002b	f3 0f 2c c0	 cvttss2si eax, xmm0
  0002f	0f af c0	 imul	 eax, eax
  00032	03 c2		 add	 eax, edx
  00034	66 0f 6e c0	 movd	 xmm0, eax
  00038	0f 5b c0	 cvtdq2ps xmm0, xmm0
; File D:\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_math.h

; 808  :             return (float)sqrt(_X);

  0003b	0f 5a c0	 cvtps2pd xmm0, xmm0
  0003e	66 0f 2e c8	 ucomisd xmm1, xmm0
  00042	77 16		 ja	 SHORT $LN5@GetPixelPo
  00044	f2 0f 51 c0	 sqrtsd	 xmm0, xmm0
  00048	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp

; 235  : 	return sqrtf(float(idx*idx + idy*idy));

  0004c	f3 0f 11 44 24
	04		 movss	 DWORD PTR tv175[esp+8], xmm0
  00052	d9 44 24 04	 fld	 DWORD PTR tv175[esp+8]

; 236  : }

  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
$LN5@GetPixelPo:
; File D:\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_math.h

; 808  :             return (float)sqrt(_X);

  0005a	e8 00 00 00 00	 call	 __libm_sse2_sqrt_precise
  0005f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp

; 235  : 	return sqrtf(float(idx*idx + idy*idy));

  00063	f3 0f 11 44 24
	04		 movss	 DWORD PTR tv175[esp+8], xmm0
  00069	d9 44 24 04	 fld	 DWORD PTR tv175[esp+8]

; 236  : }

  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
?GetPixelPositionDistance@@YAMABUD3DXVECTOR3@@0@Z ENDP	; GetPixelPositionDistance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
;	COMDAT ?AttributeCellPositionToPixelPosition@@YAXUSCellPosition@@PAUD3DXVECTOR3@@@Z
_TEXT	SEGMENT
_AttrCellPosition$ = 8					; size = 8
_pPixelPosition$ = 16					; size = 4
?AttributeCellPositionToPixelPosition@@YAXUSCellPosition@@PAUD3DXVECTOR3@@@Z PROC ; AttributeCellPositionToPixelPosition, COMDAT

; 225  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 226  : 	pPixelPosition->x = AttrCellPosition.x * c_Section_xAttributeCellSize;

  00003	6b 45 08 32	 imul	 eax, DWORD PTR _AttrCellPosition$[ebp], 50
  00007	8b 4d 10	 mov	 ecx, DWORD PTR _pPixelPosition$[ebp]
  0000a	66 0f 6e c0	 movd	 xmm0, eax

; 227  : 	pPixelPosition->y = AttrCellPosition.y * c_Section_yAttributeCellSize;

  0000e	6b 45 0c 32	 imul	 eax, DWORD PTR _AttrCellPosition$[ebp+4], 50
  00012	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00015	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0
  00019	66 0f 6e c0	 movd	 xmm0, eax
  0001d	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00020	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 228  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?AttributeCellPositionToPixelPosition@@YAXUSCellPosition@@PAUD3DXVECTOR3@@@Z ENDP ; AttributeCellPositionToPixelPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
;	COMDAT ?PixelPositionToAttributeCellPosition@@YAXUD3DXVECTOR3@@PAUSCellPosition@@@Z
_TEXT	SEGMENT
_PixelPosition$ = 8					; size = 12
_pAttrCellPosition$ = 20				; size = 4
?PixelPositionToAttributeCellPosition@@YAXUD3DXVECTOR3@@PAUSCellPosition@@@Z PROC ; PixelPositionToAttributeCellPosition, COMDAT

; 219  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 220  : 	pAttrCellPosition->x = PixelPosition.x / c_Section_xAttributeCellSize;

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _PixelPosition$[ebp]
  00008	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@42480000
  00010	8b 4d 14	 mov	 ecx, DWORD PTR _pAttrCellPosition$[ebp]
  00013	f3 0f 2c c0	 cvttss2si eax, xmm0

; 221  : 	pAttrCellPosition->y = PixelPosition.y / c_Section_yAttributeCellSize;

  00017	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _PixelPosition$[ebp+4]
  0001c	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@42480000
  00024	89 01		 mov	 DWORD PTR [ecx], eax
  00026	f3 0f 2c c0	 cvttss2si eax, xmm0
  0002a	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 222  : }

  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?PixelPositionToAttributeCellPosition@@YAXUD3DXVECTOR3@@PAUSCellPosition@@@Z ENDP ; PixelPositionToAttributeCellPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
;	COMDAT ?GetLinearInterpolation@@YAMMMM@Z
_TEXT	SEGMENT
_begin$ = 8						; size = 4
_end$ = 12						; size = 4
tv128 = 12						; size = 4
_curRate$ = 16						; size = 4
?GetLinearInterpolation@@YAMMMM@Z PROC			; GetLinearInterpolation, COMDAT

; 214  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 215  : 	return (end - begin) * curRate + begin;

  00003	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _end$[ebp]
  00008	f3 0f 5c 4d 08	 subss	 xmm1, DWORD PTR _begin$[ebp]
  0000d	f3 0f 59 4d 10	 mulss	 xmm1, DWORD PTR _curRate$[ebp]
  00012	f3 0f 58 4d 08	 addss	 xmm1, DWORD PTR _begin$[ebp]
  00017	f3 0f 11 4d 0c	 movss	 DWORD PTR tv128[ebp], xmm1
  0001c	d9 45 0c	 fld	 DWORD PTR tv128[ebp]

; 216  : }

  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?GetLinearInterpolation@@YAMMMM@Z ENDP			; GetLinearInterpolation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
;	COMDAT ?GetInterpolatedPosition@@YAXMPAUD3DXVECTOR3@@@Z
_TEXT	SEGMENT
_curPositionRate$ = 8					; size = 4
_PixelPosition$ = 12					; size = 4
?GetInterpolatedPosition@@YAXMPAUD3DXVECTOR3@@@Z PROC	; GetInterpolatedPosition, COMDAT

; 211  : }

  00000	c2 00 00	 ret	 0
?GetInterpolatedPosition@@YAXMPAUD3DXVECTOR3@@@Z ENDP	; GetInterpolatedPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
;	COMDAT ?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z
_TEXT	SEGMENT
_envData$GSCopy$1$ = -232				; size = 4
$T2 = -228						; size = 4
_i$1$ = -224						; size = 4
$T3 = -220						; size = 4
tv2204 = -220						; size = 4
tv2210 = -220						; size = 4
$T4 = -216						; size = 4
tv2190 = -216						; size = 4
tv2201 = -216						; size = 4
__My_data$1$ = -212					; size = 4
_pTokenVectorCloudColor$5 = -208			; size = 4
tv2184 = -204						; size = 4
_pTokenVector$6 = -200					; size = 4
$T7 = -193						; size = 1
_byGradientCount$1$ = -193				; size = 1
$T8 = -192						; size = 24
_v3Dir$9 = -180						; size = 12
_textLoader$ = -168					; size = 128
$T10 = -40						; size = 24
$T11 = -40						; size = 24
$T12 = -40						; size = 24
$T13 = -40						; size = 24
$T14 = -40						; size = 24
$T15 = -40						; size = 24
$T16 = -40						; size = 24
$T17 = -40						; size = 24
$T18 = -40						; size = 24
$T19 = -40						; size = 24
$T20 = -40						; size = 24
$T21 = -40						; size = 24
$T22 = -40						; size = 24
$T23 = -40						; size = 24
$T24 = -40						; size = 24
$T25 = -40						; size = 24
$T26 = -40						; size = 24
$T27 = -40						; size = 24
$T28 = -40						; size = 24
$T29 = -40						; size = 24
$T30 = -40						; size = 24
$T31 = -40						; size = 24
$T32 = -40						; size = 24
$T33 = -40						; size = 24
$T34 = -40						; size = 24
$T35 = -40						; size = 24
$T36 = -40						; size = 24
$T37 = -40						; size = 24
$T38 = -40						; size = 24
$T39 = -40						; size = 24
$T40 = -40						; size = 24
$T41 = -40						; size = 24
$T42 = -40						; size = 24
$T43 = -40						; size = 24
$T44 = -40						; size = 24
$T45 = -40						; size = 24
$T46 = -40						; size = 24
$T47 = -40						; size = 24
$T48 = -40						; size = 24
$T49 = -40						; size = 24
$T50 = -40						; size = 24
$T51 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_envData$ = 8						; size = 4
_envFileName$ = 12					; size = 4
?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z PROC	; Environment_Load, COMDAT

; 71   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	8b 5d 08	 mov	 ebx, DWORD PTR _envData$[ebp]

; 72   : 	CTextFileLoader textLoader;

  00031	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00037	8b 75 0c	 mov	 esi, DWORD PTR _envFileName$[ebp]
  0003a	89 9d 18 ff ff
	ff		 mov	 DWORD PTR _envData$GSCopy$1$[ebp], ebx
  00040	e8 00 00 00 00	 call	 ??0CTextFileLoader@@QAE@XZ ; CTextFileLoader::CTextFileLoader

; 73   : 
; 74   : 	if (!textLoader.Load(envFileName))

  00045	56		 push	 esi
  00046	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00053	e8 00 00 00 00	 call	 ?Load@CTextFileLoader@@QAE_NPBD@Z ; CTextFileLoader::Load
  00058	84 c0		 test	 al, al
  0005a	75 07		 jne	 SHORT $LN5@Environmen
  0005c	32 db		 xor	 bl, bl
  0005e	e9 ed 0e 00 00	 jmp	 $LN64@Environmen
$LN5@Environmen:

; 75   : 		return false;
; 76   : 
; 77   : 	textLoader.SetTop();

  00063	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00069	e8 00 00 00 00	 call	 ?SetTop@CTextFileLoader@@QAEXXZ ; CTextFileLoader::SetTop

; 79   : 	textLoader.GetTokenBoolean("reserved", &envData.bReserve);

  0006e	68 00 00 00 00	 push	 OFFSET ??_C@_08FINKBBAF@reserved@
  00073	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR $T8[ebp]
  00079	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0007e	8d 83 98 02 00
	00		 lea	 eax, DWORD PTR [ebx+664]
  00084	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00088	50		 push	 eax
  00089	8d 85 40 ff ff
	ff		 lea	 eax, DWORD PTR $T8[ebp]
  0008f	50		 push	 eax
  00090	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00096	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 434  :         return _Myres > _Small_string_capacity;

  0009b	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR $T8[ebp+20]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp

; 79   : 	textLoader.GetTokenBoolean("reserved", &envData.bReserve);

  000a1	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 434  :         return _Myres > _Small_string_capacity;

  000a5	83 f9 0f	 cmp	 ecx, 15			; 0000000fH

; 3047 :         if (_My_data._Large_mode_engaged()) {

  000a8	76 2f		 jbe	 SHORT $LN85@Environmen
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 981  :         _STD _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000aa	8b 95 40 ff ff
	ff		 mov	 edx, DWORD PTR $T8[ebp]
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 828  :         _Al.deallocate(_Old_ptr, _Capacity + 1); // +1 for null terminator

  000b0	41		 inc	 ecx
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 981  :         _STD _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000b1	8b c2		 mov	 eax, edx

; 284  :         if (_Bytes >= _Big_allocation_threshold) {

  000b3	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000b9	72 14		 jb	 SHORT $LN96@Environmen

; 205  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000bb	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000be	83 c1 23	 add	 ecx, 35			; 00000023H
  000c1	2b c2		 sub	 eax, edx

; 219  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c3	83 c0 fc	 add	 eax, -4			; fffffffcH
  000c6	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000c9	0f 87 af 0e 00
	00		 ja	 $LN341@Environmen
$LN96@Environmen:

; 289  :         ::operator delete(_Ptr, _Bytes);

  000cf	51		 push	 ecx
  000d0	52		 push	 edx
  000d1	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000d6	83 c4 08	 add	 esp, 8
$LN85@Environmen:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp

; 81   : 	if (textLoader.SetChildNode("directionallight"))

  000d9	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GPOHGDLH@directionallight@
  000de	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  000e4	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHPBD@Z ; CTextFileLoader::SetChildNode
  000e9	85 c0		 test	 eax, eax
  000eb	0f 84 d6 01 00
	00		 je	 $LN6@Environmen

; 82   : 	{
; 83   : 		D3DVECTOR v3Dir;
; 84   : 		textLoader.GetTokenDirection("direction", &v3Dir);

  000f1	68 00 00 00 00	 push	 OFFSET ??_C@_09HPKLLIJF@direction@
  000f6	8d 4d d8	 lea	 ecx, DWORD PTR $T41[ebp]
  000f9	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000fe	8d 85 4c ff ff
	ff		 lea	 eax, DWORD PTR _v3Dir$9[ebp]
  00104	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00108	50		 push	 eax
  00109	8d 45 d8	 lea	 eax, DWORD PTR $T41[ebp]
  0010c	50		 push	 eax
  0010d	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00113	e8 00 00 00 00	 call	 ?GetTokenDirection@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_D3DVECTOR@@@Z ; CTextFileLoader::GetTokenDirection
  00118	8d 4d d8	 lea	 ecx, DWORD PTR $T41[ebp]
  0011b	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0011f	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 85   : 
; 86   : 		if (textLoader.SetChildNode("background"))

  00124	68 00 00 00 00	 push	 OFFSET ??_C@_0L@EGCKCJDC@background@
  00129	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  0012f	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHPBD@Z ; CTextFileLoader::SetChildNode
  00134	85 c0		 test	 eax, eax
  00136	0f 84 ae 00 00
	00		 je	 $LN7@Environmen

; 87   : 		{
; 88   : 			envData.DirLights[ENV_DIRLIGHT_BACKGROUND].Direction = v3Dir;

  0013c	f3 0f 7e 85 4c
	ff ff ff	 movq	 xmm0, QWORD PTR _v3Dir$9[ebp]

; 89   : 			textLoader.GetTokenBoolean("enable", &envData.bDirLightsEnable[ENV_DIRLIGHT_BACKGROUND]);

  00144	8d 4d d8	 lea	 ecx, DWORD PTR $T42[ebp]
  00147	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR _v3Dir$9[ebp+8]
  0014d	66 0f d6 43 48	 movq	 QWORD PTR [ebx+72], xmm0
  00152	68 00 00 00 00	 push	 OFFSET ??_C@_06OFNJOBDK@enable@
  00157	89 43 50	 mov	 DWORD PTR [ebx+80], eax
  0015a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0015f	53		 push	 ebx
  00160	8d 45 d8	 lea	 eax, DWORD PTR $T42[ebp]
  00163	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00167	50		 push	 eax
  00168	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  0016e	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
  00173	8d 4d d8	 lea	 ecx, DWORD PTR $T42[ebp]
  00176	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0017a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 90   : 			textLoader.GetTokenColor("diffuse", &envData.DirLights[ENV_DIRLIGHT_BACKGROUND].Diffuse);

  0017f	68 00 00 00 00	 push	 OFFSET ??_C@_07KFBPAAO@diffuse@
  00184	8d 4d d8	 lea	 ecx, DWORD PTR $T40[ebp]
  00187	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0018c	8d 43 0c	 lea	 eax, DWORD PTR [ebx+12]
  0018f	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00193	50		 push	 eax
  00194	8d 45 d8	 lea	 eax, DWORD PTR $T40[ebp]
  00197	50		 push	 eax
  00198	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  0019e	e8 00 00 00 00	 call	 ?GetTokenColor@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_D3DCOLORVALUE@@@Z ; CTextFileLoader::GetTokenColor
  001a3	8d 4d d8	 lea	 ecx, DWORD PTR $T40[ebp]
  001a6	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  001aa	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 91   : 			textLoader.GetTokenColor("ambient", &envData.DirLights[ENV_DIRLIGHT_BACKGROUND].Ambient);

  001af	68 00 00 00 00	 push	 OFFSET ??_C@_07LIABELBC@ambient@
  001b4	8d 4d d8	 lea	 ecx, DWORD PTR $T44[ebp]
  001b7	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  001bc	8d 43 2c	 lea	 eax, DWORD PTR [ebx+44]
  001bf	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  001c3	50		 push	 eax
  001c4	8d 45 d8	 lea	 eax, DWORD PTR $T44[ebp]
  001c7	50		 push	 eax
  001c8	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  001ce	e8 00 00 00 00	 call	 ?GetTokenColor@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_D3DCOLORVALUE@@@Z ; CTextFileLoader::GetTokenColor
  001d3	8d 4d d8	 lea	 ecx, DWORD PTR $T44[ebp]
  001d6	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  001da	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 92   : 			textLoader.SetParentNode();

  001df	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  001e5	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
$LN7@Environmen:

; 93   : 		}
; 94   : 
; 95   : 		if (textLoader.SetChildNode("character"))

  001ea	68 00 00 00 00	 push	 OFFSET ??_C@_09MNKJOHH@character@
  001ef	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  001f5	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHPBD@Z ; CTextFileLoader::SetChildNode
  001fa	85 c0		 test	 eax, eax
  001fc	0f 84 ba 00 00
	00		 je	 $LN8@Environmen

; 96   : 		{
; 97   : 			envData.DirLights[ENV_DIRLIGHT_CHARACTER].Direction = v3Dir;

  00202	f3 0f 7e 85 4c
	ff ff ff	 movq	 xmm0, QWORD PTR _v3Dir$9[ebp]

; 98   : 			textLoader.GetTokenBoolean("enable", &envData.bDirLightsEnable[ENV_DIRLIGHT_CHARACTER]);

  0020a	8d 4d d8	 lea	 ecx, DWORD PTR $T45[ebp]
  0020d	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR _v3Dir$9[ebp+8]
  00213	66 0f d6 83 b0
	00 00 00	 movq	 QWORD PTR [ebx+176], xmm0
  0021b	68 00 00 00 00	 push	 OFFSET ??_C@_06OFNJOBDK@enable@
  00220	89 83 b8 00 00
	00		 mov	 DWORD PTR [ebx+184], eax
  00226	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0022b	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  0022e	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  00232	50		 push	 eax
  00233	8d 45 d8	 lea	 eax, DWORD PTR $T45[ebp]
  00236	50		 push	 eax
  00237	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  0023d	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
  00242	8d 4d d8	 lea	 ecx, DWORD PTR $T45[ebp]
  00245	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00249	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 99   : 			textLoader.GetTokenColor("diffuse", &envData.DirLights[ENV_DIRLIGHT_CHARACTER].Diffuse);

  0024e	68 00 00 00 00	 push	 OFFSET ??_C@_07KFBPAAO@diffuse@
  00253	8d 4d d8	 lea	 ecx, DWORD PTR $T46[ebp]
  00256	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0025b	8d 43 74	 lea	 eax, DWORD PTR [ebx+116]
  0025e	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  00262	50		 push	 eax
  00263	8d 45 d8	 lea	 eax, DWORD PTR $T46[ebp]
  00266	50		 push	 eax
  00267	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  0026d	e8 00 00 00 00	 call	 ?GetTokenColor@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_D3DCOLORVALUE@@@Z ; CTextFileLoader::GetTokenColor
  00272	8d 4d d8	 lea	 ecx, DWORD PTR $T46[ebp]
  00275	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00279	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 100  : 			textLoader.GetTokenColor("ambient", &envData.DirLights[ENV_DIRLIGHT_CHARACTER].Ambient);

  0027e	68 00 00 00 00	 push	 OFFSET ??_C@_07LIABELBC@ambient@
  00283	8d 4d d8	 lea	 ecx, DWORD PTR $T47[ebp]
  00286	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0028b	8d 83 94 00 00
	00		 lea	 eax, DWORD PTR [ebx+148]
  00291	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  00295	50		 push	 eax
  00296	8d 45 d8	 lea	 eax, DWORD PTR $T47[ebp]
  00299	50		 push	 eax
  0029a	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  002a0	e8 00 00 00 00	 call	 ?GetTokenColor@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_D3DCOLORVALUE@@@Z ; CTextFileLoader::GetTokenColor
  002a5	8d 4d d8	 lea	 ecx, DWORD PTR $T47[ebp]
  002a8	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  002ac	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 101  : 			textLoader.SetParentNode();

  002b1	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  002b7	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
$LN8@Environmen:

; 102  : 		}
; 103  : 
; 104  : 		textLoader.SetParentNode();

  002bc	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  002c2	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
$LN6@Environmen:

; 105  : 	}
; 106  : 
; 107  : 	if (textLoader.SetChildNode("material"))

  002c7	68 00 00 00 00	 push	 OFFSET ??_C@_08KNOEMJMM@material@
  002cc	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  002d2	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHPBD@Z ; CTextFileLoader::SetChildNode
  002d7	85 c0		 test	 eax, eax
  002d9	0f 84 a4 00 00
	00		 je	 $LN9@Environmen

; 108  : 	{
; 109  : 		textLoader.GetTokenColor("diffuse", &envData.Material.Diffuse);

  002df	68 00 00 00 00	 push	 OFFSET ??_C@_07KFBPAAO@diffuse@
  002e4	8d 4d d8	 lea	 ecx, DWORD PTR $T48[ebp]
  002e7	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  002ec	8d 83 d8 00 00
	00		 lea	 eax, DWORD PTR [ebx+216]
  002f2	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9
  002f6	50		 push	 eax
  002f7	8d 45 d8	 lea	 eax, DWORD PTR $T48[ebp]
  002fa	50		 push	 eax
  002fb	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00301	e8 00 00 00 00	 call	 ?GetTokenColor@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_D3DCOLORVALUE@@@Z ; CTextFileLoader::GetTokenColor
  00306	8d 4d d8	 lea	 ecx, DWORD PTR $T48[ebp]
  00309	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0030d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 110  : 		textLoader.GetTokenColor("ambient", &envData.Material.Ambient);

  00312	68 00 00 00 00	 push	 OFFSET ??_C@_07LIABELBC@ambient@
  00317	8d 4d d8	 lea	 ecx, DWORD PTR $T49[ebp]
  0031a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0031f	8d 83 e8 00 00
	00		 lea	 eax, DWORD PTR [ebx+232]
  00325	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+8], 10 ; 0000000aH
  00329	50		 push	 eax
  0032a	8d 45 d8	 lea	 eax, DWORD PTR $T49[ebp]
  0032d	50		 push	 eax
  0032e	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00334	e8 00 00 00 00	 call	 ?GetTokenColor@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_D3DCOLORVALUE@@@Z ; CTextFileLoader::GetTokenColor
  00339	8d 4d d8	 lea	 ecx, DWORD PTR $T49[ebp]
  0033c	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00340	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 111  : 		textLoader.GetTokenColor("emissive", &envData.Material.Emissive);

  00345	68 00 00 00 00	 push	 OFFSET ??_C@_08GHNOEFBP@emissive@
  0034a	8d 4d d8	 lea	 ecx, DWORD PTR $T50[ebp]
  0034d	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00352	8d 83 08 01 00
	00		 lea	 eax, DWORD PTR [ebx+264]
  00358	c6 45 fc 0b	 mov	 BYTE PTR __$EHRec$[ebp+8], 11 ; 0000000bH
  0035c	50		 push	 eax
  0035d	8d 45 d8	 lea	 eax, DWORD PTR $T50[ebp]
  00360	50		 push	 eax
  00361	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00367	e8 00 00 00 00	 call	 ?GetTokenColor@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_D3DCOLORVALUE@@@Z ; CTextFileLoader::GetTokenColor
  0036c	8d 4d d8	 lea	 ecx, DWORD PTR $T50[ebp]
  0036f	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00373	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 112  : 		textLoader.SetParentNode();

  00378	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  0037e	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
$LN9@Environmen:

; 113  : 	}
; 114  : 
; 115  : 	if (textLoader.SetChildNode("fog"))

  00383	68 00 00 00 00	 push	 OFFSET ??_C@_03KJMBPJEB@fog@
  00388	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  0038e	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHPBD@Z ; CTextFileLoader::SetChildNode
  00393	85 c0		 test	 eax, eax
  00395	0f 84 0a 01 00
	00		 je	 $LN10@Environmen

; 116  : 	{
; 117  : 		textLoader.GetTokenBoolean("enable", &envData.bFogEnable);

  0039b	68 00 00 00 00	 push	 OFFSET ??_C@_06OFNJOBDK@enable@
  003a0	8d 4d d8	 lea	 ecx, DWORD PTR $T24[ebp]
  003a3	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  003a8	8d 83 1c 01 00
	00		 lea	 eax, DWORD PTR [ebx+284]
  003ae	c6 45 fc 0c	 mov	 BYTE PTR __$EHRec$[ebp+8], 12 ; 0000000cH
  003b2	50		 push	 eax
  003b3	8d 45 d8	 lea	 eax, DWORD PTR $T24[ebp]
  003b6	50		 push	 eax
  003b7	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  003bd	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
  003c2	8d 4d d8	 lea	 ecx, DWORD PTR $T24[ebp]
  003c5	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  003c9	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 118  : 		textLoader.GetTokenBoolean("isdensity", &envData.bDensityFog);

  003ce	68 00 00 00 00	 push	 OFFSET ??_C@_09BCCBMEKP@isdensity@
  003d3	8d 4d d8	 lea	 ecx, DWORD PTR $T10[ebp]
  003d6	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  003db	8d 83 20 01 00
	00		 lea	 eax, DWORD PTR [ebx+288]
  003e1	c6 45 fc 0d	 mov	 BYTE PTR __$EHRec$[ebp+8], 13 ; 0000000dH
  003e5	50		 push	 eax
  003e6	8d 45 d8	 lea	 eax, DWORD PTR $T10[ebp]
  003e9	50		 push	 eax
  003ea	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  003f0	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
  003f5	8d 4d d8	 lea	 ecx, DWORD PTR $T10[ebp]
  003f8	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  003fc	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 119  : 		textLoader.GetTokenFloat("neardistance", &envData.m_fFogNearDistance);

  00401	68 00 00 00 00	 push	 OFFSET ??_C@_0N@HJCBLCNJ@neardistance@
  00406	8d 4d d8	 lea	 ecx, DWORD PTR $T11[ebp]
  00409	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0040e	8d 83 24 01 00
	00		 lea	 eax, DWORD PTR [ebx+292]
  00414	c6 45 fc 0e	 mov	 BYTE PTR __$EHRec$[ebp+8], 14 ; 0000000eH
  00418	50		 push	 eax
  00419	8d 45 d8	 lea	 eax, DWORD PTR $T11[ebp]
  0041c	50		 push	 eax
  0041d	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00423	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
  00428	8d 4d d8	 lea	 ecx, DWORD PTR $T11[ebp]
  0042b	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0042f	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 120  : 		textLoader.GetTokenFloat("fardistance", &envData.m_fFogFarDistance);

  00434	68 00 00 00 00	 push	 OFFSET ??_C@_0M@IOALDGCK@fardistance@
  00439	8d 4d d8	 lea	 ecx, DWORD PTR $T12[ebp]
  0043c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00441	8d 83 28 01 00
	00		 lea	 eax, DWORD PTR [ebx+296]
  00447	c6 45 fc 0f	 mov	 BYTE PTR __$EHRec$[ebp+8], 15 ; 0000000fH
  0044b	50		 push	 eax
  0044c	8d 45 d8	 lea	 eax, DWORD PTR $T12[ebp]
  0044f	50		 push	 eax
  00450	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00456	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
  0045b	8d 4d d8	 lea	 ecx, DWORD PTR $T12[ebp]
  0045e	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00462	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 121  : 		textLoader.GetTokenColor("color", &envData.FogColor);

  00467	68 00 00 00 00	 push	 OFFSET ??_C@_05PEENBMOG@color@
  0046c	8d 4d d8	 lea	 ecx, DWORD PTR $T13[ebp]
  0046f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00474	8d 83 2c 01 00
	00		 lea	 eax, DWORD PTR [ebx+300]
  0047a	c6 45 fc 10	 mov	 BYTE PTR __$EHRec$[ebp+8], 16 ; 00000010H
  0047e	50		 push	 eax
  0047f	8d 45 d8	 lea	 eax, DWORD PTR $T13[ebp]
  00482	50		 push	 eax
  00483	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00489	e8 00 00 00 00	 call	 ?GetTokenColor@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXCOLOR@@@Z ; CTextFileLoader::GetTokenColor
  0048e	8d 4d d8	 lea	 ecx, DWORD PTR $T13[ebp]
  00491	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00495	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 122  : 		textLoader.SetParentNode();

  0049a	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  004a0	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
$LN10@Environmen:

; 123  : 	}
; 124  : 
; 125  : 	if (textLoader.SetChildNode("filter"))

  004a5	68 00 00 00 00	 push	 OFFSET ??_C@_06EOIELIPE@filter@
  004aa	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  004b0	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHPBD@Z ; CTextFileLoader::SetChildNode
  004b5	85 c0		 test	 eax, eax
  004b7	0f 84 d7 00 00
	00		 je	 $LN11@Environmen

; 126  : 	{
; 127  : 		textLoader.GetTokenBoolean("enable", (BOOL *) &envData.bFilteringEnable);

  004bd	68 00 00 00 00	 push	 OFFSET ??_C@_06OFNJOBDK@enable@
  004c2	8d 4d d8	 lea	 ecx, DWORD PTR $T14[ebp]
  004c5	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  004ca	8d 83 3c 01 00
	00		 lea	 eax, DWORD PTR [ebx+316]
  004d0	c6 45 fc 11	 mov	 BYTE PTR __$EHRec$[ebp+8], 17 ; 00000011H
  004d4	50		 push	 eax
  004d5	8d 45 d8	 lea	 eax, DWORD PTR $T14[ebp]
  004d8	50		 push	 eax
  004d9	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  004df	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
  004e4	8d 4d d8	 lea	 ecx, DWORD PTR $T14[ebp]
  004e7	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  004eb	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 128  : 		textLoader.GetTokenColor("color", &envData.FilteringColor);

  004f0	68 00 00 00 00	 push	 OFFSET ??_C@_05PEENBMOG@color@
  004f5	8d 4d d8	 lea	 ecx, DWORD PTR $T15[ebp]
  004f8	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  004fd	8d 83 40 01 00
	00		 lea	 eax, DWORD PTR [ebx+320]
  00503	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  00507	50		 push	 eax
  00508	8d 45 d8	 lea	 eax, DWORD PTR $T15[ebp]
  0050b	50		 push	 eax
  0050c	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00512	e8 00 00 00 00	 call	 ?GetTokenColor@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXCOLOR@@@Z ; CTextFileLoader::GetTokenColor
  00517	8d 4d d8	 lea	 ecx, DWORD PTR $T15[ebp]
  0051a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0051e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 129  : 		textLoader.GetTokenByte("alphasrc", &envData.byFilteringAlphaSrc);

  00523	68 00 00 00 00	 push	 OFFSET ??_C@_08BJBIEDIL@alphasrc@
  00528	8d 4d d8	 lea	 ecx, DWORD PTR $T16[ebp]
  0052b	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00530	8d 83 50 01 00
	00		 lea	 eax, DWORD PTR [ebx+336]
  00536	c6 45 fc 13	 mov	 BYTE PTR __$EHRec$[ebp+8], 19 ; 00000013H
  0053a	50		 push	 eax
  0053b	8d 45 d8	 lea	 eax, DWORD PTR $T16[ebp]
  0053e	50		 push	 eax
  0053f	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00545	e8 00 00 00 00	 call	 ?GetTokenByte@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAE@Z ; CTextFileLoader::GetTokenByte
  0054a	8d 4d d8	 lea	 ecx, DWORD PTR $T16[ebp]
  0054d	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00551	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 130  : 		textLoader.GetTokenByte("alphadest", &envData.byFilteringAlphaDest);

  00556	68 00 00 00 00	 push	 OFFSET ??_C@_09DCAIHJNN@alphadest@
  0055b	8d 4d d8	 lea	 ecx, DWORD PTR $T43[ebp]
  0055e	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00563	8d 83 51 01 00
	00		 lea	 eax, DWORD PTR [ebx+337]
  00569	c6 45 fc 14	 mov	 BYTE PTR __$EHRec$[ebp+8], 20 ; 00000014H
  0056d	50		 push	 eax
  0056e	8d 45 d8	 lea	 eax, DWORD PTR $T43[ebp]
  00571	50		 push	 eax
  00572	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00578	e8 00 00 00 00	 call	 ?GetTokenByte@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAE@Z ; CTextFileLoader::GetTokenByte
  0057d	8d 4d d8	 lea	 ecx, DWORD PTR $T43[ebp]
  00580	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00584	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 131  : 		textLoader.SetParentNode();

  00589	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  0058f	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
$LN11@Environmen:

; 132  : 	}
; 133  : 
; 134  : 	if (textLoader.SetChildNode("skybox"))

  00594	68 00 00 00 00	 push	 OFFSET ??_C@_06BMKANHHL@skybox@
  00599	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  0059f	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHPBD@Z ; CTextFileLoader::SetChildNode
  005a4	85 c0		 test	 eax, eax
  005a6	0f 84 4d 08 00
	00		 je	 $LN12@Environmen

; 135  : 	{
; 136  : 		textLoader.GetTokenBoolean("btexturerendermode", (BOOL *) &envData.bSkyBoxTextureRenderMode);

  005ac	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@MANDHJLJ@btexturerendermode@
  005b1	8d 4d d8	 lea	 ecx, DWORD PTR $T17[ebp]
  005b4	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  005b9	8d 83 68 01 00
	00		 lea	 eax, DWORD PTR [ebx+360]
  005bf	c6 45 fc 15	 mov	 BYTE PTR __$EHRec$[ebp+8], 21 ; 00000015H
  005c3	50		 push	 eax
  005c4	8d 45 d8	 lea	 eax, DWORD PTR $T17[ebp]
  005c7	50		 push	 eax
  005c8	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  005ce	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
  005d3	8d 4d d8	 lea	 ecx, DWORD PTR $T17[ebp]
  005d6	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  005da	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 137  : 		textLoader.GetTokenVector3("scale", &envData.v3SkyBoxScale);

  005df	68 00 00 00 00	 push	 OFFSET ??_C@_05MHMEBBGO@scale@
  005e4	8d 4d d8	 lea	 ecx, DWORD PTR $T18[ebp]
  005e7	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  005ec	8d 83 5c 01 00
	00		 lea	 eax, DWORD PTR [ebx+348]
  005f2	c6 45 fc 16	 mov	 BYTE PTR __$EHRec$[ebp+8], 22 ; 00000016H
  005f6	50		 push	 eax
  005f7	8d 45 d8	 lea	 eax, DWORD PTR $T18[ebp]
  005fa	50		 push	 eax
  005fb	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00601	e8 00 00 00 00	 call	 ?GetTokenVector3@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR3@@@Z ; CTextFileLoader::GetTokenVector3
  00606	8d 4d d8	 lea	 ecx, DWORD PTR $T18[ebp]
  00609	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0060d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 138  : 		textLoader.GetTokenByte("gradientlevelupper", &envData.bySkyBoxGradientLevelUpper);

  00612	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@JOBCGNII@gradientlevelupper@
  00617	8d 4d d8	 lea	 ecx, DWORD PTR $T19[ebp]
  0061a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0061f	8d bb 6c 01 00
	00		 lea	 edi, DWORD PTR [ebx+364]
  00625	c6 45 fc 17	 mov	 BYTE PTR __$EHRec$[ebp+8], 23 ; 00000017H
  00629	57		 push	 edi
  0062a	8d 45 d8	 lea	 eax, DWORD PTR $T19[ebp]
  0062d	50		 push	 eax
  0062e	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00634	e8 00 00 00 00	 call	 ?GetTokenByte@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAE@Z ; CTextFileLoader::GetTokenByte
  00639	8d 4d d8	 lea	 ecx, DWORD PTR $T19[ebp]
  0063c	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00640	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 139  : 		textLoader.GetTokenByte("gradientlevellower", &envData.bySkyBoxGradientLevelLower);

  00645	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@MFKMAGDB@gradientlevellower@
  0064a	8d 4d d8	 lea	 ecx, DWORD PTR $T20[ebp]
  0064d	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00652	8d 83 6d 01 00
	00		 lea	 eax, DWORD PTR [ebx+365]
  00658	c6 45 fc 18	 mov	 BYTE PTR __$EHRec$[ebp+8], 24 ; 00000018H
  0065c	50		 push	 eax
  0065d	8d 45 d8	 lea	 eax, DWORD PTR $T20[ebp]
  00660	50		 push	 eax
  00661	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00667	e8 00 00 00 00	 call	 ?GetTokenByte@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAE@Z ; CTextFileLoader::GetTokenByte
  0066c	8d 4d d8	 lea	 ecx, DWORD PTR $T20[ebp]
  0066f	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00673	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 140  : 
; 141  : 		textLoader.GetTokenString("frontfacefilename", &envData.strSkyBoxFaceFileName[0]);

  00678	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@MAAIOOFC@frontfacefilename@
  0067d	8d 4d d8	 lea	 ecx, DWORD PTR $T21[ebp]
  00680	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00685	8d 83 70 01 00
	00		 lea	 eax, DWORD PTR [ebx+368]
  0068b	c6 45 fc 19	 mov	 BYTE PTR __$EHRec$[ebp+8], 25 ; 00000019H
  0068f	50		 push	 eax
  00690	8d 45 d8	 lea	 eax, DWORD PTR $T21[ebp]
  00693	50		 push	 eax
  00694	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  0069a	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  0069f	8d 4d d8	 lea	 ecx, DWORD PTR $T21[ebp]
  006a2	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  006a6	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 142  : 		textLoader.GetTokenString("backfacefilename", &envData.strSkyBoxFaceFileName[1]);

  006ab	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@HMLADBDH@backfacefilename@
  006b0	8d 4d d8	 lea	 ecx, DWORD PTR $T22[ebp]
  006b3	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  006b8	8d 83 88 01 00
	00		 lea	 eax, DWORD PTR [ebx+392]
  006be	c6 45 fc 1a	 mov	 BYTE PTR __$EHRec$[ebp+8], 26 ; 0000001aH
  006c2	50		 push	 eax
  006c3	8d 45 d8	 lea	 eax, DWORD PTR $T22[ebp]
  006c6	50		 push	 eax
  006c7	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  006cd	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  006d2	8d 4d d8	 lea	 ecx, DWORD PTR $T22[ebp]
  006d5	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  006d9	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 143  : 		textLoader.GetTokenString("leftfacefilename", &envData.strSkyBoxFaceFileName[2]);

  006de	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@OKAELDDH@leftfacefilename@
  006e3	8d 4d d8	 lea	 ecx, DWORD PTR $T23[ebp]
  006e6	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  006eb	8d 83 a0 01 00
	00		 lea	 eax, DWORD PTR [ebx+416]
  006f1	c6 45 fc 1b	 mov	 BYTE PTR __$EHRec$[ebp+8], 27 ; 0000001bH
  006f5	50		 push	 eax
  006f6	8d 45 d8	 lea	 eax, DWORD PTR $T23[ebp]
  006f9	50		 push	 eax
  006fa	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00700	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  00705	8d 4d d8	 lea	 ecx, DWORD PTR $T23[ebp]
  00708	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0070c	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 144  : 		textLoader.GetTokenString("rightfacefilename", &envData.strSkyBoxFaceFileName[3]);

  00711	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@BGDBKDJG@rightfacefilename@
  00716	8d 4d d8	 lea	 ecx, DWORD PTR $T32[ebp]
  00719	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0071e	8d 83 b8 01 00
	00		 lea	 eax, DWORD PTR [ebx+440]
  00724	c6 45 fc 1c	 mov	 BYTE PTR __$EHRec$[ebp+8], 28 ; 0000001cH
  00728	50		 push	 eax
  00729	8d 45 d8	 lea	 eax, DWORD PTR $T32[ebp]
  0072c	50		 push	 eax
  0072d	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00733	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  00738	8d 4d d8	 lea	 ecx, DWORD PTR $T32[ebp]
  0073b	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0073f	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 145  : 		textLoader.GetTokenString("topfacefilename", &envData.strSkyBoxFaceFileName[4]);

  00744	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@ODMABPL@topfacefilename@
  00749	8d 4d d8	 lea	 ecx, DWORD PTR $T25[ebp]
  0074c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00751	8d 83 d0 01 00
	00		 lea	 eax, DWORD PTR [ebx+464]
  00757	c6 45 fc 1d	 mov	 BYTE PTR __$EHRec$[ebp+8], 29 ; 0000001dH
  0075b	50		 push	 eax
  0075c	8d 45 d8	 lea	 eax, DWORD PTR $T25[ebp]
  0075f	50		 push	 eax
  00760	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00766	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  0076b	8d 4d d8	 lea	 ecx, DWORD PTR $T25[ebp]
  0076e	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00772	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 146  : 		textLoader.GetTokenString("bottomfacefilename", &envData.strSkyBoxFaceFileName[5]);

  00777	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@PAPHNGLP@bottomfacefilename@
  0077c	8d 4d d8	 lea	 ecx, DWORD PTR $T26[ebp]
  0077f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00784	8d 83 e8 01 00
	00		 lea	 eax, DWORD PTR [ebx+488]
  0078a	c6 45 fc 1e	 mov	 BYTE PTR __$EHRec$[ebp+8], 30 ; 0000001eH
  0078e	50		 push	 eax
  0078f	8d 45 d8	 lea	 eax, DWORD PTR $T26[ebp]
  00792	50		 push	 eax
  00793	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00799	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  0079e	8d 4d d8	 lea	 ecx, DWORD PTR $T26[ebp]
  007a1	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  007a5	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 147  : 
; 148  : 
; 149  : 		textLoader.GetTokenVector2("cloudscale", &envData.v2CloudScale);

  007aa	68 00 00 00 00	 push	 OFFSET ??_C@_0L@HPPKMJB@cloudscale@
  007af	8d 4d d8	 lea	 ecx, DWORD PTR $T27[ebp]
  007b2	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  007b7	8d 83 00 02 00
	00		 lea	 eax, DWORD PTR [ebx+512]
  007bd	c6 45 fc 1f	 mov	 BYTE PTR __$EHRec$[ebp+8], 31 ; 0000001fH
  007c1	50		 push	 eax
  007c2	8d 45 d8	 lea	 eax, DWORD PTR $T27[ebp]
  007c5	50		 push	 eax
  007c6	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  007cc	e8 00 00 00 00	 call	 ?GetTokenVector2@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR2@@@Z ; CTextFileLoader::GetTokenVector2
  007d1	8d 4d d8	 lea	 ecx, DWORD PTR $T27[ebp]
  007d4	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  007d8	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 150  : 		textLoader.GetTokenFloat("cloudheight", &envData.fCloudHeight);

  007dd	68 00 00 00 00	 push	 OFFSET ??_C@_0M@JAHFJEDG@cloudheight@
  007e2	8d 4d d8	 lea	 ecx, DWORD PTR $T28[ebp]
  007e5	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  007ea	8d 83 08 02 00
	00		 lea	 eax, DWORD PTR [ebx+520]
  007f0	c6 45 fc 20	 mov	 BYTE PTR __$EHRec$[ebp+8], 32 ; 00000020H
  007f4	50		 push	 eax
  007f5	8d 45 d8	 lea	 eax, DWORD PTR $T28[ebp]
  007f8	50		 push	 eax
  007f9	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  007ff	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
  00804	8d 4d d8	 lea	 ecx, DWORD PTR $T28[ebp]
  00807	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0080b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 151  : 		textLoader.GetTokenVector2("cloudtexturescale", &envData.v2CloudTextureScale);

  00810	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@BBJMDDCO@cloudtexturescale@
  00815	8d 4d d8	 lea	 ecx, DWORD PTR $T29[ebp]
  00818	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0081d	8d 83 0c 02 00
	00		 lea	 eax, DWORD PTR [ebx+524]
  00823	c6 45 fc 21	 mov	 BYTE PTR __$EHRec$[ebp+8], 33 ; 00000021H
  00827	50		 push	 eax
  00828	8d 45 d8	 lea	 eax, DWORD PTR $T29[ebp]
  0082b	50		 push	 eax
  0082c	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00832	e8 00 00 00 00	 call	 ?GetTokenVector2@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR2@@@Z ; CTextFileLoader::GetTokenVector2
  00837	8d 4d d8	 lea	 ecx, DWORD PTR $T29[ebp]
  0083a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0083e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 152  : 		textLoader.GetTokenVector2("cloudspeed", &envData.v2CloudSpeed);

  00843	68 00 00 00 00	 push	 OFFSET ??_C@_0L@LJBHNMFK@cloudspeed@
  00848	8d 4d d8	 lea	 ecx, DWORD PTR $T30[ebp]
  0084b	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00850	8d 83 14 02 00
	00		 lea	 eax, DWORD PTR [ebx+532]
  00856	c6 45 fc 22	 mov	 BYTE PTR __$EHRec$[ebp+8], 34 ; 00000022H
  0085a	50		 push	 eax
  0085b	8d 45 d8	 lea	 eax, DWORD PTR $T30[ebp]
  0085e	50		 push	 eax
  0085f	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00865	e8 00 00 00 00	 call	 ?GetTokenVector2@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR2@@@Z ; CTextFileLoader::GetTokenVector2
  0086a	8d 4d d8	 lea	 ecx, DWORD PTR $T30[ebp]
  0086d	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00871	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 153  : 		textLoader.GetTokenString("cloudtexturefilename", &envData.strCloudTextureFileName);

  00876	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@KCIBJMLM@cloudtexturefilename@
  0087b	8d 4d d8	 lea	 ecx, DWORD PTR $T31[ebp]
  0087e	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00883	8d 83 1c 02 00
	00		 lea	 eax, DWORD PTR [ebx+540]
  00889	c6 45 fc 23	 mov	 BYTE PTR __$EHRec$[ebp+8], 35 ; 00000023H
  0088d	50		 push	 eax
  0088e	8d 45 d8	 lea	 eax, DWORD PTR $T31[ebp]
  00891	50		 push	 eax
  00892	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00898	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  0089d	8d 4d d8	 lea	 ecx, DWORD PTR $T31[ebp]
  008a0	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  008a4	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 154  : 
; 155  : 		CTokenVector * pTokenVectorCloudColor;
; 156  : 		if(textLoader.GetTokenVector("cloudcolor", &pTokenVectorCloudColor))

  008a9	68 00 00 00 00	 push	 OFFSET ??_C@_0L@DEHGKBBJ@cloudcolor@
  008ae	8d 4d d8	 lea	 ecx, DWORD PTR $T33[ebp]
  008b1	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  008b6	8d 85 30 ff ff
	ff		 lea	 eax, DWORD PTR _pTokenVectorCloudColor$5[ebp]
  008bc	c6 45 fc 24	 mov	 BYTE PTR __$EHRec$[ebp+8], 36 ; 00000024H
  008c0	50		 push	 eax
  008c1	8d 45 d8	 lea	 eax, DWORD PTR $T33[ebp]
  008c4	50		 push	 eax
  008c5	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  008cb	e8 00 00 00 00	 call	 ?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z ; CTextFileLoader::GetTokenVector
  008d0	8d 4d d8	 lea	 ecx, DWORD PTR $T33[ebp]
  008d3	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  008d7	8b f0		 mov	 esi, eax
  008d9	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  008de	85 f6		 test	 esi, esi
  008e0	0f 84 40 01 00
	00		 je	 $LN14@Environmen
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1900 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  008e6	8b b5 30 ff ff
	ff		 mov	 esi, DWORD PTR _pTokenVectorCloudColor$5[ebp]
  008ec	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  008f1	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  008f4	2b 0e		 sub	 ecx, DWORD PTR [esi]
  008f6	f7 e9		 imul	 ecx
  008f8	c1 fa 02	 sar	 edx, 2
  008fb	8b c2		 mov	 eax, edx
  008fd	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00900	03 c2		 add	 eax, edx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp

; 157  : 		if ( 0 == pTokenVectorCloudColor->size()%8)

  00902	a8 07		 test	 al, 7
  00904	0f 85 1c 01 00
	00		 jne	 $LN14@Environmen

; 159  : 			envData.CloudGradientColor.m_FirstColor.r = atof(pTokenVectorCloudColor->at(0).c_str());

  0090a	6a 00		 push	 0
  0090c	8b ce		 mov	 ecx, esi
  0090e	e8 00 00 00 00	 call	 ?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 434  :         return _Myres > _Small_string_capacity;

  00913	83 78 14 0f	 cmp	 DWORD PTR [eax+20], 15	; 0000000fH

; 426  :         if (_Large_mode_engaged()) {

  00917	76 02		 jbe	 SHORT $LN314@Environmen

; 427  :             _Result = _Unfancy(_Bx._Ptr);

  00919	8b 00		 mov	 eax, DWORD PTR [eax]
$LN314@Environmen:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp

; 159  : 			envData.CloudGradientColor.m_FirstColor.r = atof(pTokenVectorCloudColor->at(0).c_str());

  0091b	50		 push	 eax
  0091c	e8 00 00 00 00	 call	 _atof

; 160  : 			envData.CloudGradientColor.m_FirstColor.g = atof(pTokenVectorCloudColor->at(1).c_str());

  00921	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR _pTokenVectorCloudColor$5[ebp]
  00927	83 c4 04	 add	 esp, 4
  0092a	d9 9b 34 02 00
	00		 fstp	 DWORD PTR [ebx+564]
  00930	6a 01		 push	 1
  00932	e8 00 00 00 00	 call	 ?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 434  :         return _Myres > _Small_string_capacity;

  00937	83 78 14 0f	 cmp	 DWORD PTR [eax+20], 15	; 0000000fH

; 426  :         if (_Large_mode_engaged()) {

  0093b	76 02		 jbe	 SHORT $LN241@Environmen

; 427  :             _Result = _Unfancy(_Bx._Ptr);

  0093d	8b 00		 mov	 eax, DWORD PTR [eax]
$LN241@Environmen:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp

; 160  : 			envData.CloudGradientColor.m_FirstColor.g = atof(pTokenVectorCloudColor->at(1).c_str());

  0093f	50		 push	 eax
  00940	e8 00 00 00 00	 call	 _atof

; 161  : 			envData.CloudGradientColor.m_FirstColor.b = atof(pTokenVectorCloudColor->at(2).c_str());

  00945	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR _pTokenVectorCloudColor$5[ebp]
  0094b	83 c4 04	 add	 esp, 4
  0094e	d9 9b 38 02 00
	00		 fstp	 DWORD PTR [ebx+568]
  00954	6a 02		 push	 2
  00956	e8 00 00 00 00	 call	 ?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 434  :         return _Myres > _Small_string_capacity;

  0095b	83 78 14 0f	 cmp	 DWORD PTR [eax+20], 15	; 0000000fH

; 426  :         if (_Large_mode_engaged()) {

  0095f	76 02		 jbe	 SHORT $LN251@Environmen

; 427  :             _Result = _Unfancy(_Bx._Ptr);

  00961	8b 00		 mov	 eax, DWORD PTR [eax]
$LN251@Environmen:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp

; 161  : 			envData.CloudGradientColor.m_FirstColor.b = atof(pTokenVectorCloudColor->at(2).c_str());

  00963	50		 push	 eax
  00964	e8 00 00 00 00	 call	 _atof

; 162  : 			envData.CloudGradientColor.m_FirstColor.a = atof(pTokenVectorCloudColor->at(3).c_str());

  00969	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR _pTokenVectorCloudColor$5[ebp]
  0096f	83 c4 04	 add	 esp, 4
  00972	d9 9b 3c 02 00
	00		 fstp	 DWORD PTR [ebx+572]
  00978	6a 03		 push	 3
  0097a	e8 00 00 00 00	 call	 ?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 434  :         return _Myres > _Small_string_capacity;

  0097f	83 78 14 0f	 cmp	 DWORD PTR [eax+20], 15	; 0000000fH

; 426  :         if (_Large_mode_engaged()) {

  00983	76 02		 jbe	 SHORT $LN261@Environmen

; 427  :             _Result = _Unfancy(_Bx._Ptr);

  00985	8b 00		 mov	 eax, DWORD PTR [eax]
$LN261@Environmen:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp

; 162  : 			envData.CloudGradientColor.m_FirstColor.a = atof(pTokenVectorCloudColor->at(3).c_str());

  00987	50		 push	 eax
  00988	e8 00 00 00 00	 call	 _atof

; 164  : 			envData.CloudGradientColor.m_SecondColor.r = atof(pTokenVectorCloudColor->at(4).c_str());

  0098d	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR _pTokenVectorCloudColor$5[ebp]
  00993	83 c4 04	 add	 esp, 4
  00996	d9 9b 40 02 00
	00		 fstp	 DWORD PTR [ebx+576]
  0099c	6a 04		 push	 4
  0099e	e8 00 00 00 00	 call	 ?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 434  :         return _Myres > _Small_string_capacity;

  009a3	83 78 14 0f	 cmp	 DWORD PTR [eax+20], 15	; 0000000fH

; 426  :         if (_Large_mode_engaged()) {

  009a7	76 02		 jbe	 SHORT $LN271@Environmen

; 427  :             _Result = _Unfancy(_Bx._Ptr);

  009a9	8b 00		 mov	 eax, DWORD PTR [eax]
$LN271@Environmen:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp

; 164  : 			envData.CloudGradientColor.m_SecondColor.r = atof(pTokenVectorCloudColor->at(4).c_str());

  009ab	50		 push	 eax
  009ac	e8 00 00 00 00	 call	 _atof

; 165  : 			envData.CloudGradientColor.m_SecondColor.g = atof(pTokenVectorCloudColor->at(5).c_str());

  009b1	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR _pTokenVectorCloudColor$5[ebp]
  009b7	83 c4 04	 add	 esp, 4
  009ba	d9 9b 44 02 00
	00		 fstp	 DWORD PTR [ebx+580]
  009c0	6a 05		 push	 5
  009c2	e8 00 00 00 00	 call	 ?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 434  :         return _Myres > _Small_string_capacity;

  009c7	83 78 14 0f	 cmp	 DWORD PTR [eax+20], 15	; 0000000fH

; 426  :         if (_Large_mode_engaged()) {

  009cb	76 02		 jbe	 SHORT $LN281@Environmen

; 427  :             _Result = _Unfancy(_Bx._Ptr);

  009cd	8b 00		 mov	 eax, DWORD PTR [eax]
$LN281@Environmen:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp

; 165  : 			envData.CloudGradientColor.m_SecondColor.g = atof(pTokenVectorCloudColor->at(5).c_str());

  009cf	50		 push	 eax
  009d0	e8 00 00 00 00	 call	 _atof

; 166  : 			envData.CloudGradientColor.m_SecondColor.b = atof(pTokenVectorCloudColor->at(6).c_str());

  009d5	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR _pTokenVectorCloudColor$5[ebp]
  009db	83 c4 04	 add	 esp, 4
  009de	d9 9b 48 02 00
	00		 fstp	 DWORD PTR [ebx+584]
  009e4	6a 06		 push	 6
  009e6	e8 00 00 00 00	 call	 ?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 434  :         return _Myres > _Small_string_capacity;

  009eb	83 78 14 0f	 cmp	 DWORD PTR [eax+20], 15	; 0000000fH

; 426  :         if (_Large_mode_engaged()) {

  009ef	76 02		 jbe	 SHORT $LN291@Environmen

; 427  :             _Result = _Unfancy(_Bx._Ptr);

  009f1	8b 00		 mov	 eax, DWORD PTR [eax]
$LN291@Environmen:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp

; 166  : 			envData.CloudGradientColor.m_SecondColor.b = atof(pTokenVectorCloudColor->at(6).c_str());

  009f3	50		 push	 eax
  009f4	e8 00 00 00 00	 call	 _atof

; 167  : 			envData.CloudGradientColor.m_SecondColor.a = atof(pTokenVectorCloudColor->at(7).c_str());

  009f9	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR _pTokenVectorCloudColor$5[ebp]
  009ff	83 c4 04	 add	 esp, 4
  00a02	d9 9b 4c 02 00
	00		 fstp	 DWORD PTR [ebx+588]
  00a08	6a 07		 push	 7
  00a0a	e8 00 00 00 00	 call	 ?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 434  :         return _Myres > _Small_string_capacity;

  00a0f	83 78 14 0f	 cmp	 DWORD PTR [eax+20], 15	; 0000000fH

; 426  :         if (_Large_mode_engaged()) {

  00a13	76 02		 jbe	 SHORT $LN301@Environmen

; 427  :             _Result = _Unfancy(_Bx._Ptr);

  00a15	8b 00		 mov	 eax, DWORD PTR [eax]
$LN301@Environmen:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp

; 167  : 			envData.CloudGradientColor.m_SecondColor.a = atof(pTokenVectorCloudColor->at(7).c_str());

  00a17	50		 push	 eax
  00a18	e8 00 00 00 00	 call	 _atof
  00a1d	d9 9b 50 02 00
	00		 fstp	 DWORD PTR [ebx+592]
  00a23	83 c4 04	 add	 esp, 4
$LN14@Environmen:

; 168  : 		}
; 169  : 
; 170  : 		BYTE byGradientCount = envData.bySkyBoxGradientLevelUpper+envData.bySkyBoxGradientLevelLower;

  00a26	8a 07		 mov	 al, BYTE PTR [edi]

; 171  : 		CTokenVector * pTokenVector;
; 172  : 		if (textLoader.GetTokenVector("gradient", &pTokenVector))

  00a28	8d 4d d8	 lea	 ecx, DWORD PTR $T34[ebp]
  00a2b	02 83 6d 01 00
	00		 add	 al, BYTE PTR [ebx+365]
  00a31	68 00 00 00 00	 push	 OFFSET ??_C@_08OAOFNDBJ@gradient@
  00a36	88 85 3f ff ff
	ff		 mov	 BYTE PTR _byGradientCount$1$[ebp], al
  00a3c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00a41	8d 85 38 ff ff
	ff		 lea	 eax, DWORD PTR _pTokenVector$6[ebp]
  00a47	c6 45 fc 25	 mov	 BYTE PTR __$EHRec$[ebp+8], 37 ; 00000025H
  00a4b	50		 push	 eax
  00a4c	8d 45 d8	 lea	 eax, DWORD PTR $T34[ebp]
  00a4f	50		 push	 eax
  00a50	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00a56	e8 00 00 00 00	 call	 ?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z ; CTextFileLoader::GetTokenVector
  00a5b	8d 4d d8	 lea	 ecx, DWORD PTR $T34[ebp]
  00a5e	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00a62	8b f0		 mov	 esi, eax
  00a64	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00a69	85 f6		 test	 esi, esi
  00a6b	0f 84 7d 03 00
	00		 je	 $LN3@Environmen
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1900 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00a71	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR _pTokenVector$6[ebp]
  00a77	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00a7a	2b 08		 sub	 ecx, DWORD PTR [eax]
  00a7c	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00a81	f7 e9		 imul	 ecx
  00a83	c1 fa 02	 sar	 edx, 2
  00a86	8b c2		 mov	 eax, edx
  00a88	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00a8b	03 c2		 add	 eax, edx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp

; 173  : 		if (0 == pTokenVector->size()%8)

  00a8d	a8 07		 test	 al, 7
  00a8f	0f 85 59 03 00
	00		 jne	 $LN3@Environmen

; 174  : 		if (byGradientCount == pTokenVector->size()/8)

  00a95	0f b6 bd 3f ff
	ff ff		 movzx	 edi, BYTE PTR _byGradientCount$1$[ebp]
  00a9c	c1 e8 03	 shr	 eax, 3
  00a9f	89 bd 1c ff ff
	ff		 mov	 DWORD PTR $T2[ebp], edi
  00aa5	3b f8		 cmp	 edi, eax
  00aa7	0f 85 41 03 00
	00		 jne	 $LN3@Environmen
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1797 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00aad	8b 83 54 02 00
	00		 mov	 eax, DWORD PTR [ebx+596]
  00ab3	8d b3 54 02 00
	00		 lea	 esi, DWORD PTR [ebx+596]
  00ab9	89 b5 2c ff ff
	ff		 mov	 DWORD PTR __My_data$1$[ebp], esi
  00abf	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
  00ac2	74 03		 je	 SHORT $LN320@Environmen

; 1798 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1799 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1800 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1801 :             return;
; 1802 :         }
; 1803 : 
; 1804 :         _My_data._Orphan_all();
; 1805 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1806 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1807 :         _Mylast = _Myfirst;

  00ac4	89 46 04	 mov	 DWORD PTR [esi+4], eax
$LN320@Environmen:

; 1615 :         _Resize(_Newsize, _Value_init_tag{});

  00ac7	8d 85 3f ff ff
	ff		 lea	 eax, DWORD PTR $T7[ebp]
  00acd	8b ce		 mov	 ecx, esi
  00acf	50		 push	 eax
  00ad0	57		 push	 edi
  00ad1	e8 00 00 00 00	 call	 ??$_Resize@U_Value_init_tag@std@@@?$vector@UTGradientColor@@V?$allocator@UTGradientColor@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<TGradientColor,std::allocator<TGradientColor> >::_Resize<std::_Value_init_tag>
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp

; 178  : 			for (DWORD i = 0; i < byGradientCount; ++i)

  00ad6	c7 85 20 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$1$[ebp], 0
  00ae0	85 ff		 test	 edi, edi
  00ae2	0f 84 06 03 00
	00		 je	 $LN3@Environmen
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1615 :         _Resize(_Newsize, _Value_init_tag{});

  00ae8	bb 02 00 00 00	 mov	 ebx, 2
  00aed	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv2184[ebp], 0
  00af7	8d 7b 2e	 lea	 edi, DWORD PTR [ebx+46]
  00afa	66 0f 1f 44 00
	00		 npad	 6
$LL4@Environmen:

; 1934 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00b00	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR _pTokenVector$6[ebp]
  00b06	8b 10		 mov	 edx, DWORD PTR [eax]
  00b08	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00b0b	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00b10	2b ca		 sub	 ecx, edx
  00b12	89 95 28 ff ff
	ff		 mov	 DWORD PTR tv2201[ebp], edx
  00b18	f7 e9		 imul	 ecx
  00b1a	8d 43 fe	 lea	 eax, DWORD PTR [ebx-2]
  00b1d	c1 fa 02	 sar	 edx, 2
  00b20	8b ca		 mov	 ecx, edx
  00b22	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00b25	03 ca		 add	 ecx, edx
  00b27	3b c8		 cmp	 ecx, eax
  00b29	0f 86 4a 04 00
	00		 jbe	 $LN327@Environmen

; 1936 :         }
; 1937 : 
; 1938 :         return _My_data._Myfirst[_Pos];

  00b2f	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR tv2201[ebp]
  00b35	83 c0 d0	 add	 eax, -48		; ffffffd0H
  00b38	03 c7		 add	 eax, edi
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 434  :         return _Myres > _Small_string_capacity;

  00b3a	83 78 14 0f	 cmp	 DWORD PTR [eax+20], 15	; 0000000fH

; 426  :         if (_Large_mode_engaged()) {

  00b3e	76 02		 jbe	 SHORT $LN222@Environmen

; 427  :             _Result = _Unfancy(_Bx._Ptr);

  00b40	8b 00		 mov	 eax, DWORD PTR [eax]
$LN222@Environmen:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1919 :         return _My_data._Myfirst[_Pos];

  00b42	8b 36		 mov	 esi, DWORD PTR [esi]
  00b44	03 b5 34 ff ff
	ff		 add	 esi, DWORD PTR tv2184[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp

; 180  : 				envData.SkyBoxGradientColorVector[i].m_FirstColor.r = atof(pTokenVector->at(i*8+0).c_str());

  00b4a	50		 push	 eax
  00b4b	e8 00 00 00 00	 call	 _atof
  00b50	d9 1e		 fstp	 DWORD PTR [esi]
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1934 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00b52	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR _pTokenVector$6[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp

; 180  : 				envData.SkyBoxGradientColorVector[i].m_FirstColor.r = atof(pTokenVector->at(i*8+0).c_str());

  00b58	83 c4 04	 add	 esp, 4
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1934 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00b5b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00b5e	8b 30		 mov	 esi, DWORD PTR [eax]
  00b60	2b ce		 sub	 ecx, esi
  00b62	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00b67	f7 e9		 imul	 ecx
  00b69	8d 43 ff	 lea	 eax, DWORD PTR [ebx-1]
  00b6c	c1 fa 02	 sar	 edx, 2
  00b6f	8b ca		 mov	 ecx, edx
  00b71	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00b74	03 ca		 add	 ecx, edx
  00b76	3b c8		 cmp	 ecx, eax
  00b78	0f 86 fb 03 00
	00		 jbe	 $LN327@Environmen

; 1936 :         }
; 1937 : 
; 1938 :         return _My_data._Myfirst[_Pos];

  00b7e	8d 46 e8	 lea	 eax, DWORD PTR [esi-24]
  00b81	03 c7		 add	 eax, edi
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 434  :         return _Myres > _Small_string_capacity;

  00b83	83 78 14 0f	 cmp	 DWORD PTR [eax+20], 15	; 0000000fH

; 426  :         if (_Large_mode_engaged()) {

  00b87	76 02		 jbe	 SHORT $LN110@Environmen

; 427  :             _Result = _Unfancy(_Bx._Ptr);

  00b89	8b 00		 mov	 eax, DWORD PTR [eax]
$LN110@Environmen:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1919 :         return _My_data._Myfirst[_Pos];

  00b8b	8b b5 2c ff ff
	ff		 mov	 esi, DWORD PTR __My_data$1$[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp

; 181  : 				envData.SkyBoxGradientColorVector[i].m_FirstColor.g = atof(pTokenVector->at(i*8+1).c_str());

  00b91	50		 push	 eax
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1919 :         return _My_data._Myfirst[_Pos];

  00b92	8b 36		 mov	 esi, DWORD PTR [esi]
  00b94	03 b5 34 ff ff
	ff		 add	 esi, DWORD PTR tv2184[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp

; 181  : 				envData.SkyBoxGradientColorVector[i].m_FirstColor.g = atof(pTokenVector->at(i*8+1).c_str());

  00b9a	e8 00 00 00 00	 call	 _atof
  00b9f	d9 5e 04	 fstp	 DWORD PTR [esi+4]
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1934 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00ba2	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR _pTokenVector$6[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp

; 181  : 				envData.SkyBoxGradientColorVector[i].m_FirstColor.g = atof(pTokenVector->at(i*8+1).c_str());

  00ba8	83 c4 04	 add	 esp, 4
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1934 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00bab	8b 10		 mov	 edx, DWORD PTR [eax]
  00bad	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00bb0	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00bb5	2b ca		 sub	 ecx, edx
  00bb7	89 95 28 ff ff
	ff		 mov	 DWORD PTR tv2190[ebp], edx
  00bbd	f7 e9		 imul	 ecx
  00bbf	c1 fa 02	 sar	 edx, 2
  00bc2	8b c2		 mov	 eax, edx
  00bc4	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00bc7	03 c2		 add	 eax, edx
  00bc9	3b c3		 cmp	 eax, ebx
  00bcb	0f 86 a8 03 00
	00		 jbe	 $LN327@Environmen

; 1919 :         return _My_data._Myfirst[_Pos];

  00bd1	8b b5 2c ff ff
	ff		 mov	 esi, DWORD PTR __My_data$1$[ebp]
  00bd7	8b 06		 mov	 eax, DWORD PTR [esi]
  00bd9	03 85 34 ff ff
	ff		 add	 eax, DWORD PTR tv2184[ebp]
  00bdf	89 85 24 ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax

; 1938 :         return _My_data._Myfirst[_Pos];

  00be5	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR tv2190[ebp]
  00beb	03 c7		 add	 eax, edi
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 434  :         return _Myres > _Small_string_capacity;

  00bed	83 78 14 0f	 cmp	 DWORD PTR [eax+20], 15	; 0000000fH

; 426  :         if (_Large_mode_engaged()) {

  00bf1	76 02		 jbe	 SHORT $LN142@Environmen

; 427  :             _Result = _Unfancy(_Bx._Ptr);

  00bf3	8b 00		 mov	 eax, DWORD PTR [eax]
$LN142@Environmen:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp

; 182  : 				envData.SkyBoxGradientColorVector[i].m_FirstColor.b = atof(pTokenVector->at(i*8+2).c_str());

  00bf5	50		 push	 eax
  00bf6	e8 00 00 00 00	 call	 _atof
  00bfb	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  00c01	83 c4 04	 add	 esp, 4
  00c04	d9 58 08	 fstp	 DWORD PTR [eax+8]
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1934 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00c07	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR _pTokenVector$6[ebp]
  00c0d	8b 10		 mov	 edx, DWORD PTR [eax]
  00c0f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00c12	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00c17	2b ca		 sub	 ecx, edx
  00c19	89 95 24 ff ff
	ff		 mov	 DWORD PTR tv2204[ebp], edx
  00c1f	f7 e9		 imul	 ecx
  00c21	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
  00c24	c1 fa 02	 sar	 edx, 2
  00c27	8b ca		 mov	 ecx, edx
  00c29	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00c2c	03 ca		 add	 ecx, edx
  00c2e	3b c8		 cmp	 ecx, eax
  00c30	0f 86 43 03 00
	00		 jbe	 $LN327@Environmen

; 1936 :         }
; 1937 : 
; 1938 :         return _My_data._Myfirst[_Pos];

  00c36	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR tv2204[ebp]
  00c3c	83 c0 18	 add	 eax, 24			; 00000018H
  00c3f	03 c7		 add	 eax, edi
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 434  :         return _Myres > _Small_string_capacity;

  00c41	83 78 14 0f	 cmp	 DWORD PTR [eax+20], 15	; 0000000fH

; 426  :         if (_Large_mode_engaged()) {

  00c45	76 02		 jbe	 SHORT $LN152@Environmen

; 427  :             _Result = _Unfancy(_Bx._Ptr);

  00c47	8b 00		 mov	 eax, DWORD PTR [eax]
$LN152@Environmen:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1919 :         return _My_data._Myfirst[_Pos];

  00c49	8b 36		 mov	 esi, DWORD PTR [esi]
  00c4b	03 b5 34 ff ff
	ff		 add	 esi, DWORD PTR tv2184[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp

; 183  : 				envData.SkyBoxGradientColorVector[i].m_FirstColor.a = atof(pTokenVector->at(i*8+3).c_str());

  00c51	50		 push	 eax
  00c52	e8 00 00 00 00	 call	 _atof
  00c57	d9 5e 0c	 fstp	 DWORD PTR [esi+12]
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1934 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00c5a	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR _pTokenVector$6[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp

; 183  : 				envData.SkyBoxGradientColorVector[i].m_FirstColor.a = atof(pTokenVector->at(i*8+3).c_str());

  00c60	83 c4 04	 add	 esp, 4
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1934 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00c63	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00c66	8b 30		 mov	 esi, DWORD PTR [eax]
  00c68	2b ce		 sub	 ecx, esi
  00c6a	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00c6f	f7 e9		 imul	 ecx
  00c71	8d 43 02	 lea	 eax, DWORD PTR [ebx+2]
  00c74	c1 fa 02	 sar	 edx, 2
  00c77	8b ca		 mov	 ecx, edx
  00c79	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00c7c	03 ca		 add	 ecx, edx
  00c7e	3b c8		 cmp	 ecx, eax
  00c80	0f 86 f3 02 00
	00		 jbe	 $LN327@Environmen

; 1936 :         }
; 1937 : 
; 1938 :         return _My_data._Myfirst[_Pos];

  00c86	8d 46 30	 lea	 eax, DWORD PTR [esi+48]
  00c89	03 c7		 add	 eax, edi
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 434  :         return _Myres > _Small_string_capacity;

  00c8b	83 78 14 0f	 cmp	 DWORD PTR [eax+20], 15	; 0000000fH

; 426  :         if (_Large_mode_engaged()) {

  00c8f	76 02		 jbe	 SHORT $LN168@Environmen

; 427  :             _Result = _Unfancy(_Bx._Ptr);

  00c91	8b 00		 mov	 eax, DWORD PTR [eax]
$LN168@Environmen:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1919 :         return _My_data._Myfirst[_Pos];

  00c93	8b b5 2c ff ff
	ff		 mov	 esi, DWORD PTR __My_data$1$[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp

; 185  : 				envData.SkyBoxGradientColorVector[i].m_SecondColor.r = atof(pTokenVector->at(i*8+4).c_str());

  00c99	50		 push	 eax
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1919 :         return _My_data._Myfirst[_Pos];

  00c9a	8b 36		 mov	 esi, DWORD PTR [esi]
  00c9c	03 b5 34 ff ff
	ff		 add	 esi, DWORD PTR tv2184[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp

; 185  : 				envData.SkyBoxGradientColorVector[i].m_SecondColor.r = atof(pTokenVector->at(i*8+4).c_str());

  00ca2	e8 00 00 00 00	 call	 _atof
  00ca7	d9 5e 10	 fstp	 DWORD PTR [esi+16]
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1934 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00caa	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR _pTokenVector$6[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp

; 185  : 				envData.SkyBoxGradientColorVector[i].m_SecondColor.r = atof(pTokenVector->at(i*8+4).c_str());

  00cb0	83 c4 04	 add	 esp, 4
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1934 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00cb3	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00cb6	8b 30		 mov	 esi, DWORD PTR [eax]
  00cb8	2b ce		 sub	 ecx, esi
  00cba	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00cbf	f7 e9		 imul	 ecx
  00cc1	8d 43 03	 lea	 eax, DWORD PTR [ebx+3]
  00cc4	c1 fa 02	 sar	 edx, 2
  00cc7	8b ca		 mov	 ecx, edx
  00cc9	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00ccc	03 ca		 add	 ecx, edx
  00cce	3b c8		 cmp	 ecx, eax
  00cd0	0f 86 a3 02 00
	00		 jbe	 $LN327@Environmen

; 1936 :         }
; 1937 : 
; 1938 :         return _My_data._Myfirst[_Pos];

  00cd6	8d 4e 48	 lea	 ecx, DWORD PTR [esi+72]
  00cd9	03 cf		 add	 ecx, edi
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 434  :         return _Myres > _Small_string_capacity;

  00cdb	83 79 14 0f	 cmp	 DWORD PTR [ecx+20], 15	; 0000000fH

; 426  :         if (_Large_mode_engaged()) {

  00cdf	76 02		 jbe	 SHORT $LN184@Environmen

; 427  :             _Result = _Unfancy(_Bx._Ptr);

  00ce1	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN184@Environmen:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1919 :         return _My_data._Myfirst[_Pos];

  00ce3	8b 85 2c ff ff
	ff		 mov	 eax, DWORD PTR __My_data$1$[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp

; 186  : 				envData.SkyBoxGradientColorVector[i].m_SecondColor.g = atof(pTokenVector->at(i*8+5).c_str());

  00ce9	51		 push	 ecx
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1919 :         return _My_data._Myfirst[_Pos];

  00cea	8b 30		 mov	 esi, DWORD PTR [eax]
  00cec	03 b5 34 ff ff
	ff		 add	 esi, DWORD PTR tv2184[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp

; 186  : 				envData.SkyBoxGradientColorVector[i].m_SecondColor.g = atof(pTokenVector->at(i*8+5).c_str());

  00cf2	e8 00 00 00 00	 call	 _atof
  00cf7	d9 5e 14	 fstp	 DWORD PTR [esi+20]
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1934 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00cfa	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR _pTokenVector$6[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp

; 186  : 				envData.SkyBoxGradientColorVector[i].m_SecondColor.g = atof(pTokenVector->at(i*8+5).c_str());

  00d00	83 c4 04	 add	 esp, 4
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1934 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00d03	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00d06	8b 30		 mov	 esi, DWORD PTR [eax]
  00d08	2b ce		 sub	 ecx, esi
  00d0a	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00d0f	f7 e9		 imul	 ecx
  00d11	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  00d14	c1 fa 02	 sar	 edx, 2
  00d17	8b ca		 mov	 ecx, edx
  00d19	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00d1c	03 ca		 add	 ecx, edx
  00d1e	3b c8		 cmp	 ecx, eax
  00d20	0f 86 53 02 00
	00		 jbe	 $LN327@Environmen

; 1936 :         }
; 1937 : 
; 1938 :         return _My_data._Myfirst[_Pos];

  00d26	8d 4e 60	 lea	 ecx, DWORD PTR [esi+96]
  00d29	03 cf		 add	 ecx, edi
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 434  :         return _Myres > _Small_string_capacity;

  00d2b	83 79 14 0f	 cmp	 DWORD PTR [ecx+20], 15	; 0000000fH

; 426  :         if (_Large_mode_engaged()) {

  00d2f	76 02		 jbe	 SHORT $LN126@Environmen

; 427  :             _Result = _Unfancy(_Bx._Ptr);

  00d31	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN126@Environmen:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1919 :         return _My_data._Myfirst[_Pos];

  00d33	8b 85 2c ff ff
	ff		 mov	 eax, DWORD PTR __My_data$1$[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp

; 187  : 				envData.SkyBoxGradientColorVector[i].m_SecondColor.b = atof(pTokenVector->at(i*8+6).c_str());

  00d39	51		 push	 ecx
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1919 :         return _My_data._Myfirst[_Pos];

  00d3a	8b 30		 mov	 esi, DWORD PTR [eax]
  00d3c	03 b5 34 ff ff
	ff		 add	 esi, DWORD PTR tv2184[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp

; 187  : 				envData.SkyBoxGradientColorVector[i].m_SecondColor.b = atof(pTokenVector->at(i*8+6).c_str());

  00d42	e8 00 00 00 00	 call	 _atof
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1919 :         return _My_data._Myfirst[_Pos];

  00d47	8b 85 2c ff ff
	ff		 mov	 eax, DWORD PTR __My_data$1$[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp

; 187  : 				envData.SkyBoxGradientColorVector[i].m_SecondColor.b = atof(pTokenVector->at(i*8+6).c_str());

  00d4d	83 c4 04	 add	 esp, 4
  00d50	d9 5e 18	 fstp	 DWORD PTR [esi+24]
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1919 :         return _My_data._Myfirst[_Pos];

  00d53	8b b5 34 ff ff
	ff		 mov	 esi, DWORD PTR tv2184[ebp]
  00d59	8b 00		 mov	 eax, DWORD PTR [eax]
  00d5b	03 c6		 add	 eax, esi
  00d5d	89 85 28 ff ff
	ff		 mov	 DWORD PTR $T4[ebp], eax

; 1934 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00d63	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR _pTokenVector$6[ebp]
  00d69	8b 10		 mov	 edx, DWORD PTR [eax]
  00d6b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00d6e	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00d73	2b ca		 sub	 ecx, edx
  00d75	89 95 24 ff ff
	ff		 mov	 DWORD PTR tv2210[ebp], edx
  00d7b	f7 e9		 imul	 ecx
  00d7d	8d 43 05	 lea	 eax, DWORD PTR [ebx+5]
  00d80	c1 fa 02	 sar	 edx, 2
  00d83	8b ca		 mov	 ecx, edx
  00d85	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00d88	03 ca		 add	 ecx, edx
  00d8a	3b c8		 cmp	 ecx, eax
  00d8c	0f 86 e7 01 00
	00		 jbe	 $LN327@Environmen

; 1936 :         }
; 1937 : 
; 1938 :         return _My_data._Myfirst[_Pos];

  00d92	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR tv2210[ebp]
  00d98	83 c0 78	 add	 eax, 120		; 00000078H
  00d9b	03 c7		 add	 eax, edi
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 434  :         return _Myres > _Small_string_capacity;

  00d9d	83 78 14 0f	 cmp	 DWORD PTR [eax+20], 15	; 0000000fH

; 426  :         if (_Large_mode_engaged()) {

  00da1	76 02		 jbe	 SHORT $LN209@Environmen

; 427  :             _Result = _Unfancy(_Bx._Ptr);

  00da3	8b 00		 mov	 eax, DWORD PTR [eax]
$LN209@Environmen:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp

; 188  : 				envData.SkyBoxGradientColorVector[i].m_SecondColor.a = atof(pTokenVector->at(i*8+7).c_str());

  00da5	50		 push	 eax
  00da6	e8 00 00 00 00	 call	 _atof
  00dab	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR $T4[ebp]
  00db1	83 c6 20	 add	 esi, 32			; 00000020H
  00db4	83 c4 04	 add	 esp, 4
  00db7	89 b5 34 ff ff
	ff		 mov	 DWORD PTR tv2184[ebp], esi
  00dbd	8b b5 2c ff ff
	ff		 mov	 esi, DWORD PTR __My_data$1$[ebp]
  00dc3	83 c3 08	 add	 ebx, 8
  00dc6	81 c7 c0 00 00
	00		 add	 edi, 192		; 000000c0H
  00dcc	d9 58 1c	 fstp	 DWORD PTR [eax+28]
  00dcf	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _i$1$[ebp]
  00dd5	40		 inc	 eax
  00dd6	89 85 20 ff ff
	ff		 mov	 DWORD PTR _i$1$[ebp], eax
  00ddc	3b 85 1c ff ff
	ff		 cmp	 eax, DWORD PTR $T2[ebp]
  00de2	0f 82 18 fd ff
	ff		 jb	 $LL4@Environmen
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1934 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00de8	8b 9d 18 ff ff
	ff		 mov	 ebx, DWORD PTR _envData$GSCopy$1$[ebp]
$LN3@Environmen:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp

; 192  : 		textLoader.SetParentNode();

  00dee	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00df4	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
$LN12@Environmen:

; 193  : 	}
; 194  : 
; 195  : 	if (textLoader.SetChildNode("lensflare"))

  00df9	68 00 00 00 00	 push	 OFFSET ??_C@_09JHLBAKBC@lensflare@
  00dfe	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00e04	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHPBD@Z ; CTextFileLoader::SetChildNode
  00e09	85 c0		 test	 eax, eax
  00e0b	0f 84 3d 01 00
	00		 je	 $LN18@Environmen

; 196  : 	{
; 197  : 		textLoader.GetTokenBoolean("enable", &envData.bLensFlareEnable);

  00e11	68 00 00 00 00	 push	 OFFSET ??_C@_06OFNJOBDK@enable@
  00e16	8d 4d d8	 lea	 ecx, DWORD PTR $T35[ebp]
  00e19	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00e1e	8d 83 60 02 00
	00		 lea	 eax, DWORD PTR [ebx+608]
  00e24	c6 45 fc 26	 mov	 BYTE PTR __$EHRec$[ebp+8], 38 ; 00000026H
  00e28	50		 push	 eax
  00e29	8d 45 d8	 lea	 eax, DWORD PTR $T35[ebp]
  00e2c	50		 push	 eax
  00e2d	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00e33	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
  00e38	8d 4d d8	 lea	 ecx, DWORD PTR $T35[ebp]
  00e3b	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00e3f	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 198  : 		textLoader.GetTokenColor("brightnesscolor", &envData.LensFlareBrightnessColor);

  00e44	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@KOCEAOMM@brightnesscolor@
  00e49	8d 4d d8	 lea	 ecx, DWORD PTR $T36[ebp]
  00e4c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00e51	8d 83 64 02 00
	00		 lea	 eax, DWORD PTR [ebx+612]
  00e57	c6 45 fc 27	 mov	 BYTE PTR __$EHRec$[ebp+8], 39 ; 00000027H
  00e5b	50		 push	 eax
  00e5c	8d 45 d8	 lea	 eax, DWORD PTR $T36[ebp]
  00e5f	50		 push	 eax
  00e60	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00e66	e8 00 00 00 00	 call	 ?GetTokenColor@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXCOLOR@@@Z ; CTextFileLoader::GetTokenColor
  00e6b	8d 4d d8	 lea	 ecx, DWORD PTR $T36[ebp]
  00e6e	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00e72	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 199  : 		textLoader.GetTokenFloat("maxbrightness", &envData.fLensFlareMaxBrightness);

  00e77	68 00 00 00 00	 push	 OFFSET ??_C@_0O@GEBPBGOO@maxbrightness@
  00e7c	8d 4d d8	 lea	 ecx, DWORD PTR $T37[ebp]
  00e7f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00e84	8d 83 74 02 00
	00		 lea	 eax, DWORD PTR [ebx+628]
  00e8a	c6 45 fc 28	 mov	 BYTE PTR __$EHRec$[ebp+8], 40 ; 00000028H
  00e8e	50		 push	 eax
  00e8f	8d 45 d8	 lea	 eax, DWORD PTR $T37[ebp]
  00e92	50		 push	 eax
  00e93	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00e99	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
  00e9e	8d 4d d8	 lea	 ecx, DWORD PTR $T37[ebp]
  00ea1	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00ea5	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 200  : 		textLoader.GetTokenBoolean("mainflareenable", &envData.bMainFlareEnable);

  00eaa	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@GMIEGFJG@mainflareenable@
  00eaf	8d 4d d8	 lea	 ecx, DWORD PTR $T51[ebp]
  00eb2	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00eb7	8d 83 78 02 00
	00		 lea	 eax, DWORD PTR [ebx+632]
  00ebd	c6 45 fc 29	 mov	 BYTE PTR __$EHRec$[ebp+8], 41 ; 00000029H
  00ec1	50		 push	 eax
  00ec2	8d 45 d8	 lea	 eax, DWORD PTR $T51[ebp]
  00ec5	50		 push	 eax
  00ec6	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00ecc	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
  00ed1	8d 4d d8	 lea	 ecx, DWORD PTR $T51[ebp]
  00ed4	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00ed8	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 201  : 		textLoader.GetTokenString("mainflaretexturefilename", &envData.strMainFlareTextureFileName);

  00edd	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@EAALILHN@mainflaretexturefilename@
  00ee2	8d 4d d8	 lea	 ecx, DWORD PTR $T38[ebp]
  00ee5	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00eea	8d 83 7c 02 00
	00		 lea	 eax, DWORD PTR [ebx+636]
  00ef0	c6 45 fc 2a	 mov	 BYTE PTR __$EHRec$[ebp+8], 42 ; 0000002aH
  00ef4	50		 push	 eax
  00ef5	8d 45 d8	 lea	 eax, DWORD PTR $T38[ebp]
  00ef8	50		 push	 eax
  00ef9	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00eff	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  00f04	8d 4d d8	 lea	 ecx, DWORD PTR $T38[ebp]
  00f07	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00f0b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 202  : 		textLoader.GetTokenFloat("mainflaresize", &envData.fMainFlareSize);

  00f10	68 00 00 00 00	 push	 OFFSET ??_C@_0O@JBMODIIN@mainflaresize@
  00f15	8d 4d d8	 lea	 ecx, DWORD PTR $T39[ebp]
  00f18	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00f1d	8d 83 94 02 00
	00		 lea	 eax, DWORD PTR [ebx+660]
  00f23	c6 45 fc 2b	 mov	 BYTE PTR __$EHRec$[ebp+8], 43 ; 0000002bH
  00f27	50		 push	 eax
  00f28	8d 45 d8	 lea	 eax, DWORD PTR $T39[ebp]
  00f2b	50		 push	 eax
  00f2c	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00f32	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
  00f37	8d 4d d8	 lea	 ecx, DWORD PTR $T39[ebp]
  00f3a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00f3e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 203  : 
; 204  : 		textLoader.SetParentNode();

  00f43	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00f49	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
$LN18@Environmen:

; 205  : 	}
; 206  : 	return true;

  00f4e	b3 01		 mov	 bl, 1
$LN64@Environmen:
  00f50	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00f56	e8 00 00 00 00	 call	 ??1CTextFileLoader@@UAE@XZ ; CTextFileLoader::~CTextFileLoader
  00f5b	8a c3		 mov	 al, bl

; 207  : }

  00f5d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00f60	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00f67	59		 pop	 ecx
  00f68	5f		 pop	 edi
  00f69	5e		 pop	 esi
  00f6a	5b		 pop	 ebx
  00f6b	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00f6e	33 cd		 xor	 ecx, ebp
  00f70	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00f75	8b e5		 mov	 esp, ebp
  00f77	5d		 pop	 ebp
  00f78	c3		 ret	 0
$LN327@Environmen:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1935 :             _Xrange();

  00f79	e8 00 00 00 00	 call	 ?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
$LN341@Environmen:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 219  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00f7e	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN339@Environmen:
  00f83	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$0:
  00000	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CTextFileLoader@@UAE@XZ ; CTextFileLoader::~CTextFileLoader
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$1:
  0000b	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR $T8[ebp]
  00011	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$2:
  00016	8d 4d d8	 lea	 ecx, DWORD PTR $T41[ebp]
  00019	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$3:
  0001e	8d 4d d8	 lea	 ecx, DWORD PTR $T42[ebp]
  00021	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$4:
  00026	8d 4d d8	 lea	 ecx, DWORD PTR $T40[ebp]
  00029	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$5:
  0002e	8d 4d d8	 lea	 ecx, DWORD PTR $T44[ebp]
  00031	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$6:
  00036	8d 4d d8	 lea	 ecx, DWORD PTR $T45[ebp]
  00039	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$7:
  0003e	8d 4d d8	 lea	 ecx, DWORD PTR $T46[ebp]
  00041	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$8:
  00046	8d 4d d8	 lea	 ecx, DWORD PTR $T47[ebp]
  00049	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$9:
  0004e	8d 4d d8	 lea	 ecx, DWORD PTR $T48[ebp]
  00051	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$10:
  00056	8d 4d d8	 lea	 ecx, DWORD PTR $T49[ebp]
  00059	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$11:
  0005e	8d 4d d8	 lea	 ecx, DWORD PTR $T50[ebp]
  00061	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$12:
  00066	8d 4d d8	 lea	 ecx, DWORD PTR $T24[ebp]
  00069	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$13:
  0006e	8d 4d d8	 lea	 ecx, DWORD PTR $T10[ebp]
  00071	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$14:
  00076	8d 4d d8	 lea	 ecx, DWORD PTR $T11[ebp]
  00079	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$15:
  0007e	8d 4d d8	 lea	 ecx, DWORD PTR $T12[ebp]
  00081	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$16:
  00086	8d 4d d8	 lea	 ecx, DWORD PTR $T13[ebp]
  00089	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$17:
  0008e	8d 4d d8	 lea	 ecx, DWORD PTR $T14[ebp]
  00091	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$18:
  00096	8d 4d d8	 lea	 ecx, DWORD PTR $T15[ebp]
  00099	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$19:
  0009e	8d 4d d8	 lea	 ecx, DWORD PTR $T16[ebp]
  000a1	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$20:
  000a6	8d 4d d8	 lea	 ecx, DWORD PTR $T43[ebp]
  000a9	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$21:
  000ae	8d 4d d8	 lea	 ecx, DWORD PTR $T17[ebp]
  000b1	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$22:
  000b6	8d 4d d8	 lea	 ecx, DWORD PTR $T18[ebp]
  000b9	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$23:
  000be	8d 4d d8	 lea	 ecx, DWORD PTR $T19[ebp]
  000c1	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$24:
  000c6	8d 4d d8	 lea	 ecx, DWORD PTR $T20[ebp]
  000c9	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$25:
  000ce	8d 4d d8	 lea	 ecx, DWORD PTR $T21[ebp]
  000d1	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$26:
  000d6	8d 4d d8	 lea	 ecx, DWORD PTR $T22[ebp]
  000d9	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$27:
  000de	8d 4d d8	 lea	 ecx, DWORD PTR $T23[ebp]
  000e1	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$28:
  000e6	8d 4d d8	 lea	 ecx, DWORD PTR $T32[ebp]
  000e9	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$29:
  000ee	8d 4d d8	 lea	 ecx, DWORD PTR $T25[ebp]
  000f1	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$30:
  000f6	8d 4d d8	 lea	 ecx, DWORD PTR $T26[ebp]
  000f9	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$31:
  000fe	8d 4d d8	 lea	 ecx, DWORD PTR $T27[ebp]
  00101	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$32:
  00106	8d 4d d8	 lea	 ecx, DWORD PTR $T28[ebp]
  00109	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$33:
  0010e	8d 4d d8	 lea	 ecx, DWORD PTR $T29[ebp]
  00111	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$34:
  00116	8d 4d d8	 lea	 ecx, DWORD PTR $T30[ebp]
  00119	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$35:
  0011e	8d 4d d8	 lea	 ecx, DWORD PTR $T31[ebp]
  00121	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$36:
  00126	8d 4d d8	 lea	 ecx, DWORD PTR $T33[ebp]
  00129	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$37:
  0012e	8d 4d d8	 lea	 ecx, DWORD PTR $T34[ebp]
  00131	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$38:
  00136	8d 4d d8	 lea	 ecx, DWORD PTR $T35[ebp]
  00139	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$39:
  0013e	8d 4d d8	 lea	 ecx, DWORD PTR $T36[ebp]
  00141	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$40:
  00146	8d 4d d8	 lea	 ecx, DWORD PTR $T37[ebp]
  00149	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$41:
  0014e	8d 4d d8	 lea	 ecx, DWORD PTR $T51[ebp]
  00151	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$42:
  00156	8d 4d d8	 lea	 ecx, DWORD PTR $T38[ebp]
  00159	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$43:
  0015e	8d 4d d8	 lea	 ecx, DWORD PTR $T39[ebp]
  00161	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00166	cc		 int	 3
  00167	cc		 int	 3
  00168	cc		 int	 3
  00169	cc		 int	 3
  0016a	cc		 int	 3
__ehhandler$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z:
  0016b	90		 npad	 1
  0016c	90		 npad	 1
  0016d	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00171	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00174	8b 8a 14 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-236]
  0017a	33 c8		 xor	 ecx, eax
  0017c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00181	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00184	33 c8		 xor	 ecx, eax
  00186	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0018b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z
  00190	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z ENDP	; Environment_Load
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp
;	COMDAT ?Environment_Init@@YAXAAUSEnvironmentData@@@Z
_TEXT	SEGMENT
$T4 = -16						; size = 16
_envData$ = 8						; size = 4
?Environment_Init@@YAXAAUSEnvironmentData@@@Z PROC	; Environment_Init, COMDAT

; 5    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 6    : 	for (int i = 0; i < ENV_DIRLIGHT_NUM; ++i)

  00006	0f 10 0d 00 00
	00 00		 movups	 xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
  0000d	56		 push	 esi
  0000e	8b 75 08	 mov	 esi, DWORD PTR _envData$[ebp]
  00011	33 c9		 xor	 ecx, ecx
  00013	0f 11 4d f0	 movups	 XMMWORD PTR $T4[ebp], xmm1
  00017	8d 46 50	 lea	 eax, DWORD PTR [esi+80]
  0001a	66 0f 1f 44 00
	00		 npad	 6
$LL4@Environmen:

; 7    : 	{
; 8    : 		envData.bDirLightsEnable[i] = false;

  00020	c7 04 8e 00 00
	00 00		 mov	 DWORD PTR [esi+ecx*4], 0
  00027	8d 40 68	 lea	 eax, DWORD PTR [eax+104]

; 9    : 		envData.DirLights[i].Type = D3DLIGHT_DIRECTIONAL;

  0002a	c7 80 50 ff ff
	ff 03 00 00 00	 mov	 DWORD PTR [eax-176], 3
  00034	41		 inc	 ecx

; 10   : 		envData.DirLights[i].Direction = D3DXVECTOR3(0.5f, 0.5f, -0.5f);

  00035	c7 40 90 00 00
	00 3f		 mov	 DWORD PTR [eax-112], 1056964608 ; 3f000000H
  0003c	c7 40 94 00 00
	00 3f		 mov	 DWORD PTR [eax-108], 1056964608 ; 3f000000H
  00043	c7 40 98 00 00
	00 bf		 mov	 DWORD PTR [eax-104], -1090519040 ; bf000000H

; 11   : 		envData.DirLights[i].Position = D3DXVECTOR3(0.0f, 0.0f, 0.0f);

  0004a	c7 40 84 00 00
	00 00		 mov	 DWORD PTR [eax-124], 0
  00051	c7 40 88 00 00
	00 00		 mov	 DWORD PTR [eax-120], 0
  00058	c7 40 8c 00 00
	00 00		 mov	 DWORD PTR [eax-116], 0

; 12   : 		envData.DirLights[i].Specular = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);

  0005f	0f 11 88 64 ff
	ff ff		 movups	 XMMWORD PTR [eax-156], xmm1

; 13   : 		envData.DirLights[i].Diffuse = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);

  00066	0f 11 88 54 ff
	ff ff		 movups	 XMMWORD PTR [eax-172], xmm1

; 14   : 		envData.DirLights[i].Ambient = D3DXCOLOR(0.5f, 0.5f, 0.5f, 1.0f);

  0006d	c7 80 74 ff ff
	ff 00 00 00 3f	 mov	 DWORD PTR [eax-140], 1056964608 ; 3f000000H
  00077	c7 80 78 ff ff
	ff 00 00 00 3f	 mov	 DWORD PTR [eax-136], 1056964608 ; 3f000000H
  00081	c7 80 7c ff ff
	ff 00 00 00 3f	 mov	 DWORD PTR [eax-132], 1056964608 ; 3f000000H
  0008b	c7 40 80 00 00
	80 3f		 mov	 DWORD PTR [eax-128], 1065353216 ; 3f800000H

; 15   : 		envData.DirLights[i].Range = 0.0f; // Used by Point Light & Spot Light

  00092	c7 40 9c 00 00
	00 00		 mov	 DWORD PTR [eax-100], 0

; 16   : 		envData.DirLights[i].Falloff = 1.0f; // Used by Spot Light

  00099	c7 40 a0 00 00
	80 3f		 mov	 DWORD PTR [eax-96], 1065353216 ; 3f800000H

; 17   : 		envData.DirLights[i].Theta = 0.0f; // Used by Spot Light

  000a0	c7 40 b0 00 00
	00 00		 mov	 DWORD PTR [eax-80], 0

; 18   : 		envData.DirLights[i].Phi = 0.0f; // Used by Spot Light

  000a7	c7 40 b4 00 00
	00 00		 mov	 DWORD PTR [eax-76], 0

; 19   : 		envData.DirLights[i].Attenuation0 = 0.0f;

  000ae	c7 40 a4 00 00
	00 00		 mov	 DWORD PTR [eax-92], 0

; 20   : 		envData.DirLights[i].Attenuation1 = 1.0f;

  000b5	c7 40 a8 00 00
	80 3f		 mov	 DWORD PTR [eax-88], 1065353216 ; 3f800000H

; 21   : 		envData.DirLights[i].Attenuation2 = 0.0f;

  000bc	c7 40 ac 00 00
	00 00		 mov	 DWORD PTR [eax-84], 0
  000c3	83 f9 02	 cmp	 ecx, 2
  000c6	0f 8c 54 ff ff
	ff		 jl	 $LL4@Environmen

; 22   : 	}
; 23   : 
; 24   : 	envData.Material.Diffuse = D3DXCOLOR(0.8f, 0.8f, 0.8f, 1.0f);

  000cc	c7 86 d8 00 00
	00 cd cc 4c 3f	 mov	 DWORD PTR [esi+216], 1061997773 ; 3f4ccccdH

; 25   : 	envData.Material.Ambient = D3DXCOLOR(0.8f, 0.8f, 0.8f, 1.0f);
; 26   : 	envData.Material.Emissive = D3DXCOLOR(0.8f, 0.8f, 0.8f, 1.0f);
; 27   : 	envData.Material.Specular = D3DXCOLOR(0.0f, 0.0f, 0.0f, 1.0f);
; 28   : 	envData.Material.Power = 0.0f;
; 29   : 
; 30   : 	envData.bFogEnable = FALSE;
; 31   : 	envData.bDensityFog = FALSE;
; 32   : 	envData.m_fFogNearDistance = 25600.0f * 0.5f;
; 33   : 	envData.m_fFogFarDistance = 25600.0f * 0.7f;
; 34   : 	envData.FogColor = D3DXCOLOR(0.5f, 0.5f, 0.5f, 1.0f);
; 35   : 
; 36   : 	envData.bFilteringEnable = FALSE;
; 37   : 	envData.FilteringColor = D3DXCOLOR(0.3f, 0.1f, 0.1f, 0.0f);
; 38   : 	envData.byFilteringAlphaSrc = D3DBLEND_ONE;
; 39   : 	envData.byFilteringAlphaDest = D3DBLEND_ONE;
; 40   : 
; 41   : 	envData.fWindStrength = 0.2f;
; 42   : 	envData.fWindRandom = 0.0f;
; 43   : 
; 44   : 	envData.v3SkyBoxScale = D3DXVECTOR3(3500.0f, 3500.0f, 3500.0f);
; 45   : 	envData.bySkyBoxGradientLevelUpper = 0;
; 46   : 	envData.bySkyBoxGradientLevelLower = 0;
; 47   : 	envData.bSkyBoxTextureRenderMode = FALSE;
; 48   : 
; 49   : 	envData.v2CloudScale = D3DXVECTOR2(200000.0f, 200000.0f);
; 50   : 	envData.fCloudHeight = 30000.0f;
; 51   : 	envData.v2CloudTextureScale = D3DXVECTOR2(4.0f, 4.0f);
; 52   : 	envData.v2CloudSpeed = D3DXVECTOR2(0.001f, 0.001f);
; 53   : 	envData.strCloudTextureFileName = "";

  000d6	8d 8e 1c 02 00
	00		 lea	 ecx, DWORD PTR [esi+540]
  000dc	c7 86 dc 00 00
	00 cd cc 4c 3f	 mov	 DWORD PTR [esi+220], 1061997773 ; 3f4ccccdH
  000e6	c7 86 e0 00 00
	00 cd cc 4c 3f	 mov	 DWORD PTR [esi+224], 1061997773 ; 3f4ccccdH
  000f0	c7 86 e4 00 00
	00 00 00 80 3f	 mov	 DWORD PTR [esi+228], 1065353216 ; 3f800000H
  000fa	c7 86 e8 00 00
	00 cd cc 4c 3f	 mov	 DWORD PTR [esi+232], 1061997773 ; 3f4ccccdH
  00104	c7 86 ec 00 00
	00 cd cc 4c 3f	 mov	 DWORD PTR [esi+236], 1061997773 ; 3f4ccccdH
  0010e	c7 86 f0 00 00
	00 cd cc 4c 3f	 mov	 DWORD PTR [esi+240], 1061997773 ; 3f4ccccdH
  00118	c7 86 f4 00 00
	00 00 00 80 3f	 mov	 DWORD PTR [esi+244], 1065353216 ; 3f800000H
  00122	c7 86 08 01 00
	00 cd cc 4c 3f	 mov	 DWORD PTR [esi+264], 1061997773 ; 3f4ccccdH
  0012c	c7 86 0c 01 00
	00 cd cc 4c 3f	 mov	 DWORD PTR [esi+268], 1061997773 ; 3f4ccccdH
  00136	c7 86 10 01 00
	00 cd cc 4c 3f	 mov	 DWORD PTR [esi+272], 1061997773 ; 3f4ccccdH
  00140	c7 86 14 01 00
	00 00 00 80 3f	 mov	 DWORD PTR [esi+276], 1065353216 ; 3f800000H
  0014a	c7 86 f8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+248], 0
  00154	c7 86 fc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+252], 0
  0015e	c7 86 00 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+256], 0
  00168	c7 86 04 01 00
	00 00 00 80 3f	 mov	 DWORD PTR [esi+260], 1065353216 ; 3f800000H
  00172	c7 86 18 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+280], 0
  0017c	c7 86 1c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+284], 0
  00186	c7 86 20 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+288], 0
  00190	c7 86 24 01 00
	00 00 00 48 46	 mov	 DWORD PTR [esi+292], 1179123712 ; 46480000H
  0019a	c7 86 28 01 00
	00 00 00 8c 46	 mov	 DWORD PTR [esi+296], 1183580160 ; 468c0000H
  001a4	c7 86 2c 01 00
	00 00 00 00 3f	 mov	 DWORD PTR [esi+300], 1056964608 ; 3f000000H
  001ae	c7 86 30 01 00
	00 00 00 00 3f	 mov	 DWORD PTR [esi+304], 1056964608 ; 3f000000H
  001b8	c7 86 34 01 00
	00 00 00 00 3f	 mov	 DWORD PTR [esi+308], 1056964608 ; 3f000000H
  001c2	c7 86 38 01 00
	00 00 00 80 3f	 mov	 DWORD PTR [esi+312], 1065353216 ; 3f800000H
  001cc	c7 86 3c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+316], 0
  001d6	c7 86 40 01 00
	00 9a 99 99 3e	 mov	 DWORD PTR [esi+320], 1050253722 ; 3e99999aH
  001e0	c7 86 44 01 00
	00 cd cc cc 3d	 mov	 DWORD PTR [esi+324], 1036831949 ; 3dcccccdH
  001ea	c7 86 48 01 00
	00 cd cc cc 3d	 mov	 DWORD PTR [esi+328], 1036831949 ; 3dcccccdH
  001f4	c7 86 4c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+332], 0
  001fe	66 c7 86 50 01
	00 00 02 02	 mov	 WORD PTR [esi+336], 514	; 00000202H
  00207	c7 86 54 01 00
	00 cd cc 4c 3e	 mov	 DWORD PTR [esi+340], 1045220557 ; 3e4ccccdH
  00211	c7 86 58 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+344], 0
  0021b	c7 86 5c 01 00
	00 00 c0 5a 45	 mov	 DWORD PTR [esi+348], 1163575296 ; 455ac000H
  00225	c7 86 60 01 00
	00 00 c0 5a 45	 mov	 DWORD PTR [esi+352], 1163575296 ; 455ac000H
  0022f	c7 86 64 01 00
	00 00 c0 5a 45	 mov	 DWORD PTR [esi+356], 1163575296 ; 455ac000H
  00239	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  0023e	66 c7 86 6c 01
	00 00 00 00	 mov	 WORD PTR [esi+364], 0
  00247	c7 86 68 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+360], 0
  00251	c7 86 00 02 00
	00 00 50 43 48	 mov	 DWORD PTR [esi+512], 1212370944 ; 48435000H
  0025b	c7 86 04 02 00
	00 00 50 43 48	 mov	 DWORD PTR [esi+516], 1212370944 ; 48435000H
  00265	c7 86 08 02 00
	00 00 60 ea 46	 mov	 DWORD PTR [esi+520], 1189765120 ; 46ea6000H
  0026f	c7 86 0c 02 00
	00 00 00 80 40	 mov	 DWORD PTR [esi+524], 1082130432 ; 40800000H
  00279	c7 86 10 02 00
	00 00 00 80 40	 mov	 DWORD PTR [esi+528], 1082130432 ; 40800000H
  00283	c7 86 14 02 00
	00 6f 12 83 3a	 mov	 DWORD PTR [esi+532], 981668463 ; 3a83126fH
  0028d	c7 86 18 02 00
	00 6f 12 83 3a	 mov	 DWORD PTR [esi+536], 981668463 ; 3a83126fH
  00297	e8 00 00 00 00	 call	 ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=

; 54   : 	envData.CloudGradientColor.m_FirstColor = .0f;

  0029c	c7 86 34 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+564], 0
  002a6	c7 86 38 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+568], 0
  002b0	c7 86 3c 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+572], 0
  002ba	c7 86 40 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+576], 0

; 55   : 	envData.CloudGradientColor.m_SecondColor = .0f;

  002c4	c7 86 44 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+580], 0
  002ce	c7 86 48 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+584], 0
  002d8	c7 86 4c 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+588], 0
  002e2	c7 86 50 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+592], 0
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector

; 1797 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  002ec	8b 86 54 02 00
	00		 mov	 eax, DWORD PTR [esi+596]
  002f2	3b 86 58 02 00
	00		 cmp	 eax, DWORD PTR [esi+600]
  002f8	74 06		 je	 SHORT $LN40@Environmen

; 1798 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1799 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1800 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1801 :             return;
; 1802 :         }
; 1803 : 
; 1804 :         _My_data._Orphan_all();
; 1805 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1806 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1807 :         _Mylast = _Myfirst;

  002fa	89 86 58 02 00
	00		 mov	 DWORD PTR [esi+600], eax
$LN40@Environmen:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapUtil.cpp

; 60   : 	envData.LensFlareBrightnessColor = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);

  00300	0f 10 45 f0	 movups	 xmm0, XMMWORD PTR $T4[ebp]

; 61   : 	envData.fLensFlareMaxBrightness = 1.0f;
; 62   : 
; 63   : 	envData.bMainFlareEnable = FALSE;
; 64   : 	envData.strMainFlareTextureFileName = "";

  00304	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  00309	8d 8e 7c 02 00
	00		 lea	 ecx, DWORD PTR [esi+636]
  0030f	c7 86 60 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+608], 0
  00319	0f 11 86 64 02
	00 00		 movups	 XMMWORD PTR [esi+612], xmm0
  00320	c7 86 74 02 00
	00 00 00 80 3f	 mov	 DWORD PTR [esi+628], 1065353216 ; 3f800000H
  0032a	c7 86 78 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+632], 0
  00334	e8 00 00 00 00	 call	 ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=

; 65   : 	envData.fMainFlareSize = 0.2f;

  00339	c7 86 94 02 00
	00 cd cc 4c 3e	 mov	 DWORD PTR [esi+660], 1045220557 ; 3e4ccccdH

; 66   : 
; 67   : 	envData.bReserve = FALSE;

  00343	c7 86 98 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+664], 0
  0034d	5e		 pop	 esi

; 68   : }

  0034e	8b e5		 mov	 esp, ebp
  00350	5d		 pop	 ebp
  00351	c3		 ret	 0
?Environment_Init@@YAXAAUSEnvironmentData@@@Z ENDP	; Environment_Init
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
;	COMDAT ?_Xlength@?$vector@UTGradientColor@@V?$allocator@UTGradientColor@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@UTGradientColor@@V?$allocator@UTGradientColor@@@std@@@std@@CAXXZ PROC ; std::vector<TGradientColor,std::allocator<TGradientColor> >::_Xlength, COMDAT

; 2169 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@UTGradientColor@@V?$allocator@UTGradientColor@@@std@@@std@@CAXXZ ENDP ; std::vector<TGradientColor,std::allocator<TGradientColor> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
;	COMDAT ?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange, COMDAT

; 2173 :         _Xout_of_range("invalid vector subscript");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@
  00005	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPBD@Z ; std::_Xout_of_range
$LN3@Xrange:
  0000a	cc		 int	 3
?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector
;	COMDAT ?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at, COMDAT
; _this$ = ecx

; 1932 :     _NODISCARD _CONSTEXPR20 _Ty& at(const size_type _Pos) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1933 :         auto& _My_data = _Mypair._Myval2;
; 1934 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00004	8b 31		 mov	 esi, DWORD PTR [ecx]
  00006	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0000b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0000e	2b ce		 sub	 ecx, esi
  00010	f7 e9		 imul	 ecx
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __Pos$[ebp]
  00015	c1 fa 02	 sar	 edx, 2
  00018	8b c2		 mov	 eax, edx
  0001a	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0001d	03 c2		 add	 eax, edx
  0001f	3b c1		 cmp	 eax, ecx
  00021	76 0b		 jbe	 SHORT $LN7@at

; 1936 :         }
; 1937 : 
; 1938 :         return _My_data._Myfirst[_Pos];

  00023	8d 04 49	 lea	 eax, DWORD PTR [ecx+ecx*2]
  00026	8d 04 c6	 lea	 eax, DWORD PTR [esi+eax*8]

; 1939 :     }

  00029	5e		 pop	 esi
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
$LN7@at:

; 1935 :             _Xrange();

  0002e	e8 00 00 00 00	 call	 ?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
$LN5@at:
  00033	cc		 int	 3
?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\__msvc_string_view.hpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\__msvc_string_view.hpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\__msvc_string_view.hpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\__msvc_string_view.hpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\__msvc_string_view.hpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\__msvc_string_view.hpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\__msvc_string_view.hpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\__msvc_string_view.hpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\__msvc_string_view.hpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@QBD@Z
_TEXT	SEGMENT
__Old$1$ = -8						; size = 4
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@QBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT
; _this$ = ecx

; 1421 :     _CONSTEXPR20 basic_string& operator=(_In_z_ const _Elem* const _Ptr) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\__msvc_string_view.hpp

; 433  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00003	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 1421 :     _CONSTEXPR20 basic_string& operator=(_In_z_ const _Elem* const _Ptr) {

  00006	83 ec 08	 sub	 esp, 8
  00009	53		 push	 ebx
  0000a	56		 push	 esi
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\__msvc_string_view.hpp

; 433  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0000b	8b f2		 mov	 esi, edx
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 1421 :     _CONSTEXPR20 basic_string& operator=(_In_z_ const _Elem* const _Ptr) {

  0000d	57		 push	 edi
  0000e	8b f9		 mov	 edi, ecx
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\__msvc_string_view.hpp

; 433  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00010	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
$LL82@operator:
  00013	8a 06		 mov	 al, BYTE PTR [esi]
  00015	46		 inc	 esi
  00016	84 c0		 test	 al, al
  00018	75 f9		 jne	 SHORT $LL82@operator
  0001a	2b f1		 sub	 esi, ecx
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 1594 :         if (_Count <= _Mypair._Myval2._Myres) {

  0001c	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  0001f	89 4d f8	 mov	 DWORD PTR __Old$1$[ebp], ecx
  00022	3b f1		 cmp	 esi, ecx
  00024	77 26		 ja	 SHORT $LN9@operator

; 416  :         value_type* _Result = _Bx._Buf;

  00026	8b df		 mov	 ebx, edi

; 434  :         return _Myres > _Small_string_capacity;

  00028	83 f9 0f	 cmp	 ecx, 15			; 0000000fH

; 417  :         if (_Large_mode_engaged()) {

  0002b	76 02		 jbe	 SHORT $LN12@operator

; 418  :             _Result = _Unfancy(_Bx._Ptr);

  0002d	8b 1f		 mov	 ebx, DWORD PTR [edi]
$LN12@operator:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\__msvc_string_view.hpp

; 148  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0002f	56		 push	 esi
  00030	52		 push	 edx
  00031	53		 push	 ebx
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 1597 :             _Mypair._Myval2._Mysize = _Count;

  00032	89 77 10	 mov	 DWORD PTR [edi+16], esi
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\__msvc_string_view.hpp

; 148  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00035	e8 00 00 00 00	 call	 _memmove
  0003a	83 c4 0c	 add	 esp, 12			; 0000000cH
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 1599 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0003d	c6 04 33 00	 mov	 BYTE PTR [ebx+esi], 0

; 1422 :         return assign(_Ptr);

  00041	8b c7		 mov	 eax, edi

; 1423 :     }

  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
$LN9@operator:

; 2962 :         if (_New_size > max_size()) {

  0004c	81 fe ff ff ff
	7f		 cmp	 esi, 2147483647		; 7fffffffH
  00052	0f 87 c7 00 00
	00		 ja	 $LN97@operator

; 2942 :         const size_type _Masked = _Requested | _Alloc_mask;

  00058	8b de		 mov	 ebx, esi
  0005a	83 cb 0f	 or	 ebx, 15			; 0000000fH
  0005d	81 fb ff ff ff
	7f		 cmp	 ebx, 2147483647		; 7fffffffH

; 2943 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00063	76 12		 jbe	 SHORT $LN30@operator

; 2944 :             return _Max;

  00065	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  0006a	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 253  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00075	eb 45		 jmp	 SHORT $LN95@operator
$LN30@operator:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 2947 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  00077	8b d1		 mov	 edx, ecx
  00079	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  0007e	d1 ea		 shr	 edx, 1
  00080	2b c2		 sub	 eax, edx
  00082	3b c8		 cmp	 ecx, eax
  00084	76 12		 jbe	 SHORT $LN31@operator

; 2948 :             return _Max;

  00086	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  0008b	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 253  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00090	50		 push	 eax
  00091	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00096	eb 24		 jmp	 SHORT $LN95@operator
$LN31@operator:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 2951 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00098	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
  0009b	3b d8		 cmp	 ebx, eax
  0009d	0f 42 d8	 cmovb	 ebx, eax

; 801  :         ++_Capacity; // Take null terminator into consideration

  000a0	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 227  :     if (_Bytes == 0) {

  000a3	85 c0		 test	 eax, eax
  000a5	74 18		 je	 SHORT $LN94@operator
$LN44@operator:

; 228  :         return nullptr;
; 229  :     }
; 230  : 
; 231  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 232  :     if (_STD is_constant_evaluated()) {
; 233  :         return _Traits::_Allocate(_Bytes);
; 234  :     }
; 235  : #endif // _HAS_CXX20
; 236  : 
; 237  : #ifdef __cpp_aligned_new
; 238  :     if constexpr (_Align > __STDCPP_DEFAULT_NEW_ALIGNMENT__) {
; 239  :         size_t _Passed_align = _Align;
; 240  : #if defined(_M_IX86) || defined(_M_X64)
; 241  :         if (_Bytes >= _Big_allocation_threshold) {
; 242  :             // boost the alignment of big allocations to help autovectorization
; 243  :             _Passed_align = (_STD max)(_Align, _Big_allocation_alignment);
; 244  :         }
; 245  : #endif // defined(_M_IX86) || defined(_M_X64)
; 246  :         return _Traits::_Allocate_aligned(_Bytes, _Passed_align);
; 247  :     } else
; 248  : #endif // defined(__cpp_aligned_new)
; 249  :     {
; 250  : #if defined(_M_IX86) || defined(_M_X64)
; 251  :         if (_Bytes >= _Big_allocation_threshold) {

  000a7	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  000ac	72 08		 jb	 SHORT $LN45@operator

; 253  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  000ae	50		 push	 eax
  000af	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  000b4	eb 06		 jmp	 SHORT $LN95@operator
$LN45@operator:

; 136  :         return ::operator new(_Bytes);

  000b6	50		 push	 eax
  000b7	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
$LN95@operator:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 2973 :         _Mypair._Myval2._Mysize = _New_size;

  000bc	83 c4 04	 add	 esp, 4
$LN94@operator:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\__msvc_string_view.hpp

; 95   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000bf	56		 push	 esi
  000c0	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 2973 :         _Mypair._Myval2._Mysize = _New_size;

  000c3	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\__msvc_string_view.hpp

; 95   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000c6	50		 push	 eax
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 2973 :         _Mypair._Myval2._Mysize = _New_size;

  000c7	89 77 10	 mov	 DWORD PTR [edi+16], esi

; 2974 :         _Mypair._Myval2._Myres  = _New_capacity;

  000ca	89 5f 14	 mov	 DWORD PTR [edi+20], ebx
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\__msvc_string_view.hpp

; 95   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000cd	e8 00 00 00 00	 call	 _memcpy
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 1608 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000d2	8b 5d fc	 mov	 ebx, DWORD PTR $T1[ebp]
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\__msvc_string_view.hpp

; 95   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000d5	83 c4 0c	 add	 esp, 12			; 0000000cH
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 2976 :         if (_Old_capacity > _Small_string_capacity) {

  000d8	8b 45 f8	 mov	 eax, DWORD PTR __Old$1$[ebp]

; 1608 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000db	c6 04 33 00	 mov	 BYTE PTR [ebx+esi], 0

; 2976 :         if (_Old_capacity > _Small_string_capacity) {

  000df	83 f8 0f	 cmp	 eax, 15			; 0000000fH
  000e2	76 29		 jbe	 SHORT $LN23@operator

; 828  :         _Al.deallocate(_Old_ptr, _Capacity + 1); // +1 for null terminator

  000e4	8d 48 01	 lea	 ecx, DWORD PTR [eax+1]
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 981  :         _STD _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000e7	8b 07		 mov	 eax, DWORD PTR [edi]

; 284  :         if (_Bytes >= _Big_allocation_threshold) {

  000e9	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000ef	72 12		 jb	 SHORT $LN73@operator

; 205  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f1	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000f4	83 c1 23	 add	 ecx, 35			; 00000023H

; 206  : 
; 207  :     // If the following asserts, it likely means that we are performing
; 208  :     // an aligned delete on memory coming from an unaligned allocation.
; 209  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 210  : 
; 211  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 212  :     // in range [_Min_back_shift, _Non_user_size]
; 213  : #ifdef _DEBUG
; 214  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 215  : #else // ^^^ defined(_DEBUG) / !defined(_DEBUG) vvv
; 216  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 217  : #endif // ^^^ !defined(_DEBUG) ^^^
; 218  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000f7	2b c2		 sub	 eax, edx

; 219  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000f9	83 c0 fc	 add	 eax, -4			; fffffffcH
  000fc	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000ff	77 19		 ja	 SHORT $LN70@operator

; 220  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00101	8b c2		 mov	 eax, edx
$LN73@operator:

; 289  :         ::operator delete(_Ptr, _Bytes);

  00103	51		 push	 ecx
  00104	50		 push	 eax
  00105	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0010a	83 c4 08	 add	 esp, 8
$LN23@operator:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 1604 :         return _Reallocate_for(

  0010d	89 1f		 mov	 DWORD PTR [edi], ebx

; 1422 :         return assign(_Ptr);

  0010f	8b c7		 mov	 eax, edi

; 1423 :     }

  00111	5f		 pop	 edi
  00112	5e		 pop	 esi
  00113	5b		 pop	 ebx
  00114	8b e5		 mov	 esp, ebp
  00116	5d		 pop	 ebp
  00117	c2 04 00	 ret	 4
$LN70@operator:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 219  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0011a	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN97@operator:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 2963 :             _Xlen_string(); // result too long

  0011f	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN93@operator:
  00124	cc		 int	 3
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@QBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 1358 :     _CONSTEXPR20 ~basic_string() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 434  :         return _Myres > _Small_string_capacity;

  00003	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00006	83 f9 0f	 cmp	 ecx, 15			; 0000000fH

; 3047 :         if (_My_data._Large_mode_engaged()) {

  00009	76 27		 jbe	 SHORT $LN19@basic_stri
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 981  :         _STD _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000b	8b 06		 mov	 eax, DWORD PTR [esi]
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 828  :         _Al.deallocate(_Old_ptr, _Capacity + 1); // +1 for null terminator

  0000d	41		 inc	 ecx
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 284  :         if (_Bytes >= _Big_allocation_threshold) {

  0000e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00014	72 12		 jb	 SHORT $LN30@basic_stri

; 205  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00016	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00019	83 c1 23	 add	 ecx, 35			; 00000023H

; 206  : 
; 207  :     // If the following asserts, it likely means that we are performing
; 208  :     // an aligned delete on memory coming from an unaligned allocation.
; 209  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 210  : 
; 211  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 212  :     // in range [_Min_back_shift, _Non_user_size]
; 213  : #ifdef _DEBUG
; 214  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 215  : #else // ^^^ defined(_DEBUG) / !defined(_DEBUG) vvv
; 216  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 217  : #endif // ^^^ !defined(_DEBUG) ^^^
; 218  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0001c	2b c2		 sub	 eax, edx

; 219  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0001e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00021	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00024	77 1f		 ja	 SHORT $LN27@basic_stri

; 220  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00026	8b c2		 mov	 eax, edx
$LN30@basic_stri:

; 289  :         ::operator delete(_Ptr, _Bytes);

  00028	51		 push	 ecx
  00029	50		 push	 eax
  0002a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002f	83 c4 08	 add	 esp, 8
$LN19@basic_stri:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 3054 :         _My_data._Mysize = 0;

  00032	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 3055 :         _My_data._Myres  = _Small_string_capacity;

  00039	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 3056 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 3057 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00040	c6 06 00	 mov	 BYTE PTR [esi], 0
  00043	5e		 pop	 esi

; 1366 :     }

  00044	c3		 ret	 0
$LN27@basic_stri:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 219  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00045	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN39@basic_stri:
  0004a	cc		 int	 3
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\__msvc_string_view.hpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\__msvc_string_view.hpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\__msvc_string_view.hpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\__msvc_string_view.hpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\__msvc_string_view.hpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\__msvc_string_view.hpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\__msvc_string_view.hpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 744  :     _CONSTEXPR20 basic_string(_In_z_ const _Elem* const _Ptr) : _Mypair(_Zero_then_variadic_args_t{}) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	8b d9		 mov	 ebx, ecx
  00008	0f 57 c0	 xorps	 xmm0, xmm0
  0000b	57		 push	 edi
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\__msvc_string_view.hpp

; 433  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0000c	8b 7d 08	 mov	 edi, DWORD PTR __Ptr$[ebp]
  0000f	8b f7		 mov	 esi, edi
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 474  :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

  00011	0f 11 03	 movups	 XMMWORD PTR [ebx], xmm0

; 498  :     size_type _Mysize = 0; // current length of string (size)

  00014	c7 43 10 00 00
	00 00		 mov	 DWORD PTR [ebx+16], 0

; 499  :     size_type _Myres  = 0; // current storage reserved for string (capacity)

  0001b	c7 43 14 00 00
	00 00		 mov	 DWORD PTR [ebx+20], 0
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\__msvc_string_view.hpp

; 433  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00022	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
$LL51@basic_stri:
  00025	8a 06		 mov	 al, BYTE PTR [esi]
  00027	46		 inc	 esi
  00028	84 c0		 test	 al, al
  0002a	75 f9		 jne	 SHORT $LL51@basic_stri
  0002c	2b f1		 sub	 esi, ecx
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 857  :         if (_Count > max_size()) {

  0002e	81 fe ff ff ff
	7f		 cmp	 esi, 2147483647		; 7fffffffH
  00034	0f 87 9b 00 00
	00		 ja	 $LN62@basic_stri

; 859  :         }
; 860  : 
; 861  :         auto& _Al       = _Getal();
; 862  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);
; 863  :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 864  : 
; 865  :         if (_Count <= _Small_string_capacity) {

  0003a	83 fe 0f	 cmp	 esi, 15			; 0000000fH
  0003d	77 24		 ja	 SHORT $LN21@basic_stri
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\__msvc_string_view.hpp

; 95   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0003f	56		 push	 esi
  00040	57		 push	 edi
  00041	53		 push	 ebx
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 866  :             _My_data._Mysize = _Count;

  00042	89 73 10	 mov	 DWORD PTR [ebx+16], esi

; 867  :             _My_data._Myres  = _Small_string_capacity;

  00045	c7 43 14 0f 00
	00 00		 mov	 DWORD PTR [ebx+20], 15	; 0000000fH
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\__msvc_string_view.hpp

; 95   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0004c	e8 00 00 00 00	 call	 _memcpy
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 874  :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

  00051	c6 04 1e 00	 mov	 BYTE PTR [esi+ebx], 0

; 745  :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));
; 746  :     }

  00055	83 c4 0c	 add	 esp, 12			; 0000000cH
  00058	8b c3		 mov	 eax, ebx
  0005a	5f		 pop	 edi
  0005b	5e		 pop	 esi
  0005c	5b		 pop	 ebx
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c2 04 00	 ret	 4
$LN21@basic_stri:

; 2942 :         const size_type _Masked = _Requested | _Alloc_mask;

  00063	8b fe		 mov	 edi, esi
  00065	83 cf 0f	 or	 edi, 15			; 0000000fH
  00068	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH

; 2943 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  0006e	76 12		 jbe	 SHORT $LN27@basic_stri

; 2944 :             return _Max;

  00070	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  00075	bf ff ff ff 7f	 mov	 edi, 2147483647		; 7fffffffH
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 253  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0007a	50		 push	 eax
  0007b	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00080	eb 26		 jmp	 SHORT $LN60@basic_stri
$LN27@basic_stri:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 2951 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00082	b8 16 00 00 00	 mov	 eax, 22			; 00000016H
  00087	3b f8		 cmp	 edi, eax
  00089	0f 42 f8	 cmovb	 edi, eax

; 801  :         ++_Capacity; // Take null terminator into consideration

  0008c	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory

; 227  :     if (_Bytes == 0) {

  0008f	85 c0		 test	 eax, eax
  00091	74 18		 je	 SHORT $LN59@basic_stri
$LN41@basic_stri:

; 228  :         return nullptr;
; 229  :     }
; 230  : 
; 231  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 232  :     if (_STD is_constant_evaluated()) {
; 233  :         return _Traits::_Allocate(_Bytes);
; 234  :     }
; 235  : #endif // _HAS_CXX20
; 236  : 
; 237  : #ifdef __cpp_aligned_new
; 238  :     if constexpr (_Align > __STDCPP_DEFAULT_NEW_ALIGNMENT__) {
; 239  :         size_t _Passed_align = _Align;
; 240  : #if defined(_M_IX86) || defined(_M_X64)
; 241  :         if (_Bytes >= _Big_allocation_threshold) {
; 242  :             // boost the alignment of big allocations to help autovectorization
; 243  :             _Passed_align = (_STD max)(_Align, _Big_allocation_alignment);
; 244  :         }
; 245  : #endif // defined(_M_IX86) || defined(_M_X64)
; 246  :         return _Traits::_Allocate_aligned(_Bytes, _Passed_align);
; 247  :     } else
; 248  : #endif // defined(__cpp_aligned_new)
; 249  :     {
; 250  : #if defined(_M_IX86) || defined(_M_X64)
; 251  :         if (_Bytes >= _Big_allocation_threshold) {

  00093	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  00098	72 08		 jb	 SHORT $LN42@basic_stri

; 253  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0009a	50		 push	 eax
  0009b	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  000a0	eb 06		 jmp	 SHORT $LN60@basic_stri
$LN42@basic_stri:

; 136  :         return ::operator new(_Bytes);

  000a2	50		 push	 eax
  000a3	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
$LN60@basic_stri:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 889  :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  000a8	83 c4 04	 add	 esp, 4
$LN59@basic_stri:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\__msvc_string_view.hpp

; 95   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000ab	56		 push	 esi
  000ac	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 889  :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  000af	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\__msvc_string_view.hpp

; 95   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000b2	50		 push	 eax
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 889  :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  000b3	89 03		 mov	 DWORD PTR [ebx], eax

; 890  : 
; 891  :         _My_data._Mysize = _Count;

  000b5	89 73 10	 mov	 DWORD PTR [ebx+16], esi

; 892  :         _My_data._Myres  = _New_capacity;

  000b8	89 7b 14	 mov	 DWORD PTR [ebx+20], edi
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\__msvc_string_view.hpp

; 95   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000bb	e8 00 00 00 00	 call	 _memcpy
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 898  :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());

  000c0	8b 45 fc	 mov	 eax, DWORD PTR $T1[ebp]

; 745  :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));
; 746  :     }

  000c3	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c6	5f		 pop	 edi

; 898  :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());

  000c7	c6 04 30 00	 mov	 BYTE PTR [eax+esi], 0

; 745  :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));
; 746  :     }

  000cb	8b c3		 mov	 eax, ebx
  000cd	5e		 pop	 esi
  000ce	5b		 pop	 ebx
  000cf	8b e5		 mov	 esp, ebp
  000d1	5d		 pop	 ebp
  000d2	c2 04 00	 ret	 4
$LN62@basic_stri:

; 858  :             _Xlen_string(); // result too long

  000d5	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN57@basic_stri:
  000da	cc		 int	 3
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 512  :     _Xlength_error("string too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen_strin:
  0000a	cc		 int	 3
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 107  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 108  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 90   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 91   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN18@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN18@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 73   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 72   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 74   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 91   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 144  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 145  :     }

  00003	8b c1		 mov	 eax, ecx

; 66   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 67   :     {
; 68   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 144  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 145  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 90   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 91   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN13@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN13@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 73   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 72   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 74   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 90   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 91   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN8@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN8@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 96   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 97   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 91   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 92   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 73   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 74   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 75   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
END

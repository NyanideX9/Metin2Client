; Listing generated by Microsoft (R) Optimizing Compiler Version 19.37.32822.0 

	TITLE	C:\Marty 5.5\Src-Client\Client\GameLib\Distribute\MapOutdoorRender.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
?_Fake_alloc@std@@3U_Fake_allocator@1@B	ORG $+1		; std::_Fake_alloc
	ORG $+3
??$_Isort_max@PAUTPatchDrawStruct@CMapOutdoor@@@std@@3HB DD 020H ; std::_Isort_max<CMapOutdoor::TPatchDrawStruct *>
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??0D3DXMATRIX@@QAE@XZ				; D3DXMATRIX::D3DXMATRIX
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Xlength@?$vector@EV?$allocator@E@std@@@std@@CAXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Xlength
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	?OnRender@CMapOutdoor@@MAEXXZ			; CMapOutdoor::OnRender
PUBLIC	?SetInverseViewAndDynamicShaodwMatrices@CMapOutdoor@@QAEXXZ ; CMapOutdoor::SetInverseViewAndDynamicShaodwMatrices
PUBLIC	?SetVisiblePart@CMapOutdoor@@QAEXH_N@Z		; CMapOutdoor::SetVisiblePart
PUBLIC	?SetSplatLimit@CMapOutdoor@@QAEXH@Z		; CMapOutdoor::SetSplatLimit
PUBLIC	?GetRenderedSplatNum@CMapOutdoor@@QAEAAV?$vector@HV?$allocator@H@std@@@std@@PAH0PAM@Z ; CMapOutdoor::GetRenderedSplatNum
PUBLIC	?GetRenderedGraphicThingInstanceNum@CMapOutdoor@@QAEAAV?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@PAK0@Z ; CMapOutdoor::GetRenderedGraphicThingInstanceNum
PUBLIC	?ApplyLight@CMapOutdoor@@UAEXKABU_D3DLIGHT8@@@Z	; CMapOutdoor::ApplyLight
PUBLIC	?RenderMarkedArea@CMapOutdoor@@QAEXXZ		; CMapOutdoor::RenderMarkedArea
PUBLIC	?RecurseRenderAttr@CMapOutdoor@@QAEXPAVCTerrainQuadtreeNode@@_N@Z ; CMapOutdoor::RecurseRenderAttr
PUBLIC	?DrawPatchAttr@CMapOutdoor@@QAEXJ@Z		; CMapOutdoor::DrawPatchAttr
PUBLIC	?RenderCollision@CMapOutdoor@@QAEXXZ		; CMapOutdoor::RenderCollision
PUBLIC	?RenderSky@CMapOutdoor@@QAEXXZ			; CMapOutdoor::RenderSky
PUBLIC	?RenderCloud@CMapOutdoor@@QAEXXZ		; CMapOutdoor::RenderCloud
PUBLIC	?RenderBeforeLensFlare@CMapOutdoor@@QAEXXZ	; CMapOutdoor::RenderBeforeLensFlare
PUBLIC	?RenderAfterLensFlare@CMapOutdoor@@QAEXXZ	; CMapOutdoor::RenderAfterLensFlare
PUBLIC	?RenderScreenFiltering@CMapOutdoor@@QAEXXZ	; CMapOutdoor::RenderScreenFiltering
PUBLIC	?RenderTerrain@CMapOutdoor@@QAEXXZ		; CMapOutdoor::RenderTerrain
PUBLIC	?RenderArea@CMapOutdoor@@QAEX_N@Z		; CMapOutdoor::RenderArea
PUBLIC	?RenderBlendArea@CMapOutdoor@@QAEXXZ		; CMapOutdoor::RenderBlendArea
PUBLIC	?RenderDungeon@CMapOutdoor@@QAEXXZ		; CMapOutdoor::RenderDungeon
PUBLIC	?RenderEffect@CMapOutdoor@@QAEXXZ		; CMapOutdoor::RenderEffect
PUBLIC	?RenderPCBlocker@CMapOutdoor@@QAEXXZ		; CMapOutdoor::RenderPCBlocker
PUBLIC	?RenderTree@CMapOutdoor@@QAEXXZ			; CMapOutdoor::RenderTree
PUBLIC	?_Xlength@?$vector@U?$pair@MJ@std@@V?$allocator@U?$pair@MJ@std@@@2@@std@@CAXXZ ; std::vector<std::pair<float,long>,std::allocator<std::pair<float,long> > >::_Xlength
PUBLIC	?_Xlength@?$vector@UTPatchDrawStruct@CMapOutdoor@@V?$allocator@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@CAXXZ ; std::vector<CMapOutdoor::TPatchDrawStruct,std::allocator<CMapOutdoor::TPatchDrawStruct> >::_Xlength
PUBLIC	?SetPatchDrawVector@CMapOutdoor@@IAEXXZ		; CMapOutdoor::SetPatchDrawVector
PUBLIC	?NEW_DrawWireFrame@CMapOutdoor@@IAEXPAVCTerrainPatchProxy@@GW4_D3DPRIMITIVETYPE@@@Z ; CMapOutdoor::NEW_DrawWireFrame
PUBLIC	?DrawWireFrame@CMapOutdoor@@IAEXJGW4_D3DPRIMITIVETYPE@@@Z ; CMapOutdoor::DrawWireFrame
PUBLIC	?SelectIndexBuffer@CMapOutdoor@@IAEXEPAGPAW4_D3DPRIMITIVETYPE@@@Z ; CMapOutdoor::SelectIndexBuffer
PUBLIC	?InitializeVisibleParts@CMapOutdoor@@IAEXXZ	; CMapOutdoor::InitializeVisibleParts
PUBLIC	?IsVisiblePart@CMapOutdoor@@IAE_NH@Z		; CMapOutdoor::IsVisiblePart
PUBLIC	?__GetNoFogDistance@CMapOutdoor@@IAEMXZ		; CMapOutdoor::__GetNoFogDistance
PUBLIC	?__GetFogDistance@CMapOutdoor@@IAEMXZ		; CMapOutdoor::__GetFogDistance
PUBLIC	?__RenderTerrain_RecurseRenderQuadTree@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@_N@Z ; CMapOutdoor::__RenderTerrain_RecurseRenderQuadTree
PUBLIC	?__RenderTerrain_RecurseRenderQuadTree_CheckBoundingCircle@CMapOutdoor@@IAEHABUD3DXVECTOR3@@ABM@Z ; CMapOutdoor::__RenderTerrain_RecurseRenderQuadTree_CheckBoundingCircle
PUBLIC	?__RenderTerrain_AppendPatch@CMapOutdoor@@IAEXABUD3DXVECTOR3@@MJ@Z ; CMapOutdoor::__RenderTerrain_AppendPatch
PUBLIC	??$stable_sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@std@@UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@0@0UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@Z ; std::stable_sort<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CMapOutdoor::TPatchDrawStruct> > >,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
PUBLIC	??$_Sort_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@0HUCRCNumComp@2@@Z ; std::_Sort_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>
PUBLIC	??$_Sort_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@0HUCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ; std::_Sort_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>
PUBLIC	??$_Insertion_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@QAU12@0UFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Insertion_sort_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
PUBLIC	??1?$_Optimistic_temporary_buffer@UTPatchDrawStruct@CMapOutdoor@@@std@@QAE@XZ ; std::_Optimistic_temporary_buffer<CMapOutdoor::TPatchDrawStruct>::~_Optimistic_temporary_buffer<CMapOutdoor::TPatchDrawStruct>
PUBLIC	??$_Stable_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0H0HUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Stable_sort_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
PUBLIC	??$_Emplace_reallocate@ABUTPatchDrawStruct@CMapOutdoor@@@?$vector@UTPatchDrawStruct@CMapOutdoor@@V?$allocator@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@AAEPAUTPatchDrawStruct@CMapOutdoor@@QAU23@ABU23@@Z ; std::vector<CMapOutdoor::TPatchDrawStruct,std::allocator<CMapOutdoor::TPatchDrawStruct> >::_Emplace_reallocate<CMapOutdoor::TPatchDrawStruct const &>
PUBLIC	??$_Emplace_reallocate@U?$pair@MJ@std@@@?$vector@U?$pair@MJ@std@@V?$allocator@U?$pair@MJ@std@@@2@@std@@AAEPAU?$pair@MJ@1@QAU21@$$QAU21@@Z ; std::vector<std::pair<float,long>,std::allocator<std::pair<float,long> > >::_Emplace_reallocate<std::pair<float,long> >
PUBLIC	??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@AAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
PUBLIC	??$_Return_temporary_buffer@UTPatchDrawStruct@CMapOutdoor@@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@@Z ; std::_Return_temporary_buffer<CMapOutdoor::TPatchDrawStruct>
PUBLIC	??$__std_find_trivial@EE@@YAPAEPAE0E@Z		; __std_find_trivial<unsigned char,unsigned char>
PUBLIC	??$_Sort_unchecked@PAU?$pair@MJ@std@@U?$less@X@2@@std@@YAXPAU?$pair@MJ@0@0HU?$less@X@0@@Z ; std::_Sort_unchecked<std::pair<float,long> *,std::less<void> >
PUBLIC	??$_Partition_by_median_guess_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YA?AU?$pair@PAUSCRCWithNumber@CArea@@PAU12@@0@PAUSCRCWithNumber@CArea@@0UCRCNumComp@3@@Z ; std::_Partition_by_median_guess_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>
PUBLIC	??$_Insertion_sort_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAPAPAVCGraphicThingInstance@@QAPAV1@0UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ; std::_Insertion_sort_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>
PUBLIC	??$_Make_heap_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@0UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ; std::_Make_heap_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>
PUBLIC	??$_Partition_by_median_guess_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YA?AU?$pair@PAPAVCGraphicThingInstance@@PAPAV1@@0@PAPAVCGraphicThingInstance@@0UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ; std::_Partition_by_median_guess_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>
PUBLIC	??$_Get_temporary_buffer@UTPatchDrawStruct@CMapOutdoor@@@std@@YA?AU?$pair@PAUTPatchDrawStruct@CMapOutdoor@@H@0@H@Z ; std::_Get_temporary_buffer<CMapOutdoor::TPatchDrawStruct>
PUBLIC	??$_Buffered_merge_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0H0UFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Buffered_merge_sort_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
PUBLIC	??$_Buffered_inplace_merge_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Buffered_inplace_merge_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
PUBLIC	??$_Partition_by_median_guess_unchecked@PAU?$pair@MJ@std@@U?$less@X@2@@std@@YA?AU?$pair@PAU?$pair@MJ@std@@PAU12@@0@PAU?$pair@MJ@0@0U?$less@X@0@@Z ; std::_Partition_by_median_guess_unchecked<std::pair<float,long> *,std::less<void> >
PUBLIC	??$_Pop_heap_hole_by_index@PAUSCRCWithNumber@CArea@@U12@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@HH$$QAU12@UCRCNumComp@2@@Z ; std::_Pop_heap_hole_by_index<CArea::SCRCWithNumber *,CArea::SCRCWithNumber,CArea::CRCNumComp>
PUBLIC	??$_Pop_heap_hole_by_index@PAPAVCGraphicThingInstance@@PAV1@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@HH$$QAPAV1@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ; std::_Pop_heap_hole_by_index<CGraphicThingInstance * *,CGraphicThingInstance *,CMapOutdoor_LessThingInstancePtrRenderOrder>
PUBLIC	??$_Copy_backward_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_backward_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
PUBLIC	??$_Insertion_sort_isort_max_chunks@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Insertion_sort_isort_max_chunks<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
PUBLIC	??$_Uninitialized_chunked_merge_unchecked2@PAUTPatchDrawStruct@CMapOutdoor@@U12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@0HUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Uninitialized_chunked_merge_unchecked2<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
PUBLIC	??$_Chunked_merge_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@0HHUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Chunked_merge_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
PUBLIC	??$_Rotate_one_right@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00@Z ; std::_Rotate_one_right<CMapOutdoor::TPatchDrawStruct *>
PUBLIC	??$_Rotate_one_left@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00@Z ; std::_Rotate_one_left<CMapOutdoor::TPatchDrawStruct *>
PUBLIC	??$_Buffered_inplace_merge_unchecked_impl@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Buffered_inplace_merge_unchecked_impl<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
PUBLIC	??$_Copy_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
PUBLIC	??$_Copy_memmove@PAU?$pair@MJ@std@@PAU12@@std@@YAPAU?$pair@MJ@0@PAU10@00@Z ; std::_Copy_memmove<std::pair<float,long> *,std::pair<float,long> *>
PUBLIC	??$_Copy_memmove@PAUSCRCWithNumber@CArea@@PAU12@@std@@YAPAUSCRCWithNumber@CArea@@PAU12@00@Z ; std::_Copy_memmove<CArea::SCRCWithNumber *,CArea::SCRCWithNumber *>
PUBLIC	??$_Copy_memmove@PAEPAE@std@@YAPAEPAE00@Z	; std::_Copy_memmove<unsigned char *,unsigned char *>
PUBLIC	??$_Pop_heap_hole_by_index@PAU?$pair@MJ@std@@U12@U?$less@X@2@@std@@YAXPAU?$pair@MJ@0@HH$$QAU10@U?$less@X@0@@Z ; std::_Pop_heap_hole_by_index<std::pair<float,long> *,std::pair<float,long>,std::less<void> >
PUBLIC	??$_Copy_backward_memmove@PAUSCRCWithNumber@CArea@@PAU12@@std@@YAPAUSCRCWithNumber@CArea@@PAU12@00@Z ; std::_Copy_backward_memmove<CArea::SCRCWithNumber *,CArea::SCRCWithNumber *>
PUBLIC	??$_Med3_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@00UCRCNumComp@2@@Z ; std::_Med3_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>
PUBLIC	??$_Copy_backward_memmove@PAPAVCGraphicThingInstance@@PAPAV1@@std@@YAPAPAVCGraphicThingInstance@@PAPAV1@00@Z ; std::_Copy_backward_memmove<CGraphicThingInstance * *,CGraphicThingInstance * *>
PUBLIC	??$_Med3_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@00UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ; std::_Med3_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>
PUBLIC	??$_Uninitialized_merge_move@PAUTPatchDrawStruct@CMapOutdoor@@U12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@11UFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Uninitialized_merge_move<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
PUBLIC	??$_Merge_move@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@10UFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Merge_move<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
PUBLIC	??$_Inplace_merge_buffer_left@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00QAU12@UFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Inplace_merge_buffer_left<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
PUBLIC	??$_Inplace_merge_buffer_right@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00QAU12@UFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Inplace_merge_buffer_right<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
PUBLIC	??$_Buffered_inplace_merge_divide_and_conquer@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Buffered_inplace_merge_divide_and_conquer<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
PUBLIC	??$_Med3_unchecked@PAU?$pair@MJ@std@@U?$less@X@2@@std@@YAXPAU?$pair@MJ@0@00U?$less@X@0@@Z ; std::_Med3_unchecked<std::pair<float,long> *,std::less<void> >
PUBLIC	??$_Buffered_inplace_merge_divide_and_conquer2@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@00HH@Z ; std::_Buffered_inplace_merge_divide_and_conquer2<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
PUBLIC	??$_Buffered_rotate_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@QAU12@00HH0H@Z ; std::_Buffered_rotate_unchecked<CMapOutdoor::TPatchDrawStruct *>
PUBLIC	??$reverse@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0@Z ; std::reverse<CMapOutdoor::TPatchDrawStruct *>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_singleton@?$CSingleton@VCSpeedTreeForestDirectX8@@@@0PAVCSpeedTreeForestDirectX8@@A ; CSingleton<CSpeedTreeForestDirectX8>::ms_singleton
PUBLIC	?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
PUBLIC	?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
PUBLIC	?m_dwRenderedCRCWithNumberVector@@3V?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@A ; m_dwRenderedCRCWithNumberVector
PUBLIC	??_C@_0DP@MKJEJLFD@CMapOutdoor?3?3RenderBeforeLensFl@ ; `string'
PUBLIC	??_R0?AVCGraphicObjectInstance@@@8		; CGraphicObjectInstance `RTTI Type Descriptor'
PUBLIC	??_R0?AVCGraphicThingInstance@@@8		; CGraphicThingInstance `RTTI Type Descriptor'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	__real@3dcccccd
PUBLIC	__real@3f000000
PUBLIC	__real@3f400000
PUBLIC	__real@3f800000
PUBLIC	__real@42000000
PUBLIC	__real@437f0000
PUBLIC	__real@449c4000
PUBLIC	__real@45075000
PUBLIC	__real@453b8000
PUBLIC	__real@45875000
PUBLIC	__xmm@41f00000000000000000000000000000
PUBLIC	__xmm@7fffffff7fffffff7fffffff7fffffff
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	_D3DXMatrixMultiply@12:PROC
EXTRN	_D3DXMatrixScaling@16:PROC
EXTRN	_D3DXMatrixLookAtRH@16:PROC
EXTRN	__imp__timeGetTime@0:PROC
EXTRN	??2@YAPAXIABUnothrow_t@std@@@Z:PROC		; operator new
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	___std_find_trivial_1@12:PROC
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?TraceError@@YAXPBDZZ:PROC			; TraceError
EXTRN	?fMAX@@YAMMM@Z:PROC				; fMAX
EXTRN	?SetBlendOperation@CScreen@@QAEXXZ:PROC		; CScreen::SetBlendOperation
EXTRN	?GetD3DTexture@CGraphicTexture@@QBEPAUIDirect3DTexture8@@XZ:PROC ; CGraphicTexture::GetD3DTexture
EXTRN	?GetD3DIndexBuffer@CGraphicIndexBuffer@@QBEPAUIDirect3DIndexBuffer8@@XZ:PROC ; CGraphicIndexBuffer::GetD3DIndexBuffer
EXTRN	?GetTexturePointer@CGraphicImageInstance@@QAEPAVCGraphicTexture@@XZ:PROC ; CGraphicImageInstance::GetTexturePointer
EXTRN	?RenderCloud@CSkyBox@@QAEXXZ:PROC		; CSkyBox::RenderCloud
EXTRN	?Compute@CLensFlare@@QAEXABUD3DXVECTOR3@@@Z:PROC ; CLensFlare::Compute
EXTRN	?DrawBeforeFlare@CLensFlare@@QAEXXZ:PROC	; CLensFlare::DrawBeforeFlare
EXTRN	?DrawFlare@CLensFlare@@QAEXXZ:PROC		; CLensFlare::DrawFlare
EXTRN	?AdjustBrightness@CLensFlare@@QAEXXZ:PROC	; CLensFlare::AdjustBrightness
EXTRN	?Render@CScreenFilter@@QAEXXZ:PROC		; CScreenFilter::Render
EXTRN	?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ:PROC ; CGraphicObjectInstance::GetPosition
EXTRN	?Render@CGraphicObjectInstance@@QAE_NXZ:PROC	; CGraphicObjectInstance::Render
EXTRN	?BlendRender@CGraphicObjectInstance@@QAEXXZ:PROC ; CGraphicObjectInstance::BlendRender
EXTRN	?RenderShadow@CGraphicObjectInstance@@QAEXXZ:PROC ; CGraphicObjectInstance::RenderShadow
EXTRN	?RenderPCBlocker@CGraphicObjectInstance@@QAEXXZ:PROC ; CGraphicObjectInstance::RenderPCBlocker
EXTRN	?Show@CGraphicObjectInstance@@QAEXXZ:PROC	; CGraphicObjectInstance::Show
EXTRN	?Hide@CGraphicObjectInstance@@QAEXXZ:PROC	; CGraphicObjectInstance::Hide
EXTRN	?HaveBlendThing@CGraphicThingInstance@@QAE_NXZ:PROC ; CGraphicThingInstance::HaveBlendThing
EXTRN	?CollectRenderingObject@CArea@@QAEXAAV?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@@Z:PROC ; CArea::CollectRenderingObject
EXTRN	?CollectBlendRenderingObject@CArea@@QAEXAAV?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@@Z:PROC ; CArea::CollectBlendRenderingObject
EXTRN	?RenderEffect@CArea@@QAEXXZ:PROC		; CArea::RenderEffect
EXTRN	?RenderCollision@CArea@@QAEXXZ:PROC		; CArea::RenderCollision
EXTRN	?RenderDungeon@CArea@@QAEXXZ:PROC		; CArea::RenderDungeon
EXTRN	?SetCenterPosition@CTerrainPatchProxy@@QAEXABUD3DXVECTOR3@@@Z:PROC ; CTerrainPatchProxy::SetCenterPosition
EXTRN	?HardwareTransformPatch_GetVertexBufferPtr@CTerrainPatchProxy@@QAEPAVCGraphicVertexBuffer@@XZ:PROC ; CTerrainPatchProxy::HardwareTransformPatch_GetVertexBufferPtr
EXTRN	?GetTerrainPointer@CMapOutdoor@@QAEHEPAPAVCTerrain@@@Z:PROC ; CMapOutdoor::GetTerrainPointer
EXTRN	?GetAreaPointer@CMapOutdoor@@QAEHEPAPAVCArea@@@Z:PROC ; CMapOutdoor::GetAreaPointer
EXTRN	?BuildViewFrustum@CMapOutdoor@@IAEXAAUD3DXMATRIX@@@Z:PROC ; CMapOutdoor::BuildViewFrustum
EXTRN	?__RenderTerrain_RenderSoftwareTransformPatch@CMapOutdoor@@IAEXXZ:PROC ; CMapOutdoor::__RenderTerrain_RenderSoftwareTransformPatch
EXTRN	?__RenderTerrain_RenderHardwareTransformPatch@CMapOutdoor@@IAEXXZ:PROC ; CMapOutdoor::__RenderTerrain_RenderHardwareTransformPatch
EXTRN	?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ:PROC ; CCameraManager::GetCurrentCamera
EXTRN	?SetLight@CStateManager@@QAEXKPBU_D3DLIGHT8@@@Z:PROC ; CStateManager::SetLight
EXTRN	?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; CStateManager::SaveRenderState
EXTRN	?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z:PROC ; CStateManager::RestoreRenderState
EXTRN	?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; CStateManager::SetRenderState
EXTRN	?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z:PROC ; CStateManager::SetTexture
EXTRN	?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z:PROC ; CStateManager::SaveTextureStageState
EXTRN	?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z:PROC ; CStateManager::RestoreTextureStageState
EXTRN	?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z:PROC ; CStateManager::SetTextureStageState
EXTRN	?SetVertexShader@CStateManager@@QAEXK@Z:PROC	; CStateManager::SetVertexShader
EXTRN	?SaveTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z:PROC ; CStateManager::SaveTransform
EXTRN	?RestoreTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@@Z:PROC ; CStateManager::RestoreTransform
EXTRN	?SetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z:PROC ; CStateManager::SetTransform
EXTRN	?SetStreamSource@CStateManager@@QAEXIPAUIDirect3DVertexBuffer8@@I@Z:PROC ; CStateManager::SetStreamSource
EXTRN	?SetIndices@CStateManager@@QAEXPAUIDirect3DIndexBuffer8@@I@Z:PROC ; CStateManager::SetIndices
EXTRN	?DrawIndexedPrimitive@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IIII@Z:PROC ; CStateManager::DrawIndexedPrimitive
EXTRN	?GetRenderState@CStateManager@@QAEKW4_D3DRENDERSTATETYPE@@@Z:PROC ; CStateManager::GetRenderState
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	___RTDynamicCast:PROC
EXTRN	__chkstk:PROC
EXTRN	__ftol3:PROC
EXTRN	_memmove:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	?nothrow@std@@3Unothrow_t@1@B:BYTE		; std::nothrow
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?ms_matView@CGraphicBase@@1UD3DXMATRIX@@A:ZWORD	; CGraphicBase::ms_matView
EXTRN	?ms_matProj@CGraphicBase@@1UD3DXMATRIX@@A:ZWORD	; CGraphicBase::ms_matProj
EXTRN	?SOFTWARE_TRANSFORM_PATCH_ENABLE@CTerrainPatch@@2_NA:BYTE ; CTerrainPatch::SOFTWARE_TRANSFORM_PATCH_ENABLE
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCSpeedTreeForestDirectX8@@@@0PAVCSpeedTreeForestDirectX8@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCSpeedTreeForestDirectX8@@@@0PAVCSpeedTreeForestDirectX8@@A DD 01H DUP (?) ; CSingleton<CSpeedTreeForestDirectX8>::ms_singleton
_BSS	ENDS
_BSS	SEGMENT
?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A DB 0cH DUP (?) ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A DD 01H DUP (?) ; CSingleton<CCameraManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A DD 01H DUP (?) ; CSingleton<CStateManager>::ms_singleton
_BSS	ENDS
_BSS	SEGMENT
?m_dwRenderedCRCWithNumberVector@@3V?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@A DB 0cH DUP (?) ; m_dwRenderedCRCWithNumberVector
_BSS	ENDS
;	COMDAT ?s_kVct_pkOpaqueThingInstSort@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A
_BSS	SEGMENT
?s_kVct_pkOpaqueThingInstSort@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A DB 0cH DUP (?) ; `CMapOutdoor::RenderArea'::`33'::s_kVct_pkOpaqueThingInstSort
_BSS	ENDS
;	COMDAT ?$TSS0@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4HA
_BSS	SEGMENT
?$TSS0@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4HA DD 01H DUP (?) ; `CMapOutdoor::RenderArea'::`33'::$TSS0
_BSS	ENDS
;	COMDAT ?s_kVct_pkBlendThingInstSort@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A
_BSS	SEGMENT
?s_kVct_pkBlendThingInstSort@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A DB 0cH DUP (?) ; `CMapOutdoor::RenderBlendArea'::`2'::s_kVct_pkBlendThingInstSort
_BSS	ENDS
;	COMDAT ?$TSS0@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4HA DD 01H DUP (?) ; `CMapOutdoor::RenderBlendArea'::`2'::$TSS0
_BSS	ENDS
;	COMDAT ?lStartTime@?1??RenderMarkedArea@CMapOutdoor@@QAEXXZ@4JA
_BSS	SEGMENT
?lStartTime@?1??RenderMarkedArea@CMapOutdoor@@QAEXXZ@4JA DD 01H DUP (?) ; `CMapOutdoor::RenderMarkedArea'::`2'::lStartTime
_BSS	ENDS
;	COMDAT ?$TSS0@?1??RenderMarkedArea@CMapOutdoor@@QAEXXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??RenderMarkedArea@CMapOutdoor@@QAEXXZ@4HA DD 01H DUP (?) ; `CMapOutdoor::RenderMarkedArea'::`2'::$TSS0
_BSS	ENDS
CRT$XCU	SEGMENT
?m_dwRenderedCRCWithNumberVector$initializer$@@3P6AXXZA DD FLAT:??__Em_dwRenderedCRCWithNumberVector@@YAXXZ ; m_dwRenderedCRCWithNumberVector$initializer$
CRT$XCU	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __xmm@7fffffff7fffffff7fffffff7fffffff
CONST	SEGMENT
__xmm@7fffffff7fffffff7fffffff7fffffff DB 0ffH, 0ffH, 0ffH, 07fH, 0ffH, 0ffH
	DB	0ffH, 07fH, 0ffH, 0ffH, 0ffH, 07fH, 0ffH, 0ffH, 0ffH, 07fH
CONST	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@45875000
CONST	SEGMENT
__real@45875000 DD 045875000r			; 4330
CONST	ENDS
;	COMDAT __real@453b8000
CONST	SEGMENT
__real@453b8000 DD 0453b8000r			; 3000
CONST	ENDS
;	COMDAT __real@45075000
CONST	SEGMENT
__real@45075000 DD 045075000r			; 2165
CONST	ENDS
;	COMDAT __real@449c4000
CONST	SEGMENT
__real@449c4000 DD 0449c4000r			; 1250
CONST	ENDS
;	COMDAT __real@437f0000
CONST	SEGMENT
__real@437f0000 DD 0437f0000r			; 255
CONST	ENDS
;	COMDAT __real@42000000
CONST	SEGMENT
__real@42000000 DD 042000000r			; 32
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f400000
CONST	SEGMENT
__real@3f400000 DD 03f400000r			; 0.75
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_R0?AVCGraphicThingInstance@@@8
data$r	SEGMENT
??_R0?AVCGraphicThingInstance@@@8 DD FLAT:??_7type_info@@6B@ ; CGraphicThingInstance `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicThingInstance@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AVCGraphicObjectInstance@@@8
data$r	SEGMENT
??_R0?AVCGraphicObjectInstance@@@8 DD FLAT:??_7type_info@@6B@ ; CGraphicObjectInstance `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicObjectInstance@@', 00H
data$r	ENDS
;	COMDAT ??_C@_0DP@MKJEJLFD@CMapOutdoor?3?3RenderBeforeLensFl@
CONST	SEGMENT
??_C@_0DP@MKJEJLFD@CMapOutdoor?3?3RenderBeforeLensFl@ DB 'CMapOutdoor::Re'
	DB	'nderBeforeLensFlare mc_pEnvironmentData is NULL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$stable_sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@std@@UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@0@0UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$stable_sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@std@@UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@0@0UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@Z$0
__ehfuncinfo$??$stable_sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@std@@UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@0@0UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$stable_sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@std@@UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@0@0UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
CRT$XCU	SEGMENT
??m_TerrainNumVector$initializer$@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2P6AXXZA@@3P6AXXZA DD FLAT:??__E?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A@@YAXXZ ; ??m_TerrainNumVector$initializer$@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$reverse@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$reverse@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0@Z PROC ; std::reverse<CMapOutdoor::TPatchDrawStruct *>, COMDAT

; 6190 : _CONSTEXPR20 void reverse(const _BidIt _First, const _BidIt _Last) { // reverse elements in [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 6191 :     _Adl_verify_range(_First, _Last);
; 6192 :     auto _UFirst = _Get_unwrapped(_First);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]

; 6193 :     auto _ULast  = _Get_unwrapped(_Last);

  00006	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]

; 6220 :     for (; _UFirst != _ULast && _UFirst != --_ULast; ++_UFirst) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	74 1d		 je	 SHORT $LN3@reverse
  0000d	0f 1f 00	 npad	 3
$LL4@reverse:
  00010	83 e8 10	 sub	 eax, 16			; 00000010H
  00013	3b c8		 cmp	 ecx, eax
  00015	74 13		 je	 SHORT $LN3@reverse
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

  00017	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  0001a	0f 10 09	 movups	 xmm1, XMMWORD PTR [ecx]
  0001d	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 6220 :     for (; _UFirst != _ULast && _UFirst != --_ULast; ++_UFirst) {

  00020	83 c1 10	 add	 ecx, 16			; 00000010H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 101  :     _Right   = _STD move(_Tmp);

  00023	0f 11 08	 movups	 XMMWORD PTR [eax], xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 6220 :     for (; _UFirst != _ULast && _UFirst != --_ULast; ++_UFirst) {

  00026	3b c8		 cmp	 ecx, eax
  00028	75 e6		 jne	 SHORT $LL4@reverse
$LN3@reverse:

; 6221 :         swap(*_UFirst, *_ULast); // intentional ADL
; 6222 :     }
; 6223 : }

  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??$reverse@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0@Z ENDP ; std::reverse<CMapOutdoor::TPatchDrawStruct *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Buffered_rotate_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@QAU12@00HH0H@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
__Count1$ = 20						; size = 4
__Count2$ = 24						; size = 4
__Temp_ptr$ = 28					; size = 4
__Capacity$ = 32					; size = 4
??$_Buffered_rotate_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@QAU12@00HH0H@Z PROC ; std::_Buffered_rotate_unchecked<CMapOutdoor::TPatchDrawStruct *>, COMDAT

; 5957 :     const ptrdiff_t _Capacity) { // rotate [_First, _Last) using temp buffer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 5958 :                                  // precondition: _Count1 == distance(_First, _Mid)
; 5959 :                                  // precondition: _Count2 == distance(_Mid, _Last)
; 5960 :     if (_Count1 == 0) {

  00003	8b 45 14	 mov	 eax, DWORD PTR __Count1$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	75 05		 jne	 SHORT $LN2@Buffered_r

; 5961 :         return _Last;

  0000a	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]

; 5985 : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
$LN2@Buffered_r:

; 5962 :     }
; 5963 : 
; 5964 :     if (_Count2 == 0) {

  0000f	8b 4d 18	 mov	 ecx, DWORD PTR __Count2$[ebp]
  00012	85 c9		 test	 ecx, ecx
  00014	75 05		 jne	 SHORT $LN3@Buffered_r

; 5965 :         return _First;

  00016	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]

; 5985 : }

  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
$LN3@Buffered_r:

; 5966 :     }
; 5967 : 
; 5968 :     if (_Count1 <= _Count2 && _Count1 <= _Capacity) { // buffer left range, then copy parts

  0001b	8b 55 20	 mov	 edx, DWORD PTR __Capacity$[ebp]
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	3b c1		 cmp	 eax, ecx
  00023	7f 36		 jg	 SHORT $LN4@Buffered_r
  00025	3b c2		 cmp	 eax, edx
  00027	7f 32		 jg	 SHORT $LN4@Buffered_r
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1634 :             return _Copy_memmove(_First, _Last, _Dest);

  00029	ff 75 1c	 push	 DWORD PTR __Temp_ptr$[ebp]
  0002c	8b 5d 0c	 mov	 ebx, DWORD PTR __Mid$[ebp]
  0002f	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00032	53		 push	 ebx
  00033	56		 push	 esi
  00034	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4894 :             return _Copy_memmove(_First, _Last, _Dest);

  00039	56		 push	 esi
  0003a	ff 75 10	 push	 DWORD PTR __Last$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1604 :     constexpr _Uninitialized_backout(_NoThrowFwdIt _First_, _NoThrowFwdIt _Last_) : _First(_First_), _Last(_Last_) {}

  0003d	8b f8		 mov	 edi, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4894 :             return _Copy_memmove(_First, _Last, _Dest);

  0003f	53		 push	 ebx
  00040	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
  00045	8b f0		 mov	 esi, eax
  00047	56		 push	 esi
  00048	57		 push	 edi
  00049	ff 75 1c	 push	 DWORD PTR __Temp_ptr$[ebp]
  0004c	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
  00051	83 c4 24	 add	 esp, 36			; 00000024H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 5973 :         return _New_mid; // _Backout destroys elements in temporary buffer

  00054	8b c6		 mov	 eax, esi
  00056	5f		 pop	 edi
  00057	5e		 pop	 esi
  00058	5b		 pop	 ebx

; 5985 : }

  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
$LN4@Buffered_r:

; 5974 :     }
; 5975 : 
; 5976 :     if (_Count2 <= _Capacity) { // buffer right range, then copy parts

  0005b	3b ca		 cmp	 ecx, edx
  0005d	7f 2f		 jg	 SHORT $LN5@Buffered_r
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1634 :             return _Copy_memmove(_First, _Last, _Dest);

  0005f	ff 75 1c	 push	 DWORD PTR __Temp_ptr$[ebp]
  00062	8b 7d 10	 mov	 edi, DWORD PTR __Last$[ebp]
  00065	8b 75 0c	 mov	 esi, DWORD PTR __Mid$[ebp]
  00068	57		 push	 edi
  00069	56		 push	 esi
  0006a	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4936 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  0006f	57		 push	 edi
  00070	56		 push	 esi
  00071	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1604 :     constexpr _Uninitialized_backout(_NoThrowFwdIt _First_, _NoThrowFwdIt _Last_) : _First(_First_), _Last(_Last_) {}

  00074	8b d8		 mov	 ebx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4936 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  00076	56		 push	 esi
  00077	e8 00 00 00 00	 call	 ??$_Copy_backward_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_backward_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>

; 4894 :             return _Copy_memmove(_First, _Last, _Dest);

  0007c	56		 push	 esi
  0007d	53		 push	 ebx
  0007e	ff 75 1c	 push	 DWORD PTR __Temp_ptr$[ebp]
  00081	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
  00086	83 c4 24	 add	 esp, 36			; 00000024H
  00089	5f		 pop	 edi
  0008a	5e		 pop	 esi
  0008b	5b		 pop	 ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 5985 : }

  0008c	5d		 pop	 ebp
  0008d	c3		 ret	 0
$LN5@Buffered_r:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 6255 :     if (_UFirst == _UMid) {

  0008e	8b 7d 08	 mov	 edi, DWORD PTR __First$[ebp]
  00091	8b 5d 0c	 mov	 ebx, DWORD PTR __Mid$[ebp]
  00094	3b fb		 cmp	 edi, ebx
  00096	75 0a		 jne	 SHORT $LN57@Buffered_r

; 6256 :         return _Last;

  00098	8b 7d 10	 mov	 edi, DWORD PTR __Last$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 5984 :     return _STD rotate(_First, _Mid, _Last);

  0009b	8b c7		 mov	 eax, edi
  0009d	5f		 pop	 edi
  0009e	5e		 pop	 esi
  0009f	5b		 pop	 ebx

; 5985 : }

  000a0	5d		 pop	 ebp
  000a1	c3		 ret	 0
$LN57@Buffered_r:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 6259 :     if (_UMid == _ULast) {

  000a2	8b 75 10	 mov	 esi, DWORD PTR __Last$[ebp]
  000a5	3b de		 cmp	 ebx, esi
  000a7	74 1f		 je	 SHORT $LN56@Buffered_r

; 6260 :         return _First;
; 6261 :     }
; 6262 : 
; 6263 :     if constexpr (_Is_cpp17_random_iter_v<_FwdIt>) {
; 6264 :         _STD reverse(_UFirst, _UMid);

  000a9	53		 push	 ebx
  000aa	57		 push	 edi
  000ab	e8 00 00 00 00	 call	 ??$reverse@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0@Z ; std::reverse<CMapOutdoor::TPatchDrawStruct *>

; 6265 :         _STD reverse(_UMid, _ULast);

  000b0	56		 push	 esi
  000b1	53		 push	 ebx
  000b2	e8 00 00 00 00	 call	 ??$reverse@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0@Z ; std::reverse<CMapOutdoor::TPatchDrawStruct *>

; 6266 :         _STD reverse(_UFirst, _ULast);

  000b7	56		 push	 esi
  000b8	57		 push	 edi
  000b9	e8 00 00 00 00	 call	 ??$reverse@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0@Z ; std::reverse<CMapOutdoor::TPatchDrawStruct *>

; 6267 :         _Seek_wrapped(_First, _UFirst + (_ULast - _UMid));

  000be	2b f3		 sub	 esi, ebx
  000c0	83 c4 18	 add	 esp, 24			; 00000018H
  000c3	83 e6 f0	 and	 esi, -16		; fffffff0H
  000c6	03 fe		 add	 edi, esi
$LN56@Buffered_r:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 5984 :     return _STD rotate(_First, _Mid, _Last);

  000c8	8b c7		 mov	 eax, edi
  000ca	5f		 pop	 edi
  000cb	5e		 pop	 esi
  000cc	5b		 pop	 ebx

; 5985 : }

  000cd	5d		 pop	 ebp
  000ce	c3		 ret	 0
??$_Buffered_rotate_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@QAU12@00HH0H@Z ENDP ; std::_Buffered_rotate_unchecked<CMapOutdoor::TPatchDrawStruct *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Buffered_inplace_merge_divide_and_conquer2@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@00HH@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
__Count1$ = 20						; size = 4
__Count2$ = 24						; size = 4
__Temp_ptr$ = 28					; size = 4
__Capacity$ = 32					; size = 4
__Pred$ = 36						; size = 1
__Firstn$ = 40						; size = 4
__Lastn$ = 44						; size = 4
__Count1n$ = 48						; size = 4
__Count2n$ = 52						; size = 4
??$_Buffered_inplace_merge_divide_and_conquer2@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@00HH@Z PROC ; std::_Buffered_inplace_merge_divide_and_conquer2<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>, COMDAT

; 7418 :     _BidIt _Firstn, _BidIt _Lastn, _Iter_diff_t<_BidIt> _Count1n, _Iter_diff_t<_BidIt> _Count2n) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 7419 :     // common block of _Buffered_inplace_merge_divide_and_conquer, below
; 7420 :     using _Diff  = _Iter_diff_t<_BidIt>;
; 7421 :     _BidIt _Midn = _Buffered_rotate_unchecked(_Firstn, _Mid, _Lastn, static_cast<_Diff>(_Count1 - _Count1n), _Count2n,

  00003	8b 45 14	 mov	 eax, DWORD PTR __Count1$[ebp]
  00006	2b 45 30	 sub	 eax, DWORD PTR __Count1n$[ebp]
  00009	53		 push	 ebx
  0000a	ff 75 20	 push	 DWORD PTR __Capacity$[ebp]
  0000d	89 45 14	 mov	 DWORD PTR __Count1$[ebp], eax
  00010	ff 75 1c	 push	 DWORD PTR __Temp_ptr$[ebp]
  00013	ff 75 34	 push	 DWORD PTR __Count2n$[ebp]
  00016	50		 push	 eax
  00017	ff 75 2c	 push	 DWORD PTR __Lastn$[ebp]
  0001a	ff 75 0c	 push	 DWORD PTR __Mid$[ebp]
  0001d	ff 75 28	 push	 DWORD PTR __Firstn$[ebp]
  00020	e8 00 00 00 00	 call	 ??$_Buffered_rotate_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@QAU12@00HH0H@Z ; std::_Buffered_rotate_unchecked<CMapOutdoor::TPatchDrawStruct *>

; 7422 :         _Temp_ptr, _Capacity); // rearrange middle
; 7423 :     _Buffered_inplace_merge_unchecked(

  00025	ff 75 24	 push	 DWORD PTR __Pred$[ebp]
  00028	8b d8		 mov	 ebx, eax
  0002a	ff 75 20	 push	 DWORD PTR __Capacity$[ebp]
  0002d	ff 75 1c	 push	 DWORD PTR __Temp_ptr$[ebp]
  00030	ff 75 34	 push	 DWORD PTR __Count2n$[ebp]
  00033	ff 75 30	 push	 DWORD PTR __Count1n$[ebp]
  00036	53		 push	 ebx
  00037	ff 75 28	 push	 DWORD PTR __Firstn$[ebp]
  0003a	ff 75 08	 push	 DWORD PTR __First$[ebp]
  0003d	e8 00 00 00 00	 call	 ??$_Buffered_inplace_merge_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Buffered_inplace_merge_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>

; 7424 :         _First, _Firstn, _Midn, _Count1n, _Count2n, _Temp_ptr, _Capacity, _Pred); // merge each new part
; 7425 :     _Buffered_inplace_merge_unchecked(_Midn, _Lastn, _Last, static_cast<_Diff>(_Count1 - _Count1n),

  00042	ff 75 24	 push	 DWORD PTR __Pred$[ebp]
  00045	8b 45 18	 mov	 eax, DWORD PTR __Count2$[ebp]
  00048	ff 75 20	 push	 DWORD PTR __Capacity$[ebp]
  0004b	2b 45 34	 sub	 eax, DWORD PTR __Count2n$[ebp]
  0004e	ff 75 1c	 push	 DWORD PTR __Temp_ptr$[ebp]
  00051	50		 push	 eax
  00052	ff 75 14	 push	 DWORD PTR __Count1$[ebp]
  00055	ff 75 10	 push	 DWORD PTR __Last$[ebp]
  00058	ff 75 2c	 push	 DWORD PTR __Lastn$[ebp]
  0005b	53		 push	 ebx
  0005c	e8 00 00 00 00	 call	 ??$_Buffered_inplace_merge_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Buffered_inplace_merge_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  00061	83 c4 5c	 add	 esp, 92			; 0000005cH
  00064	5b		 pop	 ebx

; 7426 :         static_cast<_Diff>(_Count2 - _Count2n), _Temp_ptr, _Capacity, _Pred);
; 7427 : }

  00065	5d		 pop	 ebp
  00066	c3		 ret	 0
??$_Buffered_inplace_merge_divide_and_conquer2@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@00HH@Z ENDP ; std::_Buffered_inplace_merge_divide_and_conquer2<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Med3_unchecked@PAU?$pair@MJ@std@@U?$less@X@2@@std@@YAXPAU?$pair@MJ@0@00U?$less@X@0@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
__Right$1$ = -4						; size = 4
__First$ = 8						; size = 4
__Right$1$ = 12						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
__Pred$ = 20						; size = 1
??$_Med3_unchecked@PAU?$pair@MJ@std@@U?$less@X@2@@std@@YAXPAU?$pair@MJ@0@00U?$less@X@0@@Z PROC ; std::_Med3_unchecked<std::pair<float,long> *,std::less<void> >, COMDAT

; 7929 : _CONSTEXPR20 void _Med3_unchecked(_RanIt _First, _RanIt _Mid, _RanIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 506  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __First$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7929 : _CONSTEXPR20 void _Med3_unchecked(_RanIt _First, _RanIt _Mid, _RanIt _Last, _Pr _Pred) {

  0000a	56		 push	 esi
  0000b	57		 push	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 506  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  0000c	8b 7d 0c	 mov	 edi, DWORD PTR __Mid$[ebp]
  0000f	f3 0f 10 03	 movss	 xmm0, DWORD PTR [ebx]
  00013	8d 73 04	 lea	 esi, DWORD PTR [ebx+4]
  00016	f3 0f 10 0f	 movss	 xmm1, DWORD PTR [edi]
  0001a	8d 57 04	 lea	 edx, DWORD PTR [edi+4]
  0001d	0f 2f c1	 comiss	 xmm0, xmm1
  00020	77 18		 ja	 SHORT $LN62@Med3_unche
  00022	0f 2f c8	 comiss	 xmm1, xmm0
  00025	77 06		 ja	 SHORT $LN61@Med3_unche
  00027	8b 02		 mov	 eax, DWORD PTR [edx]
  00029	3b 06		 cmp	 eax, DWORD PTR [esi]
  0002b	7c 0d		 jl	 SHORT $LN62@Med3_unche
$LN61@Med3_unche:
  0002d	8b ca		 mov	 ecx, edx
  0002f	89 55 f8	 mov	 DWORD PTR $T1[ebp], edx
  00032	89 75 fc	 mov	 DWORD PTR __Right$1$[ebp], esi
  00035	89 4d 0c	 mov	 DWORD PTR __Right$1$[ebp], ecx
  00038	eb 2a		 jmp	 SHORT $LN21@Med3_unche
$LN62@Med3_unche:
  0003a	8b ca		 mov	 ecx, edx
  0003c	8b c6		 mov	 eax, esi
  0003e	89 45 fc	 mov	 DWORD PTR __Right$1$[ebp], eax
  00041	89 4d f8	 mov	 DWORD PTR $T1[ebp], ecx
  00044	89 4d 0c	 mov	 DWORD PTR __Right$1$[ebp], ecx

; 439  :         if (this != _STD addressof(_Right)) {

  00047	3b fb		 cmp	 edi, ebx
  00049	74 19		 je	 SHORT $LN21@Med3_unche

; 100  :     _Left    = _STD move(_Right);

  0004b	f3 0f 11 07	 movss	 DWORD PTR [edi], xmm0
  0004f	8b 00		 mov	 eax, DWORD PTR [eax]

; 101  :     _Right   = _STD move(_Tmp);

  00051	f3 0f 11 0b	 movss	 DWORD PTR [ebx], xmm1

; 100  :     _Left    = _STD move(_Right);

  00055	8b da		 mov	 ebx, edx
  00057	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00059	89 03		 mov	 DWORD PTR [ebx], eax

; 101  :     _Right   = _STD move(_Tmp);

  0005b	8b c6		 mov	 eax, esi
  0005d	8b 5d 08	 mov	 ebx, DWORD PTR __First$[ebp]
  00060	89 08		 mov	 DWORD PTR [eax], ecx
  00062	8b ca		 mov	 ecx, edx
$LN21@Med3_unche:

; 506  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00064	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
  00067	f3 0f 10 07	 movss	 xmm0, DWORD PTR [edi]
  0006b	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  0006f	0f 2f c1	 comiss	 xmm0, xmm1
  00072	77 0f		 ja	 SHORT $LN57@Med3_unche
  00074	0f 2f c8	 comiss	 xmm1, xmm0
  00077	77 5e		 ja	 SHORT $LN53@Med3_unche
  00079	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0007c	3b 01		 cmp	 eax, DWORD PTR [ecx]
  0007e	7d 57		 jge	 SHORT $LN53@Med3_unche
  00080	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
$LN57@Med3_unche:

; 439  :         if (this != _STD addressof(_Right)) {

  00083	3b c7		 cmp	 eax, edi
  00085	74 1e		 je	 SHORT $LN65@Med3_unche

; 100  :     _Left    = _STD move(_Right);

  00087	8b 5d 10	 mov	 ebx, DWORD PTR __Last$[ebp]
  0008a	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 101  :     _Right   = _STD move(_Tmp);

  0008e	f3 0f 11 0f	 movss	 DWORD PTR [edi], xmm1

; 99   :     _Ty _Tmp = _STD move(_Left);

  00092	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 100  :     _Left    = _STD move(_Right);

  00095	8b 45 0c	 mov	 eax, DWORD PTR __Right$1$[ebp]
  00098	8b 00		 mov	 eax, DWORD PTR [eax]
  0009a	89 43 04	 mov	 DWORD PTR [ebx+4], eax

; 101  :     _Right   = _STD move(_Tmp);

  0009d	8b 45 0c	 mov	 eax, DWORD PTR __Right$1$[ebp]
  000a0	8b 5d 08	 mov	 ebx, DWORD PTR __First$[ebp]
  000a3	89 08		 mov	 DWORD PTR [eax], ecx
$LN65@Med3_unche:

; 506  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  000a5	f3 0f 10 0f	 movss	 xmm1, DWORD PTR [edi]
  000a9	f3 0f 10 03	 movss	 xmm0, DWORD PTR [ebx]
  000ad	0f 2f c1	 comiss	 xmm0, xmm1
  000b0	77 11		 ja	 SHORT $LN68@Med3_unche
  000b2	0f 2f c8	 comiss	 xmm1, xmm0
  000b5	77 20		 ja	 SHORT $LN53@Med3_unche
  000b7	8b 45 f8	 mov	 eax, DWORD PTR $T1[ebp]
  000ba	8b 4d fc	 mov	 ecx, DWORD PTR __Right$1$[ebp]
  000bd	8b 00		 mov	 eax, DWORD PTR [eax]
  000bf	3b 01		 cmp	 eax, DWORD PTR [ecx]
  000c1	7d 14		 jge	 SHORT $LN53@Med3_unche
$LN68@Med3_unche:

; 439  :         if (this != _STD addressof(_Right)) {

  000c3	3b fb		 cmp	 edi, ebx
  000c5	74 10		 je	 SHORT $LN53@Med3_unche

; 100  :     _Left    = _STD move(_Right);

  000c7	f3 0f 11 07	 movss	 DWORD PTR [edi], xmm0
  000cb	8b 06		 mov	 eax, DWORD PTR [esi]

; 101  :     _Right   = _STD move(_Tmp);

  000cd	f3 0f 11 0b	 movss	 DWORD PTR [ebx], xmm1

; 99   :     _Ty _Tmp = _STD move(_Left);

  000d1	8b 0a		 mov	 ecx, DWORD PTR [edx]

; 100  :     _Left    = _STD move(_Right);

  000d3	89 02		 mov	 DWORD PTR [edx], eax

; 101  :     _Right   = _STD move(_Tmp);

  000d5	89 0e		 mov	 DWORD PTR [esi], ecx
$LN53@Med3_unche:
  000d7	5f		 pop	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7942 : }

  000d8	5e		 pop	 esi
  000d9	5b		 pop	 ebx
  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c3		 ret	 0
??$_Med3_unchecked@PAU?$pair@MJ@std@@U?$less@X@2@@std@@YAXPAU?$pair@MJ@0@00U?$less@X@0@@Z ENDP ; std::_Med3_unchecked<std::pair<float,long> *,std::less<void> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Buffered_inplace_merge_divide_and_conquer@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z
_TEXT	SEGMENT
$T1 = -32						; size = 4
__Firstn$1$ = -32					; size = 4
__Count2n$1$ = -28					; size = 4
__Count1n$1$ = -28					; size = 4
__Val$1$ = -24						; size = 4
$T2 = -24						; size = 4
__Count2$1$ = -20					; size = 4
__UFirst$1$ = -20					; size = 4
__Count2$1$ = -16					; size = 4
__Lastn$1$ = -16					; size = 4
__UMid$1$ = -12						; size = 4
__Val$1$ = -12						; size = 4
__UFirst$1$ = -8					; size = 4
__UMid$1$ = -8						; size = 4
_blhsOrderFound$1$ = -1					; size = 1
_blhsOrderFound$1$ = -1					; size = 1
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
__Count1$ = 20						; size = 4
__Count2$ = 24						; size = 4
__Temp_ptr$ = 28					; size = 4
__Capacity$ = 32					; size = 4
__Pred$ = 36						; size = 1
??$_Buffered_inplace_merge_divide_and_conquer@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z PROC ; std::_Buffered_inplace_merge_divide_and_conquer<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>, COMDAT

; 7431 :     _Iter_diff_t<_BidIt> _Count2, _Iter_value_t<_BidIt>* const _Temp_ptr, const ptrdiff_t _Capacity, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 7432 :     // merge sorted [_First, _Mid) with sorted [_Mid, _Last)
; 7433 :     // usual invariants apply
; 7434 :     using _Diff = _Iter_diff_t<_BidIt>;
; 7435 :     if (_Count1 <= _Count2) {

  00003	8b 4d 14	 mov	 ecx, DWORD PTR __Count1$[ebp]
  00006	83 ec 20	 sub	 esp, 32			; 00000020H
  00009	8b 45 18	 mov	 eax, DWORD PTR __Count2$[ebp]
  0000c	53		 push	 ebx
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	3b c8		 cmp	 ecx, eax
  00011	0f 8f a7 01 00
	00		 jg	 $LN2@Buffered_i
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1422 :         return _Last - _First; // assume the iterator will do debug checking

  00017	8b 55 10	 mov	 edx, DWORD PTR __Last$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7436 :         const _Diff _Count1n = _Count1 >> 1; // shift for codegen

  0001a	8b c1		 mov	 eax, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 7034 :     auto _UFirst                = _Get_unwrapped(_First);

  0001c	8b 4d 0c	 mov	 ecx, DWORD PTR __Mid$[ebp]

; 1422 :         return _Last - _First; // assume the iterator will do debug checking

  0001f	8b da		 mov	 ebx, edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7436 :         const _Diff _Count1n = _Count1 >> 1; // shift for codegen

  00021	d1 f8		 sar	 eax, 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1422 :         return _Last - _First; // assume the iterator will do debug checking

  00023	2b d9		 sub	 ebx, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7436 :         const _Diff _Count1n = _Count1 >> 1; // shift for codegen

  00025	89 45 e4	 mov	 DWORD PTR __Count1n$1$[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 7034 :     auto _UFirst                = _Get_unwrapped(_First);

  00028	8b f1		 mov	 esi, ecx

; 1394 :         _Where += _Off;

  0002a	c1 e0 04	 shl	 eax, 4
  0002d	03 45 08	 add	 eax, DWORD PTR __First$[ebp]

; 1422 :         return _Last - _First; // assume the iterator will do debug checking

  00030	c1 fb 04	 sar	 ebx, 4

; 1394 :         _Where += _Off;

  00033	89 45 e0	 mov	 DWORD PTR __Firstn$1$[ebp], eax

; 7034 :     auto _UFirst                = _Get_unwrapped(_First);

  00036	89 75 ec	 mov	 DWORD PTR __UFirst$1$[ebp], esi

; 7035 :     _Iter_diff_t<_FwdIt> _Count = _STD distance(_UFirst, _Get_unwrapped(_Last));
; 7036 : 
; 7037 :     while (0 < _Count) { // divide and conquer, find half that contains answer

  00039	85 db		 test	 ebx, ebx
  0003b	0f 8e 49 01 00
	00		 jle	 $LN11@Buffered_i
  00041	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00047	8d 78 04	 lea	 edi, DWORD PTR [eax+4]
  0004a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00050	89 7d f4	 mov	 DWORD PTR __Val$1$[ebp], edi
$LL10@Buffered_i:

; 7038 :         const _Iter_diff_t<_FwdIt> _Count2 = _Count / 2;

  00053	8b c3		 mov	 eax, ebx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 359  : 				bool blhsOrderFound = false;

  00055	c6 45 ff 00	 mov	 BYTE PTR _blhsOrderFound$1$[ebp], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 7038 :         const _Iter_diff_t<_FwdIt> _Count2 = _Count / 2;

  00059	d1 e8		 shr	 eax, 1
  0005b	89 45 f0	 mov	 DWORD PTR __Count2$1$[ebp], eax

; 1394 :         _Where += _Off;

  0005e	c1 e0 04	 shl	 eax, 4
  00061	03 c6		 add	 eax, esi
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 358  : 				DWORD lhsTerrainNumOrder = 0, rhsTerrainNumOrder = 0;

  00063	33 f6		 xor	 esi, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1394 :         _Where += _Off;

  00065	89 45 f8	 mov	 DWORD PTR __UMid$1$[ebp], eax

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00068	0f b6 40 04	 movzx	 eax, BYTE PTR [eax+4]
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	52		 push	 edx
  0006f	e8 00 00 00 00	 call	 ??$__std_find_trivial@EE@@YAPAEPAE0E@Z ; __std_find_trivial<unsigned char,unsigned char>

; 5816 :                 return _Result;

  00074	89 45 e8	 mov	 DWORD PTR $T2[ebp], eax

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00077	0f b6 07	 movzx	 eax, BYTE PTR [edi]
  0007a	50		 push	 eax
  0007b	ff 35 04 00 00
	00		 push	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00081	ff 35 00 00 00
	00		 push	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00087	e8 00 00 00 00	 call	 ??$__std_find_trivial@EE@@YAPAEPAE0E@Z ; __std_find_trivial<unsigned char,unsigned char>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0008c	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5816 :                 return _Result;

  00092	8b f8		 mov	 edi, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00094	8b 45 e8	 mov	 eax, DWORD PTR $T2[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00097	83 c4 18	 add	 esp, 24			; 00000018H
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 365  : 				if (lhsIterator != m_TerrainNumVector.end())

  0009a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000a0	3b c1		 cmp	 eax, ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 365  : 				if (lhsIterator != m_TerrainNumVector.end())

  000a2	74 08		 je	 SHORT $LN22@Buffered_i
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000a4	8b f0		 mov	 esi, eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 367  : 					blhsOrderFound = true;

  000a6	c6 45 ff 01	 mov	 BYTE PTR _blhsOrderFound$1$[ebp], 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000aa	2b f2		 sub	 esi, edx
$LN22@Buffered_i:
  000ac	3b f9		 cmp	 edi, ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 370  : 				if (rhsIterator != m_TerrainNumVector.end())

  000ae	74 04		 je	 SHORT $LN333@Buffered_i
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000b0	2b fa		 sub	 edi, edx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 375  : 				if (!brhsOrderFound)

  000b2	eb 3b		 jmp	 SHORT $LN24@Buffered_i
$LN333@Buffered_i:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  000b4	8b 45 f4	 mov	 eax, DWORD PTR __Val$1$[ebp]
  000b7	3b 0d 08 00 00
	00		 cmp	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  000bd	74 13		 je	 SHORT $LN110@Buffered_i

; 797  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  000bf	8a 00		 mov	 al, BYTE PTR [eax]
  000c1	88 01		 mov	 BYTE PTR [ecx], al

; 798  :         } else {
; 799  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 800  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 801  :             _ASAN_VECTOR_RELEASE_GUARD;
; 802  :         }
; 803  : 
; 804  :         _Orphan_range(_Mylast, _Mylast);
; 805  :         _Ty& _Result = *_Mylast;
; 806  :         ++_Mylast;

  000c3	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  000c9	41		 inc	 ecx
  000ca	89 0d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, ecx

; 782  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  000d0	eb 12		 jmp	 SHORT $LN109@Buffered_i
$LN110@Buffered_i:

; 783  :         }
; 784  : 
; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  000d2	50		 push	 eax
  000d3	51		 push	 ecx
  000d4	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  000d9	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@AAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  000de	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
$LN109@Buffered_i:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 378  : 					rhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  000e4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  000ea	8b f9		 mov	 edi, ecx
  000ec	2b fa		 sub	 edi, edx
  000ee	4f		 dec	 edi
$LN24@Buffered_i:

; 379  : 				}
; 380  : 				if (!blhsOrderFound)

  000ef	80 7d ff 00	 cmp	 BYTE PTR _blhsOrderFound$1$[ebp], 0
  000f3	75 67		 jne	 SHORT $LN27@Buffered_i
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  000f5	8b 45 f8	 mov	 eax, DWORD PTR __UMid$1$[ebp]
  000f8	0f b6 40 04	 movzx	 eax, BYTE PTR [eax+4]
  000fc	50		 push	 eax
  000fd	51		 push	 ecx
  000fe	52		 push	 edx
  000ff	e8 00 00 00 00	 call	 ??$__std_find_trivial@EE@@YAPAEPAE0E@Z ; __std_find_trivial<unsigned char,unsigned char>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00104	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5816 :                 return _Result;

  0010a	8b f0		 mov	 esi, eax
  0010c	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0010f	3b f1		 cmp	 esi, ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 383  : 					if (lhsIterator != m_TerrainNumVector.end())

  00111	74 0a		 je	 SHORT $LN334@Buffered_i
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00113	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00119	2b f2		 sub	 esi, edx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 388  : 					if (!blhsOrderFound)

  0011b	eb 3f		 jmp	 SHORT $LN27@Buffered_i
$LN334@Buffered_i:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  0011d	8b 45 f8	 mov	 eax, DWORD PTR __UMid$1$[ebp]
  00120	3b 0d 08 00 00
	00		 cmp	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  00126	74 14		 je	 SHORT $LN158@Buffered_i

; 797  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  00128	8a 40 04	 mov	 al, BYTE PTR [eax+4]
  0012b	88 01		 mov	 BYTE PTR [ecx], al

; 798  :         } else {
; 799  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 800  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 801  :             _ASAN_VECTOR_RELEASE_GUARD;
; 802  :         }
; 803  : 
; 804  :         _Orphan_range(_Mylast, _Mylast);
; 805  :         _Ty& _Result = *_Mylast;
; 806  :         ++_Mylast;

  0012d	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00133	41		 inc	 ecx
  00134	89 0d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, ecx

; 782  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0013a	eb 15		 jmp	 SHORT $LN157@Buffered_i
$LN158@Buffered_i:

; 783  :         }
; 784  : 
; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0013c	83 c0 04	 add	 eax, 4
  0013f	50		 push	 eax
  00140	51		 push	 ecx
  00141	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  00146	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@AAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  0014b	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
$LN157@Buffered_i:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 391  : 						lhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  00151	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00157	8b f1		 mov	 esi, ecx
  00159	2b f2		 sub	 esi, edx
  0015b	4e		 dec	 esi
$LN27@Buffered_i:

; 392  : 					}
; 393  : 				}
; 394  : 
; 395  : 				return lhsTerrainNumOrder < rhsTerrainNumOrder;

  0015c	3b f7		 cmp	 esi, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 7040 :         if (_Pred(*_UMid, _Val)) { // try top half

  0015e	73 13		 jae	 SHORT $LN12@Buffered_i

; 7041 :             _UFirst = _Next_iter(_UMid);

  00160	8b 75 f8	 mov	 esi, DWORD PTR __UMid$1$[ebp]

; 7042 :             _Count -= _Count2 + 1;

  00163	83 c8 ff	 or	 eax, -1
  00166	2b 45 f0	 sub	 eax, DWORD PTR __Count2$1$[ebp]
  00169	83 c6 10	 add	 esi, 16			; 00000010H
  0016c	89 75 ec	 mov	 DWORD PTR __UFirst$1$[ebp], esi
  0016f	03 d8		 add	 ebx, eax

; 7043 :         } else {

  00171	eb 06		 jmp	 SHORT $LN13@Buffered_i
$LN12@Buffered_i:

; 7044 :             _Count = _Count2;

  00173	8b 5d f0	 mov	 ebx, DWORD PTR __Count2$1$[ebp]
  00176	8b 75 ec	 mov	 esi, DWORD PTR __UFirst$1$[ebp]
$LN13@Buffered_i:

; 7035 :     _Iter_diff_t<_FwdIt> _Count = _STD distance(_UFirst, _Get_unwrapped(_Last));
; 7036 : 
; 7037 :     while (0 < _Count) { // divide and conquer, find half that contains answer

  00179	8b 7d f4	 mov	 edi, DWORD PTR __Val$1$[ebp]
  0017c	85 db		 test	 ebx, ebx
  0017e	0f 8f cf fe ff
	ff		 jg	 $LL10@Buffered_i
  00184	8b 4d 0c	 mov	 ecx, DWORD PTR __Mid$[ebp]
  00187	8b 55 10	 mov	 edx, DWORD PTR __Last$[ebp]
$LN11@Buffered_i:

; 1422 :         return _Last - _First; // assume the iterator will do debug checking

  0018a	8b c6		 mov	 eax, esi
  0018c	2b c1		 sub	 eax, ecx
  0018e	c1 f8 04	 sar	 eax, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7439 :         _STD _Buffered_inplace_merge_divide_and_conquer2(_First, _Mid, _Last, _Count1, _Count2, _Temp_ptr, _Capacity,

  00191	50		 push	 eax
  00192	ff 75 e4	 push	 DWORD PTR __Count1n$1$[ebp]
  00195	8b 45 18	 mov	 eax, DWORD PTR __Count2$[ebp]
  00198	56		 push	 esi
  00199	ff 75 e0	 push	 DWORD PTR __Firstn$1$[ebp]
  0019c	ff 75 24	 push	 DWORD PTR __Pred$[ebp]
  0019f	ff 75 20	 push	 DWORD PTR __Capacity$[ebp]
  001a2	ff 75 1c	 push	 DWORD PTR __Temp_ptr$[ebp]
  001a5	50		 push	 eax
  001a6	8b 45 14	 mov	 eax, DWORD PTR __Count1$[ebp]
  001a9	50		 push	 eax
  001aa	52		 push	 edx
  001ab	51		 push	 ecx
  001ac	ff 75 08	 push	 DWORD PTR __First$[ebp]

; 7446 :             _Pred, _Firstn, _Lastn, _STD distance(_First, _Firstn), _Count2n);
; 7447 :     }
; 7448 : }

  001af	e8 00 00 00 00	 call	 ??$_Buffered_inplace_merge_divide_and_conquer2@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@00HH@Z ; std::_Buffered_inplace_merge_divide_and_conquer2<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  001b4	83 c4 30	 add	 esp, 48			; 00000030H
  001b7	5f		 pop	 edi
  001b8	5e		 pop	 esi
  001b9	5b		 pop	 ebx
  001ba	8b e5		 mov	 esp, ebp
  001bc	5d		 pop	 ebp
  001bd	c3		 ret	 0
$LN2@Buffered_i:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1394 :         _Where += _Off;

  001be	8b 55 0c	 mov	 edx, DWORD PTR __Mid$[ebp]

; 1422 :         return _Last - _First; // assume the iterator will do debug checking

  001c1	8b da		 mov	 ebx, edx

; 7062 :     auto _UFirst                = _Get_unwrapped(_First);

  001c3	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  001c6	8b f1		 mov	 esi, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7442 :         const _Diff _Count2n = _Count2 >> 1; // shift for codegen

  001c8	d1 f8		 sar	 eax, 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1422 :         return _Last - _First; // assume the iterator will do debug checking

  001ca	2b d9		 sub	 ebx, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7442 :         const _Diff _Count2n = _Count2 >> 1; // shift for codegen

  001cc	89 45 e4	 mov	 DWORD PTR __Count2n$1$[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1394 :         _Where += _Off;

  001cf	c1 e0 04	 shl	 eax, 4
  001d2	03 c2		 add	 eax, edx

; 1422 :         return _Last - _First; // assume the iterator will do debug checking

  001d4	c1 fb 04	 sar	 ebx, 4

; 1394 :         _Where += _Off;

  001d7	89 45 f0	 mov	 DWORD PTR __Lastn$1$[ebp], eax

; 7062 :     auto _UFirst                = _Get_unwrapped(_First);

  001da	89 75 f8	 mov	 DWORD PTR __UFirst$1$[ebp], esi

; 7063 :     _Iter_diff_t<_FwdIt> _Count = _STD distance(_UFirst, _Get_unwrapped(_Last));
; 7064 : 
; 7065 :     while (0 < _Count) { // divide and conquer, find half that contains answer

  001dd	85 db		 test	 ebx, ebx
  001df	0f 8e 52 01 00
	00		 jle	 $LN172@Buffered_i
  001e5	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  001eb	83 c0 04	 add	 eax, 4
  001ee	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  001f4	89 45 e8	 mov	 DWORD PTR __Val$1$[ebp], eax
$LL171@Buffered_i:

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  001f7	0f b6 00	 movzx	 eax, BYTE PTR [eax]

; 7066 :         _Iter_diff_t<_FwdIt> _Count2 = _Count / 2;

  001fa	8b f3		 mov	 esi, ebx
  001fc	d1 ee		 shr	 esi, 1

; 1394 :         _Where += _Off;

  001fe	8b fe		 mov	 edi, esi

; 7066 :         _Iter_diff_t<_FwdIt> _Count2 = _Count / 2;

  00200	89 75 ec	 mov	 DWORD PTR __Count2$1$[ebp], esi

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00203	50		 push	 eax

; 1394 :         _Where += _Off;

  00204	c1 e7 04	 shl	 edi, 4
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 358  : 				DWORD lhsTerrainNumOrder = 0, rhsTerrainNumOrder = 0;

  00207	33 f6		 xor	 esi, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1394 :         _Where += _Off;

  00209	03 7d f8	 add	 edi, DWORD PTR __UFirst$1$[ebp]

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  0020c	51		 push	 ecx
  0020d	52		 push	 edx

; 1394 :         _Where += _Off;

  0020e	89 7d f4	 mov	 DWORD PTR __UMid$1$[ebp], edi
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 359  : 				bool blhsOrderFound = false;

  00211	c6 45 ff 00	 mov	 BYTE PTR _blhsOrderFound$1$[ebp], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00215	e8 00 00 00 00	 call	 ??$__std_find_trivial@EE@@YAPAEPAE0E@Z ; __std_find_trivial<unsigned char,unsigned char>
  0021a	0f b6 4f 04	 movzx	 ecx, BYTE PTR [edi+4]
  0021e	51		 push	 ecx
  0021f	ff 35 04 00 00
	00		 push	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4

; 5816 :                 return _Result;

  00225	89 45 e0	 mov	 DWORD PTR $T1[ebp], eax

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00228	ff 35 00 00 00
	00		 push	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  0022e	e8 00 00 00 00	 call	 ??$__std_find_trivial@EE@@YAPAEPAE0E@Z ; __std_find_trivial<unsigned char,unsigned char>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00233	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5816 :                 return _Result;

  00239	8b f8		 mov	 edi, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0023b	8b 45 e0	 mov	 eax, DWORD PTR $T1[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  0023e	83 c4 18	 add	 esp, 24			; 00000018H
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 365  : 				if (lhsIterator != m_TerrainNumVector.end())

  00241	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00247	3b c1		 cmp	 eax, ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 365  : 				if (lhsIterator != m_TerrainNumVector.end())

  00249	74 08		 je	 SHORT $LN183@Buffered_i
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0024b	8b f0		 mov	 esi, eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 367  : 					blhsOrderFound = true;

  0024d	c6 45 ff 01	 mov	 BYTE PTR _blhsOrderFound$1$[ebp], 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00251	2b f2		 sub	 esi, edx
$LN183@Buffered_i:
  00253	3b f9		 cmp	 edi, ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 370  : 				if (rhsIterator != m_TerrainNumVector.end())

  00255	74 04		 je	 SHORT $LN335@Buffered_i
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00257	2b fa		 sub	 edi, edx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 375  : 				if (!brhsOrderFound)

  00259	eb 42		 jmp	 SHORT $LN185@Buffered_i
$LN335@Buffered_i:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  0025b	3b 0d 08 00 00
	00		 cmp	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  00261	74 17		 je	 SHORT $LN271@Buffered_i

; 797  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  00263	8b 55 f4	 mov	 edx, DWORD PTR __UMid$1$[ebp]
  00266	8a 42 04	 mov	 al, BYTE PTR [edx+4]
  00269	88 01		 mov	 BYTE PTR [ecx], al

; 798  :         } else {
; 799  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 800  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 801  :             _ASAN_VECTOR_RELEASE_GUARD;
; 802  :         }
; 803  : 
; 804  :         _Orphan_range(_Mylast, _Mylast);
; 805  :         _Ty& _Result = *_Mylast;
; 806  :         ++_Mylast;

  0026b	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00271	41		 inc	 ecx
  00272	89 0d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, ecx

; 782  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00278	eb 18		 jmp	 SHORT $LN270@Buffered_i
$LN271@Buffered_i:

; 783  :         }
; 784  : 
; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0027a	8b 45 f4	 mov	 eax, DWORD PTR __UMid$1$[ebp]
  0027d	83 c0 04	 add	 eax, 4
  00280	50		 push	 eax
  00281	51		 push	 ecx
  00282	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  00287	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@AAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  0028c	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
$LN270@Buffered_i:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 378  : 					rhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  00292	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00298	8b f9		 mov	 edi, ecx
  0029a	2b fa		 sub	 edi, edx
  0029c	4f		 dec	 edi
$LN185@Buffered_i:

; 379  : 				}
; 380  : 				if (!blhsOrderFound)

  0029d	80 7d ff 00	 cmp	 BYTE PTR _blhsOrderFound$1$[ebp], 0
  002a1	75 66		 jne	 SHORT $LN188@Buffered_i
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  002a3	8b 45 f0	 mov	 eax, DWORD PTR __Lastn$1$[ebp]
  002a6	0f b6 40 04	 movzx	 eax, BYTE PTR [eax+4]
  002aa	50		 push	 eax
  002ab	51		 push	 ecx
  002ac	52		 push	 edx
  002ad	e8 00 00 00 00	 call	 ??$__std_find_trivial@EE@@YAPAEPAE0E@Z ; __std_find_trivial<unsigned char,unsigned char>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  002b2	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5816 :                 return _Result;

  002b8	8b f0		 mov	 esi, eax
  002ba	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  002bd	3b f1		 cmp	 esi, ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 383  : 					if (lhsIterator != m_TerrainNumVector.end())

  002bf	74 0a		 je	 SHORT $LN336@Buffered_i
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  002c1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  002c7	2b f2		 sub	 esi, edx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 388  : 					if (!blhsOrderFound)

  002c9	eb 3e		 jmp	 SHORT $LN188@Buffered_i
$LN336@Buffered_i:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  002cb	3b 0d 08 00 00
	00		 cmp	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  002d1	74 17		 je	 SHORT $LN319@Buffered_i

; 797  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  002d3	8b 45 f0	 mov	 eax, DWORD PTR __Lastn$1$[ebp]
  002d6	8a 40 04	 mov	 al, BYTE PTR [eax+4]
  002d9	88 01		 mov	 BYTE PTR [ecx], al

; 798  :         } else {
; 799  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 800  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 801  :             _ASAN_VECTOR_RELEASE_GUARD;
; 802  :         }
; 803  : 
; 804  :         _Orphan_range(_Mylast, _Mylast);
; 805  :         _Ty& _Result = *_Mylast;
; 806  :         ++_Mylast;

  002db	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  002e1	41		 inc	 ecx
  002e2	89 0d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, ecx

; 782  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  002e8	eb 14		 jmp	 SHORT $LN318@Buffered_i
$LN319@Buffered_i:

; 783  :         }
; 784  : 
; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  002ea	ff 75 e8	 push	 DWORD PTR __Val$1$[ebp]
  002ed	51		 push	 ecx
  002ee	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  002f3	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@AAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  002f8	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
$LN318@Buffered_i:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 391  : 						lhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  002fe	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00304	8b f1		 mov	 esi, ecx
  00306	2b f2		 sub	 esi, edx
  00308	4e		 dec	 esi
$LN188@Buffered_i:

; 392  : 					}
; 393  : 				}
; 394  : 
; 395  : 				return lhsTerrainNumOrder < rhsTerrainNumOrder;

  00309	3b f7		 cmp	 esi, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 7068 :         if (_Pred(_Val, *_UMid)) {

  0030b	73 08		 jae	 SHORT $LN173@Buffered_i

; 7069 :             _Count = _Count2;

  0030d	8b 5d ec	 mov	 ebx, DWORD PTR __Count2$1$[ebp]

; 7070 :         } else { // try top half

  00310	8b 75 f8	 mov	 esi, DWORD PTR __UFirst$1$[ebp]
  00313	eb 11		 jmp	 SHORT $LN174@Buffered_i
$LN173@Buffered_i:

; 7071 :             _UFirst = _Next_iter(_UMid);

  00315	8b 75 f4	 mov	 esi, DWORD PTR __UMid$1$[ebp]

; 7072 :             _Count -= _Count2 + 1;

  00318	83 c8 ff	 or	 eax, -1
  0031b	2b 45 ec	 sub	 eax, DWORD PTR __Count2$1$[ebp]
  0031e	83 c6 10	 add	 esi, 16			; 00000010H
  00321	89 75 f8	 mov	 DWORD PTR __UFirst$1$[ebp], esi
  00324	03 d8		 add	 ebx, eax
$LN174@Buffered_i:

; 7063 :     _Iter_diff_t<_FwdIt> _Count = _STD distance(_UFirst, _Get_unwrapped(_Last));
; 7064 : 
; 7065 :     while (0 < _Count) { // divide and conquer, find half that contains answer

  00326	8b 45 e8	 mov	 eax, DWORD PTR __Val$1$[ebp]
  00329	85 db		 test	 ebx, ebx
  0032b	0f 8f c6 fe ff
	ff		 jg	 $LL171@Buffered_i
  00331	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00334	8b 55 0c	 mov	 edx, DWORD PTR __Mid$[ebp]
$LN172@Buffered_i:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7445 :         _STD _Buffered_inplace_merge_divide_and_conquer2(_First, _Mid, _Last, _Count1, _Count2, _Temp_ptr, _Capacity,

  00337	ff 75 e4	 push	 DWORD PTR __Count2n$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1422 :         return _Last - _First; // assume the iterator will do debug checking

  0033a	8b c6		 mov	 eax, esi
  0033c	2b c1		 sub	 eax, ecx
  0033e	c1 f8 04	 sar	 eax, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7445 :         _STD _Buffered_inplace_merge_divide_and_conquer2(_First, _Mid, _Last, _Count1, _Count2, _Temp_ptr, _Capacity,

  00341	50		 push	 eax
  00342	ff 75 f0	 push	 DWORD PTR __Lastn$1$[ebp]
  00345	8b 45 18	 mov	 eax, DWORD PTR __Count2$[ebp]
  00348	56		 push	 esi
  00349	ff 75 24	 push	 DWORD PTR __Pred$[ebp]
  0034c	ff 75 20	 push	 DWORD PTR __Capacity$[ebp]
  0034f	ff 75 1c	 push	 DWORD PTR __Temp_ptr$[ebp]
  00352	50		 push	 eax
  00353	8b 45 14	 mov	 eax, DWORD PTR __Count1$[ebp]
  00356	50		 push	 eax
  00357	ff 75 10	 push	 DWORD PTR __Last$[ebp]
  0035a	52		 push	 edx
  0035b	51		 push	 ecx

; 7446 :             _Pred, _Firstn, _Lastn, _STD distance(_First, _Firstn), _Count2n);
; 7447 :     }
; 7448 : }

  0035c	e8 00 00 00 00	 call	 ??$_Buffered_inplace_merge_divide_and_conquer2@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@00HH@Z ; std::_Buffered_inplace_merge_divide_and_conquer2<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  00361	83 c4 30	 add	 esp, 48			; 00000030H
  00364	5f		 pop	 edi
  00365	5e		 pop	 esi
  00366	5b		 pop	 ebx
  00367	8b e5		 mov	 esp, ebp
  00369	5d		 pop	 ebp
  0036a	c3		 ret	 0
??$_Buffered_inplace_merge_divide_and_conquer@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z ENDP ; std::_Buffered_inplace_merge_divide_and_conquer<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Inplace_merge_buffer_right@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00QAU12@UFSortPatchDrawStructWithTerrainNum@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 4
tv1067 = -8						; size = 4
__Right_last$1$ = -4					; size = 4
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
_blhsOrderFound$1$ = 15					; size = 1
__Last$ = 16						; size = 4
__Temp_ptr$ = 20					; size = 4
__Pred$ = 24						; size = 1
??$_Inplace_merge_buffer_right@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00QAU12@UFSortPatchDrawStructWithTerrainNum@2@@Z PROC ; std::_Inplace_merge_buffer_right<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>, COMDAT

; 7379 :     _BidIt _First, _BidIt _Mid, _BidIt _Last, _Iter_value_t<_BidIt>* const _Temp_ptr, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1634 :             return _Copy_memmove(_First, _Last, _Dest);

  00007	8b 5d 0c	 mov	 ebx, DWORD PTR __Mid$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7379 :     _BidIt _First, _BidIt _Mid, _BidIt _Last, _Iter_value_t<_BidIt>* const _Temp_ptr, _Pr _Pred) {

  0000a	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1634 :             return _Copy_memmove(_First, _Last, _Dest);

  0000b	8b 75 10	 mov	 esi, DWORD PTR __Last$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7379 :     _BidIt _First, _BidIt _Mid, _BidIt _Last, _Iter_value_t<_BidIt>* const _Temp_ptr, _Pr _Pred) {

  0000e	57		 push	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1634 :             return _Copy_memmove(_First, _Last, _Dest);

  0000f	ff 75 14	 push	 DWORD PTR __Temp_ptr$[ebp]
  00012	56		 push	 esi
  00013	53		 push	 ebx
  00014	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7384 :     *--_Last                   = _STD move(*--_Mid); // move the highest element into position

  00019	0f 10 43 f0	 movups	 xmm0, XMMWORD PTR [ebx-16]
  0001d	83 ee 10	 sub	 esi, 16			; 00000010H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1634 :             return _Copy_memmove(_First, _Last, _Dest);

  00020	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7384 :     *--_Last                   = _STD move(*--_Mid); // move the highest element into position

  00023	89 75 10	 mov	 DWORD PTR __Last$[ebp], esi

; 7385 :     const _Ptr_ty _Right_first = _Temp_ptr;
; 7386 :     _Ptr_ty _Right_last        = _Backout._Last - 1;
; 7387 :     --_Mid;

  00026	83 eb 20	 sub	 ebx, 32			; 00000020H
  00029	8d 48 f0	 lea	 ecx, DWORD PTR [eax-16]
  0002c	89 4d fc	 mov	 DWORD PTR __Right_last$1$[ebp], ecx
  0002f	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0
$LL2@Inplace_me:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00032	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 359  : 				bool blhsOrderFound = false;

  00035	c6 45 0f 00	 mov	 BYTE PTR _blhsOrderFound$1$[ebp], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00039	89 45 f8	 mov	 DWORD PTR tv1067[ebp], eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 358  : 				DWORD lhsTerrainNumOrder = 0, rhsTerrainNumOrder = 0;

  0003c	33 f6		 xor	 esi, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  0003e	0f b6 00	 movzx	 eax, BYTE PTR [eax]
  00041	50		 push	 eax
  00042	ff 35 04 00 00
	00		 push	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00048	ff 35 00 00 00
	00		 push	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  0004e	e8 00 00 00 00	 call	 ??$__std_find_trivial@EE@@YAPAEPAE0E@Z ; __std_find_trivial<unsigned char,unsigned char>
  00053	0f b6 4b 04	 movzx	 ecx, BYTE PTR [ebx+4]
  00057	51		 push	 ecx
  00058	ff 35 04 00 00
	00		 push	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4

; 5816 :                 return _Result;

  0005e	89 45 f4	 mov	 DWORD PTR $T1[ebp], eax

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00061	ff 35 00 00 00
	00		 push	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00067	e8 00 00 00 00	 call	 ??$__std_find_trivial@EE@@YAPAEPAE0E@Z ; __std_find_trivial<unsigned char,unsigned char>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0006c	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5816 :                 return _Result;

  00072	8b f8		 mov	 edi, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00074	8b 45 f4	 mov	 eax, DWORD PTR $T1[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00077	83 c4 18	 add	 esp, 24			; 00000018H
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 365  : 				if (lhsIterator != m_TerrainNumVector.end())

  0007a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00080	3b c1		 cmp	 eax, ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 365  : 				if (lhsIterator != m_TerrainNumVector.end())

  00082	74 08		 je	 SHORT $LN28@Inplace_me
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00084	8b f0		 mov	 esi, eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 367  : 					blhsOrderFound = true;

  00086	c6 45 0f 01	 mov	 BYTE PTR _blhsOrderFound$1$[ebp], 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0008a	2b f2		 sub	 esi, edx
$LN28@Inplace_me:
  0008c	3b f9		 cmp	 edi, ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 370  : 				if (rhsIterator != m_TerrainNumVector.end())

  0008e	74 04		 je	 SHORT $LN184@Inplace_me
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00090	2b fa		 sub	 edi, edx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 375  : 				if (!brhsOrderFound)

  00092	eb 3c		 jmp	 SHORT $LN30@Inplace_me
$LN184@Inplace_me:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  00094	3b 0d 08 00 00
	00		 cmp	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  0009a	74 14		 je	 SHORT $LN116@Inplace_me

; 797  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  0009c	8a 43 04	 mov	 al, BYTE PTR [ebx+4]
  0009f	88 01		 mov	 BYTE PTR [ecx], al

; 798  :         } else {
; 799  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 800  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 801  :             _ASAN_VECTOR_RELEASE_GUARD;
; 802  :         }
; 803  : 
; 804  :         _Orphan_range(_Mylast, _Mylast);
; 805  :         _Ty& _Result = *_Mylast;
; 806  :         ++_Mylast;

  000a1	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  000a7	41		 inc	 ecx
  000a8	89 0d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, ecx

; 782  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  000ae	eb 15		 jmp	 SHORT $LN115@Inplace_me
$LN116@Inplace_me:

; 783  :         }
; 784  : 
; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  000b0	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000b3	50		 push	 eax
  000b4	51		 push	 ecx
  000b5	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  000ba	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@AAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  000bf	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
$LN115@Inplace_me:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 378  : 					rhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  000c5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  000cb	8b f9		 mov	 edi, ecx
  000cd	2b fa		 sub	 edi, edx
  000cf	4f		 dec	 edi
$LN30@Inplace_me:

; 379  : 				}
; 380  : 				if (!blhsOrderFound)

  000d0	80 7d 0f 00	 cmp	 BYTE PTR _blhsOrderFound$1$[ebp], 0
  000d4	75 5e		 jne	 SHORT $LN33@Inplace_me
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  000d6	8b 45 f8	 mov	 eax, DWORD PTR tv1067[ebp]
  000d9	0f b6 00	 movzx	 eax, BYTE PTR [eax]
  000dc	50		 push	 eax
  000dd	51		 push	 ecx
  000de	52		 push	 edx
  000df	e8 00 00 00 00	 call	 ??$__std_find_trivial@EE@@YAPAEPAE0E@Z ; __std_find_trivial<unsigned char,unsigned char>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000e4	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5816 :                 return _Result;

  000ea	8b f0		 mov	 esi, eax
  000ec	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000ef	3b f1		 cmp	 esi, ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 383  : 					if (lhsIterator != m_TerrainNumVector.end())

  000f1	74 08		 je	 SHORT $LN185@Inplace_me
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000f3	2b 35 00 00 00
	00		 sub	 esi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 388  : 					if (!blhsOrderFound)

  000f9	eb 39		 jmp	 SHORT $LN33@Inplace_me
$LN185@Inplace_me:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  000fb	3b 0d 08 00 00
	00		 cmp	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  00101	74 16		 je	 SHORT $LN164@Inplace_me

; 797  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  00103	8b 45 f8	 mov	 eax, DWORD PTR tv1067[ebp]
  00106	8a 00		 mov	 al, BYTE PTR [eax]
  00108	88 01		 mov	 BYTE PTR [ecx], al

; 798  :         } else {
; 799  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 800  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 801  :             _ASAN_VECTOR_RELEASE_GUARD;
; 802  :         }
; 803  : 
; 804  :         _Orphan_range(_Mylast, _Mylast);
; 805  :         _Ty& _Result = *_Mylast;
; 806  :         ++_Mylast;

  0010a	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00110	46		 inc	 esi
  00111	89 35 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, esi

; 782  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00117	eb 14		 jmp	 SHORT $LN163@Inplace_me
$LN164@Inplace_me:

; 783  :         }
; 784  : 
; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00119	ff 75 f8	 push	 DWORD PTR tv1067[ebp]
  0011c	51		 push	 ecx
  0011d	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  00122	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@AAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  00127	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
$LN163@Inplace_me:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 391  : 						lhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  0012d	2b 35 00 00 00
	00		 sub	 esi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00133	4e		 dec	 esi
$LN33@Inplace_me:

; 395  : 				return lhsTerrainNumOrder < rhsTerrainNumOrder;

  00134	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7389 :         if (_Pred(*_Right_last, *_Mid)) { // merge from the left partition

  00137	8b 4d fc	 mov	 ecx, DWORD PTR __Right_last$1$[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 395  : 				return lhsTerrainNumOrder < rhsTerrainNumOrder;

  0013a	83 c0 f0	 add	 eax, -16		; fffffff0H
  0013d	89 45 10	 mov	 DWORD PTR __Last$[ebp], eax
  00140	3b f7		 cmp	 esi, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7389 :         if (_Pred(*_Right_last, *_Mid)) { // merge from the left partition

  00142	73 13		 jae	 SHORT $LN5@Inplace_me

; 7390 :             *--_Last = _STD move(*_Mid);

  00144	0f 10 03	 movups	 xmm0, XMMWORD PTR [ebx]
  00147	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0

; 7391 :             if (_First == _Mid) {

  0014a	39 5d 08	 cmp	 DWORD PTR __First$[ebp], ebx
  0014d	74 43		 je	 SHORT $LN180@Inplace_me

; 7393 :                 _Move_backward_unchecked(_Right_first, _Right_last, _Last); // move any head (and lowest element)
; 7394 :                 return;
; 7395 :             }
; 7396 : 
; 7397 :             --_Mid;

  0014f	83 eb 10	 sub	 ebx, 16			; 00000010H

; 7398 :         } else { // merge from the right partition

  00152	e9 db fe ff ff	 jmp	 $LL2@Inplace_me
$LN5@Inplace_me:

; 7399 :             *--_Last = _STD move(*_Right_last);

  00157	0f 10 01	 movups	 xmm0, XMMWORD PTR [ecx]

; 7400 :             --_Right_last;
; 7401 :             if (_Right_first == _Right_last) { // we can't compare with *_Right_first, but we know it is lowest

  0015a	8b 75 14	 mov	 esi, DWORD PTR __Temp_ptr$[ebp]
  0015d	83 e9 10	 sub	 ecx, 16			; 00000010H
  00160	89 4d fc	 mov	 DWORD PTR __Right_last$1$[ebp], ecx
  00163	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  00166	3b f1		 cmp	 esi, ecx
  00168	0f 85 c4 fe ff
	ff		 jne	 $LL2@Inplace_me

; 7402 :                 *--_Last = _STD move(*_Mid); // restore half-open range [_First, _Mid)

  0016e	0f 10 03	 movups	 xmm0, XMMWORD PTR [ebx]
  00171	83 e8 10	 sub	 eax, 16			; 00000010H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4936 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  00174	50		 push	 eax
  00175	53		 push	 ebx
  00176	8b 5d 08	 mov	 ebx, DWORD PTR __First$[ebp]
  00179	53		 push	 ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7402 :                 *--_Last = _STD move(*_Mid); // restore half-open range [_First, _Mid)

  0017a	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4936 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  0017d	e8 00 00 00 00	 call	 ??$_Copy_backward_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_backward_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7404 :                 *_First = _STD move(*_Right_first);

  00182	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]

; 7409 : }

  00185	83 c4 0c	 add	 esp, 12			; 0000000cH
  00188	0f 11 03	 movups	 XMMWORD PTR [ebx], xmm0
  0018b	5f		 pop	 edi
  0018c	5e		 pop	 esi
  0018d	5b		 pop	 ebx
  0018e	8b e5		 mov	 esp, ebp
  00190	5d		 pop	 ebp
  00191	c3		 ret	 0
$LN180@Inplace_me:

; 7392 :                 *--_Last = _STD move(*_Right_last); // to make [_Right_first, _Right_last) a half-open range

  00192	0f 10 01	 movups	 xmm0, XMMWORD PTR [ecx]
  00195	83 e8 10	 sub	 eax, 16			; 00000010H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4936 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  00198	50		 push	 eax
  00199	51		 push	 ecx
  0019a	ff 75 14	 push	 DWORD PTR __Temp_ptr$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7392 :                 *--_Last = _STD move(*_Right_last); // to make [_Right_first, _Right_last) a half-open range

  0019d	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4936 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  001a0	e8 00 00 00 00	 call	 ??$_Copy_backward_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_backward_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7409 : }

  001a5	83 c4 0c	 add	 esp, 12			; 0000000cH
  001a8	5f		 pop	 edi
  001a9	5e		 pop	 esi
  001aa	5b		 pop	 ebx
  001ab	8b e5		 mov	 esp, ebp
  001ad	5d		 pop	 ebp
  001ae	c3		 ret	 0
??$_Inplace_merge_buffer_right@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00QAU12@UFSortPatchDrawStructWithTerrainNum@2@@Z ENDP ; std::_Inplace_merge_buffer_right<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Inplace_merge_buffer_left@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00QAU12@UFSortPatchDrawStructWithTerrainNum@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 4
__Backout$$sroa$634$1$ = -8				; size = 4
tv1042 = -4						; size = 4
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
_blhsOrderFound$1$ = 15					; size = 1
__Last$ = 16						; size = 4
__Temp_ptr$ = 20					; size = 4
__Pred$ = 24						; size = 1
??$_Inplace_merge_buffer_left@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00QAU12@UFSortPatchDrawStructWithTerrainNum@2@@Z PROC ; std::_Inplace_merge_buffer_left<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>, COMDAT

; 7345 :     _BidIt _First, _BidIt _Mid, _BidIt _Last, _Iter_value_t<_BidIt>* const _Temp_ptr, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1634 :             return _Copy_memmove(_First, _Last, _Dest);

  00007	8b 5d 0c	 mov	 ebx, DWORD PTR __Mid$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7345 :     _BidIt _First, _BidIt _Mid, _BidIt _Last, _Iter_value_t<_BidIt>* const _Temp_ptr, _Pr _Pred) {

  0000a	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1634 :             return _Copy_memmove(_First, _Last, _Dest);

  0000b	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7345 :     _BidIt _First, _BidIt _Mid, _BidIt _Last, _Iter_value_t<_BidIt>* const _Temp_ptr, _Pr _Pred) {

  0000e	57		 push	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1634 :             return _Copy_memmove(_First, _Last, _Dest);

  0000f	8b 7d 14	 mov	 edi, DWORD PTR __Temp_ptr$[ebp]
  00012	57		 push	 edi
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7352 :     *_First                  = _STD move(*_Mid); // the lowest element is now in position

  0001a	0f 10 03	 movups	 xmm0, XMMWORD PTR [ebx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1634 :             return _Copy_memmove(_First, _Last, _Dest);

  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1604 :     constexpr _Uninitialized_backout(_NoThrowFwdIt _First_, _NoThrowFwdIt _Last_) : _First(_First_), _Last(_Last_) {}

  00020	89 45 f8	 mov	 DWORD PTR __Backout$$sroa$634$1$[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7352 :     *_First                  = _STD move(*_Mid); // the lowest element is now in position

  00023	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0

; 7353 :     ++_First;

  00026	83 c6 10	 add	 esi, 16			; 00000010H

; 7354 :     ++_Mid;

  00029	83 c3 10	 add	 ebx, 16			; 00000010H
  0002c	89 75 08	 mov	 DWORD PTR __First$[ebp], esi
  0002f	90		 npad	 1
$LL2@Inplace_me:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00030	0f b6 43 04	 movzx	 eax, BYTE PTR [ebx+4]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 358  : 				DWORD lhsTerrainNumOrder = 0, rhsTerrainNumOrder = 0;

  00034	33 f6		 xor	 esi, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00036	50		 push	 eax
  00037	ff 35 04 00 00
	00		 push	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 359  : 				bool blhsOrderFound = false;

  0003d	c6 45 0f 00	 mov	 BYTE PTR _blhsOrderFound$1$[ebp], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00041	ff 35 00 00 00
	00		 push	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00047	e8 00 00 00 00	 call	 ??$__std_find_trivial@EE@@YAPAEPAE0E@Z ; __std_find_trivial<unsigned char,unsigned char>
  0004c	0f b6 4f 04	 movzx	 ecx, BYTE PTR [edi+4]

; 5816 :                 return _Result;

  00050	89 45 f4	 mov	 DWORD PTR $T1[ebp], eax

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00053	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  00056	51		 push	 ecx
  00057	ff 35 04 00 00
	00		 push	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  0005d	89 45 fc	 mov	 DWORD PTR tv1042[ebp], eax
  00060	ff 35 00 00 00
	00		 push	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00066	e8 00 00 00 00	 call	 ??$__std_find_trivial@EE@@YAPAEPAE0E@Z ; __std_find_trivial<unsigned char,unsigned char>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0006b	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5816 :                 return _Result;

  00071	8b f8		 mov	 edi, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00073	8b 45 f4	 mov	 eax, DWORD PTR $T1[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00076	83 c4 18	 add	 esp, 24			; 00000018H
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 365  : 				if (lhsIterator != m_TerrainNumVector.end())

  00079	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0007f	3b c1		 cmp	 eax, ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 365  : 				if (lhsIterator != m_TerrainNumVector.end())

  00081	74 08		 je	 SHORT $LN28@Inplace_me
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00083	8b f0		 mov	 esi, eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 367  : 					blhsOrderFound = true;

  00085	c6 45 0f 01	 mov	 BYTE PTR _blhsOrderFound$1$[ebp], 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00089	2b f2		 sub	 esi, edx
$LN28@Inplace_me:
  0008b	3b f9		 cmp	 edi, ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 370  : 				if (rhsIterator != m_TerrainNumVector.end())

  0008d	74 04		 je	 SHORT $LN186@Inplace_me
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0008f	2b fa		 sub	 edi, edx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 375  : 				if (!brhsOrderFound)

  00091	eb 3b		 jmp	 SHORT $LN30@Inplace_me
$LN186@Inplace_me:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  00093	8b 45 fc	 mov	 eax, DWORD PTR tv1042[ebp]
  00096	3b 0d 08 00 00
	00		 cmp	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  0009c	74 13		 je	 SHORT $LN116@Inplace_me

; 797  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  0009e	8a 00		 mov	 al, BYTE PTR [eax]
  000a0	88 01		 mov	 BYTE PTR [ecx], al

; 798  :         } else {
; 799  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 800  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 801  :             _ASAN_VECTOR_RELEASE_GUARD;
; 802  :         }
; 803  : 
; 804  :         _Orphan_range(_Mylast, _Mylast);
; 805  :         _Ty& _Result = *_Mylast;
; 806  :         ++_Mylast;

  000a2	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  000a8	41		 inc	 ecx
  000a9	89 0d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, ecx

; 782  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  000af	eb 12		 jmp	 SHORT $LN115@Inplace_me
$LN116@Inplace_me:

; 783  :         }
; 784  : 
; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  000b1	50		 push	 eax
  000b2	51		 push	 ecx
  000b3	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  000b8	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@AAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  000bd	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
$LN115@Inplace_me:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 378  : 					rhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  000c3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  000c9	8b f9		 mov	 edi, ecx
  000cb	2b fa		 sub	 edi, edx
  000cd	4f		 dec	 edi
$LN30@Inplace_me:

; 379  : 				}
; 380  : 				if (!blhsOrderFound)

  000ce	80 7d 0f 00	 cmp	 BYTE PTR _blhsOrderFound$1$[ebp], 0
  000d2	75 5b		 jne	 SHORT $LN33@Inplace_me
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  000d4	0f b6 43 04	 movzx	 eax, BYTE PTR [ebx+4]
  000d8	50		 push	 eax
  000d9	51		 push	 ecx
  000da	52		 push	 edx
  000db	e8 00 00 00 00	 call	 ??$__std_find_trivial@EE@@YAPAEPAE0E@Z ; __std_find_trivial<unsigned char,unsigned char>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000e0	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5816 :                 return _Result;

  000e6	8b f0		 mov	 esi, eax
  000e8	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000eb	3b f1		 cmp	 esi, ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 383  : 					if (lhsIterator != m_TerrainNumVector.end())

  000ed	74 08		 je	 SHORT $LN187@Inplace_me
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000ef	2b 35 00 00 00
	00		 sub	 esi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 388  : 					if (!blhsOrderFound)

  000f5	eb 38		 jmp	 SHORT $LN33@Inplace_me
$LN187@Inplace_me:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  000f7	3b 0d 08 00 00
	00		 cmp	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  000fd	74 14		 je	 SHORT $LN164@Inplace_me

; 797  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  000ff	8a 43 04	 mov	 al, BYTE PTR [ebx+4]
  00102	88 01		 mov	 BYTE PTR [ecx], al

; 798  :         } else {
; 799  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 800  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 801  :             _ASAN_VECTOR_RELEASE_GUARD;
; 802  :         }
; 803  : 
; 804  :         _Orphan_range(_Mylast, _Mylast);
; 805  :         _Ty& _Result = *_Mylast;
; 806  :         ++_Mylast;

  00104	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  0010a	46		 inc	 esi
  0010b	89 35 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, esi

; 782  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00111	eb 15		 jmp	 SHORT $LN163@Inplace_me
$LN164@Inplace_me:

; 783  :         }
; 784  : 
; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00113	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  00116	50		 push	 eax
  00117	51		 push	 ecx
  00118	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  0011d	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@AAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  00122	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
$LN163@Inplace_me:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 391  : 						lhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  00128	2b 35 00 00 00
	00		 sub	 esi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  0012e	4e		 dec	 esi
$LN33@Inplace_me:

; 392  : 					}
; 393  : 				}
; 394  : 
; 395  : 				return lhsTerrainNumOrder < rhsTerrainNumOrder;

  0012f	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00132	8d 48 10	 lea	 ecx, DWORD PTR [eax+16]
  00135	3b f7		 cmp	 esi, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7356 :         if (_Pred(*_Mid, *_Left_first)) { // take element from the right partition

  00137	73 19		 jae	 SHORT $LN5@Inplace_me

; 7357 :             *_First = _STD move(*_Mid);

  00139	0f 10 03	 movups	 xmm0, XMMWORD PTR [ebx]

; 7358 :             ++_First;
; 7359 :             ++_Mid;

  0013c	83 c3 10	 add	 ebx, 16			; 00000010H
  0013f	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0

; 7360 :             if (_Mid == _Last) {

  00142	3b 5d 10	 cmp	 ebx, DWORD PTR __Last$[ebp]
  00145	74 2c		 je	 SHORT $LN182@Inplace_me

; 7361 :                 _STD _Move_unchecked(_Left_first, _Backout._Last, _First); // move any tail (and the highest element)
; 7362 :                 return;
; 7363 :             }
; 7364 :         } else { // take element from the left partition

  00147	8b 7d 14	 mov	 edi, DWORD PTR __Temp_ptr$[ebp]

; 7371 :                 return;
; 7372 :             }
; 7373 :         }
; 7374 :     }

  0014a	89 4d 08	 mov	 DWORD PTR __First$[ebp], ecx
  0014d	e9 de fe ff ff	 jmp	 $LL2@Inplace_me
$LN5@Inplace_me:

; 7365 :             *_First = _STD move(*_Left_first);

  00152	8b 7d 14	 mov	 edi, DWORD PTR __Temp_ptr$[ebp]

; 7366 :             ++_First;
; 7367 :             ++_Left_first;
; 7368 :             if (_Left_first == _Left_last) {

  00155	8b 75 f8	 mov	 esi, DWORD PTR __Backout$$sroa$634$1$[ebp]
  00158	83 c6 f0	 add	 esi, -16		; fffffff0H
  0015b	0f 10 07	 movups	 xmm0, XMMWORD PTR [edi]
  0015e	83 c7 10	 add	 edi, 16			; 00000010H
  00161	89 7d 14	 mov	 DWORD PTR __Temp_ptr$[ebp], edi
  00164	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  00167	3b fe		 cmp	 edi, esi
  00169	74 1e		 je	 SHORT $LN183@Inplace_me

; 7371 :                 return;
; 7372 :             }
; 7373 :         }
; 7374 :     }

  0016b	89 4d 08	 mov	 DWORD PTR __First$[ebp], ecx
  0016e	e9 bd fe ff ff	 jmp	 $LL2@Inplace_me
$LN182@Inplace_me:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4894 :             return _Copy_memmove(_First, _Last, _Dest);

  00173	51		 push	 ecx
  00174	ff 75 f8	 push	 DWORD PTR __Backout$$sroa$634$1$[ebp]
  00177	ff 75 14	 push	 DWORD PTR __Temp_ptr$[ebp]
  0017a	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7375 : }

  0017f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00182	5f		 pop	 edi
  00183	5e		 pop	 esi
  00184	5b		 pop	 ebx
  00185	8b e5		 mov	 esp, ebp
  00187	5d		 pop	 ebp
  00188	c3		 ret	 0
$LN183@Inplace_me:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4894 :             return _Copy_memmove(_First, _Last, _Dest);

  00189	51		 push	 ecx
  0018a	ff 75 10	 push	 DWORD PTR __Last$[ebp]
  0018d	53		 push	 ebx
  0018e	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7370 :                 *_STD _Move_unchecked(_Mid, _Last, _First) = _STD move(*_Left_last);

  00193	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]

; 7375 : }

  00196	83 c4 0c	 add	 esp, 12			; 0000000cH
  00199	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  0019c	5f		 pop	 edi
  0019d	5e		 pop	 esi
  0019e	5b		 pop	 ebx
  0019f	8b e5		 mov	 esp, ebp
  001a1	5d		 pop	 ebp
  001a2	c3		 ret	 0
??$_Inplace_merge_buffer_left@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00QAU12@UFSortPatchDrawStructWithTerrainNum@2@@Z ENDP ; std::_Inplace_merge_buffer_left<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Merge_move@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@10UFSortPatchDrawStructWithTerrainNum@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 4
tv972 = -8						; size = 4
_blhsOrderFound$1$ = -1					; size = 1
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
__Dest$ = 20						; size = 4
__Pred$ = 24						; size = 1
??$_Merge_move@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@10UFSortPatchDrawStructWithTerrainNum@2@@Z PROC ; std::_Merge_move<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>, COMDAT

; 8330 : _OutIt _Merge_move(_InIt _First, const _InIt _Mid, const _InIt _Last, _OutIt _Dest, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 8331 :     // move merging adjacent ranges [_First, _Mid) and [_Mid, _Last) to _Dest
; 8332 :     // pre: _First != _Mid && _Mid != _Last
; 8333 :     _InIt _Next = _Mid;

  00007	8b 5d 0c	 mov	 ebx, DWORD PTR __Mid$[ebp]
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	0f 1f 40 00	 npad	 4
$LL2@Merge_move:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00010	0f b6 43 04	 movzx	 eax, BYTE PTR [ebx+4]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 358  : 				DWORD lhsTerrainNumOrder = 0, rhsTerrainNumOrder = 0;

  00014	33 f6		 xor	 esi, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00016	50		 push	 eax
  00017	ff 35 04 00 00
	00		 push	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 359  : 				bool blhsOrderFound = false;

  0001d	c6 45 ff 00	 mov	 BYTE PTR _blhsOrderFound$1$[ebp], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00021	ff 35 00 00 00
	00		 push	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00027	e8 00 00 00 00	 call	 ??$__std_find_trivial@EE@@YAPAEPAE0E@Z ; __std_find_trivial<unsigned char,unsigned char>

; 5816 :                 return _Result;

  0002c	89 45 f4	 mov	 DWORD PTR $T1[ebp], eax

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  0002f	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00032	83 c0 04	 add	 eax, 4
  00035	89 45 f8	 mov	 DWORD PTR tv972[ebp], eax
  00038	0f b6 00	 movzx	 eax, BYTE PTR [eax]
  0003b	50		 push	 eax
  0003c	ff 35 04 00 00
	00		 push	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00042	ff 35 00 00 00
	00		 push	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00048	e8 00 00 00 00	 call	 ??$__std_find_trivial@EE@@YAPAEPAE0E@Z ; __std_find_trivial<unsigned char,unsigned char>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0004d	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5816 :                 return _Result;

  00053	8b f8		 mov	 edi, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00055	8b 45 f4	 mov	 eax, DWORD PTR $T1[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00058	83 c4 18	 add	 esp, 24			; 00000018H
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 365  : 				if (lhsIterator != m_TerrainNumVector.end())

  0005b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00061	3b c1		 cmp	 eax, ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 365  : 				if (lhsIterator != m_TerrainNumVector.end())

  00063	74 08		 je	 SHORT $LN11@Merge_move
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00065	8b f0		 mov	 esi, eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 367  : 					blhsOrderFound = true;

  00067	c6 45 ff 01	 mov	 BYTE PTR _blhsOrderFound$1$[ebp], 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0006b	2b f2		 sub	 esi, edx
$LN11@Merge_move:
  0006d	3b f9		 cmp	 edi, ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 370  : 				if (rhsIterator != m_TerrainNumVector.end())

  0006f	74 04		 je	 SHORT $LN169@Merge_move
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00071	2b fa		 sub	 edi, edx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 375  : 				if (!brhsOrderFound)

  00073	eb 3b		 jmp	 SHORT $LN13@Merge_move
$LN169@Merge_move:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  00075	8b 45 f8	 mov	 eax, DWORD PTR tv972[ebp]
  00078	3b 0d 08 00 00
	00		 cmp	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  0007e	74 13		 je	 SHORT $LN99@Merge_move

; 797  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  00080	8a 00		 mov	 al, BYTE PTR [eax]
  00082	88 01		 mov	 BYTE PTR [ecx], al

; 798  :         } else {
; 799  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 800  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 801  :             _ASAN_VECTOR_RELEASE_GUARD;
; 802  :         }
; 803  : 
; 804  :         _Orphan_range(_Mylast, _Mylast);
; 805  :         _Ty& _Result = *_Mylast;
; 806  :         ++_Mylast;

  00084	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  0008a	41		 inc	 ecx
  0008b	89 0d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, ecx

; 782  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00091	eb 12		 jmp	 SHORT $LN98@Merge_move
$LN99@Merge_move:

; 783  :         }
; 784  : 
; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00093	50		 push	 eax
  00094	51		 push	 ecx
  00095	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  0009a	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@AAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  0009f	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
$LN98@Merge_move:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 378  : 					rhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  000a5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  000ab	8b f9		 mov	 edi, ecx
  000ad	2b fa		 sub	 edi, edx
  000af	4f		 dec	 edi
$LN13@Merge_move:

; 379  : 				}
; 380  : 				if (!blhsOrderFound)

  000b0	80 7d ff 00	 cmp	 BYTE PTR _blhsOrderFound$1$[ebp], 0
  000b4	75 5b		 jne	 SHORT $LN16@Merge_move
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  000b6	0f b6 43 04	 movzx	 eax, BYTE PTR [ebx+4]
  000ba	50		 push	 eax
  000bb	51		 push	 ecx
  000bc	52		 push	 edx
  000bd	e8 00 00 00 00	 call	 ??$__std_find_trivial@EE@@YAPAEPAE0E@Z ; __std_find_trivial<unsigned char,unsigned char>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000c2	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5816 :                 return _Result;

  000c8	8b f0		 mov	 esi, eax
  000ca	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000cd	3b f1		 cmp	 esi, ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 383  : 					if (lhsIterator != m_TerrainNumVector.end())

  000cf	74 08		 je	 SHORT $LN170@Merge_move
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000d1	2b 35 00 00 00
	00		 sub	 esi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 388  : 					if (!blhsOrderFound)

  000d7	eb 38		 jmp	 SHORT $LN16@Merge_move
$LN170@Merge_move:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  000d9	3b 0d 08 00 00
	00		 cmp	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  000df	74 14		 je	 SHORT $LN147@Merge_move

; 797  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  000e1	8a 43 04	 mov	 al, BYTE PTR [ebx+4]
  000e4	88 01		 mov	 BYTE PTR [ecx], al

; 798  :         } else {
; 799  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 800  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 801  :             _ASAN_VECTOR_RELEASE_GUARD;
; 802  :         }
; 803  : 
; 804  :         _Orphan_range(_Mylast, _Mylast);
; 805  :         _Ty& _Result = *_Mylast;
; 806  :         ++_Mylast;

  000e6	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  000ec	46		 inc	 esi
  000ed	89 35 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, esi

; 782  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  000f3	eb 15		 jmp	 SHORT $LN146@Merge_move
$LN147@Merge_move:

; 783  :         }
; 784  : 
; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  000f5	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000f8	50		 push	 eax
  000f9	51		 push	 ecx
  000fa	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  000ff	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@AAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  00104	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
$LN146@Merge_move:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 391  : 						lhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  0010a	2b 35 00 00 00
	00		 sub	 esi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00110	4e		 dec	 esi
$LN16@Merge_move:

; 392  : 					}
; 393  : 				}
; 394  : 
; 395  : 				return lhsTerrainNumOrder < rhsTerrainNumOrder;

  00111	8b 4d 14	 mov	 ecx, DWORD PTR __Dest$[ebp]
  00114	8d 51 10	 lea	 edx, DWORD PTR [ecx+16]
  00117	3b f7		 cmp	 esi, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8335 :         if (_DEBUG_LT_PRED(_Pred, *_Next, *_First)) {

  00119	73 24		 jae	 SHORT $LN5@Merge_move

; 8336 :             *_Dest = _STD move(*_Next);

  0011b	0f 10 03	 movups	 xmm0, XMMWORD PTR [ebx]

; 8337 :             ++_Dest;
; 8338 :             ++_Next;

  0011e	83 c3 10	 add	 ebx, 16			; 00000010H
  00121	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0

; 8339 : 
; 8340 :             if (_Next == _Last) {

  00124	3b 5d 10	 cmp	 ebx, DWORD PTR __Last$[ebp]
  00127	75 2a		 jne	 SHORT $LN8@Merge_move
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4894 :             return _Copy_memmove(_First, _Last, _Dest);

  00129	52		 push	 edx
  0012a	ff 75 0c	 push	 DWORD PTR __Mid$[ebp]
  0012d	ff 75 08	 push	 DWORD PTR __First$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8353 : }

  00130	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
  00135	83 c4 0c	 add	 esp, 12			; 0000000cH
  00138	5f		 pop	 edi
  00139	5e		 pop	 esi
  0013a	5b		 pop	 ebx
  0013b	8b e5		 mov	 esp, ebp
  0013d	5d		 pop	 ebp
  0013e	c3		 ret	 0
$LN5@Merge_move:

; 8341 :                 return _STD _Move_unchecked(_First, _Mid, _Dest);
; 8342 :             }
; 8343 :         } else {
; 8344 :             *_Dest = _STD move(*_First);

  0013f	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00142	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]

; 8345 :             ++_Dest;
; 8346 :             ++_First;

  00145	83 c0 10	 add	 eax, 16			; 00000010H
  00148	89 45 08	 mov	 DWORD PTR __First$[ebp], eax
  0014b	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0

; 8347 : 
; 8348 :             if (_First == _Mid) {

  0014e	3b 45 0c	 cmp	 eax, DWORD PTR __Mid$[ebp]
  00151	74 08		 je	 SHORT $LN166@Merge_move
$LN8@Merge_move:

; 8349 :                 return _STD _Move_unchecked(_Next, _Last, _Dest);
; 8350 :             }
; 8351 :         }
; 8352 :     }

  00153	89 55 14	 mov	 DWORD PTR __Dest$[ebp], edx
  00156	e9 b5 fe ff ff	 jmp	 $LL2@Merge_move
$LN166@Merge_move:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4894 :             return _Copy_memmove(_First, _Last, _Dest);

  0015b	52		 push	 edx
  0015c	ff 75 10	 push	 DWORD PTR __Last$[ebp]
  0015f	53		 push	 ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8353 : }

  00160	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
  00165	83 c4 0c	 add	 esp, 12			; 0000000cH
  00168	5f		 pop	 edi
  00169	5e		 pop	 esi
  0016a	5b		 pop	 ebx
  0016b	8b e5		 mov	 esp, ebp
  0016d	5d		 pop	 ebp
  0016e	c3		 ret	 0
??$_Merge_move@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@10UFSortPatchDrawStructWithTerrainNum@2@@Z ENDP ; std::_Merge_move<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Uninitialized_merge_move@PAUTPatchDrawStruct@CMapOutdoor@@U12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@11UFSortPatchDrawStructWithTerrainNum@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 4
tv1097 = -8						; size = 4
__Next$1$ = -4						; size = 4
__First$ = 8						; size = 4
_blhsOrderFound$1$ = 11					; size = 1
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
__Dest$ = 20						; size = 4
__Pred$ = 24						; size = 1
??$_Uninitialized_merge_move@PAUTPatchDrawStruct@CMapOutdoor@@U12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@11UFSortPatchDrawStructWithTerrainNum@2@@Z PROC ; std::_Uninitialized_merge_move<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>, COMDAT

; 8303 : _Ty* _Uninitialized_merge_move(_FwdIt _First, const _FwdIt _Mid, const _FwdIt _Last, _Ty* const _Dest, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 8304 :     // move merging ranges to uninitialized storage
; 8305 :     // pre: _First != _Mid && _Mid != _Last
; 8306 :     _Uninitialized_backout<_Ty*> _Backout{_Dest};
; 8307 :     _FwdIt _Next = _Mid;

  00006	8b 45 0c	 mov	 eax, DWORD PTR __Mid$[ebp]
  00009	53		 push	 ebx
  0000a	8b 5d 08	 mov	 ebx, DWORD PTR __First$[ebp]
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	89 45 fc	 mov	 DWORD PTR __Next$1$[ebp], eax
$LL2@Uninitiali:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00012	83 c0 04	 add	 eax, 4
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 359  : 				bool blhsOrderFound = false;

  00015	c6 45 0b 00	 mov	 BYTE PTR _blhsOrderFound$1$[ebp], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00019	89 45 f8	 mov	 DWORD PTR tv1097[ebp], eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 358  : 				DWORD lhsTerrainNumOrder = 0, rhsTerrainNumOrder = 0;

  0001c	33 f6		 xor	 esi, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  0001e	0f b6 00	 movzx	 eax, BYTE PTR [eax]
  00021	50		 push	 eax
  00022	ff 35 04 00 00
	00		 push	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00028	ff 35 00 00 00
	00		 push	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  0002e	e8 00 00 00 00	 call	 ??$__std_find_trivial@EE@@YAPAEPAE0E@Z ; __std_find_trivial<unsigned char,unsigned char>

; 5816 :                 return _Result;

  00033	89 45 f4	 mov	 DWORD PTR $T1[ebp], eax

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00036	0f b6 43 04	 movzx	 eax, BYTE PTR [ebx+4]
  0003a	50		 push	 eax
  0003b	ff 35 04 00 00
	00		 push	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00041	ff 35 00 00 00
	00		 push	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00047	e8 00 00 00 00	 call	 ??$__std_find_trivial@EE@@YAPAEPAE0E@Z ; __std_find_trivial<unsigned char,unsigned char>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0004c	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5816 :                 return _Result;

  00052	8b f8		 mov	 edi, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00054	8b 45 f4	 mov	 eax, DWORD PTR $T1[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00057	83 c4 18	 add	 esp, 24			; 00000018H
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 365  : 				if (lhsIterator != m_TerrainNumVector.end())

  0005a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00060	3b c1		 cmp	 eax, ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 365  : 				if (lhsIterator != m_TerrainNumVector.end())

  00062	74 08		 je	 SHORT $LN14@Uninitiali
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00064	8b f0		 mov	 esi, eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 367  : 					blhsOrderFound = true;

  00066	c6 45 0b 01	 mov	 BYTE PTR _blhsOrderFound$1$[ebp], 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0006a	2b f2		 sub	 esi, edx
$LN14@Uninitiali:
  0006c	3b f9		 cmp	 edi, ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 370  : 				if (rhsIterator != m_TerrainNumVector.end())

  0006e	74 04		 je	 SHORT $LN200@Uninitiali
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00070	2b fa		 sub	 edi, edx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 375  : 				if (!brhsOrderFound)

  00072	eb 3c		 jmp	 SHORT $LN16@Uninitiali
$LN200@Uninitiali:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  00074	3b 0d 08 00 00
	00		 cmp	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  0007a	74 14		 je	 SHORT $LN102@Uninitiali

; 797  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  0007c	8a 43 04	 mov	 al, BYTE PTR [ebx+4]
  0007f	88 01		 mov	 BYTE PTR [ecx], al

; 798  :         } else {
; 799  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 800  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 801  :             _ASAN_VECTOR_RELEASE_GUARD;
; 802  :         }
; 803  : 
; 804  :         _Orphan_range(_Mylast, _Mylast);
; 805  :         _Ty& _Result = *_Mylast;
; 806  :         ++_Mylast;

  00081	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00087	41		 inc	 ecx
  00088	89 0d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, ecx

; 782  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0008e	eb 15		 jmp	 SHORT $LN101@Uninitiali
$LN102@Uninitiali:

; 783  :         }
; 784  : 
; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00090	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  00093	50		 push	 eax
  00094	51		 push	 ecx
  00095	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  0009a	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@AAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  0009f	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
$LN101@Uninitiali:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 378  : 					rhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  000a5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  000ab	8b f9		 mov	 edi, ecx
  000ad	2b fa		 sub	 edi, edx
  000af	4f		 dec	 edi
$LN16@Uninitiali:

; 379  : 				}
; 380  : 				if (!blhsOrderFound)

  000b0	80 7d 0b 00	 cmp	 BYTE PTR _blhsOrderFound$1$[ebp], 0
  000b4	75 5e		 jne	 SHORT $LN19@Uninitiali
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  000b6	8b 45 f8	 mov	 eax, DWORD PTR tv1097[ebp]
  000b9	0f b6 00	 movzx	 eax, BYTE PTR [eax]
  000bc	50		 push	 eax
  000bd	51		 push	 ecx
  000be	52		 push	 edx
  000bf	e8 00 00 00 00	 call	 ??$__std_find_trivial@EE@@YAPAEPAE0E@Z ; __std_find_trivial<unsigned char,unsigned char>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000c4	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5816 :                 return _Result;

  000ca	8b f0		 mov	 esi, eax
  000cc	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000cf	3b f1		 cmp	 esi, ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 383  : 					if (lhsIterator != m_TerrainNumVector.end())

  000d1	74 08		 je	 SHORT $LN201@Uninitiali
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000d3	2b 35 00 00 00
	00		 sub	 esi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 388  : 					if (!blhsOrderFound)

  000d9	eb 39		 jmp	 SHORT $LN19@Uninitiali
$LN201@Uninitiali:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  000db	3b 0d 08 00 00
	00		 cmp	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  000e1	74 16		 je	 SHORT $LN150@Uninitiali

; 797  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  000e3	8b 45 f8	 mov	 eax, DWORD PTR tv1097[ebp]
  000e6	8a 00		 mov	 al, BYTE PTR [eax]
  000e8	88 01		 mov	 BYTE PTR [ecx], al

; 798  :         } else {
; 799  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 800  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 801  :             _ASAN_VECTOR_RELEASE_GUARD;
; 802  :         }
; 803  : 
; 804  :         _Orphan_range(_Mylast, _Mylast);
; 805  :         _Ty& _Result = *_Mylast;
; 806  :         ++_Mylast;

  000ea	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  000f0	46		 inc	 esi
  000f1	89 35 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, esi

; 782  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  000f7	eb 14		 jmp	 SHORT $LN149@Uninitiali
$LN150@Uninitiali:

; 783  :         }
; 784  : 
; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  000f9	ff 75 f8	 push	 DWORD PTR tv1097[ebp]
  000fc	51		 push	 ecx
  000fd	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  00102	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@AAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  00107	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
$LN149@Uninitiali:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 391  : 						lhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  0010d	2b 35 00 00 00
	00		 sub	 esi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00113	4e		 dec	 esi
$LN19@Uninitiali:

; 392  : 					}
; 393  : 				}
; 394  : 
; 395  : 				return lhsTerrainNumOrder < rhsTerrainNumOrder;

  00114	8b 4d 14	 mov	 ecx, DWORD PTR __Dest$[ebp]
  00117	8d 51 10	 lea	 edx, DWORD PTR [ecx+16]
  0011a	3b f7		 cmp	 esi, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8309 :         if (_DEBUG_LT_PRED(_Pred, *_Next, *_First)) {

  0011c	73 29		 jae	 SHORT $LN5@Uninitiali
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 254  :         ::new (static_cast<void*>(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

  0011e	8b 45 fc	 mov	 eax, DWORD PTR __Next$1$[ebp]
  00121	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8311 :             ++_Next;

  00124	83 c0 10	 add	 eax, 16			; 00000010H
  00127	89 45 fc	 mov	 DWORD PTR __Next$1$[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 254  :         ::new (static_cast<void*>(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

  0012a	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8313 :             if (_Next == _Last) {

  0012d	3b 45 10	 cmp	 eax, DWORD PTR __Last$[ebp]
  00130	75 26		 jne	 SHORT $LN8@Uninitiali

; 8323 :                 return _Backout._Release();

  00132	8b 45 0c	 mov	 eax, DWORD PTR __Mid$[ebp]
  00135	52		 push	 edx
  00136	50		 push	 eax
  00137	53		 push	 ebx
  00138	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
  0013d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00140	5f		 pop	 edi
  00141	5e		 pop	 esi
  00142	5b		 pop	 ebx

; 8327 : }

  00143	8b e5		 mov	 esp, ebp
  00145	5d		 pop	 ebp
  00146	c3		 ret	 0
$LN5@Uninitiali:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 254  :         ::new (static_cast<void*>(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

  00147	0f 10 03	 movups	 xmm0, XMMWORD PTR [ebx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8319 :             ++_First;

  0014a	83 c3 10	 add	 ebx, 16			; 00000010H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 254  :         ::new (static_cast<void*>(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

  0014d	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8321 :             if (_First == _Mid) {

  00150	3b 5d 0c	 cmp	 ebx, DWORD PTR __Mid$[ebp]
  00153	74 0b		 je	 SHORT $LN197@Uninitiali
  00155	8b 45 fc	 mov	 eax, DWORD PTR __Next$1$[ebp]
$LN8@Uninitiali:

; 8324 :             }
; 8325 :         }
; 8326 :     }

  00158	89 55 14	 mov	 DWORD PTR __Dest$[ebp], edx
  0015b	e9 b2 fe ff ff	 jmp	 $LL2@Uninitiali
$LN197@Uninitiali:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1622 :         return _Last;

  00160	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
  00163	8b 5d fc	 mov	 ebx, DWORD PTR __Next$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8323 :                 return _Backout._Release();

  00166	52		 push	 edx
  00167	50		 push	 eax
  00168	53		 push	 ebx
  00169	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
  0016e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00171	5f		 pop	 edi
  00172	5e		 pop	 esi
  00173	5b		 pop	 ebx

; 8327 : }

  00174	8b e5		 mov	 esp, ebp
  00176	5d		 pop	 ebp
  00177	c3		 ret	 0
??$_Uninitialized_merge_move@PAUTPatchDrawStruct@CMapOutdoor@@U12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@11UFSortPatchDrawStructWithTerrainNum@2@@Z ENDP ; std::_Uninitialized_merge_move<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Med3_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@00UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
__Pred$ = 20						; size = 1
??$_Med3_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@00UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z PROC ; std::_Med3_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>, COMDAT

; 7929 : _CONSTEXPR20 void _Med3_unchecked(_RanIt _First, _RanIt _Mid, _RanIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  00003	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7929 : _CONSTEXPR20 void _Med3_unchecked(_RanIt _First, _RanIt _Mid, _RanIt _Last, _Pr _Pred) {

  00009	53		 push	 ebx
  0000a	56		 push	 esi

; 7931 :     if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  0000b	8b 75 0c	 mov	 esi, DWORD PTR __Mid$[ebp]
  0000e	57		 push	 edi
  0000f	8b 7d 08	 mov	 edi, DWORD PTR __First$[ebp]
  00012	8b 36		 mov	 esi, DWORD PTR [esi]
  00014	8b 3f		 mov	 edi, DWORD PTR [edi]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  00016	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 351  : 		const D3DXVECTOR3 & c_rv3CameraPos = pCurrentCamera->GetEye();
; 352  : 		const D3DXVECTOR3 & c_v3LeftPos  = pkLeft->GetPosition();

  0001b	8b ce		 mov	 ecx, esi
  0001d	8b d8		 mov	 ebx, eax
  0001f	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition

; 353  : 		const D3DXVECTOR3 & c_v3RightPos = pkRight->GetPosition();

  00024	8b cf		 mov	 ecx, edi
  00026	8b f0		 mov	 esi, eax
  00028	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0002d	f3 0f 10 6b 30	 movss	 xmm5, DWORD PTR [ebx+48]
  00032	f3 0f 10 63 34	 movss	 xmm4, DWORD PTR [ebx+52]
  00037	0f 28 cd	 movaps	 xmm1, xmm5
  0003a	f3 0f 5c 0e	 subss	 xmm1, DWORD PTR [esi]
  0003e	f3 0f 5c 28	 subss	 xmm5, DWORD PTR [eax]
  00042	f3 0f 10 53 38	 movss	 xmm2, DWORD PTR [ebx+56]
  00047	0f 28 dc	 movaps	 xmm3, xmm4
  0004a	f3 0f 5c 5e 04	 subss	 xmm3, DWORD PTR [esi+4]
  0004f	f3 0f 5c 60 04	 subss	 xmm4, DWORD PTR [eax+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7931 :     if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  00054	8b 55 0c	 mov	 edx, DWORD PTR __Mid$[ebp]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00057	0f 28 c2	 movaps	 xmm0, xmm2
  0005a	f3 0f 5c 46 08	 subss	 xmm0, DWORD PTR [esi+8]
  0005f	f3 0f 5c 50 08	 subss	 xmm2, DWORD PTR [eax+8]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00064	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  00068	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 182  :     z = fz;

  0006c	f3 0f 59 c9	 mulss	 xmm1, xmm1

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00070	f3 0f 59 ed	 mulss	 xmm5, xmm5
  00074	f3 0f 58 d9	 addss	 xmm3, xmm1
  00078	f3 0f 59 c0	 mulss	 xmm0, xmm0
  0007c	f3 0f 58 e5	 addss	 xmm4, xmm5
  00080	f3 0f 59 d2	 mulss	 xmm2, xmm2
  00084	f3 0f 58 d8	 addss	 xmm3, xmm0
  00088	f3 0f 58 e2	 addss	 xmm4, xmm2
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  0008c	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7931 :     if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  0008f	76 0b		 jbe	 SHORT $LN55@Med3_unche
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

  00091	8b 5d 08	 mov	 ebx, DWORD PTR __First$[ebp]
  00094	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00096	8b 03		 mov	 eax, DWORD PTR [ebx]
  00098	89 02		 mov	 DWORD PTR [edx], eax

; 101  :     _Right   = _STD move(_Tmp);

  0009a	89 0b		 mov	 DWORD PTR [ebx], ecx
$LN55@Med3_unche:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7935 :     if (_DEBUG_LT_PRED(_Pred, *_Last, *_Mid)) { // swap middle and last, then test first again

  0009c	8b 75 10	 mov	 esi, DWORD PTR __Last$[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  0009f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7935 :     if (_DEBUG_LT_PRED(_Pred, *_Last, *_Mid)) { // swap middle and last, then test first again

  000a5	8b 3a		 mov	 edi, DWORD PTR [edx]
  000a7	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  000a9	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 351  : 		const D3DXVECTOR3 & c_rv3CameraPos = pCurrentCamera->GetEye();
; 352  : 		const D3DXVECTOR3 & c_v3LeftPos  = pkLeft->GetPosition();

  000ae	8b ce		 mov	 ecx, esi
  000b0	8b d8		 mov	 ebx, eax
  000b2	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition

; 353  : 		const D3DXVECTOR3 & c_v3RightPos = pkRight->GetPosition();

  000b7	8b cf		 mov	 ecx, edi
  000b9	8b f0		 mov	 esi, eax
  000bb	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  000c0	f3 0f 10 6b 30	 movss	 xmm5, DWORD PTR [ebx+48]
  000c5	f3 0f 10 63 34	 movss	 xmm4, DWORD PTR [ebx+52]
  000ca	0f 28 cd	 movaps	 xmm1, xmm5
  000cd	f3 0f 5c 0e	 subss	 xmm1, DWORD PTR [esi]
  000d1	f3 0f 5c 28	 subss	 xmm5, DWORD PTR [eax]
  000d5	f3 0f 10 53 38	 movss	 xmm2, DWORD PTR [ebx+56]
  000da	0f 28 dc	 movaps	 xmm3, xmm4
  000dd	f3 0f 5c 5e 04	 subss	 xmm3, DWORD PTR [esi+4]
  000e2	f3 0f 5c 60 04	 subss	 xmm4, DWORD PTR [eax+4]
  000e7	0f 28 c2	 movaps	 xmm0, xmm2

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  000ea	f3 0f 59 c9	 mulss	 xmm1, xmm1

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  000ee	f3 0f 5c 46 08	 subss	 xmm0, DWORD PTR [esi+8]
  000f3	f3 0f 5c 50 08	 subss	 xmm2, DWORD PTR [eax+8]

; 182  :     z = fz;

  000f8	f3 0f 59 db	 mulss	 xmm3, xmm3

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  000fc	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  00100	f3 0f 59 ed	 mulss	 xmm5, xmm5
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00104	f3 0f 58 d9	 addss	 xmm3, xmm1
  00108	f3 0f 59 c0	 mulss	 xmm0, xmm0
  0010c	f3 0f 58 e5	 addss	 xmm4, xmm5
  00110	f3 0f 59 d2	 mulss	 xmm2, xmm2
  00114	f3 0f 58 d8	 addss	 xmm3, xmm0
  00118	f3 0f 58 e2	 addss	 xmm4, xmm2
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  0011c	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7935 :     if (_DEBUG_LT_PRED(_Pred, *_Last, *_Mid)) { // swap middle and last, then test first again

  0011f	0f 86 9f 00 00
	00		 jbe	 $LN53@Med3_unche
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

  00125	8b 55 10	 mov	 edx, DWORD PTR __Last$[ebp]

; 100  :     _Left    = _STD move(_Right);

  00128	8b 4d 0c	 mov	 ecx, DWORD PTR __Mid$[ebp]
  0012b	8b 3a		 mov	 edi, DWORD PTR [edx]
  0012d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0012f	89 02		 mov	 DWORD PTR [edx], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7938 :         if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  00131	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 101  :     _Right   = _STD move(_Tmp);

  00134	89 39		 mov	 DWORD PTR [ecx], edi
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  00136	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7938 :         if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  0013c	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  0013e	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 351  : 		const D3DXVECTOR3 & c_rv3CameraPos = pCurrentCamera->GetEye();
; 352  : 		const D3DXVECTOR3 & c_v3LeftPos  = pkLeft->GetPosition();

  00143	8b cf		 mov	 ecx, edi
  00145	8b d8		 mov	 ebx, eax
  00147	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition

; 353  : 		const D3DXVECTOR3 & c_v3RightPos = pkRight->GetPosition();

  0014c	8b ce		 mov	 ecx, esi
  0014e	8b f8		 mov	 edi, eax
  00150	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00155	f3 0f 10 6b 30	 movss	 xmm5, DWORD PTR [ebx+48]
  0015a	f3 0f 10 63 34	 movss	 xmm4, DWORD PTR [ebx+52]
  0015f	0f 28 cd	 movaps	 xmm1, xmm5
  00162	f3 0f 5c 0f	 subss	 xmm1, DWORD PTR [edi]
  00166	f3 0f 5c 28	 subss	 xmm5, DWORD PTR [eax]
  0016a	f3 0f 10 53 38	 movss	 xmm2, DWORD PTR [ebx+56]
  0016f	0f 28 dc	 movaps	 xmm3, xmm4
  00172	f3 0f 5c 5f 04	 subss	 xmm3, DWORD PTR [edi+4]
  00177	f3 0f 5c 60 04	 subss	 xmm4, DWORD PTR [eax+4]
  0017c	0f 28 c2	 movaps	 xmm0, xmm2

; 182  :     z = fz;

  0017f	f3 0f 59 c9	 mulss	 xmm1, xmm1

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00183	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]
  00188	f3 0f 5c 50 08	 subss	 xmm2, DWORD PTR [eax+8]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0018d	f3 0f 59 db	 mulss	 xmm3, xmm3
  00191	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  00195	f3 0f 59 ed	 mulss	 xmm5, xmm5
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00199	f3 0f 58 d9	 addss	 xmm3, xmm1
  0019d	f3 0f 59 c0	 mulss	 xmm0, xmm0
  001a1	f3 0f 58 e5	 addss	 xmm4, xmm5
  001a5	f3 0f 59 d2	 mulss	 xmm2, xmm2
  001a9	f3 0f 58 d8	 addss	 xmm3, xmm0
  001ad	f3 0f 58 e2	 addss	 xmm4, xmm2
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  001b1	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7938 :         if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  001b4	76 0e		 jbe	 SHORT $LN53@Med3_unche
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

  001b6	8b 55 0c	 mov	 edx, DWORD PTR __Mid$[ebp]

; 100  :     _Left    = _STD move(_Right);

  001b9	8b 5d 08	 mov	 ebx, DWORD PTR __First$[ebp]
  001bc	8b 0a		 mov	 ecx, DWORD PTR [edx]
  001be	8b 03		 mov	 eax, DWORD PTR [ebx]
  001c0	89 02		 mov	 DWORD PTR [edx], eax

; 101  :     _Right   = _STD move(_Tmp);

  001c2	89 0b		 mov	 DWORD PTR [ebx], ecx
$LN53@Med3_unche:
  001c4	5f		 pop	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7942 : }

  001c5	5e		 pop	 esi
  001c6	5b		 pop	 ebx
  001c7	5d		 pop	 ebp
  001c8	c3		 ret	 0
??$_Med3_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@00UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ENDP ; std::_Med3_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Copy_backward_memmove@PAPAVCGraphicThingInstance@@PAPAV1@@std@@YAPAPAVCGraphicThingInstance@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_backward_memmove@PAPAVCGraphicThingInstance@@PAPAV1@@std@@YAPAPAVCGraphicThingInstance@@PAPAV1@00@Z PROC ; std::_Copy_backward_memmove<CGraphicThingInstance * *,CGraphicThingInstance * *>, COMDAT

; 4833 : _CtgIt2 _Copy_backward_memmove(_CtgIt1 _First, _CtgIt1 _Last, _CtgIt2 _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4834 :     // implement copy_backward-like function as memmove
; 4835 :     auto _FirstPtr              = _To_address(_First);
; 4836 :     auto _LastPtr               = _To_address(_Last);
; 4837 :     auto _DestPtr               = _To_address(_Dest);
; 4838 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4839 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4840 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4841 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	2b c8		 sub	 ecx, eax

; 4842 :     auto _Result                = _CSTD memmove(_Dest_ch - _Count, _First_ch, _Count);

  0000b	51		 push	 ecx
  0000c	50		 push	 eax
  0000d	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00010	2b c1		 sub	 eax, ecx
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4843 :     if constexpr (is_pointer_v<_CtgIt2>) {
; 4844 :         return static_cast<_CtgIt2>(_Result);
; 4845 :     } else {
; 4846 :         return _Dest - (_LastPtr - _FirstPtr);
; 4847 :     }
; 4848 : }

  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
??$_Copy_backward_memmove@PAPAVCGraphicThingInstance@@PAPAV1@@std@@YAPAPAVCGraphicThingInstance@@PAPAV1@00@Z ENDP ; std::_Copy_backward_memmove<CGraphicThingInstance * *,CGraphicThingInstance * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\Area.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\Area.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Marty 5.5\Src-Client\Client\GameLib\Area.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Marty 5.5\Src-Client\Client\GameLib\Area.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Med3_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@00UCRCNumComp@2@@Z
_TEXT	SEGMENT
__Tmp$1$ = 8						; size = 4
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
__Pred$ = 20						; size = 1
??$_Med3_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@00UCRCNumComp@2@@Z PROC ; std::_Med3_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>, COMDAT

; 7929 : _CONSTEXPR20 void _Med3_unchecked(_RanIt _First, _RanIt _Mid, _RanIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
; File C:\Marty 5.5\Src-Client\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  00004	8b 5d 08	 mov	 ebx, DWORD PTR __First$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7929 : _CONSTEXPR20 void _Med3_unchecked(_RanIt _First, _RanIt _Mid, _RanIt _Last, _Pr _Pred) {

  00007	56		 push	 esi
  00008	57		 push	 edi
; File C:\Marty 5.5\Src-Client\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  00009	8b 7d 0c	 mov	 edi, DWORD PTR __Mid$[ebp]
  0000c	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0000f	3b 43 04	 cmp	 eax, DWORD PTR [ebx+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7931 :     if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  00012	76 13		 jbe	 SHORT $LN19@Med3_unche
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

  00014	8b 17		 mov	 edx, DWORD PTR [edi]
  00016	8b f0		 mov	 esi, eax

; 100  :     _Left    = _STD move(_Right);

  00018	8b 03		 mov	 eax, DWORD PTR [ebx]
  0001a	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  0001d	89 07		 mov	 DWORD PTR [edi], eax
  0001f	89 4f 04	 mov	 DWORD PTR [edi+4], ecx

; 101  :     _Right   = _STD move(_Tmp);

  00022	89 13		 mov	 DWORD PTR [ebx], edx
  00024	89 73 04	 mov	 DWORD PTR [ebx+4], esi
$LN19@Med3_unche:
; File C:\Marty 5.5\Src-Client\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  00027	8b 55 10	 mov	 edx, DWORD PTR __Last$[ebp]
  0002a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0002d	3b 47 04	 cmp	 eax, DWORD PTR [edi+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7935 :     if (_DEBUG_LT_PRED(_Pred, *_Last, *_Mid)) { // swap middle and last, then test first again

  00030	76 2e		 jbe	 SHORT $LN17@Med3_unche
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

  00032	8b 02		 mov	 eax, DWORD PTR [edx]
  00034	8b 72 04	 mov	 esi, DWORD PTR [edx+4]

; 100  :     _Left    = _STD move(_Right);

  00037	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0003a	89 45 08	 mov	 DWORD PTR __Tmp$1$[ebp], eax
  0003d	8b 07		 mov	 eax, DWORD PTR [edi]
  0003f	89 02		 mov	 DWORD PTR [edx], eax
  00041	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 101  :     _Right   = _STD move(_Tmp);

  00044	8b 55 08	 mov	 edx, DWORD PTR __Tmp$1$[ebp]
  00047	89 17		 mov	 DWORD PTR [edi], edx
  00049	89 77 04	 mov	 DWORD PTR [edi+4], esi
; File C:\Marty 5.5\Src-Client\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  0004c	3b 73 04	 cmp	 esi, DWORD PTR [ebx+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7938 :         if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  0004f	76 0f		 jbe	 SHORT $LN17@Med3_unche
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

  00051	8b 03		 mov	 eax, DWORD PTR [ebx]
  00053	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  00056	89 07		 mov	 DWORD PTR [edi], eax
  00058	89 4f 04	 mov	 DWORD PTR [edi+4], ecx

; 101  :     _Right   = _STD move(_Tmp);

  0005b	89 13		 mov	 DWORD PTR [ebx], edx
  0005d	89 73 04	 mov	 DWORD PTR [ebx+4], esi
$LN17@Med3_unche:
  00060	5f		 pop	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7942 : }

  00061	5e		 pop	 esi
  00062	5b		 pop	 ebx
  00063	5d		 pop	 ebp
  00064	c3		 ret	 0
??$_Med3_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@00UCRCNumComp@2@@Z ENDP ; std::_Med3_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Copy_backward_memmove@PAUSCRCWithNumber@CArea@@PAU12@@std@@YAPAUSCRCWithNumber@CArea@@PAU12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_backward_memmove@PAUSCRCWithNumber@CArea@@PAU12@@std@@YAPAUSCRCWithNumber@CArea@@PAU12@00@Z PROC ; std::_Copy_backward_memmove<CArea::SCRCWithNumber *,CArea::SCRCWithNumber *>, COMDAT

; 4833 : _CtgIt2 _Copy_backward_memmove(_CtgIt1 _First, _CtgIt1 _Last, _CtgIt2 _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4834 :     // implement copy_backward-like function as memmove
; 4835 :     auto _FirstPtr              = _To_address(_First);
; 4836 :     auto _LastPtr               = _To_address(_Last);
; 4837 :     auto _DestPtr               = _To_address(_Dest);
; 4838 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4839 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4840 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4841 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	2b c8		 sub	 ecx, eax

; 4842 :     auto _Result                = _CSTD memmove(_Dest_ch - _Count, _First_ch, _Count);

  0000b	51		 push	 ecx
  0000c	50		 push	 eax
  0000d	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00010	2b c1		 sub	 eax, ecx
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4843 :     if constexpr (is_pointer_v<_CtgIt2>) {
; 4844 :         return static_cast<_CtgIt2>(_Result);
; 4845 :     } else {
; 4846 :         return _Dest - (_LastPtr - _FirstPtr);
; 4847 :     }
; 4848 : }

  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
??$_Copy_backward_memmove@PAUSCRCWithNumber@CArea@@PAU12@@std@@YAPAUSCRCWithNumber@CArea@@PAU12@00@Z ENDP ; std::_Copy_backward_memmove<CArea::SCRCWithNumber *,CArea::SCRCWithNumber *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Pop_heap_hole_by_index@PAU?$pair@MJ@std@@U12@U?$less@X@2@@std@@YAXPAU?$pair@MJ@0@HH$$QAU10@U?$less@X@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Top$1$ = 12						; size = 4
__Hole$ = 12						; size = 4
__Bottom$ = 16						; size = 4
__Val$ = 20						; size = 4
__Pred$ = 24						; size = 1
??$_Pop_heap_hole_by_index@PAU?$pair@MJ@std@@U12@U?$less@X@2@@std@@YAXPAU?$pair@MJ@0@HH$$QAU10@U?$less@X@0@@Z PROC ; std::_Pop_heap_hole_by_index<std::pair<float,long> *,std::pair<float,long>,std::less<void> >, COMDAT

; 6432 :     _RanIt _First, _Iter_diff_t<_RanIt> _Hole, _Iter_diff_t<_RanIt> _Bottom, _Ty&& _Val, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 6433 :     // percolate _Hole to _Bottom, then push _Val
; 6434 :     _STL_INTERNAL_CHECK(_Bottom > 0);
; 6435 : 
; 6436 :     using _Diff      = _Iter_diff_t<_RanIt>;
; 6437 :     const _Diff _Top = _Hole;
; 6438 :     _Diff _Idx       = _Hole;
; 6439 : 
; 6440 :     // Check whether _Idx can have a child before calculating that child's index, since
; 6441 :     // calculating the child's index can trigger integer overflows
; 6442 :     const _Diff _Max_sequence_non_leaf = (_Bottom - 1) >> 1; // shift for codegen
; 6443 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00006	53		 push	 ebx
  00007	8b 5d 10	 mov	 ebx, DWORD PTR __Bottom$[ebp]
  0000a	56		 push	 esi
  0000b	8b 75 0c	 mov	 esi, DWORD PTR __Hole$[ebp]
  0000e	8b d6		 mov	 edx, esi
  00010	57		 push	 edi
  00011	8d 7b ff	 lea	 edi, DWORD PTR [ebx-1]
  00014	89 75 0c	 mov	 DWORD PTR __Top$1$[ebp], esi
  00017	d1 ff		 sar	 edi, 1
  00019	3b f7		 cmp	 esi, edi
  0001b	7d 47		 jge	 SHORT $LN3@Pop_heap_h
  0001d	0f 1f 00	 npad	 3
$LL2@Pop_heap_h:

; 6444 :         _Idx = 2 * _Idx + 2;

  00020	03 d2		 add	 edx, edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 506  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00022	f3 0f 10 4c d1
	10		 movss	 xmm1, DWORD PTR [ecx+edx*8+16]
  00028	f3 0f 10 44 d1
	08		 movss	 xmm0, DWORD PTR [ecx+edx*8+8]
  0002e	0f 2f c1	 comiss	 xmm0, xmm1
  00031	77 16		 ja	 SHORT $LN12@Pop_heap_h
  00033	0f 2f c8	 comiss	 xmm1, xmm0
  00036	77 0a		 ja	 SHORT $LN11@Pop_heap_h
  00038	8b 44 d1 14	 mov	 eax, DWORD PTR [ecx+edx*8+20]
  0003c	3b 44 d1 0c	 cmp	 eax, DWORD PTR [ecx+edx*8+12]
  00040	7c 07		 jl	 SHORT $LN12@Pop_heap_h
$LN11@Pop_heap_h:
  00042	b8 02 00 00 00	 mov	 eax, 2
  00047	eb 05		 jmp	 SHORT $LN13@Pop_heap_h
$LN12@Pop_heap_h:
  00049	b8 01 00 00 00	 mov	 eax, 1
$LN13@Pop_heap_h:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6448 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  0004e	03 d0		 add	 edx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 340  :         first  = _STD forward<_Ty1>(_Right.first);

  00050	8b 04 d1	 mov	 eax, DWORD PTR [ecx+edx*8]
  00053	89 04 f1	 mov	 DWORD PTR [ecx+esi*8], eax

; 341  :         second = _STD forward<_Ty2>(_Right.second);

  00056	8b 44 d1 04	 mov	 eax, DWORD PTR [ecx+edx*8+4]
  0005a	89 44 f1 04	 mov	 DWORD PTR [ecx+esi*8+4], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6449 :         _Hole             = _Idx;

  0005e	8b f2		 mov	 esi, edx
  00060	3b d7		 cmp	 edx, edi
  00062	7c bc		 jl	 SHORT $LL2@Pop_heap_h
$LN3@Pop_heap_h:

; 6450 :     }
; 6451 : 
; 6452 :     if (_Idx == _Max_sequence_non_leaf && _Bottom % 2 == 0) { // only child at bottom, move _Hole down to it

  00064	3b d7		 cmp	 edx, edi
  00066	75 17		 jne	 SHORT $LN5@Pop_heap_h
  00068	f6 c3 01	 test	 bl, 1
  0006b	75 12		 jne	 SHORT $LN5@Pop_heap_h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 340  :         first  = _STD forward<_Ty1>(_Right.first);

  0006d	8b 44 d9 f8	 mov	 eax, DWORD PTR [ecx+ebx*8-8]
  00071	89 04 f1	 mov	 DWORD PTR [ecx+esi*8], eax

; 341  :         second = _STD forward<_Ty2>(_Right.second);

  00074	8b 44 d9 fc	 mov	 eax, DWORD PTR [ecx+ebx*8-4]
  00078	89 44 f1 04	 mov	 DWORD PTR [ecx+esi*8+4], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6454 :         _Hole             = _Bottom - 1;

  0007c	8d 73 ff	 lea	 esi, DWORD PTR [ebx-1]
$LN5@Pop_heap_h:

; 6328 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  0007f	8b 5d 0c	 mov	 ebx, DWORD PTR __Top$1$[ebp]
  00082	8b 7d 14	 mov	 edi, DWORD PTR __Val$[ebp]
  00085	3b de		 cmp	 ebx, esi
  00087	7d 3b		 jge	 SHORT $LN48@Pop_heap_h
  00089	0f 1f 80 00 00
	00 00		 npad	 7
$LL57@Pop_heap_h:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 506  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00090	f3 0f 10 0f	 movss	 xmm1, DWORD PTR [edi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6327 :     for (_Diff _Idx = (_Hole - 1) >> 1; // shift for codegen

  00094	8d 56 ff	 lea	 edx, DWORD PTR [esi-1]
  00097	d1 fa		 sar	 edx, 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 506  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00099	f3 0f 10 04 d1	 movss	 xmm0, DWORD PTR [ecx+edx*8]
  0009e	0f 2f c8	 comiss	 xmm1, xmm0
  000a1	77 0e		 ja	 SHORT $LN45@Pop_heap_h
  000a3	0f 2f c1	 comiss	 xmm0, xmm1
  000a6	77 1c		 ja	 SHORT $LN48@Pop_heap_h
  000a8	8b 44 d1 04	 mov	 eax, DWORD PTR [ecx+edx*8+4]
  000ac	3b 47 04	 cmp	 eax, DWORD PTR [edi+4]
  000af	7d 13		 jge	 SHORT $LN48@Pop_heap_h
$LN45@Pop_heap_h:

; 340  :         first  = _STD forward<_Ty1>(_Right.first);

  000b1	f3 0f 11 04 f1	 movss	 DWORD PTR [ecx+esi*8], xmm0

; 341  :         second = _STD forward<_Ty2>(_Right.second);

  000b6	8b 44 d1 04	 mov	 eax, DWORD PTR [ecx+edx*8+4]
  000ba	89 44 f1 04	 mov	 DWORD PTR [ecx+esi*8+4], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6332 :         _Hole             = _Idx;

  000be	8b f2		 mov	 esi, edx
  000c0	3b da		 cmp	 ebx, edx
  000c2	7c cc		 jl	 SHORT $LL57@Pop_heap_h
$LN48@Pop_heap_h:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 340  :         first  = _STD forward<_Ty1>(_Right.first);

  000c4	8b 07		 mov	 eax, DWORD PTR [edi]
  000c6	89 04 f1	 mov	 DWORD PTR [ecx+esi*8], eax

; 341  :         second = _STD forward<_Ty2>(_Right.second);

  000c9	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000cc	5f		 pop	 edi
  000cd	89 44 f1 04	 mov	 DWORD PTR [ecx+esi*8+4], eax
  000d1	5e		 pop	 esi
  000d2	5b		 pop	 ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6458 : }

  000d3	5d		 pop	 ebp
  000d4	c3		 ret	 0
??$_Pop_heap_hole_by_index@PAU?$pair@MJ@std@@U12@U?$less@X@2@@std@@YAXPAU?$pair@MJ@0@HH$$QAU10@U?$less@X@0@@Z ENDP ; std::_Pop_heap_hole_by_index<std::pair<float,long> *,std::pair<float,long>,std::less<void> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Copy_memmove@PAEPAE@std@@YAPAEPAE00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAEPAE@std@@YAPAEPAE00@Z PROC		; std::_Copy_memmove<unsigned char *,unsigned char *>, COMDAT

; 4526 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4527 :     auto _FirstPtr              = _To_address(_First);
; 4528 :     auto _LastPtr               = _To_address(_Last);
; 4529 :     auto _DestPtr               = _To_address(_Dest);
; 4530 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4531 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4532 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4535 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4536 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4537 :     } else {
; 4538 :         return _Dest + (_LastPtr - _FirstPtr);
; 4539 :     }
; 4540 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAEPAE@std@@YAPAEPAE00@Z ENDP		; std::_Copy_memmove<unsigned char *,unsigned char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Copy_memmove@PAUSCRCWithNumber@CArea@@PAU12@@std@@YAPAUSCRCWithNumber@CArea@@PAU12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAUSCRCWithNumber@CArea@@PAU12@@std@@YAPAUSCRCWithNumber@CArea@@PAU12@00@Z PROC ; std::_Copy_memmove<CArea::SCRCWithNumber *,CArea::SCRCWithNumber *>, COMDAT

; 4526 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4527 :     auto _FirstPtr              = _To_address(_First);
; 4528 :     auto _LastPtr               = _To_address(_Last);
; 4529 :     auto _DestPtr               = _To_address(_Dest);
; 4530 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4531 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4532 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4535 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4536 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4537 :     } else {
; 4538 :         return _Dest + (_LastPtr - _FirstPtr);
; 4539 :     }
; 4540 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAUSCRCWithNumber@CArea@@PAU12@@std@@YAPAUSCRCWithNumber@CArea@@PAU12@00@Z ENDP ; std::_Copy_memmove<CArea::SCRCWithNumber *,CArea::SCRCWithNumber *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Copy_memmove@PAU?$pair@MJ@std@@PAU12@@std@@YAPAU?$pair@MJ@0@PAU10@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAU?$pair@MJ@std@@PAU12@@std@@YAPAU?$pair@MJ@0@PAU10@00@Z PROC ; std::_Copy_memmove<std::pair<float,long> *,std::pair<float,long> *>, COMDAT

; 4526 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4527 :     auto _FirstPtr              = _To_address(_First);
; 4528 :     auto _LastPtr               = _To_address(_Last);
; 4529 :     auto _DestPtr               = _To_address(_Dest);
; 4530 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4531 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4532 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4535 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4536 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4537 :     } else {
; 4538 :         return _Dest + (_LastPtr - _FirstPtr);
; 4539 :     }
; 4540 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAU?$pair@MJ@std@@PAU12@@std@@YAPAU?$pair@MJ@0@PAU10@00@Z ENDP ; std::_Copy_memmove<std::pair<float,long> *,std::pair<float,long> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Copy_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z PROC ; std::_Copy_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>, COMDAT

; 4526 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4527 :     auto _FirstPtr              = _To_address(_First);
; 4528 :     auto _LastPtr               = _To_address(_Last);
; 4529 :     auto _DestPtr               = _To_address(_Dest);
; 4530 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4531 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4532 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4535 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4536 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4537 :     } else {
; 4538 :         return _Dest + (_LastPtr - _FirstPtr);
; 4539 :     }
; 4540 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ENDP ; std::_Copy_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Buffered_inplace_merge_unchecked_impl@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
__Count1$ = 20						; size = 4
__Count2$ = 24						; size = 4
__Temp_ptr$ = 28					; size = 4
__Capacity$ = 32					; size = 4
__Pred$ = 36						; size = 1
??$_Buffered_inplace_merge_unchecked_impl@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z PROC ; std::_Buffered_inplace_merge_unchecked_impl<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>, COMDAT

; 7452 :     _Iter_diff_t<_BidIt> _Count2, _Iter_value_t<_BidIt>* const _Temp_ptr, const ptrdiff_t _Capacity, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 7453 :     // merge sorted [_First, _Mid) with sorted [_Mid, _Last)
; 7454 :     // usual invariants apply
; 7455 :     if (_Count1 <= _Count2 && _Count1 <= _Capacity) {

  00003	8b 4d 14	 mov	 ecx, DWORD PTR __Count1$[ebp]
  00006	8b 55 18	 mov	 edx, DWORD PTR __Count2$[ebp]
  00009	8b 45 20	 mov	 eax, DWORD PTR __Capacity$[ebp]
  0000c	3b ca		 cmp	 ecx, edx
  0000e	7f 1d		 jg	 SHORT $LN2@Buffered_i
  00010	3b c8		 cmp	 ecx, eax
  00012	7f 19		 jg	 SHORT $LN2@Buffered_i

; 7456 :         _STD _Inplace_merge_buffer_left(_First, _Mid, _Last, _Temp_ptr, _Pred);

  00014	ff 75 24	 push	 DWORD PTR __Pred$[ebp]
  00017	ff 75 1c	 push	 DWORD PTR __Temp_ptr$[ebp]
  0001a	ff 75 10	 push	 DWORD PTR __Last$[ebp]
  0001d	ff 75 0c	 push	 DWORD PTR __Mid$[ebp]
  00020	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00023	e8 00 00 00 00	 call	 ??$_Inplace_merge_buffer_left@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00QAU12@UFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Inplace_merge_buffer_left<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  00028	83 c4 14	 add	 esp, 20			; 00000014H

; 7461 :             _First, _Mid, _Last, _Count1, _Count2, _Temp_ptr, _Capacity, _Pred);
; 7462 :     }
; 7463 : }

  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
$LN2@Buffered_i:

; 7457 :     } else if (_Count2 <= _Capacity) {

  0002d	ff 75 24	 push	 DWORD PTR __Pred$[ebp]
  00030	3b d0		 cmp	 edx, eax
  00032	7f 16		 jg	 SHORT $LN4@Buffered_i

; 7458 :         _STD _Inplace_merge_buffer_right(_First, _Mid, _Last, _Temp_ptr, _Pred);

  00034	ff 75 1c	 push	 DWORD PTR __Temp_ptr$[ebp]
  00037	ff 75 10	 push	 DWORD PTR __Last$[ebp]
  0003a	ff 75 0c	 push	 DWORD PTR __Mid$[ebp]
  0003d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00040	e8 00 00 00 00	 call	 ??$_Inplace_merge_buffer_right@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00QAU12@UFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Inplace_merge_buffer_right<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  00045	83 c4 14	 add	 esp, 20			; 00000014H

; 7461 :             _First, _Mid, _Last, _Count1, _Count2, _Temp_ptr, _Capacity, _Pred);
; 7462 :     }
; 7463 : }

  00048	5d		 pop	 ebp
  00049	c3		 ret	 0
$LN4@Buffered_i:

; 7459 :     } else {
; 7460 :         _STD _Buffered_inplace_merge_divide_and_conquer(

  0004a	50		 push	 eax
  0004b	ff 75 1c	 push	 DWORD PTR __Temp_ptr$[ebp]
  0004e	52		 push	 edx
  0004f	51		 push	 ecx
  00050	ff 75 10	 push	 DWORD PTR __Last$[ebp]
  00053	ff 75 0c	 push	 DWORD PTR __Mid$[ebp]
  00056	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00059	e8 00 00 00 00	 call	 ??$_Buffered_inplace_merge_divide_and_conquer@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Buffered_inplace_merge_divide_and_conquer<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  0005e	83 c4 20	 add	 esp, 32			; 00000020H

; 7461 :             _First, _Mid, _Last, _Count1, _Count2, _Temp_ptr, _Capacity, _Pred);
; 7462 :     }
; 7463 : }

  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??$_Buffered_inplace_merge_unchecked_impl@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z ENDP ; std::_Buffered_inplace_merge_unchecked_impl<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Rotate_one_left@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00@Z
_TEXT	SEGMENT
__Temp$1$ = -16						; size = 16
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
??$_Rotate_one_left@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00@Z PROC ; std::_Rotate_one_left<CMapOutdoor::TPatchDrawStruct *>, COMDAT

; 7336 : void _Rotate_one_left(_BidIt _First, _BidIt _Mid, _BidIt _Last) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 7339 :     _Iter_value_t<_BidIt> _Temp(_STD move(*_First));

  00006	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4894 :             return _Copy_memmove(_First, _Last, _Dest);

  00009	50		 push	 eax
  0000a	ff 75 10	 push	 DWORD PTR __Last$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7339 :     _Iter_value_t<_BidIt> _Temp(_STD move(*_First));

  0000d	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4894 :             return _Copy_memmove(_First, _Last, _Dest);

  00010	ff 75 0c	 push	 DWORD PTR __Mid$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7339 :     _Iter_value_t<_BidIt> _Temp(_STD move(*_First));

  00013	0f 11 45 f0	 movups	 XMMWORD PTR __Temp$1$[ebp], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4894 :             return _Copy_memmove(_First, _Last, _Dest);

  00017	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7340 :     *_STD _Move_unchecked(_Mid, _Last, _First) = _STD move(_Temp);

  0001c	0f 10 45 f0	 movups	 xmm0, XMMWORD PTR __Temp$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4894 :             return _Copy_memmove(_First, _Last, _Dest);

  00020	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7340 :     *_STD _Move_unchecked(_Mid, _Last, _First) = _STD move(_Temp);

  00023	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0

; 7341 : }

  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??$_Rotate_one_left@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00@Z ENDP ; std::_Rotate_one_left<CMapOutdoor::TPatchDrawStruct *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Rotate_one_right@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00@Z
_TEXT	SEGMENT
__Temp$1$ = -16						; size = 16
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
??$_Rotate_one_right@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00@Z PROC ; std::_Rotate_one_right<CMapOutdoor::TPatchDrawStruct *>, COMDAT

; 7327 : void _Rotate_one_right(_BidIt _First, _BidIt _Mid, _BidIt _Last) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 7330 :     _Iter_value_t<_BidIt> _Temp(_STD move(*_Mid));

  00006	8b 45 0c	 mov	 eax, DWORD PTR __Mid$[ebp]
  00009	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4936 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  0000a	ff 75 10	 push	 DWORD PTR __Last$[ebp]
  0000d	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7330 :     _Iter_value_t<_BidIt> _Temp(_STD move(*_Mid));

  00010	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4936 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  00013	50		 push	 eax
  00014	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7330 :     _Iter_value_t<_BidIt> _Temp(_STD move(*_Mid));

  00015	0f 11 45 f0	 movups	 XMMWORD PTR __Temp$1$[ebp], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4936 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  00019	e8 00 00 00 00	 call	 ??$_Copy_backward_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_backward_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7332 :     *_First = _STD move(_Temp);

  0001e	0f 10 45 f0	 movups	 xmm0, XMMWORD PTR __Temp$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4936 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  00022	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7332 :     *_First = _STD move(_Temp);

  00025	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0
  00028	5e		 pop	 esi

; 7333 : }

  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??$_Rotate_one_right@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00@Z ENDP ; std::_Rotate_one_right<CMapOutdoor::TPatchDrawStruct *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Chunked_merge_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@0HHUFSortPatchDrawStructWithTerrainNum@2@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
tv187 = 20						; size = 4
__Chunk$ = 20						; size = 4
__Count$ = 24						; size = 4
__Pred$ = 28						; size = 1
??$_Chunked_merge_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@0HHUFSortPatchDrawStructWithTerrainNum@2@@Z PROC ; std::_Chunked_merge_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>, COMDAT

; 8378 :     _Iter_diff_t<_BidIt> _Count, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 8379 :     // move merging adjacent chunks of distance _Chunk
; 8380 :     // pre: _Count == distance(_First, _Last)
; 8381 :     // pre: _Chunk > 0
; 8382 :     while (_Chunk < _Count) {

  00003	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00009	53		 push	 ebx
  0000a	8b 5d 14	 mov	 ebx, DWORD PTR __Chunk$[ebp]
  0000d	56		 push	 esi
  0000e	8b 75 18	 mov	 esi, DWORD PTR __Count$[ebp]
  00011	3b de		 cmp	 ebx, esi
  00013	7d 38		 jge	 SHORT $LN3@Chunked_me
  00015	8b c3		 mov	 eax, ebx
  00017	c1 e0 04	 shl	 eax, 4
  0001a	89 45 14	 mov	 DWORD PTR tv187[ebp], eax
  0001d	57		 push	 edi
  0001e	66 90		 npad	 2
$LL2@Chunked_me:

; 8388 :         _Dest              = _Merge_move(_First, _Mid1, _Mid2, _Dest, _Pred);

  00020	ff 75 1c	 push	 DWORD PTR __Pred$[ebp]
  00023	2b f3		 sub	 esi, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1394 :         _Where += _Off;

  00025	03 c1		 add	 eax, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 70   :     return _Right < _Left ? _Right : _Left;

  00027	3b f3		 cmp	 esi, ebx
  00029	8b fb		 mov	 edi, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8388 :         _Dest              = _Merge_move(_First, _Mid1, _Mid2, _Dest, _Pred);

  0002b	52		 push	 edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 70   :     return _Right < _Left ? _Right : _Left;

  0002c	0f 4c fe	 cmovl	 edi, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8385 :         const auto _Chunk2 = (_STD min)(_Chunk, _Count);

  0002f	2b f7		 sub	 esi, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1394 :         _Where += _Off;

  00031	c1 e7 04	 shl	 edi, 4
  00034	03 f8		 add	 edi, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8388 :         _Dest              = _Merge_move(_First, _Mid1, _Mid2, _Dest, _Pred);

  00036	57		 push	 edi
  00037	50		 push	 eax
  00038	51		 push	 ecx
  00039	e8 00 00 00 00	 call	 ??$_Merge_move@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@10UFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Merge_move<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  0003e	83 c4 14	 add	 esp, 20			; 00000014H
  00041	8b d0		 mov	 edx, eax
  00043	8b 45 14	 mov	 eax, DWORD PTR tv187[ebp]

; 8389 :         _First             = _Mid2;

  00046	8b cf		 mov	 ecx, edi
  00048	3b de		 cmp	 ebx, esi
  0004a	7c d4		 jl	 SHORT $LL2@Chunked_me

; 8379 :     // move merging adjacent chunks of distance _Chunk
; 8380 :     // pre: _Count == distance(_First, _Last)
; 8381 :     // pre: _Chunk > 0
; 8382 :     while (_Chunk < _Count) {

  0004c	5f		 pop	 edi
$LN3@Chunked_me:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4894 :             return _Copy_memmove(_First, _Last, _Dest);

  0004d	52		 push	 edx
  0004e	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00051	51		 push	 ecx
  00052	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
  00057	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8393 : }

  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
??$_Chunked_merge_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@0HHUFSortPatchDrawStructWithTerrainNum@2@@Z ENDP ; std::_Chunked_merge_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Uninitialized_chunked_merge_unchecked2@PAUTPatchDrawStruct@CMapOutdoor@@U12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@0HUFSortPatchDrawStructWithTerrainNum@2@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Count$ = 20						; size = 4
__Pred$ = 24						; size = 1
??$_Uninitialized_chunked_merge_unchecked2@PAUTPatchDrawStruct@CMapOutdoor@@U12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@0HUFSortPatchDrawStructWithTerrainNum@2@@Z PROC ; std::_Uninitialized_chunked_merge_unchecked2<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>, COMDAT

; 8357 :     _BidIt _First, const _BidIt _Last, _Ty* _Dest, _Iter_diff_t<_BidIt> _Count, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1602 :     constexpr explicit _Uninitialized_backout(_NoThrowFwdIt _Dest) : _First(_Dest), _Last(_Dest) {}

  00003	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8362 :     while (_Count > _Isort_max<_BidIt>) {

  00006	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00009	56		 push	 esi
  0000a	8b 75 14	 mov	 esi, DWORD PTR __Count$[ebp]
  0000d	83 fe 20	 cmp	 esi, 32			; 00000020H
  00010	7e 34		 jle	 SHORT $LN3@Uninitiali
  00012	57		 push	 edi
$LL2@Uninitiali:

; 8368 :         _Backout._Last     = _Uninitialized_merge_move(_First, _Mid1, _Mid2, _Backout._Last, _Pred);

  00013	ff 75 18	 push	 DWORD PTR __Pred$[ebp]
  00016	83 c6 e0	 add	 esi, -32		; ffffffe0H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1394 :         _Where += _Off;

  00019	8d 81 00 02 00
	00		 lea	 eax, DWORD PTR [ecx+512]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 70   :     return _Right < _Left ? _Right : _Left;

  0001f	bf 20 00 00 00	 mov	 edi, 32			; 00000020H
  00024	3b f7		 cmp	 esi, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8368 :         _Backout._Last     = _Uninitialized_merge_move(_First, _Mid1, _Mid2, _Backout._Last, _Pred);

  00026	52		 push	 edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 70   :     return _Right < _Left ? _Right : _Left;

  00027	0f 4c fe	 cmovl	 edi, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8365 :         const auto _Chunk2 = (_STD min)(_Isort_max<_BidIt>, _Count);

  0002a	2b f7		 sub	 esi, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1394 :         _Where += _Off;

  0002c	c1 e7 04	 shl	 edi, 4
  0002f	03 f8		 add	 edi, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8368 :         _Backout._Last     = _Uninitialized_merge_move(_First, _Mid1, _Mid2, _Backout._Last, _Pred);

  00031	57		 push	 edi
  00032	50		 push	 eax
  00033	51		 push	 ecx
  00034	e8 00 00 00 00	 call	 ??$_Uninitialized_merge_move@PAUTPatchDrawStruct@CMapOutdoor@@U12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@QAU12@11UFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Uninitialized_merge_move<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  00039	83 c4 14	 add	 esp, 20			; 00000014H
  0003c	8b d0		 mov	 edx, eax

; 8369 :         _First             = _Mid2;

  0003e	8b cf		 mov	 ecx, edi
  00040	83 fe 20	 cmp	 esi, 32			; 00000020H
  00043	7f ce		 jg	 SHORT $LL2@Uninitiali

; 8362 :     while (_Count > _Isort_max<_BidIt>) {

  00045	5f		 pop	 edi
$LN3@Uninitiali:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1634 :             return _Copy_memmove(_First, _Last, _Dest);

  00046	52		 push	 edx
  00047	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0004a	51		 push	 ecx
  0004b	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
  00050	83 c4 0c	 add	 esp, 12			; 0000000cH
  00053	5e		 pop	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8374 : }

  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
??$_Uninitialized_chunked_merge_unchecked2@PAUTPatchDrawStruct@CMapOutdoor@@U12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@0HUFSortPatchDrawStructWithTerrainNum@2@@Z ENDP ; std::_Uninitialized_chunked_merge_unchecked2<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Insertion_sort_isort_max_chunks@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z
_TEXT	SEGMENT
__Val$1$ = -64						; size = 16
__Val$1 = -48						; size = 16
tv1784 = -32						; size = 4
$T2 = -28						; size = 4
$T3 = -28						; size = 4
tv1789 = -24						; size = 4
__First$1$ = -20					; size = 4
__Val$1$ = -16						; size = 4
__Hole$1$ = -12						; size = 4
__Val$2$ = -8						; size = 4
__Mid$1$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Count$ = 16						; size = 4
_blhsOrderFound$1$ = 19					; size = 1
_blhsOrderFound$1$ = 19					; size = 1
__Pred$ = 20						; size = 1
??$_Insertion_sort_isort_max_chunks@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z PROC ; std::_Insertion_sort_isort_max_chunks<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>, COMDAT

; 8396 : void _Insertion_sort_isort_max_chunks(_BidIt _First, const _BidIt _Last, _Iter_diff_t<_BidIt> _Count, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 8397 :     // insertion sort every chunk of distance _Isort_max<_BidIt> in [_First, _Last)
; 8398 :     // pre: _Count == distance(_First, _Last)
; 8399 :     for (; _Isort_max<_BidIt> < _Count; _Count -= _Isort_max<_BidIt>) { // sort chunks

  00003	8b 45 10	 mov	 eax, DWORD PTR __Count$[ebp]
  00006	83 ec 40	 sub	 esp, 64			; 00000040H
  00009	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0000c	83 f8 20	 cmp	 eax, 32			; 00000020H
  0000f	0f 8e b0 02 00
	00		 jle	 $LN3@Insertion_
  00015	53		 push	 ebx
  00016	8d 58 df	 lea	 ebx, DWORD PTR [eax-33]
  00019	89 4d ec	 mov	 DWORD PTR __First$1$[ebp], ecx
  0001c	c1 eb 05	 shr	 ebx, 5
  0001f	56		 push	 esi
  00020	43		 inc	 ebx
  00021	57		 push	 edi
  00022	89 5d e8	 mov	 DWORD PTR tv1789[ebp], ebx
$LL4@Insertion_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1394 :         _Where += _Off;

  00025	8d 91 00 02 00
	00		 lea	 edx, DWORD PTR [ecx+512]
  0002b	89 55 e0	 mov	 DWORD PTR tv1784[ebp], edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7907 :     if (_First != _Last) {

  0002e	3b ca		 cmp	 ecx, edx
  00030	0f 84 7b 02 00
	00		 je	 $LN12@Insertion_

; 7908 :         for (_BidIt _Mid = _First; ++_Mid != _Last;) { // order next element

  00036	8d 41 10	 lea	 eax, DWORD PTR [ecx+16]
  00039	89 45 fc	 mov	 DWORD PTR __Mid$1$[ebp], eax
  0003c	3b c2		 cmp	 eax, edx
  0003e	0f 84 6d 02 00
	00		 je	 $LN12@Insertion_
  00044	8d 79 04	 lea	 edi, DWORD PTR [ecx+4]
  00047	89 7d f0	 mov	 DWORD PTR __Val$1$[ebp], edi
  0004a	66 0f 1f 44 00
	00		 npad	 6
$LL11@Insertion_:

; 7910 :             _Iter_value_t<_BidIt> _Val = _STD move(*_Mid);

  00050	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  00053	89 45 f4	 mov	 DWORD PTR __Hole$1$[ebp], eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 358  : 				DWORD lhsTerrainNumOrder = 0, rhsTerrainNumOrder = 0;

  00056	33 f6		 xor	 esi, esi

; 359  : 				bool blhsOrderFound = false;

  00058	c6 45 13 00	 mov	 BYTE PTR _blhsOrderFound$1$[ebp], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7910 :             _Iter_value_t<_BidIt> _Val = _STD move(*_Mid);

  0005c	0f 11 45 c0	 movups	 XMMWORD PTR __Val$1$[ebp], xmm0
  00060	0f 11 45 d0	 movups	 XMMWORD PTR __Val$1[ebp], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00064	66 0f 73 d8 04	 psrldq	 xmm0, 4
  00069	66 0f 7e c3	 movd	 ebx, xmm0
  0006d	53		 push	 ebx
  0006e	ff 35 04 00 00
	00		 push	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00074	89 5d f8	 mov	 DWORD PTR __Val$2$[ebp], ebx
  00077	ff 35 00 00 00
	00		 push	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  0007d	e8 00 00 00 00	 call	 ??$__std_find_trivial@EE@@YAPAEPAE0E@Z ; __std_find_trivial<unsigned char,unsigned char>

; 5816 :                 return _Result;

  00082	89 45 e4	 mov	 DWORD PTR $T3[ebp], eax

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00085	0f b6 07	 movzx	 eax, BYTE PTR [edi]
  00088	50		 push	 eax
  00089	ff 35 04 00 00
	00		 push	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  0008f	ff 35 00 00 00
	00		 push	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00095	e8 00 00 00 00	 call	 ??$__std_find_trivial@EE@@YAPAEPAE0E@Z ; __std_find_trivial<unsigned char,unsigned char>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0009a	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  000a0	83 c4 18	 add	 esp, 24			; 00000018H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000a3	8b 55 e4	 mov	 edx, DWORD PTR $T3[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5816 :                 return _Result;

  000a6	8b f8		 mov	 edi, eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 365  : 				if (lhsIterator != m_TerrainNumVector.end())

  000a8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000ad	3b d1		 cmp	 edx, ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 365  : 				if (lhsIterator != m_TerrainNumVector.end())

  000af	74 08		 je	 SHORT $LN22@Insertion_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000b1	8b f2		 mov	 esi, edx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 367  : 					blhsOrderFound = true;

  000b3	c6 45 13 01	 mov	 BYTE PTR _blhsOrderFound$1$[ebp], 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000b7	2b f0		 sub	 esi, eax
$LN22@Insertion_:
  000b9	3b f9		 cmp	 edi, ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 370  : 				if (rhsIterator != m_TerrainNumVector.end())

  000bb	74 04		 je	 SHORT $LN321@Insertion_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000bd	2b f8		 sub	 edi, eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 375  : 				if (!brhsOrderFound)

  000bf	eb 3a		 jmp	 SHORT $LN24@Insertion_
$LN321@Insertion_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  000c1	8b 45 f0	 mov	 eax, DWORD PTR __Val$1$[ebp]
  000c4	3b 0d 08 00 00
	00		 cmp	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  000ca	74 13		 je	 SHORT $LN110@Insertion_

; 797  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  000cc	8a 00		 mov	 al, BYTE PTR [eax]
  000ce	88 01		 mov	 BYTE PTR [ecx], al

; 798  :         } else {
; 799  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 800  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 801  :             _ASAN_VECTOR_RELEASE_GUARD;
; 802  :         }
; 803  : 
; 804  :         _Orphan_range(_Mylast, _Mylast);
; 805  :         _Ty& _Result = *_Mylast;
; 806  :         ++_Mylast;

  000d0	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  000d6	41		 inc	 ecx
  000d7	89 0d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, ecx

; 782  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  000dd	eb 12		 jmp	 SHORT $LN109@Insertion_
$LN110@Insertion_:

; 783  :         }
; 784  : 
; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  000df	50		 push	 eax
  000e0	51		 push	 ecx
  000e1	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  000e6	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@AAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  000eb	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
$LN109@Insertion_:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 378  : 					rhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  000f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  000f6	8b f9		 mov	 edi, ecx
  000f8	2b f8		 sub	 edi, eax
  000fa	4f		 dec	 edi
$LN24@Insertion_:

; 379  : 				}
; 380  : 				if (!blhsOrderFound)

  000fb	80 7d 13 00	 cmp	 BYTE PTR _blhsOrderFound$1$[ebp], 0
  000ff	75 58		 jne	 SHORT $LN27@Insertion_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00101	53		 push	 ebx
  00102	51		 push	 ecx
  00103	50		 push	 eax
  00104	e8 00 00 00 00	 call	 ??$__std_find_trivial@EE@@YAPAEPAE0E@Z ; __std_find_trivial<unsigned char,unsigned char>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00109	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5816 :                 return _Result;

  0010f	8b f0		 mov	 esi, eax
  00111	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00114	3b f1		 cmp	 esi, ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 383  : 					if (lhsIterator != m_TerrainNumVector.end())

  00116	74 09		 je	 SHORT $LN322@Insertion_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00118	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  0011d	2b f0		 sub	 esi, eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 388  : 					if (!blhsOrderFound)

  0011f	eb 38		 jmp	 SHORT $LN27@Insertion_
$LN322@Insertion_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  00121	3b 0d 08 00 00
	00		 cmp	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  00127	74 11		 je	 SHORT $LN158@Insertion_

; 797  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  00129	88 19		 mov	 BYTE PTR [ecx], bl

; 798  :         } else {
; 799  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 800  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 801  :             _ASAN_VECTOR_RELEASE_GUARD;
; 802  :         }
; 803  : 
; 804  :         _Orphan_range(_Mylast, _Mylast);
; 805  :         _Ty& _Result = *_Mylast;
; 806  :         ++_Mylast;

  0012b	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00131	41		 inc	 ecx
  00132	89 0d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, ecx

; 782  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00138	eb 15		 jmp	 SHORT $LN157@Insertion_
$LN158@Insertion_:

; 783  :         }
; 784  : 
; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0013a	8d 45 d4	 lea	 eax, DWORD PTR __Val$1[ebp+4]
  0013d	50		 push	 eax
  0013e	51		 push	 ecx
  0013f	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  00144	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@AAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  00149	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
$LN157@Insertion_:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 391  : 						lhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  0014f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00154	8b f1		 mov	 esi, ecx
  00156	2b f0		 sub	 esi, eax
  00158	4e		 dec	 esi
$LN27@Insertion_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7912 :             if (_DEBUG_LT_PRED(_Pred, _Val, *_First)) { // found new earliest element, move to front

  00159	8b 5d fc	 mov	 ebx, DWORD PTR __Mid$1$[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 395  : 				return lhsTerrainNumOrder < rhsTerrainNumOrder;

  0015c	3b f7		 cmp	 esi, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7912 :             if (_DEBUG_LT_PRED(_Pred, _Val, *_First)) { // found new earliest element, move to front

  0015e	73 22		 jae	 SHORT $LN18@Insertion_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4936 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  00160	8d 73 10	 lea	 esi, DWORD PTR [ebx+16]
  00163	56		 push	 esi
  00164	53		 push	 ebx
  00165	8b 5d ec	 mov	 ebx, DWORD PTR __First$1$[ebp]
  00168	53		 push	 ebx
  00169	e8 00 00 00 00	 call	 ??$_Copy_backward_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_backward_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7914 :                 *_First = _STD move(_Val);

  0016e	0f 10 45 c0	 movups	 xmm0, XMMWORD PTR __Val$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4936 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  00172	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7914 :                 *_First = _STD move(_Val);

  00175	89 75 fc	 mov	 DWORD PTR __Mid$1$[ebp], esi
  00178	8b c6		 mov	 eax, esi
  0017a	0f 11 03	 movups	 XMMWORD PTR [ebx], xmm0

; 7915 :             } else { // look for insertion point after first

  0017d	e9 1e 01 00 00	 jmp	 $LN19@Insertion_
$LN18@Insertion_:

; 7916 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

  00182	83 c3 04	 add	 ebx, 4
$LL16@Insertion_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00185	ff 75 f8	 push	 DWORD PTR __Val$2$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7916 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

  00188	83 eb 10	 sub	 ebx, 16			; 00000010H
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 359  : 				bool blhsOrderFound = false;

  0018b	c6 45 13 00	 mov	 BYTE PTR _blhsOrderFound$1$[ebp], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  0018f	51		 push	 ecx
  00190	50		 push	 eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 358  : 				DWORD lhsTerrainNumOrder = 0, rhsTerrainNumOrder = 0;

  00191	33 f6		 xor	 esi, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00193	e8 00 00 00 00	 call	 ??$__std_find_trivial@EE@@YAPAEPAE0E@Z ; __std_find_trivial<unsigned char,unsigned char>
  00198	0f b6 0b	 movzx	 ecx, BYTE PTR [ebx]
  0019b	51		 push	 ecx
  0019c	ff 35 04 00 00
	00		 push	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4

; 5816 :                 return _Result;

  001a2	89 45 e4	 mov	 DWORD PTR $T2[ebp], eax

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  001a5	ff 35 00 00 00
	00		 push	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  001ab	e8 00 00 00 00	 call	 ??$__std_find_trivial@EE@@YAPAEPAE0E@Z ; __std_find_trivial<unsigned char,unsigned char>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001b0	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  001b6	83 c4 18	 add	 esp, 24			; 00000018H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001b9	8b 55 e4	 mov	 edx, DWORD PTR $T2[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5816 :                 return _Result;

  001bc	8b f8		 mov	 edi, eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 365  : 				if (lhsIterator != m_TerrainNumVector.end())

  001be	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001c3	3b d1		 cmp	 edx, ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 365  : 				if (lhsIterator != m_TerrainNumVector.end())

  001c5	74 08		 je	 SHORT $LN169@Insertion_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001c7	8b f2		 mov	 esi, edx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 367  : 					blhsOrderFound = true;

  001c9	c6 45 13 01	 mov	 BYTE PTR _blhsOrderFound$1$[ebp], 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001cd	2b f0		 sub	 esi, eax
$LN169@Insertion_:
  001cf	3b f9		 cmp	 edi, ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 370  : 				if (rhsIterator != m_TerrainNumVector.end())

  001d1	74 04		 je	 SHORT $LN323@Insertion_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001d3	2b f8		 sub	 edi, eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 375  : 				if (!brhsOrderFound)

  001d5	eb 37		 jmp	 SHORT $LN171@Insertion_
$LN323@Insertion_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  001d7	3b 0d 08 00 00
	00		 cmp	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  001dd	74 13		 je	 SHORT $LN257@Insertion_

; 797  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  001df	8a 03		 mov	 al, BYTE PTR [ebx]
  001e1	88 01		 mov	 BYTE PTR [ecx], al

; 798  :         } else {
; 799  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 800  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 801  :             _ASAN_VECTOR_RELEASE_GUARD;
; 802  :         }
; 803  : 
; 804  :         _Orphan_range(_Mylast, _Mylast);
; 805  :         _Ty& _Result = *_Mylast;
; 806  :         ++_Mylast;

  001e3	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  001e9	41		 inc	 ecx
  001ea	89 0d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, ecx

; 782  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  001f0	eb 12		 jmp	 SHORT $LN256@Insertion_
$LN257@Insertion_:

; 783  :         }
; 784  : 
; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  001f2	53		 push	 ebx
  001f3	51		 push	 ecx
  001f4	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  001f9	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@AAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  001fe	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
$LN256@Insertion_:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 378  : 					rhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  00204	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00209	8b f9		 mov	 edi, ecx
  0020b	2b f8		 sub	 edi, eax
  0020d	4f		 dec	 edi
$LN171@Insertion_:

; 379  : 				}
; 380  : 				if (!blhsOrderFound)

  0020e	80 7d 13 00	 cmp	 BYTE PTR _blhsOrderFound$1$[ebp], 0
  00212	75 58		 jne	 SHORT $LN174@Insertion_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00214	ff 75 f8	 push	 DWORD PTR __Val$2$[ebp]
  00217	51		 push	 ecx
  00218	50		 push	 eax
  00219	e8 00 00 00 00	 call	 ??$__std_find_trivial@EE@@YAPAEPAE0E@Z ; __std_find_trivial<unsigned char,unsigned char>

; 5816 :                 return _Result;

  0021e	8b f0		 mov	 esi, eax
  00220	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00223	a1 04 00 00 00	 mov	 eax, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00228	3b f0		 cmp	 esi, eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 383  : 					if (lhsIterator != m_TerrainNumVector.end())

  0022a	74 08		 je	 SHORT $LN324@Insertion_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0022c	2b 35 00 00 00
	00		 sub	 esi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 388  : 					if (!blhsOrderFound)

  00232	eb 38		 jmp	 SHORT $LN174@Insertion_
$LN324@Insertion_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  00234	3b 05 08 00 00
	00		 cmp	 eax, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  0023a	74 14		 je	 SHORT $LN305@Insertion_

; 797  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  0023c	8b 4d f8	 mov	 ecx, DWORD PTR __Val$2$[ebp]
  0023f	88 08		 mov	 BYTE PTR [eax], cl

; 798  :         } else {
; 799  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 800  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 801  :             _ASAN_VECTOR_RELEASE_GUARD;
; 802  :         }
; 803  : 
; 804  :         _Orphan_range(_Mylast, _Mylast);
; 805  :         _Ty& _Result = *_Mylast;
; 806  :         ++_Mylast;

  00241	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00247	46		 inc	 esi
  00248	89 35 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, esi

; 782  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0024e	eb 15		 jmp	 SHORT $LN304@Insertion_
$LN305@Insertion_:

; 783  :         }
; 784  : 
; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00250	8d 4d d4	 lea	 ecx, DWORD PTR __Val$1[ebp+4]
  00253	51		 push	 ecx
  00254	50		 push	 eax
  00255	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  0025a	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@AAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  0025f	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
$LN304@Insertion_:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 391  : 						lhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  00265	2b 35 00 00 00
	00		 sub	 esi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  0026b	4e		 dec	 esi
$LN174@Insertion_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7916 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

  0026c	8b 4d f4	 mov	 ecx, DWORD PTR __Hole$1$[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 395  : 				return lhsTerrainNumOrder < rhsTerrainNumOrder;

  0026f	3b f7		 cmp	 esi, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7916 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

  00271	73 1d		 jae	 SHORT $LN15@Insertion_

; 7917 :                     *_Hole = _STD move(*_Prev); // move hole down

  00273	0f 10 43 fc	 movups	 xmm0, XMMWORD PTR [ebx-4]
  00277	8d 43 fc	 lea	 eax, DWORD PTR [ebx-4]
  0027a	89 45 f4	 mov	 DWORD PTR __Hole$1$[ebp], eax
  0027d	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
  00280	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00286	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  0028b	e9 f5 fe ff ff	 jmp	 $LL16@Insertion_
$LN15@Insertion_:

; 7918 :                 }
; 7919 : 
; 7920 :                 *_Hole = _STD move(_Val); // insert element in hole

  00290	8b 45 fc	 mov	 eax, DWORD PTR __Mid$1$[ebp]
  00293	0f 10 45 c0	 movups	 xmm0, XMMWORD PTR __Val$1$[ebp]
  00297	83 c0 10	 add	 eax, 16			; 00000010H
  0029a	89 45 fc	 mov	 DWORD PTR __Mid$1$[ebp], eax
  0029d	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
$LN19@Insertion_:

; 7908 :         for (_BidIt _Mid = _First; ++_Mid != _Last;) { // order next element

  002a0	8b 55 e0	 mov	 edx, DWORD PTR tv1784[ebp]
  002a3	8b 7d f0	 mov	 edi, DWORD PTR __Val$1$[ebp]
  002a6	3b c2		 cmp	 eax, edx
  002a8	0f 85 a2 fd ff
	ff		 jne	 $LL11@Insertion_
  002ae	8b 5d e8	 mov	 ebx, DWORD PTR tv1789[ebp]
$LN12@Insertion_:

; 8397 :     // insertion sort every chunk of distance _Isort_max<_BidIt> in [_First, _Last)
; 8398 :     // pre: _Count == distance(_First, _Last)
; 8399 :     for (; _Isort_max<_BidIt> < _Count; _Count -= _Isort_max<_BidIt>) { // sort chunks

  002b1	83 eb 01	 sub	 ebx, 1

; 8400 :         _First = _Insertion_sort_unchecked(_First, _STD next(_First, _Isort_max<_BidIt>), _Pred);

  002b4	89 55 ec	 mov	 DWORD PTR __First$1$[ebp], edx
  002b7	8b ca		 mov	 ecx, edx
  002b9	89 5d e8	 mov	 DWORD PTR tv1789[ebp], ebx
  002bc	0f 85 63 fd ff
	ff		 jne	 $LL4@Insertion_

; 8397 :     // insertion sort every chunk of distance _Isort_max<_BidIt> in [_First, _Last)
; 8398 :     // pre: _Count == distance(_First, _Last)
; 8399 :     for (; _Isort_max<_BidIt> < _Count; _Count -= _Isort_max<_BidIt>) { // sort chunks

  002c2	5f		 pop	 edi
  002c3	5e		 pop	 esi
  002c4	5b		 pop	 ebx
$LN3@Insertion_:

; 8401 :     }
; 8402 : 
; 8403 :     _Insertion_sort_unchecked(_First, _Last, _Pred); // sort partial last chunk

  002c5	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  002c8	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  002cb	51		 push	 ecx
  002cc	e8 00 00 00 00	 call	 ??$_Insertion_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@QAU12@0UFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Insertion_sort_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  002d1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 8404 : }

  002d4	8b e5		 mov	 esp, ebp
  002d6	5d		 pop	 ebp
  002d7	c3		 ret	 0
??$_Insertion_sort_isort_max_chunks@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z ENDP ; std::_Insertion_sort_isort_max_chunks<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Copy_backward_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_backward_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z PROC ; std::_Copy_backward_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>, COMDAT

; 4833 : _CtgIt2 _Copy_backward_memmove(_CtgIt1 _First, _CtgIt1 _Last, _CtgIt2 _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4834 :     // implement copy_backward-like function as memmove
; 4835 :     auto _FirstPtr              = _To_address(_First);
; 4836 :     auto _LastPtr               = _To_address(_Last);
; 4837 :     auto _DestPtr               = _To_address(_Dest);
; 4838 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4839 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4840 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4841 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	2b c8		 sub	 ecx, eax

; 4842 :     auto _Result                = _CSTD memmove(_Dest_ch - _Count, _First_ch, _Count);

  0000b	51		 push	 ecx
  0000c	50		 push	 eax
  0000d	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00010	2b c1		 sub	 eax, ecx
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4843 :     if constexpr (is_pointer_v<_CtgIt2>) {
; 4844 :         return static_cast<_CtgIt2>(_Result);
; 4845 :     } else {
; 4846 :         return _Dest - (_LastPtr - _FirstPtr);
; 4847 :     }
; 4848 : }

  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
??$_Copy_backward_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ENDP ; std::_Copy_backward_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Pop_heap_hole_by_index@PAPAVCGraphicThingInstance@@PAV1@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@HH$$QAPAV1@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z
_TEXT	SEGMENT
tv941 = -16						; size = 4
__Max_sequence_non_leaf$1$ = -12			; size = 4
tv937 = -8						; size = 4
__Top$1$ = -4						; size = 4
__First$ = 8						; size = 4
__Hole$ = 12						; size = 4
__Idx$1$ = 16						; size = 4
__Bottom$ = 16						; size = 4
__Val$ = 20						; size = 4
__Pred$ = 24						; size = 1
??$_Pop_heap_hole_by_index@PAPAVCGraphicThingInstance@@PAV1@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@HH$$QAPAV1@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z PROC ; std::_Pop_heap_hole_by_index<CGraphicThingInstance * *,CGraphicThingInstance *,CMapOutdoor_LessThingInstancePtrRenderOrder>, COMDAT

; 6432 :     _RanIt _First, _Iter_diff_t<_RanIt> _Hole, _Iter_diff_t<_RanIt> _Bottom, _Ty&& _Val, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 6433 :     // percolate _Hole to _Bottom, then push _Val
; 6434 :     _STL_INTERNAL_CHECK(_Bottom > 0);
; 6435 : 
; 6436 :     using _Diff      = _Iter_diff_t<_RanIt>;
; 6437 :     const _Diff _Top = _Hole;

  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Hole$[ebp]

; 6438 :     _Diff _Idx       = _Hole;
; 6439 : 
; 6440 :     // Check whether _Idx can have a child before calculating that child's index, since
; 6441 :     // calculating the child's index can trigger integer overflows
; 6442 :     const _Diff _Max_sequence_non_leaf = (_Bottom - 1) >> 1; // shift for codegen
; 6443 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  00009	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  0000c	53		 push	 ebx
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	8b 7d 10	 mov	 edi, DWORD PTR __Bottom$[ebp]
  00012	8b f1		 mov	 esi, ecx
  00014	4f		 dec	 edi
  00015	89 75 fc	 mov	 DWORD PTR __Top$1$[ebp], esi
  00018	8b c7		 mov	 eax, edi
  0001a	89 7d f0	 mov	 DWORD PTR tv941[ebp], edi
  0001d	d1 f8		 sar	 eax, 1
  0001f	8b d9		 mov	 ebx, ecx
  00021	89 45 f4	 mov	 DWORD PTR __Max_sequence_non_leaf$1$[ebp], eax
  00024	3b c8		 cmp	 ecx, eax
  00026	0f 8d b9 00 00
	00		 jge	 $LN3@Pop_heap_h
  0002c	0f 1f 40 00	 npad	 4
$LL2@Pop_heap_h:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  00030	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6444 :         _Idx = 2 * _Idx + 2;

  00036	8d 04 1b	 lea	 eax, DWORD PTR [ebx+ebx]

; 6445 :         if (_DEBUG_LT_PRED(_Pred, *(_First + _Idx), *(_First + (_Idx - 1)))) {

  00039	8b 7c 82 04	 mov	 edi, DWORD PTR [edx+eax*4+4]
  0003d	8b 74 82 08	 mov	 esi, DWORD PTR [edx+eax*4+8]
  00041	89 45 f8	 mov	 DWORD PTR tv937[ebp], eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  00044	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 351  : 		const D3DXVECTOR3 & c_rv3CameraPos = pCurrentCamera->GetEye();
; 352  : 		const D3DXVECTOR3 & c_v3LeftPos  = pkLeft->GetPosition();

  00049	8b ce		 mov	 ecx, esi
  0004b	8b d8		 mov	 ebx, eax
  0004d	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition

; 353  : 		const D3DXVECTOR3 & c_v3RightPos = pkRight->GetPosition();

  00052	8b cf		 mov	 ecx, edi
  00054	8b f0		 mov	 esi, eax
  00056	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0005b	f3 0f 10 6b 30	 movss	 xmm5, DWORD PTR [ebx+48]
  00060	f3 0f 10 63 34	 movss	 xmm4, DWORD PTR [ebx+52]
  00065	0f 28 cd	 movaps	 xmm1, xmm5
  00068	f3 0f 10 53 38	 movss	 xmm2, DWORD PTR [ebx+56]
  0006d	0f 28 dc	 movaps	 xmm3, xmm4
  00070	f3 0f 5c 60 04	 subss	 xmm4, DWORD PTR [eax+4]
  00075	f3 0f 5c 5e 04	 subss	 xmm3, DWORD PTR [esi+4]
  0007a	f3 0f 5c 28	 subss	 xmm5, DWORD PTR [eax]
  0007e	f3 0f 5c 0e	 subss	 xmm1, DWORD PTR [esi]
  00082	0f 28 c2	 movaps	 xmm0, xmm2
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6448 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  00085	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00088	f3 0f 5c 50 08	 subss	 xmm2, DWORD PTR [eax+8]
  0008d	f3 0f 5c 46 08	 subss	 xmm0, DWORD PTR [esi+8]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00092	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6448 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  00096	33 db		 xor	 ebx, ebx
  00098	8b 4d 0c	 mov	 ecx, DWORD PTR __Hole$[ebp]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0009b	f3 0f 59 e4	 mulss	 xmm4, xmm4

; 182  :     z = fz;

  0009f	f3 0f 59 c9	 mulss	 xmm1, xmm1
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  000a3	f3 0f 59 ed	 mulss	 xmm5, xmm5
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  000a7	f3 0f 58 d9	 addss	 xmm3, xmm1
  000ab	f3 0f 59 c0	 mulss	 xmm0, xmm0
  000af	f3 0f 58 e5	 addss	 xmm4, xmm5
  000b3	f3 0f 59 d2	 mulss	 xmm2, xmm2
  000b7	f3 0f 58 d8	 addss	 xmm3, xmm0
  000bb	f3 0f 58 e2	 addss	 xmm4, xmm2
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6448 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  000bf	0f 2f e3	 comiss	 xmm4, xmm3
  000c2	0f 96 c3	 setbe	 bl
  000c5	43		 inc	 ebx
  000c6	03 5d f8	 add	 ebx, DWORD PTR tv937[ebp]
  000c9	8b 04 9a	 mov	 eax, DWORD PTR [edx+ebx*4]
  000cc	89 04 8a	 mov	 DWORD PTR [edx+ecx*4], eax

; 6449 :         _Hole             = _Idx;

  000cf	8b cb		 mov	 ecx, ebx
  000d1	8b 45 f4	 mov	 eax, DWORD PTR __Max_sequence_non_leaf$1$[ebp]
  000d4	89 4d 0c	 mov	 DWORD PTR __Hole$[ebp], ecx
  000d7	3b d8		 cmp	 ebx, eax
  000d9	0f 8c 51 ff ff
	ff		 jl	 $LL2@Pop_heap_h

; 6438 :     _Diff _Idx       = _Hole;
; 6439 : 
; 6440 :     // Check whether _Idx can have a child before calculating that child's index, since
; 6441 :     // calculating the child's index can trigger integer overflows
; 6442 :     const _Diff _Max_sequence_non_leaf = (_Bottom - 1) >> 1; // shift for codegen
; 6443 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  000df	8b 75 fc	 mov	 esi, DWORD PTR __Top$1$[ebp]
  000e2	8b 7d f0	 mov	 edi, DWORD PTR tv941[ebp]
$LN3@Pop_heap_h:

; 6450 :     }
; 6451 : 
; 6452 :     if (_Idx == _Max_sequence_non_leaf && _Bottom % 2 == 0) { // only child at bottom, move _Hole down to it

  000e5	3b d8		 cmp	 ebx, eax
  000e7	75 13		 jne	 SHORT $LN5@Pop_heap_h
  000e9	8b 45 10	 mov	 eax, DWORD PTR __Bottom$[ebp]
  000ec	a8 01		 test	 al, 1
  000ee	75 0c		 jne	 SHORT $LN5@Pop_heap_h

; 6453 :         *(_First + _Hole) = _STD move(*(_First + (_Bottom - 1)));

  000f0	8b 44 82 fc	 mov	 eax, DWORD PTR [edx+eax*4-4]
  000f4	89 04 8a	 mov	 DWORD PTR [edx+ecx*4], eax

; 6454 :         _Hole             = _Bottom - 1;

  000f7	8b cf		 mov	 ecx, edi
  000f9	89 4d 0c	 mov	 DWORD PTR __Hole$[ebp], ecx
$LN5@Pop_heap_h:

; 6328 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  000fc	3b f1		 cmp	 esi, ecx
  000fe	0f 8d ab 00 00
	00		 jge	 $LN48@Pop_heap_h
$LL57@Pop_heap_h:

; 6327 :     for (_Diff _Idx = (_Hole - 1) >> 1; // shift for codegen

  00104	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]

; 6328 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  00107	8b 4d 14	 mov	 ecx, DWORD PTR __Val$[ebp]
  0010a	d1 f8		 sar	 eax, 1
  0010c	89 45 10	 mov	 DWORD PTR __Idx$1$[ebp], eax
  0010f	8b 39		 mov	 edi, DWORD PTR [ecx]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  00111	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6328 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  00117	8b 34 82	 mov	 esi, DWORD PTR [edx+eax*4]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  0011a	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 351  : 		const D3DXVECTOR3 & c_rv3CameraPos = pCurrentCamera->GetEye();
; 352  : 		const D3DXVECTOR3 & c_v3LeftPos  = pkLeft->GetPosition();

  0011f	8b ce		 mov	 ecx, esi
  00121	8b d8		 mov	 ebx, eax
  00123	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition

; 353  : 		const D3DXVECTOR3 & c_v3RightPos = pkRight->GetPosition();

  00128	8b cf		 mov	 ecx, edi
  0012a	8b f0		 mov	 esi, eax
  0012c	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00131	f3 0f 10 6b 30	 movss	 xmm5, DWORD PTR [ebx+48]
  00136	f3 0f 10 63 34	 movss	 xmm4, DWORD PTR [ebx+52]
  0013b	0f 28 cd	 movaps	 xmm1, xmm5
  0013e	f3 0f 5c 0e	 subss	 xmm1, DWORD PTR [esi]
  00142	f3 0f 5c 28	 subss	 xmm5, DWORD PTR [eax]
  00146	f3 0f 10 53 38	 movss	 xmm2, DWORD PTR [ebx+56]
  0014b	0f 28 dc	 movaps	 xmm3, xmm4
  0014e	f3 0f 5c 5e 04	 subss	 xmm3, DWORD PTR [esi+4]
  00153	f3 0f 5c 60 04	 subss	 xmm4, DWORD PTR [eax+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6328 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  00158	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0015b	0f 28 c2	 movaps	 xmm0, xmm2
  0015e	f3 0f 5c 46 08	 subss	 xmm0, DWORD PTR [esi+8]
  00163	f3 0f 5c 50 08	 subss	 xmm2, DWORD PTR [eax+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6328 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  00168	8b 4d 0c	 mov	 ecx, DWORD PTR __Hole$[ebp]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0016b	f3 0f 59 db	 mulss	 xmm3, xmm3
  0016f	f3 0f 59 e4	 mulss	 xmm4, xmm4

; 182  :     z = fz;

  00173	f3 0f 59 c9	 mulss	 xmm1, xmm1
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  00177	f3 0f 59 ed	 mulss	 xmm5, xmm5
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0017b	f3 0f 58 d9	 addss	 xmm3, xmm1
  0017f	f3 0f 59 c0	 mulss	 xmm0, xmm0
  00183	f3 0f 58 e5	 addss	 xmm4, xmm5
  00187	f3 0f 59 d2	 mulss	 xmm2, xmm2
  0018b	f3 0f 58 d8	 addss	 xmm3, xmm0
  0018f	f3 0f 58 e2	 addss	 xmm4, xmm2
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  00193	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6328 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  00196	76 17		 jbe	 SHORT $LN48@Pop_heap_h

; 6329 :          _Idx = (_Hole - 1) >> 1) { // shift for codegen
; 6330 :         // move _Hole up to parent
; 6331 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  00198	8b 75 10	 mov	 esi, DWORD PTR __Idx$1$[ebp]
  0019b	8b 04 b2	 mov	 eax, DWORD PTR [edx+esi*4]
  0019e	89 04 8a	 mov	 DWORD PTR [edx+ecx*4], eax

; 6332 :         _Hole             = _Idx;

  001a1	8b ce		 mov	 ecx, esi
  001a3	89 4d 0c	 mov	 DWORD PTR __Hole$[ebp], ecx
  001a6	39 75 fc	 cmp	 DWORD PTR __Top$1$[ebp], esi
  001a9	0f 8c 55 ff ff
	ff		 jl	 $LL57@Pop_heap_h
$LN48@Pop_heap_h:

; 6455 :     }
; 6456 : 
; 6457 :     _STD _Push_heap_by_index(_First, _Hole, _Top, _STD forward<_Ty>(_Val), _Pred);
; 6458 : }

  001af	8b 45 14	 mov	 eax, DWORD PTR __Val$[ebp]
  001b2	5f		 pop	 edi
  001b3	5e		 pop	 esi
  001b4	5b		 pop	 ebx
  001b5	8b 00		 mov	 eax, DWORD PTR [eax]
  001b7	89 04 8a	 mov	 DWORD PTR [edx+ecx*4], eax
  001ba	8b e5		 mov	 esp, ebp
  001bc	5d		 pop	 ebp
  001bd	c3		 ret	 0
??$_Pop_heap_hole_by_index@PAPAVCGraphicThingInstance@@PAV1@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@HH$$QAPAV1@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ENDP ; std::_Pop_heap_hole_by_index<CGraphicThingInstance * *,CGraphicThingInstance *,CMapOutdoor_LessThingInstancePtrRenderOrder>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\Area.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Pop_heap_hole_by_index@PAUSCRCWithNumber@CArea@@U12@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@HH$$QAU12@UCRCNumComp@2@@Z
_TEXT	SEGMENT
tv384 = -4						; size = 4
__First$ = 8						; size = 4
__Top$1$ = 12						; size = 4
__Hole$ = 12						; size = 4
__Bottom$ = 16						; size = 4
__Val$ = 20						; size = 4
__Pred$ = 24						; size = 1
??$_Pop_heap_hole_by_index@PAUSCRCWithNumber@CArea@@U12@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@HH$$QAU12@UCRCNumComp@2@@Z PROC ; std::_Pop_heap_hole_by_index<CArea::SCRCWithNumber *,CArea::SCRCWithNumber,CArea::CRCNumComp>, COMDAT

; 6432 :     _RanIt _First, _Iter_diff_t<_RanIt> _Hole, _Iter_diff_t<_RanIt> _Bottom, _Ty&& _Val, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 6433 :     // percolate _Hole to _Bottom, then push _Val
; 6434 :     _STL_INTERNAL_CHECK(_Bottom > 0);
; 6435 : 
; 6436 :     using _Diff      = _Iter_diff_t<_RanIt>;
; 6437 :     const _Diff _Top = _Hole;
; 6438 :     _Diff _Idx       = _Hole;
; 6439 : 
; 6440 :     // Check whether _Idx can have a child before calculating that child's index, since
; 6441 :     // calculating the child's index can trigger integer overflows
; 6442 :     const _Diff _Max_sequence_non_leaf = (_Bottom - 1) >> 1; // shift for codegen

  00004	8b 55 10	 mov	 edx, DWORD PTR __Bottom$[ebp]
  00007	8b 45 0c	 mov	 eax, DWORD PTR __Hole$[ebp]
  0000a	53		 push	 ebx
  0000b	56		 push	 esi

; 6443 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  0000c	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  0000f	8d 4a ff	 lea	 ecx, DWORD PTR [edx-1]
  00012	8b d9		 mov	 ebx, ecx
  00014	89 45 0c	 mov	 DWORD PTR __Top$1$[ebp], eax
  00017	d1 fb		 sar	 ebx, 1
  00019	89 4d fc	 mov	 DWORD PTR tv384[ebp], ecx
  0001c	57		 push	 edi
  0001d	8b f8		 mov	 edi, eax
  0001f	3b c3		 cmp	 eax, ebx
  00021	7d 29		 jge	 SHORT $LN3@Pop_heap_h
$LL2@Pop_heap_h:

; 6444 :         _Idx = 2 * _Idx + 2;

  00023	8d 14 3f	 lea	 edx, DWORD PTR [edi+edi]

; 6445 :         if (_DEBUG_LT_PRED(_Pred, *(_First + _Idx), *(_First + (_Idx - 1)))) {
; 6446 :             --_Idx;
; 6447 :         }
; 6448 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  00026	8b 4c d6 14	 mov	 ecx, DWORD PTR [esi+edx*8+20]
  0002a	39 4c d6 0c	 cmp	 DWORD PTR [esi+edx*8+12], ecx
  0002e	1b c9		 sbb	 ecx, ecx
  00030	8d 79 02	 lea	 edi, DWORD PTR [ecx+2]
  00033	03 fa		 add	 edi, edx
  00035	8b 0c fe	 mov	 ecx, DWORD PTR [esi+edi*8]
  00038	8b 54 fe 04	 mov	 edx, DWORD PTR [esi+edi*8+4]
  0003c	89 0c c6	 mov	 DWORD PTR [esi+eax*8], ecx
  0003f	89 54 c6 04	 mov	 DWORD PTR [esi+eax*8+4], edx

; 6449 :         _Hole             = _Idx;

  00043	8b c7		 mov	 eax, edi
  00045	3b fb		 cmp	 edi, ebx
  00047	7c da		 jl	 SHORT $LL2@Pop_heap_h
  00049	8b 55 10	 mov	 edx, DWORD PTR __Bottom$[ebp]
$LN3@Pop_heap_h:

; 6450 :     }
; 6451 : 
; 6452 :     if (_Idx == _Max_sequence_non_leaf && _Bottom % 2 == 0) { // only child at bottom, move _Hole down to it

  0004c	3b fb		 cmp	 edi, ebx
  0004e	75 17		 jne	 SHORT $LN5@Pop_heap_h
  00050	f6 c2 01	 test	 dl, 1
  00053	75 12		 jne	 SHORT $LN5@Pop_heap_h

; 6453 :         *(_First + _Hole) = _STD move(*(_First + (_Bottom - 1)));

  00055	8b 4c d6 f8	 mov	 ecx, DWORD PTR [esi+edx*8-8]
  00059	8b 54 d6 fc	 mov	 edx, DWORD PTR [esi+edx*8-4]
  0005d	89 0c c6	 mov	 DWORD PTR [esi+eax*8], ecx
  00060	89 54 c6 04	 mov	 DWORD PTR [esi+eax*8+4], edx

; 6454 :         _Hole             = _Bottom - 1;

  00064	8b 45 fc	 mov	 eax, DWORD PTR tv384[ebp]
$LN5@Pop_heap_h:

; 6328 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  00067	8b 5d 14	 mov	 ebx, DWORD PTR __Val$[ebp]
  0006a	39 45 0c	 cmp	 DWORD PTR __Top$1$[ebp], eax
  0006d	7d 24		 jge	 SHORT $LN24@Pop_heap_h
  0006f	90		 npad	 1
$LL12@Pop_heap_h:

; 6327 :     for (_Diff _Idx = (_Hole - 1) >> 1; // shift for codegen

  00070	8d 78 ff	 lea	 edi, DWORD PTR [eax-1]
  00073	d1 ff		 sar	 edi, 1
; File C:\Marty 5.5\Src-Client\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  00075	8b 4c fe 04	 mov	 ecx, DWORD PTR [esi+edi*8+4]
  00079	3b 4b 04	 cmp	 ecx, DWORD PTR [ebx+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6328 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  0007c	76 15		 jbe	 SHORT $LN24@Pop_heap_h

; 6329 :          _Idx = (_Hole - 1) >> 1) { // shift for codegen
; 6330 :         // move _Hole up to parent
; 6331 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  0007e	8b 0c fe	 mov	 ecx, DWORD PTR [esi+edi*8]
  00081	8b 54 fe 04	 mov	 edx, DWORD PTR [esi+edi*8+4]
  00085	89 0c c6	 mov	 DWORD PTR [esi+eax*8], ecx
  00088	89 54 c6 04	 mov	 DWORD PTR [esi+eax*8+4], edx

; 6332 :         _Hole             = _Idx;

  0008c	8b c7		 mov	 eax, edi
  0008e	39 7d 0c	 cmp	 DWORD PTR __Top$1$[ebp], edi
  00091	7c dd		 jl	 SHORT $LL12@Pop_heap_h
$LN24@Pop_heap_h:

; 6333 :     }
; 6334 : 
; 6335 :     *(_First + _Hole) = _STD forward<_Ty>(_Val); // drop _Val into final hole

  00093	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  00095	8b 53 04	 mov	 edx, DWORD PTR [ebx+4]
  00098	5f		 pop	 edi
  00099	89 0c c6	 mov	 DWORD PTR [esi+eax*8], ecx
  0009c	89 54 c6 04	 mov	 DWORD PTR [esi+eax*8+4], edx
  000a0	5e		 pop	 esi
  000a1	5b		 pop	 ebx

; 6455 :     }
; 6456 : 
; 6457 :     _STD _Push_heap_by_index(_First, _Hole, _Top, _STD forward<_Ty>(_Val), _Pred);
; 6458 : }

  000a2	8b e5		 mov	 esp, ebp
  000a4	5d		 pop	 ebp
  000a5	c3		 ret	 0
??$_Pop_heap_hole_by_index@PAUSCRCWithNumber@CArea@@U12@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@HH$$QAU12@UCRCNumComp@2@@Z ENDP ; std::_Pop_heap_hole_by_index<CArea::SCRCWithNumber *,CArea::SCRCWithNumber,CArea::CRCNumComp>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Partition_by_median_guess_unchecked@PAU?$pair@MJ@std@@U?$less@X@2@@std@@YA?AU?$pair@PAU?$pair@MJ@std@@PAU12@@0@PAU?$pair@MJ@0@0U?$less@X@0@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
tv1412 = -8						; size = 4
__Left$1$ = -8						; size = 4
__Gfirst$1$ = -4					; size = 4
__Pfirst$1$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Glast$1$ = 20						; size = 4
__Pred$ = 20						; size = 1
??$_Partition_by_median_guess_unchecked@PAU?$pair@MJ@std@@U?$less@X@2@@std@@YA?AU?$pair@PAU?$pair@MJ@std@@PAU12@@0@PAU?$pair@MJ@0@0U?$less@X@0@@Z PROC ; std::_Partition_by_median_guess_unchecked<std::pair<float,long> *,std::less<void> >, COMDAT

; 7962 : _CONSTEXPR20 pair<_RanIt, _RanIt> _Partition_by_median_guess_unchecked(_RanIt _First, _RanIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 7963 :     // partition [_First, _Last)
; 7964 :     _RanIt _Mid = _First + ((_Last - _First) >> 1); // shift for codegen

  00006	8b 4d 10	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	8b c1		 mov	 eax, ecx
  0000b	53		 push	 ebx
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	8b 7d 0c	 mov	 edi, DWORD PTR __First$[ebp]

; 7965 :     _Guess_median_unchecked(_First, _Mid, _Prev_iter(_Last), _Pred);

  00011	83 c1 f8	 add	 ecx, -8			; fffffff8H
  00014	2b c7		 sub	 eax, edi
  00016	c1 f8 04	 sar	 eax, 4
  00019	8d 34 c7	 lea	 esi, DWORD PTR [edi+eax*8]

; 7948 :     const _Diff _Count = _Last - _First;

  0001c	8b c1		 mov	 eax, ecx
  0001e	2b c7		 sub	 eax, edi

; 7963 :     // partition [_First, _Last)
; 7964 :     _RanIt _Mid = _First + ((_Last - _First) >> 1); // shift for codegen

  00020	89 75 fc	 mov	 DWORD PTR __Pfirst$1$[ebp], esi

; 7948 :     const _Diff _Count = _Last - _First;

  00023	c1 f8 03	 sar	 eax, 3

; 7949 :     if (40 < _Count) { // Tukey's ninther

  00026	83 f8 28	 cmp	 eax, 40			; 00000028H
  00029	7e 68		 jle	 SHORT $LN156@Partition_

; 7950 :         const _Diff _Step     = (_Count + 1) >> 3; // +1 can't overflow because range was made inclusive in caller
; 7951 :         const _Diff _Two_step = _Step << 1; // note: intentionally discards low-order bit
; 7952 :         _Med3_unchecked(_First, _First + _Step, _First + _Two_step, _Pred);

  0002b	8b 5d 14	 mov	 ebx, DWORD PTR __Pred$[ebp]
  0002e	40		 inc	 eax
  0002f	c1 f8 03	 sar	 eax, 3
  00032	8b c8		 mov	 ecx, eax
  00034	c1 e1 04	 shl	 ecx, 4
  00037	53		 push	 ebx
  00038	8d 3c c5 00 00
	00 00		 lea	 edi, DWORD PTR [eax*8]
  0003f	89 4d f8	 mov	 DWORD PTR tv1412[ebp], ecx
  00042	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
  00045	8d 14 07	 lea	 edx, DWORD PTR [edi+eax]
  00048	03 c1		 add	 eax, ecx
  0004a	50		 push	 eax
  0004b	52		 push	 edx
  0004c	ff 75 0c	 push	 DWORD PTR __First$[ebp]
  0004f	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAU?$pair@MJ@std@@U?$less@X@2@@std@@YAXPAU?$pair@MJ@0@00U?$less@X@0@@Z ; std::_Med3_unchecked<std::pair<float,long> *,std::less<void> >

; 7953 :         _Med3_unchecked(_Mid - _Step, _Mid, _Mid + _Step, _Pred);

  00054	53		 push	 ebx
  00055	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  00058	50		 push	 eax
  00059	8b c6		 mov	 eax, esi
  0005b	2b c7		 sub	 eax, edi
  0005d	56		 push	 esi
  0005e	50		 push	 eax
  0005f	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAU?$pair@MJ@std@@U?$less@X@2@@std@@YAXPAU?$pair@MJ@0@00U?$less@X@0@@Z ; std::_Med3_unchecked<std::pair<float,long> *,std::less<void> >

; 7954 :         _Med3_unchecked(_Last - _Two_step, _Last - _Step, _Last, _Pred);

  00064	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
  00067	83 c0 f8	 add	 eax, -8			; fffffff8H
  0006a	8b f0		 mov	 esi, eax
  0006c	53		 push	 ebx
  0006d	50		 push	 eax
  0006e	2b 45 f8	 sub	 eax, DWORD PTR tv1412[ebp]
  00071	2b f7		 sub	 esi, edi
  00073	56		 push	 esi
  00074	50		 push	 eax
  00075	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAU?$pair@MJ@std@@U?$less@X@2@@std@@YAXPAU?$pair@MJ@0@00U?$less@X@0@@Z ; std::_Med3_unchecked<std::pair<float,long> *,std::less<void> >

; 7955 :         _Med3_unchecked(_First + _Step, _Mid, _Last - _Step, _Pred);

  0007a	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
  0007d	53		 push	 ebx
  0007e	56		 push	 esi
  0007f	8b 75 fc	 mov	 esi, DWORD PTR __Pfirst$1$[ebp]
  00082	03 c7		 add	 eax, edi
  00084	56		 push	 esi
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAU?$pair@MJ@std@@U?$less@X@2@@std@@YAXPAU?$pair@MJ@0@00U?$less@X@0@@Z ; std::_Med3_unchecked<std::pair<float,long> *,std::less<void> >

; 7956 :     } else {

  0008b	8b 7d 0c	 mov	 edi, DWORD PTR __First$[ebp]
  0008e	83 c4 40	 add	 esp, 64			; 00000040H
  00091	eb 0e		 jmp	 SHORT $LN157@Partition_
$LN156@Partition_:

; 7957 :         _Med3_unchecked(_First, _Mid, _Last, _Pred);

  00093	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  00096	51		 push	 ecx
  00097	56		 push	 esi
  00098	57		 push	 edi
  00099	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAU?$pair@MJ@std@@U?$less@X@2@@std@@YAXPAU?$pair@MJ@0@00U?$less@X@0@@Z ; std::_Med3_unchecked<std::pair<float,long> *,std::less<void> >
  0009e	83 c4 10	 add	 esp, 16			; 00000010H
$LN157@Partition_:

; 7966 :     _RanIt _Pfirst = _Mid;
; 7967 :     _RanIt _Plast  = _Next_iter(_Pfirst);

  000a1	8d 5e 08	 lea	 ebx, DWORD PTR [esi+8]

; 7968 : 
; 7969 :     while (_First < _Pfirst && !_DEBUG_LT_PRED(_Pred, *_Prev_iter(_Pfirst), *_Pfirst)
; 7970 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  000a4	3b fe		 cmp	 edi, esi
  000a6	73 3d		 jae	 SHORT $LN227@Partition_
  000a8	f3 0f 10 0e	 movss	 xmm1, DWORD PTR [esi]
  000ac	0f 1f 40 00	 npad	 4
$LL2@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 506  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  000b0	f3 0f 10 46 f8	 movss	 xmm0, DWORD PTR [esi-8]
  000b5	0f 2f c8	 comiss	 xmm1, xmm0
  000b8	77 2b		 ja	 SHORT $LN227@Partition_
  000ba	0f 2f c1	 comiss	 xmm0, xmm1
  000bd	77 08		 ja	 SHORT $LN201@Partition_
  000bf	8b 46 fc	 mov	 eax, DWORD PTR [esi-4]
  000c2	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
  000c5	7c 1e		 jl	 SHORT $LN227@Partition_
$LN201@Partition_:
  000c7	0f 2f c1	 comiss	 xmm0, xmm1
  000ca	8b c6		 mov	 eax, esi
  000cc	77 17		 ja	 SHORT $LN227@Partition_
  000ce	0f 2f c8	 comiss	 xmm1, xmm0
  000d1	77 08		 ja	 SHORT $LN222@Partition_
  000d3	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000d6	3b 46 fc	 cmp	 eax, DWORD PTR [esi-4]
  000d9	7c 0a		 jl	 SHORT $LN227@Partition_
$LN222@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7971 :         --_Pfirst;

  000db	83 c6 f8	 add	 esi, -8			; fffffff8H
  000de	0f 28 c8	 movaps	 xmm1, xmm0
  000e1	3b fe		 cmp	 edi, esi
  000e3	72 cb		 jb	 SHORT $LL2@Partition_
$LN227@Partition_:

; 7972 :     }
; 7973 : 
; 7974 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  000e5	8b 4d 10	 mov	 ecx, DWORD PTR __Last$[ebp]
  000e8	3b d9		 cmp	 ebx, ecx
  000ea	73 33		 jae	 SHORT $LN228@Partition_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 506  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  000ec	f3 0f 10 0e	 movss	 xmm1, DWORD PTR [esi]
$LL4@Partition_:
  000f0	f3 0f 10 03	 movss	 xmm0, DWORD PTR [ebx]
  000f4	0f 2f c8	 comiss	 xmm1, xmm0
  000f7	77 26		 ja	 SHORT $LN228@Partition_
  000f9	0f 2f c1	 comiss	 xmm0, xmm1
  000fc	77 21		 ja	 SHORT $LN228@Partition_
  000fe	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00101	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
  00104	7c 19		 jl	 SHORT $LN228@Partition_
  00106	0f 2f c1	 comiss	 xmm0, xmm1
  00109	77 14		 ja	 SHORT $LN228@Partition_
  0010b	0f 2f c8	 comiss	 xmm1, xmm0
  0010e	77 08		 ja	 SHORT $LN220@Partition_
  00110	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00113	3b 43 04	 cmp	 eax, DWORD PTR [ebx+4]
  00116	7c 07		 jl	 SHORT $LN228@Partition_
$LN220@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7975 :         ++_Plast;

  00118	83 c3 08	 add	 ebx, 8
  0011b	3b d9		 cmp	 ebx, ecx
  0011d	72 d1		 jb	 SHORT $LL4@Partition_
$LN228@Partition_:
  0011f	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]

; 7976 :     }
; 7977 : 
; 7978 :     _RanIt _Gfirst = _Plast;

  00122	8b d3		 mov	 edx, ebx

; 7979 :     _RanIt _Glast  = _Pfirst;

  00124	8b ce		 mov	 ecx, esi
  00126	89 55 fc	 mov	 DWORD PTR __Gfirst$1$[ebp], edx
  00129	89 4d 14	 mov	 DWORD PTR __Glast$1$[ebp], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 439  :         if (this != _STD addressof(_Right)) {

  0012c	eb 05		 jmp	 SHORT $LL6@Partition_
  0012e	66 90		 npad	 2
$LL233@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7982 :         for (; _Gfirst < _Last; ++_Gfirst) {

  00130	8b 7d 0c	 mov	 edi, DWORD PTR __First$[ebp]
$LL6@Partition_:
  00133	3b d0		 cmp	 edx, eax
  00135	73 67		 jae	 SHORT $LN165@Partition_
  00137	8b 4d 10	 mov	 ecx, DWORD PTR __Last$[ebp]
  0013a	66 0f 1f 44 00
	00		 npad	 6
$LL269@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 506  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00140	f3 0f 10 06	 movss	 xmm0, DWORD PTR [esi]
  00144	f3 0f 10 0a	 movss	 xmm1, DWORD PTR [edx]
  00148	0f 2f c8	 comiss	 xmm1, xmm0
  0014b	77 41		 ja	 SHORT $LN9@Partition_
  0014d	0f 2f c1	 comiss	 xmm0, xmm1
  00150	77 43		 ja	 SHORT $LN229@Partition_
  00152	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00155	3b 42 04	 cmp	 eax, DWORD PTR [edx+4]
  00158	7c 34		 jl	 SHORT $LN9@Partition_
  0015a	0f 2f c1	 comiss	 xmm0, xmm1
  0015d	77 36		 ja	 SHORT $LN229@Partition_
  0015f	0f 2f c8	 comiss	 xmm1, xmm0
  00162	77 08		 ja	 SHORT $LN209@Partition_
  00164	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00167	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
  0016a	7c 29		 jl	 SHORT $LN229@Partition_
$LN209@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7987 :             } else if (_Plast != _Gfirst) {

  0016c	3b da		 cmp	 ebx, edx
  0016e	74 1b		 je	 SHORT $LN19@Partition_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

  00170	f3 0f 10 03	 movss	 xmm0, DWORD PTR [ebx]

; 100  :     _Left    = _STD move(_Right);

  00174	f3 0f 11 0b	 movss	 DWORD PTR [ebx], xmm1
  00178	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 101  :     _Right   = _STD move(_Tmp);

  0017b	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0

; 99   :     _Ty _Tmp = _STD move(_Left);

  0017f	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]

; 100  :     _Left    = _STD move(_Right);

  00182	89 43 04	 mov	 DWORD PTR [ebx+4], eax

; 101  :     _Right   = _STD move(_Tmp);

  00185	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7990 :             } else {

  00188	8b 4d 10	 mov	 ecx, DWORD PTR __Last$[ebp]
$LN19@Partition_:

; 7982 :         for (; _Gfirst < _Last; ++_Gfirst) {

  0018b	83 c3 08	 add	 ebx, 8
$LN9@Partition_:
  0018e	83 c2 08	 add	 edx, 8
  00191	3b d1		 cmp	 edx, ecx
  00193	72 ab		 jb	 SHORT $LL269@Partition_
$LN229@Partition_:
  00195	8b 4d 14	 mov	 ecx, DWORD PTR __Glast$1$[ebp]
  00198	8b 7d 0c	 mov	 edi, DWORD PTR __First$[ebp]
  0019b	89 55 fc	 mov	 DWORD PTR __Gfirst$1$[ebp], edx
$LN165@Partition_:

; 7995 :         for (; _First < _Glast; --_Glast) {

  0019e	3b cf		 cmp	 ecx, edi
  001a0	76 7e		 jbe	 SHORT $LN273@Partition_
  001a2	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
  001a5	8d 79 fc	 lea	 edi, DWORD PTR [ecx-4]
  001a8	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL270@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 506  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  001b0	f3 0f 10 4f fc	 movss	 xmm1, DWORD PTR [edi-4]
  001b5	f3 0f 10 06	 movss	 xmm0, DWORD PTR [esi]
  001b9	0f 2f c1	 comiss	 xmm0, xmm1
  001bc	77 4d		 ja	 SHORT $LN12@Partition_
  001be	0f 2f c8	 comiss	 xmm1, xmm0
  001c1	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  001c4	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  001c7	77 4f		 ja	 SHORT $LN230@Partition_
  001c9	8b 55 f8	 mov	 edx, DWORD PTR $T1[ebp]
  001cc	8b 07		 mov	 eax, DWORD PTR [edi]
  001ce	3b 02		 cmp	 eax, DWORD PTR [edx]
  001d0	7c 36		 jl	 SHORT $LN232@Partition_
  001d2	0f 2f c8	 comiss	 xmm1, xmm0
  001d5	8b c2		 mov	 eax, edx
  001d7	77 3f		 ja	 SHORT $LN230@Partition_
  001d9	0f 2f c1	 comiss	 xmm0, xmm1
  001dc	77 06		 ja	 SHORT $LN216@Partition_
  001de	8b 00		 mov	 eax, DWORD PTR [eax]
  001e0	3b 07		 cmp	 eax, DWORD PTR [edi]
  001e2	7c 34		 jl	 SHORT $LN230@Partition_
$LN216@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8001 :             } else if (--_Pfirst != _Glast_prev) {

  001e4	83 ee 08	 sub	 esi, 8
  001e7	8d 47 fc	 lea	 eax, DWORD PTR [edi-4]
  001ea	3b f0		 cmp	 esi, eax
  001ec	74 1a		 je	 SHORT $LN232@Partition_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

  001ee	f3 0f 10 06	 movss	 xmm0, DWORD PTR [esi]

; 100  :     _Left    = _STD move(_Right);

  001f2	f3 0f 11 0e	 movss	 DWORD PTR [esi], xmm1
  001f6	8b 07		 mov	 eax, DWORD PTR [edi]

; 101  :     _Right   = _STD move(_Tmp);

  001f8	f3 0f 11 47 fc	 movss	 DWORD PTR [edi-4], xmm0

; 99   :     _Ty _Tmp = _STD move(_Left);

  001fd	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]

; 100  :     _Left    = _STD move(_Right);

  00200	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 101  :     _Right   = _STD move(_Tmp);

  00203	89 0f		 mov	 DWORD PTR [edi], ecx
  00205	8b 4d 14	 mov	 ecx, DWORD PTR __Glast$1$[ebp]
$LN232@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7995 :         for (; _First < _Glast; --_Glast) {

  00208	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
$LN12@Partition_:
  0020b	83 e9 08	 sub	 ecx, 8
  0020e	83 ef 08	 sub	 edi, 8
  00211	89 4d 14	 mov	 DWORD PTR __Glast$1$[ebp], ecx
  00214	3b c1		 cmp	 eax, ecx
  00216	72 98		 jb	 SHORT $LL270@Partition_
$LN230@Partition_:
  00218	8b 7d 0c	 mov	 edi, DWORD PTR __First$[ebp]

; 8002 :                 swap(*_Pfirst, *_Glast_prev); // intentional ADL
; 8003 :             }
; 8004 :         }
; 8005 : 
; 8006 :         if (_Glast == _First && _Gfirst == _Last) {

  0021b	3b cf		 cmp	 ecx, edi
  0021d	8b 55 fc	 mov	 edx, DWORD PTR __Gfirst$1$[ebp]
$LN273@Partition_:
  00220	75 5c		 jne	 SHORT $LN27@Partition_
  00222	3b 55 10	 cmp	 edx, DWORD PTR __Last$[ebp]
  00225	0f 84 f0 00 00
	00		 je	 $LN167@Partition_

; 8008 :         }
; 8009 : 
; 8010 :         if (_Glast == _First) { // no room at bottom, rotate pivot upward
; 8011 :             if (_Plast != _Gfirst) {

  0022b	3b da		 cmp	 ebx, edx
  0022d	74 1c		 je	 SHORT $LN67@Partition_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 439  :         if (this != _STD addressof(_Right)) {

  0022f	3b f3		 cmp	 esi, ebx
  00231	74 18		 je	 SHORT $LN67@Partition_

; 100  :     _Left    = _STD move(_Right);

  00233	8b 03		 mov	 eax, DWORD PTR [ebx]
  00235	f3 0f 10 06	 movss	 xmm0, DWORD PTR [esi]
  00239	89 06		 mov	 DWORD PTR [esi], eax
  0023b	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]

; 101  :     _Right   = _STD move(_Tmp);

  0023e	f3 0f 11 03	 movss	 DWORD PTR [ebx], xmm0

; 99   :     _Ty _Tmp = _STD move(_Left);

  00242	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]

; 100  :     _Left    = _STD move(_Right);

  00245	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 101  :     _Right   = _STD move(_Tmp);

  00248	89 4b 04	 mov	 DWORD PTR [ebx+4], ecx
$LN67@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8015 :             ++_Plast;

  0024b	83 c3 08	 add	 ebx, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 439  :         if (this != _STD addressof(_Right)) {

  0024e	3b f2		 cmp	 esi, edx
  00250	74 18		 je	 SHORT $LN56@Partition_

; 100  :     _Left    = _STD move(_Right);

  00252	8b 02		 mov	 eax, DWORD PTR [edx]
  00254	f3 0f 10 06	 movss	 xmm0, DWORD PTR [esi]
  00258	89 06		 mov	 DWORD PTR [esi], eax
  0025a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 101  :     _Right   = _STD move(_Tmp);

  0025d	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0

; 99   :     _Ty _Tmp = _STD move(_Left);

  00261	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]

; 100  :     _Left    = _STD move(_Right);

  00264	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 101  :     _Right   = _STD move(_Tmp);

  00267	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
$LN56@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8018 :             ++_Gfirst;

  0026a	8b 4d 14	 mov	 ecx, DWORD PTR __Glast$1$[ebp]
  0026d	83 c6 08	 add	 esi, 8
  00270	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
  00273	83 c2 08	 add	 edx, 8
  00276	89 55 fc	 mov	 DWORD PTR __Gfirst$1$[ebp], edx
  00279	e9 b5 fe ff ff	 jmp	 $LL6@Partition_
$LN27@Partition_:

; 8019 :         } else if (_Gfirst == _Last) { // no room at top, rotate pivot downward

  0027e	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
  00281	83 c1 f8	 add	 ecx, -8			; fffffff8H
  00284	89 4d 14	 mov	 DWORD PTR __Glast$1$[ebp], ecx
  00287	3b d0		 cmp	 edx, eax
  00289	75 5b		 jne	 SHORT $LN30@Partition_

; 8020 :             if (--_Glast != --_Pfirst) {

  0028b	83 ee 08	 sub	 esi, 8
  0028e	8d 7e 04	 lea	 edi, DWORD PTR [esi+4]
  00291	89 7d f8	 mov	 DWORD PTR __Left$1$[ebp], edi
  00294	3b ce		 cmp	 ecx, esi
  00296	74 22		 je	 SHORT $LN215@Partition_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

  00298	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]

; 100  :     _Left    = _STD move(_Right);

  0029c	8b 06		 mov	 eax, DWORD PTR [esi]
  0029e	89 01		 mov	 DWORD PTR [ecx], eax
  002a0	8b 07		 mov	 eax, DWORD PTR [edi]
  002a2	8b 7d 14	 mov	 edi, DWORD PTR __Glast$1$[ebp]

; 101  :     _Right   = _STD move(_Tmp);

  002a5	f3 0f 11 06	 movss	 DWORD PTR [esi], xmm0

; 99   :     _Ty _Tmp = _STD move(_Left);

  002a9	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 100  :     _Left    = _STD move(_Right);

  002ac	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 101  :     _Right   = _STD move(_Tmp);

  002af	8b 7d f8	 mov	 edi, DWORD PTR __Left$1$[ebp]
  002b2	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
  002b5	89 0f		 mov	 DWORD PTR [edi], ecx
  002b7	8b 4d 14	 mov	 ecx, DWORD PTR __Glast$1$[ebp]
$LN215@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8024 :             swap(*_Pfirst, *--_Plast); // intentional ADL

  002ba	83 eb 08	 sub	 ebx, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 439  :         if (this != _STD addressof(_Right)) {

  002bd	3b f3		 cmp	 esi, ebx
  002bf	0f 84 6b fe ff
	ff		 je	 $LL233@Partition_

; 100  :     _Left    = _STD move(_Right);

  002c5	8b 03		 mov	 eax, DWORD PTR [ebx]
  002c7	f3 0f 10 06	 movss	 xmm0, DWORD PTR [esi]
  002cb	89 06		 mov	 DWORD PTR [esi], eax
  002cd	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]

; 101  :     _Right   = _STD move(_Tmp);

  002d0	f3 0f 11 03	 movss	 DWORD PTR [ebx], xmm0

; 99   :     _Ty _Tmp = _STD move(_Left);

  002d4	8b 0f		 mov	 ecx, DWORD PTR [edi]

; 100  :     _Left    = _STD move(_Right);

  002d6	89 07		 mov	 DWORD PTR [edi], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8025 :         } else {

  002d8	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 101  :     _Right   = _STD move(_Tmp);

  002db	89 4b 04	 mov	 DWORD PTR [ebx+4], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8025 :         } else {

  002de	8b 4d 14	 mov	 ecx, DWORD PTR __Glast$1$[ebp]
  002e1	e9 4a fe ff ff	 jmp	 $LL233@Partition_
$LN30@Partition_:

; 8026 :             swap(*_Gfirst, *--_Glast); // intentional ADL

  002e6	89 4d 14	 mov	 DWORD PTR __Glast$1$[ebp], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 439  :         if (this != _STD addressof(_Right)) {

  002e9	3b d1		 cmp	 edx, ecx
  002eb	74 23		 je	 SHORT $LN85@Partition_

; 100  :     _Left    = _STD move(_Right);

  002ed	8b 01		 mov	 eax, DWORD PTR [ecx]
  002ef	8b 7d 14	 mov	 edi, DWORD PTR __Glast$1$[ebp]

; 99   :     _Ty _Tmp = _STD move(_Left);

  002f2	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]

; 100  :     _Left    = _STD move(_Right);

  002f6	89 02		 mov	 DWORD PTR [edx], eax

; 101  :     _Right   = _STD move(_Tmp);

  002f8	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 100  :     _Left    = _STD move(_Right);

  002fc	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  002ff	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00302	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00305	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]

; 101  :     _Right   = _STD move(_Tmp);

  00308	89 4f 04	 mov	 DWORD PTR [edi+4], ecx
  0030b	8b cf		 mov	 ecx, edi
  0030d	8b 7d 0c	 mov	 edi, DWORD PTR __First$[ebp]
$LN85@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8027 :             ++_Gfirst;

  00310	83 c2 08	 add	 edx, 8
  00313	89 55 fc	 mov	 DWORD PTR __Gfirst$1$[ebp], edx

; 8028 :         }
; 8029 :     }

  00316	e9 18 fe ff ff	 jmp	 $LL6@Partition_
$LN167@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

  0031b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8007 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);

  0031e	5f		 pop	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

  0031f	89 30		 mov	 DWORD PTR [eax], esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8007 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);

  00321	5e		 pop	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

  00322	89 58 04	 mov	 DWORD PTR [eax+4], ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8007 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);

  00325	5b		 pop	 ebx

; 8030 : }

  00326	8b e5		 mov	 esp, ebp
  00328	5d		 pop	 ebp
  00329	c3		 ret	 0
??$_Partition_by_median_guess_unchecked@PAU?$pair@MJ@std@@U?$less@X@2@@std@@YA?AU?$pair@PAU?$pair@MJ@std@@PAU12@@0@PAU?$pair@MJ@0@0U?$less@X@0@@Z ENDP ; std::_Partition_by_median_guess_unchecked<std::pair<float,long> *,std::less<void> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Buffered_inplace_merge_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z
_TEXT	SEGMENT
tv1795 = -20						; size = 4
$T1 = -16						; size = 4
$T2 = -12						; size = 4
__Last$2$ = -12						; size = 4
tv1798 = -8						; size = 4
__Val$1$ = -8						; size = 4
_blhsOrderFound$1$ = -1					; size = 1
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
_blhsOrderFound$1$ = 19					; size = 1
__Count1$ = 20						; size = 4
__Count2$ = 24						; size = 4
__Temp_ptr$ = 28					; size = 4
__Capacity$ = 32					; size = 4
__Pred$ = 36						; size = 1
??$_Buffered_inplace_merge_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z PROC ; std::_Buffered_inplace_merge_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>, COMDAT

; 7467 :     _Iter_diff_t<_BidIt> _Count2, _Iter_value_t<_BidIt>* const _Temp_ptr, const ptrdiff_t _Capacity, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 7468 :     // merge sorted [_First, _Mid) with sorted [_Mid, _Last)
; 7469 :     // usual invariants *do not* apply; only sortedness applies
; 7470 :     // establish the usual invariants (explained in inplace_merge)
; 7471 :     if (_Mid == _Last) {

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Mid$[ebp]
  00006	83 ec 14	 sub	 esp, 20			; 00000014H
  00009	3b 45 10	 cmp	 eax, DWORD PTR __Last$[ebp]
  0000c	0f 84 b3 02 00
	00		 je	 $LN1@Buffered_i

; 7472 :         return;
; 7473 :     }
; 7474 : 
; 7475 :     for (;;) {
; 7476 :         if (_First == _Mid) {

  00012	53		 push	 ebx
  00013	8b 5d 08	 mov	 ebx, DWORD PTR __First$[ebp]
  00016	3b d8		 cmp	 ebx, eax
  00018	0f 84 a6 02 00
	00		 je	 $LN335@Buffered_i
  0001e	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00024	83 c0 04	 add	 eax, 4
  00027	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  0002d	56		 push	 esi
  0002e	89 45 f8	 mov	 DWORD PTR __Val$1$[ebp], eax
  00031	57		 push	 edi
$LL2@Buffered_i:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00032	0f b6 00	 movzx	 eax, BYTE PTR [eax]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 358  : 				DWORD lhsTerrainNumOrder = 0, rhsTerrainNumOrder = 0;

  00035	33 f6		 xor	 esi, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00037	50		 push	 eax
  00038	51		 push	 ecx
  00039	52		 push	 edx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 359  : 				bool blhsOrderFound = false;

  0003a	c6 45 ff 00	 mov	 BYTE PTR _blhsOrderFound$1$[ebp], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  0003e	e8 00 00 00 00	 call	 ??$__std_find_trivial@EE@@YAPAEPAE0E@Z ; __std_find_trivial<unsigned char,unsigned char>

; 5816 :                 return _Result;

  00043	89 45 f4	 mov	 DWORD PTR $T2[ebp], eax

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00046	0f b6 43 04	 movzx	 eax, BYTE PTR [ebx+4]
  0004a	50		 push	 eax
  0004b	ff 35 04 00 00
	00		 push	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00051	ff 35 00 00 00
	00		 push	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00057	e8 00 00 00 00	 call	 ??$__std_find_trivial@EE@@YAPAEPAE0E@Z ; __std_find_trivial<unsigned char,unsigned char>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0005c	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5816 :                 return _Result;

  00062	8b f8		 mov	 edi, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00064	8b 45 f4	 mov	 eax, DWORD PTR $T2[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00067	83 c4 18	 add	 esp, 24			; 00000018H
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 365  : 				if (lhsIterator != m_TerrainNumVector.end())

  0006a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00070	3b c1		 cmp	 eax, ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 365  : 				if (lhsIterator != m_TerrainNumVector.end())

  00072	74 08		 je	 SHORT $LN15@Buffered_i
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00074	8b f0		 mov	 esi, eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 367  : 					blhsOrderFound = true;

  00076	c6 45 ff 01	 mov	 BYTE PTR _blhsOrderFound$1$[ebp], 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0007a	2b f2		 sub	 esi, edx
$LN15@Buffered_i:
  0007c	3b f9		 cmp	 edi, ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 370  : 				if (rhsIterator != m_TerrainNumVector.end())

  0007e	74 04		 je	 SHORT $LN312@Buffered_i
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00080	2b fa		 sub	 edi, edx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 375  : 				if (!brhsOrderFound)

  00082	eb 3c		 jmp	 SHORT $LN17@Buffered_i
$LN312@Buffered_i:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  00084	3b 0d 08 00 00
	00		 cmp	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  0008a	74 14		 je	 SHORT $LN103@Buffered_i

; 797  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  0008c	8a 43 04	 mov	 al, BYTE PTR [ebx+4]
  0008f	88 01		 mov	 BYTE PTR [ecx], al

; 798  :         } else {
; 799  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 800  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 801  :             _ASAN_VECTOR_RELEASE_GUARD;
; 802  :         }
; 803  : 
; 804  :         _Orphan_range(_Mylast, _Mylast);
; 805  :         _Ty& _Result = *_Mylast;
; 806  :         ++_Mylast;

  00091	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00097	41		 inc	 ecx
  00098	89 0d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, ecx

; 782  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0009e	eb 15		 jmp	 SHORT $LN102@Buffered_i
$LN103@Buffered_i:

; 783  :         }
; 784  : 
; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  000a0	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000a3	50		 push	 eax
  000a4	51		 push	 ecx
  000a5	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  000aa	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@AAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  000af	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
$LN102@Buffered_i:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 378  : 					rhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  000b5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  000bb	8b f9		 mov	 edi, ecx
  000bd	2b fa		 sub	 edi, edx
  000bf	4f		 dec	 edi
$LN17@Buffered_i:

; 379  : 				}
; 380  : 				if (!blhsOrderFound)

  000c0	80 7d ff 00	 cmp	 BYTE PTR _blhsOrderFound$1$[ebp], 0
  000c4	75 66		 jne	 SHORT $LN20@Buffered_i
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  000c6	8b 45 0c	 mov	 eax, DWORD PTR __Mid$[ebp]
  000c9	0f b6 40 04	 movzx	 eax, BYTE PTR [eax+4]
  000cd	50		 push	 eax
  000ce	51		 push	 ecx
  000cf	52		 push	 edx
  000d0	e8 00 00 00 00	 call	 ??$__std_find_trivial@EE@@YAPAEPAE0E@Z ; __std_find_trivial<unsigned char,unsigned char>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000d5	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5816 :                 return _Result;

  000db	8b f0		 mov	 esi, eax
  000dd	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000e0	3b f1		 cmp	 esi, ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 383  : 					if (lhsIterator != m_TerrainNumVector.end())

  000e2	74 0a		 je	 SHORT $LN313@Buffered_i
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000e4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  000ea	2b f2		 sub	 esi, edx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 388  : 					if (!blhsOrderFound)

  000ec	eb 3e		 jmp	 SHORT $LN20@Buffered_i
$LN313@Buffered_i:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  000ee	3b 0d 08 00 00
	00		 cmp	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  000f4	74 17		 je	 SHORT $LN151@Buffered_i

; 797  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  000f6	8b 45 0c	 mov	 eax, DWORD PTR __Mid$[ebp]
  000f9	8a 40 04	 mov	 al, BYTE PTR [eax+4]
  000fc	88 01		 mov	 BYTE PTR [ecx], al

; 798  :         } else {
; 799  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 800  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 801  :             _ASAN_VECTOR_RELEASE_GUARD;
; 802  :         }
; 803  : 
; 804  :         _Orphan_range(_Mylast, _Mylast);
; 805  :         _Ty& _Result = *_Mylast;
; 806  :         ++_Mylast;

  000fe	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00104	41		 inc	 ecx
  00105	89 0d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, ecx

; 782  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0010b	eb 14		 jmp	 SHORT $LN150@Buffered_i
$LN151@Buffered_i:

; 783  :         }
; 784  : 
; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0010d	ff 75 f8	 push	 DWORD PTR __Val$1$[ebp]
  00110	51		 push	 ecx
  00111	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  00116	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@AAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  0011b	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
$LN150@Buffered_i:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 391  : 						lhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  00121	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00127	8b f1		 mov	 esi, ecx
  00129	2b f2		 sub	 esi, edx
  0012b	4e		 dec	 esi
$LN20@Buffered_i:

; 392  : 					}
; 393  : 				}
; 394  : 
; 395  : 				return lhsTerrainNumOrder < rhsTerrainNumOrder;

  0012c	3b f7		 cmp	 esi, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7480 :         if (_Pred(*_Mid, *_First)) {

  0012e	72 1c		 jb	 SHORT $LN316@Buffered_i

; 7481 :             break;
; 7482 :         }
; 7483 : 
; 7484 :         ++_First;
; 7485 :         --_Count1;

  00130	ff 4d 14	 dec	 DWORD PTR __Count1$[ebp]
  00133	83 c3 10	 add	 ebx, 16			; 00000010H
  00136	8b 45 f8	 mov	 eax, DWORD PTR __Val$1$[ebp]
  00139	89 5d 08	 mov	 DWORD PTR __First$[ebp], ebx
  0013c	3b 5d 0c	 cmp	 ebx, DWORD PTR __Mid$[ebp]
  0013f	0f 85 ed fe ff
	ff		 jne	 $LL2@Buffered_i
  00145	5f		 pop	 edi
  00146	5e		 pop	 esi
  00147	5b		 pop	 ebx

; 7507 : }

  00148	8b e5		 mov	 esp, ebp
  0014a	5d		 pop	 ebp
  0014b	c3		 ret	 0
$LN316@Buffered_i:
  0014c	8b 5d 10	 mov	 ebx, DWORD PTR __Last$[ebp]
  0014f	83 c3 04	 add	 ebx, 4
$LL7@Buffered_i:

; 7486 :     }
; 7487 : 
; 7488 :     const auto _Highest = _Prev_iter(_Mid);
; 7489 :     do {
; 7490 :         --_Last;

  00152	8b 45 18	 mov	 eax, DWORD PTR __Count2$[ebp]
  00155	8d 73 fc	 lea	 esi, DWORD PTR [ebx-4]

; 7491 :         --_Count2;
; 7492 :         if (_Mid == _Last) {

  00158	8b 7d 0c	 mov	 edi, DWORD PTR __Mid$[ebp]
  0015b	83 eb 10	 sub	 ebx, 16			; 00000010H
  0015e	89 45 ec	 mov	 DWORD PTR tv1795[ebp], eax
  00161	48		 dec	 eax
  00162	89 45 18	 mov	 DWORD PTR __Count2$[ebp], eax
  00165	89 75 f4	 mov	 DWORD PTR __Last$2$[ebp], esi
  00168	8d 43 fc	 lea	 eax, DWORD PTR [ebx-4]
  0016b	3b f8		 cmp	 edi, eax
  0016d	0f 84 42 01 00
	00		 je	 $LN305@Buffered_i
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00173	0f b6 03	 movzx	 eax, BYTE PTR [ebx]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 358  : 				DWORD lhsTerrainNumOrder = 0, rhsTerrainNumOrder = 0;

  00176	33 f6		 xor	 esi, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00178	50		 push	 eax
  00179	51		 push	 ecx
  0017a	52		 push	 edx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 359  : 				bool blhsOrderFound = false;

  0017b	c6 45 13 00	 mov	 BYTE PTR _blhsOrderFound$1$[ebp], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  0017f	e8 00 00 00 00	 call	 ??$__std_find_trivial@EE@@YAPAEPAE0E@Z ; __std_find_trivial<unsigned char,unsigned char>
  00184	0f b6 4f f4	 movzx	 ecx, BYTE PTR [edi-12]

; 5816 :                 return _Result;

  00188	89 45 f0	 mov	 DWORD PTR $T1[ebp], eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 363  : 				TTerrainNumVector::iterator rhsIterator = std::find(m_TerrainNumVector.begin(), m_TerrainNumVector.end(), rhs.byTerrainNum);

  0018b	8d 47 f4	 lea	 eax, DWORD PTR [edi-12]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  0018e	51		 push	 ecx
  0018f	ff 35 04 00 00
	00		 push	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 363  : 				TTerrainNumVector::iterator rhsIterator = std::find(m_TerrainNumVector.begin(), m_TerrainNumVector.end(), rhs.byTerrainNum);

  00195	89 45 f8	 mov	 DWORD PTR tv1798[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00198	ff 35 00 00 00
	00		 push	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  0019e	e8 00 00 00 00	 call	 ??$__std_find_trivial@EE@@YAPAEPAE0E@Z ; __std_find_trivial<unsigned char,unsigned char>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001a3	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5816 :                 return _Result;

  001a9	8b f8		 mov	 edi, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001ab	8b 45 f0	 mov	 eax, DWORD PTR $T1[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  001ae	83 c4 18	 add	 esp, 24			; 00000018H
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 365  : 				if (lhsIterator != m_TerrainNumVector.end())

  001b1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001b7	3b c1		 cmp	 eax, ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 365  : 				if (lhsIterator != m_TerrainNumVector.end())

  001b9	74 08		 je	 SHORT $LN158@Buffered_i
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001bb	8b f0		 mov	 esi, eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 367  : 					blhsOrderFound = true;

  001bd	c6 45 13 01	 mov	 BYTE PTR _blhsOrderFound$1$[ebp], 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001c1	2b f2		 sub	 esi, edx
$LN158@Buffered_i:
  001c3	3b f9		 cmp	 edi, ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 370  : 				if (rhsIterator != m_TerrainNumVector.end())

  001c5	74 04		 je	 SHORT $LN314@Buffered_i
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001c7	2b fa		 sub	 edi, edx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 375  : 				if (!brhsOrderFound)

  001c9	eb 3b		 jmp	 SHORT $LN160@Buffered_i
$LN314@Buffered_i:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  001cb	8b 45 f8	 mov	 eax, DWORD PTR tv1798[ebp]
  001ce	3b 0d 08 00 00
	00		 cmp	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  001d4	74 13		 je	 SHORT $LN246@Buffered_i

; 797  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  001d6	8a 00		 mov	 al, BYTE PTR [eax]
  001d8	88 01		 mov	 BYTE PTR [ecx], al

; 798  :         } else {
; 799  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 800  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 801  :             _ASAN_VECTOR_RELEASE_GUARD;
; 802  :         }
; 803  : 
; 804  :         _Orphan_range(_Mylast, _Mylast);
; 805  :         _Ty& _Result = *_Mylast;
; 806  :         ++_Mylast;

  001da	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  001e0	41		 inc	 ecx
  001e1	89 0d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, ecx

; 782  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  001e7	eb 12		 jmp	 SHORT $LN245@Buffered_i
$LN246@Buffered_i:

; 783  :         }
; 784  : 
; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  001e9	50		 push	 eax
  001ea	51		 push	 ecx
  001eb	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  001f0	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@AAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  001f5	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
$LN245@Buffered_i:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 378  : 					rhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  001fb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00201	8b f9		 mov	 edi, ecx
  00203	2b fa		 sub	 edi, edx
  00205	4f		 dec	 edi
$LN160@Buffered_i:

; 379  : 				}
; 380  : 				if (!blhsOrderFound)

  00206	80 7d 13 00	 cmp	 BYTE PTR _blhsOrderFound$1$[ebp], 0
  0020a	75 5c		 jne	 SHORT $LN163@Buffered_i
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  0020c	0f b6 03	 movzx	 eax, BYTE PTR [ebx]
  0020f	50		 push	 eax
  00210	51		 push	 ecx
  00211	52		 push	 edx
  00212	e8 00 00 00 00	 call	 ??$__std_find_trivial@EE@@YAPAEPAE0E@Z ; __std_find_trivial<unsigned char,unsigned char>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00217	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5816 :                 return _Result;

  0021d	8b f0		 mov	 esi, eax
  0021f	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00222	3b f1		 cmp	 esi, ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 383  : 					if (lhsIterator != m_TerrainNumVector.end())

  00224	74 0a		 je	 SHORT $LN315@Buffered_i
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00226	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  0022c	2b f2		 sub	 esi, edx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 388  : 					if (!blhsOrderFound)

  0022e	eb 38		 jmp	 SHORT $LN163@Buffered_i
$LN315@Buffered_i:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  00230	3b 0d 08 00 00
	00		 cmp	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  00236	74 13		 je	 SHORT $LN294@Buffered_i

; 797  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  00238	8a 03		 mov	 al, BYTE PTR [ebx]
  0023a	88 01		 mov	 BYTE PTR [ecx], al

; 798  :         } else {
; 799  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 800  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 801  :             _ASAN_VECTOR_RELEASE_GUARD;
; 802  :         }
; 803  : 
; 804  :         _Orphan_range(_Mylast, _Mylast);
; 805  :         _Ty& _Result = *_Mylast;
; 806  :         ++_Mylast;

  0023c	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00242	41		 inc	 ecx
  00243	89 0d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, ecx

; 782  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00249	eb 12		 jmp	 SHORT $LN293@Buffered_i
$LN294@Buffered_i:

; 783  :         }
; 784  : 
; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0024b	53		 push	 ebx
  0024c	51		 push	 ecx
  0024d	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  00252	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@AAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  00257	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
$LN293@Buffered_i:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 391  : 						lhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  0025d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00263	8b f1		 mov	 esi, ecx
  00265	2b f2		 sub	 esi, edx
  00267	4e		 dec	 esi
$LN163@Buffered_i:

; 392  : 					}
; 393  : 				}
; 394  : 
; 395  : 				return lhsTerrainNumOrder < rhsTerrainNumOrder;

  00268	3b f7		 cmp	 esi, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7496 :     } while (!_Pred(*_Last, *_Highest));

  0026a	0f 83 e2 fe ff
	ff		 jae	 $LL7@Buffered_i

; 7497 : 
; 7498 :     ++_Last;
; 7499 :     ++_Count2;
; 7500 : 
; 7501 :     if (_Count1 == 1) {

  00270	8b 45 14	 mov	 eax, DWORD PTR __Count1$[ebp]
  00273	83 f8 01	 cmp	 eax, 1
  00276	75 18		 jne	 SHORT $LN12@Buffered_i

; 7502 :         _STD _Rotate_one_left(_First, _Mid, _Last);

  00278	ff 75 f4	 push	 DWORD PTR __Last$2$[ebp]
  0027b	ff 75 0c	 push	 DWORD PTR __Mid$[ebp]
  0027e	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00281	e8 00 00 00 00	 call	 ??$_Rotate_one_left@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00@Z ; std::_Rotate_one_left<CMapOutdoor::TPatchDrawStruct *>
  00286	83 c4 0c	 add	 esp, 12			; 0000000cH
  00289	5f		 pop	 edi
  0028a	5e		 pop	 esi
  0028b	5b		 pop	 ebx

; 7507 : }

  0028c	8b e5		 mov	 esp, ebp
  0028e	5d		 pop	 ebp
  0028f	c3		 ret	 0
$LN12@Buffered_i:

; 7503 :         return;
; 7504 :     }
; 7505 : 
; 7506 :     _Buffered_inplace_merge_unchecked_impl(_First, _Mid, _Last, _Count1, _Count2, _Temp_ptr, _Capacity, _Pred);

  00290	ff 75 24	 push	 DWORD PTR __Pred$[ebp]
  00293	ff 75 20	 push	 DWORD PTR __Capacity$[ebp]
  00296	ff 75 1c	 push	 DWORD PTR __Temp_ptr$[ebp]
  00299	ff 75 ec	 push	 DWORD PTR tv1795[ebp]
  0029c	50		 push	 eax
  0029d	ff 75 f4	 push	 DWORD PTR __Last$2$[ebp]
  002a0	ff 75 0c	 push	 DWORD PTR __Mid$[ebp]
  002a3	ff 75 08	 push	 DWORD PTR __First$[ebp]
  002a6	e8 00 00 00 00	 call	 ??$_Buffered_inplace_merge_unchecked_impl@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Buffered_inplace_merge_unchecked_impl<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  002ab	83 c4 20	 add	 esp, 32			; 00000020H
  002ae	5f		 pop	 edi
  002af	5e		 pop	 esi
  002b0	5b		 pop	 ebx

; 7507 : }

  002b1	8b e5		 mov	 esp, ebp
  002b3	5d		 pop	 ebp
  002b4	c3		 ret	 0
$LN305@Buffered_i:

; 7493 :             _STD _Rotate_one_right(_First, _Mid, ++_Last);

  002b5	56		 push	 esi
  002b6	57		 push	 edi
  002b7	ff 75 08	 push	 DWORD PTR __First$[ebp]
  002ba	e8 00 00 00 00	 call	 ??$_Rotate_one_right@PAUTPatchDrawStruct@CMapOutdoor@@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00@Z ; std::_Rotate_one_right<CMapOutdoor::TPatchDrawStruct *>
  002bf	83 c4 0c	 add	 esp, 12			; 0000000cH
  002c2	5f		 pop	 edi
  002c3	5e		 pop	 esi
$LN335@Buffered_i:
  002c4	5b		 pop	 ebx
$LN1@Buffered_i:

; 7507 : }

  002c5	8b e5		 mov	 esp, ebp
  002c7	5d		 pop	 ebp
  002c8	c3		 ret	 0
??$_Buffered_inplace_merge_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z ENDP ; std::_Buffered_inplace_merge_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Buffered_merge_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0H0UFSortPatchDrawStructWithTerrainNum@2@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
tv165 = 16						; size = 4
__Count$ = 16						; size = 4
__Temp_ptr$ = 20					; size = 4
__Pred$ = 24						; size = 1
??$_Buffered_merge_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0H0UFSortPatchDrawStructWithTerrainNum@2@@Z PROC ; std::_Buffered_merge_sort_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>, COMDAT

; 8408 :     _Iter_value_t<_BidIt>* const _Temp_ptr, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 8409 :     // sort using temp buffer for merges
; 8410 :     // pre: _Last - _First == _Count
; 8411 :     // pre: _Count <= capacity of buffer at _Temp_ptr; also allows safe narrowing to ptrdiff_t
; 8412 :     _Insertion_sort_isort_max_chunks(_First, _Last, _Count, _Pred);

  00004	8b 5d 08	 mov	 ebx, DWORD PTR __First$[ebp]
  00007	57		 push	 edi
  00008	ff 75 18	 push	 DWORD PTR __Pred$[ebp]
  0000b	8b 7d 10	 mov	 edi, DWORD PTR __Count$[ebp]
  0000e	57		 push	 edi
  0000f	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00012	53		 push	 ebx
  00013	e8 00 00 00 00	 call	 ??$_Insertion_sort_isort_max_chunks@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Insertion_sort_isort_max_chunks<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  00018	83 c4 10	 add	 esp, 16			; 00000010H

; 8413 :     // merge adjacent pairs of chunks to and from temp buffer
; 8414 :     if (_Count <= _Isort_max<_BidIt>) {

  0001b	83 ff 20	 cmp	 edi, 32			; 00000020H
  0001e	7e 64		 jle	 SHORT $LN13@Buffered_m

; 8415 :         return;
; 8416 :     }
; 8417 : 
; 8418 :     // do the first merge, constructing elements in the temporary buffer
; 8419 :     _Uninitialized_chunked_merge_unchecked2(_First, _Last, _Temp_ptr, _Count, _Pred);

  00020	56		 push	 esi
  00021	ff 75 18	 push	 DWORD PTR __Pred$[ebp]
  00024	8b 75 14	 mov	 esi, DWORD PTR __Temp_ptr$[ebp]
  00027	57		 push	 edi
  00028	56		 push	 esi
  00029	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0002c	53		 push	 ebx
  0002d	e8 00 00 00 00	 call	 ??$_Uninitialized_chunked_merge_unchecked2@PAUTPatchDrawStruct@CMapOutdoor@@U12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@0HUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Uninitialized_chunked_merge_unchecked2<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>

; 8420 :     _Uninitialized_backout<_Iter_value_t<_BidIt>*> _Backout{_Temp_ptr, _Temp_ptr + _Count};
; 8421 :     auto _Chunk = _Isort_max<_BidIt>;
; 8422 :     for (;;) {
; 8423 :         // unconditionally merge elements back into the source buffer
; 8424 :         _Chunk <<= 1;
; 8425 :         _Chunked_merge_unchecked(_Temp_ptr, _Temp_ptr + _Count, _First, static_cast<ptrdiff_t>(_Chunk),

  00032	ff 75 18	 push	 DWORD PTR __Pred$[ebp]
  00035	8b c7		 mov	 eax, edi
  00037	57		 push	 edi
  00038	6a 40		 push	 64			; 00000040H
  0003a	c1 e0 04	 shl	 eax, 4
  0003d	03 c6		 add	 eax, esi
  0003f	53		 push	 ebx
  00040	50		 push	 eax
  00041	56		 push	 esi
  00042	89 45 10	 mov	 DWORD PTR tv165[ebp], eax
  00045	e8 00 00 00 00	 call	 ??$_Chunked_merge_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@0HHUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Chunked_merge_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>

; 8426 :             static_cast<ptrdiff_t>(_Count), _Pred);
; 8427 :         _Chunk <<= 1;

  0004a	be 80 00 00 00	 mov	 esi, 128		; 00000080H
  0004f	83 c4 2c	 add	 esp, 44			; 0000002cH

; 8428 :         if (_Count <= _Chunk) { // if the input would be a single chunk, it's already sorted and we're done

  00052	3b fe		 cmp	 edi, esi
  00054	7e 2d		 jle	 SHORT $LN19@Buffered_m
$LL2@Buffered_m:

; 8429 :             return;
; 8430 :         }
; 8431 : 
; 8432 :         // more merges necessary; merge to temporary buffer
; 8433 :         _Chunked_merge_unchecked(_First, _Last, _Temp_ptr, _Chunk, _Count, _Pred);

  00056	ff 75 18	 push	 DWORD PTR __Pred$[ebp]
  00059	57		 push	 edi
  0005a	56		 push	 esi
  0005b	ff 75 14	 push	 DWORD PTR __Temp_ptr$[ebp]
  0005e	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00061	53		 push	 ebx
  00062	e8 00 00 00 00	 call	 ??$_Chunked_merge_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@0HHUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Chunked_merge_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  00067	ff 75 18	 push	 DWORD PTR __Pred$[ebp]
  0006a	03 f6		 add	 esi, esi
  0006c	57		 push	 edi
  0006d	56		 push	 esi
  0006e	53		 push	 ebx
  0006f	ff 75 10	 push	 DWORD PTR tv165[ebp]
  00072	ff 75 14	 push	 DWORD PTR __Temp_ptr$[ebp]
  00075	e8 00 00 00 00	 call	 ??$_Chunked_merge_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@QAU12@0HHUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Chunked_merge_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  0007a	03 f6		 add	 esi, esi
  0007c	83 c4 30	 add	 esp, 48			; 00000030H
  0007f	3b fe		 cmp	 edi, esi
  00081	7f d3		 jg	 SHORT $LL2@Buffered_m
$LN19@Buffered_m:
  00083	5e		 pop	 esi
$LN13@Buffered_m:
  00084	5f		 pop	 edi

; 8434 :     }
; 8435 : }

  00085	5b		 pop	 ebx
  00086	5d		 pop	 ebp
  00087	c3		 ret	 0
??$_Buffered_merge_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0H0UFSortPatchDrawStructWithTerrainNum@2@@Z ENDP ; std::_Buffered_merge_sort_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Get_temporary_buffer@UTPatchDrawStruct@CMapOutdoor@@@std@@YA?AU?$pair@PAUTPatchDrawStruct@CMapOutdoor@@H@0@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Count$ = 12						; size = 4
??$_Get_temporary_buffer@UTPatchDrawStruct@CMapOutdoor@@@std@@YA?AU?$pair@PAUTPatchDrawStruct@CMapOutdoor@@H@0@H@Z PROC ; std::_Get_temporary_buffer<CMapOutdoor::TPatchDrawStruct>, COMDAT

; 1561 : pair<_Ty*, ptrdiff_t> _Get_temporary_buffer(ptrdiff_t _Count) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1562 :     if (static_cast<size_t>(_Count) <= static_cast<size_t>(-1) / sizeof(_Ty)) {

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Count$[ebp]
  00007	81 fe ff ff ff
	0f		 cmp	 esi, 268435455		; 0fffffffH
  0000d	77 21		 ja	 SHORT $LN3@Get_tempor

; 1563 :         for (; 0 < _Count; _Count /= 2) {

  0000f	85 f6		 test	 esi, esi
  00011	7e 1d		 jle	 SHORT $LN3@Get_tempor
$LL4@Get_tempor:

; 1564 :             const auto _Size = static_cast<size_t>(_Count) * sizeof(_Ty);

  00013	8b c6		 mov	 eax, esi
  00015	c1 e0 04	 shl	 eax, 4

; 1565 :             void* _Pbuf;
; 1566 : #ifdef __cpp_aligned_new
; 1567 :             if constexpr (alignof(_Ty) > __STDCPP_DEFAULT_NEW_ALIGNMENT__) {
; 1568 :                 _Pbuf = ::operator new(_Size, align_val_t{alignof(_Ty)}, nothrow);
; 1569 :             } else
; 1570 : #endif // __cpp_aligned_new
; 1571 :             {
; 1572 :                 _Pbuf = ::operator new(_Size, nothrow);

  00018	68 00 00 00 00	 push	 OFFSET ?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ??2@YAPAXIABUnothrow_t@std@@@Z ; operator new
  00023	8b c8		 mov	 ecx, eax
  00025	83 c4 08	 add	 esp, 8

; 1573 :             }
; 1574 : 
; 1575 :             if (_Pbuf) {

  00028	85 c9		 test	 ecx, ecx
  0002a	75 17		 jne	 SHORT $LN13@Get_tempor

; 1563 :         for (; 0 < _Count; _Count /= 2) {

  0002c	d1 ee		 shr	 esi, 1
  0002e	75 e3		 jne	 SHORT $LL4@Get_tempor
$LN3@Get_tempor:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

  00030	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00033	5e		 pop	 esi
  00034	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  0003a	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1582 : }

  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
$LN13@Get_tempor:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

  00043	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00046	89 70 04	 mov	 DWORD PTR [eax+4], esi
  00049	89 08		 mov	 DWORD PTR [eax], ecx
  0004b	5e		 pop	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1582 : }

  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
??$_Get_temporary_buffer@UTPatchDrawStruct@CMapOutdoor@@@std@@YA?AU?$pair@PAUTPatchDrawStruct@CMapOutdoor@@H@0@H@Z ENDP ; std::_Get_temporary_buffer<CMapOutdoor::TPatchDrawStruct>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Partition_by_median_guess_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YA?AU?$pair@PAPAVCGraphicThingInstance@@PAPAV1@@0@PAPAVCGraphicThingInstance@@0UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z
_TEXT	SEGMENT
__Last$1$ = -16						; size = 4
tv3201 = -16						; size = 4
tv3111 = -16						; size = 4
tv3195 = -12						; size = 4
__Glast$1$ = -12					; size = 4
__Gfirst$1$ = -8					; size = 4
__Pfirst$1$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Plast$1$ = 20						; size = 4
__Pred$ = 20						; size = 1
??$_Partition_by_median_guess_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YA?AU?$pair@PAPAVCGraphicThingInstance@@PAPAV1@@0@PAPAVCGraphicThingInstance@@0UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z PROC ; std::_Partition_by_median_guess_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>, COMDAT

; 7962 : _CONSTEXPR20 pair<_RanIt, _RanIt> _Partition_by_median_guess_unchecked(_RanIt _First, _RanIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 7963 :     // partition [_First, _Last)
; 7964 :     _RanIt _Mid = _First + ((_Last - _First) >> 1); // shift for codegen

  00006	8b 4d 10	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	8b c1		 mov	 eax, ecx
  0000b	8b 55 0c	 mov	 edx, DWORD PTR __First$[ebp]

; 7965 :     _Guess_median_unchecked(_First, _Mid, _Prev_iter(_Last), _Pred);

  0000e	83 c1 fc	 add	 ecx, -4			; fffffffcH
  00011	2b c2		 sub	 eax, edx
  00013	89 4d f0	 mov	 DWORD PTR __Last$1$[ebp], ecx
  00016	c1 f8 03	 sar	 eax, 3
  00019	53		 push	 ebx
  0001a	56		 push	 esi
  0001b	57		 push	 edi
  0001c	8d 34 82	 lea	 esi, DWORD PTR [edx+eax*4]

; 7948 :     const _Diff _Count = _Last - _First;

  0001f	8b c1		 mov	 eax, ecx
  00021	2b c2		 sub	 eax, edx

; 7963 :     // partition [_First, _Last)
; 7964 :     _RanIt _Mid = _First + ((_Last - _First) >> 1); // shift for codegen

  00023	89 75 fc	 mov	 DWORD PTR __Pfirst$1$[ebp], esi

; 7948 :     const _Diff _Count = _Last - _First;

  00026	c1 f8 02	 sar	 eax, 2

; 7949 :     if (40 < _Count) { // Tukey's ninther

  00029	83 f8 28	 cmp	 eax, 40			; 00000028H
  0002c	7e 63		 jle	 SHORT $LN163@Partition_

; 7950 :         const _Diff _Step     = (_Count + 1) >> 3; // +1 can't overflow because range was made inclusive in caller
; 7951 :         const _Diff _Two_step = _Step << 1; // note: intentionally discards low-order bit
; 7952 :         _Med3_unchecked(_First, _First + _Step, _First + _Two_step, _Pred);

  0002e	8b 5d 14	 mov	 ebx, DWORD PTR __Pred$[ebp]
  00031	40		 inc	 eax
  00032	c1 f8 03	 sar	 eax, 3
  00035	53		 push	 ebx
  00036	8d 0c c5 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*8]
  0003d	8d 3c 85 00 00
	00 00		 lea	 edi, DWORD PTR [eax*4]
  00044	89 4d f4	 mov	 DWORD PTR tv3195[ebp], ecx
  00047	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
  0004a	03 d7		 add	 edx, edi
  0004c	03 c1		 add	 eax, ecx
  0004e	50		 push	 eax
  0004f	52		 push	 edx
  00050	ff 75 0c	 push	 DWORD PTR __First$[ebp]
  00053	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@00UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ; std::_Med3_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>

; 7953 :         _Med3_unchecked(_Mid - _Step, _Mid, _Mid + _Step, _Pred);

  00058	53		 push	 ebx
  00059	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0005c	50		 push	 eax
  0005d	8b c6		 mov	 eax, esi
  0005f	2b c7		 sub	 eax, edi
  00061	56		 push	 esi
  00062	50		 push	 eax
  00063	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@00UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ; std::_Med3_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>

; 7954 :         _Med3_unchecked(_Last - _Two_step, _Last - _Step, _Last, _Pred);

  00068	8b 45 f0	 mov	 eax, DWORD PTR __Last$1$[ebp]
  0006b	8b f0		 mov	 esi, eax
  0006d	53		 push	 ebx
  0006e	50		 push	 eax
  0006f	2b 45 f4	 sub	 eax, DWORD PTR tv3195[ebp]
  00072	2b f7		 sub	 esi, edi
  00074	56		 push	 esi
  00075	50		 push	 eax
  00076	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@00UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ; std::_Med3_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>

; 7955 :         _Med3_unchecked(_First + _Step, _Mid, _Last - _Step, _Pred);

  0007b	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
  0007e	53		 push	 ebx
  0007f	56		 push	 esi
  00080	8b 75 fc	 mov	 esi, DWORD PTR __Pfirst$1$[ebp]
  00083	03 c7		 add	 eax, edi
  00085	56		 push	 esi
  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@00UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ; std::_Med3_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>
  0008c	83 c4 40	 add	 esp, 64			; 00000040H

; 7956 :     } else {

  0008f	eb 0e		 jmp	 SHORT $LN164@Partition_
$LN163@Partition_:

; 7957 :         _Med3_unchecked(_First, _Mid, _Last, _Pred);

  00091	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  00094	51		 push	 ecx
  00095	56		 push	 esi
  00096	52		 push	 edx
  00097	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@00UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ; std::_Med3_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>
  0009c	83 c4 10	 add	 esp, 16			; 00000010H
$LN164@Partition_:

; 7966 :     _RanIt _Pfirst = _Mid;
; 7967 :     _RanIt _Plast  = _Next_iter(_Pfirst);

  0009f	8d 7e 04	 lea	 edi, DWORD PTR [esi+4]
  000a2	89 7d 14	 mov	 DWORD PTR __Plast$1$[ebp], edi

; 7970 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  000a5	39 75 0c	 cmp	 DWORD PTR __First$[ebp], esi
  000a8	0f 83 2d 01 00
	00		 jae	 $LN168@Partition_
  000ae	66 90		 npad	 2
$LL2@Partition_:
  000b0	8b 3e		 mov	 edi, DWORD PTR [esi]
  000b2	8d 46 fc	 lea	 eax, DWORD PTR [esi-4]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  000b5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7970 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  000bb	8b 30		 mov	 esi, DWORD PTR [eax]
  000bd	89 45 f0	 mov	 DWORD PTR tv3201[ebp], eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  000c0	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 351  : 		const D3DXVECTOR3 & c_rv3CameraPos = pCurrentCamera->GetEye();
; 352  : 		const D3DXVECTOR3 & c_v3LeftPos  = pkLeft->GetPosition();

  000c5	8b ce		 mov	 ecx, esi
  000c7	8b d8		 mov	 ebx, eax
  000c9	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition

; 353  : 		const D3DXVECTOR3 & c_v3RightPos = pkRight->GetPosition();

  000ce	8b cf		 mov	 ecx, edi
  000d0	8b f0		 mov	 esi, eax
  000d2	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  000d7	f3 0f 10 6b 30	 movss	 xmm5, DWORD PTR [ebx+48]
  000dc	f3 0f 10 63 34	 movss	 xmm4, DWORD PTR [ebx+52]
  000e1	0f 28 cd	 movaps	 xmm1, xmm5
  000e4	f3 0f 5c 0e	 subss	 xmm1, DWORD PTR [esi]
  000e8	f3 0f 5c 28	 subss	 xmm5, DWORD PTR [eax]
  000ec	f3 0f 10 53 38	 movss	 xmm2, DWORD PTR [ebx+56]
  000f1	0f 28 dc	 movaps	 xmm3, xmm4
  000f4	f3 0f 5c 5e 04	 subss	 xmm3, DWORD PTR [esi+4]
  000f9	f3 0f 5c 60 04	 subss	 xmm4, DWORD PTR [eax+4]
  000fe	0f 28 c2	 movaps	 xmm0, xmm2

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00101	f3 0f 59 c9	 mulss	 xmm1, xmm1

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00105	f3 0f 5c 46 08	 subss	 xmm0, DWORD PTR [esi+8]
  0010a	f3 0f 5c 50 08	 subss	 xmm2, DWORD PTR [eax+8]

; 182  :     z = fz;

  0010f	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  00113	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00117	f3 0f 59 ed	 mulss	 xmm5, xmm5
  0011b	f3 0f 58 d9	 addss	 xmm3, xmm1
  0011f	f3 0f 59 c0	 mulss	 xmm0, xmm0
  00123	f3 0f 58 e5	 addss	 xmm4, xmm5
  00127	f3 0f 59 d2	 mulss	 xmm2, xmm2
  0012b	f3 0f 58 d8	 addss	 xmm3, xmm0
  0012f	f3 0f 58 e2	 addss	 xmm4, xmm2
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  00133	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7970 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  00136	0f 87 99 00 00
	00		 ja	 $LN199@Partition_
  0013c	8b 4d fc	 mov	 ecx, DWORD PTR __Pfirst$1$[ebp]
  0013f	8b 7d f0	 mov	 edi, DWORD PTR tv3201[ebp]
  00142	8b 31		 mov	 esi, DWORD PTR [ecx]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  00144	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7970 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  0014a	8b 3f		 mov	 edi, DWORD PTR [edi]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  0014c	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 351  : 		const D3DXVECTOR3 & c_rv3CameraPos = pCurrentCamera->GetEye();
; 352  : 		const D3DXVECTOR3 & c_v3LeftPos  = pkLeft->GetPosition();

  00151	8b ce		 mov	 ecx, esi
  00153	8b d8		 mov	 ebx, eax
  00155	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition

; 353  : 		const D3DXVECTOR3 & c_v3RightPos = pkRight->GetPosition();

  0015a	8b cf		 mov	 ecx, edi
  0015c	8b f0		 mov	 esi, eax
  0015e	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00163	f3 0f 10 6b 30	 movss	 xmm5, DWORD PTR [ebx+48]
  00168	f3 0f 10 63 34	 movss	 xmm4, DWORD PTR [ebx+52]
  0016d	0f 28 cd	 movaps	 xmm1, xmm5
  00170	f3 0f 5c 0e	 subss	 xmm1, DWORD PTR [esi]
  00174	f3 0f 5c 28	 subss	 xmm5, DWORD PTR [eax]
  00178	f3 0f 10 53 38	 movss	 xmm2, DWORD PTR [ebx+56]
  0017d	0f 28 dc	 movaps	 xmm3, xmm4
  00180	f3 0f 5c 5e 04	 subss	 xmm3, DWORD PTR [esi+4]
  00185	f3 0f 5c 60 04	 subss	 xmm4, DWORD PTR [eax+4]
  0018a	0f 28 c2	 movaps	 xmm0, xmm2

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0018d	f3 0f 59 c9	 mulss	 xmm1, xmm1

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00191	f3 0f 5c 46 08	 subss	 xmm0, DWORD PTR [esi+8]
  00196	f3 0f 5c 50 08	 subss	 xmm2, DWORD PTR [eax+8]

; 182  :     z = fz;

  0019b	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  0019f	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  001a3	f3 0f 59 ed	 mulss	 xmm5, xmm5
  001a7	f3 0f 58 d9	 addss	 xmm3, xmm1
  001ab	f3 0f 59 c0	 mulss	 xmm0, xmm0
  001af	f3 0f 58 e5	 addss	 xmm4, xmm5
  001b3	f3 0f 59 d2	 mulss	 xmm2, xmm2
  001b7	f3 0f 58 d8	 addss	 xmm3, xmm0
  001bb	f3 0f 58 e2	 addss	 xmm4, xmm2
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  001bf	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7970 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  001c2	77 11		 ja	 SHORT $LN199@Partition_

; 7971 :         --_Pfirst;

  001c4	8b 75 f0	 mov	 esi, DWORD PTR tv3201[ebp]
  001c7	89 75 fc	 mov	 DWORD PTR __Pfirst$1$[ebp], esi
  001ca	39 75 0c	 cmp	 DWORD PTR __First$[ebp], esi
  001cd	0f 82 dd fe ff
	ff		 jb	 $LL2@Partition_

; 7970 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  001d3	eb 03		 jmp	 SHORT $LN194@Partition_
$LN199@Partition_:
  001d5	8b 75 fc	 mov	 esi, DWORD PTR __Pfirst$1$[ebp]
$LN194@Partition_:
  001d8	8b 7d 14	 mov	 edi, DWORD PTR __Plast$1$[ebp]
$LN168@Partition_:

; 7974 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  001db	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
  001de	3b f8		 cmp	 edi, eax
  001e0	0f 83 30 01 00
	00		 jae	 $LN195@Partition_
$LL4@Partition_:
  001e6	8b 4d 14	 mov	 ecx, DWORD PTR __Plast$1$[ebp]
  001e9	8b 3e		 mov	 edi, DWORD PTR [esi]
  001eb	8b 31		 mov	 esi, DWORD PTR [ecx]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  001ed	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
  001f3	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 351  : 		const D3DXVECTOR3 & c_rv3CameraPos = pCurrentCamera->GetEye();
; 352  : 		const D3DXVECTOR3 & c_v3LeftPos  = pkLeft->GetPosition();

  001f8	8b ce		 mov	 ecx, esi
  001fa	8b d8		 mov	 ebx, eax
  001fc	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition

; 353  : 		const D3DXVECTOR3 & c_v3RightPos = pkRight->GetPosition();

  00201	8b cf		 mov	 ecx, edi
  00203	8b f0		 mov	 esi, eax
  00205	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0020a	f3 0f 10 6b 30	 movss	 xmm5, DWORD PTR [ebx+48]
  0020f	f3 0f 10 63 34	 movss	 xmm4, DWORD PTR [ebx+52]
  00214	0f 28 cd	 movaps	 xmm1, xmm5
  00217	f3 0f 5c 0e	 subss	 xmm1, DWORD PTR [esi]
  0021b	f3 0f 5c 28	 subss	 xmm5, DWORD PTR [eax]
  0021f	f3 0f 10 53 38	 movss	 xmm2, DWORD PTR [ebx+56]
  00224	0f 28 dc	 movaps	 xmm3, xmm4
  00227	f3 0f 5c 5e 04	 subss	 xmm3, DWORD PTR [esi+4]
  0022c	f3 0f 5c 60 04	 subss	 xmm4, DWORD PTR [eax+4]
  00231	0f 28 c2	 movaps	 xmm0, xmm2

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00234	f3 0f 59 c9	 mulss	 xmm1, xmm1

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00238	f3 0f 5c 46 08	 subss	 xmm0, DWORD PTR [esi+8]
  0023d	f3 0f 5c 50 08	 subss	 xmm2, DWORD PTR [eax+8]

; 182  :     z = fz;

  00242	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  00246	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0024a	f3 0f 59 ed	 mulss	 xmm5, xmm5
  0024e	f3 0f 58 d9	 addss	 xmm3, xmm1
  00252	f3 0f 59 c0	 mulss	 xmm0, xmm0
  00256	f3 0f 58 e5	 addss	 xmm4, xmm5
  0025a	f3 0f 59 d2	 mulss	 xmm2, xmm2
  0025e	f3 0f 58 d8	 addss	 xmm3, xmm0
  00262	f3 0f 58 e2	 addss	 xmm4, xmm2
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  00266	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7974 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  00269	0f 87 a1 00 00
	00		 ja	 $LN204@Partition_
  0026f	8b 4d fc	 mov	 ecx, DWORD PTR __Pfirst$1$[ebp]
  00272	8b 45 14	 mov	 eax, DWORD PTR __Plast$1$[ebp]
  00275	8b 31		 mov	 esi, DWORD PTR [ecx]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  00277	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7974 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  0027d	8b 38		 mov	 edi, DWORD PTR [eax]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  0027f	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 351  : 		const D3DXVECTOR3 & c_rv3CameraPos = pCurrentCamera->GetEye();
; 352  : 		const D3DXVECTOR3 & c_v3LeftPos  = pkLeft->GetPosition();

  00284	8b ce		 mov	 ecx, esi
  00286	8b d8		 mov	 ebx, eax
  00288	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition

; 353  : 		const D3DXVECTOR3 & c_v3RightPos = pkRight->GetPosition();

  0028d	8b cf		 mov	 ecx, edi
  0028f	8b f0		 mov	 esi, eax
  00291	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00296	f3 0f 10 6b 30	 movss	 xmm5, DWORD PTR [ebx+48]
  0029b	f3 0f 10 63 34	 movss	 xmm4, DWORD PTR [ebx+52]
  002a0	0f 28 cd	 movaps	 xmm1, xmm5
  002a3	f3 0f 5c 0e	 subss	 xmm1, DWORD PTR [esi]
  002a7	f3 0f 5c 28	 subss	 xmm5, DWORD PTR [eax]
  002ab	f3 0f 10 53 38	 movss	 xmm2, DWORD PTR [ebx+56]
  002b0	0f 28 dc	 movaps	 xmm3, xmm4
  002b3	f3 0f 5c 60 04	 subss	 xmm4, DWORD PTR [eax+4]
  002b8	f3 0f 5c 5e 04	 subss	 xmm3, DWORD PTR [esi+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7974 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  002bd	8b 7d 14	 mov	 edi, DWORD PTR __Plast$1$[ebp]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  002c0	0f 28 c2	 movaps	 xmm0, xmm2
  002c3	f3 0f 5c 50 08	 subss	 xmm2, DWORD PTR [eax+8]
  002c8	f3 0f 5c 46 08	 subss	 xmm0, DWORD PTR [esi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7974 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  002cd	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 182  :     z = fz;

  002d0	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  002d4	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  002d8	f3 0f 59 c9	 mulss	 xmm1, xmm1
  002dc	f3 0f 59 ed	 mulss	 xmm5, xmm5
  002e0	f3 0f 58 d9	 addss	 xmm3, xmm1
  002e4	f3 0f 59 c0	 mulss	 xmm0, xmm0
  002e8	f3 0f 58 e5	 addss	 xmm4, xmm5
  002ec	f3 0f 59 d2	 mulss	 xmm2, xmm2
  002f0	f3 0f 58 d8	 addss	 xmm3, xmm0
  002f4	f3 0f 58 e2	 addss	 xmm4, xmm2
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  002f8	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7974 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  002fb	77 19		 ja	 SHORT $LN195@Partition_
  002fd	8b 75 fc	 mov	 esi, DWORD PTR __Pfirst$1$[ebp]

; 7975 :         ++_Plast;

  00300	83 c7 04	 add	 edi, 4
  00303	89 7d 14	 mov	 DWORD PTR __Plast$1$[ebp], edi
  00306	3b f8		 cmp	 edi, eax
  00308	0f 82 d8 fe ff
	ff		 jb	 $LL4@Partition_

; 7974 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  0030e	eb 06		 jmp	 SHORT $LN195@Partition_
$LN204@Partition_:
  00310	8b 7d 14	 mov	 edi, DWORD PTR __Plast$1$[ebp]
  00313	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
$LN195@Partition_:

; 7976 :     }
; 7977 : 
; 7978 :     _RanIt _Gfirst = _Plast;
; 7979 :     _RanIt _Glast  = _Pfirst;

  00316	8b 55 fc	 mov	 edx, DWORD PTR __Pfirst$1$[ebp]
  00319	8b df		 mov	 ebx, edi
  0031b	8b f2		 mov	 esi, edx
$LN230@Partition_:

; 7980 : 
; 7981 :     for (;;) { // partition
; 7982 :         for (; _Gfirst < _Last; ++_Gfirst) {

  0031d	89 75 f4	 mov	 DWORD PTR __Glast$1$[ebp], esi
$LN229@Partition_:
  00320	89 5d f8	 mov	 DWORD PTR __Gfirst$1$[ebp], ebx
$LL6@Partition_:
  00323	3b d8		 cmp	 ebx, eax
  00325	0f 83 48 01 00
	00		 jae	 $LN172@Partition_
  0032b	0f 1f 44 00 00	 npad	 5
$LL226@Partition_:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  00330	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7983 :             if (_DEBUG_LT_PRED(_Pred, *_Pfirst, *_Gfirst)) {

  00336	8b 3b		 mov	 edi, DWORD PTR [ebx]
  00338	8b 32		 mov	 esi, DWORD PTR [edx]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  0033a	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 351  : 		const D3DXVECTOR3 & c_rv3CameraPos = pCurrentCamera->GetEye();
; 352  : 		const D3DXVECTOR3 & c_v3LeftPos  = pkLeft->GetPosition();

  0033f	8b ce		 mov	 ecx, esi
  00341	8b d8		 mov	 ebx, eax
  00343	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition

; 353  : 		const D3DXVECTOR3 & c_v3RightPos = pkRight->GetPosition();

  00348	8b cf		 mov	 ecx, edi
  0034a	8b f0		 mov	 esi, eax
  0034c	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00351	f3 0f 10 6b 30	 movss	 xmm5, DWORD PTR [ebx+48]
  00356	f3 0f 10 63 34	 movss	 xmm4, DWORD PTR [ebx+52]
  0035b	0f 28 cd	 movaps	 xmm1, xmm5
  0035e	f3 0f 5c 0e	 subss	 xmm1, DWORD PTR [esi]
  00362	f3 0f 5c 28	 subss	 xmm5, DWORD PTR [eax]
  00366	f3 0f 10 53 38	 movss	 xmm2, DWORD PTR [ebx+56]
  0036b	0f 28 dc	 movaps	 xmm3, xmm4
  0036e	f3 0f 5c 5e 04	 subss	 xmm3, DWORD PTR [esi+4]
  00373	f3 0f 5c 60 04	 subss	 xmm4, DWORD PTR [eax+4]
  00378	0f 28 c2	 movaps	 xmm0, xmm2

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0037b	f3 0f 59 c9	 mulss	 xmm1, xmm1

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0037f	f3 0f 5c 46 08	 subss	 xmm0, DWORD PTR [esi+8]
  00384	f3 0f 5c 50 08	 subss	 xmm2, DWORD PTR [eax+8]

; 182  :     z = fz;

  00389	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  0038d	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00391	f3 0f 59 ed	 mulss	 xmm5, xmm5
  00395	f3 0f 58 d9	 addss	 xmm3, xmm1
  00399	f3 0f 59 c0	 mulss	 xmm0, xmm0
  0039d	f3 0f 58 e5	 addss	 xmm4, xmm5
  003a1	f3 0f 59 d2	 mulss	 xmm2, xmm2
  003a5	f3 0f 58 d8	 addss	 xmm3, xmm0
  003a9	f3 0f 58 e2	 addss	 xmm4, xmm2
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  003ad	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7983 :             if (_DEBUG_LT_PRED(_Pred, *_Pfirst, *_Gfirst)) {

  003b0	0f 87 a2 00 00
	00		 ja	 $LN202@Partition_

; 7985 :             } else if (_Pred(*_Gfirst, *_Pfirst)) {

  003b6	8b 4d fc	 mov	 ecx, DWORD PTR __Pfirst$1$[ebp]
  003b9	8b 75 f8	 mov	 esi, DWORD PTR __Gfirst$1$[ebp]
  003bc	8b 39		 mov	 edi, DWORD PTR [ecx]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  003be	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7985 :             } else if (_Pred(*_Gfirst, *_Pfirst)) {

  003c4	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  003c6	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 351  : 		const D3DXVECTOR3 & c_rv3CameraPos = pCurrentCamera->GetEye();
; 352  : 		const D3DXVECTOR3 & c_v3LeftPos  = pkLeft->GetPosition();

  003cb	8b ce		 mov	 ecx, esi
  003cd	8b d8		 mov	 ebx, eax
  003cf	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition

; 353  : 		const D3DXVECTOR3 & c_v3RightPos = pkRight->GetPosition();

  003d4	8b cf		 mov	 ecx, edi
  003d6	8b f0		 mov	 esi, eax
  003d8	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  003dd	f3 0f 10 6b 30	 movss	 xmm5, DWORD PTR [ebx+48]
  003e2	f3 0f 10 63 34	 movss	 xmm4, DWORD PTR [ebx+52]
  003e7	0f 28 cd	 movaps	 xmm1, xmm5
  003ea	f3 0f 5c 0e	 subss	 xmm1, DWORD PTR [esi]
  003ee	f3 0f 5c 28	 subss	 xmm5, DWORD PTR [eax]
  003f2	f3 0f 10 53 38	 movss	 xmm2, DWORD PTR [ebx+56]
  003f7	0f 28 dc	 movaps	 xmm3, xmm4
  003fa	f3 0f 5c 5e 04	 subss	 xmm3, DWORD PTR [esi+4]
  003ff	f3 0f 5c 60 04	 subss	 xmm4, DWORD PTR [eax+4]
  00404	0f 28 c2	 movaps	 xmm0, xmm2

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00407	f3 0f 59 c9	 mulss	 xmm1, xmm1

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0040b	f3 0f 5c 46 08	 subss	 xmm0, DWORD PTR [esi+8]
  00410	f3 0f 5c 50 08	 subss	 xmm2, DWORD PTR [eax+8]

; 182  :     z = fz;

  00415	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  00419	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0041d	f3 0f 59 ed	 mulss	 xmm5, xmm5
  00421	f3 0f 58 d9	 addss	 xmm3, xmm1
  00425	f3 0f 59 c0	 mulss	 xmm0, xmm0
  00429	f3 0f 58 e5	 addss	 xmm4, xmm5
  0042d	f3 0f 59 d2	 mulss	 xmm2, xmm2
  00431	f3 0f 58 d8	 addss	 xmm3, xmm0
  00435	f3 0f 58 e2	 addss	 xmm4, xmm2
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  00439	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7985 :             } else if (_Pred(*_Gfirst, *_Pfirst)) {

  0043c	77 2f		 ja	 SHORT $LN196@Partition_

; 7986 :                 break;
; 7987 :             } else if (_Plast != _Gfirst) {

  0043e	8b 55 14	 mov	 edx, DWORD PTR __Plast$1$[ebp]
  00441	8b 5d f8	 mov	 ebx, DWORD PTR __Gfirst$1$[ebp]
  00444	8d 72 04	 lea	 esi, DWORD PTR [edx+4]
  00447	89 75 14	 mov	 DWORD PTR __Plast$1$[ebp], esi
  0044a	3b d3		 cmp	 edx, ebx
  0044c	74 0d		 je	 SHORT $LN9@Partition_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

  0044e	8b 0a		 mov	 ecx, DWORD PTR [edx]

; 100  :     _Left    = _STD move(_Right);

  00450	8b 03		 mov	 eax, DWORD PTR [ebx]
  00452	89 02		 mov	 DWORD PTR [edx], eax

; 101  :     _Right   = _STD move(_Tmp);

  00454	89 0b		 mov	 DWORD PTR [ebx], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7990 :             } else {

  00456	eb 03		 jmp	 SHORT $LN9@Partition_
$LN202@Partition_:

; 7983 :             if (_DEBUG_LT_PRED(_Pred, *_Pfirst, *_Gfirst)) {

  00458	8b 5d f8	 mov	 ebx, DWORD PTR __Gfirst$1$[ebp]
$LN9@Partition_:

; 7980 : 
; 7981 :     for (;;) { // partition
; 7982 :         for (; _Gfirst < _Last; ++_Gfirst) {

  0045b	8b 55 fc	 mov	 edx, DWORD PTR __Pfirst$1$[ebp]
  0045e	83 c3 04	 add	 ebx, 4
  00461	89 5d f8	 mov	 DWORD PTR __Gfirst$1$[ebp], ebx
  00464	3b 5d 10	 cmp	 ebx, DWORD PTR __Last$[ebp]
  00467	0f 82 c3 fe ff
	ff		 jb	 $LL226@Partition_
$LN196@Partition_:
  0046d	8b 55 fc	 mov	 edx, DWORD PTR __Pfirst$1$[ebp]
  00470	8b 75 f4	 mov	 esi, DWORD PTR __Glast$1$[ebp]
$LN172@Partition_:

; 7991 :                 ++_Plast;
; 7992 :             }
; 7993 :         }
; 7994 : 
; 7995 :         for (; _First < _Glast; --_Glast) {

  00473	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
  00476	3b f0		 cmp	 esi, eax
  00478	0f 86 58 01 00
	00		 jbe	 $LN228@Partition_
  0047e	8d 5e fc	 lea	 ebx, DWORD PTR [esi-4]
  00481	89 5d f0	 mov	 DWORD PTR tv3111[ebp], ebx
$LL227@Partition_:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  00484	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7997 :             if (_DEBUG_LT_PRED(_Pred, *_Glast_prev, *_Pfirst)) {

  0048a	8b 3a		 mov	 edi, DWORD PTR [edx]
  0048c	8b 33		 mov	 esi, DWORD PTR [ebx]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  0048e	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 351  : 		const D3DXVECTOR3 & c_rv3CameraPos = pCurrentCamera->GetEye();
; 352  : 		const D3DXVECTOR3 & c_v3LeftPos  = pkLeft->GetPosition();

  00493	8b ce		 mov	 ecx, esi
  00495	8b d8		 mov	 ebx, eax
  00497	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition

; 353  : 		const D3DXVECTOR3 & c_v3RightPos = pkRight->GetPosition();

  0049c	8b cf		 mov	 ecx, edi
  0049e	8b f0		 mov	 esi, eax
  004a0	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  004a5	f3 0f 10 6b 30	 movss	 xmm5, DWORD PTR [ebx+48]
  004aa	f3 0f 10 63 34	 movss	 xmm4, DWORD PTR [ebx+52]
  004af	0f 28 cd	 movaps	 xmm1, xmm5
  004b2	f3 0f 5c 0e	 subss	 xmm1, DWORD PTR [esi]
  004b6	f3 0f 5c 28	 subss	 xmm5, DWORD PTR [eax]
  004ba	f3 0f 10 53 38	 movss	 xmm2, DWORD PTR [ebx+56]
  004bf	0f 28 dc	 movaps	 xmm3, xmm4
  004c2	f3 0f 5c 5e 04	 subss	 xmm3, DWORD PTR [esi+4]
  004c7	f3 0f 5c 60 04	 subss	 xmm4, DWORD PTR [eax+4]
  004cc	0f 28 c2	 movaps	 xmm0, xmm2

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  004cf	f3 0f 59 c9	 mulss	 xmm1, xmm1

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  004d3	f3 0f 5c 46 08	 subss	 xmm0, DWORD PTR [esi+8]
  004d8	f3 0f 5c 50 08	 subss	 xmm2, DWORD PTR [eax+8]

; 182  :     z = fz;

  004dd	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  004e1	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  004e5	f3 0f 59 ed	 mulss	 xmm5, xmm5
  004e9	f3 0f 58 d9	 addss	 xmm3, xmm1
  004ed	f3 0f 59 c0	 mulss	 xmm0, xmm0
  004f1	f3 0f 58 e5	 addss	 xmm4, xmm5
  004f5	f3 0f 59 d2	 mulss	 xmm2, xmm2
  004f9	f3 0f 58 d8	 addss	 xmm3, xmm0
  004fd	f3 0f 58 e2	 addss	 xmm4, xmm2
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  00501	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7997 :             if (_DEBUG_LT_PRED(_Pred, *_Glast_prev, *_Pfirst)) {

  00504	0f 87 a2 00 00
	00		 ja	 $LN201@Partition_

; 7999 :             } else if (_Pred(*_Pfirst, *_Glast_prev)) {

  0050a	8b 45 fc	 mov	 eax, DWORD PTR __Pfirst$1$[ebp]
  0050d	8b 7d f0	 mov	 edi, DWORD PTR tv3111[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  00510	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7999 :             } else if (_Pred(*_Pfirst, *_Glast_prev)) {

  00516	8b 30		 mov	 esi, DWORD PTR [eax]
  00518	8b 3f		 mov	 edi, DWORD PTR [edi]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  0051a	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 351  : 		const D3DXVECTOR3 & c_rv3CameraPos = pCurrentCamera->GetEye();
; 352  : 		const D3DXVECTOR3 & c_v3LeftPos  = pkLeft->GetPosition();

  0051f	8b ce		 mov	 ecx, esi
  00521	8b d8		 mov	 ebx, eax
  00523	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition

; 353  : 		const D3DXVECTOR3 & c_v3RightPos = pkRight->GetPosition();

  00528	8b cf		 mov	 ecx, edi
  0052a	8b f0		 mov	 esi, eax
  0052c	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00531	f3 0f 10 6b 30	 movss	 xmm5, DWORD PTR [ebx+48]
  00536	f3 0f 10 63 34	 movss	 xmm4, DWORD PTR [ebx+52]
  0053b	0f 28 cd	 movaps	 xmm1, xmm5
  0053e	f3 0f 5c 0e	 subss	 xmm1, DWORD PTR [esi]
  00542	f3 0f 5c 28	 subss	 xmm5, DWORD PTR [eax]
  00546	f3 0f 10 53 38	 movss	 xmm2, DWORD PTR [ebx+56]
  0054b	0f 28 dc	 movaps	 xmm3, xmm4
  0054e	f3 0f 5c 5e 04	 subss	 xmm3, DWORD PTR [esi+4]
  00553	f3 0f 5c 60 04	 subss	 xmm4, DWORD PTR [eax+4]
  00558	0f 28 c2	 movaps	 xmm0, xmm2

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0055b	f3 0f 59 c9	 mulss	 xmm1, xmm1

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0055f	f3 0f 5c 46 08	 subss	 xmm0, DWORD PTR [esi+8]
  00564	f3 0f 5c 50 08	 subss	 xmm2, DWORD PTR [eax+8]

; 182  :     z = fz;

  00569	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  0056d	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00571	f3 0f 59 ed	 mulss	 xmm5, xmm5
  00575	f3 0f 58 d9	 addss	 xmm3, xmm1
  00579	f3 0f 59 c0	 mulss	 xmm0, xmm0
  0057d	f3 0f 58 e5	 addss	 xmm4, xmm5
  00581	f3 0f 59 d2	 mulss	 xmm2, xmm2
  00585	f3 0f 58 d8	 addss	 xmm3, xmm0
  00589	f3 0f 58 e2	 addss	 xmm4, xmm2
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  0058d	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7999 :             } else if (_Pred(*_Pfirst, *_Glast_prev)) {

  00590	77 3c		 ja	 SHORT $LN205@Partition_

; 8000 :                 break;
; 8001 :             } else if (--_Pfirst != _Glast_prev) {

  00592	8b 55 fc	 mov	 edx, DWORD PTR __Pfirst$1$[ebp]
  00595	8b 5d f0	 mov	 ebx, DWORD PTR tv3111[ebp]
  00598	83 ea 04	 sub	 edx, 4
  0059b	89 55 fc	 mov	 DWORD PTR __Pfirst$1$[ebp], edx
  0059e	3b d3		 cmp	 edx, ebx
  005a0	74 10		 je	 SHORT $LN12@Partition_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

  005a2	8b 0a		 mov	 ecx, DWORD PTR [edx]

; 100  :     _Left    = _STD move(_Right);

  005a4	8b 03		 mov	 eax, DWORD PTR [ebx]
  005a6	89 02		 mov	 DWORD PTR [edx], eax

; 101  :     _Right   = _STD move(_Tmp);

  005a8	89 0b		 mov	 DWORD PTR [ebx], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7997 :             if (_DEBUG_LT_PRED(_Pred, *_Glast_prev, *_Pfirst)) {

  005aa	eb 06		 jmp	 SHORT $LN12@Partition_
$LN201@Partition_:
  005ac	8b 55 fc	 mov	 edx, DWORD PTR __Pfirst$1$[ebp]
  005af	8b 5d f0	 mov	 ebx, DWORD PTR tv3111[ebp]
$LN12@Partition_:

; 7991 :                 ++_Plast;
; 7992 :             }
; 7993 :         }
; 7994 : 
; 7995 :         for (; _First < _Glast; --_Glast) {

  005b2	8b 75 f4	 mov	 esi, DWORD PTR __Glast$1$[ebp]
  005b5	83 eb 04	 sub	 ebx, 4
  005b8	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
  005bb	83 ee 04	 sub	 esi, 4
  005be	89 75 f4	 mov	 DWORD PTR __Glast$1$[ebp], esi
  005c1	89 5d f0	 mov	 DWORD PTR tv3111[ebp], ebx
  005c4	3b c6		 cmp	 eax, esi
  005c6	0f 82 b8 fe ff
	ff		 jb	 $LL227@Partition_

; 7999 :             } else if (_Pred(*_Pfirst, *_Glast_prev)) {

  005cc	eb 06		 jmp	 SHORT $LN197@Partition_
$LN205@Partition_:
  005ce	8b 75 f4	 mov	 esi, DWORD PTR __Glast$1$[ebp]
  005d1	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
$LN197@Partition_:

; 8002 :                 swap(*_Pfirst, *_Glast_prev); // intentional ADL
; 8003 :             }
; 8004 :         }
; 8005 : 
; 8006 :         if (_Glast == _First && _Gfirst == _Last) {

  005d4	3b f0		 cmp	 esi, eax
$LN228@Partition_:
  005d6	8b 5d f8	 mov	 ebx, DWORD PTR __Gfirst$1$[ebp]
  005d9	75 3a		 jne	 SHORT $LN27@Partition_
  005db	3b 5d 10	 cmp	 ebx, DWORD PTR __Last$[ebp]
  005de	0f 84 7d 00 00
	00		 je	 $LN174@Partition_

; 8008 :         }
; 8009 : 
; 8010 :         if (_Glast == _First) { // no room at bottom, rotate pivot upward
; 8011 :             if (_Plast != _Gfirst) {

  005e4	8b 7d 14	 mov	 edi, DWORD PTR __Plast$1$[ebp]
  005e7	8b 55 fc	 mov	 edx, DWORD PTR __Pfirst$1$[ebp]
  005ea	3b fb		 cmp	 edi, ebx
  005ec	74 08		 je	 SHORT $LN67@Partition_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

  005ee	8b 0a		 mov	 ecx, DWORD PTR [edx]

; 100  :     _Left    = _STD move(_Right);

  005f0	8b 07		 mov	 eax, DWORD PTR [edi]
  005f2	89 02		 mov	 DWORD PTR [edx], eax

; 101  :     _Right   = _STD move(_Tmp);

  005f4	89 0f		 mov	 DWORD PTR [edi], ecx
$LN67@Partition_:

; 100  :     _Left    = _STD move(_Right);

  005f6	8b 03		 mov	 eax, DWORD PTR [ebx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8015 :             ++_Plast;

  005f8	83 c7 04	 add	 edi, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

  005fb	8b 0a		 mov	 ecx, DWORD PTR [edx]

; 100  :     _Left    = _STD move(_Right);

  005fd	89 02		 mov	 DWORD PTR [edx], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8017 :             ++_Pfirst;

  005ff	83 c2 04	 add	 edx, 4

; 8018 :             ++_Gfirst;

  00602	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 101  :     _Right   = _STD move(_Tmp);

  00605	89 0b		 mov	 DWORD PTR [ebx], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8018 :             ++_Gfirst;

  00607	83 c3 04	 add	 ebx, 4
  0060a	89 7d 14	 mov	 DWORD PTR __Plast$1$[ebp], edi
  0060d	89 55 fc	 mov	 DWORD PTR __Pfirst$1$[ebp], edx
  00610	e9 0b fd ff ff	 jmp	 $LN229@Partition_
$LN27@Partition_:

; 8019 :         } else if (_Gfirst == _Last) { // no room at top, rotate pivot downward

  00615	8b 55 fc	 mov	 edx, DWORD PTR __Pfirst$1$[ebp]
  00618	83 c6 fc	 add	 esi, -4			; fffffffcH
  0061b	89 75 f4	 mov	 DWORD PTR __Glast$1$[ebp], esi
  0061e	3b 5d 10	 cmp	 ebx, DWORD PTR __Last$[ebp]
  00621	75 2b		 jne	 SHORT $LN30@Partition_

; 8020 :             if (--_Glast != --_Pfirst) {

  00623	83 ea 04	 sub	 edx, 4
  00626	89 55 fc	 mov	 DWORD PTR __Pfirst$1$[ebp], edx
  00629	3b f2		 cmp	 esi, edx
  0062b	74 08		 je	 SHORT $LN190@Partition_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

  0062d	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 100  :     _Left    = _STD move(_Right);

  0062f	8b 02		 mov	 eax, DWORD PTR [edx]
  00631	89 06		 mov	 DWORD PTR [esi], eax

; 101  :     _Right   = _STD move(_Tmp);

  00633	89 0a		 mov	 DWORD PTR [edx], ecx
$LN190@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8024 :             swap(*_Pfirst, *--_Plast); // intentional ADL

  00635	8b 7d 14	 mov	 edi, DWORD PTR __Plast$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

  00638	8b 0a		 mov	 ecx, DWORD PTR [edx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8024 :             swap(*_Pfirst, *--_Plast); // intentional ADL

  0063a	83 ef 04	 sub	 edi, 4
  0063d	89 7d 14	 mov	 DWORD PTR __Plast$1$[ebp], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

  00640	8b 07		 mov	 eax, DWORD PTR [edi]
  00642	89 02		 mov	 DWORD PTR [edx], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8025 :         } else {

  00644	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 101  :     _Right   = _STD move(_Tmp);

  00647	89 0f		 mov	 DWORD PTR [edi], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8025 :         } else {

  00649	e9 d5 fc ff ff	 jmp	 $LL6@Partition_
$LN30@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

  0064e	8b 0b		 mov	 ecx, DWORD PTR [ebx]

; 100  :     _Left    = _STD move(_Right);

  00650	8b 06		 mov	 eax, DWORD PTR [esi]
  00652	89 03		 mov	 DWORD PTR [ebx], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8027 :             ++_Gfirst;

  00654	83 c3 04	 add	 ebx, 4

; 8029 :     }

  00657	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 101  :     _Right   = _STD move(_Tmp);

  0065a	89 0e		 mov	 DWORD PTR [esi], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8029 :     }

  0065c	e9 bc fc ff ff	 jmp	 $LN230@Partition_
$LN174@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

  00661	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00664	8b 4d fc	 mov	 ecx, DWORD PTR __Pfirst$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8007 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);

  00667	5f		 pop	 edi
  00668	5e		 pop	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

  00669	89 08		 mov	 DWORD PTR [eax], ecx
  0066b	8b 4d 14	 mov	 ecx, DWORD PTR __Plast$1$[ebp]
  0066e	89 48 04	 mov	 DWORD PTR [eax+4], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8007 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);

  00671	5b		 pop	 ebx

; 8030 : }

  00672	8b e5		 mov	 esp, ebp
  00674	5d		 pop	 ebp
  00675	c3		 ret	 0
??$_Partition_by_median_guess_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YA?AU?$pair@PAPAVCGraphicThingInstance@@PAPAV1@@0@PAPAVCGraphicThingInstance@@0UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ENDP ; std::_Partition_by_median_guess_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Make_heap_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@0UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z
_TEXT	SEGMENT
tv1001 = -24						; size = 4
tv998 = -20						; size = 4
__Idx$1$ = -20						; size = 4
__Val$1$ = -16						; size = 4
__Max_sequence_non_leaf$1$ = -12			; size = 4
__Hole$1$ = -8						; size = 4
__Hole$1$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Pred$ = 16						; size = 1
??$_Make_heap_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@0UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z PROC ; std::_Make_heap_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>, COMDAT

; 6593 : _CONSTEXPR20 void _Make_heap_unchecked(_RanIt _First, _RanIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 6594 :     // make [_First, _Last) into a heap
; 6595 :     using _Diff   = _Iter_diff_t<_RanIt>;
; 6596 :     _Diff _Bottom = _Last - _First;

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00006	83 ec 18	 sub	 esp, 24			; 00000018H
  00009	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  0000c	2b c2		 sub	 eax, edx
  0000e	c1 f8 02	 sar	 eax, 2
  00011	89 45 0c	 mov	 DWORD PTR __Last$[ebp], eax
  00014	53		 push	 ebx

; 6597 :     for (_Diff _Hole = _Bottom >> 1; _Hole > 0;) { // shift for codegen

  00015	8b d8		 mov	 ebx, eax
  00017	d1 fb		 sar	 ebx, 1
  00019	85 db		 test	 ebx, ebx
  0001b	0f 8e c0 01 00
	00		 jle	 $LN3@Make_heap_
  00021	56		 push	 esi
  00022	57		 push	 edi
  00023	8d 78 ff	 lea	 edi, DWORD PTR [eax-1]
  00026	8b f7		 mov	 esi, edi
  00028	89 7d e8	 mov	 DWORD PTR tv1001[ebp], edi
  0002b	d1 fe		 sar	 esi, 1
  0002d	89 75 f4	 mov	 DWORD PTR __Max_sequence_non_leaf$1$[ebp], esi
$LL2@Make_heap_:

; 6598 :         // reheap top half, bottom to top
; 6599 :         --_Hole;
; 6600 :         _Iter_value_t<_RanIt> _Val = _STD move(*(_First + _Hole));

  00030	8b 4c 9a fc	 mov	 ecx, DWORD PTR [edx+ebx*4-4]
  00034	4b		 dec	 ebx
  00035	89 4d f0	 mov	 DWORD PTR __Val$1$[ebp], ecx

; 6601 :         _STD _Pop_heap_hole_by_index(_First, _Hole, _Bottom, _STD move(_Val), _Pred);

  00038	8b cb		 mov	 ecx, ebx
  0003a	89 5d f8	 mov	 DWORD PTR __Hole$1$[ebp], ebx
  0003d	89 4d fc	 mov	 DWORD PTR __Hole$1$[ebp], ecx

; 6438 :     _Diff _Idx       = _Hole;

  00040	89 5d ec	 mov	 DWORD PTR __Idx$1$[ebp], ebx

; 6443 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  00043	3b de		 cmp	 ebx, esi
  00045	0f 8d bd 00 00
	00		 jge	 $LN8@Make_heap_
  0004b	0f 1f 44 00 00	 npad	 5
$LL7@Make_heap_:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  00050	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6444 :         _Idx = 2 * _Idx + 2;

  00056	8d 04 1b	 lea	 eax, DWORD PTR [ebx+ebx]

; 6445 :         if (_DEBUG_LT_PRED(_Pred, *(_First + _Idx), *(_First + (_Idx - 1)))) {

  00059	8b 7c 82 04	 mov	 edi, DWORD PTR [edx+eax*4+4]
  0005d	8b 74 82 08	 mov	 esi, DWORD PTR [edx+eax*4+8]
  00061	89 45 ec	 mov	 DWORD PTR tv998[ebp], eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  00064	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 351  : 		const D3DXVECTOR3 & c_rv3CameraPos = pCurrentCamera->GetEye();
; 352  : 		const D3DXVECTOR3 & c_v3LeftPos  = pkLeft->GetPosition();

  00069	8b ce		 mov	 ecx, esi
  0006b	8b d8		 mov	 ebx, eax
  0006d	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition

; 353  : 		const D3DXVECTOR3 & c_v3RightPos = pkRight->GetPosition();

  00072	8b cf		 mov	 ecx, edi
  00074	8b f0		 mov	 esi, eax
  00076	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0007b	f3 0f 10 6b 30	 movss	 xmm5, DWORD PTR [ebx+48]
  00080	f3 0f 10 63 34	 movss	 xmm4, DWORD PTR [ebx+52]
  00085	0f 28 cd	 movaps	 xmm1, xmm5
  00088	f3 0f 10 53 38	 movss	 xmm2, DWORD PTR [ebx+56]
  0008d	0f 28 dc	 movaps	 xmm3, xmm4
  00090	f3 0f 5c 5e 04	 subss	 xmm3, DWORD PTR [esi+4]
  00095	f3 0f 5c 60 04	 subss	 xmm4, DWORD PTR [eax+4]
  0009a	f3 0f 5c 0e	 subss	 xmm1, DWORD PTR [esi]
  0009e	f3 0f 5c 28	 subss	 xmm5, DWORD PTR [eax]
  000a2	0f 28 c2	 movaps	 xmm0, xmm2
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6448 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  000a5	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  000a8	f3 0f 5c 46 08	 subss	 xmm0, DWORD PTR [esi+8]
  000ad	f3 0f 5c 50 08	 subss	 xmm2, DWORD PTR [eax+8]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  000b2	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6448 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  000b6	33 db		 xor	 ebx, ebx
  000b8	8b 4d fc	 mov	 ecx, DWORD PTR __Hole$1$[ebp]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  000bb	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6443 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  000bf	8b 75 f4	 mov	 esi, DWORD PTR __Max_sequence_non_leaf$1$[ebp]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 182  :     z = fz;

  000c2	f3 0f 59 c9	 mulss	 xmm1, xmm1
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  000c6	f3 0f 59 ed	 mulss	 xmm5, xmm5
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  000ca	f3 0f 58 d9	 addss	 xmm3, xmm1
  000ce	f3 0f 59 c0	 mulss	 xmm0, xmm0
  000d2	f3 0f 58 e5	 addss	 xmm4, xmm5
  000d6	f3 0f 59 d2	 mulss	 xmm2, xmm2
  000da	f3 0f 58 d8	 addss	 xmm3, xmm0
  000de	f3 0f 58 e2	 addss	 xmm4, xmm2
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6448 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  000e2	0f 2f e3	 comiss	 xmm4, xmm3
  000e5	0f 96 c3	 setbe	 bl
  000e8	43		 inc	 ebx
  000e9	03 5d ec	 add	 ebx, DWORD PTR tv998[ebp]
  000ec	8b 04 9a	 mov	 eax, DWORD PTR [edx+ebx*4]
  000ef	89 04 8a	 mov	 DWORD PTR [edx+ecx*4], eax

; 6449 :         _Hole             = _Idx;

  000f2	8b cb		 mov	 ecx, ebx
  000f4	89 4d fc	 mov	 DWORD PTR __Hole$1$[ebp], ecx
  000f7	3b de		 cmp	 ebx, esi
  000f9	0f 8c 51 ff ff
	ff		 jl	 $LL7@Make_heap_
  000ff	8b 5d f8	 mov	 ebx, DWORD PTR __Hole$1$[ebp]
  00102	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00105	8b 7d e8	 mov	 edi, DWORD PTR tv1001[ebp]
$LN8@Make_heap_:

; 6450 :     }
; 6451 : 
; 6452 :     if (_Idx == _Max_sequence_non_leaf && _Bottom % 2 == 0) { // only child at bottom, move _Hole down to it

  00108	3b ce		 cmp	 ecx, esi
  0010a	75 10		 jne	 SHORT $LN10@Make_heap_
  0010c	a8 01		 test	 al, 1
  0010e	75 0c		 jne	 SHORT $LN10@Make_heap_

; 6453 :         *(_First + _Hole) = _STD move(*(_First + (_Bottom - 1)));

  00110	8b 44 82 fc	 mov	 eax, DWORD PTR [edx+eax*4-4]
  00114	89 04 8a	 mov	 DWORD PTR [edx+ecx*4], eax

; 6454 :         _Hole             = _Bottom - 1;

  00117	8b cf		 mov	 ecx, edi
  00119	89 4d fc	 mov	 DWORD PTR __Hole$1$[ebp], ecx
$LN10@Make_heap_:

; 6328 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  0011c	3b d9		 cmp	 ebx, ecx
  0011e	0f 8d a7 00 00
	00		 jge	 $LN28@Make_heap_
$LL65@Make_heap_:

; 6327 :     for (_Diff _Idx = (_Hole - 1) >> 1; // shift for codegen

  00124	8d 59 ff	 lea	 ebx, DWORD PTR [ecx-1]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  00127	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6327 :     for (_Diff _Idx = (_Hole - 1) >> 1; // shift for codegen

  0012d	d1 fb		 sar	 ebx, 1

; 6328 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  0012f	8b 34 9a	 mov	 esi, DWORD PTR [edx+ebx*4]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  00132	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 351  : 		const D3DXVECTOR3 & c_rv3CameraPos = pCurrentCamera->GetEye();
; 352  : 		const D3DXVECTOR3 & c_v3LeftPos  = pkLeft->GetPosition();

  00137	8b ce		 mov	 ecx, esi
  00139	8b f8		 mov	 edi, eax
  0013b	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition

; 353  : 		const D3DXVECTOR3 & c_v3RightPos = pkRight->GetPosition();

  00140	8b 4d f0	 mov	 ecx, DWORD PTR __Val$1$[ebp]
  00143	8b f0		 mov	 esi, eax
  00145	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0014a	f3 0f 10 6f 30	 movss	 xmm5, DWORD PTR [edi+48]
  0014f	f3 0f 10 67 34	 movss	 xmm4, DWORD PTR [edi+52]
  00154	0f 28 cd	 movaps	 xmm1, xmm5
  00157	f3 0f 5c 0e	 subss	 xmm1, DWORD PTR [esi]
  0015b	f3 0f 5c 28	 subss	 xmm5, DWORD PTR [eax]
  0015f	f3 0f 10 57 38	 movss	 xmm2, DWORD PTR [edi+56]
  00164	0f 28 dc	 movaps	 xmm3, xmm4
  00167	f3 0f 5c 5e 04	 subss	 xmm3, DWORD PTR [esi+4]
  0016c	f3 0f 5c 60 04	 subss	 xmm4, DWORD PTR [eax+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6328 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  00171	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00174	0f 28 c2	 movaps	 xmm0, xmm2
  00177	f3 0f 5c 46 08	 subss	 xmm0, DWORD PTR [esi+8]
  0017c	f3 0f 5c 50 08	 subss	 xmm2, DWORD PTR [eax+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6328 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  00181	8b 4d fc	 mov	 ecx, DWORD PTR __Hole$1$[ebp]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00184	f3 0f 59 db	 mulss	 xmm3, xmm3
  00188	f3 0f 59 e4	 mulss	 xmm4, xmm4

; 182  :     z = fz;

  0018c	f3 0f 59 c9	 mulss	 xmm1, xmm1
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  00190	f3 0f 59 ed	 mulss	 xmm5, xmm5
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00194	f3 0f 58 d9	 addss	 xmm3, xmm1
  00198	f3 0f 59 c0	 mulss	 xmm0, xmm0
  0019c	f3 0f 58 e5	 addss	 xmm4, xmm5
  001a0	f3 0f 59 d2	 mulss	 xmm2, xmm2
  001a4	f3 0f 58 d8	 addss	 xmm3, xmm0
  001a8	f3 0f 58 e2	 addss	 xmm4, xmm2
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  001ac	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6328 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  001af	76 14		 jbe	 SHORT $LN57@Make_heap_

; 6329 :          _Idx = (_Hole - 1) >> 1) { // shift for codegen
; 6330 :         // move _Hole up to parent
; 6331 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  001b1	8b 04 9a	 mov	 eax, DWORD PTR [edx+ebx*4]
  001b4	89 04 8a	 mov	 DWORD PTR [edx+ecx*4], eax

; 6332 :         _Hole             = _Idx;

  001b7	8b cb		 mov	 ecx, ebx
  001b9	89 4d fc	 mov	 DWORD PTR __Hole$1$[ebp], ecx
  001bc	39 5d f8	 cmp	 DWORD PTR __Hole$1$[ebp], ebx
  001bf	0f 8c 5f ff ff
	ff		 jl	 $LL65@Make_heap_
$LN57@Make_heap_:
  001c5	8b 5d f8	 mov	 ebx, DWORD PTR __Hole$1$[ebp]
  001c8	8b 75 f4	 mov	 esi, DWORD PTR __Max_sequence_non_leaf$1$[ebp]
$LN28@Make_heap_:

; 6333 :     }
; 6334 : 
; 6335 :     *(_First + _Hole) = _STD forward<_Ty>(_Val); // drop _Val into final hole

  001cb	8b 45 f0	 mov	 eax, DWORD PTR __Val$1$[ebp]
  001ce	89 04 8a	 mov	 DWORD PTR [edx+ecx*4], eax

; 6597 :     for (_Diff _Hole = _Bottom >> 1; _Hole > 0;) { // shift for codegen

  001d1	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  001d4	8d 78 ff	 lea	 edi, DWORD PTR [eax-1]
  001d7	85 db		 test	 ebx, ebx
  001d9	0f 8f 51 fe ff
	ff		 jg	 $LL2@Make_heap_
  001df	5f		 pop	 edi
  001e0	5e		 pop	 esi
$LN3@Make_heap_:
  001e1	5b		 pop	 ebx

; 6602 :     }
; 6603 : }

  001e2	8b e5		 mov	 esp, ebp
  001e4	5d		 pop	 ebp
  001e5	c3		 ret	 0
??$_Make_heap_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@0UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ENDP ; std::_Make_heap_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Insertion_sort_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAPAPAVCGraphicThingInstance@@QAPAV1@0UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z
_TEXT	SEGMENT
__Prev$1$ = -16						; size = 4
__Hole$1$ = -12						; size = 4
__Val$1$ = -8						; size = 4
__Mid$1$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Pred$ = 16						; size = 1
??$_Insertion_sort_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAPAPAVCGraphicThingInstance@@QAPAV1@0UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z PROC ; std::_Insertion_sort_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>, COMDAT

; 7905 : _CONSTEXPR20 _BidIt _Insertion_sort_unchecked(const _BidIt _First, const _BidIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 7906 :     // insertion sort [_First, _Last)
; 7907 :     if (_First != _Last) {

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00006	83 ec 10	 sub	 esp, 16			; 00000010H
  00009	53		 push	 ebx
  0000a	8b 5d 08	 mov	 ebx, DWORD PTR __First$[ebp]
  0000d	3b d9		 cmp	 ebx, ecx
  0000f	0f 84 04 02 00
	00		 je	 $LN51@Insertion_

; 7908 :         for (_BidIt _Mid = _First; ++_Mid != _Last;) { // order next element

  00015	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  00018	89 45 fc	 mov	 DWORD PTR __Mid$1$[ebp], eax
  0001b	3b c1		 cmp	 eax, ecx
  0001d	0f 84 f6 01 00
	00		 je	 $LN51@Insertion_
  00023	56		 push	 esi
  00024	57		 push	 edi
$LL2@Insertion_:

; 7909 :             _BidIt _Hole               = _Mid;
; 7910 :             _Iter_value_t<_BidIt> _Val = _STD move(*_Mid);

  00025	8b 38		 mov	 edi, DWORD PTR [eax]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  00027	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7912 :             if (_DEBUG_LT_PRED(_Pred, _Val, *_First)) { // found new earliest element, move to front

  0002d	8b 33		 mov	 esi, DWORD PTR [ebx]
  0002f	89 45 f4	 mov	 DWORD PTR __Hole$1$[ebp], eax
  00032	89 7d f8	 mov	 DWORD PTR __Val$1$[ebp], edi
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  00035	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 351  : 		const D3DXVECTOR3 & c_rv3CameraPos = pCurrentCamera->GetEye();
; 352  : 		const D3DXVECTOR3 & c_v3LeftPos  = pkLeft->GetPosition();

  0003a	8b cf		 mov	 ecx, edi
  0003c	8b d8		 mov	 ebx, eax
  0003e	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition

; 353  : 		const D3DXVECTOR3 & c_v3RightPos = pkRight->GetPosition();

  00043	8b ce		 mov	 ecx, esi
  00045	8b f8		 mov	 edi, eax
  00047	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0004c	f3 0f 10 6b 30	 movss	 xmm5, DWORD PTR [ebx+48]
  00051	f3 0f 10 63 34	 movss	 xmm4, DWORD PTR [ebx+52]
  00056	0f 28 cd	 movaps	 xmm1, xmm5
  00059	f3 0f 5c 0f	 subss	 xmm1, DWORD PTR [edi]
  0005d	f3 0f 5c 28	 subss	 xmm5, DWORD PTR [eax]
  00061	f3 0f 10 53 38	 movss	 xmm2, DWORD PTR [ebx+56]
  00066	0f 28 dc	 movaps	 xmm3, xmm4
  00069	f3 0f 5c 5f 04	 subss	 xmm3, DWORD PTR [edi+4]
  0006e	f3 0f 5c 60 04	 subss	 xmm4, DWORD PTR [eax+4]
  00073	0f 28 c2	 movaps	 xmm0, xmm2

; 182  :     z = fz;

  00076	f3 0f 59 c9	 mulss	 xmm1, xmm1

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0007a	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]
  0007f	f3 0f 5c 50 08	 subss	 xmm2, DWORD PTR [eax+8]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00084	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  00088	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0008c	f3 0f 59 ed	 mulss	 xmm5, xmm5
  00090	f3 0f 58 d9	 addss	 xmm3, xmm1
  00094	f3 0f 59 c0	 mulss	 xmm0, xmm0
  00098	f3 0f 58 e5	 addss	 xmm4, xmm5
  0009c	f3 0f 59 d2	 mulss	 xmm2, xmm2
  000a0	f3 0f 58 d8	 addss	 xmm3, xmm0
  000a4	f3 0f 58 e2	 addss	 xmm4, xmm2
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  000a8	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7912 :             if (_DEBUG_LT_PRED(_Pred, _Val, *_First)) { // found new earliest element, move to front

  000ab	76 20		 jbe	 SHORT $LN9@Insertion_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4936 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  000ad	8b 45 fc	 mov	 eax, DWORD PTR __Mid$1$[ebp]
  000b0	8b 5d 08	 mov	 ebx, DWORD PTR __First$[ebp]
  000b3	8d 70 04	 lea	 esi, DWORD PTR [eax+4]
  000b6	56		 push	 esi
  000b7	50		 push	 eax
  000b8	53		 push	 ebx
  000b9	e8 00 00 00 00	 call	 ??$_Copy_backward_memmove@PAPAVCGraphicThingInstance@@PAPAV1@@std@@YAPAPAVCGraphicThingInstance@@PAPAV1@00@Z ; std::_Copy_backward_memmove<CGraphicThingInstance * *,CGraphicThingInstance * *>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7914 :                 *_First = _STD move(_Val);

  000be	8b 4d f8	 mov	 ecx, DWORD PTR __Val$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4936 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  000c1	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7914 :                 *_First = _STD move(_Val);

  000c4	89 0b		 mov	 DWORD PTR [ebx], ecx
  000c6	8b c6		 mov	 eax, esi

; 7915 :             } else { // look for insertion point after first

  000c8	e9 3c 01 00 00	 jmp	 $LN58@Insertion_
$LN9@Insertion_:

; 7916 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

  000cd	8b 75 fc	 mov	 esi, DWORD PTR __Mid$1$[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  000d0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7916 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

  000d6	83 c6 fc	 add	 esi, -4			; fffffffcH
  000d9	89 75 f0	 mov	 DWORD PTR __Prev$1$[ebp], esi
  000dc	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  000de	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 351  : 		const D3DXVECTOR3 & c_rv3CameraPos = pCurrentCamera->GetEye();
; 352  : 		const D3DXVECTOR3 & c_v3LeftPos  = pkLeft->GetPosition();

  000e3	8b 4d f8	 mov	 ecx, DWORD PTR __Val$1$[ebp]
  000e6	8b d8		 mov	 ebx, eax
  000e8	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition

; 353  : 		const D3DXVECTOR3 & c_v3RightPos = pkRight->GetPosition();

  000ed	8b ce		 mov	 ecx, esi
  000ef	8b f8		 mov	 edi, eax
  000f1	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  000f6	f3 0f 10 6b 30	 movss	 xmm5, DWORD PTR [ebx+48]
  000fb	f3 0f 10 63 34	 movss	 xmm4, DWORD PTR [ebx+52]
  00100	0f 28 cd	 movaps	 xmm1, xmm5
  00103	f3 0f 5c 0f	 subss	 xmm1, DWORD PTR [edi]
  00107	f3 0f 5c 28	 subss	 xmm5, DWORD PTR [eax]
  0010b	f3 0f 10 53 38	 movss	 xmm2, DWORD PTR [ebx+56]
  00110	0f 28 dc	 movaps	 xmm3, xmm4
  00113	f3 0f 5c 5f 04	 subss	 xmm3, DWORD PTR [edi+4]
  00118	f3 0f 5c 60 04	 subss	 xmm4, DWORD PTR [eax+4]
  0011d	0f 28 c2	 movaps	 xmm0, xmm2

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00120	f3 0f 59 c9	 mulss	 xmm1, xmm1

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00124	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]
  00129	f3 0f 5c 50 08	 subss	 xmm2, DWORD PTR [eax+8]

; 182  :     z = fz;

  0012e	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  00132	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00136	f3 0f 59 ed	 mulss	 xmm5, xmm5
  0013a	f3 0f 58 d9	 addss	 xmm3, xmm1
  0013e	f3 0f 59 c0	 mulss	 xmm0, xmm0
  00142	f3 0f 58 e5	 addss	 xmm4, xmm5
  00146	f3 0f 59 d2	 mulss	 xmm2, xmm2
  0014a	f3 0f 58 d8	 addss	 xmm3, xmm0
  0014e	f3 0f 58 e2	 addss	 xmm4, xmm2
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  00152	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7916 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

  00155	0f 86 9d 00 00
	00		 jbe	 $LN6@Insertion_
  0015b	0f 1f 44 00 00	 npad	 5
$LL57@Insertion_:

; 7917 :                     *_Hole = _STD move(*_Prev); // move hole down

  00160	8b 4d f0	 mov	 ecx, DWORD PTR __Prev$1$[ebp]
  00163	8b 55 f4	 mov	 edx, DWORD PTR __Hole$1$[ebp]
  00166	89 4d f4	 mov	 DWORD PTR __Hole$1$[ebp], ecx
  00169	8b 01		 mov	 eax, DWORD PTR [ecx]
  0016b	83 e9 04	 sub	 ecx, 4
  0016e	89 02		 mov	 DWORD PTR [edx], eax
  00170	89 4d f0	 mov	 DWORD PTR __Prev$1$[ebp], ecx
  00173	8b 31		 mov	 esi, DWORD PTR [ecx]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 350  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  00175	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
  0017b	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 351  : 		const D3DXVECTOR3 & c_rv3CameraPos = pCurrentCamera->GetEye();
; 352  : 		const D3DXVECTOR3 & c_v3LeftPos  = pkLeft->GetPosition();

  00180	8b 4d f8	 mov	 ecx, DWORD PTR __Val$1$[ebp]
  00183	8b d8		 mov	 ebx, eax
  00185	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition

; 353  : 		const D3DXVECTOR3 & c_v3RightPos = pkRight->GetPosition();

  0018a	8b ce		 mov	 ecx, esi
  0018c	8b f8		 mov	 edi, eax
  0018e	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00193	f3 0f 10 6b 30	 movss	 xmm5, DWORD PTR [ebx+48]
  00198	f3 0f 10 5b 34	 movss	 xmm3, DWORD PTR [ebx+52]
  0019d	0f 28 e5	 movaps	 xmm4, xmm5
  001a0	f3 0f 5c 27	 subss	 xmm4, DWORD PTR [edi]
  001a4	f3 0f 5c 28	 subss	 xmm5, DWORD PTR [eax]
  001a8	f3 0f 10 53 38	 movss	 xmm2, DWORD PTR [ebx+56]
  001ad	0f 28 cb	 movaps	 xmm1, xmm3
  001b0	f3 0f 5c 4f 04	 subss	 xmm1, DWORD PTR [edi+4]
  001b5	f3 0f 5c 58 04	 subss	 xmm3, DWORD PTR [eax+4]
  001ba	0f 28 c2	 movaps	 xmm0, xmm2

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  001bd	f3 0f 59 e4	 mulss	 xmm4, xmm4

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  001c1	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]
  001c6	f3 0f 5c 50 08	 subss	 xmm2, DWORD PTR [eax+8]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  001cb	f3 0f 59 ed	 mulss	 xmm5, xmm5

; 182  :     z = fz;

  001cf	f3 0f 59 c9	 mulss	 xmm1, xmm1
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  001d3	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  001d7	f3 0f 58 e1	 addss	 xmm4, xmm1
  001db	f3 0f 59 c0	 mulss	 xmm0, xmm0
  001df	f3 0f 58 eb	 addss	 xmm5, xmm3
  001e3	f3 0f 59 d2	 mulss	 xmm2, xmm2
  001e7	f3 0f 58 e0	 addss	 xmm4, xmm0
  001eb	f3 0f 58 ea	 addss	 xmm5, xmm2
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 355  : 		return D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3LeftPos)) < D3DXVec3LengthSq(&D3DXVECTOR3(c_rv3CameraPos - c_v3RightPos) );

  001ef	0f 2f ec	 comiss	 xmm5, xmm4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7916 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

  001f2	0f 87 68 ff ff
	ff		 ja	 $LL57@Insertion_
$LN6@Insertion_:

; 7918 :                 }
; 7919 : 
; 7920 :                 *_Hole = _STD move(_Val); // insert element in hole

  001f8	8b 55 f4	 mov	 edx, DWORD PTR __Hole$1$[ebp]
  001fb	8b 45 f8	 mov	 eax, DWORD PTR __Val$1$[ebp]
  001fe	8b 5d 08	 mov	 ebx, DWORD PTR __First$[ebp]
  00201	89 02		 mov	 DWORD PTR [edx], eax
  00203	8b 45 fc	 mov	 eax, DWORD PTR __Mid$1$[ebp]
  00206	83 c0 04	 add	 eax, 4
$LN58@Insertion_:

; 7908 :         for (_BidIt _Mid = _First; ++_Mid != _Last;) { // order next element

  00209	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  0020c	89 45 fc	 mov	 DWORD PTR __Mid$1$[ebp], eax
  0020f	3b c1		 cmp	 eax, ecx
  00211	0f 85 0e fe ff
	ff		 jne	 $LL2@Insertion_
  00217	5f		 pop	 edi
  00218	5e		 pop	 esi
$LN51@Insertion_:

; 7921 :             }
; 7922 :         }
; 7923 :     }
; 7924 : 
; 7925 :     return _Last;
; 7926 : }

  00219	8b c1		 mov	 eax, ecx
  0021b	5b		 pop	 ebx
  0021c	8b e5		 mov	 esp, ebp
  0021e	5d		 pop	 ebp
  0021f	c3		 ret	 0
??$_Insertion_sort_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAPAPAVCGraphicThingInstance@@QAPAV1@0UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ENDP ; std::_Insertion_sort_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\Area.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\Area.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\Area.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\Area.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Partition_by_median_guess_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YA?AU?$pair@PAUSCRCWithNumber@CArea@@PAU12@@0@PAUSCRCWithNumber@CArea@@0UCRCNumComp@3@@Z
_TEXT	SEGMENT
tv626 = -12						; size = 4
__Tmp$1$ = -12						; size = 4
tv632 = -8						; size = 4
__Last$1$ = -8						; size = 4
__Gfirst$1$ = -8					; size = 4
tv627 = -4						; size = 4
__Glast$1$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Plast$1$ = 20						; size = 4
__Pred$ = 20						; size = 1
??$_Partition_by_median_guess_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YA?AU?$pair@PAUSCRCWithNumber@CArea@@PAU12@@0@PAUSCRCWithNumber@CArea@@0UCRCNumComp@3@@Z PROC ; std::_Partition_by_median_guess_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>, COMDAT

; 7962 : _CONSTEXPR20 pair<_RanIt, _RanIt> _Partition_by_median_guess_unchecked(_RanIt _First, _RanIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 7963 :     // partition [_First, _Last)
; 7964 :     _RanIt _Mid = _First + ((_Last - _First) >> 1); // shift for codegen

  00007	8b 5d 0c	 mov	 ebx, DWORD PTR __First$[ebp]
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b 7d 10	 mov	 edi, DWORD PTR __Last$[ebp]
  0000f	8b c7		 mov	 eax, edi
  00011	2b c3		 sub	 eax, ebx
  00013	c1 f8 04	 sar	 eax, 4

; 7965 :     _Guess_median_unchecked(_First, _Mid, _Prev_iter(_Last), _Pred);

  00016	8d 4f f8	 lea	 ecx, DWORD PTR [edi-8]
  00019	89 4d f8	 mov	 DWORD PTR __Last$1$[ebp], ecx
  0001c	8d 34 c3	 lea	 esi, DWORD PTR [ebx+eax*8]

; 7948 :     const _Diff _Count = _Last - _First;

  0001f	8b c1		 mov	 eax, ecx
  00021	2b c3		 sub	 eax, ebx
  00023	c1 f8 03	 sar	 eax, 3

; 7949 :     if (40 < _Count) { // Tukey's ninther

  00026	83 f8 28	 cmp	 eax, 40			; 00000028H
  00029	7e 68		 jle	 SHORT $LN67@Partition_

; 7950 :         const _Diff _Step     = (_Count + 1) >> 3; // +1 can't overflow because range was made inclusive in caller
; 7951 :         const _Diff _Two_step = _Step << 1; // note: intentionally discards low-order bit
; 7952 :         _Med3_unchecked(_First, _First + _Step, _First + _Two_step, _Pred);

  0002b	8b 7d 14	 mov	 edi, DWORD PTR __Pred$[ebp]
  0002e	40		 inc	 eax
  0002f	c1 f8 03	 sar	 eax, 3
  00032	8b c8		 mov	 ecx, eax
  00034	c1 e1 04	 shl	 ecx, 4
  00037	57		 push	 edi
  00038	8d 1c c5 00 00
	00 00		 lea	 ebx, DWORD PTR [eax*8]
  0003f	89 4d fc	 mov	 DWORD PTR tv627[ebp], ecx
  00042	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
  00045	8d 14 03	 lea	 edx, DWORD PTR [ebx+eax]
  00048	03 c1		 add	 eax, ecx
  0004a	50		 push	 eax
  0004b	52		 push	 edx
  0004c	ff 75 0c	 push	 DWORD PTR __First$[ebp]
  0004f	89 55 f4	 mov	 DWORD PTR tv626[ebp], edx
  00052	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@00UCRCNumComp@2@@Z ; std::_Med3_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>

; 7953 :         _Med3_unchecked(_Mid - _Step, _Mid, _Mid + _Step, _Pred);

  00057	57		 push	 edi
  00058	8d 04 33	 lea	 eax, DWORD PTR [ebx+esi]
  0005b	50		 push	 eax
  0005c	8b c6		 mov	 eax, esi
  0005e	2b c3		 sub	 eax, ebx
  00060	56		 push	 esi
  00061	50		 push	 eax
  00062	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@00UCRCNumComp@2@@Z ; std::_Med3_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>

; 7954 :         _Med3_unchecked(_Last - _Two_step, _Last - _Step, _Last, _Pred);

  00067	8b 45 f8	 mov	 eax, DWORD PTR __Last$1$[ebp]
  0006a	8b f8		 mov	 edi, eax
  0006c	2b fb		 sub	 edi, ebx
  0006e	8b 5d 14	 mov	 ebx, DWORD PTR __Pred$[ebp]
  00071	53		 push	 ebx
  00072	50		 push	 eax
  00073	2b 45 fc	 sub	 eax, DWORD PTR tv627[ebp]
  00076	57		 push	 edi
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@00UCRCNumComp@2@@Z ; std::_Med3_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>

; 7955 :         _Med3_unchecked(_First + _Step, _Mid, _Last - _Step, _Pred);

  0007d	53		 push	 ebx
  0007e	57		 push	 edi
  0007f	56		 push	 esi
  00080	ff 75 f4	 push	 DWORD PTR tv626[ebp]
  00083	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@00UCRCNumComp@2@@Z ; std::_Med3_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>

; 7956 :     } else {

  00088	8b 7d 10	 mov	 edi, DWORD PTR __Last$[ebp]
  0008b	83 c4 40	 add	 esp, 64			; 00000040H
  0008e	8b 5d 0c	 mov	 ebx, DWORD PTR __First$[ebp]
  00091	eb 0e		 jmp	 SHORT $LN68@Partition_
$LN67@Partition_:

; 7957 :         _Med3_unchecked(_First, _Mid, _Last, _Pred);

  00093	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  00096	51		 push	 ecx
  00097	56		 push	 esi
  00098	53		 push	 ebx
  00099	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@00UCRCNumComp@2@@Z ; std::_Med3_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>
  0009e	83 c4 10	 add	 esp, 16			; 00000010H
$LN68@Partition_:

; 7966 :     _RanIt _Pfirst = _Mid;
; 7967 :     _RanIt _Plast  = _Next_iter(_Pfirst);

  000a1	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  000a4	89 45 14	 mov	 DWORD PTR __Plast$1$[ebp], eax

; 7970 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  000a7	3b de		 cmp	 ebx, esi
  000a9	73 16		 jae	 SHORT $LN98@Partition_
  000ab	0f 1f 44 00 00	 npad	 5
$LL2@Partition_:
; File C:\Marty 5.5\Src-Client\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  000b0	8b 4e fc	 mov	 ecx, DWORD PTR [esi-4]
  000b3	3b 4e 04	 cmp	 ecx, DWORD PTR [esi+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7970 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  000b6	77 09		 ja	 SHORT $LN98@Partition_
  000b8	72 07		 jb	 SHORT $LN98@Partition_

; 7971 :         --_Pfirst;

  000ba	83 ee 08	 sub	 esi, 8
  000bd	3b de		 cmp	 ebx, esi
  000bf	72 ef		 jb	 SHORT $LL2@Partition_
$LN98@Partition_:

; 7974 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  000c1	3b c7		 cmp	 eax, edi
  000c3	73 14		 jae	 SHORT $LN5@Partition_
; File C:\Marty 5.5\Src-Client\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  000c5	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
$LL4@Partition_:
  000c8	39 50 04	 cmp	 DWORD PTR [eax+4], edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7974 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  000cb	77 09		 ja	 SHORT $LN99@Partition_
  000cd	72 07		 jb	 SHORT $LN99@Partition_

; 7975 :         ++_Plast;

  000cf	83 c0 08	 add	 eax, 8
  000d2	3b c7		 cmp	 eax, edi
  000d4	72 f2		 jb	 SHORT $LL4@Partition_
$LN99@Partition_:
  000d6	89 45 14	 mov	 DWORD PTR __Plast$1$[ebp], eax
$LN5@Partition_:

; 7976 :     }
; 7977 : 
; 7978 :     _RanIt _Gfirst = _Plast;
; 7979 :     _RanIt _Glast  = _Pfirst;

  000d9	8b ce		 mov	 ecx, esi
  000db	8b d8		 mov	 ebx, eax
  000dd	89 4d fc	 mov	 DWORD PTR __Glast$1$[ebp], ecx
$LN128@Partition_:

; 7980 : 
; 7981 :     for (;;) { // partition
; 7982 :         for (; _Gfirst < _Last; ++_Gfirst) {

  000e0	89 5d f8	 mov	 DWORD PTR __Gfirst$1$[ebp], ebx
$LL6@Partition_:
  000e3	3b df		 cmp	 ebx, edi
  000e5	73 4d		 jae	 SHORT $LN76@Partition_
$LL11@Partition_:
; File C:\Marty 5.5\Src-Client\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  000e7	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000ea	3b 4b 04	 cmp	 ecx, DWORD PTR [ebx+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7983 :             if (_DEBUG_LT_PRED(_Pred, *_Pfirst, *_Gfirst)) {

  000ed	77 38		 ja	 SHORT $LN9@Partition_

; 7984 :                 continue;
; 7985 :             } else if (_Pred(*_Gfirst, *_Pfirst)) {

  000ef	72 3d		 jb	 SHORT $LN100@Partition_

; 7986 :                 break;
; 7987 :             } else if (_Plast != _Gfirst) {

  000f1	8d 48 08	 lea	 ecx, DWORD PTR [eax+8]
  000f4	89 4d f8	 mov	 DWORD PTR tv632[ebp], ecx
  000f7	3b c3		 cmp	 eax, ebx
  000f9	74 27		 je	 SHORT $LN19@Partition_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

  000fb	8b 10		 mov	 edx, DWORD PTR [eax]
  000fd	8b 78 04	 mov	 edi, DWORD PTR [eax+4]

; 100  :     _Left    = _STD move(_Right);

  00100	8b 03		 mov	 eax, DWORD PTR [ebx]
  00102	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  00105	89 55 f4	 mov	 DWORD PTR __Tmp$1$[ebp], edx
  00108	8b 55 14	 mov	 edx, DWORD PTR __Plast$1$[ebp]
  0010b	89 02		 mov	 DWORD PTR [edx], eax
  0010d	8b c2		 mov	 eax, edx

; 101  :     _Right   = _STD move(_Tmp);

  0010f	8b 55 f4	 mov	 edx, DWORD PTR __Tmp$1$[ebp]
  00112	89 48 04	 mov	 DWORD PTR [eax+4], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7989 :                 ++_Plast;

  00115	8b 45 f8	 mov	 eax, DWORD PTR tv632[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 101  :     _Right   = _STD move(_Tmp);

  00118	89 7b 04	 mov	 DWORD PTR [ebx+4], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7990 :             } else {

  0011b	8b 7d 10	 mov	 edi, DWORD PTR __Last$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 101  :     _Right   = _STD move(_Tmp);

  0011e	89 13		 mov	 DWORD PTR [ebx], edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7990 :             } else {

  00120	eb 02		 jmp	 SHORT $LN126@Partition_
$LN19@Partition_:

; 7991 :                 ++_Plast;

  00122	8b c1		 mov	 eax, ecx
$LN126@Partition_:

; 7980 : 
; 7981 :     for (;;) { // partition
; 7982 :         for (; _Gfirst < _Last; ++_Gfirst) {

  00124	89 45 14	 mov	 DWORD PTR __Plast$1$[ebp], eax
$LN9@Partition_:
  00127	83 c3 08	 add	 ebx, 8
  0012a	3b df		 cmp	 ebx, edi
  0012c	72 b9		 jb	 SHORT $LL11@Partition_
$LN100@Partition_:
  0012e	8b 4d fc	 mov	 ecx, DWORD PTR __Glast$1$[ebp]
  00131	89 5d f8	 mov	 DWORD PTR __Gfirst$1$[ebp], ebx
$LN76@Partition_:

; 7995 :         for (; _First < _Glast; --_Glast) {

  00134	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
  00137	3b c8		 cmp	 ecx, eax
  00139	76 4a		 jbe	 SHORT $LN127@Partition_
  0013b	8d 59 f8	 lea	 ebx, DWORD PTR [ecx-8]
  0013e	66 90		 npad	 2
$LL14@Partition_:
; File C:\Marty 5.5\Src-Client\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  00140	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00143	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7997 :             if (_DEBUG_LT_PRED(_Pred, *_Glast_prev, *_Pfirst)) {

  00146	77 20		 ja	 SHORT $LN12@Partition_

; 7998 :                 continue;
; 7999 :             } else if (_Pred(*_Pfirst, *_Glast_prev)) {

  00148	72 30		 jb	 SHORT $LN102@Partition_

; 8000 :                 break;
; 8001 :             } else if (--_Pfirst != _Glast_prev) {

  0014a	83 ee 08	 sub	 esi, 8
  0014d	3b f3		 cmp	 esi, ebx
  0014f	74 17		 je	 SHORT $LN12@Partition_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

  00151	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  00154	8b 16		 mov	 edx, DWORD PTR [esi]
  00156	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  00159	8b 03		 mov	 eax, DWORD PTR [ebx]
  0015b	89 4e 04	 mov	 DWORD PTR [esi+4], ecx
  0015e	8b 4d fc	 mov	 ecx, DWORD PTR __Glast$1$[ebp]
  00161	89 06		 mov	 DWORD PTR [esi], eax

; 101  :     _Right   = _STD move(_Tmp);

  00163	89 13		 mov	 DWORD PTR [ebx], edx
  00165	89 7b 04	 mov	 DWORD PTR [ebx+4], edi
$LN12@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7995 :         for (; _First < _Glast; --_Glast) {

  00168	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
  0016b	83 e9 08	 sub	 ecx, 8
  0016e	83 eb 08	 sub	 ebx, 8
  00171	89 4d fc	 mov	 DWORD PTR __Glast$1$[ebp], ecx
  00174	3b c1		 cmp	 eax, ecx
  00176	72 c8		 jb	 SHORT $LL14@Partition_

; 7998 :                 continue;
; 7999 :             } else if (_Pred(*_Pfirst, *_Glast_prev)) {

  00178	eb 03		 jmp	 SHORT $LN101@Partition_
$LN102@Partition_:
  0017a	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
$LN101@Partition_:
  0017d	8b 5d f8	 mov	 ebx, DWORD PTR __Gfirst$1$[ebp]

; 8002 :                 swap(*_Pfirst, *_Glast_prev); // intentional ADL
; 8003 :             }
; 8004 :         }
; 8005 : 
; 8006 :         if (_Glast == _First && _Gfirst == _Last) {

  00180	3b c8		 cmp	 ecx, eax
  00182	8b 7d 10	 mov	 edi, DWORD PTR __Last$[ebp]
$LN127@Partition_:
  00185	75 54		 jne	 SHORT $LN27@Partition_
  00187	8b 4d 14	 mov	 ecx, DWORD PTR __Plast$1$[ebp]
  0018a	3b df		 cmp	 ebx, edi
  0018c	0f 84 c9 00 00
	00		 je	 $LN78@Partition_

; 8008 :         }
; 8009 : 
; 8010 :         if (_Glast == _First) { // no room at bottom, rotate pivot upward
; 8011 :             if (_Plast != _Gfirst) {

  00192	3b cb		 cmp	 ecx, ebx
  00194	74 17		 je	 SHORT $LN43@Partition_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

  00196	8b 01		 mov	 eax, DWORD PTR [ecx]
  00198	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0019b	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  0019e	8b 16		 mov	 edx, DWORD PTR [esi]
  001a0	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 101  :     _Right   = _STD move(_Tmp);

  001a3	8b 4d 14	 mov	 ecx, DWORD PTR __Plast$1$[ebp]
  001a6	89 06		 mov	 DWORD PTR [esi], eax
  001a8	89 11		 mov	 DWORD PTR [ecx], edx
  001aa	89 79 04	 mov	 DWORD PTR [ecx+4], edi
$LN43@Partition_:

; 99   :     _Ty _Tmp = _STD move(_Left);

  001ad	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8015 :             ++_Plast;

  001b0	83 c1 08	 add	 ecx, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

  001b3	8b 03		 mov	 eax, DWORD PTR [ebx]
  001b5	8b 16		 mov	 edx, DWORD PTR [esi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8015 :             ++_Plast;

  001b7	89 4d 14	 mov	 DWORD PTR __Plast$1$[ebp], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

  001ba	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  001bd	89 06		 mov	 DWORD PTR [esi], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8018 :             ++_Gfirst;

  001bf	8b 45 14	 mov	 eax, DWORD PTR __Plast$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

  001c2	89 4e 04	 mov	 DWORD PTR [esi+4], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8017 :             ++_Pfirst;

  001c5	83 c6 08	 add	 esi, 8

; 8018 :             ++_Gfirst;

  001c8	8b 4d fc	 mov	 ecx, DWORD PTR __Glast$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 101  :     _Right   = _STD move(_Tmp);

  001cb	89 7b 04	 mov	 DWORD PTR [ebx+4], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8018 :             ++_Gfirst;

  001ce	8b 7d 10	 mov	 edi, DWORD PTR __Last$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 101  :     _Right   = _STD move(_Tmp);

  001d1	89 13		 mov	 DWORD PTR [ebx], edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8018 :             ++_Gfirst;

  001d3	83 c3 08	 add	 ebx, 8
  001d6	e9 05 ff ff ff	 jmp	 $LN128@Partition_
$LN27@Partition_:

; 8019 :         } else if (_Gfirst == _Last) { // no room at top, rotate pivot downward

  001db	83 c1 f8	 add	 ecx, -8			; fffffff8H
  001de	89 4d fc	 mov	 DWORD PTR __Glast$1$[ebp], ecx
  001e1	3b df		 cmp	 ebx, edi
  001e3	75 4e		 jne	 SHORT $LN30@Partition_

; 8020 :             if (--_Glast != --_Pfirst) {

  001e5	83 ee 08	 sub	 esi, 8
  001e8	3b ce		 cmp	 ecx, esi
  001ea	74 1c		 je	 SHORT $LN94@Partition_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

  001ec	8b 5d fc	 mov	 ebx, DWORD PTR __Glast$1$[ebp]
  001ef	8b 11		 mov	 edx, DWORD PTR [ecx]
  001f1	8b 79 04	 mov	 edi, DWORD PTR [ecx+4]
  001f4	8b 06		 mov	 eax, DWORD PTR [esi]
  001f6	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  001f9	89 03		 mov	 DWORD PTR [ebx], eax
  001fb	8b c3		 mov	 eax, ebx
  001fd	8b 5d f8	 mov	 ebx, DWORD PTR __Gfirst$1$[ebp]
  00200	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 101  :     _Right   = _STD move(_Tmp);

  00203	89 16		 mov	 DWORD PTR [esi], edx
  00205	89 7e 04	 mov	 DWORD PTR [esi+4], edi
$LN94@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8024 :             swap(*_Pfirst, *--_Plast); // intentional ADL

  00208	8b 4d 14	 mov	 ecx, DWORD PTR __Plast$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

  0020b	8b 16		 mov	 edx, DWORD PTR [esi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8024 :             swap(*_Pfirst, *--_Plast); // intentional ADL

  0020d	83 e9 08	 sub	 ecx, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

  00210	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8024 :             swap(*_Pfirst, *--_Plast); // intentional ADL

  00213	89 4d 14	 mov	 DWORD PTR __Plast$1$[ebp], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

  00216	8b 01		 mov	 eax, DWORD PTR [ecx]
  00218	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0021b	89 06		 mov	 DWORD PTR [esi], eax

; 101  :     _Right   = _STD move(_Tmp);

  0021d	8b 45 14	 mov	 eax, DWORD PTR __Plast$1$[ebp]
  00220	89 4e 04	 mov	 DWORD PTR [esi+4], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8025 :         } else {

  00223	8b 4d fc	 mov	 ecx, DWORD PTR __Glast$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 101  :     _Right   = _STD move(_Tmp);

  00226	89 78 04	 mov	 DWORD PTR [eax+4], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8025 :         } else {

  00229	8b 7d 10	 mov	 edi, DWORD PTR __Last$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 101  :     _Right   = _STD move(_Tmp);

  0022c	89 10		 mov	 DWORD PTR [eax], edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8025 :         } else {

  0022e	e9 b0 fe ff ff	 jmp	 $LL6@Partition_
$LN30@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

  00233	8b 01		 mov	 eax, DWORD PTR [ecx]
  00235	8b 7b 04	 mov	 edi, DWORD PTR [ebx+4]
  00238	8b 13		 mov	 edx, DWORD PTR [ebx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8026 :             swap(*_Gfirst, *--_Glast); // intentional ADL

  0023a	89 4d fc	 mov	 DWORD PTR __Glast$1$[ebp], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

  0023d	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00240	89 4b 04	 mov	 DWORD PTR [ebx+4], ecx

; 101  :     _Right   = _STD move(_Tmp);

  00243	8b 4d fc	 mov	 ecx, DWORD PTR __Glast$1$[ebp]
  00246	89 03		 mov	 DWORD PTR [ebx], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8027 :             ++_Gfirst;

  00248	83 c3 08	 add	 ebx, 8

; 8029 :     }

  0024b	8b 45 14	 mov	 eax, DWORD PTR __Plast$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 101  :     _Right   = _STD move(_Tmp);

  0024e	89 79 04	 mov	 DWORD PTR [ecx+4], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8029 :     }

  00251	8b 7d 10	 mov	 edi, DWORD PTR __Last$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 101  :     _Right   = _STD move(_Tmp);

  00254	89 11		 mov	 DWORD PTR [ecx], edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8029 :     }

  00256	e9 85 fe ff ff	 jmp	 $LN128@Partition_
$LN78@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

  0025b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8007 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);

  0025e	5f		 pop	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

  0025f	89 30		 mov	 DWORD PTR [eax], esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8007 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);

  00261	5e		 pop	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

  00262	89 48 04	 mov	 DWORD PTR [eax+4], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8007 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);

  00265	5b		 pop	 ebx

; 8030 : }

  00266	8b e5		 mov	 esp, ebp
  00268	5d		 pop	 ebp
  00269	c3		 ret	 0
??$_Partition_by_median_guess_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YA?AU?$pair@PAUSCRCWithNumber@CArea@@PAU12@@0@PAUSCRCWithNumber@CArea@@0UCRCNumComp@3@@Z ENDP ; std::_Partition_by_median_guess_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Sort_unchecked@PAU?$pair@MJ@std@@U?$less@X@2@@std@@YAXPAU?$pair@MJ@0@0HU?$less@X@0@@Z
_TEXT	SEGMENT
__Val$1 = -24						; size = 8
__Val$2 = -24						; size = 8
__Val$3 = -16						; size = 8
__Mid$4 = -16						; size = 8
tv1201 = -12						; size = 4
__Max_sequence_non_leaf$1$ = -8				; size = 4
__Bottom$1$ = -4					; size = 4
$T5 = 8							; size = 4
__Val$1$ = 8						; size = 4
__First$ = 8						; size = 4
tv1210 = 12						; size = 4
__Last$ = 12						; size = 4
__Ideal$ = 16						; size = 4
__Pred$ = 20						; size = 1
??$_Sort_unchecked@PAU?$pair@MJ@std@@U?$less@X@2@@std@@YAXPAU?$pair@MJ@0@0HU?$less@X@0@@Z PROC ; std::_Sort_unchecked<std::pair<float,long> *,std::less<void> >, COMDAT

; 8033 : _CONSTEXPR20 void _Sort_unchecked(_RanIt _First, _RanIt _Last, _Iter_diff_t<_RanIt> _Ideal, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	53		 push	 ebx

; 8034 :     // order [_First, _Last)
; 8035 :     for (;;) {
; 8036 :         if (_Last - _First <= _ISORT_MAX) { // small

  00007	8b 5d 0c	 mov	 ebx, DWORD PTR __Last$[ebp]
  0000a	8b c3		 mov	 eax, ebx
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	8b 7d 08	 mov	 edi, DWORD PTR __First$[ebp]
  00011	2b c7		 sub	 eax, edi
  00013	83 e0 f8	 and	 eax, -8			; fffffff8H
  00016	3d 00 01 00 00	 cmp	 eax, 256		; 00000100H
  0001b	7e 70		 jle	 SHORT $LN106@Sort_unche
  0001d	8b 75 10	 mov	 esi, DWORD PTR __Ideal$[ebp]
$LL2@Sort_unche:

; 8037 :             _Insertion_sort_unchecked(_First, _Last, _Pred);
; 8038 :             return;
; 8039 :         }
; 8040 : 
; 8041 :         if (_Ideal <= 0) { // heap sort if too many divisions

  00020	85 f6		 test	 esi, esi
  00022	0f 8e d6 00 00
	00		 jle	 $LN107@Sort_unche

; 8044 :             return;
; 8045 :         }
; 8046 : 
; 8047 :         // divide and conquer by quicksort
; 8048 :         auto _Mid = _Partition_by_median_guess_unchecked(_First, _Last, _Pred);

  00028	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  0002b	8d 45 f0	 lea	 eax, DWORD PTR __Mid$4[ebp]
  0002e	53		 push	 ebx
  0002f	57		 push	 edi
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 ??$_Partition_by_median_guess_unchecked@PAU?$pair@MJ@std@@U?$less@X@2@@std@@YA?AU?$pair@PAU?$pair@MJ@std@@PAU12@@0@PAU?$pair@MJ@0@0U?$less@X@0@@Z ; std::_Partition_by_median_guess_unchecked<std::pair<float,long> *,std::less<void> >

; 8049 : 
; 8050 :         _Ideal = (_Ideal >> 1) + (_Ideal >> 2); // allow 1.5 log2(N) divisions
; 8051 : 
; 8052 :         if (_Mid.first - _First < _Last - _Mid.second) { // loop on second half

  00036	8b 55 f0	 mov	 edx, DWORD PTR __Mid$4[ebp]
  00039	8b c6		 mov	 eax, esi
  0003b	c1 f8 02	 sar	 eax, 2
  0003e	8b cb		 mov	 ecx, ebx
  00040	8b 5d f4	 mov	 ebx, DWORD PTR __Mid$4[ebp+4]
  00043	83 c4 10	 add	 esp, 16			; 00000010H
  00046	d1 fe		 sar	 esi, 1
  00048	2b cb		 sub	 ecx, ebx
  0004a	03 f0		 add	 esi, eax
  0004c	83 e1 f8	 and	 ecx, -8			; fffffff8H
  0004f	8b c2		 mov	 eax, edx
  00051	2b c7		 sub	 eax, edi
  00053	83 e0 f8	 and	 eax, -8			; fffffff8H
  00056	3b c1		 cmp	 eax, ecx
  00058	8b 45 14	 mov	 eax, DWORD PTR __Pred$[ebp]
  0005b	50		 push	 eax
  0005c	56		 push	 esi
  0005d	7d 0e		 jge	 SHORT $LN7@Sort_unche

; 8053 :             _Sort_unchecked(_First, _Mid.first, _Ideal, _Pred);

  0005f	52		 push	 edx
  00060	57		 push	 edi
  00061	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAU?$pair@MJ@std@@U?$less@X@2@@std@@YAXPAU?$pair@MJ@0@0HU?$less@X@0@@Z ; std::_Sort_unchecked<std::pair<float,long> *,std::less<void> >

; 8054 :             _First = _Mid.second;

  00066	8b fb		 mov	 edi, ebx

; 8055 :         } else { // loop on first half

  00068	8b 5d 0c	 mov	 ebx, DWORD PTR __Last$[ebp]
  0006b	eb 0f		 jmp	 SHORT $LN173@Sort_unche
$LN7@Sort_unche:

; 8056 :             _Sort_unchecked(_Mid.second, _Last, _Ideal, _Pred);

  0006d	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00070	53		 push	 ebx
  00071	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAU?$pair@MJ@std@@U?$less@X@2@@std@@YAXPAU?$pair@MJ@0@0HU?$less@X@0@@Z ; std::_Sort_unchecked<std::pair<float,long> *,std::less<void> >

; 8057 :             _Last = _Mid.first;

  00076	8b 5d f0	 mov	 ebx, DWORD PTR __Mid$4[ebp]
  00079	89 5d 0c	 mov	 DWORD PTR __Last$[ebp], ebx
$LN173@Sort_unche:

; 8034 :     // order [_First, _Last)
; 8035 :     for (;;) {
; 8036 :         if (_Last - _First <= _ISORT_MAX) { // small

  0007c	8b c3		 mov	 eax, ebx
  0007e	83 c4 10	 add	 esp, 16			; 00000010H
  00081	2b c7		 sub	 eax, edi
  00083	83 e0 f8	 and	 eax, -8			; fffffff8H
  00086	3d 00 01 00 00	 cmp	 eax, 256		; 00000100H
  0008b	7f 93		 jg	 SHORT $LL2@Sort_unche
$LN106@Sort_unche:

; 7907 :     if (_First != _Last) {

  0008d	3b fb		 cmp	 edi, ebx
  0008f	0f 84 06 02 00
	00		 je	 $LN87@Sort_unche

; 7908 :         for (_BidIt _Mid = _First; ++_Mid != _Last;) { // order next element

  00095	8d 77 08	 lea	 esi, DWORD PTR [edi+8]
  00098	3b f3		 cmp	 esi, ebx
  0009a	0f 84 fb 01 00
	00		 je	 $LN87@Sort_unche
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 506  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  000a0	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
$LL11@Sort_unche:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7910 :             _Iter_value_t<_BidIt> _Val = _STD move(*_Mid);

  000a3	8b 06		 mov	 eax, DWORD PTR [esi]
  000a5	8b d6		 mov	 edx, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 506  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  000a7	f3 0f 10 07	 movss	 xmm0, DWORD PTR [edi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7910 :             _Iter_value_t<_BidIt> _Val = _STD move(*_Mid);

  000ab	8b 5e 04	 mov	 ebx, DWORD PTR [esi+4]
  000ae	89 45 e8	 mov	 DWORD PTR __Val$2[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 506  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  000b1	f3 0f 10 4d e8	 movss	 xmm1, DWORD PTR __Val$2[ebp]
  000b6	0f 2f c1	 comiss	 xmm0, xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7909 :             _BidIt _Hole               = _Mid;

  000b9	89 4d 08	 mov	 DWORD PTR $T5[ebp], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 506  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  000bc	0f 87 a0 01 00
	00		 ja	 $LN142@Sort_unche
  000c2	0f 2f c8	 comiss	 xmm1, xmm0
  000c5	77 08		 ja	 SHORT $LN18@Sort_unche
  000c7	3b 19		 cmp	 ebx, DWORD PTR [ecx]
  000c9	0f 8c 93 01 00
	00		 jl	 $LN142@Sort_unche
$LN18@Sort_unche:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7916 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

  000cf	8b ce		 mov	 ecx, esi
$LL171@Sort_unche:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 506  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  000d1	f3 0f 10 41 f8	 movss	 xmm0, DWORD PTR [ecx-8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7916 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

  000d6	83 e9 08	 sub	 ecx, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 506  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  000d9	0f 2f c1	 comiss	 xmm0, xmm1
  000dc	77 12		 ja	 SHORT $LN136@Sort_unche
  000de	0f 2f c8	 comiss	 xmm1, xmm0
  000e1	0f 87 6f 01 00
	00		 ja	 $LN144@Sort_unche
  000e7	3b 59 04	 cmp	 ebx, DWORD PTR [ecx+4]
  000ea	0f 8d 66 01 00
	00		 jge	 $LN144@Sort_unche
$LN136@Sort_unche:

; 340  :         first  = _STD forward<_Ty1>(_Right.first);

  000f0	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0

; 341  :         second = _STD forward<_Ty2>(_Right.second);

  000f4	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000f7	89 42 04	 mov	 DWORD PTR [edx+4], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7916 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

  000fa	8b d1		 mov	 edx, ecx
  000fc	eb d3		 jmp	 SHORT $LL171@Sort_unche
$LN107@Sort_unche:

; 6596 :     _Diff _Bottom = _Last - _First;

  000fe	8b cb		 mov	 ecx, ebx
  00100	2b cf		 sub	 ecx, edi
  00102	8b c1		 mov	 eax, ecx
  00104	89 4d f4	 mov	 DWORD PTR tv1201[ebp], ecx
  00107	c1 f8 03	 sar	 eax, 3

; 6597 :     for (_Diff _Hole = _Bottom >> 1; _Hole > 0;) { // shift for codegen

  0010a	8b f0		 mov	 esi, eax
  0010c	89 45 fc	 mov	 DWORD PTR __Bottom$1$[ebp], eax
  0010f	d1 fe		 sar	 esi, 1
  00111	85 f6		 test	 esi, esi
  00113	0f 8e e4 00 00
	00		 jle	 $LN49@Sort_unche
  00119	8d 58 ff	 lea	 ebx, DWORD PTR [eax-1]
  0011c	d1 fb		 sar	 ebx, 1
  0011e	89 5d f8	 mov	 DWORD PTR __Max_sequence_non_leaf$1$[ebp], ebx
$LL48@Sort_unche:

; 6598 :         // reheap top half, bottom to top
; 6599 :         --_Hole;
; 6600 :         _Iter_value_t<_RanIt> _Val = _STD move(*(_First + _Hole));

  00121	8b 4c f7 fc	 mov	 ecx, DWORD PTR [edi+esi*8-4]
  00125	4e		 dec	 esi
  00126	89 4d 08	 mov	 DWORD PTR __Val$1$[ebp], ecx

; 6601 :         _STD _Pop_heap_hole_by_index(_First, _Hole, _Bottom, _STD move(_Val), _Pred);

  00129	8b d6		 mov	 edx, esi

; 6438 :     _Diff _Idx       = _Hole;

  0012b	8b ce		 mov	 ecx, esi

; 6600 :         _Iter_value_t<_RanIt> _Val = _STD move(*(_First + _Hole));

  0012d	8b 04 f7	 mov	 eax, DWORD PTR [edi+esi*8]
  00130	89 45 e8	 mov	 DWORD PTR __Val$1[ebp], eax

; 6443 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  00133	3b f3		 cmp	 esi, ebx
  00135	7d 4d		 jge	 SHORT $LN54@Sort_unche
  00137	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL53@Sort_unche:

; 6444 :         _Idx = 2 * _Idx + 2;

  00140	03 c9		 add	 ecx, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 506  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00142	f3 0f 10 4c cf
	10		 movss	 xmm1, DWORD PTR [edi+ecx*8+16]
  00148	f3 0f 10 44 cf
	08		 movss	 xmm0, DWORD PTR [edi+ecx*8+8]
  0014e	0f 2f c1	 comiss	 xmm0, xmm1
  00151	77 16		 ja	 SHORT $LN123@Sort_unche
  00153	0f 2f c8	 comiss	 xmm1, xmm0
  00156	77 0a		 ja	 SHORT $LN62@Sort_unche
  00158	8b 44 cf 14	 mov	 eax, DWORD PTR [edi+ecx*8+20]
  0015c	3b 44 cf 0c	 cmp	 eax, DWORD PTR [edi+ecx*8+12]
  00160	7c 07		 jl	 SHORT $LN123@Sort_unche
$LN62@Sort_unche:
  00162	b8 02 00 00 00	 mov	 eax, 2
  00167	eb 05		 jmp	 SHORT $LN64@Sort_unche
$LN123@Sort_unche:
  00169	b8 01 00 00 00	 mov	 eax, 1
$LN64@Sort_unche:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6448 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  0016e	03 c8		 add	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 340  :         first  = _STD forward<_Ty1>(_Right.first);

  00170	8b 04 cf	 mov	 eax, DWORD PTR [edi+ecx*8]
  00173	89 04 d7	 mov	 DWORD PTR [edi+edx*8], eax

; 341  :         second = _STD forward<_Ty2>(_Right.second);

  00176	8b 44 cf 04	 mov	 eax, DWORD PTR [edi+ecx*8+4]
  0017a	89 44 d7 04	 mov	 DWORD PTR [edi+edx*8+4], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6449 :         _Hole             = _Idx;

  0017e	8b d1		 mov	 edx, ecx
  00180	3b cb		 cmp	 ecx, ebx
  00182	7c bc		 jl	 SHORT $LL53@Sort_unche
$LN54@Sort_unche:

; 6450 :     }
; 6451 : 
; 6452 :     if (_Idx == _Max_sequence_non_leaf && _Bottom % 2 == 0) { // only child at bottom, move _Hole down to it

  00184	3b d3		 cmp	 edx, ebx
  00186	75 1a		 jne	 SHORT $LN56@Sort_unche
  00188	8b 4d fc	 mov	 ecx, DWORD PTR __Bottom$1$[ebp]
  0018b	f6 c1 01	 test	 cl, 1
  0018e	75 12		 jne	 SHORT $LN56@Sort_unche
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 340  :         first  = _STD forward<_Ty1>(_Right.first);

  00190	8b 44 cf f8	 mov	 eax, DWORD PTR [edi+ecx*8-8]
  00194	89 04 d7	 mov	 DWORD PTR [edi+edx*8], eax

; 341  :         second = _STD forward<_Ty2>(_Right.second);

  00197	8b 44 cf fc	 mov	 eax, DWORD PTR [edi+ecx*8-4]
  0019b	89 44 d7 04	 mov	 DWORD PTR [edi+edx*8+4], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6454 :         _Hole             = _Bottom - 1;

  0019f	8d 51 ff	 lea	 edx, DWORD PTR [ecx-1]
$LN56@Sort_unche:

; 6328 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  001a2	f3 0f 10 4d e8	 movss	 xmm1, DWORD PTR __Val$1[ebp]
  001a7	3b f2		 cmp	 esi, edx
  001a9	7d 35		 jge	 SHORT $LN143@Sort_unche
  001ab	8b 5d 08	 mov	 ebx, DWORD PTR __Val$1$[ebp]
  001ae	66 90		 npad	 2
$LL168@Sort_unche:

; 6327 :     for (_Diff _Idx = (_Hole - 1) >> 1; // shift for codegen

  001b0	8d 4a ff	 lea	 ecx, DWORD PTR [edx-1]
  001b3	d1 f9		 sar	 ecx, 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 506  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  001b5	f3 0f 10 04 cf	 movss	 xmm0, DWORD PTR [edi+ecx*8]
  001ba	0f 2f c8	 comiss	 xmm1, xmm0
  001bd	77 0b		 ja	 SHORT $LN138@Sort_unche
  001bf	0f 2f c1	 comiss	 xmm0, xmm1
  001c2	77 19		 ja	 SHORT $LN145@Sort_unche
  001c4	39 5c cf 04	 cmp	 DWORD PTR [edi+ecx*8+4], ebx
  001c8	7d 13		 jge	 SHORT $LN145@Sort_unche
$LN138@Sort_unche:

; 340  :         first  = _STD forward<_Ty1>(_Right.first);

  001ca	f3 0f 11 04 d7	 movss	 DWORD PTR [edi+edx*8], xmm0

; 341  :         second = _STD forward<_Ty2>(_Right.second);

  001cf	8b 44 cf 04	 mov	 eax, DWORD PTR [edi+ecx*8+4]
  001d3	89 44 d7 04	 mov	 DWORD PTR [edi+edx*8+4], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6332 :         _Hole             = _Idx;

  001d7	8b d1		 mov	 edx, ecx
  001d9	3b f1		 cmp	 esi, ecx
  001db	7c d3		 jl	 SHORT $LL168@Sort_unche
$LN145@Sort_unche:
  001dd	8b 5d f8	 mov	 ebx, DWORD PTR __Max_sequence_non_leaf$1$[ebp]
$LN143@Sort_unche:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 341  :         second = _STD forward<_Ty2>(_Right.second);

  001e0	8b 45 08	 mov	 eax, DWORD PTR __Val$1$[ebp]
  001e3	f3 0f 11 0c d7	 movss	 DWORD PTR [edi+edx*8], xmm1
  001e8	89 44 d7 04	 mov	 DWORD PTR [edi+edx*8+4], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6597 :     for (_Diff _Hole = _Bottom >> 1; _Hole > 0;) { // shift for codegen

  001ec	85 f6		 test	 esi, esi
  001ee	0f 8f 2d ff ff
	ff		 jg	 $LL48@Sort_unche
  001f4	8b 5d 0c	 mov	 ebx, DWORD PTR __Last$[ebp]
  001f7	8b 45 fc	 mov	 eax, DWORD PTR __Bottom$1$[ebp]
  001fa	8b 4d f4	 mov	 ecx, DWORD PTR tv1201[ebp]
$LN49@Sort_unche:

; 6818 :     for (; _Last - _First >= 2; --_Last) {

  001fd	83 f8 02	 cmp	 eax, 2
  00200	0f 8c 95 00 00
	00		 jl	 $LN87@Sort_unche

; 8042 :             _Make_heap_unchecked(_First, _Last, _Pred);
; 8043 :             _Sort_heap_unchecked(_First, _Last, _Pred);

  00206	8d 51 f8	 lea	 edx, DWORD PTR [ecx-8]
  00209	83 c3 f8	 add	 ebx, -8			; fffffff8H
  0020c	89 55 0c	 mov	 DWORD PTR tv1210[ebp], edx
  0020f	90		 npad	 1
$LL169@Sort_unche:

; 6476 :         _Iter_value_t<_RanIt> _Val = _STD move(*_Last);

  00210	8b 03		 mov	 eax, DWORD PTR [ebx]
  00212	8b f2		 mov	 esi, edx
  00214	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]

; 6467 :     _STD _Pop_heap_hole_by_index(

  00217	ff 75 14	 push	 DWORD PTR __Pred$[ebp]

; 6476 :         _Iter_value_t<_RanIt> _Val = _STD move(*_Last);

  0021a	89 45 f0	 mov	 DWORD PTR __Val$3[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 340  :         first  = _STD forward<_Ty1>(_Right.first);

  0021d	8b 07		 mov	 eax, DWORD PTR [edi]
  0021f	89 03		 mov	 DWORD PTR [ebx], eax

; 341  :         second = _STD forward<_Ty2>(_Right.second);

  00221	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00224	89 44 17 04	 mov	 DWORD PTR [edi+edx+4], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6467 :     _STD _Pop_heap_hole_by_index(

  00228	8d 45 f0	 lea	 eax, DWORD PTR __Val$3[ebp]
  0022b	50		 push	 eax

; 6474 :     if (2 <= _Last - _First) {

  0022c	c1 fe 03	 sar	 esi, 3

; 6467 :     _STD _Pop_heap_hole_by_index(

  0022f	56		 push	 esi
  00230	6a 00		 push	 0
  00232	57		 push	 edi

; 6476 :         _Iter_value_t<_RanIt> _Val = _STD move(*_Last);

  00233	89 4d f4	 mov	 DWORD PTR __Val$3[ebp+4], ecx

; 6467 :     _STD _Pop_heap_hole_by_index(

  00236	e8 00 00 00 00	 call	 ??$_Pop_heap_hole_by_index@PAU?$pair@MJ@std@@U12@U?$less@X@2@@std@@YAXPAU?$pair@MJ@0@HH$$QAU10@U?$less@X@0@@Z ; std::_Pop_heap_hole_by_index<std::pair<float,long> *,std::pair<float,long>,std::less<void> >

; 6818 :     for (; _Last - _First >= 2; --_Last) {

  0023b	8b 55 0c	 mov	 edx, DWORD PTR tv1210[ebp]
  0023e	8d 5b f8	 lea	 ebx, DWORD PTR [ebx-8]
  00241	83 ea 08	 sub	 edx, 8

; 6467 :     _STD _Pop_heap_hole_by_index(

  00244	83 c4 14	 add	 esp, 20			; 00000014H

; 6818 :     for (; _Last - _First >= 2; --_Last) {

  00247	89 55 0c	 mov	 DWORD PTR tv1210[ebp], edx
  0024a	83 fe 02	 cmp	 esi, 2
  0024d	7d c1		 jge	 SHORT $LL169@Sort_unche

; 8058 :         }
; 8059 :     }
; 8060 : }

  0024f	5f		 pop	 edi
  00250	5e		 pop	 esi
  00251	5b		 pop	 ebx
  00252	8b e5		 mov	 esp, ebp
  00254	5d		 pop	 ebp
  00255	c3		 ret	 0
$LN144@Sort_unche:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 340  :         first  = _STD forward<_Ty1>(_Right.first);

  00256	f3 0f 11 0a	 movss	 DWORD PTR [edx], xmm1

; 341  :         second = _STD forward<_Ty2>(_Right.second);

  0025a	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  0025d	89 5a 04	 mov	 DWORD PTR [edx+4], ebx
  00260	eb 2d		 jmp	 SHORT $LN46@Sort_unche
$LN142@Sort_unche:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4940 :     while (_First != _Last) {

  00262	3b f7		 cmp	 esi, edi
  00264	74 23		 je	 SHORT $LN30@Sort_unche
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7913 :                 _Move_backward_unchecked(_First, _Mid, ++_Hole);

  00266	8d 56 04	 lea	 edx, DWORD PTR [esi+4]
  00269	0f 1f 80 00 00
	00 00		 npad	 7
$LL172@Sort_unche:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 340  :         first  = _STD forward<_Ty1>(_Right.first);

  00270	8b 42 f4	 mov	 eax, DWORD PTR [edx-12]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4941 :         *--_Dest = _STD move(*--_Last);

  00273	8b ca		 mov	 ecx, edx
  00275	83 ea 08	 sub	 edx, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 340  :         first  = _STD forward<_Ty1>(_Right.first);

  00278	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 341  :         second = _STD forward<_Ty2>(_Right.second);

  0027b	8b 02		 mov	 eax, DWORD PTR [edx]
  0027d	89 01		 mov	 DWORD PTR [ecx], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4940 :     while (_First != _Last) {

  0027f	8d 42 fc	 lea	 eax, DWORD PTR [edx-4]
  00282	3b c7		 cmp	 eax, edi
  00284	75 ea		 jne	 SHORT $LL172@Sort_unche
  00286	8b 4d 08	 mov	 ecx, DWORD PTR $T5[ebp]
$LN30@Sort_unche:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 340  :         first  = _STD forward<_Ty1>(_Right.first);

  00289	f3 0f 11 0f	 movss	 DWORD PTR [edi], xmm1

; 341  :         second = _STD forward<_Ty2>(_Right.second);

  0028d	89 19		 mov	 DWORD PTR [ecx], ebx
$LN46@Sort_unche:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7908 :         for (_BidIt _Mid = _First; ++_Mid != _Last;) { // order next element

  0028f	83 c6 08	 add	 esi, 8
  00292	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  00295	0f 85 08 fe ff
	ff		 jne	 $LL11@Sort_unche
$LN87@Sort_unche:
  0029b	5f		 pop	 edi

; 8058 :         }
; 8059 :     }
; 8060 : }

  0029c	5e		 pop	 esi
  0029d	5b		 pop	 ebx
  0029e	8b e5		 mov	 esp, ebp
  002a0	5d		 pop	 ebp
  002a1	c3		 ret	 0
??$_Sort_unchecked@PAU?$pair@MJ@std@@U?$less@X@2@@std@@YAXPAU?$pair@MJ@0@0HU?$less@X@0@@Z ENDP ; std::_Sort_unchecked<std::pair<float,long> *,std::less<void> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$__std_find_trivial@EE@@YAPAEPAE0E@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 1
??$__std_find_trivial@EE@@YAPAEPAE0E@Z PROC		; __std_find_trivial<unsigned char,unsigned char>, COMDAT

; 114  : _Ty* __std_find_trivial(_Ty* _First, _Ty* _Last, const _TVal _Val) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 115  :     if constexpr (_STD is_pointer_v<_TVal> || _STD is_null_pointer_v<_TVal>) {
; 116  :         return __std_find_trivial(_First, _Last, reinterpret_cast<uintptr_t>(_Val));
; 117  :     } else if constexpr (sizeof(_Ty) == 1) {
; 118  :         return const_cast<_Ty*>(

  00003	ff 75 10	 push	 DWORD PTR __Val$[ebp]
  00006	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00009	ff 75 08	 push	 DWORD PTR __First$[ebp]
  0000c	e8 00 00 00 00	 call	 ___std_find_trivial_1@12

; 119  :             static_cast<const _Ty*>(__std_find_trivial_1(_First, _Last, static_cast<uint8_t>(_Val))));
; 120  :     } else if constexpr (sizeof(_Ty) == 2) {
; 121  :         return const_cast<_Ty*>(
; 122  :             static_cast<const _Ty*>(__std_find_trivial_2(_First, _Last, static_cast<uint16_t>(_Val))));
; 123  :     } else if constexpr (sizeof(_Ty) == 4) {
; 124  :         return const_cast<_Ty*>(
; 125  :             static_cast<const _Ty*>(__std_find_trivial_4(_First, _Last, static_cast<uint32_t>(_Val))));
; 126  :     } else if constexpr (sizeof(_Ty) == 8) {
; 127  :         return const_cast<_Ty*>(
; 128  :             static_cast<const _Ty*>(__std_find_trivial_8(_First, _Last, static_cast<uint64_t>(_Val))));
; 129  :     } else {
; 130  :         static_assert(_STD _Always_false<_Ty>, "Unexpected size");
; 131  :     }
; 132  : }

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$__std_find_trivial@EE@@YAPAEPAE0E@Z ENDP		; __std_find_trivial<unsigned char,unsigned char>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Return_temporary_buffer@UTPatchDrawStruct@CMapOutdoor@@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@@Z
_TEXT	SEGMENT
__Pbuf$ = 8						; size = 4
??$_Return_temporary_buffer@UTPatchDrawStruct@CMapOutdoor@@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@@Z PROC ; std::_Return_temporary_buffer<CMapOutdoor::TPatchDrawStruct>, COMDAT

; 1586 : #ifdef __cpp_aligned_new
; 1587 :     if constexpr (alignof(_Ty) > __STDCPP_DEFAULT_NEW_ALIGNMENT__) {
; 1588 :         ::operator delete(_Pbuf, align_val_t{alignof(_Ty)});
; 1589 :     } else
; 1590 : #endif // __cpp_aligned_new
; 1591 :     {
; 1592 :         ::operator delete(_Pbuf);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
??$_Return_temporary_buffer@UTPatchDrawStruct@CMapOutdoor@@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@@Z ENDP ; std::_Return_temporary_buffer<CMapOutdoor::TPatchDrawStruct>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@AAEPAEQAEABE@Z
_TEXT	SEGMENT
__Newsize$1$ = -8					; size = 4
__Whereoff$1$ = -4					; size = 4
tv512 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@AAEPAEQAEABE@Z PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>, COMDAT
; _this$ = ecx

; 812  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 813  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 814  :         _Alty& _Al        = _Getal();
; 815  :         auto& _My_data    = _Mypair._Myval2;
; 816  :         pointer& _Myfirst = _My_data._Myfirst;
; 817  :         pointer& _Mylast  = _My_data._Mylast;
; 818  : 
; 819  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 820  : 
; 821  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00006	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  00009	57		 push	 edi
  0000a	8b f9		 mov	 edi, ecx
  0000c	8b 0f		 mov	 ecx, DWORD PTR [edi]
  0000e	2b c1		 sub	 eax, ecx
  00010	89 45 fc	 mov	 DWORD PTR __Whereoff$1$[ebp], eax

; 822  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00013	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00016	2b c1		 sub	 eax, ecx

; 823  : 
; 824  :         if (_Oldsize == max_size()) {

  00018	3d ff ff ff 7f	 cmp	 eax, 2147483647		; 7fffffffH
  0001d	0f 84 ef 00 00
	00		 je	 $LN90@Emplace_re

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00023	8b 57 08	 mov	 edx, DWORD PTR [edi+8]
  00026	2b d1		 sub	 edx, ecx
  00028	53		 push	 ebx

; 826  :         }
; 827  : 
; 828  :         const size_type _Newsize     = _Oldsize + 1;

  00029	8d 58 01	 lea	 ebx, DWORD PTR [eax+1]

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  0002c	8b ca		 mov	 ecx, edx
  0002e	d1 e9		 shr	 ecx, 1
  00030	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00035	2b c1		 sub	 eax, ecx

; 826  :         }
; 827  : 
; 828  :         const size_type _Newsize     = _Oldsize + 1;

  00037	89 5d f8	 mov	 DWORD PTR __Newsize$1$[ebp], ebx
  0003a	56		 push	 esi

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  0003b	3b d0		 cmp	 edx, eax
  0003d	76 12		 jbe	 SHORT $LN12@Emplace_re

; 1967 :             return _Max; // geometric growth would overflow

  0003f	be ff ff ff 7f	 mov	 esi, 2147483647		; 7fffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00044	56		 push	 esi
  00045	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  0004a	83 c4 04	 add	 esp, 4
  0004d	8b d8		 mov	 ebx, eax
  0004f	eb 32		 jmp	 SHORT $LN19@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1970 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00051	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00054	8b f3		 mov	 esi, ebx
  00056	3b c3		 cmp	 eax, ebx
  00058	0f 43 f0	 cmovae	 esi, eax
  0005b	81 fe 00 10 00
	00		 cmp	 esi, 4096		; 00001000H
  00061	72 0d		 jb	 SHORT $LN20@Emplace_re

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00063	56		 push	 esi
  00064	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00069	83 c4 04	 add	 esp, 4
  0006c	8b d8		 mov	 ebx, eax
  0006e	eb 13		 jmp	 SHORT $LN19@Emplace_re
$LN20@Emplace_re:

; 240  :         }
; 241  :     }
; 242  : #endif // defined(_M_IX86) || defined(_M_X64)
; 243  : 
; 244  :     if (_Bytes != 0) {

  00070	85 f6		 test	 esi, esi
  00072	74 0d		 je	 SHORT $LN21@Emplace_re

; 87   :         return ::operator new(_Bytes);

  00074	56		 push	 esi
  00075	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0007a	83 c4 04	 add	 esp, 4

; 245  :         return _Traits::_Allocate(_Bytes);

  0007d	8b d8		 mov	 ebx, eax
  0007f	eb 02		 jmp	 SHORT $LN19@Emplace_re
$LN21@Emplace_re:

; 246  :     }
; 247  : 
; 248  :     return nullptr;

  00081	33 db		 xor	 ebx, ebx
$LN19@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 836  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00083	8b 4d fc	 mov	 ecx, DWORD PTR __Whereoff$1$[ebp]
  00086	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  00089	03 cb		 add	 ecx, ebx
  0008b	89 4d fc	 mov	 DWORD PTR tv512[ebp], ecx
  0008e	8a 00		 mov	 al, BYTE PTR [eax]
  00090	88 01		 mov	 BYTE PTR [ecx], al

; 837  :         _Constructed_first = _Newvec + _Whereoff;
; 838  : 
; 839  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00092	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00095	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  00098	8b 17		 mov	 edx, DWORD PTR [edi]
  0009a	3b c1		 cmp	 eax, ecx
  0009c	75 04		 jne	 SHORT $LN4@Emplace_re
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1939 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  0009e	8b c3		 mov	 eax, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 845  :         } else { // provide basic guarantee

  000a0	eb 15		 jmp	 SHORT $LN47@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1939 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000a2	53		 push	 ebx
  000a3	50		 push	 eax
  000a4	52		 push	 edx
  000a5	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAEPAE@std@@YAPAEPAE00@Z ; std::_Copy_memmove<unsigned char *,unsigned char *>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 848  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000aa	8b 45 fc	 mov	 eax, DWORD PTR tv512[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1939 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000ad	83 c4 0c	 add	 esp, 12			; 0000000cH
  000b0	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 848  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000b3	40		 inc	 eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1939 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000b4	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
$LN47@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 848  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000b7	50		 push	 eax
  000b8	51		 push	 ecx
  000b9	52		 push	 edx
  000ba	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAEPAE@std@@YAPAEPAE00@Z ; std::_Copy_memmove<unsigned char *,unsigned char *>

; 2023 :         if (_Myfirst) { // destroy and deallocate old array

  000bf	8b 07		 mov	 eax, DWORD PTR [edi]

; 848  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000c1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2023 :         if (_Myfirst) { // destroy and deallocate old array

  000c4	85 c0		 test	 eax, eax
  000c6	74 29		 je	 SHORT $LN65@Emplace_re

; 2024 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2025 :             _ASAN_VECTOR_REMOVE;
; 2026 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000c8	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  000cb	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000cd	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000d3	72 12		 jb	 SHORT $LN75@Emplace_re

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000d5	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000d8	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000db	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000dd	83 c0 fc	 add	 eax, -4			; fffffffcH
  000e0	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000e3	77 28		 ja	 SHORT $LN72@Emplace_re

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000e5	8b c2		 mov	 eax, edx
$LN75@Emplace_re:

; 265  :         ::operator delete(_Ptr, _Bytes);

  000e7	51		 push	 ecx
  000e8	50		 push	 eax
  000e9	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000ee	83 c4 08	 add	 esp, 8
$LN65@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2030 :         _Mylast  = _Newvec + _Newsize;

  000f1	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 849  :         }
; 850  :         _CATCH_ALL
; 851  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 852  :         _Al.deallocate(_Newvec, _Newcapacity);
; 853  :         _RERAISE;
; 854  :         _CATCH_END
; 855  : 
; 856  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 857  :         return _Newvec + _Whereoff;

  000f4	8b 45 fc	 mov	 eax, DWORD PTR tv512[ebp]

; 2030 :         _Mylast  = _Newvec + _Newsize;

  000f7	03 cb		 add	 ecx, ebx
  000f9	89 1f		 mov	 DWORD PTR [edi], ebx
  000fb	89 4f 04	 mov	 DWORD PTR [edi+4], ecx

; 2031 :         _Myend   = _Newvec + _Newcapacity;

  000fe	8d 0c 33	 lea	 ecx, DWORD PTR [ebx+esi]

; 849  :         }
; 850  :         _CATCH_ALL
; 851  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 852  :         _Al.deallocate(_Newvec, _Newcapacity);
; 853  :         _RERAISE;
; 854  :         _CATCH_END
; 855  : 
; 856  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 857  :         return _Newvec + _Whereoff;

  00101	5e		 pop	 esi
  00102	5b		 pop	 ebx

; 2031 :         _Myend   = _Newvec + _Newcapacity;

  00103	89 4f 08	 mov	 DWORD PTR [edi+8], ecx

; 858  :     }

  00106	5f		 pop	 edi
  00107	8b e5		 mov	 esp, ebp
  00109	5d		 pop	 ebp
  0010a	c2 08 00	 ret	 8
$LN72@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0010d	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN90@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 825  :             _Xlength();

  00112	e8 00 00 00 00	 call	 ?_Xlength@?$vector@EV?$allocator@E@std@@@std@@CAXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Xlength
$LN88@Emplace_re:
  00117	cc		 int	 3
??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@AAEPAEQAEABE@Z ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Emplace_reallocate@U?$pair@MJ@std@@@?$vector@U?$pair@MJ@std@@V?$allocator@U?$pair@MJ@std@@@2@@std@@AAEPAU?$pair@MJ@1@QAU21@$$QAU21@@Z
_TEXT	SEGMENT
__Newsize$1$ = -8					; size = 4
tv606 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@U?$pair@MJ@std@@@?$vector@U?$pair@MJ@std@@V?$allocator@U?$pair@MJ@std@@@2@@std@@AAEPAU?$pair@MJ@1@QAU21@$$QAU21@@Z PROC ; std::vector<std::pair<float,long>,std::allocator<std::pair<float,long> > >::_Emplace_reallocate<std::pair<float,long> >, COMDAT
; _this$ = ecx

; 812  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx

; 813  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 814  :         _Alty& _Al        = _Getal();
; 815  :         auto& _My_data    = _Mypair._Myval2;
; 816  :         pointer& _Myfirst = _My_data._Myfirst;
; 817  :         pointer& _Mylast  = _My_data._Mylast;
; 818  : 
; 819  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 820  : 
; 821  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b d9		 sub	 ebx, ecx

; 822  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c1		 sub	 eax, ecx
  00017	c1 fb 03	 sar	 ebx, 3
  0001a	c1 f8 03	 sar	 eax, 3

; 823  : 
; 824  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 1f	 cmp	 eax, 536870911		; 1fffffffH
  00022	0f 84 0d 01 00
	00		 je	 $LN96@Emplace_re

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 56 08	 mov	 edx, DWORD PTR [esi+8]

; 826  :         }
; 827  : 
; 828  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b d1		 sub	 edx, ecx

; 826  :         }
; 827  : 
; 828  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 fa 03	 sar	 edx, 3

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00036	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH
  0003b	8b ca		 mov	 ecx, edx
  0003d	d1 e9		 shr	 ecx, 1
  0003f	2b c1		 sub	 eax, ecx
  00041	3b d0		 cmp	 edx, eax
  00043	76 15		 jbe	 SHORT $LN12@Emplace_re

; 1967 :             return _Max; // geometric growth would overflow

  00045	b8 f8 ff ff ff	 mov	 eax, -8			; fffffff8H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004a	50		 push	 eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1967 :             return _Max; // geometric growth would overflow

  0004b	89 45 fc	 mov	 DWORD PTR tv606[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b f8		 mov	 edi, eax
  00058	eb 47		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1970 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 70   :         if (_Count > _Max_possible) {

  0005d	8b cf		 mov	 ecx, edi
  0005f	3b c7		 cmp	 eax, edi
  00061	0f 43 c8	 cmovae	 ecx, eax
  00064	81 f9 ff ff ff
	1f		 cmp	 ecx, 536870911		; 1fffffffH
  0006a	0f 87 ca 00 00
	00		 ja	 $LN97@Emplace_re

; 72   :         }
; 73   :     }
; 74   : 
; 75   :     return _Count * _Ty_size;

  00070	8d 04 cd 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*8]
  00077	89 45 fc	 mov	 DWORD PTR tv606[ebp], eax

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0007a	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0007f	72 0d		 jb	 SHORT $LN24@Emplace_re

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00087	83 c4 04	 add	 esp, 4
  0008a	8b f8		 mov	 edi, eax
  0008c	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 240  :         }
; 241  :     }
; 242  : #endif // defined(_M_IX86) || defined(_M_X64)
; 243  : 
; 244  :     if (_Bytes != 0) {

  0008e	85 c0		 test	 eax, eax
  00090	74 0d		 je	 SHORT $LN25@Emplace_re

; 87   :         return ::operator new(_Bytes);

  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00098	83 c4 04	 add	 esp, 4

; 245  :         return _Traits::_Allocate(_Bytes);

  0009b	8b f8		 mov	 edi, eax
  0009d	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 246  :     }
; 247  : 
; 248  :     return nullptr;

  0009f	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 836  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000a1	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a4	8d 1c df	 lea	 ebx, DWORD PTR [edi+ebx*8]
  000a7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a9	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000ac	89 43 04	 mov	 DWORD PTR [ebx+4], eax

; 837  :         _Constructed_first = _Newvec + _Whereoff;
; 838  : 
; 839  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000af	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  000b2	89 0b		 mov	 DWORD PTR [ebx], ecx
  000b4	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  000b7	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000b9	3b c2		 cmp	 eax, edx
  000bb	75 04		 jne	 SHORT $LN4@Emplace_re
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1939 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bd	8b c7		 mov	 eax, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 845  :         } else { // provide basic guarantee

  000bf	eb 14		 jmp	 SHORT $LN52@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1939 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c1	57		 push	 edi
  000c2	50		 push	 eax
  000c3	51		 push	 ecx
  000c4	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAU?$pair@MJ@std@@PAU12@@std@@YAPAU?$pair@MJ@0@PAU10@00@Z ; std::_Copy_memmove<std::pair<float,long> *,std::pair<float,long> *>
  000c9	8b 4d 08	 mov	 ecx, DWORD PTR __Whereptr$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 848  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000cc	8d 43 08	 lea	 eax, DWORD PTR [ebx+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1939 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000cf	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  000d2	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN52@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 848  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000d5	50		 push	 eax
  000d6	52		 push	 edx
  000d7	51		 push	 ecx
  000d8	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAU?$pair@MJ@std@@PAU12@@std@@YAPAU?$pair@MJ@0@PAU10@00@Z ; std::_Copy_memmove<std::pair<float,long> *,std::pair<float,long> *>

; 2023 :         if (_Myfirst) { // destroy and deallocate old array

  000dd	8b 06		 mov	 eax, DWORD PTR [esi]

; 848  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000df	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2023 :         if (_Myfirst) { // destroy and deallocate old array

  000e2	85 c0		 test	 eax, eax
  000e4	74 2c		 je	 SHORT $LN70@Emplace_re

; 2024 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2025 :             _ASAN_VECTOR_REMOVE;
; 2026 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e6	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000e9	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000eb	83 e1 f8	 and	 ecx, -8			; fffffff8H

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000ee	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f4	72 12		 jb	 SHORT $LN80@Emplace_re

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f6	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000f9	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000fc	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fe	83 c0 fc	 add	 eax, -4			; fffffffcH
  00101	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00104	77 2a		 ja	 SHORT $LN77@Emplace_re

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00106	8b c2		 mov	 eax, edx
$LN80@Emplace_re:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00108	51		 push	 ecx
  00109	50		 push	 eax
  0010a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0010f	83 c4 08	 add	 esp, 8
$LN70@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2030 :         _Mylast  = _Newvec + _Newsize;

  00112	8b 45 f8	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  00115	89 3e		 mov	 DWORD PTR [esi], edi
  00117	8d 0c c7	 lea	 ecx, DWORD PTR [edi+eax*8]

; 849  :         }
; 850  :         _CATCH_ALL
; 851  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 852  :         _Al.deallocate(_Newvec, _Newcapacity);
; 853  :         _RERAISE;
; 854  :         _CATCH_END
; 855  : 
; 856  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 857  :         return _Newvec + _Whereoff;

  0011a	8b c3		 mov	 eax, ebx

; 2030 :         _Mylast  = _Newvec + _Newsize;

  0011c	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 2031 :         _Myend   = _Newvec + _Newcapacity;

  0011f	8b 4d fc	 mov	 ecx, DWORD PTR tv606[ebp]
  00122	03 cf		 add	 ecx, edi

; 858  :     }

  00124	5f		 pop	 edi

; 2031 :         _Myend   = _Newvec + _Newcapacity;

  00125	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 858  :     }

  00128	5e		 pop	 esi
  00129	5b		 pop	 ebx
  0012a	8b e5		 mov	 esp, ebp
  0012c	5d		 pop	 ebp
  0012d	c2 08 00	 ret	 8
$LN77@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00130	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN96@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 825  :             _Xlength();

  00135	e8 00 00 00 00	 call	 ?_Xlength@?$vector@U?$pair@MJ@std@@V?$allocator@U?$pair@MJ@std@@@2@@std@@CAXXZ ; std::vector<std::pair<float,long>,std::allocator<std::pair<float,long> > >::_Xlength
$LN97@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 71   :             _Throw_bad_array_new_length(); // multiply overflow

  0013a	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN94@Emplace_re:
  0013f	cc		 int	 3
??$_Emplace_reallocate@U?$pair@MJ@std@@@?$vector@U?$pair@MJ@std@@V?$allocator@U?$pair@MJ@std@@@2@@std@@AAEPAU?$pair@MJ@1@QAU21@$$QAU21@@Z ENDP ; std::vector<std::pair<float,long>,std::allocator<std::pair<float,long> > >::_Emplace_reallocate<std::pair<float,long> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Emplace_reallocate@ABUTPatchDrawStruct@CMapOutdoor@@@?$vector@UTPatchDrawStruct@CMapOutdoor@@V?$allocator@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@AAEPAUTPatchDrawStruct@CMapOutdoor@@QAU23@ABU23@@Z
_TEXT	SEGMENT
__Newsize$1$ = -12					; size = 4
tv635 = -8						; size = 4
tv618 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABUTPatchDrawStruct@CMapOutdoor@@@?$vector@UTPatchDrawStruct@CMapOutdoor@@V?$allocator@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@AAEPAUTPatchDrawStruct@CMapOutdoor@@QAU23@ABU23@@Z PROC ; std::vector<CMapOutdoor::TPatchDrawStruct,std::allocator<CMapOutdoor::TPatchDrawStruct> >::_Emplace_reallocate<CMapOutdoor::TPatchDrawStruct const &>, COMDAT
; _this$ = ecx

; 812  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 813  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 814  :         _Alty& _Al        = _Getal();
; 815  :         auto& _My_data    = _Mypair._Myval2;
; 816  :         pointer& _Myfirst = _My_data._Myfirst;
; 817  :         pointer& _Mylast  = _My_data._Mylast;
; 818  : 
; 819  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 820  : 
; 821  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b d9		 sub	 ebx, ecx

; 822  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c1		 sub	 eax, ecx
  00017	c1 f8 04	 sar	 eax, 4

; 823  : 
; 824  :         if (_Oldsize == max_size()) {

  0001a	3d ff ff ff 0f	 cmp	 eax, 268435455		; 0fffffffH
  0001f	0f 84 13 01 00
	00		 je	 $LN104@Emplace_re

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00025	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]

; 826  :         }
; 827  : 
; 828  :         const size_type _Newsize     = _Oldsize + 1;

  00028	8d 50 01	 lea	 edx, DWORD PTR [eax+1]

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002b	2b f9		 sub	 edi, ecx

; 826  :         }
; 827  : 
; 828  :         const size_type _Newsize     = _Oldsize + 1;

  0002d	89 55 f4	 mov	 DWORD PTR __Newsize$1$[ebp], edx

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00030	c1 ff 04	 sar	 edi, 4

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00033	b8 ff ff ff 0f	 mov	 eax, 268435455		; 0fffffffH
  00038	8b cf		 mov	 ecx, edi
  0003a	d1 e9		 shr	 ecx, 1
  0003c	2b c1		 sub	 eax, ecx
  0003e	3b f8		 cmp	 edi, eax
  00040	76 15		 jbe	 SHORT $LN12@Emplace_re

; 1967 :             return _Max; // geometric growth would overflow

  00042	b9 f0 ff ff ff	 mov	 ecx, -16		; fffffff0H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00047	51		 push	 ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1967 :             return _Max; // geometric growth would overflow

  00048	89 4d f8	 mov	 DWORD PTR tv635[ebp], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004b	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00050	83 c4 04	 add	 esp, 4
  00053	8b f8		 mov	 edi, eax
  00055	eb 44		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1970 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00057	8d 04 39	 lea	 eax, DWORD PTR [ecx+edi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 70   :         if (_Count > _Max_possible) {

  0005a	8b ca		 mov	 ecx, edx
  0005c	3b c2		 cmp	 eax, edx
  0005e	0f 43 c8	 cmovae	 ecx, eax
  00061	81 f9 ff ff ff
	0f		 cmp	 ecx, 268435455		; 0fffffffH
  00067	0f 87 d0 00 00
	00		 ja	 $LN105@Emplace_re

; 72   :         }
; 73   :     }
; 74   : 
; 75   :     return _Count * _Ty_size;

  0006d	c1 e1 04	 shl	 ecx, 4
  00070	89 4d f8	 mov	 DWORD PTR tv635[ebp], ecx

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00073	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00079	72 0d		 jb	 SHORT $LN24@Emplace_re

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0007b	51		 push	 ecx
  0007c	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00081	83 c4 04	 add	 esp, 4
  00084	8b f8		 mov	 edi, eax
  00086	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 240  :         }
; 241  :     }
; 242  : #endif // defined(_M_IX86) || defined(_M_X64)
; 243  : 
; 244  :     if (_Bytes != 0) {

  00088	85 c9		 test	 ecx, ecx
  0008a	74 0d		 je	 SHORT $LN25@Emplace_re

; 87   :         return ::operator new(_Bytes);

  0008c	51		 push	 ecx
  0008d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00092	83 c4 04	 add	 esp, 4

; 245  :         return _Traits::_Allocate(_Bytes);

  00095	8b f8		 mov	 edi, eax
  00097	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 246  :     }
; 247  : 
; 248  :     return nullptr;

  00099	33 ff		 xor	 edi, edi
$LN23@Emplace_re:

; 719  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  0009b	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 836  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0009e	83 e3 f0	 and	 ebx, -16		; fffffff0H
  000a1	8d 0c 3b	 lea	 ecx, DWORD PTR [ebx+edi]

; 839  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000a4	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  000a7	89 4d fc	 mov	 DWORD PTR tv618[ebp], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 719  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  000aa	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  000ad	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 839  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000b0	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000b3	8b 06		 mov	 eax, DWORD PTR [esi]
  000b5	3b d9		 cmp	 ebx, ecx
  000b7	75 07		 jne	 SHORT $LN4@Emplace_re

; 845  :         } else { // provide basic guarantee

  000b9	8b 5d fc	 mov	 ebx, DWORD PTR tv618[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1939 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bc	8b d7		 mov	 edx, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 845  :         } else { // provide basic guarantee

  000be	eb 16		 jmp	 SHORT $LN58@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1939 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c0	57		 push	 edi
  000c1	53		 push	 ebx
  000c2	50		 push	 eax
  000c3	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
  000c8	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000cb	8b c3		 mov	 eax, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 848  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000cd	8b 5d fc	 mov	 ebx, DWORD PTR tv618[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1939 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000d0	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 848  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000d3	8d 53 10	 lea	 edx, DWORD PTR [ebx+16]
$LN58@Emplace_re:
  000d6	52		 push	 edx
  000d7	51		 push	 ecx
  000d8	50		 push	 eax
  000d9	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>

; 2023 :         if (_Myfirst) { // destroy and deallocate old array

  000de	8b 06		 mov	 eax, DWORD PTR [esi]

; 848  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000e0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2023 :         if (_Myfirst) { // destroy and deallocate old array

  000e3	85 c0		 test	 eax, eax
  000e5	74 2c		 je	 SHORT $LN78@Emplace_re

; 2024 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2025 :             _ASAN_VECTOR_REMOVE;
; 2026 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e7	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000ea	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ec	83 e1 f0	 and	 ecx, -16		; fffffff0H

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000ef	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f5	72 12		 jb	 SHORT $LN88@Emplace_re

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f7	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000fa	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000fd	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000ff	83 c0 fc	 add	 eax, -4			; fffffffcH
  00102	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00105	77 2c		 ja	 SHORT $LN85@Emplace_re

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00107	8b c2		 mov	 eax, edx
$LN88@Emplace_re:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00109	51		 push	 ecx
  0010a	50		 push	 eax
  0010b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00110	83 c4 08	 add	 esp, 8
$LN78@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2030 :         _Mylast  = _Newvec + _Newsize;

  00113	8b 45 f4	 mov	 eax, DWORD PTR __Newsize$1$[ebp]

; 2031 :         _Myend   = _Newvec + _Newcapacity;

  00116	8b 4d f8	 mov	 ecx, DWORD PTR tv635[ebp]
  00119	c1 e0 04	 shl	 eax, 4
  0011c	03 c7		 add	 eax, edi
  0011e	89 3e		 mov	 DWORD PTR [esi], edi
  00120	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00123	03 cf		 add	 ecx, edi

; 858  :     }

  00125	5f		 pop	 edi

; 2031 :         _Myend   = _Newvec + _Newcapacity;

  00126	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 849  :         }
; 850  :         _CATCH_ALL
; 851  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 852  :         _Al.deallocate(_Newvec, _Newcapacity);
; 853  :         _RERAISE;
; 854  :         _CATCH_END
; 855  : 
; 856  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 857  :         return _Newvec + _Whereoff;

  00129	8b c3		 mov	 eax, ebx

; 858  :     }

  0012b	5e		 pop	 esi
  0012c	5b		 pop	 ebx
  0012d	8b e5		 mov	 esp, ebp
  0012f	5d		 pop	 ebp
  00130	c2 08 00	 ret	 8
$LN85@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00133	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN104@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 825  :             _Xlength();

  00138	e8 00 00 00 00	 call	 ?_Xlength@?$vector@UTPatchDrawStruct@CMapOutdoor@@V?$allocator@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@CAXXZ ; std::vector<CMapOutdoor::TPatchDrawStruct,std::allocator<CMapOutdoor::TPatchDrawStruct> >::_Xlength
$LN105@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 71   :             _Throw_bad_array_new_length(); // multiply overflow

  0013d	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN102@Emplace_re:
  00142	cc		 int	 3
??$_Emplace_reallocate@ABUTPatchDrawStruct@CMapOutdoor@@@?$vector@UTPatchDrawStruct@CMapOutdoor@@V?$allocator@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@AAEPAUTPatchDrawStruct@CMapOutdoor@@QAU23@ABU23@@Z ENDP ; std::vector<CMapOutdoor::TPatchDrawStruct,std::allocator<CMapOutdoor::TPatchDrawStruct> >::_Emplace_reallocate<CMapOutdoor::TPatchDrawStruct const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Stable_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0H0HUFSortPatchDrawStructWithTerrainNum@2@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Half_count$1$ = 16					; size = 4
__Count$ = 16						; size = 4
__Temp_ptr$ = 20					; size = 4
__Capacity$ = 24					; size = 4
__Pred$ = 28						; size = 1
??$_Stable_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0H0HUFSortPatchDrawStructWithTerrainNum@2@@Z PROC ; std::_Stable_sort_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>, COMDAT

; 8439 :     _Iter_value_t<_BidIt>* const _Temp_ptr, const ptrdiff_t _Capacity, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR __Count$[ebp]

; 8440 :     // sort preserving order of equivalents
; 8441 :     using _Diff = _Iter_diff_t<_BidIt>;
; 8442 :     if (_Count <= _ISORT_MAX) {

  00007	83 fe 20	 cmp	 esi, 32			; 00000020H
  0000a	7f 14		 jg	 SHORT $LN2@Stable_sor

; 8443 :         _Insertion_sort_unchecked(_First, _Last, _Pred); // small

  0000c	ff 75 1c	 push	 DWORD PTR __Pred$[ebp]
  0000f	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00012	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00015	e8 00 00 00 00	 call	 ??$_Insertion_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@QAU12@0UFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Insertion_sort_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  0001a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001d	5e		 pop	 esi

; 8457 :             _First, _Mid, _Last, _Half_count_ceil, _Half_count, _Temp_ptr, _Capacity, _Pred); // merge halves
; 8458 :     }
; 8459 : }

  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
$LN2@Stable_sor:

; 8448 :         if (_Half_count_ceil <= _Capacity) { // temp buffer big enough, sort each half using buffer

  00020	8b 4d 18	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  00023	8b c6		 mov	 eax, esi
  00025	d1 e8		 shr	 eax, 1
  00027	53		 push	 ebx
  00028	8b 5d 14	 mov	 ebx, DWORD PTR __Temp_ptr$[ebp]
  0002b	2b f0		 sub	 esi, eax
  0002d	57		 push	 edi
  0002e	ff 75 1c	 push	 DWORD PTR __Pred$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1394 :         _Where += _Off;

  00031	8b fe		 mov	 edi, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8445 :         const auto _Half_count      = static_cast<_Diff>(_Count >> 1); // shift for codegen

  00033	89 45 10	 mov	 DWORD PTR __Half_count$1$[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1394 :         _Where += _Off;

  00036	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00039	c1 e7 04	 shl	 edi, 4
  0003c	03 f8		 add	 edi, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8448 :         if (_Half_count_ceil <= _Capacity) { // temp buffer big enough, sort each half using buffer

  0003e	3b f1		 cmp	 esi, ecx
  00040	7f 1e		 jg	 SHORT $LN4@Stable_sor

; 8449 :             _Buffered_merge_sort_unchecked(_First, _Mid, _Half_count_ceil, _Temp_ptr, _Pred);

  00042	53		 push	 ebx
  00043	56		 push	 esi
  00044	57		 push	 edi
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ??$_Buffered_merge_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0H0UFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Buffered_merge_sort_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>

; 8450 :             _Buffered_merge_sort_unchecked(_Mid, _Last, _Half_count, _Temp_ptr, _Pred);

  0004b	ff 75 1c	 push	 DWORD PTR __Pred$[ebp]
  0004e	53		 push	 ebx
  0004f	ff 75 10	 push	 DWORD PTR __Half_count$1$[ebp]
  00052	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00055	57		 push	 edi
  00056	e8 00 00 00 00	 call	 ??$_Buffered_merge_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0H0UFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Buffered_merge_sort_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  0005b	83 c4 28	 add	 esp, 40			; 00000028H

; 8451 :         } else { // temp buffer not big enough, divide and conquer

  0005e	eb 20		 jmp	 SHORT $LN5@Stable_sor
$LN4@Stable_sor:

; 8452 :             _Stable_sort_unchecked(_First, _Mid, _Half_count_ceil, _Temp_ptr, _Capacity, _Pred);

  00060	51		 push	 ecx
  00061	53		 push	 ebx
  00062	56		 push	 esi
  00063	57		 push	 edi
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 ??$_Stable_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0H0HUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Stable_sort_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>

; 8453 :             _Stable_sort_unchecked(_Mid, _Last, _Half_count, _Temp_ptr, _Capacity, _Pred);

  0006a	ff 75 1c	 push	 DWORD PTR __Pred$[ebp]
  0006d	ff 75 18	 push	 DWORD PTR __Capacity$[ebp]
  00070	53		 push	 ebx
  00071	ff 75 10	 push	 DWORD PTR __Half_count$1$[ebp]
  00074	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00077	57		 push	 edi
  00078	e8 00 00 00 00	 call	 ??$_Stable_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0H0HUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Stable_sort_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  0007d	83 c4 30	 add	 esp, 48			; 00000030H
$LN5@Stable_sor:

; 8454 :         }
; 8455 : 
; 8456 :         _Buffered_inplace_merge_unchecked(

  00080	ff 75 1c	 push	 DWORD PTR __Pred$[ebp]
  00083	ff 75 18	 push	 DWORD PTR __Capacity$[ebp]
  00086	53		 push	 ebx
  00087	ff 75 10	 push	 DWORD PTR __Half_count$1$[ebp]
  0008a	56		 push	 esi
  0008b	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0008e	57		 push	 edi
  0008f	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00092	e8 00 00 00 00	 call	 ??$_Buffered_inplace_merge_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXPAUTPatchDrawStruct@CMapOutdoor@@00HHQAU12@HUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Buffered_inplace_merge_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  00097	83 c4 20	 add	 esp, 32			; 00000020H
  0009a	5f		 pop	 edi
  0009b	5b		 pop	 ebx
  0009c	5e		 pop	 esi

; 8457 :             _First, _Mid, _Last, _Half_count_ceil, _Half_count, _Temp_ptr, _Capacity, _Pred); // merge halves
; 8458 :     }
; 8459 : }

  0009d	5d		 pop	 ebp
  0009e	c3		 ret	 0
??$_Stable_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0H0HUFSortPatchDrawStructWithTerrainNum@2@@Z ENDP ; std::_Stable_sort_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??1?$_Optimistic_temporary_buffer@UTPatchDrawStruct@CMapOutdoor@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Optimistic_temporary_buffer@UTPatchDrawStruct@CMapOutdoor@@@std@@QAE@XZ PROC ; std::_Optimistic_temporary_buffer<CMapOutdoor::TPatchDrawStruct>::~_Optimistic_temporary_buffer<CMapOutdoor::TPatchDrawStruct>, COMDAT
; _this$ = ecx

; 122  :         if (static_cast<size_t>(_Capacity) > _Optimistic_count) {

  00000	81 79 04 00 01
	00 00		 cmp	 DWORD PTR [ecx+4], 256	; 00000100H
  00007	76 08		 jbe	 SHORT $LN2@Optimistic

; 123  :             _Return_temporary_buffer(_Data);

  00009	ff 31		 push	 DWORD PTR [ecx]
  0000b	e8 00 00 00 00	 call	 ??$_Return_temporary_buffer@UTPatchDrawStruct@CMapOutdoor@@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@@Z ; std::_Return_temporary_buffer<CMapOutdoor::TPatchDrawStruct>
  00010	59		 pop	 ecx
$LN2@Optimistic:

; 124  :         }
; 125  :     }

  00011	c3		 ret	 0
??1?$_Optimistic_temporary_buffer@UTPatchDrawStruct@CMapOutdoor@@@std@@QAE@XZ ENDP ; std::_Optimistic_temporary_buffer<CMapOutdoor::TPatchDrawStruct>::~_Optimistic_temporary_buffer<CMapOutdoor::TPatchDrawStruct>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Insertion_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@QAU12@0UFSortPatchDrawStructWithTerrainNum@2@@Z
_TEXT	SEGMENT
__Val$1$ = -56						; size = 16
__Val$1 = -40						; size = 16
$T2 = -24						; size = 4
$T3 = -24						; size = 4
__Val$1$ = -20						; size = 4
__Hole$1$ = -16						; size = 4
__Val$2$ = -12						; size = 4
__Mid$1$ = -8						; size = 4
_blhsOrderFound$1$ = -1					; size = 1
_blhsOrderFound$1$ = -1					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Pred$ = 16						; size = 1
??$_Insertion_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@QAU12@0UFSortPatchDrawStructWithTerrainNum@2@@Z PROC ; std::_Insertion_sort_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>, COMDAT

; 7905 : _CONSTEXPR20 _BidIt _Insertion_sort_unchecked(const _BidIt _First, const _BidIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 7906 :     // insertion sort [_First, _Last)
; 7907 :     if (_First != _Last) {

  00003	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00006	83 ec 38	 sub	 esp, 56			; 00000038H
  00009	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0000c	3b ca		 cmp	 ecx, edx
  0000e	0f 84 83 02 00
	00		 je	 $LN312@Insertion_

; 7908 :         for (_BidIt _Mid = _First; ++_Mid != _Last;) { // order next element

  00014	8d 41 10	 lea	 eax, DWORD PTR [ecx+16]
  00017	89 45 f8	 mov	 DWORD PTR __Mid$1$[ebp], eax
  0001a	3b c2		 cmp	 eax, edx
  0001c	0f 84 75 02 00
	00		 je	 $LN312@Insertion_
  00022	53		 push	 ebx
  00023	56		 push	 esi
  00024	57		 push	 edi
  00025	8d 79 04	 lea	 edi, DWORD PTR [ecx+4]
  00028	89 7d ec	 mov	 DWORD PTR __Val$1$[ebp], edi
  0002b	0f 1f 44 00 00	 npad	 5
$LL2@Insertion_:

; 7910 :             _Iter_value_t<_BidIt> _Val = _STD move(*_Mid);

  00030	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  00033	89 45 f0	 mov	 DWORD PTR __Hole$1$[ebp], eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 358  : 				DWORD lhsTerrainNumOrder = 0, rhsTerrainNumOrder = 0;

  00036	33 f6		 xor	 esi, esi

; 359  : 				bool blhsOrderFound = false;

  00038	c6 45 ff 00	 mov	 BYTE PTR _blhsOrderFound$1$[ebp], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7910 :             _Iter_value_t<_BidIt> _Val = _STD move(*_Mid);

  0003c	0f 11 45 c8	 movups	 XMMWORD PTR __Val$1$[ebp], xmm0
  00040	0f 11 45 d8	 movups	 XMMWORD PTR __Val$1[ebp], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00044	66 0f 73 d8 04	 psrldq	 xmm0, 4
  00049	66 0f 7e c3	 movd	 ebx, xmm0
  0004d	53		 push	 ebx
  0004e	ff 35 04 00 00
	00		 push	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00054	89 5d f4	 mov	 DWORD PTR __Val$2$[ebp], ebx
  00057	ff 35 00 00 00
	00		 push	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  0005d	e8 00 00 00 00	 call	 ??$__std_find_trivial@EE@@YAPAEPAE0E@Z ; __std_find_trivial<unsigned char,unsigned char>

; 5816 :                 return _Result;

  00062	89 45 e8	 mov	 DWORD PTR $T3[ebp], eax

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00065	0f b6 07	 movzx	 eax, BYTE PTR [edi]
  00068	50		 push	 eax
  00069	ff 35 04 00 00
	00		 push	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  0006f	ff 35 00 00 00
	00		 push	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00075	e8 00 00 00 00	 call	 ??$__std_find_trivial@EE@@YAPAEPAE0E@Z ; __std_find_trivial<unsigned char,unsigned char>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0007a	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00080	83 c4 18	 add	 esp, 24			; 00000018H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00083	8b 55 e8	 mov	 edx, DWORD PTR $T3[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5816 :                 return _Result;

  00086	8b f8		 mov	 edi, eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 365  : 				if (lhsIterator != m_TerrainNumVector.end())

  00088	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0008d	3b d1		 cmp	 edx, ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 365  : 				if (lhsIterator != m_TerrainNumVector.end())

  0008f	74 08		 je	 SHORT $LN13@Insertion_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00091	8b f2		 mov	 esi, edx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 367  : 					blhsOrderFound = true;

  00093	c6 45 ff 01	 mov	 BYTE PTR _blhsOrderFound$1$[ebp], 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00097	2b f0		 sub	 esi, eax
$LN13@Insertion_:
  00099	3b f9		 cmp	 edi, ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 370  : 				if (rhsIterator != m_TerrainNumVector.end())

  0009b	74 04		 je	 SHORT $LN308@Insertion_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0009d	2b f8		 sub	 edi, eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 375  : 				if (!brhsOrderFound)

  0009f	eb 3a		 jmp	 SHORT $LN15@Insertion_
$LN308@Insertion_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  000a1	8b 45 ec	 mov	 eax, DWORD PTR __Val$1$[ebp]
  000a4	3b 0d 08 00 00
	00		 cmp	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  000aa	74 13		 je	 SHORT $LN101@Insertion_

; 797  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  000ac	8a 00		 mov	 al, BYTE PTR [eax]
  000ae	88 01		 mov	 BYTE PTR [ecx], al

; 798  :         } else {
; 799  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 800  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 801  :             _ASAN_VECTOR_RELEASE_GUARD;
; 802  :         }
; 803  : 
; 804  :         _Orphan_range(_Mylast, _Mylast);
; 805  :         _Ty& _Result = *_Mylast;
; 806  :         ++_Mylast;

  000b0	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  000b6	41		 inc	 ecx
  000b7	89 0d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, ecx

; 782  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  000bd	eb 12		 jmp	 SHORT $LN100@Insertion_
$LN101@Insertion_:

; 783  :         }
; 784  : 
; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  000bf	50		 push	 eax
  000c0	51		 push	 ecx
  000c1	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  000c6	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@AAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  000cb	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
$LN100@Insertion_:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 378  : 					rhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  000d1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  000d6	8b f9		 mov	 edi, ecx
  000d8	2b f8		 sub	 edi, eax
  000da	4f		 dec	 edi
$LN15@Insertion_:

; 379  : 				}
; 380  : 				if (!blhsOrderFound)

  000db	80 7d ff 00	 cmp	 BYTE PTR _blhsOrderFound$1$[ebp], 0
  000df	75 58		 jne	 SHORT $LN18@Insertion_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  000e1	53		 push	 ebx
  000e2	51		 push	 ecx
  000e3	50		 push	 eax
  000e4	e8 00 00 00 00	 call	 ??$__std_find_trivial@EE@@YAPAEPAE0E@Z ; __std_find_trivial<unsigned char,unsigned char>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000e9	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5816 :                 return _Result;

  000ef	8b f0		 mov	 esi, eax
  000f1	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000f4	3b f1		 cmp	 esi, ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 383  : 					if (lhsIterator != m_TerrainNumVector.end())

  000f6	74 09		 je	 SHORT $LN309@Insertion_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000f8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  000fd	2b f0		 sub	 esi, eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 388  : 					if (!blhsOrderFound)

  000ff	eb 38		 jmp	 SHORT $LN18@Insertion_
$LN309@Insertion_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  00101	3b 0d 08 00 00
	00		 cmp	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  00107	74 11		 je	 SHORT $LN149@Insertion_

; 797  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  00109	88 19		 mov	 BYTE PTR [ecx], bl

; 798  :         } else {
; 799  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 800  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 801  :             _ASAN_VECTOR_RELEASE_GUARD;
; 802  :         }
; 803  : 
; 804  :         _Orphan_range(_Mylast, _Mylast);
; 805  :         _Ty& _Result = *_Mylast;
; 806  :         ++_Mylast;

  0010b	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00111	41		 inc	 ecx
  00112	89 0d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, ecx

; 782  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00118	eb 15		 jmp	 SHORT $LN148@Insertion_
$LN149@Insertion_:

; 783  :         }
; 784  : 
; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0011a	8d 45 dc	 lea	 eax, DWORD PTR __Val$1[ebp+4]
  0011d	50		 push	 eax
  0011e	51		 push	 ecx
  0011f	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  00124	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@AAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  00129	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
$LN148@Insertion_:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 391  : 						lhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  0012f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00134	8b f1		 mov	 esi, ecx
  00136	2b f0		 sub	 esi, eax
  00138	4e		 dec	 esi
$LN18@Insertion_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7912 :             if (_DEBUG_LT_PRED(_Pred, _Val, *_First)) { // found new earliest element, move to front

  00139	8b 5d f8	 mov	 ebx, DWORD PTR __Mid$1$[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 395  : 				return lhsTerrainNumOrder < rhsTerrainNumOrder;

  0013c	3b f7		 cmp	 esi, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7912 :             if (_DEBUG_LT_PRED(_Pred, _Val, *_First)) { // found new earliest element, move to front

  0013e	73 22		 jae	 SHORT $LN9@Insertion_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4936 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  00140	8d 73 10	 lea	 esi, DWORD PTR [ebx+16]
  00143	56		 push	 esi
  00144	53		 push	 ebx
  00145	8b 5d 08	 mov	 ebx, DWORD PTR __First$[ebp]
  00148	53		 push	 ebx
  00149	e8 00 00 00 00	 call	 ??$_Copy_backward_memmove@PAUTPatchDrawStruct@CMapOutdoor@@PAU12@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@PAU12@00@Z ; std::_Copy_backward_memmove<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::TPatchDrawStruct *>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7914 :                 *_First = _STD move(_Val);

  0014e	0f 10 45 c8	 movups	 xmm0, XMMWORD PTR __Val$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4936 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  00152	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7914 :                 *_First = _STD move(_Val);

  00155	89 75 f8	 mov	 DWORD PTR __Mid$1$[ebp], esi
  00158	8b c6		 mov	 eax, esi
  0015a	0f 11 03	 movups	 XMMWORD PTR [ebx], xmm0

; 7915 :             } else { // look for insertion point after first

  0015d	e9 1e 01 00 00	 jmp	 $LN10@Insertion_
$LN9@Insertion_:

; 7916 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

  00162	83 c3 04	 add	 ebx, 4
$LL7@Insertion_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00165	ff 75 f4	 push	 DWORD PTR __Val$2$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7916 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

  00168	83 eb 10	 sub	 ebx, 16			; 00000010H
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 359  : 				bool blhsOrderFound = false;

  0016b	c6 45 ff 00	 mov	 BYTE PTR _blhsOrderFound$1$[ebp], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  0016f	51		 push	 ecx
  00170	50		 push	 eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 358  : 				DWORD lhsTerrainNumOrder = 0, rhsTerrainNumOrder = 0;

  00171	33 f6		 xor	 esi, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00173	e8 00 00 00 00	 call	 ??$__std_find_trivial@EE@@YAPAEPAE0E@Z ; __std_find_trivial<unsigned char,unsigned char>

; 5816 :                 return _Result;

  00178	89 45 e8	 mov	 DWORD PTR $T2[ebp], eax

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  0017b	0f b6 03	 movzx	 eax, BYTE PTR [ebx]
  0017e	50		 push	 eax
  0017f	ff 35 04 00 00
	00		 push	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00185	ff 35 00 00 00
	00		 push	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  0018b	e8 00 00 00 00	 call	 ??$__std_find_trivial@EE@@YAPAEPAE0E@Z ; __std_find_trivial<unsigned char,unsigned char>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00190	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00196	83 c4 18	 add	 esp, 24			; 00000018H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00199	8b 55 e8	 mov	 edx, DWORD PTR $T2[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5816 :                 return _Result;

  0019c	8b f8		 mov	 edi, eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 365  : 				if (lhsIterator != m_TerrainNumVector.end())

  0019e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001a3	3b d1		 cmp	 edx, ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 365  : 				if (lhsIterator != m_TerrainNumVector.end())

  001a5	74 08		 je	 SHORT $LN160@Insertion_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001a7	8b f2		 mov	 esi, edx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 367  : 					blhsOrderFound = true;

  001a9	c6 45 ff 01	 mov	 BYTE PTR _blhsOrderFound$1$[ebp], 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001ad	2b f0		 sub	 esi, eax
$LN160@Insertion_:
  001af	3b f9		 cmp	 edi, ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 370  : 				if (rhsIterator != m_TerrainNumVector.end())

  001b1	74 04		 je	 SHORT $LN310@Insertion_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001b3	2b f8		 sub	 edi, eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 375  : 				if (!brhsOrderFound)

  001b5	eb 37		 jmp	 SHORT $LN162@Insertion_
$LN310@Insertion_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  001b7	3b 0d 08 00 00
	00		 cmp	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  001bd	74 13		 je	 SHORT $LN248@Insertion_

; 797  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  001bf	8a 03		 mov	 al, BYTE PTR [ebx]
  001c1	88 01		 mov	 BYTE PTR [ecx], al

; 798  :         } else {
; 799  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 800  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 801  :             _ASAN_VECTOR_RELEASE_GUARD;
; 802  :         }
; 803  : 
; 804  :         _Orphan_range(_Mylast, _Mylast);
; 805  :         _Ty& _Result = *_Mylast;
; 806  :         ++_Mylast;

  001c3	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  001c9	41		 inc	 ecx
  001ca	89 0d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, ecx

; 782  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  001d0	eb 12		 jmp	 SHORT $LN247@Insertion_
$LN248@Insertion_:

; 783  :         }
; 784  : 
; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  001d2	53		 push	 ebx
  001d3	51		 push	 ecx
  001d4	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  001d9	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@AAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  001de	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
$LN247@Insertion_:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 378  : 					rhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  001e4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  001e9	8b f9		 mov	 edi, ecx
  001eb	2b f8		 sub	 edi, eax
  001ed	4f		 dec	 edi
$LN162@Insertion_:

; 379  : 				}
; 380  : 				if (!blhsOrderFound)

  001ee	80 7d ff 00	 cmp	 BYTE PTR _blhsOrderFound$1$[ebp], 0
  001f2	75 58		 jne	 SHORT $LN165@Insertion_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  001f4	ff 75 f4	 push	 DWORD PTR __Val$2$[ebp]
  001f7	51		 push	 ecx
  001f8	50		 push	 eax
  001f9	e8 00 00 00 00	 call	 ??$__std_find_trivial@EE@@YAPAEPAE0E@Z ; __std_find_trivial<unsigned char,unsigned char>

; 5816 :                 return _Result;

  001fe	8b f0		 mov	 esi, eax
  00200	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00203	a1 04 00 00 00	 mov	 eax, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00208	3b f0		 cmp	 esi, eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 383  : 					if (lhsIterator != m_TerrainNumVector.end())

  0020a	74 08		 je	 SHORT $LN311@Insertion_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0020c	2b 35 00 00 00
	00		 sub	 esi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 388  : 					if (!blhsOrderFound)

  00212	eb 38		 jmp	 SHORT $LN165@Insertion_
$LN311@Insertion_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  00214	3b 05 08 00 00
	00		 cmp	 eax, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  0021a	74 14		 je	 SHORT $LN296@Insertion_

; 797  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  0021c	8b 4d f4	 mov	 ecx, DWORD PTR __Val$2$[ebp]
  0021f	88 08		 mov	 BYTE PTR [eax], cl

; 798  :         } else {
; 799  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 800  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 801  :             _ASAN_VECTOR_RELEASE_GUARD;
; 802  :         }
; 803  : 
; 804  :         _Orphan_range(_Mylast, _Mylast);
; 805  :         _Ty& _Result = *_Mylast;
; 806  :         ++_Mylast;

  00221	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00227	46		 inc	 esi
  00228	89 35 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, esi

; 782  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0022e	eb 15		 jmp	 SHORT $LN295@Insertion_
$LN296@Insertion_:

; 783  :         }
; 784  : 
; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00230	8d 4d dc	 lea	 ecx, DWORD PTR __Val$1[ebp+4]
  00233	51		 push	 ecx
  00234	50		 push	 eax
  00235	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector
  0023a	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABE@?$vector@EV?$allocator@E@std@@@std@@AAEPAEQAEABE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Emplace_reallocate<unsigned char const &>
  0023f	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
$LN295@Insertion_:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 391  : 						lhsTerrainNumOrder = m_TerrainNumVector.size() -1;

  00245	2b 35 00 00 00
	00		 sub	 esi, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  0024b	4e		 dec	 esi
$LN165@Insertion_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7916 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

  0024c	8b 4d f0	 mov	 ecx, DWORD PTR __Hole$1$[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 395  : 				return lhsTerrainNumOrder < rhsTerrainNumOrder;

  0024f	3b f7		 cmp	 esi, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7916 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

  00251	73 1d		 jae	 SHORT $LN6@Insertion_

; 7917 :                     *_Hole = _STD move(*_Prev); // move hole down

  00253	0f 10 43 fc	 movups	 xmm0, XMMWORD PTR [ebx-4]
  00257	8d 43 fc	 lea	 eax, DWORD PTR [ebx-4]
  0025a	89 45 f0	 mov	 DWORD PTR __Hole$1$[ebp], eax
  0025d	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
  00260	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00266	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  0026b	e9 f5 fe ff ff	 jmp	 $LL7@Insertion_
$LN6@Insertion_:

; 7918 :                 }
; 7919 : 
; 7920 :                 *_Hole = _STD move(_Val); // insert element in hole

  00270	8b 45 f8	 mov	 eax, DWORD PTR __Mid$1$[ebp]
  00273	0f 10 45 c8	 movups	 xmm0, XMMWORD PTR __Val$1$[ebp]
  00277	83 c0 10	 add	 eax, 16			; 00000010H
  0027a	89 45 f8	 mov	 DWORD PTR __Mid$1$[ebp], eax
  0027d	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
$LN10@Insertion_:

; 7908 :         for (_BidIt _Mid = _First; ++_Mid != _Last;) { // order next element

  00280	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00283	8b 7d ec	 mov	 edi, DWORD PTR __Val$1$[ebp]
  00286	3b c1		 cmp	 eax, ecx
  00288	0f 85 a2 fd ff
	ff		 jne	 $LL2@Insertion_
  0028e	5f		 pop	 edi
  0028f	5e		 pop	 esi
  00290	5b		 pop	 ebx

; 7921 :             }
; 7922 :         }
; 7923 :     }
; 7924 : 
; 7925 :     return _Last;

  00291	8b c1		 mov	 eax, ecx

; 7926 : }

  00293	8b e5		 mov	 esp, ebp
  00295	5d		 pop	 ebp
  00296	c3		 ret	 0
$LN312@Insertion_:
  00297	8b c2		 mov	 eax, edx
  00299	8b e5		 mov	 esp, ebp
  0029b	5d		 pop	 ebp
  0029c	c3		 ret	 0
??$_Insertion_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@QAU12@0UFSortPatchDrawStructWithTerrainNum@2@@Z ENDP ; std::_Insertion_sort_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Sort_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@0HUCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z
_TEXT	SEGMENT
__Mid$1 = -8						; size = 8
__First$ = 8						; size = 4
__Val$2 = 12						; size = 4
__Last$ = 12						; size = 4
__Ideal$ = 16						; size = 4
__Pred$ = 20						; size = 1
??$_Sort_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@0HUCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z PROC ; std::_Sort_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>, COMDAT

; 8033 : _CONSTEXPR20 void _Sort_unchecked(_RanIt _First, _RanIt _Last, _Iter_diff_t<_RanIt> _Ideal, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 8034 :     // order [_First, _Last)
; 8035 :     for (;;) {
; 8036 :         if (_Last - _First <= _ISORT_MAX) { // small

  00008	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  0000b	8b c6		 mov	 eax, esi
  0000d	57		 push	 edi
  0000e	8b 7d 08	 mov	 edi, DWORD PTR __First$[ebp]
  00011	2b c7		 sub	 eax, edi
  00013	83 e0 fc	 and	 eax, -4			; fffffffcH
  00016	3d 80 00 00 00	 cmp	 eax, 128		; 00000080H
  0001b	8b 45 14	 mov	 eax, DWORD PTR __Pred$[ebp]
  0001e	7e 67		 jle	 SHORT $LN23@Sort_unche
  00020	8b 5d 10	 mov	 ebx, DWORD PTR __Ideal$[ebp]
$LL2@Sort_unche:

; 8038 :             return;
; 8039 :         }
; 8040 : 
; 8041 :         if (_Ideal <= 0) { // heap sort if too many divisions

  00023	50		 push	 eax
  00024	56		 push	 esi
  00025	57		 push	 edi
  00026	85 db		 test	 ebx, ebx
  00028	7e 6f		 jle	 SHORT $LN24@Sort_unche

; 8043 :             _Sort_heap_unchecked(_First, _Last, _Pred);
; 8044 :             return;
; 8045 :         }
; 8046 : 
; 8047 :         // divide and conquer by quicksort
; 8048 :         auto _Mid = _Partition_by_median_guess_unchecked(_First, _Last, _Pred);

  0002a	8d 45 f8	 lea	 eax, DWORD PTR __Mid$1[ebp]
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ??$_Partition_by_median_guess_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YA?AU?$pair@PAPAVCGraphicThingInstance@@PAPAV1@@0@PAPAVCGraphicThingInstance@@0UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ; std::_Partition_by_median_guess_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>

; 8049 : 
; 8050 :         _Ideal = (_Ideal >> 1) + (_Ideal >> 2); // allow 1.5 log2(N) divisions
; 8051 : 
; 8052 :         if (_Mid.first - _First < _Last - _Mid.second) { // loop on second half

  00033	8b 55 fc	 mov	 edx, DWORD PTR __Mid$1[ebp+4]
  00036	8b c3		 mov	 eax, ebx
  00038	c1 f8 02	 sar	 eax, 2
  0003b	8b ce		 mov	 ecx, esi
  0003d	d1 fb		 sar	 ebx, 1
  0003f	83 c4 10	 add	 esp, 16			; 00000010H
  00042	03 d8		 add	 ebx, eax
  00044	2b ca		 sub	 ecx, edx
  00046	8b 45 f8	 mov	 eax, DWORD PTR __Mid$1[ebp]
  00049	83 e1 fc	 and	 ecx, -4			; fffffffcH
  0004c	2b c7		 sub	 eax, edi
  0004e	83 e0 fc	 and	 eax, -4			; fffffffcH
  00051	3b c1		 cmp	 eax, ecx
  00053	8b 45 14	 mov	 eax, DWORD PTR __Pred$[ebp]
  00056	50		 push	 eax
  00057	53		 push	 ebx
  00058	7d 0f		 jge	 SHORT $LN7@Sort_unche

; 8053 :             _Sort_unchecked(_First, _Mid.first, _Ideal, _Pred);

  0005a	8b 45 f8	 mov	 eax, DWORD PTR __Mid$1[ebp]
  0005d	50		 push	 eax
  0005e	57		 push	 edi
  0005f	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@0HUCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ; std::_Sort_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>

; 8054 :             _First = _Mid.second;

  00064	8b 7d fc	 mov	 edi, DWORD PTR __Mid$1[ebp+4]

; 8055 :         } else { // loop on first half

  00067	eb 0a		 jmp	 SHORT $LN37@Sort_unche
$LN7@Sort_unche:

; 8056 :             _Sort_unchecked(_Mid.second, _Last, _Ideal, _Pred);

  00069	56		 push	 esi
  0006a	52		 push	 edx
  0006b	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@0HUCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ; std::_Sort_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>

; 8057 :             _Last = _Mid.first;

  00070	8b 75 f8	 mov	 esi, DWORD PTR __Mid$1[ebp]
$LN37@Sort_unche:

; 8034 :     // order [_First, _Last)
; 8035 :     for (;;) {
; 8036 :         if (_Last - _First <= _ISORT_MAX) { // small

  00073	8b c6		 mov	 eax, esi
  00075	83 c4 10	 add	 esp, 16			; 00000010H
  00078	2b c7		 sub	 eax, edi
  0007a	83 e0 fc	 and	 eax, -4			; fffffffcH
  0007d	3d 80 00 00 00	 cmp	 eax, 128		; 00000080H
  00082	8b 45 14	 mov	 eax, DWORD PTR __Pred$[ebp]
  00085	7f 9c		 jg	 SHORT $LL2@Sort_unche
$LN23@Sort_unche:

; 8037 :             _Insertion_sort_unchecked(_First, _Last, _Pred);

  00087	50		 push	 eax
  00088	56		 push	 esi
  00089	57		 push	 edi
  0008a	e8 00 00 00 00	 call	 ??$_Insertion_sort_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAPAPAVCGraphicThingInstance@@QAPAV1@0UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ; std::_Insertion_sort_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>
  0008f	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN12@Sort_unche:

; 8058 :         }
; 8059 :     }
; 8060 : }

  00092	5f		 pop	 edi
  00093	5e		 pop	 esi
  00094	5b		 pop	 ebx
  00095	8b e5		 mov	 esp, ebp
  00097	5d		 pop	 ebp
  00098	c3		 ret	 0
$LN24@Sort_unche:

; 8042 :             _Make_heap_unchecked(_First, _Last, _Pred);

  00099	e8 00 00 00 00	 call	 ??$_Make_heap_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@0UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ; std::_Make_heap_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>

; 6818 :     for (; _Last - _First >= 2; --_Last) {

  0009e	2b f7		 sub	 esi, edi

; 8042 :             _Make_heap_unchecked(_First, _Last, _Pred);

  000a0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 6818 :     for (; _Last - _First >= 2; --_Last) {

  000a3	8b c6		 mov	 eax, esi
  000a5	83 e0 fc	 and	 eax, -4			; fffffffcH
  000a8	83 f8 08	 cmp	 eax, 8
  000ab	7c e5		 jl	 SHORT $LN12@Sort_unche
  000ad	0f 1f 00	 npad	 3
$LL13@Sort_unche:

; 6476 :         _Iter_value_t<_RanIt> _Val = _STD move(*_Last);

  000b0	8b 44 37 fc	 mov	 eax, DWORD PTR [edi+esi-4]

; 6467 :     _STD _Pop_heap_hole_by_index(

  000b4	ff 75 14	 push	 DWORD PTR __Pred$[ebp]

; 6476 :         _Iter_value_t<_RanIt> _Val = _STD move(*_Last);

  000b7	89 45 0c	 mov	 DWORD PTR __Val$2[ebp], eax

; 6465 :     *_Dest      = _STD move(*_First);

  000ba	8b 07		 mov	 eax, DWORD PTR [edi]
  000bc	89 44 37 fc	 mov	 DWORD PTR [edi+esi-4], eax

; 6466 :     using _Diff = _Iter_diff_t<_RanIt>;
; 6467 :     _STD _Pop_heap_hole_by_index(

  000c0	8d 45 0c	 lea	 eax, DWORD PTR __Val$2[ebp]
  000c3	50		 push	 eax
  000c4	83 c6 fc	 add	 esi, -4			; fffffffcH
  000c7	8b c6		 mov	 eax, esi
  000c9	c1 f8 02	 sar	 eax, 2
  000cc	50		 push	 eax
  000cd	6a 00		 push	 0
  000cf	57		 push	 edi
  000d0	e8 00 00 00 00	 call	 ??$_Pop_heap_hole_by_index@PAPAVCGraphicThingInstance@@PAV1@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@HH$$QAPAV1@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ; std::_Pop_heap_hole_by_index<CGraphicThingInstance * *,CGraphicThingInstance *,CMapOutdoor_LessThingInstancePtrRenderOrder>

; 6818 :     for (; _Last - _First >= 2; --_Last) {

  000d5	8b c6		 mov	 eax, esi

; 6467 :     _STD _Pop_heap_hole_by_index(

  000d7	83 c4 14	 add	 esp, 20			; 00000014H

; 6818 :     for (; _Last - _First >= 2; --_Last) {

  000da	83 e0 fc	 and	 eax, -4			; fffffffcH
  000dd	83 f8 08	 cmp	 eax, 8
  000e0	7d ce		 jge	 SHORT $LL13@Sort_unche

; 8058 :         }
; 8059 :     }
; 8060 : }

  000e2	5f		 pop	 edi
  000e3	5e		 pop	 esi
  000e4	5b		 pop	 ebx
  000e5	8b e5		 mov	 esp, ebp
  000e7	5d		 pop	 ebp
  000e8	c3		 ret	 0
??$_Sort_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@0HUCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ENDP ; std::_Sort_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\Area.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\Area.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\Area.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\Area.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\Area.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Sort_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@0HUCRCNumComp@2@@Z
_TEXT	SEGMENT
__Val$1 = -24						; size = 8
__Mid$2 = -24						; size = 8
__Val$2$ = -20						; size = 4
tv873 = -16						; size = 4
__Hole$1$ = -12						; size = 4
__Val$2$ = -8						; size = 4
__Val$1$ = -8						; size = 4
__Bottom$1$ = -4					; size = 4
__Val$1$ = -4						; size = 4
__Max_sequence_non_leaf$1$ = 8				; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ideal$ = 16						; size = 4
__Pred$ = 20						; size = 1
??$_Sort_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@0HUCRCNumComp@2@@Z PROC ; std::_Sort_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>, COMDAT

; 8033 : _CONSTEXPR20 void _Sort_unchecked(_RanIt _First, _RanIt _Last, _Iter_diff_t<_RanIt> _Ideal, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 8034 :     // order [_First, _Last)
; 8035 :     for (;;) {
; 8036 :         if (_Last - _First <= _ISORT_MAX) { // small

  00003	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00006	83 ec 18	 sub	 esp, 24			; 00000018H
  00009	8b c2		 mov	 eax, edx
  0000b	53		 push	 ebx
  0000c	56		 push	 esi
  0000d	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00010	2b c6		 sub	 eax, esi
  00012	83 e0 f8	 and	 eax, -8			; fffffff8H
  00015	57		 push	 edi
  00016	3d 00 01 00 00	 cmp	 eax, 256		; 00000100H
  0001b	7e 75		 jle	 SHORT $LN67@Sort_unche
  0001d	8b 7d 10	 mov	 edi, DWORD PTR __Ideal$[ebp]
$LL2@Sort_unche:

; 8037 :             _Insertion_sort_unchecked(_First, _Last, _Pred);
; 8038 :             return;
; 8039 :         }
; 8040 : 
; 8041 :         if (_Ideal <= 0) { // heap sort if too many divisions

  00020	85 ff		 test	 edi, edi
  00022	0f 8e b3 00 00
	00		 jle	 $LN68@Sort_unche

; 8042 :             _Make_heap_unchecked(_First, _Last, _Pred);
; 8043 :             _Sort_heap_unchecked(_First, _Last, _Pred);
; 8044 :             return;
; 8045 :         }
; 8046 : 
; 8047 :         // divide and conquer by quicksort
; 8048 :         auto _Mid = _Partition_by_median_guess_unchecked(_First, _Last, _Pred);

  00028	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  0002b	8d 45 e8	 lea	 eax, DWORD PTR __Mid$2[ebp]
  0002e	52		 push	 edx
  0002f	56		 push	 esi
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 ??$_Partition_by_median_guess_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YA?AU?$pair@PAUSCRCWithNumber@CArea@@PAU12@@0@PAUSCRCWithNumber@CArea@@0UCRCNumComp@3@@Z ; std::_Partition_by_median_guess_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>

; 8049 : 
; 8050 :         _Ideal = (_Ideal >> 1) + (_Ideal >> 2); // allow 1.5 log2(N) divisions
; 8051 : 
; 8052 :         if (_Mid.first - _First < _Last - _Mid.second) { // loop on second half

  00036	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00039	8b c7		 mov	 eax, edi
  0003b	8b 5d ec	 mov	 ebx, DWORD PTR __Mid$2[ebp+4]
  0003e	8b ca		 mov	 ecx, edx
  00040	c1 f8 02	 sar	 eax, 2
  00043	83 c4 10	 add	 esp, 16			; 00000010H
  00046	d1 ff		 sar	 edi, 1
  00048	2b cb		 sub	 ecx, ebx
  0004a	03 f8		 add	 edi, eax
  0004c	83 e1 f8	 and	 ecx, -8			; fffffff8H
  0004f	8b 45 e8	 mov	 eax, DWORD PTR __Mid$2[ebp]
  00052	2b c6		 sub	 eax, esi
  00054	83 e0 f8	 and	 eax, -8			; fffffff8H
  00057	3b c1		 cmp	 eax, ecx
  00059	8b 45 14	 mov	 eax, DWORD PTR __Pred$[ebp]
  0005c	50		 push	 eax
  0005d	57		 push	 edi
  0005e	7d 14		 jge	 SHORT $LN7@Sort_unche

; 8053 :             _Sort_unchecked(_First, _Mid.first, _Ideal, _Pred);

  00060	8b 55 e8	 mov	 edx, DWORD PTR __Mid$2[ebp]
  00063	52		 push	 edx
  00064	56		 push	 esi
  00065	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@0HUCRCNumComp@2@@Z ; std::_Sort_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>

; 8054 :             _First = _Mid.second;
; 8055 :         } else { // loop on first half

  0006a	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  0006d	8b f3		 mov	 esi, ebx
  0006f	89 75 08	 mov	 DWORD PTR __First$[ebp], esi
  00072	eb 0d		 jmp	 SHORT $LN109@Sort_unche
$LN7@Sort_unche:

; 8056 :             _Sort_unchecked(_Mid.second, _Last, _Ideal, _Pred);

  00074	52		 push	 edx
  00075	53		 push	 ebx
  00076	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@0HUCRCNumComp@2@@Z ; std::_Sort_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>

; 8057 :             _Last = _Mid.first;

  0007b	8b 55 e8	 mov	 edx, DWORD PTR __Mid$2[ebp]
  0007e	89 55 0c	 mov	 DWORD PTR __Last$[ebp], edx
$LN109@Sort_unche:

; 8034 :     // order [_First, _Last)
; 8035 :     for (;;) {
; 8036 :         if (_Last - _First <= _ISORT_MAX) { // small

  00081	8b c2		 mov	 eax, edx
  00083	83 c4 10	 add	 esp, 16			; 00000010H
  00086	2b c6		 sub	 eax, esi
  00088	83 e0 f8	 and	 eax, -8			; fffffff8H
  0008b	3d 00 01 00 00	 cmp	 eax, 256		; 00000100H
  00090	7f 8e		 jg	 SHORT $LL2@Sort_unche
$LN67@Sort_unche:

; 7907 :     if (_First != _Last) {

  00092	3b f2		 cmp	 esi, edx
  00094	0f 84 a8 01 00
	00		 je	 $LN51@Sort_unche

; 7908 :         for (_BidIt _Mid = _First; ++_Mid != _Last;) { // order next element

  0009a	8d 5e 08	 lea	 ebx, DWORD PTR [esi+8]
  0009d	3b da		 cmp	 ebx, edx
  0009f	0f 84 9d 01 00
	00		 je	 $LN51@Sort_unche
$LL11@Sort_unche:

; 7909 :             _BidIt _Hole               = _Mid;
; 7910 :             _Iter_value_t<_BidIt> _Val = _STD move(*_Mid);

  000a5	8b 03		 mov	 eax, DWORD PTR [ebx]
  000a7	8b fb		 mov	 edi, ebx
  000a9	89 45 f8	 mov	 DWORD PTR __Val$2$[ebp], eax
  000ac	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  000af	89 45 fc	 mov	 DWORD PTR __Val$1$[ebp], eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  000b2	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7912 :             if (_DEBUG_LT_PRED(_Pred, _Val, *_First)) { // found new earliest element, move to front

  000b5	0f 86 4e 01 00
	00		 jbe	 $LN18@Sort_unche
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4936 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  000bb	8d 7b 08	 lea	 edi, DWORD PTR [ebx+8]
  000be	57		 push	 edi
  000bf	53		 push	 ebx
  000c0	56		 push	 esi
  000c1	e8 00 00 00 00	 call	 ??$_Copy_backward_memmove@PAUSCRCWithNumber@CArea@@PAU12@@std@@YAPAUSCRCWithNumber@CArea@@PAU12@00@Z ; std::_Copy_backward_memmove<CArea::SCRCWithNumber *,CArea::SCRCWithNumber *>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7914 :                 *_First = _STD move(_Val);

  000c6	8b 4d f8	 mov	 ecx, DWORD PTR __Val$2$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4936 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  000c9	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7914 :                 *_First = _STD move(_Val);

  000cc	8b 45 fc	 mov	 eax, DWORD PTR __Val$1$[ebp]
  000cf	8b df		 mov	 ebx, edi
  000d1	89 0e		 mov	 DWORD PTR [esi], ecx
  000d3	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 7915 :             } else { // look for insertion point after first

  000d6	e9 5e 01 00 00	 jmp	 $LN19@Sort_unche
$LN68@Sort_unche:

; 6596 :     _Diff _Bottom = _Last - _First;

  000db	2b d6		 sub	 edx, esi
  000dd	8b ca		 mov	 ecx, edx
  000df	89 55 0c	 mov	 DWORD PTR __Last$[ebp], edx
  000e2	c1 f9 03	 sar	 ecx, 3

; 6597 :     for (_Diff _Hole = _Bottom >> 1; _Hole > 0;) { // shift for codegen

  000e5	8b d9		 mov	 ebx, ecx
  000e7	89 4d fc	 mov	 DWORD PTR __Bottom$1$[ebp], ecx
  000ea	d1 fb		 sar	 ebx, 1
  000ec	85 db		 test	 ebx, ebx
  000ee	0f 8e b9 00 00
	00		 jle	 $LN31@Sort_unche
  000f4	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  000f7	89 45 f0	 mov	 DWORD PTR tv873[ebp], eax
  000fa	d1 f8		 sar	 eax, 1
  000fc	89 45 08	 mov	 DWORD PTR __Max_sequence_non_leaf$1$[ebp], eax
  000ff	90		 npad	 1
$LL30@Sort_unche:

; 6598 :         // reheap top half, bottom to top
; 6599 :         --_Hole;
; 6600 :         _Iter_value_t<_RanIt> _Val = _STD move(*(_First + _Hole));

  00100	8b 44 de f8	 mov	 eax, DWORD PTR [esi+ebx*8-8]
  00104	4b		 dec	 ebx
  00105	89 45 ec	 mov	 DWORD PTR __Val$2$[ebp], eax

; 6601 :         _STD _Pop_heap_hole_by_index(_First, _Hole, _Bottom, _STD move(_Val), _Pred);

  00108	8b d3		 mov	 edx, ebx
  0010a	89 5d f4	 mov	 DWORD PTR __Hole$1$[ebp], ebx

; 6438 :     _Diff _Idx       = _Hole;

  0010d	8b fb		 mov	 edi, ebx

; 6600 :         _Iter_value_t<_RanIt> _Val = _STD move(*(_First + _Hole));

  0010f	8b 44 de 04	 mov	 eax, DWORD PTR [esi+ebx*8+4]
  00113	89 45 f8	 mov	 DWORD PTR __Val$1$[ebp], eax

; 6443 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  00116	8b 45 08	 mov	 eax, DWORD PTR __Max_sequence_non_leaf$1$[ebp]
  00119	3b d8		 cmp	 ebx, eax
  0011b	7d 32		 jge	 SHORT $LN36@Sort_unche
  0011d	8b d8		 mov	 ebx, eax
  0011f	90		 npad	 1
$LL35@Sort_unche:

; 6444 :         _Idx = 2 * _Idx + 2;

  00120	8d 0c 3f	 lea	 ecx, DWORD PTR [edi+edi]

; 6445 :         if (_DEBUG_LT_PRED(_Pred, *(_First + _Idx), *(_First + (_Idx - 1)))) {
; 6446 :             --_Idx;
; 6447 :         }
; 6448 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  00123	8b 44 ce 14	 mov	 eax, DWORD PTR [esi+ecx*8+20]
  00127	39 44 ce 0c	 cmp	 DWORD PTR [esi+ecx*8+12], eax
  0012b	1b c0		 sbb	 eax, eax
  0012d	8d 78 02	 lea	 edi, DWORD PTR [eax+2]
  00130	03 f9		 add	 edi, ecx
  00132	8b 04 fe	 mov	 eax, DWORD PTR [esi+edi*8]
  00135	8b 4c fe 04	 mov	 ecx, DWORD PTR [esi+edi*8+4]
  00139	89 04 d6	 mov	 DWORD PTR [esi+edx*8], eax
  0013c	89 4c d6 04	 mov	 DWORD PTR [esi+edx*8+4], ecx

; 6449 :         _Hole             = _Idx;

  00140	8b d7		 mov	 edx, edi
  00142	3b fb		 cmp	 edi, ebx
  00144	7c da		 jl	 SHORT $LL35@Sort_unche
  00146	8b 5d f4	 mov	 ebx, DWORD PTR __Hole$1$[ebp]
  00149	8b 4d fc	 mov	 ecx, DWORD PTR __Bottom$1$[ebp]
  0014c	8b 45 08	 mov	 eax, DWORD PTR __Max_sequence_non_leaf$1$[ebp]
$LN36@Sort_unche:

; 6450 :     }
; 6451 : 
; 6452 :     if (_Idx == _Max_sequence_non_leaf && _Bottom % 2 == 0) { // only child at bottom, move _Hole down to it

  0014f	3b d0		 cmp	 edx, eax
  00151	75 17		 jne	 SHORT $LN38@Sort_unche
  00153	f6 c1 01	 test	 cl, 1
  00156	75 12		 jne	 SHORT $LN38@Sort_unche

; 6453 :         *(_First + _Hole) = _STD move(*(_First + (_Bottom - 1)));

  00158	8b 44 ce f8	 mov	 eax, DWORD PTR [esi+ecx*8-8]
  0015c	8b 4c ce fc	 mov	 ecx, DWORD PTR [esi+ecx*8-4]
  00160	89 04 d6	 mov	 DWORD PTR [esi+edx*8], eax
  00163	89 4c d6 04	 mov	 DWORD PTR [esi+edx*8+4], ecx

; 6454 :         _Hole             = _Bottom - 1;

  00167	8b 55 f0	 mov	 edx, DWORD PTR tv873[ebp]
$LN38@Sort_unche:

; 6328 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  0016a	3b da		 cmp	 ebx, edx
  0016c	7d 24		 jge	 SHORT $LN90@Sort_unche
  0016e	66 90		 npad	 2
$LL45@Sort_unche:
; File C:\Marty 5.5\Src-Client\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  00170	8b 45 f8	 mov	 eax, DWORD PTR __Val$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6327 :     for (_Diff _Idx = (_Hole - 1) >> 1; // shift for codegen

  00173	8d 7a ff	 lea	 edi, DWORD PTR [edx-1]
  00176	d1 ff		 sar	 edi, 1
; File C:\Marty 5.5\Src-Client\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  00178	39 44 fe 04	 cmp	 DWORD PTR [esi+edi*8+4], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6328 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  0017c	76 14		 jbe	 SHORT $LN90@Sort_unche

; 6329 :          _Idx = (_Hole - 1) >> 1) { // shift for codegen
; 6330 :         // move _Hole up to parent
; 6331 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  0017e	8b 04 fe	 mov	 eax, DWORD PTR [esi+edi*8]
  00181	8b 4c fe 04	 mov	 ecx, DWORD PTR [esi+edi*8+4]
  00185	89 04 d6	 mov	 DWORD PTR [esi+edx*8], eax
  00188	89 4c d6 04	 mov	 DWORD PTR [esi+edx*8+4], ecx

; 6332 :         _Hole             = _Idx;

  0018c	8b d7		 mov	 edx, edi
  0018e	3b df		 cmp	 ebx, edi
  00190	7c de		 jl	 SHORT $LL45@Sort_unche
$LN90@Sort_unche:

; 6333 :     }
; 6334 : 
; 6335 :     *(_First + _Hole) = _STD forward<_Ty>(_Val); // drop _Val into final hole

  00192	8b 45 ec	 mov	 eax, DWORD PTR __Val$2$[ebp]

; 6597 :     for (_Diff _Hole = _Bottom >> 1; _Hole > 0;) { // shift for codegen

  00195	8b 4d fc	 mov	 ecx, DWORD PTR __Bottom$1$[ebp]

; 6335 :     *(_First + _Hole) = _STD forward<_Ty>(_Val); // drop _Val into final hole

  00198	89 04 d6	 mov	 DWORD PTR [esi+edx*8], eax
  0019b	8b 45 f8	 mov	 eax, DWORD PTR __Val$1$[ebp]
  0019e	89 44 d6 04	 mov	 DWORD PTR [esi+edx*8+4], eax

; 6597 :     for (_Diff _Hole = _Bottom >> 1; _Hole > 0;) { // shift for codegen

  001a2	85 db		 test	 ebx, ebx
  001a4	0f 8f 56 ff ff
	ff		 jg	 $LL30@Sort_unche
  001aa	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
$LN31@Sort_unche:

; 6818 :     for (; _Last - _First >= 2; --_Last) {

  001ad	83 f9 02	 cmp	 ecx, 2
  001b0	0f 8c 8c 00 00
	00		 jl	 $LN51@Sort_unche
  001b6	66 66 0f 1f 84
	00 00 00 00 00	 npad	 10
$LL52@Sort_unche:

; 6476 :         _Iter_value_t<_RanIt> _Val = _STD move(*_Last);

  001c0	8b 44 16 f8	 mov	 eax, DWORD PTR [esi+edx-8]

; 6467 :     _STD _Pop_heap_hole_by_index(

  001c4	8d 7a f8	 lea	 edi, DWORD PTR [edx-8]

; 6476 :         _Iter_value_t<_RanIt> _Val = _STD move(*_Last);

  001c7	8b 4c 16 fc	 mov	 ecx, DWORD PTR [esi+edx-4]

; 6467 :     _STD _Pop_heap_hole_by_index(

  001cb	ff 75 14	 push	 DWORD PTR __Pred$[ebp]

; 6476 :         _Iter_value_t<_RanIt> _Val = _STD move(*_Last);

  001ce	89 45 e8	 mov	 DWORD PTR __Val$1[ebp], eax

; 6465 :     *_Dest      = _STD move(*_First);

  001d1	8b 06		 mov	 eax, DWORD PTR [esi]

; 6476 :         _Iter_value_t<_RanIt> _Val = _STD move(*_Last);

  001d3	89 4d ec	 mov	 DWORD PTR __Val$1[ebp+4], ecx

; 6465 :     *_Dest      = _STD move(*_First);

  001d6	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  001d9	89 44 16 f8	 mov	 DWORD PTR [esi+edx-8], eax

; 6466 :     using _Diff = _Iter_diff_t<_RanIt>;
; 6467 :     _STD _Pop_heap_hole_by_index(

  001dd	8d 45 e8	 lea	 eax, DWORD PTR __Val$1[ebp]
  001e0	50		 push	 eax
  001e1	8b c7		 mov	 eax, edi
  001e3	89 4c 16 fc	 mov	 DWORD PTR [esi+edx-4], ecx
  001e7	c1 f8 03	 sar	 eax, 3
  001ea	50		 push	 eax
  001eb	6a 00		 push	 0
  001ed	56		 push	 esi
  001ee	e8 00 00 00 00	 call	 ??$_Pop_heap_hole_by_index@PAUSCRCWithNumber@CArea@@U12@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@HH$$QAU12@UCRCNumComp@2@@Z ; std::_Pop_heap_hole_by_index<CArea::SCRCWithNumber *,CArea::SCRCWithNumber,CArea::CRCNumComp>

; 6818 :     for (; _Last - _First >= 2; --_Last) {

  001f3	8b d7		 mov	 edx, edi

; 6467 :     _STD _Pop_heap_hole_by_index(

  001f5	83 c4 14	 add	 esp, 20			; 00000014H

; 6818 :     for (; _Last - _First >= 2; --_Last) {

  001f8	8b c2		 mov	 eax, edx
  001fa	83 e0 f8	 and	 eax, -8			; fffffff8H
  001fd	83 f8 10	 cmp	 eax, 16			; 00000010H
  00200	7d be		 jge	 SHORT $LL52@Sort_unche

; 8058 :         }
; 8059 :     }
; 8060 : }

  00202	5f		 pop	 edi
  00203	5e		 pop	 esi
  00204	5b		 pop	 ebx
  00205	8b e5		 mov	 esp, ebp
  00207	5d		 pop	 ebp
  00208	c3		 ret	 0
$LN18@Sort_unche:

; 7916 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

  00209	8d 53 f8	 lea	 edx, DWORD PTR [ebx-8]
; File C:\Marty 5.5\Src-Client\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  0020c	3b 43 fc	 cmp	 eax, DWORD PTR [ebx-4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7916 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

  0020f	76 1d		 jbe	 SHORT $LN15@Sort_unche
  00211	8b 75 fc	 mov	 esi, DWORD PTR __Val$1$[ebp]
$LL16@Sort_unche:

; 7917 :                     *_Hole = _STD move(*_Prev); // move hole down

  00214	8b 02		 mov	 eax, DWORD PTR [edx]
  00216	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00219	89 07		 mov	 DWORD PTR [edi], eax
  0021b	89 4f 04	 mov	 DWORD PTR [edi+4], ecx
  0021e	8b fa		 mov	 edi, edx
  00220	83 ea 08	 sub	 edx, 8
; File C:\Marty 5.5\Src-Client\Client\GameLib\Area.h

; 190  : 				return lhs.dwNumber > rhs.dwNumber;

  00223	3b 72 04	 cmp	 esi, DWORD PTR [edx+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7916 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

  00226	77 ec		 ja	 SHORT $LL16@Sort_unche
  00228	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  0022b	8b 45 fc	 mov	 eax, DWORD PTR __Val$1$[ebp]
$LN15@Sort_unche:

; 7918 :                 }
; 7919 : 
; 7920 :                 *_Hole = _STD move(_Val); // insert element in hole

  0022e	8b 4d f8	 mov	 ecx, DWORD PTR __Val$2$[ebp]
  00231	83 c3 08	 add	 ebx, 8
  00234	89 0f		 mov	 DWORD PTR [edi], ecx
  00236	89 47 04	 mov	 DWORD PTR [edi+4], eax
$LN19@Sort_unche:

; 7908 :         for (_BidIt _Mid = _First; ++_Mid != _Last;) { // order next element

  00239	3b 5d 0c	 cmp	 ebx, DWORD PTR __Last$[ebp]
  0023c	0f 85 63 fe ff
	ff		 jne	 $LL11@Sort_unche
$LN51@Sort_unche:
  00242	5f		 pop	 edi

; 8058 :         }
; 8059 :     }
; 8060 : }

  00243	5e		 pop	 esi
  00244	5b		 pop	 ebx
  00245	8b e5		 mov	 esp, ebp
  00247	5d		 pop	 ebp
  00248	c3		 ret	 0
??$_Sort_unchecked@PAUSCRCWithNumber@CArea@@UCRCNumComp@2@@std@@YAXPAUSCRCWithNumber@CArea@@0HUCRCNumComp@2@@Z ENDP ; std::_Sort_unchecked<CArea::SCRCWithNumber *,CArea::CRCNumComp>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$stable_sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@std@@UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@0@0UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@Z
_TEXT	SEGMENT
__Raw$2 = -4128						; size = 8
$T3 = -4124						; size = 1
$T4 = -4124						; size = 1
__Temp_buf$ = -4120					; size = 4104
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Pred$ = 16						; size = 1
??$stable_sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@std@@UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@0@0UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@Z PROC ; std::stable_sort<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CMapOutdoor::TPatchDrawStruct> > >,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>, COMDAT

; 8462 : void stable_sort(const _BidIt _First, const _BidIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$stable_sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@std@@UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@0@0UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	b8 14 10 00 00	 mov	 eax, 4116		; 00001014H
  00016	e8 00 00 00 00	 call	 __chkstk
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00020	33 c5		 xor	 eax, ebp
  00022	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00025	53		 push	 ebx
  00026	56		 push	 esi
  00027	57		 push	 edi
  00028	50		 push	 eax
  00029	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 8466 :     const auto _ULast  = _Get_unwrapped(_Last);

  00032	8b 5d 0c	 mov	 ebx, DWORD PTR __Last$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1422 :         return _Last - _First; // assume the iterator will do debug checking

  00035	8b f3		 mov	 esi, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8465 :     const auto _UFirst = _Get_unwrapped(_First);

  00037	8b 7d 08	 mov	 edi, DWORD PTR __First$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1422 :         return _Last - _First; // assume the iterator will do debug checking

  0003a	2b f7		 sub	 esi, edi
  0003c	c1 fe 04	 sar	 esi, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8468 :     if (_Count <= _ISORT_MAX) {

  0003f	83 fe 20	 cmp	 esi, 32			; 00000020H
  00042	7f 15		 jg	 SHORT $LN2@stable_sor

; 8469 :         _Insertion_sort_unchecked(_UFirst, _ULast, _Pass_fn(_Pred));

  00044	ff b5 e4 ef ff
	ff		 push	 DWORD PTR $T4[ebp]
  0004a	53		 push	 ebx
  0004b	57		 push	 edi
  0004c	e8 00 00 00 00	 call	 ??$_Insertion_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAPAUTPatchDrawStruct@CMapOutdoor@@QAU12@0UFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Insertion_sort_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  00051	83 c4 0c	 add	 esp, 12			; 0000000cH

; 8470 :         return;

  00054	e9 9c 00 00 00	 jmp	 $LN16@stable_sor
$LN2@stable_sor:

; 8471 :     }
; 8472 : 
; 8473 :     _Optimistic_temporary_buffer<_Iter_value_t<_BidIt>> _Temp_buf{_Count - _Count / 2};

  00059	8b c6		 mov	 eax, esi
  0005b	8b ce		 mov	 ecx, esi
  0005d	99		 cdq
  0005e	2b c2		 sub	 eax, edx
  00060	d1 f8		 sar	 eax, 1
  00062	2b c8		 sub	 ecx, eax

; 86   :     return static_cast<ptrdiff_t>((_STD min)(static_cast<_CT>(PTRDIFF_MAX), static_cast<_CT>(_Value)));

  00064	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00069	3b c8		 cmp	 ecx, eax
  0006b	0f 4c c1	 cmovl	 eax, ecx

; 99   :         if (static_cast<size_t>(_Requested_size) <= _Optimistic_count) { // unconditionally engage stack space

  0006e	81 f9 00 01 00
	00		 cmp	 ecx, 256		; 00000100H
  00074	76 39		 jbe	 SHORT $LN19@stable_sor

; 100  :             _Data     = reinterpret_cast<_Ty*>(&_Stack_space[0]);
; 101  :             _Capacity = static_cast<ptrdiff_t>(_Requested_size); // in bounds due to if condition
; 102  :             return;
; 103  :         }
; 104  : 
; 105  :         const pair<_Ty*, ptrdiff_t> _Raw = _Get_temporary_buffer<_Ty>(_Attempt);

  00076	50		 push	 eax
  00077	8d 85 e0 ef ff
	ff		 lea	 eax, DWORD PTR __Raw$2[ebp]
  0007d	50		 push	 eax
  0007e	e8 00 00 00 00	 call	 ??$_Get_temporary_buffer@UTPatchDrawStruct@CMapOutdoor@@@std@@YA?AU?$pair@PAUTPatchDrawStruct@CMapOutdoor@@H@0@H@Z ; std::_Get_temporary_buffer<CMapOutdoor::TPatchDrawStruct>

; 106  :         if (static_cast<size_t>(_Raw.second) > _Optimistic_count) { // engage heap space

  00083	8b 8d e4 ef ff
	ff		 mov	 ecx, DWORD PTR __Raw$2[ebp+4]
  00089	83 c4 08	 add	 esp, 8
  0008c	81 f9 00 01 00
	00		 cmp	 ecx, 256		; 00000100H
  00092	76 08		 jbe	 SHORT $LN9@stable_sor

; 107  :             _Data     = _Raw.first;

  00094	8b 85 e0 ef ff
	ff		 mov	 eax, DWORD PTR __Raw$2[ebp]

; 108  :             _Capacity = _Raw.second;
; 109  :             return;

  0009a	eb 19		 jmp	 SHORT $LN20@stable_sor
$LN9@stable_sor:

; 110  :         }
; 111  : 
; 112  :         // less heap space than stack space, give up and use stack instead
; 113  :         _Return_temporary_buffer(_Raw.first);

  0009c	ff b5 e0 ef ff
	ff		 push	 DWORD PTR __Raw$2[ebp]
  000a2	e8 00 00 00 00	 call	 ??$_Return_temporary_buffer@UTPatchDrawStruct@CMapOutdoor@@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@@Z ; std::_Return_temporary_buffer<CMapOutdoor::TPatchDrawStruct>
  000a7	83 c4 04	 add	 esp, 4

; 114  :         _Data     = reinterpret_cast<_Ty*>(&_Stack_space[0]);
; 115  :         _Capacity = _Optimistic_count;

  000aa	b9 00 01 00 00	 mov	 ecx, 256		; 00000100H
$LN19@stable_sor:

; 8471 :     }
; 8472 : 
; 8473 :     _Optimistic_temporary_buffer<_Iter_value_t<_BidIt>> _Temp_buf{_Count - _Count / 2};

  000af	8d 85 f0 ef ff
	ff		 lea	 eax, DWORD PTR __Temp_buf$[ebp+8]
$LN20@stable_sor:
  000b5	89 85 e8 ef ff
	ff		 mov	 DWORD PTR __Temp_buf$[ebp], eax
  000bb	89 8d ec ef ff
	ff		 mov	 DWORD PTR __Temp_buf$[ebp+4], ecx

; 8474 :     _Stable_sort_unchecked(_UFirst, _ULast, _Count, _Temp_buf._Data, _Temp_buf._Capacity, _Pass_fn(_Pred));

  000c1	ff b5 e4 ef ff
	ff		 push	 DWORD PTR $T3[ebp]
  000c7	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000ce	51		 push	 ecx
  000cf	50		 push	 eax
  000d0	56		 push	 esi
  000d1	53		 push	 ebx
  000d2	57		 push	 edi
  000d3	e8 00 00 00 00	 call	 ??$_Stable_sort_unchecked@PAUTPatchDrawStruct@CMapOutdoor@@UFSortPatchDrawStructWithTerrainNum@2@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@0H0HUFSortPatchDrawStructWithTerrainNum@2@@Z ; std::_Stable_sort_unchecked<CMapOutdoor::TPatchDrawStruct *,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  000d8	83 c4 18	 add	 esp, 24			; 00000018H

; 122  :         if (static_cast<size_t>(_Capacity) > _Optimistic_count) {

  000db	81 bd ec ef ff
	ff 00 01 00 00	 cmp	 DWORD PTR __Temp_buf$[ebp+4], 256 ; 00000100H
  000e5	76 0e		 jbe	 SHORT $LN16@stable_sor

; 123  :             _Return_temporary_buffer(_Data);

  000e7	ff b5 e8 ef ff
	ff		 push	 DWORD PTR __Temp_buf$[ebp]
  000ed	e8 00 00 00 00	 call	 ??$_Return_temporary_buffer@UTPatchDrawStruct@CMapOutdoor@@@std@@YAXQAUTPatchDrawStruct@CMapOutdoor@@@Z ; std::_Return_temporary_buffer<CMapOutdoor::TPatchDrawStruct>
  000f2	83 c4 04	 add	 esp, 4
$LN16@stable_sor:

; 8475 : }

  000f5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ff	59		 pop	 ecx
  00100	5f		 pop	 edi
  00101	5e		 pop	 esi
  00102	5b		 pop	 ebx
  00103	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00106	33 cd		 xor	 ecx, ebp
  00108	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0010d	8b e5		 mov	 esp, ebp
  0010f	5d		 pop	 ebp
  00110	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$stable_sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@std@@UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@0@0UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@Z$0:
  00000	8d 8d e8 ef ff
	ff		 lea	 ecx, DWORD PTR __Temp_buf$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1?$_Optimistic_temporary_buffer@UTPatchDrawStruct@CMapOutdoor@@@std@@QAE@XZ ; std::_Optimistic_temporary_buffer<CMapOutdoor::TPatchDrawStruct>::~_Optimistic_temporary_buffer<CMapOutdoor::TPatchDrawStruct>
  0000b	cc		 int	 3
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
__ehhandler$??$stable_sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@std@@UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@0@0UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@Z:
  00010	90		 npad	 1
  00011	90		 npad	 1
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 8a dc ef ff
	ff		 mov	 ecx, DWORD PTR [edx-4132]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00029	33 c8		 xor	 ecx, eax
  0002b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00030	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$stable_sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@std@@UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@0@0UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@Z
  00035	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$stable_sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@std@@UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@0@0UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@Z ENDP ; std::stable_sort<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CMapOutdoor::TPatchDrawStruct> > >,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??__Fs_kVct_pkBlendThingInstSort@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@YAXXZ
text$yd	SEGMENT
??__Fs_kVct_pkBlendThingInstSort@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@YAXXZ PROC ; `CMapOutdoor::RenderBlendArea'::`2'::`dynamic atexit destructor for 's_kVct_pkBlendThingInstSort'', COMDAT

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  00000	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?s_kVct_pkBlendThingInstSort@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A
  00006	85 d2		 test	 edx, edx
  00008	74 51		 je	 SHORT $LN6@dynamic

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0000a	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR ?s_kVct_pkBlendThingInstSort@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A+8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00010	8b c2		 mov	 eax, edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00012	2b ca		 sub	 ecx, edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00014	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00017	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0001d	72 14		 jb	 SHORT $LN22@dynamic

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0001f	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00022	83 c1 23	 add	 ecx, 35			; 00000023H
  00025	2b c2		 sub	 eax, edx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00027	83 c0 fc	 add	 eax, -4			; fffffffcH
  0002a	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0002d	0f 87 00 00 00
	00		 ja	 __invalid_parameter_noinfo_noreturn
$LN22@dynamic:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00033	51		 push	 ecx
  00034	52		 push	 edx
  00035	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0003a	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  0003d	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?s_kVct_pkBlendThingInstSort@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A, 0

; 2050 :             _Mylast  = nullptr;

  00047	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?s_kVct_pkBlendThingInstSort@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A+4, 0

; 2051 :             _Myend   = nullptr;

  00051	c7 05 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?s_kVct_pkBlendThingInstSort@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A+8, 0
$LN6@dynamic:
  0005b	c3		 ret	 0
??__Fs_kVct_pkBlendThingInstSort@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@YAXXZ ENDP ; `CMapOutdoor::RenderBlendArea'::`2'::`dynamic atexit destructor for 's_kVct_pkBlendThingInstSort''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??__Fs_kVct_pkOpaqueThingInstSort@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@YAXXZ
text$yd	SEGMENT
??__Fs_kVct_pkOpaqueThingInstSort@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@YAXXZ PROC ; `CMapOutdoor::RenderArea'::`33'::`dynamic atexit destructor for 's_kVct_pkOpaqueThingInstSort'', COMDAT

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  00000	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?s_kVct_pkOpaqueThingInstSort@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A
  00006	85 d2		 test	 edx, edx
  00008	74 51		 je	 SHORT $LN6@dynamic

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0000a	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR ?s_kVct_pkOpaqueThingInstSort@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A+8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00010	8b c2		 mov	 eax, edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00012	2b ca		 sub	 ecx, edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00014	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00017	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0001d	72 14		 jb	 SHORT $LN22@dynamic

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0001f	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00022	83 c1 23	 add	 ecx, 35			; 00000023H
  00025	2b c2		 sub	 eax, edx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00027	83 c0 fc	 add	 eax, -4			; fffffffcH
  0002a	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0002d	0f 87 00 00 00
	00		 ja	 __invalid_parameter_noinfo_noreturn
$LN22@dynamic:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00033	51		 push	 ecx
  00034	52		 push	 edx
  00035	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0003a	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  0003d	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?s_kVct_pkOpaqueThingInstSort@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A, 0

; 2050 :             _Mylast  = nullptr;

  00047	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?s_kVct_pkOpaqueThingInstSort@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A+4, 0

; 2051 :             _Myend   = nullptr;

  00051	c7 05 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?s_kVct_pkOpaqueThingInstSort@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A+8, 0
$LN6@dynamic:
  0005b	c3		 ret	 0
??__Fs_kVct_pkOpaqueThingInstSort@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@YAXXZ ENDP ; `CMapOutdoor::RenderArea'::`33'::`dynamic atexit destructor for 's_kVct_pkOpaqueThingInstSort''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??__F?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A@@YAXXZ
text$yd	SEGMENT
??__F?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector'', COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  00005	85 c0		 test	 eax, eax
  00007	74 4a		 je	 SHORT $LN6@m_TerrainN

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  0000f	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00011	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00017	72 12		 jb	 SHORT $LN22@m_TerrainN

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00019	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0001c	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0001f	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00021	83 c0 fc	 add	 eax, -4			; fffffffcH
  00024	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00027	77 2b		 ja	 SHORT $LN19@m_TerrainN

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00029	8b c2		 mov	 eax, edx
$LN22@m_TerrainN:

; 265  :         ::operator delete(_Ptr, _Bytes);

  0002b	51		 push	 ecx
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00032	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  00035	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A, 0

; 2050 :             _Mylast  = nullptr;

  0003f	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, 0

; 2051 :             _Myend   = nullptr;

  00049	c7 05 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+8, 0
$LN6@m_TerrainN:
  00053	c3		 ret	 0
$LN19@m_TerrainN:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00054	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??__F?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ??__E?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A@@YAXXZ
text$di	SEGMENT
??__E?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A@@YAXXZ PROC ; `dynamic initializer for 'CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector'', COMDAT

; 15   : CMapOutdoor::TTerrainNumVector CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A@@YAXXZ ; `dynamic atexit destructor for 'CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A@@YAXXZ ENDP ; `dynamic initializer for 'CMapOutdoor::FSortPatchDrawStructWithTerrainNum::m_TerrainNumVector''
text$di	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??__Fm_dwRenderedCRCWithNumberVector@@YAXXZ
text$yd	SEGMENT
??__Fm_dwRenderedCRCWithNumberVector@@YAXXZ PROC	; `dynamic atexit destructor for 'm_dwRenderedCRCWithNumberVector'', COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_dwRenderedCRCWithNumberVector@@3V?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@A
  00005	85 c0		 test	 eax, eax
  00007	74 4d		 je	 SHORT $LN6@dynamic

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR ?m_dwRenderedCRCWithNumberVector@@3V?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@A+8
  0000f	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00011	83 e1 f8	 and	 ecx, -8			; fffffff8H

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00014	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0001a	72 12		 jb	 SHORT $LN22@dynamic

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0001c	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0001f	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00022	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00024	83 c0 fc	 add	 eax, -4			; fffffffcH
  00027	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0002a	77 2b		 ja	 SHORT $LN19@dynamic

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0002c	8b c2		 mov	 eax, edx
$LN22@dynamic:

; 265  :         ::operator delete(_Ptr, _Bytes);

  0002e	51		 push	 ecx
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00035	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  00038	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?m_dwRenderedCRCWithNumberVector@@3V?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@A, 0

; 2050 :             _Mylast  = nullptr;

  00042	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?m_dwRenderedCRCWithNumberVector@@3V?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@A+4, 0

; 2051 :             _Myend   = nullptr;

  0004c	c7 05 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?m_dwRenderedCRCWithNumberVector@@3V?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@A+8, 0
$LN6@dynamic:
  00056	c3		 ret	 0
$LN19@dynamic:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00057	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??__Fm_dwRenderedCRCWithNumberVector@@YAXXZ ENDP	; `dynamic atexit destructor for 'm_dwRenderedCRCWithNumberVector''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ??__Em_dwRenderedCRCWithNumberVector@@YAXXZ
text$di	SEGMENT
??__Em_dwRenderedCRCWithNumberVector@@YAXXZ PROC	; `dynamic initializer for 'm_dwRenderedCRCWithNumberVector'', COMDAT

; 13   : CArea::TCRCWithNumberVector m_dwRenderedCRCWithNumberVector;

  00000	68 00 00 00 00	 push	 OFFSET ??__Fm_dwRenderedCRCWithNumberVector@@YAXXZ ; `dynamic atexit destructor for 'm_dwRenderedCRCWithNumberVector''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__Em_dwRenderedCRCWithNumberVector@@YAXXZ ENDP	; `dynamic initializer for 'm_dwRenderedCRCWithNumberVector''
text$di	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?__RenderTerrain_AppendPatch@CMapOutdoor@@IAEXABUD3DXVECTOR3@@MJ@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_c_rv3Center$ = 8					; size = 4
_fDistance$ = 12					; size = 4
_lPatchNum$ = 16					; size = 4
?__RenderTerrain_AppendPatch@CMapOutdoor@@IAEXABUD3DXVECTOR3@@MJ@Z PROC ; CMapOutdoor::__RenderTerrain_AppendPatch, COMDAT
; _this$ = ecx

; 119  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi

; 120  : 	assert(NULL!=m_pTerrainPatchProxyList && "CMapOutdoor::__RenderTerrain_AppendPatch");
; 121  : 	if (!m_pTerrainPatchProxyList[lPatchNum].isUsed())

  00007	8b 75 10	 mov	 esi, DWORD PTR _lPatchNum$[ebp]
  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx
  0000d	8d 14 f5 00 00
	00 00		 lea	 edx, DWORD PTR [esi*8]
  00014	2b d6		 sub	 edx, esi
  00016	8b 47 64	 mov	 eax, DWORD PTR [edi+100]
  00019	80 7c 90 04 00	 cmp	 BYTE PTR [eax+edx*4+4], 0
  0001e	8d 0c 90	 lea	 ecx, DWORD PTR [eax+edx*4]
  00021	74 41		 je	 SHORT $LN10@RenderTerr

; 122  : 		return;
; 123  : 
; 124  : 	m_pTerrainPatchProxyList[lPatchNum].SetCenterPosition(c_rv3Center);

  00023	ff 75 08	 push	 DWORD PTR _c_rv3Center$[ebp]
  00026	e8 00 00 00 00	 call	 ?SetCenterPosition@CTerrainPatchProxy@@QAEXABUD3DXVECTOR3@@@Z ; CTerrainPatchProxy::SetCenterPosition
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

  0002b	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fDistance$[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 125  : 	m_PatchVector.push_back(std::make_pair(fDistance, lPatchNum));

  00030	8d 8f 18 01 00
	00		 lea	 ecx, DWORD PTR [edi+280]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  00036	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

  00039	f3 0f 11 45 f8	 movss	 DWORD PTR $T1[ebp], xmm0
  0003e	89 75 fc	 mov	 DWORD PTR $T1[ebp+4], esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  00041	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00044	74 14		 je	 SHORT $LN11@RenderTerr

; 797  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  00046	8b 45 f8	 mov	 eax, DWORD PTR $T1[ebp]
  00049	89 02		 mov	 DWORD PTR [edx], eax
  0004b	89 72 04	 mov	 DWORD PTR [edx+4], esi

; 798  :         } else {
; 799  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 800  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 801  :             _ASAN_VECTOR_RELEASE_GUARD;
; 802  :         }
; 803  : 
; 804  :         _Orphan_range(_Mylast, _Mylast);
; 805  :         _Ty& _Result = *_Mylast;
; 806  :         ++_Mylast;

  0004e	83 41 04 08	 add	 DWORD PTR [ecx+4], 8
  00052	5f		 pop	 edi
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 126  : }

  00053	5e		 pop	 esi
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 0c 00	 ret	 12			; 0000000cH
$LN11@RenderTerr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0005a	8d 45 f8	 lea	 eax, DWORD PTR $T1[ebp]
  0005d	50		 push	 eax
  0005e	52		 push	 edx
  0005f	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@U?$pair@MJ@std@@@?$vector@U?$pair@MJ@std@@V?$allocator@U?$pair@MJ@std@@@2@@std@@AAEPAU?$pair@MJ@1@QAU21@$$QAU21@@Z ; std::vector<std::pair<float,long>,std::allocator<std::pair<float,long> > >::_Emplace_reallocate<std::pair<float,long> >
$LN10@RenderTerr:
  00064	5f		 pop	 edi
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 126  : }

  00065	5e		 pop	 esi
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c2 0c 00	 ret	 12			; 0000000cH
?__RenderTerrain_AppendPatch@CMapOutdoor@@IAEXABUD3DXVECTOR3@@MJ@Z ENDP ; CMapOutdoor::__RenderTerrain_AppendPatch
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?__RenderTerrain_RecurseRenderQuadTree_CheckBoundingCircle@CMapOutdoor@@IAEHABUD3DXVECTOR3@@ABM@Z
_TEXT	SEGMENT
_distance$ = -28					; size = 24
_center$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_c_v3Center$ = 8					; size = 4
_c_fRadius$ = 12					; size = 4
?__RenderTerrain_RecurseRenderQuadTree_CheckBoundingCircle@CMapOutdoor@@IAEHABUD3DXVECTOR3@@ABM@Z PROC ; CMapOutdoor::__RenderTerrain_RecurseRenderQuadTree_CheckBoundingCircle, COMDAT
; _this$ = ecx

; 93   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 94   : 	const int count = 6;
; 95   : 
; 96   : 	D3DXVECTOR3 center = c_v3Center;

  00010	8b 45 08	 mov	 eax, DWORD PTR _c_v3Center$[ebp]

; 97   : 	center.y = -center.y;
; 98   : 
; 99   : 	int i;
; 100  : 
; 101  : 	float distance[count];
; 102  : 	for(i = 0; i < count; ++i)

  00013	33 d2		 xor	 edx, edx
  00015	81 c1 24 02 00
	00		 add	 ecx, 548		; 00000224H
  0001b	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  0001f	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00022	89 45 f8	 mov	 DWORD PTR _center$[ebp+8], eax

; 105  : 		if (distance[i] <= -c_fRadius)

  00025	8b 45 0c	 mov	 eax, DWORD PTR _c_fRadius$[ebp]
  00028	f3 0f 10 6d f8	 movss	 xmm5, DWORD PTR _center$[ebp+8]
  0002d	66 0f d6 45 f0	 movq	 QWORD PTR _center$[ebp], xmm0
  00032	f3 0f 10 5d f4	 movss	 xmm3, DWORD PTR _center$[ebp+4]
  00037	f3 0f 10 10	 movss	 xmm2, DWORD PTR [eax]
  0003b	0f 57 1d 00 00
	00 00		 xorps	 xmm3, DWORD PTR __xmm@80000000800000008000000080000000
  00042	0f 28 e2	 movaps	 xmm4, xmm2
  00045	0f 57 25 00 00
	00 00		 xorps	 xmm4, DWORD PTR __xmm@80000000800000008000000080000000
  0004c	f3 0f 10 75 f0	 movss	 xmm6, DWORD PTR _center$[ebp]
$LL4@RenderTerr:
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1647 :     return pP->a * pV->x + pP->b * pV->y + pP->c * pV->z + pP->d;

  00051	0f 28 c3	 movaps	 xmm0, xmm3
  00054	0f 28 ce	 movaps	 xmm1, xmm6
  00057	f3 0f 59 49 f8	 mulss	 xmm1, DWORD PTR [ecx-8]
  0005c	f3 0f 59 41 fc	 mulss	 xmm0, DWORD PTR [ecx-4]
  00061	f3 0f 58 c8	 addss	 xmm1, xmm0
  00065	0f 28 c5	 movaps	 xmm0, xmm5
  00068	f3 0f 59 01	 mulss	 xmm0, DWORD PTR [ecx]
  0006c	f3 0f 58 c8	 addss	 xmm1, xmm0
  00070	f3 0f 58 49 04	 addss	 xmm1, DWORD PTR [ecx+4]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 105  : 		if (distance[i] <= -c_fRadius)

  00075	0f 2f e1	 comiss	 xmm4, xmm1
  00078	f3 0f 11 4c 95
	e4		 movss	 DWORD PTR _distance$[ebp+edx*4], xmm1
  0007e	73 47		 jae	 SHORT $LN15@RenderTerr

; 97   : 	center.y = -center.y;
; 98   : 
; 99   : 	int i;
; 100  : 
; 101  : 	float distance[count];
; 102  : 	for(i = 0; i < count; ++i)

  00080	42		 inc	 edx
  00081	83 c1 10	 add	 ecx, 16			; 00000010H
  00084	83 fa 06	 cmp	 edx, 6
  00087	7c c8		 jl	 SHORT $LL4@RenderTerr

; 106  : 			return VIEW_NONE;
; 107  : 	}
; 108  : 
; 109  : 	for(i = 0; i < count;++i)

  00089	33 c0		 xor	 eax, eax
  0008b	0f 1f 44 00 00	 npad	 5
$LL7@RenderTerr:

; 110  : 	{
; 111  : 		if (distance[i] <= c_fRadius)

  00090	0f 2f 54 85 e4	 comiss	 xmm2, DWORD PTR _distance$[ebp+eax*4]
  00095	73 1b		 jae	 SHORT $LN16@RenderTerr

; 106  : 			return VIEW_NONE;
; 107  : 	}
; 108  : 
; 109  : 	for(i = 0; i < count;++i)

  00097	40		 inc	 eax
  00098	83 f8 06	 cmp	 eax, 6
  0009b	7c f3		 jl	 SHORT $LL7@RenderTerr

; 113  : 	}
; 114  : 
; 115  : 	return VIEW_ALL;

  0009d	b8 02 00 00 00	 mov	 eax, 2

; 116  : }

  000a2	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a5	33 cd		 xor	 ecx, ebp
  000a7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 08 00	 ret	 8
$LN16@RenderTerr:

; 112  : 			return VIEW_PART;

  000b2	b8 01 00 00 00	 mov	 eax, 1

; 116  : }

  000b7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ba	33 cd		 xor	 ecx, ebp
  000bc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c1	8b e5		 mov	 esp, ebp
  000c3	5d		 pop	 ebp
  000c4	c2 08 00	 ret	 8
$LN15@RenderTerr:
  000c7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ca	33 c0		 xor	 eax, eax
  000cc	33 cd		 xor	 ecx, ebp
  000ce	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d3	8b e5		 mov	 esp, ebp
  000d5	5d		 pop	 ebp
  000d6	c2 08 00	 ret	 8
?__RenderTerrain_RecurseRenderQuadTree_CheckBoundingCircle@CMapOutdoor@@IAEHABUD3DXVECTOR3@@ABM@Z ENDP ; CMapOutdoor::__RenderTerrain_RecurseRenderQuadTree_CheckBoundingCircle
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?__RenderTerrain_RecurseRenderQuadTree@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@_N@Z
_TEXT	SEGMENT
_fDistance$1 = -24					; size = 4
_this$GSCopy$1$ = -20					; size = 4
_v3Center$2 = -16					; size = 12
__$ArrayPad$ = -4					; size = 4
_Node$ = 8						; size = 4
_bCullCheckNeed$ = 12					; size = 1
?__RenderTerrain_RecurseRenderQuadTree@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@_N@Z PROC ; CMapOutdoor::__RenderTerrain_RecurseRenderQuadTree, COMDAT
; _this$ = ecx

; 54   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _Node$[ebp]
  00014	57		 push	 edi
  00015	8b 7d 0c	 mov	 edi, DWORD PTR _bCullCheckNeed$[ebp]
  00018	89 4d ec	 mov	 DWORD PTR _this$GSCopy$1$[ebp], ecx
  0001b	0f 1f 44 00 00	 npad	 5
$LL23@RenderTerr:

; 55   : 	if (bCullCheckNeed)

  00020	80 7d 0c 00	 cmp	 BYTE PTR _bCullCheckNeed$[ebp], 0
  00024	74 25		 je	 SHORT $LN2@RenderTerr

; 56   : 	{
; 57   : 		switch (__RenderTerrain_RecurseRenderQuadTree_CheckBoundingCircle(Node->center, Node->radius))

  00026	8d 46 38	 lea	 eax, DWORD PTR [esi+56]
  00029	50		 push	 eax
  0002a	8d 46 2c	 lea	 eax, DWORD PTR [esi+44]
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ?__RenderTerrain_RecurseRenderQuadTree_CheckBoundingCircle@CMapOutdoor@@IAEHABUD3DXVECTOR3@@ABM@Z ; CMapOutdoor::__RenderTerrain_RecurseRenderQuadTree_CheckBoundingCircle
  00033	83 e8 00	 sub	 eax, 0
  00036	0f 84 bc 00 00
	00		 je	 $LN13@RenderTerr
  0003c	8b 4d ec	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  0003f	83 e8 02	 sub	 eax, 2
  00042	75 07		 jne	 SHORT $LN2@RenderTerr

; 58   : 		{
; 59   : 			case VIEW_ALL:
; 60   : 				// all child nodes need not cull check
; 61   : 				bCullCheckNeed = false;

  00044	c6 45 0c 00	 mov	 BYTE PTR _bCullCheckNeed$[ebp], 0
  00048	8b 7d 0c	 mov	 edi, DWORD PTR _bCullCheckNeed$[ebp]
$LN2@RenderTerr:

; 62   : 				break;
; 63   : 			case VIEW_PART:
; 64   : 				break;
; 65   : 			case VIEW_NONE:
; 66   : 				// no need to render
; 67   : 				return;
; 68   : 		}
; 69   : 		// if no need cull check more
; 70   : 		// -> bCullCheckNeed = false;
; 71   : 	}
; 72   : 
; 73   : 	if (Node->Size == 1)

  0004b	83 7e 24 01	 cmp	 DWORD PTR [esi+36], 1
  0004f	74 3c		 je	 SHORT $LN25@RenderTerr

; 78   : 	}
; 79   : 	else
; 80   : 	{
; 81   : 		if (Node->NW_Node != NULL)

  00051	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00054	85 c0		 test	 eax, eax
  00056	74 07		 je	 SHORT $LN10@RenderTerr

; 82   : 			__RenderTerrain_RecurseRenderQuadTree(Node->NW_Node, bCullCheckNeed);

  00058	57		 push	 edi
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ?__RenderTerrain_RecurseRenderQuadTree@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@_N@Z ; CMapOutdoor::__RenderTerrain_RecurseRenderQuadTree
$LN10@RenderTerr:

; 83   : 		if (Node->NE_Node != NULL)

  0005f	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00062	85 c0		 test	 eax, eax
  00064	74 0a		 je	 SHORT $LN11@RenderTerr

; 84   : 			__RenderTerrain_RecurseRenderQuadTree(Node->NE_Node, bCullCheckNeed);

  00066	8b 4d ec	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  00069	57		 push	 edi
  0006a	50		 push	 eax
  0006b	e8 00 00 00 00	 call	 ?__RenderTerrain_RecurseRenderQuadTree@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@_N@Z ; CMapOutdoor::__RenderTerrain_RecurseRenderQuadTree
$LN11@RenderTerr:

; 85   : 		if (Node->SW_Node != NULL)

  00070	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00073	85 c0		 test	 eax, eax
  00075	74 0a		 je	 SHORT $LN12@RenderTerr

; 86   : 			__RenderTerrain_RecurseRenderQuadTree(Node->SW_Node, bCullCheckNeed);

  00077	8b 4d ec	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  0007a	57		 push	 edi
  0007b	50		 push	 eax
  0007c	e8 00 00 00 00	 call	 ?__RenderTerrain_RecurseRenderQuadTree@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@_N@Z ; CMapOutdoor::__RenderTerrain_RecurseRenderQuadTree
$LN12@RenderTerr:

; 87   : 		if (Node->SE_Node != NULL)

  00081	8b 76 20	 mov	 esi, DWORD PTR [esi+32]
  00084	85 f6		 test	 esi, esi
  00086	74 70		 je	 SHORT $LN13@RenderTerr

; 88   : 			__RenderTerrain_RecurseRenderQuadTree(Node->SE_Node, bCullCheckNeed);

  00088	8b 4d ec	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  0008b	eb 93		 jmp	 SHORT $LL23@RenderTerr
$LN25@RenderTerr:

; 74   : 	{
; 75   : 		D3DXVECTOR3 v3Center = Node->center;

  0008d	f3 0f 7e 46 2c	 movq	 xmm0, QWORD PTR [esi+44]

; 76   : 		float fDistance = fMAX(fabs(v3Center.x + m_fXforDistanceCaculation), fabs(-v3Center.y + m_fYforDistanceCaculation));

  00092	83 ec 08	 sub	 esp, 8
  00095	f3 0f 10 91 14
	09 00 00	 movss	 xmm2, DWORD PTR [ecx+2324]
  0009d	8b 46 34	 mov	 eax, DWORD PTR [esi+52]
  000a0	66 0f d6 45 f0	 movq	 QWORD PTR _v3Center$2[ebp], xmm0
  000a5	f3 0f 10 4d f0	 movss	 xmm1, DWORD PTR _v3Center$2[ebp]
  000aa	f3 0f 5c 55 f4	 subss	 xmm2, DWORD PTR _v3Center$2[ebp+4]
  000af	f3 0f 58 89 10
	09 00 00	 addss	 xmm1, DWORD PTR [ecx+2320]
  000b7	89 45 f8	 mov	 DWORD PTR _v3Center$2[ebp+8], eax
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h

; 680  :             return (float)fabs(_X);

  000ba	0f 54 15 00 00
	00 00		 andps	 xmm2, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
  000c1	0f 54 0d 00 00
	00 00		 andps	 xmm1, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 76   : 		float fDistance = fMAX(fabs(v3Center.x + m_fXforDistanceCaculation), fabs(-v3Center.y + m_fYforDistanceCaculation));

  000c8	f3 0f 11 54 24
	04		 movss	 DWORD PTR [esp+4], xmm2
  000ce	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  000d3	e8 00 00 00 00	 call	 ?fMAX@@YAMMM@Z		; fMAX
  000d8	83 c4 08	 add	 esp, 8

; 77   : 		__RenderTerrain_AppendPatch(v3Center, fDistance, Node->PatchNum);

  000db	8d 45 f0	 lea	 eax, DWORD PTR _v3Center$2[ebp]
  000de	d9 5d e8	 fstp	 DWORD PTR _fDistance$1[ebp]
  000e1	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _fDistance$1[ebp]
  000e6	ff 76 28	 push	 DWORD PTR [esi+40]
  000e9	51		 push	 ecx
  000ea	8b 4d ec	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  000ed	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f2	50		 push	 eax
  000f3	e8 00 00 00 00	 call	 ?__RenderTerrain_AppendPatch@CMapOutdoor@@IAEXABUD3DXVECTOR3@@MJ@Z ; CMapOutdoor::__RenderTerrain_AppendPatch
$LN13@RenderTerr:

; 89   : 	}
; 90   : }

  000f8	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000fb	5f		 pop	 edi
  000fc	33 cd		 xor	 ecx, ebp
  000fe	5e		 pop	 esi
  000ff	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00104	8b e5		 mov	 esp, ebp
  00106	5d		 pop	 ebp
  00107	c2 08 00	 ret	 8
?__RenderTerrain_RecurseRenderQuadTree@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@_N@Z ENDP ; CMapOutdoor::__RenderTerrain_RecurseRenderQuadTree
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?__GetFogDistance@CMapOutdoor@@IAEMXZ
_TEXT	SEGMENT
tv132 = -4						; size = 4
?__GetFogDistance@CMapOutdoor@@IAEMXZ PROC		; CMapOutdoor::__GetFogDistance, COMDAT
; _this$ = ecx

; 733  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 734  : 	return (float)(CTerrainImpl::CELLSCALE * m_lViewRadius) * 0.75f;

  00004	69 41 68 c8 00
	00 00		 imul	 eax, DWORD PTR [ecx+104], 200
  0000b	66 0f 6e c0	 movd	 xmm0, eax
  0000f	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00012	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f400000
  0001a	f3 0f 11 45 fc	 movss	 DWORD PTR tv132[ebp], xmm0
  0001f	d9 45 fc	 fld	 DWORD PTR tv132[ebp]

; 735  : }

  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
?__GetFogDistance@CMapOutdoor@@IAEMXZ ENDP		; CMapOutdoor::__GetFogDistance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?__GetNoFogDistance@CMapOutdoor@@IAEMXZ
_TEXT	SEGMENT
tv132 = -4						; size = 4
?__GetNoFogDistance@CMapOutdoor@@IAEMXZ PROC		; CMapOutdoor::__GetNoFogDistance, COMDAT
; _this$ = ecx

; 728  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 729  : 	return (float)(CTerrainImpl::CELLSCALE * m_lViewRadius) * 0.5f;

  00004	69 41 68 c8 00
	00 00		 imul	 eax, DWORD PTR [ecx+104], 200
  0000b	66 0f 6e c0	 movd	 xmm0, eax
  0000f	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00012	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
  0001a	f3 0f 11 45 fc	 movss	 DWORD PTR tv132[ebp], xmm0
  0001f	d9 45 fc	 fld	 DWORD PTR tv132[ebp]

; 730  : }

  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
?__GetNoFogDistance@CMapOutdoor@@IAEMXZ ENDP		; CMapOutdoor::__GetNoFogDistance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?IsVisiblePart@CMapOutdoor@@IAE_NH@Z
_TEXT	SEGMENT
_ePart$ = 8						; size = 4
?IsVisiblePart@CMapOutdoor@@IAE_NH@Z PROC		; CMapOutdoor::IsVisiblePart, COMDAT
; _this$ = ecx

; 154  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b d1		 mov	 edx, ecx

; 155  : 	DWORD dwMask=(1<<ePart);

  00005	b8 01 00 00 00	 mov	 eax, 1
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _ePart$[ebp]
  0000d	d3 e0		 shl	 eax, cl

; 156  : 	if (dwMask & m_dwVisiblePartFlags)

  0000f	85 82 80 09 00
	00		 test	 DWORD PTR [edx+2432], eax
  00015	0f 95 c0	 setne	 al

; 157  : 		return true;
; 158  : 
; 159  : 	return false;
; 160  : }

  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
?IsVisiblePart@CMapOutdoor@@IAE_NH@Z ENDP		; CMapOutdoor::IsVisiblePart
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?InitializeVisibleParts@CMapOutdoor@@IAEXXZ
_TEXT	SEGMENT
?InitializeVisibleParts@CMapOutdoor@@IAEXXZ PROC	; CMapOutdoor::InitializeVisibleParts, COMDAT
; _this$ = ecx

; 136  : 	m_dwVisiblePartFlags=0xffffffff;

  00000	c7 81 80 09 00
	00 ff ff ff ff	 mov	 DWORD PTR [ecx+2432], -1

; 137  : }

  0000a	c3		 ret	 0
?InitializeVisibleParts@CMapOutdoor@@IAEXXZ ENDP	; CMapOutdoor::InitializeVisibleParts
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\Client\eterBase\Singleton.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\Client\eterBase\Singleton.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\Client\eterBase\Singleton.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?SelectIndexBuffer@CMapOutdoor@@IAEXEPAGPAW4_D3DPRIMITIVETYPE@@@Z
_TEXT	SEGMENT
_byLODLevel$ = 8					; size = 1
_pwPrimitiveCount$ = 12					; size = 4
_pePrimitiveType$ = 16					; size = 4
?SelectIndexBuffer@CMapOutdoor@@IAEXEPAGPAW4_D3DPRIMITIVETYPE@@@Z PROC ; CMapOutdoor::SelectIndexBuffer, COMDAT
; _this$ = ecx

; 650  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8a 45 08	 mov	 al, BYTE PTR _byLODLevel$[ebp]
  00006	53		 push	 ebx
  00007	8b d9		 mov	 ebx, ecx
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	0f b6 f8	 movzx	 edi, al
  0000e	0f b7 94 7b d8
	00 00 00	 movzx	 edx, WORD PTR [ebx+edi*2+216]

; 651  : #ifdef WORLD_EDITOR
; 652  : 	*pwPrimitiveCount = m_wNumIndices - 2;
; 653  : 	*pePrimitiveType = D3DPT_TRIANGLESTRIP;
; 654  : 	STATEMANAGER.SetIndices(m_IndexBuffer.GetD3DIndexBuffer(), 0);
; 655  : #else
; 656  : 	if (0 == byLODLevel)

  00016	84 c0		 test	 al, al
  00018	75 0d		 jne	 SHORT $LN2@SelectInde

; 657  : 	{
; 658  : 		*pwPrimitiveCount = m_wNumIndices[byLODLevel] - 2;

  0001a	8d 42 fe	 lea	 eax, DWORD PTR [edx-2]

; 659  : 		*pePrimitiveType = D3DPT_TRIANGLESTRIP;

  0001d	be 05 00 00 00	 mov	 esi, 5
  00022	0f b7 c8	 movzx	 ecx, ax

; 660  : 	}

  00025	eb 13		 jmp	 SHORT $LN3@SelectInde
$LN2@SelectInde:

; 661  : 	else
; 662  : 	{
; 663  : 		*pwPrimitiveCount =  m_wNumIndices[byLODLevel]/3;
; 664  : 		*pePrimitiveType = D3DPT_TRIANGLELIST;

  00027	8b ca		 mov	 ecx, edx
  00029	b8 ab aa aa aa	 mov	 eax, -1431655765	; aaaaaaabH
  0002e	f7 e1		 mul	 ecx
  00030	be 04 00 00 00	 mov	 esi, 4
  00035	d1 ea		 shr	 edx, 1
  00037	0f b7 ca	 movzx	 ecx, dx
$LN3@SelectInde:
; File C:\Marty 5.5\Src-Client\Client\eterBase\Singleton.h

; 27   : 		return (*ms_singleton);

  0003a	8b 45 0c	 mov	 eax, DWORD PTR _pwPrimitiveCount$[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 666  : 	STATEMANAGER.SetIndices(m_IndexBuffer[byLODLevel].GetD3DIndexBuffer(), 0);

  0003d	6a 00		 push	 0
; File C:\Marty 5.5\Src-Client\Client\eterBase\Singleton.h

; 27   : 		return (*ms_singleton);

  0003f	66 89 08	 mov	 WORD PTR [eax], cx
  00042	8b 45 10	 mov	 eax, DWORD PTR _pePrimitiveType$[ebp]
  00045	89 30		 mov	 DWORD PTR [eax], esi
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 666  : 	STATEMANAGER.SetIndices(m_IndexBuffer[byLODLevel].GetD3DIndexBuffer(), 0);

  00047	8d 04 bd 27 00
	00 00		 lea	 eax, DWORD PTR [edi*4+39]
; File C:\Marty 5.5\Src-Client\Client\eterBase\Singleton.h

; 27   : 		return (*ms_singleton);

  0004e	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 666  : 	STATEMANAGER.SetIndices(m_IndexBuffer[byLODLevel].GetD3DIndexBuffer(), 0);

  00054	03 c7		 add	 eax, edi
  00056	8d 0c 83	 lea	 ecx, DWORD PTR [ebx+eax*4]
  00059	e8 00 00 00 00	 call	 ?GetD3DIndexBuffer@CGraphicIndexBuffer@@QBEPAUIDirect3DIndexBuffer8@@XZ ; CGraphicIndexBuffer::GetD3DIndexBuffer
  0005e	50		 push	 eax
  0005f	8b ce		 mov	 ecx, esi
  00061	e8 00 00 00 00	 call	 ?SetIndices@CStateManager@@QAEXPAUIDirect3DIndexBuffer8@@I@Z ; CStateManager::SetIndices
  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	5b		 pop	 ebx

; 667  : #endif
; 668  : }

  00069	5d		 pop	 ebp
  0006a	c2 0c 00	 ret	 12			; 0000000cH
?SelectIndexBuffer@CMapOutdoor@@IAEXEPAGPAW4_D3DPRIMITIVETYPE@@@Z ENDP ; CMapOutdoor::SelectIndexBuffer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?DrawWireFrame@CMapOutdoor@@IAEXJGW4_D3DPRIMITIVETYPE@@@Z
_TEXT	SEGMENT
_patchnum$ = 8						; size = 4
_wPrimitiveCount$ = 12					; size = 2
_ePrimitiveType$ = 16					; size = 4
?DrawWireFrame@CMapOutdoor@@IAEXJGW4_D3DPRIMITIVETYPE@@@Z PROC ; CMapOutdoor::DrawWireFrame, COMDAT
; _this$ = ecx

; 773  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 774  : 	assert(NULL!=m_pTerrainPatchProxyList && "CMapOutdoor::DrawWireFrame");
; 775  : 
; 776  : 	CTerrainPatchProxy * pTerrainPatchProxy= &m_pTerrainPatchProxyList[patchnum];

  00003	8b 45 08	 mov	 eax, DWORD PTR _patchnum$[ebp]
  00006	53		 push	 ebx
  00007	8b d9		 mov	 ebx, ecx
  00009	8d 14 c5 00 00
	00 00		 lea	 edx, DWORD PTR [eax*8]
  00010	2b d0		 sub	 edx, eax
  00012	8b 43 64	 mov	 eax, DWORD PTR [ebx+100]

; 777  : 
; 778  : 	if (!pTerrainPatchProxy->isUsed())

  00015	80 7c 90 04 00	 cmp	 BYTE PTR [eax+edx*4+4], 0
  0001a	0f 84 03 01 00
	00		 je	 $LN1@DrawWireFr

; 779  : 		return;
; 780  : 
; 781  : 	long sPatchNum = pTerrainPatchProxy->GetPatchNum();
; 782  : 	if (sPatchNum < 0)

  00020	66 83 7c 90 06
	00		 cmp	 WORD PTR [eax+edx*4+6], 0
  00026	0f 8c f7 00 00
	00		 jl	 $LN1@DrawWireFr

; 783  : 		return;
; 784  : 	BYTE ucTerrainNum = pTerrainPatchProxy->GetTerrainNum();
; 785  : 	if (0xFF == ucTerrainNum)

  0002c	80 7c 90 08 ff	 cmp	 BYTE PTR [eax+edx*4+8], 255 ; 000000ffH
  00031	0f 84 ec 00 00
	00		 je	 $LN1@DrawWireFr

; 786  : 		return;
; 787  : 
; 788  : 	DWORD dwFillMode = STATEMANAGER.GetRenderState(D3DRS_FILLMODE);

  00037	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0003d	56		 push	 esi
  0003e	57		 push	 edi
  0003f	6a 08		 push	 8
  00041	e8 00 00 00 00	 call	 ?GetRenderState@CStateManager@@QAEKW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::GetRenderState

; 789  : 	STATEMANAGER.SetRenderState(D3DRS_FILLMODE, D3DFILL_WIREFRAME);

  00046	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0004c	8b f8		 mov	 edi, eax
  0004e	6a 02		 push	 2
  00050	6a 08		 push	 8
  00052	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 790  : 
; 791  : 	DWORD dwFogEnable = STATEMANAGER.GetRenderState(D3DRS_FOGENABLE);

  00057	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0005d	6a 1c		 push	 28			; 0000001cH
  0005f	e8 00 00 00 00	 call	 ?GetRenderState@CStateManager@@QAEKW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::GetRenderState

; 792  : 	STATEMANAGER.SetRenderState(D3DRS_FOGENABLE, FALSE);

  00064	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0006a	8b f0		 mov	 esi, eax
  0006c	6a 00		 push	 0
  0006e	6a 1c		 push	 28			; 0000001cH
  00070	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 793  : 
; 794  : 	STATEMANAGER.SetTexture(0, NULL);

  00075	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0007b	6a 00		 push	 0
  0007d	6a 00		 push	 0
  0007f	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 795  : 	STATEMANAGER.SetTexture(1, NULL);

  00084	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0008a	6a 00		 push	 0
  0008c	6a 01		 push	 1
  0008e	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 796  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP, D3DTOP_DISABLE);

  00093	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00099	6a 01		 push	 1
  0009b	6a 01		 push	 1
  0009d	6a 00		 push	 0
  0009f	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 797  : 
; 798  : 	STATEMANAGER.DrawIndexedPrimitive(ePrimitiveType, 0, m_iPatchTerrainVertexCount, 0, wPrimitiveCount);

  000a4	0f b7 45 0c	 movzx	 eax, WORD PTR _wPrimitiveCount$[ebp]
  000a8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000ae	50		 push	 eax
  000af	6a 00		 push	 0
  000b1	ff b3 a0 09 00
	00		 push	 DWORD PTR [ebx+2464]
  000b7	6a 00		 push	 0
  000b9	ff 75 10	 push	 DWORD PTR _ePrimitiveType$[ebp]
  000bc	e8 00 00 00 00	 call	 ?DrawIndexedPrimitive@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IIII@Z ; CStateManager::DrawIndexedPrimitive

; 799  : 
; 800  : 	STATEMANAGER.SetRenderState(D3DRS_FILLMODE, dwFillMode);

  000c1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000c7	57		 push	 edi
  000c8	6a 08		 push	 8
  000ca	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 801  : 	STATEMANAGER.SetRenderState(D3DRS_FOGENABLE, dwFogEnable);

  000cf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000d5	56		 push	 esi
  000d6	6a 1c		 push	 28			; 0000001cH
  000d8	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 802  : 
; 803  :  	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG1, D3DTA_TEXTURE);

  000dd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000e3	6a 02		 push	 2
  000e5	6a 02		 push	 2
  000e7	6a 00		 push	 0
  000e9	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 804  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG2, D3DTA_CURRENT);

  000ee	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000f4	6a 01		 push	 1
  000f6	6a 03		 push	 3
  000f8	6a 00		 push	 0
  000fa	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 805  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP,   D3DTOP_MODULATE);

  000ff	5f		 pop	 edi
  00100	5e		 pop	 esi
  00101	5b		 pop	 ebx
  00102	c7 45 10 04 00
	00 00		 mov	 DWORD PTR _ePrimitiveType$[ebp], 4
  00109	c7 45 0c 01 00
	00 00		 mov	 DWORD PTR _wPrimitiveCount$[ebp], 1
  00110	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _patchnum$[ebp], 0
  00117	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton

; 806  : }

  0011d	5d		 pop	 ebp

; 805  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP,   D3DTOP_MODULATE);

  0011e	e9 00 00 00 00	 jmp	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState
$LN1@DrawWireFr:
  00123	5b		 pop	 ebx

; 806  : }

  00124	5d		 pop	 ebp
  00125	c2 0c 00	 ret	 12			; 0000000cH
?DrawWireFrame@CMapOutdoor@@IAEXJGW4_D3DPRIMITIVETYPE@@@Z ENDP ; CMapOutdoor::DrawWireFrame
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?NEW_DrawWireFrame@CMapOutdoor@@IAEXPAVCTerrainPatchProxy@@GW4_D3DPRIMITIVETYPE@@@Z
_TEXT	SEGMENT
_pTerrainPatchProxy$ = 8				; size = 4
_wPrimitiveCount$ = 12					; size = 2
_ePrimitiveType$ = 16					; size = 4
?NEW_DrawWireFrame@CMapOutdoor@@IAEXPAVCTerrainPatchProxy@@GW4_D3DPRIMITIVETYPE@@@Z PROC ; CMapOutdoor::NEW_DrawWireFrame, COMDAT
; _this$ = ecx

; 751  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx

; 752  : 	DWORD dwFillMode = STATEMANAGER.GetRenderState(D3DRS_FILLMODE);

  00008	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0000e	6a 08		 push	 8
  00010	e8 00 00 00 00	 call	 ?GetRenderState@CStateManager@@QAEKW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::GetRenderState

; 753  : 	STATEMANAGER.SetRenderState(D3DRS_FILLMODE, D3DFILL_WIREFRAME);

  00015	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0001b	8b d8		 mov	 ebx, eax
  0001d	6a 02		 push	 2
  0001f	6a 08		 push	 8
  00021	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 754  : 
; 755  : 	DWORD dwFogEnable = STATEMANAGER.GetRenderState(D3DRS_FOGENABLE);

  00026	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0002c	6a 1c		 push	 28			; 0000001cH
  0002e	e8 00 00 00 00	 call	 ?GetRenderState@CStateManager@@QAEKW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::GetRenderState

; 756  : 	STATEMANAGER.SetRenderState(D3DRS_FOGENABLE, FALSE);

  00033	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00039	8b f0		 mov	 esi, eax
  0003b	6a 00		 push	 0
  0003d	6a 1c		 push	 28			; 0000001cH
  0003f	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 757  : 
; 758  : 	STATEMANAGER.SetTexture(0, NULL);

  00044	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0004a	6a 00		 push	 0
  0004c	6a 00		 push	 0
  0004e	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 759  : 	STATEMANAGER.SetTexture(1, NULL);

  00053	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00059	6a 00		 push	 0
  0005b	6a 01		 push	 1
  0005d	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 760  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP, D3DTOP_DISABLE);

  00062	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00068	6a 01		 push	 1
  0006a	6a 01		 push	 1
  0006c	6a 00		 push	 0
  0006e	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 761  : 
; 762  : 	STATEMANAGER.DrawIndexedPrimitive(ePrimitiveType, 0, m_iPatchTerrainVertexCount, 0, wPrimitiveCount);

  00073	0f b7 45 0c	 movzx	 eax, WORD PTR _wPrimitiveCount$[ebp]
  00077	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0007d	50		 push	 eax
  0007e	6a 00		 push	 0
  00080	ff b7 a0 09 00
	00		 push	 DWORD PTR [edi+2464]
  00086	6a 00		 push	 0
  00088	ff 75 10	 push	 DWORD PTR _ePrimitiveType$[ebp]
  0008b	e8 00 00 00 00	 call	 ?DrawIndexedPrimitive@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IIII@Z ; CStateManager::DrawIndexedPrimitive

; 763  : 
; 764  : 	STATEMANAGER.SetRenderState(D3DRS_FILLMODE, dwFillMode);

  00090	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00096	53		 push	 ebx
  00097	6a 08		 push	 8
  00099	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 765  : 	STATEMANAGER.SetRenderState(D3DRS_FOGENABLE, dwFogEnable);

  0009e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000a4	56		 push	 esi
  000a5	6a 1c		 push	 28			; 0000001cH
  000a7	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 766  : 
; 767  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG1, D3DTA_TEXTURE);

  000ac	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000b2	6a 02		 push	 2
  000b4	6a 02		 push	 2
  000b6	6a 00		 push	 0
  000b8	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 768  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG2, D3DTA_CURRENT);

  000bd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000c3	6a 01		 push	 1
  000c5	6a 03		 push	 3
  000c7	6a 00		 push	 0
  000c9	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 769  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP,   D3DTOP_MODULATE);

  000ce	5f		 pop	 edi
  000cf	5e		 pop	 esi
  000d0	5b		 pop	 ebx
  000d1	c7 45 10 04 00
	00 00		 mov	 DWORD PTR _ePrimitiveType$[ebp], 4
  000d8	c7 45 0c 01 00
	00 00		 mov	 DWORD PTR _wPrimitiveCount$[ebp], 1
  000df	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _pTerrainPatchProxy$[ebp], 0
  000e6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton

; 770  : }

  000ec	5d		 pop	 ebp

; 769  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP,   D3DTOP_MODULATE);

  000ed	e9 00 00 00 00	 jmp	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState
?NEW_DrawWireFrame@CMapOutdoor@@IAEXPAVCTerrainPatchProxy@@GW4_D3DPRIMITIVETYPE@@@Z ENDP ; CMapOutdoor::NEW_DrawWireFrame
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?SetPatchDrawVector@CMapOutdoor@@IAEXXZ
_TEXT	SEGMENT
_aPatchDrawStruct$ = -44				; size = 16
_adistancePatchPair$1 = -28				; size = 8
$T2 = -20						; size = 1
_pTerrain$3 = -20					; size = 4
_pTerrainPatchProxy$1$ = -16				; size = 4
_lPatchNum$1$ = -12					; size = 4
_byTerrainNum$4 = -8					; size = 1
_this$1$ = -4						; size = 4
?SetPatchDrawVector@CMapOutdoor@@IAEXXZ PROC		; CMapOutdoor::SetPatchDrawVector, COMDAT
; _this$ = ecx

; 671  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	8b c1		 mov	 eax, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00008	8b 88 24 01 00
	00		 mov	 ecx, DWORD PTR [eax+292]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 671  : {

  0000e	57		 push	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1762 :         auto& _My_data    = _Mypair._Myval2;

  0000f	8d b8 24 01 00
	00		 lea	 edi, DWORD PTR [eax+292]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 671  : {

  00015	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00018	3b 4f 04	 cmp	 ecx, DWORD PTR [edi+4]
  0001b	74 03		 je	 SHORT $LN31@SetPatchDr

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  0001d	89 4f 04	 mov	 DWORD PTR [edi+4], ecx
$LN31@SetPatchDr:
  00020	56		 push	 esi

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00021	8b b0 18 01 00
	00		 mov	 esi, DWORD PTR [eax+280]
  00027	3b b0 1c 01 00
	00		 cmp	 esi, DWORD PTR [eax+284]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 681  : 	while(aDistancePatchVectorIterator != m_PatchVector.end())

  0002d	0f 84 9a 00 00
	00		 je	 $LN3@SetPatchDr
  00033	53		 push	 ebx
$LL2@SetPatchDr:

; 682  : 	{
; 683  : 		std::pair<float, long> adistancePatchPair = *aDistancePatchVectorIterator;

  00034	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00037	8b 06		 mov	 eax, DWORD PTR [esi]
  00039	89 45 e4	 mov	 DWORD PTR _adistancePatchPair$1[ebp], eax
  0003c	8d 0c d5 00 00
	00 00		 lea	 ecx, DWORD PTR [edx*8]
  00043	2b ca		 sub	 ecx, edx

; 684  : 
; 685  : 		CTerrainPatchProxy * pTerrainPatchProxy = &m_pTerrainPatchProxyList[adistancePatchPair.second];

  00045	8b 55 fc	 mov	 edx, DWORD PTR _this$1$[ebp]
  00048	8b 42 64	 mov	 eax, DWORD PTR [edx+100]

; 686  : 
; 687  : 		if (!pTerrainPatchProxy->isUsed())

  0004b	80 7c 88 04 00	 cmp	 BYTE PTR [eax+ecx*4+4], 0
  00050	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
  00053	89 45 f0	 mov	 DWORD PTR _pTerrainPatchProxy$1$[ebp], eax
  00056	74 62		 je	 SHORT $LN67@SetPatchDr

; 688  : 		{
; 689  : 			++aDistancePatchVectorIterator;
; 690  : 			continue;
; 691  : 		}
; 692  : 
; 693  : 		long lPatchNum = pTerrainPatchProxy->GetPatchNum();

  00058	0f bf 48 06	 movsx	 ecx, WORD PTR [eax+6]
  0005c	89 4d f4	 mov	 DWORD PTR _lPatchNum$1$[ebp], ecx

; 694  : 		if (lPatchNum < 0)

  0005f	85 c9		 test	 ecx, ecx
  00061	78 57		 js	 SHORT $LN67@SetPatchDr

; 695  : 		{
; 696  : 			++aDistancePatchVectorIterator;
; 697  : 			continue;
; 698  : 		}
; 699  : 
; 700  : 		BYTE byTerrainNum = pTerrainPatchProxy->GetTerrainNum();

  00063	8a 58 08	 mov	 bl, BYTE PTR [eax+8]
  00066	88 5d f8	 mov	 BYTE PTR _byTerrainNum$4[ebp], bl

; 701  : 		if (0xFF == byTerrainNum)

  00069	80 fb ff	 cmp	 bl, 255			; 000000ffH
  0006c	74 4c		 je	 SHORT $LN67@SetPatchDr

; 702  : 		{
; 703  : 			++aDistancePatchVectorIterator;
; 704  : 			continue;
; 705  : 		}
; 706  : 
; 707  : 		CTerrain * pTerrain;
; 708  : 		if (!GetTerrainPointer(byTerrainNum, &pTerrain))

  0006e	8d 45 ec	 lea	 eax, DWORD PTR _pTerrain$3[ebp]
  00071	8b ca		 mov	 ecx, edx
  00073	50		 push	 eax
  00074	ff 75 f8	 push	 DWORD PTR _byTerrainNum$4[ebp]
  00077	e8 00 00 00 00	 call	 ?GetTerrainPointer@CMapOutdoor@@QAEHEPAPAVCTerrain@@@Z ; CMapOutdoor::GetTerrainPointer
  0007c	85 c0		 test	 eax, eax
  0007e	74 3a		 je	 SHORT $LN67@SetPatchDr

; 716  : 		aPatchDrawStruct.lPatchNum				= lPatchNum;

  00080	8b 45 f4	 mov	 eax, DWORD PTR _lPatchNum$1$[ebp]
  00083	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _adistancePatchPair$1[ebp]
  00088	89 45 dc	 mov	 DWORD PTR _aPatchDrawStruct$[ebp+8], eax

; 717  : 		aPatchDrawStruct.pTerrainPatchProxy		= pTerrainPatchProxy;

  0008b	8b 45 f0	 mov	 eax, DWORD PTR _pTerrainPatchProxy$1$[ebp]
  0008e	89 45 e0	 mov	 DWORD PTR _aPatchDrawStruct$[ebp+12], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  00091	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 714  : 		aPatchDrawStruct.fDistance				= adistancePatchPair.first;

  00094	f3 0f 11 45 d4	 movss	 DWORD PTR _aPatchDrawStruct$[ebp], xmm0

; 715  : 		aPatchDrawStruct.byTerrainNum			= byTerrainNum;

  00099	88 5d d8	 mov	 BYTE PTR _aPatchDrawStruct$[ebp+4], bl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  0009c	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0009f	74 0d		 je	 SHORT $LN68@SetPatchDr
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 254  :         ::new (static_cast<void*>(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

  000a1	0f 10 45 d4	 movups	 xmm0, XMMWORD PTR _aPatchDrawStruct$[ebp]
  000a5	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 806  :         ++_Mylast;

  000a8	83 47 04 10	 add	 DWORD PTR [edi+4], 16	; 00000010H

; 782  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  000ac	eb 0c		 jmp	 SHORT $LN67@SetPatchDr
$LN68@SetPatchDr:

; 783  :         }
; 784  : 
; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  000ae	8d 4d d4	 lea	 ecx, DWORD PTR _aPatchDrawStruct$[ebp]
  000b1	51		 push	 ecx
  000b2	50		 push	 eax
  000b3	8b cf		 mov	 ecx, edi
  000b5	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABUTPatchDrawStruct@CMapOutdoor@@@?$vector@UTPatchDrawStruct@CMapOutdoor@@V?$allocator@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@AAEPAUTPatchDrawStruct@CMapOutdoor@@QAU23@ABU23@@Z ; std::vector<CMapOutdoor::TPatchDrawStruct,std::allocator<CMapOutdoor::TPatchDrawStruct> >::_Emplace_reallocate<CMapOutdoor::TPatchDrawStruct const &>
$LN67@SetPatchDr:

; 163  :         return _Ptr == _Right._Ptr;

  000ba	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]

; 1806 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  000bd	83 c6 08	 add	 esi, 8

; 163  :         return _Ptr == _Right._Ptr;

  000c0	3b b0 1c 01 00
	00		 cmp	 esi, DWORD PTR [eax+284]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 681  : 	while(aDistancePatchVectorIterator != m_PatchVector.end())

  000c6	0f 85 68 ff ff
	ff		 jne	 $LL2@SetPatchDr
  000cc	5b		 pop	 ebx
$LN3@SetPatchDr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  000cd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A
  000d3	5e		 pop	 esi
  000d4	3b 0d 04 00 00
	00		 cmp	 ecx, DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  000da	74 06		 je	 SHORT $LN46@SetPatchDr

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  000dc	89 0d 04 00 00
	00		 mov	 DWORD PTR ?m_TerrainNumVector@FSortPatchDrawStructWithTerrainNum@CMapOutdoor@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, ecx
$LN46@SetPatchDr:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 724  : 	std::stable_sort(m_PatchDrawStructVector.begin(), m_PatchDrawStructVector.end(), FSortPatchDrawStructWithTerrainNum());

  000e2	ff 75 ec	 push	 DWORD PTR $T2[ebp]
  000e5	ff b0 28 01 00
	00		 push	 DWORD PTR [eax+296]
  000eb	ff 37		 push	 DWORD PTR [edi]
  000ed	e8 00 00 00 00	 call	 ??$stable_sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@std@@UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@@0@0UFSortPatchDrawStructWithTerrainNum@CMapOutdoor@@@Z ; std::stable_sort<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CMapOutdoor::TPatchDrawStruct> > >,CMapOutdoor::FSortPatchDrawStructWithTerrainNum>
  000f2	83 c4 0c	 add	 esp, 12			; 0000000cH
  000f5	5f		 pop	 edi

; 725  : }

  000f6	8b e5		 mov	 esp, ebp
  000f8	5d		 pop	 ebp
  000f9	c3		 ret	 0
?SetPatchDrawVector@CMapOutdoor@@IAEXXZ ENDP		; CMapOutdoor::SetPatchDrawVector
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Xlength@?$vector@UTPatchDrawStruct@CMapOutdoor@@V?$allocator@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@UTPatchDrawStruct@CMapOutdoor@@V?$allocator@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@CAXXZ PROC ; std::vector<CMapOutdoor::TPatchDrawStruct,std::allocator<CMapOutdoor::TPatchDrawStruct> >::_Xlength, COMDAT

; 2138 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@UTPatchDrawStruct@CMapOutdoor@@V?$allocator@UTPatchDrawStruct@CMapOutdoor@@@std@@@std@@CAXXZ ENDP ; std::vector<CMapOutdoor::TPatchDrawStruct,std::allocator<CMapOutdoor::TPatchDrawStruct> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Xlength@?$vector@U?$pair@MJ@std@@V?$allocator@U?$pair@MJ@std@@@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@U?$pair@MJ@std@@V?$allocator@U?$pair@MJ@std@@@2@@std@@CAXXZ PROC ; std::vector<std::pair<float,long>,std::allocator<std::pair<float,long> > >::_Xlength, COMDAT

; 2138 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@U?$pair@MJ@std@@V?$allocator@U?$pair@MJ@std@@@2@@std@@CAXXZ ENDP ; std::vector<std::pair<float,long>,std::allocator<std::pair<float,long> > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?RenderTree@CMapOutdoor@@QAEXXZ
_TEXT	SEGMENT
?RenderTree@CMapOutdoor@@QAEXXZ PROC			; CMapOutdoor::RenderTree, COMDAT
; _this$ = ecx

; 232  : 	if (IsVisiblePart(PART_TREE))

  00000	6a 04		 push	 4
  00002	e8 00 00 00 00	 call	 ?IsVisiblePart@CMapOutdoor@@IAE_NH@Z ; CMapOutdoor::IsVisiblePart
  00007	84 c0		 test	 al, al
  00009	74 0d		 je	 SHORT $LN2@RenderTree

; 233  : 		CSpeedTreeForestDirectX8::Instance().Render();

  0000b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCSpeedTreeForestDirectX8@@@@0PAVCSpeedTreeForestDirectX8@@A ; CSingleton<CSpeedTreeForestDirectX8>::ms_singleton
  00011	6a 0f		 push	 15			; 0000000fH
  00013	8b 01		 mov	 eax, DWORD PTR [ecx]
  00015	ff 50 08	 call	 DWORD PTR [eax+8]
$LN2@RenderTree:

; 234  : }

  00018	c3		 ret	 0
?RenderTree@CMapOutdoor@@QAEXXZ ENDP			; CMapOutdoor::RenderTree
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\Client\eterBase\Singleton.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?RenderPCBlocker@CMapOutdoor@@QAEXXZ
_TEXT	SEGMENT
tv422 = -4						; size = 4
?RenderPCBlocker@CMapOutdoor@@QAEXXZ PROC		; CMapOutdoor::RenderPCBlocker, COMDAT
; _this$ = ecx

; 604  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	57		 push	 edi
  00005	8b f9		 mov	 edi, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00007	8b 87 1c 0a 00
	00		 mov	 eax, DWORD PTR [edi+2588]
  0000d	2b 87 18 0a 00
	00		 sub	 eax, DWORD PTR [edi+2584]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 607  : 	if (m_PCBlockerVector.size() != 0)

  00013	a9 fc ff ff ff	 test	 eax, -4			; fffffffcH
  00018	0f 84 88 02 00
	00		 je	 $LN2@RenderPCBl

; 608  : 	{
; 609  : 		STATEMANAGER.SetTexture(0, NULL);

  0001e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00024	56		 push	 esi
  00025	6a 00		 push	 0
  00027	6a 00		 push	 0
  00029	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 610  : 		STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG1,	D3DTA_TEXTURE);

  0002e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00034	6a 02		 push	 2
  00036	6a 02		 push	 2
  00038	6a 00		 push	 0
  0003a	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 611  : 		STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG2,	D3DTA_CURRENT);

  0003f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00045	6a 01		 push	 1
  00047	6a 03		 push	 3
  00049	6a 00		 push	 0
  0004b	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 612  : 		STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP,	D3DTOP_MODULATE);

  00050	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00056	6a 04		 push	 4
  00058	6a 01		 push	 1
  0005a	6a 00		 push	 0
  0005c	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 613  : 		STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAARG1,	D3DTA_TEXTURE);

  00061	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00067	6a 02		 push	 2
  00069	6a 05		 push	 5
  0006b	6a 00		 push	 0
  0006d	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 614  : 		STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAOP,	D3DTOP_SELECTARG1);

  00072	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00078	6a 02		 push	 2
  0007a	6a 04		 push	 4
  0007c	6a 00		 push	 0
  0007e	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 615  : 		STATEMANAGER.SetTextureStageState(1, D3DTSS_COLOROP,	D3DTOP_SELECTARG1);

  00083	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00089	6a 02		 push	 2
  0008b	6a 01		 push	 1
  0008d	6a 01		 push	 1
  0008f	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 616  : 		STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAOP,	D3DTOP_DISABLE);

  00094	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0009a	6a 01		 push	 1
  0009c	6a 04		 push	 4
  0009e	6a 01		 push	 1
  000a0	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 617  : 
; 618  : 		STATEMANAGER.SaveRenderState(D3DRS_ALPHABLENDENABLE, TRUE);

  000a5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000ab	6a 01		 push	 1
  000ad	6a 1b		 push	 27			; 0000001bH
  000af	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 619  : 		STATEMANAGER.SaveTextureStageState(1, D3DTSS_TEXCOORDINDEX, D3DTSS_TCI_CAMERASPACEPOSITION);

  000b4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000ba	68 00 00 02 00	 push	 131072			; 00020000H
  000bf	6a 0b		 push	 11			; 0000000bH
  000c1	6a 01		 push	 1
  000c3	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 620  : 		STATEMANAGER.SaveTextureStageState(1, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_COUNT2);

  000c8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000ce	6a 02		 push	 2
  000d0	6a 18		 push	 24			; 00000018H
  000d2	6a 01		 push	 1
  000d4	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 621  : 		STATEMANAGER.SetTextureStageState(1, D3DTSS_COLORARG1, D3DTA_CURRENT);

  000d9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000df	6a 01		 push	 1
  000e1	6a 02		 push	 2
  000e3	6a 01		 push	 1
  000e5	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 622  : 		STATEMANAGER.SetTextureStageState(1, D3DTSS_COLOROP, D3DTOP_SELECTARG1);

  000ea	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000f0	6a 02		 push	 2
  000f2	6a 01		 push	 1
  000f4	6a 01		 push	 1
  000f6	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 623  : 		STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAARG1, D3DTA_TEXTURE);

  000fb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00101	6a 02		 push	 2
  00103	6a 05		 push	 5
  00105	6a 01		 push	 1
  00107	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 624  : 		STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAOP, D3DTOP_SELECTARG1);

  0010c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00112	6a 02		 push	 2
  00114	6a 04		 push	 4
  00116	6a 01		 push	 1
  00118	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 625  : 		STATEMANAGER.SaveTextureStageState(1, D3DTSS_ADDRESSU,	D3DTADDRESS_CLAMP);

  0011d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00123	6a 03		 push	 3
  00125	6a 0d		 push	 13			; 0000000dH
  00127	6a 01		 push	 1
  00129	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 626  : 		STATEMANAGER.SaveTextureStageState(1, D3DTSS_ADDRESSV,	D3DTADDRESS_CLAMP);

  0012e	6a 03		 push	 3
  00130	6a 0e		 push	 14			; 0000000eH
  00132	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00138	6a 01		 push	 1
  0013a	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 627  : 
; 628  : 		STATEMANAGER.SaveTransform(D3DTS_TEXTURE1, &m_matBuildingTransparent);

  0013f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00145	8d 87 2c 0e 00
	00		 lea	 eax, DWORD PTR [edi+3628]
  0014b	50		 push	 eax
  0014c	6a 11		 push	 17			; 00000011H
  0014e	e8 00 00 00 00	 call	 ?SaveTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; CStateManager::SaveTransform
; File C:\Marty 5.5\Src-Client\Client\eterBase\Singleton.h

; 27   : 		return (*ms_singleton);

  00153	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 629  : 		STATEMANAGER.SetTexture(1, m_BuildingTransparentImageInstance.GetTexturePointer()->GetD3DTexture());

  00159	8d 8f 0c 0e 00
	00		 lea	 ecx, DWORD PTR [edi+3596]
  0015f	e8 00 00 00 00	 call	 ?GetTexturePointer@CGraphicImageInstance@@QAEPAVCGraphicTexture@@XZ ; CGraphicImageInstance::GetTexturePointer
  00164	8b c8		 mov	 ecx, eax
  00166	e8 00 00 00 00	 call	 ?GetD3DTexture@CGraphicTexture@@QBEPAUIDirect3DTexture8@@XZ ; CGraphicTexture::GetD3DTexture
  0016b	50		 push	 eax
  0016c	6a 01		 push	 1
  0016e	8b ce		 mov	 ecx, esi
  00170	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00175	8b 87 1c 0a 00
	00		 mov	 eax, DWORD PTR [edi+2588]
  0017b	8b b7 18 0a 00
	00		 mov	 esi, DWORD PTR [edi+2584]
  00181	89 45 fc	 mov	 DWORD PTR tv422[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00184	3b f0		 cmp	 esi, eax
  00186	74 74		 je	 SHORT $LN40@RenderPCBl
  00188	53		 push	 ebx
  00189	0f 1f 80 00 00
	00 00		 npad	 7
$LL41@RenderPCBl:

; 246  :         _Func(*_UFirst);

  00190	8b 1e		 mov	 ebx, DWORD PTR [esi]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 315  : 		pInstance->Show();

  00192	8b cb		 mov	 ecx, ebx
  00194	e8 00 00 00 00	 call	 ?Show@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::Show

; 316  : 		CGraphicThingInstance* pThingInstance = dynamic_cast <CGraphicThingInstance*> (pInstance);

  00199	6a 00		 push	 0
  0019b	68 00 00 00 00	 push	 OFFSET ??_R0?AVCGraphicThingInstance@@@8
  001a0	68 00 00 00 00	 push	 OFFSET ??_R0?AVCGraphicObjectInstance@@@8
  001a5	6a 00		 push	 0
  001a7	53		 push	 ebx
  001a8	e8 00 00 00 00	 call	 ___RTDynamicCast
  001ad	8b f8		 mov	 edi, eax
  001af	83 c4 14	 add	 esp, 20			; 00000014H

; 317  : 		if (pThingInstance != NULL)

  001b2	85 ff		 test	 edi, edi
  001b4	74 25		 je	 SHORT $LN45@RenderPCBl

; 318  : 		{
; 319  : 			if (pThingInstance->HaveBlendThing())

  001b6	8b cf		 mov	 ecx, edi
  001b8	e8 00 00 00 00	 call	 ?HaveBlendThing@CGraphicThingInstance@@QAE_NXZ ; CGraphicThingInstance::HaveBlendThing
  001bd	84 c0		 test	 al, al
  001bf	74 1a		 je	 SHORT $LN45@RenderPCBl

; 320  : 			{
; 321  : 				STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAOP,   D3DTOP_DISABLE);

  001c1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001c7	6a 01		 push	 1
  001c9	6a 04		 push	 4
  001cb	6a 01		 push	 1
  001cd	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 322  : 				pThingInstance->BlendRender();

  001d2	8b cf		 mov	 ecx, edi
  001d4	e8 00 00 00 00	 call	 ?BlendRender@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::BlendRender

; 323  : 				return;

  001d9	eb 18		 jmp	 SHORT $LN39@RenderPCBl
$LN45@RenderPCBl:

; 324  : 			}
; 325  : 		}
; 326  : 		STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAOP, D3DTOP_SELECTARG1);

  001db	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001e1	6a 02		 push	 2
  001e3	6a 04		 push	 4
  001e5	6a 01		 push	 1
  001e7	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 327  : 
; 328  : 		pInstance->RenderPCBlocker();

  001ec	8b cb		 mov	 ecx, ebx
  001ee	e8 00 00 00 00	 call	 ?RenderPCBlocker@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::RenderPCBlocker
$LN39@RenderPCBl:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  001f3	83 c6 04	 add	 esi, 4
  001f6	3b 75 fc	 cmp	 esi, DWORD PTR tv422[ebp]
  001f9	75 95		 jne	 SHORT $LL41@RenderPCBl
  001fb	5b		 pop	 ebx
$LN40@RenderPCBl:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 633  : 		STATEMANAGER.SetTexture(1, NULL);

  001fc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00202	6a 00		 push	 0
  00204	6a 01		 push	 1
  00206	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 634  : 		STATEMANAGER.RestoreTransform(D3DTS_TEXTURE1);

  0020b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00211	6a 11		 push	 17			; 00000011H
  00213	e8 00 00 00 00	 call	 ?RestoreTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@@Z ; CStateManager::RestoreTransform

; 635  : 
; 636  : 		STATEMANAGER.RestoreTextureStageState(1, D3DTSS_TEXCOORDINDEX);

  00218	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0021e	6a 0b		 push	 11			; 0000000bH
  00220	6a 01		 push	 1
  00222	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 637  : 		STATEMANAGER.RestoreTextureStageState(1, D3DTSS_TEXTURETRANSFORMFLAGS);

  00227	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0022d	6a 18		 push	 24			; 00000018H
  0022f	6a 01		 push	 1
  00231	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 638  : 		STATEMANAGER.SetTextureStageState(1, D3DTSS_COLORARG1, D3DTA_TEXTURE);

  00236	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0023c	6a 02		 push	 2
  0023e	6a 02		 push	 2
  00240	6a 01		 push	 1
  00242	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 639  : 		STATEMANAGER.SetTextureStageState(1, D3DTSS_COLOROP, D3DTOP_DISABLE);

  00247	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0024d	6a 01		 push	 1
  0024f	6a 01		 push	 1
  00251	6a 01		 push	 1
  00253	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 640  : 		STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAARG1, D3DTA_TEXTURE);

  00258	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0025e	6a 02		 push	 2
  00260	6a 05		 push	 5
  00262	6a 01		 push	 1
  00264	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 641  : 		STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAOP, D3DTOP_DISABLE);

  00269	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0026f	6a 01		 push	 1
  00271	6a 04		 push	 4
  00273	6a 01		 push	 1
  00275	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 642  : 		STATEMANAGER.RestoreTextureStageState(1, D3DTSS_ADDRESSU);

  0027a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00280	6a 0d		 push	 13			; 0000000dH
  00282	6a 01		 push	 1
  00284	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 643  : 		STATEMANAGER.RestoreTextureStageState(1, D3DTSS_ADDRESSV);

  00289	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0028f	6a 0e		 push	 14			; 0000000eH
  00291	6a 01		 push	 1
  00293	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 644  : 		STATEMANAGER.RestoreRenderState(D3DRS_ALPHABLENDENABLE);

  00298	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0029e	6a 1b		 push	 27			; 0000001bH
  002a0	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState
  002a5	5e		 pop	 esi
$LN2@RenderPCBl:
  002a6	5f		 pop	 edi

; 645  : 	}
; 646  : #endif
; 647  : }

  002a7	8b e5		 mov	 esp, ebp
  002a9	5d		 pop	 ebp
  002aa	c3		 ret	 0
?RenderPCBlocker@CMapOutdoor@@QAEXXZ ENDP		; CMapOutdoor::RenderPCBlocker
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?RenderEffect@CMapOutdoor@@QAEXXZ
_TEXT	SEGMENT
_pArea$1 = -4						; size = 4
?RenderEffect@CMapOutdoor@@QAEXXZ PROC			; CMapOutdoor::RenderEffect, COMDAT
; _this$ = ecx

; 333  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	57		 push	 edi

; 334  : 	if (!IsVisiblePart(PART_OBJECT))

  00005	6a 01		 push	 1
  00007	8b f9		 mov	 edi, ecx
  00009	e8 00 00 00 00	 call	 ?IsVisiblePart@CMapOutdoor@@IAE_NH@Z ; CMapOutdoor::IsVisiblePart
  0000e	84 c0		 test	 al, al
  00010	74 22		 je	 SHORT $LN3@RenderEffe

; 335  : 		return;
; 336  : 	for (int i = 0; i < AROUND_AREA_NUM; ++i)

  00012	56		 push	 esi
  00013	33 f6		 xor	 esi, esi
$LL4@RenderEffe:

; 337  : 	{
; 338  : 		CArea * pArea;
; 339  : 		if (GetAreaPointer(i, &pArea))

  00015	8d 45 fc	 lea	 eax, DWORD PTR _pArea$1[ebp]
  00018	8b cf		 mov	 ecx, edi
  0001a	50		 push	 eax
  0001b	56		 push	 esi
  0001c	e8 00 00 00 00	 call	 ?GetAreaPointer@CMapOutdoor@@QAEHEPAPAVCArea@@@Z ; CMapOutdoor::GetAreaPointer
  00021	85 c0		 test	 eax, eax
  00023	74 08		 je	 SHORT $LN2@RenderEffe

; 340  : 		{
; 341  : 			pArea->RenderEffect();

  00025	8b 4d fc	 mov	 ecx, DWORD PTR _pArea$1[ebp]
  00028	e8 00 00 00 00	 call	 ?RenderEffect@CArea@@QAEXXZ ; CArea::RenderEffect
$LN2@RenderEffe:

; 335  : 		return;
; 336  : 	for (int i = 0; i < AROUND_AREA_NUM; ++i)

  0002d	46		 inc	 esi
  0002e	83 fe 09	 cmp	 esi, 9
  00031	7c e2		 jl	 SHORT $LL4@RenderEffe
  00033	5e		 pop	 esi
$LN3@RenderEffe:
  00034	5f		 pop	 edi

; 342  : 		}
; 343  : 	}
; 344  : }

  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?RenderEffect@CMapOutdoor@@QAEXXZ ENDP			; CMapOutdoor::RenderEffect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?RenderDungeon@CMapOutdoor@@QAEXXZ
_TEXT	SEGMENT
_pArea$1 = -4						; size = 4
?RenderDungeon@CMapOutdoor@@QAEXXZ PROC			; CMapOutdoor::RenderDungeon, COMDAT
; _this$ = ecx

; 593  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx

; 594  : 	for (int i = 0; i < AROUND_AREA_NUM; ++i)

  00008	33 f6		 xor	 esi, esi
  0000a	66 0f 1f 44 00
	00		 npad	 6
$LL4@RenderDung:

; 595  : 	{
; 596  : 		CArea * pArea;
; 597  : 		if (!GetAreaPointer(i, &pArea))

  00010	8d 45 fc	 lea	 eax, DWORD PTR _pArea$1[ebp]
  00013	8b cf		 mov	 ecx, edi
  00015	50		 push	 eax
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ?GetAreaPointer@CMapOutdoor@@QAEHEPAPAVCArea@@@Z ; CMapOutdoor::GetAreaPointer
  0001c	85 c0		 test	 eax, eax
  0001e	74 08		 je	 SHORT $LN2@RenderDung

; 598  : 			continue;
; 599  : 		pArea->RenderDungeon();

  00020	8b 4d fc	 mov	 ecx, DWORD PTR _pArea$1[ebp]
  00023	e8 00 00 00 00	 call	 ?RenderDungeon@CArea@@QAEXXZ ; CArea::RenderDungeon
$LN2@RenderDung:

; 594  : 	for (int i = 0; i < AROUND_AREA_NUM; ++i)

  00028	46		 inc	 esi
  00029	83 fe 09	 cmp	 esi, 9
  0002c	7c e2		 jl	 SHORT $LL4@RenderDung
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi

; 600  : 	}
; 601  : }

  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
?RenderDungeon@CMapOutdoor@@QAEXXZ ENDP			; CMapOutdoor::RenderDungeon
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?RenderBlendArea@CMapOutdoor@@QAEXXZ
_TEXT	SEGMENT
$T1 = -4						; size = 1
_pArea$2 = -4						; size = 4
?RenderBlendArea@CMapOutdoor@@QAEXXZ PROC		; CMapOutdoor::RenderBlendArea, COMDAT
; _this$ = ecx

; 519  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	57		 push	 edi

; 520  : 	if (!IsVisiblePart(PART_OBJECT))

  00005	6a 01		 push	 1
  00007	8b f9		 mov	 edi, ecx
  00009	e8 00 00 00 00	 call	 ?IsVisiblePart@CMapOutdoor@@IAE_NH@Z ; CMapOutdoor::IsVisiblePart
  0000e	84 c0		 test	 al, al
  00010	0f 84 9d 01 00
	00		 je	 $LN8@RenderBlen

; 521  : 		return;
; 522  : 
; 523  : 	static std::vector<CGraphicThingInstance*> s_kVct_pkBlendThingInstSort;

  00016	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  0001c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR __tls_index
  00022	8b 0c 90	 mov	 ecx, DWORD PTR [eax+edx*4]
  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4HA
  0002a	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  00030	0f 8f 82 01 00
	00		 jg	 $LN88@RenderBlen
$LN2@RenderBlen:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00036	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_kVct_pkBlendThingInstSort@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A
  0003b	3b 05 04 00 00
	00		 cmp	 eax, DWORD PTR ?s_kVct_pkBlendThingInstSort@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A+4
  00041	74 05		 je	 SHORT $LN61@RenderBlen

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  00043	a3 04 00 00 00	 mov	 DWORD PTR ?s_kVct_pkBlendThingInstSort@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A+4, eax
$LN61@RenderBlen:
  00048	56		 push	 esi
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 526  : 	for (int i = 0; i < AROUND_AREA_NUM; ++i)

  00049	33 f6		 xor	 esi, esi
  0004b	0f 1f 44 00 00	 npad	 5
$LL5@RenderBlen:

; 527  : 	{
; 528  : 		CArea * pArea;
; 529  : 		if (GetAreaPointer(i, &pArea))

  00050	8d 45 fc	 lea	 eax, DWORD PTR _pArea$2[ebp]
  00053	8b cf		 mov	 ecx, edi
  00055	50		 push	 eax
  00056	56		 push	 esi
  00057	e8 00 00 00 00	 call	 ?GetAreaPointer@CMapOutdoor@@QAEHEPAPAVCArea@@@Z ; CMapOutdoor::GetAreaPointer
  0005c	85 c0		 test	 eax, eax
  0005e	74 0d		 je	 SHORT $LN3@RenderBlen

; 530  : 		{
; 531  : 			pArea->CollectBlendRenderingObject(s_kVct_pkBlendThingInstSort);

  00060	8b 4d fc	 mov	 ecx, DWORD PTR _pArea$2[ebp]
  00063	68 00 00 00 00	 push	 OFFSET ?s_kVct_pkBlendThingInstSort@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A
  00068	e8 00 00 00 00	 call	 ?CollectBlendRenderingObject@CArea@@QAEXAAV?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@@Z ; CArea::CollectBlendRenderingObject
$LN3@RenderBlen:

; 526  : 	for (int i = 0; i < AROUND_AREA_NUM; ++i)

  0006d	46		 inc	 esi
  0006e	83 fe 09	 cmp	 esi, 9
  00071	7c dd		 jl	 SHORT $LL5@RenderBlen
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00073	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?s_kVct_pkBlendThingInstSort@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A+4
  00079	8b c1		 mov	 eax, ecx
  0007b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?s_kVct_pkBlendThingInstSort@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A
  00081	2b c2		 sub	 eax, edx
  00083	c1 f8 02	 sar	 eax, 2
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 535  : 	if (s_kVct_pkBlendThingInstSort.size() != 0)

  00086	85 c0		 test	 eax, eax
  00088	0f 84 24 01 00
	00		 je	 $LN86@RenderBlen
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8067 :     _Sort_unchecked(_UFirst, _ULast, _ULast - _UFirst, _Pass_fn(_Pred));

  0008e	ff 75 fc	 push	 DWORD PTR $T1[ebp]
  00091	50		 push	 eax
  00092	51		 push	 ecx
  00093	52		 push	 edx
  00094	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@0HUCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ; std::_Sort_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 571  : 		STATEMANAGER.SaveRenderState(D3DRS_ZWRITEENABLE, TRUE);

  00099	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8067 :     _Sort_unchecked(_UFirst, _ULast, _ULast - _UFirst, _Pass_fn(_Pred));

  0009f	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 571  : 		STATEMANAGER.SaveRenderState(D3DRS_ZWRITEENABLE, TRUE);

  000a2	6a 01		 push	 1
  000a4	6a 0e		 push	 14			; 0000000eH
  000a6	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 572  : 		STATEMANAGER.SaveRenderState(D3DRS_ALPHABLENDENABLE, TRUE);

  000ab	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000b1	6a 01		 push	 1
  000b3	6a 1b		 push	 27			; 0000001bH
  000b5	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 573  : 		STATEMANAGER.SaveRenderState(D3DRS_SRCBLEND, D3DBLEND_SRCALPHA);

  000ba	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000c0	6a 05		 push	 5
  000c2	6a 13		 push	 19			; 00000013H
  000c4	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 574  : 		STATEMANAGER.SaveRenderState(D3DRS_DESTBLEND, D3DBLEND_INVSRCALPHA);

  000c9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000cf	6a 06		 push	 6
  000d1	6a 14		 push	 20			; 00000014H
  000d3	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 575  : 		STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAARG1, D3DTA_TEXTURE);

  000d8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000de	6a 02		 push	 2
  000e0	6a 05		 push	 5
  000e2	6a 00		 push	 0
  000e4	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 576  : 		STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAOP, D3DTOP_SELECTARG1);

  000e9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000ef	6a 02		 push	 2
  000f1	6a 04		 push	 4
  000f3	6a 00		 push	 0
  000f5	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 577  : 		STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG1, D3DTA_TEXTURE);

  000fa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00100	6a 02		 push	 2
  00102	6a 02		 push	 2
  00104	6a 00		 push	 0
  00106	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 578  : 		STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG2, D3DTA_DIFFUSE);

  0010b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00111	6a 00		 push	 0
  00113	6a 03		 push	 3
  00115	6a 00		 push	 0
  00117	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 579  : 		STATEMANAGER.SetTextureStageState(1, D3DTSS_COLORARG1, D3DTA_TEXTURE);

  0011c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00122	6a 02		 push	 2
  00124	6a 02		 push	 2
  00126	6a 01		 push	 1
  00128	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 580  : 		STATEMANAGER.SetTextureStageState(1, D3DTSS_COLORARG2, D3DTA_CURRENT);

  0012d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00133	6a 01		 push	 1
  00135	6a 03		 push	 3
  00137	6a 01		 push	 1
  00139	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 581  : 		STATEMANAGER.SetTextureStageState(1, D3DTSS_COLOROP,   D3DTOP_SELECTARG1);

  0013e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00144	6a 02		 push	 2
  00146	6a 01		 push	 1
  00148	6a 01		 push	 1
  0014a	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 582  : 		STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAOP,   D3DTOP_DISABLE);

  0014f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00155	6a 01		 push	 1
  00157	6a 04		 push	 4
  00159	6a 01		 push	 1
  0015b	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 243  :     auto _UFirst      = _Get_unwrapped(_First);

  00160	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?s_kVct_pkBlendThingInstSort@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A+4
  00166	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?s_kVct_pkBlendThingInstSort@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A
  0016c	3b f7		 cmp	 esi, edi

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  0016e	74 0e		 je	 SHORT $LN52@RenderBlen
$LL53@RenderBlen:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 370  : 		pkThingInst->BlendRender();

  00170	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00172	e8 00 00 00 00	 call	 ?BlendRender@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::BlendRender
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00177	83 c6 04	 add	 esi, 4
  0017a	3b f7		 cmp	 esi, edi
  0017c	75 f2		 jne	 SHORT $LL53@RenderBlen
$LN52@RenderBlen:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 586  : 		STATEMANAGER.RestoreRenderState(D3DRS_ALPHABLENDENABLE);

  0017e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00184	6a 1b		 push	 27			; 0000001bH
  00186	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 587  : 		STATEMANAGER.RestoreRenderState(D3DRS_SRCBLEND);

  0018b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00191	6a 13		 push	 19			; 00000013H
  00193	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 588  : 		STATEMANAGER.RestoreRenderState(D3DRS_DESTBLEND);

  00198	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0019e	6a 14		 push	 20			; 00000014H
  001a0	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 589  : 		STATEMANAGER.RestoreRenderState(D3DRS_ZWRITEENABLE);

  001a5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001ab	6a 0e		 push	 14			; 0000000eH
  001ad	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState
$LN86@RenderBlen:
  001b2	5e		 pop	 esi
$LN8@RenderBlen:
  001b3	5f		 pop	 edi

; 590  : 	}
; 591  : }

  001b4	8b e5		 mov	 esp, ebp
  001b6	5d		 pop	 ebp
  001b7	c3		 ret	 0
$LN88@RenderBlen:

; 521  : 		return;
; 522  : 
; 523  : 	static std::vector<CGraphicThingInstance*> s_kVct_pkBlendThingInstSort;

  001b8	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4HA
  001bd	e8 00 00 00 00	 call	 __Init_thread_header
  001c2	83 c4 04	 add	 esp, 4
  001c5	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4HA, -1
  001cc	0f 85 64 fe ff
	ff		 jne	 $LN2@RenderBlen
  001d2	68 00 00 00 00	 push	 OFFSET ??__Fs_kVct_pkBlendThingInstSort@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@YAXXZ ; `CMapOutdoor::RenderBlendArea'::`2'::`dynamic atexit destructor for 's_kVct_pkBlendThingInstSort''
  001d7	e8 00 00 00 00	 call	 _atexit
  001dc	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??RenderBlendArea@CMapOutdoor@@QAEXXZ@4HA
  001e1	e8 00 00 00 00	 call	 __Init_thread_footer
  001e6	83 c4 08	 add	 esp, 8
  001e9	e9 48 fe ff ff	 jmp	 $LN2@RenderBlen
?RenderBlendArea@CMapOutdoor@@QAEXXZ ENDP		; CMapOutdoor::RenderBlendArea
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterBase\Stl.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?RenderArea@CMapOutdoor@@QAEX_N@Z
_TEXT	SEGMENT
tv1636 = -8						; size = 4
_dwG$1$ = -8						; size = 4
$T1 = -8						; size = 1
_pArea$2 = -8						; size = 4
_pArea$3 = -8						; size = 4
_dwR$1$ = -4						; size = 4
_this$1$ = -4						; size = 4
_bRenderAmbience$ = 8					; size = 1
?RenderArea@CMapOutdoor@@QAEX_N@Z PROC			; CMapOutdoor::RenderArea, COMDAT
; _this$ = ecx

; 375  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	57		 push	 edi
  00007	8b f9		 mov	 edi, ecx

; 376  : 	if (!IsVisiblePart(PART_OBJECT))

  00009	6a 01		 push	 1
  0000b	89 7d fc	 mov	 DWORD PTR _this$1$[ebp], edi
  0000e	e8 00 00 00 00	 call	 ?IsVisiblePart@CMapOutdoor@@IAE_NH@Z ; CMapOutdoor::IsVisiblePart
  00013	84 c0		 test	 al, al
  00015	0f 84 46 04 00
	00		 je	 $LN150@RenderArea

; 377  : 		return;
; 378  : 
; 379  : 	m_dwRenderedCRCNum = 0;

  0001b	c7 87 b0 09 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+2480], 0

; 380  : 	m_dwRenderedGraphicThingInstanceNum = 0;

  00025	c7 87 b4 09 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+2484], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  0002f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_dwRenderedCRCWithNumberVector@@3V?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@A
  00034	3b 05 04 00 00
	00		 cmp	 eax, DWORD PTR ?m_dwRenderedCRCWithNumberVector@@3V?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@A+4
  0003a	74 05		 je	 SHORT $LN218@RenderArea

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  0003c	a3 04 00 00 00	 mov	 DWORD PTR ?m_dwRenderedCRCWithNumberVector@@3V?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@A+4, eax
$LN218@RenderArea:
  00041	56		 push	 esi
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 383  : 	for (int j = 0; j < AROUND_AREA_NUM; ++j)

  00042	33 f6		 xor	 esi, esi
$LL4@RenderArea:

; 384  : 	{
; 385  : 		CArea * pArea;
; 386  : 		if (GetAreaPointer(j, &pArea))

  00044	8d 45 f8	 lea	 eax, DWORD PTR _pArea$3[ebp]
  00047	8b cf		 mov	 ecx, edi
  00049	50		 push	 eax
  0004a	56		 push	 esi
  0004b	e8 00 00 00 00	 call	 ?GetAreaPointer@CMapOutdoor@@QAEHEPAPAVCArea@@@Z ; CMapOutdoor::GetAreaPointer
  00050	85 c0		 test	 eax, eax
  00052	74 08		 je	 SHORT $LN2@RenderArea

; 387  : 		{
; 388  : 			pArea->RenderDungeon();

  00054	8b 4d f8	 mov	 ecx, DWORD PTR _pArea$3[ebp]
  00057	e8 00 00 00 00	 call	 ?RenderDungeon@CArea@@QAEXXZ ; CArea::RenderDungeon
$LN2@RenderArea:

; 383  : 	for (int j = 0; j < AROUND_AREA_NUM; ++j)

  0005c	46		 inc	 esi
  0005d	83 fe 09	 cmp	 esi, 9
  00060	7c e2		 jl	 SHORT $LL4@RenderArea
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00062	8b b7 18 0a 00
	00		 mov	 esi, DWORD PTR [edi+2584]
  00068	53		 push	 ebx
  00069	8b 9f 1c 0a 00
	00		 mov	 ebx, DWORD PTR [edi+2588]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  0006f	3b f3		 cmp	 esi, ebx
  00071	74 0e		 je	 SHORT $LN169@RenderArea
$LL306@RenderArea:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 307  : 		pInstance->Hide();

  00073	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00075	e8 00 00 00 00	 call	 ?Hide@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::Hide
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  0007a	83 c6 04	 add	 esi, 4
  0007d	3b f3		 cmp	 esi, ebx
  0007f	75 f2		 jne	 SHORT $LL306@RenderArea
$LN169@RenderArea:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 397  : 	if (m_bDrawShadow && m_bDrawChrShadow)

  00081	80 bf 31 01 00
	00 00		 cmp	 BYTE PTR [edi+305], 0
  00088	0f 84 e8 02 00
	00		 je	 $LN18@RenderArea
  0008e	80 bf 32 01 00
	00 00		 cmp	 BYTE PTR [edi+306], 0
  00095	0f 84 db 02 00
	00		 je	 $LN18@RenderArea

; 398  : 	{
; 399  : 		if (mc_pEnvironmentData != NULL)

  0009b	83 7f 3c 00	 cmp	 DWORD PTR [edi+60], 0
  0009f	74 0f		 je	 SHORT $LN17@RenderArea

; 400  : 			STATEMANAGER.SetRenderState(D3DRS_FOGCOLOR, 0xFFFFFFFF);

  000a1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000a7	6a ff		 push	 -1
  000a9	6a 22		 push	 34			; 00000022H
  000ab	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState
$LN17@RenderArea:

; 401  : 
; 402  : 		STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG1, D3DTA_TEXTURE);

  000b0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000b6	6a 02		 push	 2
  000b8	6a 02		 push	 2
  000ba	6a 00		 push	 0
  000bc	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 403  : 		STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG2, D3DTA_DIFFUSE);

  000c1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000c7	6a 00		 push	 0
  000c9	6a 03		 push	 3
  000cb	6a 00		 push	 0
  000cd	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 404  : 		STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP, D3DTOP_MODULATE);

  000d2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000d8	6a 04		 push	 4
  000da	6a 01		 push	 1
  000dc	6a 00		 push	 0
  000de	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 405  : 		STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAOP, D3DTOP_DISABLE);

  000e3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000e9	6a 01		 push	 1
  000eb	6a 04		 push	 4
  000ed	6a 00		 push	 0
  000ef	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 406  : 		STATEMANAGER.SaveTextureStageState(1, D3DTSS_TEXCOORDINDEX, D3DTSS_TCI_CAMERASPACEPOSITION);

  000f4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000fa	68 00 00 02 00	 push	 131072			; 00020000H
  000ff	6a 0b		 push	 11			; 0000000bH
  00101	6a 01		 push	 1
  00103	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 407  : 		STATEMANAGER.SaveTextureStageState(1, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_COUNT2);

  00108	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0010e	6a 02		 push	 2
  00110	6a 18		 push	 24			; 00000018H
  00112	6a 01		 push	 1
  00114	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 408  : 
; 409  : 		// Transform
; 410  : 		STATEMANAGER.SaveTransform(D3DTS_TEXTURE1, &m_matDynamicShadow);

  00119	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0011f	8d 87 48 08 00
	00		 lea	 eax, DWORD PTR [edi+2120]
  00125	50		 push	 eax
  00126	6a 11		 push	 17			; 00000011H
  00128	e8 00 00 00 00	 call	 ?SaveTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; CStateManager::SaveTransform

; 411  : 		STATEMANAGER.SetTexture(1, m_lpCharacterShadowMapTexture);

  0012d	ff b7 d4 01 00
	00		 push	 DWORD PTR [edi+468]
  00133	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00139	6a 01		 push	 1
  0013b	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 412  : 
; 413  : 		STATEMANAGER.SetTextureStageState(1, D3DTSS_COLORARG1, D3DTA_TEXTURE);

  00140	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00146	6a 02		 push	 2
  00148	6a 02		 push	 2
  0014a	6a 01		 push	 1
  0014c	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 414  : 		STATEMANAGER.SetTextureStageState(1, D3DTSS_COLORARG2, D3DTA_CURRENT);

  00151	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00157	6a 01		 push	 1
  00159	6a 03		 push	 3
  0015b	6a 01		 push	 1
  0015d	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 415  : 		STATEMANAGER.SetTextureStageState(1, D3DTSS_COLOROP,   D3DTOP_MODULATE);

  00162	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00168	6a 04		 push	 4
  0016a	6a 01		 push	 1
  0016c	6a 01		 push	 1
  0016e	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 416  : 		STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAOP,   D3DTOP_DISABLE);

  00173	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00179	6a 01		 push	 1
  0017b	6a 04		 push	 4
  0017d	6a 01		 push	 1
  0017f	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 417  : 		STATEMANAGER.SaveTextureStageState(1, D3DTSS_ADDRESSU, D3DTADDRESS_BORDER);

  00184	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0018a	6a 04		 push	 4
  0018c	6a 0d		 push	 13			; 0000000dH
  0018e	6a 01		 push	 1
  00190	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 418  : 		STATEMANAGER.SaveTextureStageState(1, D3DTSS_ADDRESSV, D3DTADDRESS_BORDER);

  00195	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0019b	6a 04		 push	 4
  0019d	6a 0e		 push	 14			; 0000000eH
  0019f	6a 01		 push	 1
  001a1	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 419  : 		STATEMANAGER.SaveTextureStageState(1, D3DTSS_BORDERCOLOR, 0xFFFFFFFF);

  001a6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001ac	6a ff		 push	 -1
  001ae	6a 0f		 push	 15			; 0000000fH
  001b0	6a 01		 push	 1
  001b2	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001b7	8b 87 10 0a 00
	00		 mov	 eax, DWORD PTR [edi+2576]
  001bd	8b 9f 0c 0a 00
	00		 mov	 ebx, DWORD PTR [edi+2572]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  001c3	3b d8		 cmp	 ebx, eax
  001c5	74 23		 je	 SHORT $LN205@RenderArea
  001c7	8b f8		 mov	 edi, eax
  001c9	0f 1f 80 00 00
	00 00		 npad	 7
$LL307@RenderArea:

; 246  :         _Func(*_UFirst);

  001d0	8b 33		 mov	 esi, DWORD PTR [ebx]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 298  : 		pInstance->RenderShadow();

  001d2	8b ce		 mov	 ecx, esi
  001d4	e8 00 00 00 00	 call	 ?RenderShadow@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::RenderShadow

; 299  : 		pInstance->Hide();

  001d9	8b ce		 mov	 ecx, esi
  001db	e8 00 00 00 00	 call	 ?Hide@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::Hide
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  001e0	83 c3 04	 add	 ebx, 4
  001e3	3b df		 cmp	 ebx, edi
  001e5	75 e9		 jne	 SHORT $LL307@RenderArea
  001e7	8b 7d fc	 mov	 edi, DWORD PTR _this$1$[ebp]
$LN205@RenderArea:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 423  : 		STATEMANAGER.RestoreTextureStageState(1, D3DTSS_TEXCOORDINDEX);

  001ea	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001f0	6a 0b		 push	 11			; 0000000bH
  001f2	6a 01		 push	 1
  001f4	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 424  : 		STATEMANAGER.RestoreTextureStageState(1, D3DTSS_TEXTURETRANSFORMFLAGS);

  001f9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001ff	6a 18		 push	 24			; 00000018H
  00201	6a 01		 push	 1
  00203	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 425  : 		STATEMANAGER.RestoreTextureStageState(1, D3DTSS_ADDRESSU);

  00208	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0020e	6a 0d		 push	 13			; 0000000dH
  00210	6a 01		 push	 1
  00212	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 426  : 		STATEMANAGER.RestoreTextureStageState(1, D3DTSS_ADDRESSV);

  00217	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0021d	6a 0e		 push	 14			; 0000000eH
  0021f	6a 01		 push	 1
  00221	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 427  : 		STATEMANAGER.RestoreTextureStageState(1, D3DTSS_BORDERCOLOR);

  00226	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0022c	6a 0f		 push	 15			; 0000000fH
  0022e	6a 01		 push	 1
  00230	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 428  : 
; 429  : 		STATEMANAGER.RestoreTransform(D3DTS_TEXTURE1);

  00235	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0023b	6a 11		 push	 17			; 00000011H
  0023d	e8 00 00 00 00	 call	 ?RestoreTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@@Z ; CStateManager::RestoreTransform

; 430  : 
; 431  : 		if (mc_pEnvironmentData != NULL)

  00242	8b 77 3c	 mov	 esi, DWORD PTR [edi+60]
  00245	85 f6		 test	 esi, esi
  00247	0f 84 29 01 00
	00		 je	 $LN18@RenderArea
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 931  :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  0024d	f3 0f 10 86 2c
	01 00 00	 movss	 xmm0, DWORD PTR [esi+300]
  00255	0f 57 c9	 xorps	 xmm1, xmm1
  00258	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  0025f	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@437f0000
  00267	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR __real@3f000000
  0026f	72 09		 jb	 SHORT $LN225@RenderArea
  00271	c7 45 fc ff 00
	00 00		 mov	 DWORD PTR _dwR$1$[ebp], 255 ; 000000ffH
  00278	eb 31		 jmp	 SHORT $LN224@RenderArea
$LN225@RenderArea:
  0027a	0f 2f c8	 comiss	 xmm1, xmm0
  0027d	72 09		 jb	 SHORT $LN223@RenderArea
  0027f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _dwR$1$[ebp], 0
  00286	eb 23		 jmp	 SHORT $LN224@RenderArea
$LN223@RenderArea:
  00288	f3 0f 59 c3	 mulss	 xmm0, xmm3
  0028c	f3 0f 58 c4	 addss	 xmm0, xmm4
  00290	e8 00 00 00 00	 call	 __ftol3
  00295	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@437f0000
  0029d	0f 57 c9	 xorps	 xmm1, xmm1
  002a0	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR __real@3f000000
  002a8	89 45 fc	 mov	 DWORD PTR _dwR$1$[ebp], eax
$LN224@RenderArea:

; 932  :     DWORD dwG = g >= 1.0f ? 0xff : g <= 0.0f ? 0x00 : (DWORD) (g * 255.0f + 0.5f);

  002ab	f3 0f 10 86 30
	01 00 00	 movss	 xmm0, DWORD PTR [esi+304]
  002b3	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  002ba	72 09		 jb	 SHORT $LN229@RenderArea
  002bc	c7 45 f8 ff 00
	00 00		 mov	 DWORD PTR _dwG$1$[ebp], 255 ; 000000ffH
  002c3	eb 1e		 jmp	 SHORT $LN228@RenderArea
$LN229@RenderArea:
  002c5	0f 2f c8	 comiss	 xmm1, xmm0
  002c8	72 09		 jb	 SHORT $LN227@RenderArea
  002ca	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _dwG$1$[ebp], 0
  002d1	eb 10		 jmp	 SHORT $LN228@RenderArea
$LN227@RenderArea:
  002d3	f3 0f 59 c3	 mulss	 xmm0, xmm3
  002d7	f3 0f 58 c4	 addss	 xmm0, xmm4
  002db	e8 00 00 00 00	 call	 __ftol3
  002e0	89 45 f8	 mov	 DWORD PTR _dwG$1$[ebp], eax
$LN228@RenderArea:

; 933  :     DWORD dwB = b >= 1.0f ? 0xff : b <= 0.0f ? 0x00 : (DWORD) (b * 255.0f + 0.5f);

  002e3	f3 0f 10 86 34
	01 00 00	 movss	 xmm0, DWORD PTR [esi+308]
  002eb	0f 57 c9	 xorps	 xmm1, xmm1
  002ee	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  002f5	72 07		 jb	 SHORT $LN233@RenderArea
  002f7	bb ff 00 00 00	 mov	 ebx, 255		; 000000ffH
  002fc	eb 23		 jmp	 SHORT $LN232@RenderArea
$LN233@RenderArea:
  002fe	0f 2f c8	 comiss	 xmm1, xmm0
  00301	72 04		 jb	 SHORT $LN231@RenderArea
  00303	33 db		 xor	 ebx, ebx
  00305	eb 1a		 jmp	 SHORT $LN232@RenderArea
$LN231@RenderArea:
  00307	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  0030f	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  00317	e8 00 00 00 00	 call	 __ftol3
  0031c	8b d8		 mov	 ebx, eax
  0031e	0f 57 c9	 xorps	 xmm1, xmm1
$LN232@RenderArea:

; 934  :     DWORD dwA = a >= 1.0f ? 0xff : a <= 0.0f ? 0x00 : (DWORD) (a * 255.0f + 0.5f);

  00321	f3 0f 10 86 38
	01 00 00	 movss	 xmm0, DWORD PTR [esi+312]
  00329	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  00330	72 07		 jb	 SHORT $LN237@RenderArea
  00332	b8 ff 00 00 00	 mov	 eax, 255		; 000000ffH
  00337	eb 1e		 jmp	 SHORT $LN236@RenderArea
$LN237@RenderArea:
  00339	0f 2f c8	 comiss	 xmm1, xmm0
  0033c	72 04		 jb	 SHORT $LN235@RenderArea
  0033e	33 c0		 xor	 eax, eax
  00340	eb 15		 jmp	 SHORT $LN236@RenderArea
$LN235@RenderArea:
  00342	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  0034a	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  00352	e8 00 00 00 00	 call	 __ftol3
$LN236@RenderArea:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 432  : 			STATEMANAGER.SetRenderState(D3DRS_FOGCOLOR, mc_pEnvironmentData->FogColor);

  00357	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 936  :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  0035d	c1 e0 08	 shl	 eax, 8
  00360	0b 45 fc	 or	 eax, DWORD PTR _dwR$1$[ebp]
  00363	c1 e0 08	 shl	 eax, 8
  00366	0b 45 f8	 or	 eax, DWORD PTR _dwG$1$[ebp]
  00369	c1 e0 08	 shl	 eax, 8
  0036c	0b c3		 or	 eax, ebx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 432  : 			STATEMANAGER.SetRenderState(D3DRS_FOGCOLOR, mc_pEnvironmentData->FogColor);

  0036e	50		 push	 eax
  0036f	6a 22		 push	 34			; 00000022H
  00371	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState
$LN18@RenderArea:

; 433  : 	}
; 434  : #endif
; 435  : 
; 436  : 	STATEMANAGER.SaveRenderState(D3DRS_ZWRITEENABLE, TRUE);

  00376	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0037c	6a 01		 push	 1
  0037e	6a 0e		 push	 14			; 0000000eH
  00380	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 437  : 
; 438  : 	bool m_isDisableSortRendering=false;
; 439  : 
; 440  : 	if (m_isDisableSortRendering)
; 441  : 	{
; 442  : 		for (int i = 0; i < AROUND_AREA_NUM; ++i)
; 443  : 		{
; 444  : 			CArea * pArea;
; 445  : 			if (GetAreaPointer(i, &pArea))
; 446  : 			{
; 447  : 				pArea->Render();
; 448  : 
; 449  : 				m_dwRenderedCRCNum += pArea->DEBUG_GetRenderedCRCNum();
; 450  : 				m_dwRenderedGraphicThingInstanceNum += pArea->DEBUG_GetRenderedGrapphicThingInstanceNum();
; 451  : 
; 452  : 				CArea::TCRCWithNumberVector & rCRCWithNumberVector = pArea->DEBUG_GetRenderedCRCWithNumVector();
; 453  : 
; 454  : 				CArea::TCRCWithNumberVector::iterator aIterator = rCRCWithNumberVector.begin();
; 455  : 				while (aIterator != rCRCWithNumberVector.end())
; 456  : 				{
; 457  : 					DWORD dwCRC = (*aIterator++).dwCRC;
; 458  : 
; 459  : 					CArea::TCRCWithNumberVector::iterator aCRCWithNumberVectorIterator =
; 460  : 						std::find_if(m_dwRenderedCRCWithNumberVector.begin(), m_dwRenderedCRCWithNumberVector.end(), CArea::FFindIfCRC(dwCRC));
; 461  : 
; 462  : 					if ( m_dwRenderedCRCWithNumberVector.end() == aCRCWithNumberVectorIterator)
; 463  : 					{
; 464  : 						CArea::TCRCWithNumber aCRCWithNumber;
; 465  : 						aCRCWithNumber.dwCRC = dwCRC;
; 466  : 						aCRCWithNumber.dwNumber = 1;
; 467  : 						m_dwRenderedCRCWithNumberVector.push_back(aCRCWithNumber);
; 468  : 					}
; 469  : 					else
; 470  : 					{
; 471  : 						CArea::TCRCWithNumber & rCRCWithNumber = *aCRCWithNumberVectorIterator;
; 472  : 						rCRCWithNumber.dwNumber += 1;
; 473  : 					}
; 474  : 				}
; 475  : 	#ifdef WORLD_EDITOR
; 476  : 				if (bRenderAmbience)
; 477  : 					pArea->RenderAmbience();
; 478  : 	#endif
; 479  : 			}
; 480  : 		}
; 481  : 
; 482  : 		std::sort(m_dwRenderedCRCWithNumberVector.begin(), m_dwRenderedCRCWithNumberVector.end(), CArea::CRCNumComp());
; 483  : 	}
; 484  : 	else
; 485  : 	{
; 486  : 		static std::vector<CGraphicThingInstance*> s_kVct_pkOpaqueThingInstSort;

  00385	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  0038b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  00391	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00394	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4HA
  00399	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  0039f	0f 8f c3 00 00
	00		 jg	 $LN314@RenderArea
$LN10@RenderArea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  003a5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_kVct_pkOpaqueThingInstSort@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A
  003aa	3b 05 04 00 00
	00		 cmp	 eax, DWORD PTR ?s_kVct_pkOpaqueThingInstSort@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A+4
  003b0	74 05		 je	 SHORT $LN174@RenderArea

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  003b2	a3 04 00 00 00	 mov	 DWORD PTR ?s_kVct_pkOpaqueThingInstSort@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A+4, eax
$LN174@RenderArea:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 489  : 		for (int i = 0; i < AROUND_AREA_NUM; ++i)

  003b7	33 f6		 xor	 esi, esi
  003b9	0f 1f 80 00 00
	00 00		 npad	 7
$LL308@RenderArea:

; 490  : 		{
; 491  : 			CArea * pArea;
; 492  : 			if (GetAreaPointer(i, &pArea))

  003c0	8d 45 f8	 lea	 eax, DWORD PTR _pArea$2[ebp]
  003c3	8b cf		 mov	 ecx, edi
  003c5	50		 push	 eax
  003c6	56		 push	 esi
  003c7	e8 00 00 00 00	 call	 ?GetAreaPointer@CMapOutdoor@@QAEHEPAPAVCArea@@@Z ; CMapOutdoor::GetAreaPointer
  003cc	85 c0		 test	 eax, eax
  003ce	74 0d		 je	 SHORT $LN11@RenderArea

; 493  : 			{
; 494  : 				pArea->CollectRenderingObject(s_kVct_pkOpaqueThingInstSort);

  003d0	8b 4d f8	 mov	 ecx, DWORD PTR _pArea$2[ebp]
  003d3	68 00 00 00 00	 push	 OFFSET ?s_kVct_pkOpaqueThingInstSort@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A
  003d8	e8 00 00 00 00	 call	 ?CollectRenderingObject@CArea@@QAEXAAV?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@@Z ; CArea::CollectRenderingObject
$LN11@RenderArea:

; 489  : 		for (int i = 0; i < AROUND_AREA_NUM; ++i)

  003dd	46		 inc	 esi
  003de	83 fe 09	 cmp	 esi, 9
  003e1	7c dd		 jl	 SHORT $LL308@RenderArea
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8067 :     _Sort_unchecked(_UFirst, _ULast, _ULast - _UFirst, _Pass_fn(_Pred));

  003e3	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ?s_kVct_pkOpaqueThingInstSort@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A+4
  003e9	8b c2		 mov	 eax, edx
  003eb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?s_kVct_pkOpaqueThingInstSort@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A
  003f1	2b c1		 sub	 eax, ecx
  003f3	ff 75 f8	 push	 DWORD PTR $T1[ebp]
  003f6	c1 f8 02	 sar	 eax, 2
  003f9	50		 push	 eax
  003fa	52		 push	 edx
  003fb	51		 push	 ecx
  003fc	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAPAVCGraphicThingInstance@@UCMapOutdoor_LessThingInstancePtrRenderOrder@@@std@@YAXPAPAVCGraphicThingInstance@@0HUCMapOutdoor_LessThingInstancePtrRenderOrder@@@Z ; std::_Sort_unchecked<CGraphicThingInstance * *,CMapOutdoor_LessThingInstancePtrRenderOrder>

; 243  :     auto _UFirst      = _Get_unwrapped(_First);

  00401	8b 1d 04 00 00
	00		 mov	 ebx, DWORD PTR ?s_kVct_pkOpaqueThingInstSort@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A+4

; 8067 :     _Sort_unchecked(_UFirst, _ULast, _ULast - _UFirst, _Pass_fn(_Pred));

  00407	83 c4 10	 add	 esp, 16			; 00000010H

; 243  :     auto _UFirst      = _Get_unwrapped(_First);

  0040a	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?s_kVct_pkOpaqueThingInstSort@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4V?$vector@PAVCGraphicThingInstance@@V?$allocator@PAVCGraphicThingInstance@@@std@@@std@@A
  00410	3b f3		 cmp	 esi, ebx

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00412	74 0e		 je	 SHORT $LN121@RenderArea
$LL309@RenderArea:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 363  : 		pkThingInst->Render();

  00414	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00416	e8 00 00 00 00	 call	 ?Render@CGraphicObjectInstance@@QAE_NXZ ; CGraphicObjectInstance::Render
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  0041b	83 c6 04	 add	 esi, 4
  0041e	3b f3		 cmp	 esi, ebx
  00420	75 f2		 jne	 SHORT $LL309@RenderArea
$LN121@RenderArea:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 507  : 	STATEMANAGER.RestoreRenderState(D3DRS_ZWRITEENABLE);

  00422	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00428	6a 0e		 push	 14			; 0000000eH
  0042a	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 508  : 
; 509  : #ifndef WORLD_EDITOR
; 510  : 	// Shadow Receiver
; 511  : 	if (m_bDrawShadow && m_bDrawChrShadow)

  0042f	80 bf 31 01 00
	00 00		 cmp	 BYTE PTR [edi+305], 0
  00436	74 27		 je	 SHORT $LN312@RenderArea
  00438	80 bf 32 01 00
	00 00		 cmp	 BYTE PTR [edi+306], 0
  0043f	74 1e		 je	 SHORT $LN312@RenderArea
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00441	8b 9f 10 0a 00
	00		 mov	 ebx, DWORD PTR [edi+2576]
  00447	8b b7 0c 0a 00
	00		 mov	 esi, DWORD PTR [edi+2572]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  0044d	3b f3		 cmp	 esi, ebx
  0044f	74 0e		 je	 SHORT $LN312@RenderArea
$LL310@RenderArea:
; File C:\Marty 5.5\Src-Client\Client\eterBase\Stl.h

; 59   : 		{((_P->*_Ptr)()); }

  00451	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00453	e8 00 00 00 00	 call	 ?Show@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::Show
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00458	83 c6 04	 add	 esi, 4
  0045b	3b f3		 cmp	 esi, ebx
  0045d	75 f2		 jne	 SHORT $LL310@RenderArea
$LN312@RenderArea:
  0045f	5b		 pop	 ebx
  00460	5e		 pop	 esi
$LN150@RenderArea:
  00461	5f		 pop	 edi
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 516  : }

  00462	8b e5		 mov	 esp, ebp
  00464	5d		 pop	 ebp
  00465	c2 04 00	 ret	 4
$LN314@RenderArea:

; 437  : 
; 438  : 	bool m_isDisableSortRendering=false;
; 439  : 
; 440  : 	if (m_isDisableSortRendering)
; 441  : 	{
; 442  : 		for (int i = 0; i < AROUND_AREA_NUM; ++i)
; 443  : 		{
; 444  : 			CArea * pArea;
; 445  : 			if (GetAreaPointer(i, &pArea))
; 446  : 			{
; 447  : 				pArea->Render();
; 448  : 
; 449  : 				m_dwRenderedCRCNum += pArea->DEBUG_GetRenderedCRCNum();
; 450  : 				m_dwRenderedGraphicThingInstanceNum += pArea->DEBUG_GetRenderedGrapphicThingInstanceNum();
; 451  : 
; 452  : 				CArea::TCRCWithNumberVector & rCRCWithNumberVector = pArea->DEBUG_GetRenderedCRCWithNumVector();
; 453  : 
; 454  : 				CArea::TCRCWithNumberVector::iterator aIterator = rCRCWithNumberVector.begin();
; 455  : 				while (aIterator != rCRCWithNumberVector.end())
; 456  : 				{
; 457  : 					DWORD dwCRC = (*aIterator++).dwCRC;
; 458  : 
; 459  : 					CArea::TCRCWithNumberVector::iterator aCRCWithNumberVectorIterator =
; 460  : 						std::find_if(m_dwRenderedCRCWithNumberVector.begin(), m_dwRenderedCRCWithNumberVector.end(), CArea::FFindIfCRC(dwCRC));
; 461  : 
; 462  : 					if ( m_dwRenderedCRCWithNumberVector.end() == aCRCWithNumberVectorIterator)
; 463  : 					{
; 464  : 						CArea::TCRCWithNumber aCRCWithNumber;
; 465  : 						aCRCWithNumber.dwCRC = dwCRC;
; 466  : 						aCRCWithNumber.dwNumber = 1;
; 467  : 						m_dwRenderedCRCWithNumberVector.push_back(aCRCWithNumber);
; 468  : 					}
; 469  : 					else
; 470  : 					{
; 471  : 						CArea::TCRCWithNumber & rCRCWithNumber = *aCRCWithNumberVectorIterator;
; 472  : 						rCRCWithNumber.dwNumber += 1;
; 473  : 					}
; 474  : 				}
; 475  : 	#ifdef WORLD_EDITOR
; 476  : 				if (bRenderAmbience)
; 477  : 					pArea->RenderAmbience();
; 478  : 	#endif
; 479  : 			}
; 480  : 		}
; 481  : 
; 482  : 		std::sort(m_dwRenderedCRCWithNumberVector.begin(), m_dwRenderedCRCWithNumberVector.end(), CArea::CRCNumComp());
; 483  : 	}
; 484  : 	else
; 485  : 	{
; 486  : 		static std::vector<CGraphicThingInstance*> s_kVct_pkOpaqueThingInstSort;

  00468	68 00 00 00 00	 push	 OFFSET ?$TSS0@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4HA
  0046d	e8 00 00 00 00	 call	 __Init_thread_header
  00472	83 c4 04	 add	 esp, 4
  00475	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4HA, -1
  0047c	0f 85 23 ff ff
	ff		 jne	 $LN10@RenderArea
  00482	68 00 00 00 00	 push	 OFFSET ??__Fs_kVct_pkOpaqueThingInstSort@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@YAXXZ ; `CMapOutdoor::RenderArea'::`33'::`dynamic atexit destructor for 's_kVct_pkOpaqueThingInstSort''
  00487	e8 00 00 00 00	 call	 _atexit
  0048c	68 00 00 00 00	 push	 OFFSET ?$TSS0@?CB@??RenderArea@CMapOutdoor@@QAEX_N@Z@4HA
  00491	e8 00 00 00 00	 call	 __Init_thread_footer
  00496	83 c4 08	 add	 esp, 8
  00499	e9 07 ff ff ff	 jmp	 $LN10@RenderArea
?RenderArea@CMapOutdoor@@QAEX_N@Z ENDP			; CMapOutdoor::RenderArea
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?RenderTerrain@CMapOutdoor@@QAEXXZ
_TEXT	SEGMENT
_v3Eye$ = -84						; size = 12
$T1 = -72						; size = 1
$T2 = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
?RenderTerrain@CMapOutdoor@@QAEXXZ PROC			; CMapOutdoor::RenderTerrain, COMDAT
; _this$ = ecx

; 18   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	57		 push	 edi

; 19   : 	if (!IsVisiblePart(PART_TERRAIN))

  00011	6a 00		 push	 0
  00013	8b f9		 mov	 edi, ecx
  00015	e8 00 00 00 00	 call	 ?IsVisiblePart@CMapOutdoor@@IAE_NH@Z ; CMapOutdoor::IsVisiblePart
  0001a	84 c0		 test	 al, al
  0001c	0f 84 eb 00 00
	00		 je	 $LN7@RenderTerr

; 20   : 		return;
; 21   : 
; 22   : 	if (!m_bSettingTerrainVisible)

  00022	80 bf ac 13 00
	00 00		 cmp	 BYTE PTR [edi+5036], 0
  00029	0f 84 de 00 00
	00		 je	 $LN7@RenderTerr

; 23   : 		return;
; 24   : 
; 25   : 	// Inserted by levites
; 26   : 	if (!m_pTerrainPatchProxyList)

  0002f	83 7f 64 00	 cmp	 DWORD PTR [edi+100], 0
  00033	0f 84 d4 00 00
	00		 je	 $LN7@RenderTerr

; 27   : 		return;
; 28   : 
; 29   : 	CCamera * pCamera = CCameraManager::Instance().GetCurrentCamera();

  00039	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera
  00045	8b f0		 mov	 esi, eax

; 30   : 	if (!pCamera)

  00047	85 f6		 test	 esi, esi
  00049	0f 84 bd 00 00
	00		 je	 $LN36@RenderTerr
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 580  :     D3DXMatrixMultiply(&matT, this, &mat);

  0004f	68 00 00 00 00	 push	 OFFSET ?ms_matProj@CGraphicBase@@1UD3DXMATRIX@@A ; CGraphicBase::ms_matProj
  00054	68 00 00 00 00	 push	 OFFSET ?ms_matView@CGraphicBase@@1UD3DXMATRIX@@A ; CGraphicBase::ms_matView
  00059	8d 45 bc	 lea	 eax, DWORD PTR $T2[ebp]
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 _D3DXMatrixMultiply@12
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 33   : 	BuildViewFrustum(ms_matView * ms_matProj);

  00062	8d 45 bc	 lea	 eax, DWORD PTR $T2[ebp]
  00065	8b cf		 mov	 ecx, edi
  00067	50		 push	 eax
  00068	e8 00 00 00 00	 call	 ?BuildViewFrustum@CMapOutdoor@@IAEXAAUD3DXMATRIX@@@Z ; CMapOutdoor::BuildViewFrustum

; 34   : 
; 35   : 	D3DXVECTOR3 v3Eye = pCamera->GetEye();

  0006d	f3 0f 7e 46 30	 movq	 xmm0, QWORD PTR [esi+48]
  00072	66 0f d6 45 ac	 movq	 QWORD PTR _v3Eye$[ebp], xmm0

; 36   : 	m_fXforDistanceCaculation = -v3Eye.x;

  00077	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR _v3Eye$[ebp]
  0007c	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00083	f3 0f 11 87 10
	09 00 00	 movss	 DWORD PTR [edi+2320], xmm0

; 37   : 	m_fYforDistanceCaculation = -v3Eye.y;

  0008b	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _v3Eye$[ebp+4]
  00090	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00097	f3 0f 11 87 14
	09 00 00	 movss	 DWORD PTR [edi+2324], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  0009f	8b 87 18 01 00
	00		 mov	 eax, DWORD PTR [edi+280]
  000a5	3b 87 1c 01 00
	00		 cmp	 eax, DWORD PTR [edi+284]
  000ab	74 06		 je	 SHORT $LN11@RenderTerr

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  000ad	89 87 1c 01 00
	00		 mov	 DWORD PTR [edi+284], eax
$LN11@RenderTerr:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 43   : 	__RenderTerrain_RecurseRenderQuadTree(m_pRootNode);

  000b3	6a 01		 push	 1
  000b5	ff b7 14 01 00
	00		 push	 DWORD PTR [edi+276]
  000bb	8b cf		 mov	 ecx, edi
  000bd	e8 00 00 00 00	 call	 ?__RenderTerrain_RecurseRenderQuadTree@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@_N@Z ; CMapOutdoor::__RenderTerrain_RecurseRenderQuadTree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000c2	8b 97 1c 01 00
	00		 mov	 edx, DWORD PTR [edi+284]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8067 :     _Sort_unchecked(_UFirst, _ULast, _ULast - _UFirst, _Pass_fn(_Pred));

  000c8	8b c2		 mov	 eax, edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000ca	8b b7 18 01 00
	00		 mov	 esi, DWORD PTR [edi+280]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8067 :     _Sort_unchecked(_UFirst, _ULast, _ULast - _UFirst, _Pass_fn(_Pred));

  000d0	2b c6		 sub	 eax, esi
  000d2	c6 45 b8 00	 mov	 BYTE PTR $T1[ebp], 0
  000d6	ff 75 b8	 push	 DWORD PTR $T1[ebp]
  000d9	c1 f8 03	 sar	 eax, 3
  000dc	50		 push	 eax
  000dd	52		 push	 edx
  000de	56		 push	 esi
  000df	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAU?$pair@MJ@std@@U?$less@X@2@@std@@YAXPAU?$pair@MJ@0@0HU?$less@X@0@@Z ; std::_Sort_unchecked<std::pair<float,long> *,std::less<void> >
  000e4	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 47   : 	if (CTerrainPatch::SOFTWARE_TRANSFORM_PATCH_ENABLE)

  000e7	8b cf		 mov	 ecx, edi
  000e9	80 3d 00 00 00
	00 00		 cmp	 BYTE PTR ?SOFTWARE_TRANSFORM_PATCH_ENABLE@CTerrainPatch@@2_NA, 0 ; CTerrainPatch::SOFTWARE_TRANSFORM_PATCH_ENABLE
  000f0	74 15		 je	 SHORT $LN6@RenderTerr

; 48   : 		__RenderTerrain_RenderSoftwareTransformPatch();

  000f2	e8 00 00 00 00	 call	 ?__RenderTerrain_RenderSoftwareTransformPatch@CMapOutdoor@@IAEXXZ ; CMapOutdoor::__RenderTerrain_RenderSoftwareTransformPatch
  000f7	5e		 pop	 esi
  000f8	5f		 pop	 edi

; 51   : }

  000f9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000fc	33 cd		 xor	 ecx, ebp
  000fe	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00103	8b e5		 mov	 esp, ebp
  00105	5d		 pop	 ebp
  00106	c3		 ret	 0
$LN6@RenderTerr:

; 49   : 	else
; 50   : 		__RenderTerrain_RenderHardwareTransformPatch();

  00107	e8 00 00 00 00	 call	 ?__RenderTerrain_RenderHardwareTransformPatch@CMapOutdoor@@IAEXXZ ; CMapOutdoor::__RenderTerrain_RenderHardwareTransformPatch
$LN36@RenderTerr:
  0010c	5e		 pop	 esi
$LN7@RenderTerr:

; 51   : }

  0010d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00110	33 cd		 xor	 ecx, ebp
  00112	5f		 pop	 edi
  00113	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00118	8b e5		 mov	 esp, ebp
  0011a	5d		 pop	 ebp
  0011b	c3		 ret	 0
?RenderTerrain@CMapOutdoor@@QAEXXZ ENDP			; CMapOutdoor::RenderTerrain
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?RenderScreenFiltering@CMapOutdoor@@QAEXXZ
_TEXT	SEGMENT
?RenderScreenFiltering@CMapOutdoor@@QAEXXZ PROC		; CMapOutdoor::RenderScreenFiltering, COMDAT
; _this$ = ecx

; 215  : 	m_ScreenFilter.Render();

  00000	81 c1 2c 07 00
	00		 add	 ecx, 1836		; 0000072cH
  00006	e9 00 00 00 00	 jmp	 ?Render@CScreenFilter@@QAEXXZ ; CScreenFilter::Render
?RenderScreenFiltering@CMapOutdoor@@QAEXXZ ENDP		; CMapOutdoor::RenderScreenFiltering
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?RenderAfterLensFlare@CMapOutdoor@@QAEXXZ
_TEXT	SEGMENT
?RenderAfterLensFlare@CMapOutdoor@@QAEXXZ PROC		; CMapOutdoor::RenderAfterLensFlare, COMDAT
; _this$ = ecx

; 198  : {

  00000	56		 push	 esi

; 199  : 	m_LensFlare.AdjustBrightness();

  00001	8d b1 b8 06 00
	00		 lea	 esi, DWORD PTR [ecx+1720]
  00007	8b ce		 mov	 ecx, esi
  00009	e8 00 00 00 00	 call	 ?AdjustBrightness@CLensFlare@@QAEXXZ ; CLensFlare::AdjustBrightness

; 200  : 	m_LensFlare.DrawFlare();

  0000e	8b ce		 mov	 ecx, esi
  00010	5e		 pop	 esi
  00011	e9 00 00 00 00	 jmp	 ?DrawFlare@CLensFlare@@QAEXXZ ; CLensFlare::DrawFlare
?RenderAfterLensFlare@CMapOutdoor@@QAEXXZ ENDP		; CMapOutdoor::RenderAfterLensFlare
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?RenderBeforeLensFlare@CMapOutdoor@@QAEXXZ
_TEXT	SEGMENT
$T1 = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
?RenderBeforeLensFlare@CMapOutdoor@@QAEXXZ PROC		; CMapOutdoor::RenderBeforeLensFlare, COMDAT
; _this$ = ecx

; 185  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b f1		 mov	 esi, ecx
  00013	57		 push	 edi

; 186  : 	m_LensFlare.DrawBeforeFlare();

  00014	8d 8e b8 06 00
	00		 lea	 ecx, DWORD PTR [esi+1720]
  0001a	e8 00 00 00 00	 call	 ?DrawBeforeFlare@CLensFlare@@QAEXXZ ; CLensFlare::DrawBeforeFlare

; 187  : 
; 188  : 	if (!mc_pEnvironmentData)

  0001f	8b 46 3c	 mov	 eax, DWORD PTR [esi+60]
  00022	85 c0		 test	 eax, eax
  00024	75 1d		 jne	 SHORT $LN2@RenderBefo

; 189  : 	{
; 190  : 		TraceError("CMapOutdoor::RenderBeforeLensFlare mc_pEnvironmentData is NULL");

  00026	68 00 00 00 00	 push	 OFFSET ??_C@_0DP@MKJEJLFD@CMapOutdoor?3?3RenderBeforeLensFl@
  0002b	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00030	83 c4 04	 add	 esp, 4
  00033	5f		 pop	 edi

; 195  : }

  00034	5e		 pop	 esi
  00035	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00038	33 cd		 xor	 ecx, ebp
  0003a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
$LN2@RenderBefo:
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 172  :     x = v.x;

  00043	f3 0f 10 40 48	 movss	 xmm0, DWORD PTR [eax+72]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 194  : 	m_LensFlare.Compute(mc_pEnvironmentData->DirLights[ENV_DIRLIGHT_BACKGROUND].Direction);

  00048	8d 8e b8 06 00
	00		 lea	 ecx, DWORD PTR [esi+1720]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 172  :     x = v.x;

  0004e	f3 0f 11 45 f0	 movss	 DWORD PTR $T1[ebp], xmm0

; 173  :     y = v.y;

  00053	f3 0f 10 40 4c	 movss	 xmm0, DWORD PTR [eax+76]
  00058	f3 0f 11 45 f4	 movss	 DWORD PTR $T1[ebp+4], xmm0

; 174  :     z = v.z;

  0005d	f3 0f 10 40 50	 movss	 xmm0, DWORD PTR [eax+80]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 194  : 	m_LensFlare.Compute(mc_pEnvironmentData->DirLights[ENV_DIRLIGHT_BACKGROUND].Direction);

  00062	8d 45 f0	 lea	 eax, DWORD PTR $T1[ebp]
  00065	50		 push	 eax
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 174  :     z = v.z;

  00066	f3 0f 11 45 f8	 movss	 DWORD PTR $T1[ebp+8], xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 194  : 	m_LensFlare.Compute(mc_pEnvironmentData->DirLights[ENV_DIRLIGHT_BACKGROUND].Direction);

  0006b	e8 00 00 00 00	 call	 ?Compute@CLensFlare@@QAEXABUD3DXVECTOR3@@@Z ; CLensFlare::Compute

; 195  : }

  00070	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00073	5f		 pop	 edi
  00074	33 cd		 xor	 ecx, ebp
  00076	5e		 pop	 esi
  00077	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c3		 ret	 0
?RenderBeforeLensFlare@CMapOutdoor@@QAEXXZ ENDP		; CMapOutdoor::RenderBeforeLensFlare
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?RenderCloud@CMapOutdoor@@QAEXXZ
_TEXT	SEGMENT
?RenderCloud@CMapOutdoor@@QAEXXZ PROC			; CMapOutdoor::RenderCloud, COMDAT
; _this$ = ecx

; 225  : {

  00000	56		 push	 esi

; 226  : 	if (IsVisiblePart(PART_CLOUD))

  00001	6a 02		 push	 2
  00003	8b f1		 mov	 esi, ecx
  00005	e8 00 00 00 00	 call	 ?IsVisiblePart@CMapOutdoor@@IAE_NH@Z ; CMapOutdoor::IsVisiblePart
  0000a	84 c0		 test	 al, al
  0000c	74 0c		 je	 SHORT $LN2@RenderClou

; 227  : 		m_SkyBox.RenderCloud();

  0000e	8d 8e 38 03 00
	00		 lea	 ecx, DWORD PTR [esi+824]
  00014	5e		 pop	 esi
  00015	e9 00 00 00 00	 jmp	 ?RenderCloud@CSkyBox@@QAEXXZ ; CSkyBox::RenderCloud
$LN2@RenderClou:
  0001a	5e		 pop	 esi

; 228  : }

  0001b	c3		 ret	 0
?RenderCloud@CMapOutdoor@@QAEXXZ ENDP			; CMapOutdoor::RenderCloud
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?RenderSky@CMapOutdoor@@QAEXXZ
_TEXT	SEGMENT
?RenderSky@CMapOutdoor@@QAEXXZ PROC			; CMapOutdoor::RenderSky, COMDAT
; _this$ = ecx

; 219  : {

  00000	56		 push	 esi

; 220  : 	if (IsVisiblePart(PART_SKY))

  00001	6a 05		 push	 5
  00003	8b f1		 mov	 esi, ecx
  00005	e8 00 00 00 00	 call	 ?IsVisiblePart@CMapOutdoor@@IAE_NH@Z ; CMapOutdoor::IsVisiblePart
  0000a	84 c0		 test	 al, al
  0000c	74 10		 je	 SHORT $LN2@RenderSky

; 221  : 		m_SkyBox.Render();

  0000e	8b 86 38 03 00
	00		 mov	 eax, DWORD PTR [esi+824]
  00014	8d 8e 38 03 00
	00		 lea	 ecx, DWORD PTR [esi+824]
  0001a	5e		 pop	 esi
  0001b	ff 60 08	 jmp	 DWORD PTR [eax+8]
$LN2@RenderSky:
  0001e	5e		 pop	 esi

; 222  : }

  0001f	c3		 ret	 0
?RenderSky@CMapOutdoor@@QAEXXZ ENDP			; CMapOutdoor::RenderSky
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?RenderCollision@CMapOutdoor@@QAEXXZ
_TEXT	SEGMENT
_pArea$1 = -4						; size = 4
?RenderCollision@CMapOutdoor@@QAEXXZ PROC		; CMapOutdoor::RenderCollision, COMDAT
; _this$ = ecx

; 204  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx

; 205  : 	for (int i = 0; i < AROUND_AREA_NUM; ++i)

  00008	33 f6		 xor	 esi, esi
  0000a	66 0f 1f 44 00
	00		 npad	 6
$LL4@RenderColl:

; 206  : 	{
; 207  : 		CArea * pArea;
; 208  : 		if (GetAreaPointer(i, &pArea))

  00010	8d 45 fc	 lea	 eax, DWORD PTR _pArea$1[ebp]
  00013	8b cf		 mov	 ecx, edi
  00015	50		 push	 eax
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ?GetAreaPointer@CMapOutdoor@@QAEHEPAPAVCArea@@@Z ; CMapOutdoor::GetAreaPointer
  0001c	85 c0		 test	 eax, eax
  0001e	74 08		 je	 SHORT $LN2@RenderColl

; 209  : 			pArea->RenderCollision();

  00020	8b 4d fc	 mov	 ecx, DWORD PTR _pArea$1[ebp]
  00023	e8 00 00 00 00	 call	 ?RenderCollision@CArea@@QAEXXZ ; CArea::RenderCollision
$LN2@RenderColl:

; 205  : 	for (int i = 0; i < AROUND_AREA_NUM; ++i)

  00028	46		 inc	 esi
  00029	83 fe 09	 cmp	 esi, 9
  0002c	7c e2		 jl	 SHORT $LL4@RenderColl
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi

; 210  : 	}
; 211  : }

  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
?RenderCollision@CMapOutdoor@@QAEXXZ ENDP		; CMapOutdoor::RenderCollision
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\Client\GameLib\AreaTerrain.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?DrawPatchAttr@CMapOutdoor@@QAEXJ@Z
_TEXT	SEGMENT
_ucTerrainNum$ = -76					; size = 1
_pTerrain$ = -72					; size = 4
_matTexTransform$ = -68					; size = 64
__$ArrayPad$ = -4					; size = 4
_patchnum$ = 8						; size = 4
?DrawPatchAttr@CMapOutdoor@@QAEXJ@Z PROC		; CMapOutdoor::DrawPatchAttr, COMDAT
; _this$ = ecx

; 909  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _patchnum$[ebp]
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	8b f9		 mov	 edi, ecx

; 910  : 	CTerrainPatchProxy * pTerrainPatchProxy = &m_pTerrainPatchProxyList[patchnum];

  00017	8d 14 c5 00 00
	00 00		 lea	 edx, DWORD PTR [eax*8]
  0001e	2b d0		 sub	 edx, eax
  00020	8b 47 64	 mov	 eax, DWORD PTR [edi+100]

; 911  : 	if (!pTerrainPatchProxy->isUsed())

  00023	80 7c 90 04 00	 cmp	 BYTE PTR [eax+edx*4+4], 0
  00028	8d 34 90	 lea	 esi, DWORD PTR [eax+edx*4]
  0002b	0f 84 12 01 00
	00		 je	 $LN1@DrawPatchA

; 912  : 		return;
; 913  : 
; 914  : 	long sPatchNum = pTerrainPatchProxy->GetPatchNum();
; 915  : 	if (sPatchNum < 0)

  00031	66 83 7e 06 00	 cmp	 WORD PTR [esi+6], 0
  00036	0f 8c 07 01 00
	00		 jl	 $LN1@DrawPatchA

; 916  : 		return;
; 917  : 
; 918  : 	BYTE ucTerrainNum = pTerrainPatchProxy->GetTerrainNum();

  0003c	8a 46 08	 mov	 al, BYTE PTR [esi+8]
  0003f	88 45 b4	 mov	 BYTE PTR _ucTerrainNum$[ebp], al

; 919  : 	if (0xFF == ucTerrainNum)

  00042	3c ff		 cmp	 al, 255			; 000000ffH
  00044	0f 84 f9 00 00
	00		 je	 $LN1@DrawPatchA

; 920  : 		return;
; 921  : 
; 922  : 	// Deal with this material buffer
; 923  : 	CTerrain * pTerrain;
; 924  : 	if (!GetTerrainPointer(ucTerrainNum, &pTerrain))

  0004a	8d 45 b8	 lea	 eax, DWORD PTR _pTerrain$[ebp]
  0004d	50		 push	 eax
  0004e	ff 75 b4	 push	 DWORD PTR _ucTerrainNum$[ebp]
  00051	e8 00 00 00 00	 call	 ?GetTerrainPointer@CMapOutdoor@@QAEHEPAPAVCTerrain@@@Z ; CMapOutdoor::GetTerrainPointer
  00056	85 c0		 test	 eax, eax
  00058	0f 84 e5 00 00
	00		 je	 $LN1@DrawPatchA

; 925  : 		return;
; 926  : 
; 927  : 	if (!pTerrain->IsMarked())

  0005e	8b 45 b8	 mov	 eax, DWORD PTR _pTerrain$[ebp]
  00061	83 b8 d8 c1 06
	00 00		 cmp	 DWORD PTR [eax+442840], 0
  00068	0f 84 d5 00 00
	00		 je	 $LN1@DrawPatchA
; File C:\Marty 5.5\Src-Client\Client\GameLib\AreaTerrain.h

; 93   : 			*usCoordY = m_wY;

  0006e	0f b7 88 6e a5
	06 00		 movzx	 ecx, WORD PTR [eax+435566]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 933  : 	m_matWorldForCommonUse._41 = -(float) (wCoordX * CTerrainImpl::XSIZE * CTerrainImpl::CELLSCALE);

  00075	0f b7 80 6c a5
	06 00		 movzx	 eax, WORD PTR [eax+435564]
  0007c	69 c0 00 9c ff
	ff		 imul	 eax, eax, -25600
  00082	66 0f 6e c0	 movd	 xmm0, eax

; 934  : 	m_matWorldForCommonUse._42 = (float) (wCoordY * CTerrainImpl::YSIZE * CTerrainImpl::CELLSCALE);

  00086	8b c1		 mov	 eax, ecx
  00088	69 c0 00 64 00
	00		 imul	 eax, eax, 25600
  0008e	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00091	f3 0f 11 87 78
	07 00 00	 movss	 DWORD PTR [edi+1912], xmm0
  00099	66 0f 6e c0	 movd	 xmm0, eax

; 935  : 
; 936  : 	D3DXMATRIX matTexTransform, matTexTransformTemp;
; 937  : 	D3DXMatrixMultiply(&matTexTransform, &m_matViewInverse, &m_matWorldForCommonUse);

  0009d	8d 87 48 07 00
	00		 lea	 eax, DWORD PTR [edi+1864]
  000a3	50		 push	 eax
  000a4	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000a7	8d 87 88 07 00
	00		 lea	 eax, DWORD PTR [edi+1928]
  000ad	50		 push	 eax
  000ae	8d 45 bc	 lea	 eax, DWORD PTR _matTexTransform$[ebp]
  000b1	50		 push	 eax
  000b2	f3 0f 11 87 7c
	07 00 00	 movss	 DWORD PTR [edi+1916], xmm0
  000ba	e8 00 00 00 00	 call	 _D3DXMatrixMultiply@12

; 938  : 	D3DXMatrixMultiply(&matTexTransform, &matTexTransform, &m_matStaticShadow);

  000bf	8d 87 08 08 00
	00		 lea	 eax, DWORD PTR [edi+2056]
  000c5	50		 push	 eax
  000c6	8d 45 bc	 lea	 eax, DWORD PTR _matTexTransform$[ebp]
  000c9	50		 push	 eax
  000ca	50		 push	 eax
  000cb	e8 00 00 00 00	 call	 _D3DXMatrixMultiply@12

; 939  : 	STATEMANAGER.SetTransform(D3DTS_TEXTURE1, &matTexTransform);

  000d0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000d6	8d 45 bc	 lea	 eax, DWORD PTR _matTexTransform$[ebp]
  000d9	50		 push	 eax
  000da	6a 11		 push	 17			; 00000011H
  000dc	e8 00 00 00 00	 call	 ?SetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; CStateManager::SetTransform

; 940  : 
; 941  : 	TTerrainSplatPatch & rAttrSplatPatch = pTerrain->GetMarkedSplatPatch();
; 942  :  	STATEMANAGER.SetTexture(1, rAttrSplatPatch.Splats[0].pd3dTexture);

  000e1	8b 45 b8	 mov	 eax, DWORD PTR _pTerrain$[ebp]
  000e4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000ea	ff b0 e4 c5 07
	00		 push	 DWORD PTR [eax+509412]
  000f0	6a 01		 push	 1
  000f2	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 943  : 
; 944  : 	STATEMANAGER.SetVertexShader(D3DFVF_XYZ | D3DFVF_NORMAL);

  000f7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000fd	6a 12		 push	 18			; 00000012H
  000ff	e8 00 00 00 00	 call	 ?SetVertexShader@CStateManager@@QAEXK@Z ; CStateManager::SetVertexShader

; 945  : 	STATEMANAGER.SetStreamSource(0, pTerrainPatchProxy->HardwareTransformPatch_GetVertexBufferPtr()->GetD3DVertexBuffer(), m_iPatchTerrainVertexSize);

  00104	8b ce		 mov	 ecx, esi
  00106	e8 00 00 00 00	 call	 ?HardwareTransformPatch_GetVertexBufferPtr@CTerrainPatchProxy@@QAEPAVCGraphicVertexBuffer@@XZ ; CTerrainPatchProxy::HardwareTransformPatch_GetVertexBufferPtr
  0010b	ff b7 a8 09 00
	00		 push	 DWORD PTR [edi+2472]
  00111	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00117	ff 70 04	 push	 DWORD PTR [eax+4]
  0011a	6a 00		 push	 0
  0011c	e8 00 00 00 00	 call	 ?SetStreamSource@CStateManager@@QAEXIPAUIDirect3DVertexBuffer8@@I@Z ; CStateManager::SetStreamSource

; 946  : 
; 947  : #ifdef WORLD_EDITOR
; 948  : 	STATEMANAGER.DrawIndexedPrimitive(D3DPT_TRIANGLESTRIP, 0, m_iPatchTerrainVertexCount, 0, m_wNumIndices - 2);
; 949  : #else
; 950  : 	STATEMANAGER.DrawIndexedPrimitive(D3DPT_TRIANGLESTRIP, 0, m_iPatchTerrainVertexCount, 0, m_wNumIndices[0] - 2);

  00121	0f b7 87 d8 00
	00 00		 movzx	 eax, WORD PTR [edi+216]
  00128	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0012e	83 e8 02	 sub	 eax, 2
  00131	50		 push	 eax
  00132	6a 00		 push	 0
  00134	ff b7 a0 09 00
	00		 push	 DWORD PTR [edi+2464]
  0013a	6a 00		 push	 0
  0013c	6a 05		 push	 5
  0013e	e8 00 00 00 00	 call	 ?DrawIndexedPrimitive@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IIII@Z ; CStateManager::DrawIndexedPrimitive
$LN1@DrawPatchA:

; 951  : #endif
; 952  : }

  00143	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00146	5f		 pop	 edi
  00147	33 cd		 xor	 ecx, ebp
  00149	5e		 pop	 esi
  0014a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0014f	8b e5		 mov	 esp, ebp
  00151	5d		 pop	 ebp
  00152	c2 04 00	 ret	 4
?DrawPatchAttr@CMapOutdoor@@QAEXJ@Z ENDP		; CMapOutdoor::DrawPatchAttr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?RecurseRenderAttr@CMapOutdoor@@QAEXPAVCTerrainQuadtreeNode@@_N@Z
_TEXT	SEGMENT
_Node$ = 8						; size = 4
_bCullEnable$ = 12					; size = 1
?RecurseRenderAttr@CMapOutdoor@@QAEXPAVCTerrainQuadtreeNode@@_N@Z PROC ; CMapOutdoor::RecurseRenderAttr, COMDAT
; _this$ = ecx

; 882  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	8b 5d 0c	 mov	 ebx, DWORD PTR _bCullEnable$[ebp]
  00007	56		 push	 esi
  00008	8b 75 08	 mov	 esi, DWORD PTR _Node$[ebp]
  0000b	57		 push	 edi
  0000c	8b f9		 mov	 edi, ecx
  0000e	66 90		 npad	 2
$LL11@RecurseRen:

; 883  : 	if (bCullEnable)

  00010	84 db		 test	 bl, bl
  00012	74 13		 je	 SHORT $LN3@RecurseRen

; 884  : 	{
; 885  : 		if (__RenderTerrain_RecurseRenderQuadTree_CheckBoundingCircle(Node->center, Node->radius)==VIEW_NONE)

  00014	8d 46 38	 lea	 eax, DWORD PTR [esi+56]
  00017	8b cf		 mov	 ecx, edi
  00019	50		 push	 eax
  0001a	8d 46 2c	 lea	 eax, DWORD PTR [esi+44]
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ?__RenderTerrain_RecurseRenderQuadTree_CheckBoundingCircle@CMapOutdoor@@IAEHABUD3DXVECTOR3@@ABM@Z ; CMapOutdoor::__RenderTerrain_RecurseRenderQuadTree_CheckBoundingCircle
  00023	85 c0		 test	 eax, eax
  00025	74 4e		 je	 SHORT $LN9@RecurseRen
$LN3@RecurseRen:

; 886  : 			return;
; 887  : 	}
; 888  : 
; 889  : 	{
; 890  : 		if (Node->Size == 1)

  00027	83 7e 24 01	 cmp	 DWORD PTR [esi+36], 1
  0002b	74 3e		 je	 SHORT $LN14@RecurseRen

; 893  : 		}
; 894  : 		else
; 895  : 		{
; 896  : 			if (Node->NW_Node != NULL)

  0002d	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00030	85 c0		 test	 eax, eax
  00032	74 09		 je	 SHORT $LN6@RecurseRen

; 897  : 				RecurseRenderAttr(Node->NW_Node, bCullEnable);

  00034	53		 push	 ebx
  00035	50		 push	 eax
  00036	8b cf		 mov	 ecx, edi
  00038	e8 00 00 00 00	 call	 ?RecurseRenderAttr@CMapOutdoor@@QAEXPAVCTerrainQuadtreeNode@@_N@Z ; CMapOutdoor::RecurseRenderAttr
$LN6@RecurseRen:

; 898  : 			if (Node->NE_Node != NULL)

  0003d	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00040	85 c0		 test	 eax, eax
  00042	74 09		 je	 SHORT $LN7@RecurseRen

; 899  : 				RecurseRenderAttr(Node->NE_Node, bCullEnable);

  00044	53		 push	 ebx
  00045	50		 push	 eax
  00046	8b cf		 mov	 ecx, edi
  00048	e8 00 00 00 00	 call	 ?RecurseRenderAttr@CMapOutdoor@@QAEXPAVCTerrainQuadtreeNode@@_N@Z ; CMapOutdoor::RecurseRenderAttr
$LN7@RecurseRen:

; 900  : 			if (Node->SW_Node != NULL)

  0004d	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00050	85 c0		 test	 eax, eax
  00052	74 09		 je	 SHORT $LN8@RecurseRen

; 901  : 				RecurseRenderAttr(Node->SW_Node, bCullEnable);

  00054	53		 push	 ebx
  00055	50		 push	 eax
  00056	8b cf		 mov	 ecx, edi
  00058	e8 00 00 00 00	 call	 ?RecurseRenderAttr@CMapOutdoor@@QAEXPAVCTerrainQuadtreeNode@@_N@Z ; CMapOutdoor::RecurseRenderAttr
$LN8@RecurseRen:

; 902  : 			if (Node->SE_Node != NULL)

  0005d	8b 76 20	 mov	 esi, DWORD PTR [esi+32]
  00060	85 f6		 test	 esi, esi
  00062	75 ac		 jne	 SHORT $LL11@RecurseRen

; 903  : 				RecurseRenderAttr(Node->SE_Node, bCullEnable);
; 904  : 		}
; 905  :  	}
; 906  : }

  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	5b		 pop	 ebx
  00067	5d		 pop	 ebp
  00068	c2 08 00	 ret	 8
$LN14@RecurseRen:

; 891  : 		{
; 892  : 			DrawPatchAttr(Node->PatchNum);

  0006b	ff 76 28	 push	 DWORD PTR [esi+40]
  0006e	8b cf		 mov	 ecx, edi
  00070	e8 00 00 00 00	 call	 ?DrawPatchAttr@CMapOutdoor@@QAEXJ@Z ; CMapOutdoor::DrawPatchAttr
$LN9@RecurseRen:

; 903  : 				RecurseRenderAttr(Node->SE_Node, bCullEnable);
; 904  : 		}
; 905  :  	}
; 906  : }

  00075	5f		 pop	 edi
  00076	5e		 pop	 esi
  00077	5b		 pop	 ebx
  00078	5d		 pop	 ebp
  00079	c2 08 00	 ret	 8
?RecurseRenderAttr@CMapOutdoor@@QAEXPAVCTerrainQuadtreeNode@@_N@Z ENDP ; CMapOutdoor::RecurseRenderAttr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\Client\eterBase\Singleton.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?RenderMarkedArea@CMapOutdoor@@QAEXXZ
_TEXT	SEGMENT
_eType$ = -76						; size = 4
_wPrimitiveCount$ = -72					; size = 2
_matTexTransform$ = -68					; size = 64
__$ArrayPad$ = -4					; size = 4
?RenderMarkedArea@CMapOutdoor@@QAEXXZ PROC		; CMapOutdoor::RenderMarkedArea, COMDAT
; _this$ = ecx

; 810  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	57		 push	 edi
  00011	8b f9		 mov	 edi, ecx

; 811  : 	if (!m_pTerrainPatchProxyList)

  00013	83 7f 64 00	 cmp	 DWORD PTR [edi+100], 0
  00017	0f 84 ed 03 00
	00		 je	 $LN1@RenderMark

; 812  : 		return;
; 813  : 
; 814  : 	m_matWorldForCommonUse._41 = 0.0f;
; 815  : 	m_matWorldForCommonUse._42 = 0.0f;
; 816  : 	STATEMANAGER.SetTransform(D3DTS_WORLD, &m_matWorldForCommonUse);

  0001d	56		 push	 esi
  0001e	8d 87 48 07 00
	00		 lea	 eax, DWORD PTR [edi+1864]
  00024	c7 87 78 07 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+1912], 0
  0002e	50		 push	 eax
  0002f	c7 87 7c 07 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+1916], 0
  00039	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0003f	68 00 01 00 00	 push	 256			; 00000100H
  00044	e8 00 00 00 00	 call	 ?SetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; CStateManager::SetTransform

; 817  : 
; 818  : 	WORD wPrimitiveCount;
; 819  : 	D3DPRIMITIVETYPE eType;
; 820  : 	SelectIndexBuffer(0, &wPrimitiveCount, &eType);

  00049	8d 45 b4	 lea	 eax, DWORD PTR _eType$[ebp]
  0004c	8b cf		 mov	 ecx, edi
  0004e	50		 push	 eax
  0004f	8d 45 b8	 lea	 eax, DWORD PTR _wPrimitiveCount$[ebp]
  00052	50		 push	 eax
  00053	6a 00		 push	 0
  00055	e8 00 00 00 00	 call	 ?SelectIndexBuffer@CMapOutdoor@@IAEXEPAGPAW4_D3DPRIMITIVETYPE@@@Z ; CMapOutdoor::SelectIndexBuffer

; 821  : 
; 822  : 	D3DXMATRIX matTexTransform, matTexTransformTemp;
; 823  : 
; 824  : 	D3DXMatrixScaling(&matTexTransform, m_fTerrainTexCoordBase * 32.0f, -m_fTerrainTexCoordBase * 32.0f, 0.0f);

  0005a	f3 0f 10 97 08
	09 00 00	 movss	 xmm2, DWORD PTR [edi+2312]
  00062	8d 45 bc	 lea	 eax, DWORD PTR _matTexTransform$[ebp]
  00065	0f 28 c2	 movaps	 xmm0, xmm2
  00068	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0006b	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00072	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42000000
  0007a	f3 0f 59 15 00
	00 00 00	 mulss	 xmm2, DWORD PTR __real@42000000
  00082	c7 44 24 08 00
	00 00 00	 mov	 DWORD PTR [esp+8], 0
  0008a	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00090	f3 0f 11 14 24	 movss	 DWORD PTR [esp], xmm2
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 _D3DXMatrixScaling@16

; 825  : 	D3DXMatrixMultiply(&matTexTransform, &m_matViewInverse, &matTexTransform);

  0009b	8d 45 bc	 lea	 eax, DWORD PTR _matTexTransform$[ebp]
  0009e	50		 push	 eax
  0009f	8d 87 88 07 00
	00		 lea	 eax, DWORD PTR [edi+1928]
  000a5	50		 push	 eax
  000a6	8d 45 bc	 lea	 eax, DWORD PTR _matTexTransform$[ebp]
  000a9	50		 push	 eax
  000aa	e8 00 00 00 00	 call	 _D3DXMatrixMultiply@12

; 826  : 	STATEMANAGER.SaveTransform(D3DTS_TEXTURE0, &matTexTransform);

  000af	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000b5	8d 45 bc	 lea	 eax, DWORD PTR _matTexTransform$[ebp]
  000b8	50		 push	 eax
  000b9	6a 10		 push	 16			; 00000010H
  000bb	e8 00 00 00 00	 call	 ?SaveTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; CStateManager::SaveTransform

; 827  : 	STATEMANAGER.SaveTransform(D3DTS_TEXTURE1, &matTexTransform);

  000c0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000c6	8d 45 bc	 lea	 eax, DWORD PTR _matTexTransform$[ebp]
  000c9	50		 push	 eax
  000ca	6a 11		 push	 17			; 00000011H
  000cc	e8 00 00 00 00	 call	 ?SaveTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; CStateManager::SaveTransform

; 828  : 
; 829  : 	STATEMANAGER.SaveRenderState(D3DRS_ALPHABLENDENABLE, TRUE);

  000d1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000d7	6a 01		 push	 1
  000d9	6a 1b		 push	 27			; 0000001bH
  000db	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 830  : 	STATEMANAGER.SaveRenderState(D3DRS_SRCBLEND, D3DBLEND_SRCALPHA);

  000e0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000e6	6a 05		 push	 5
  000e8	6a 13		 push	 19			; 00000013H
  000ea	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 831  : 	STATEMANAGER.SaveRenderState(D3DRS_DESTBLEND, D3DBLEND_INVSRCALPHA);

  000ef	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000f5	6a 06		 push	 6
  000f7	6a 14		 push	 20			; 00000014H
  000f9	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 832  : 
; 833  : 	static long lStartTime = timeGetTime();

  000fe	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00104	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0010a	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__timeGetTime@0
  00110	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00113	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??RenderMarkedArea@CMapOutdoor@@QAEXXZ@4HA
  00118	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  0011e	0f 8f f5 02 00
	00		 jg	 $LN80@RenderMark
$LN2@RenderMark:

; 834  : 	float fTime = float((timeGetTime() - lStartTime)%3000) / 3000.0f;

  00124	ff d6		 call	 esi
  00126	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?lStartTime@?1??RenderMarkedArea@CMapOutdoor@@QAEXXZ@4JA
  0012c	33 d2		 xor	 edx, edx
  0012e	b9 b8 0b 00 00	 mov	 ecx, 3000		; 00000bb8H

; 835  : 	float fAlpha = fabs(fTime - 0.5f) / 2.0f + 0.1f;

  00133	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f000000
  0013b	f7 f1		 div	 ecx
  0013d	0f 57 c0	 xorps	 xmm0, xmm0
  00140	f2 0f 2a c2	 cvtsi2sd xmm0, edx
  00144	c1 ea 1f	 shr	 edx, 31			; 0000001fH
  00147	f2 0f 58 04 d5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
  00150	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00154	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@453b8000
  0015c	f3 0f 5c c1	 subss	 xmm0, xmm1
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h

; 680  :             return (float)fabs(_X);

  00160	0f 54 05 00 00
	00 00		 andps	 xmm0, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 835  : 	float fAlpha = fabs(fTime - 0.5f) / 2.0f + 0.1f;

  00167	f3 0f 59 c1	 mulss	 xmm0, xmm1
  0016b	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3dcccccd
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 934  :     DWORD dwA = a >= 1.0f ? 0xff : a <= 0.0f ? 0x00 : (DWORD) (a * 255.0f + 0.5f);

  00173	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  0017a	72 07		 jb	 SHORT $LN35@RenderMark
  0017c	b8 ff 00 00 00	 mov	 eax, 255		; 000000ffH
  00181	eb 1d		 jmp	 SHORT $LN34@RenderMark
$LN35@RenderMark:
  00183	0f 57 d2	 xorps	 xmm2, xmm2
  00186	0f 2f d0	 comiss	 xmm2, xmm0
  00189	72 04		 jb	 SHORT $LN33@RenderMark
  0018b	33 c0		 xor	 eax, eax
  0018d	eb 11		 jmp	 SHORT $LN34@RenderMark
$LN33@RenderMark:
  0018f	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  00197	f3 0f 58 c1	 addss	 xmm0, xmm1
  0019b	e8 00 00 00 00	 call	 __ftol3
$LN34@RenderMark:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 836  : 	STATEMANAGER.SetRenderState(D3DRS_TEXTUREFACTOR, D3DXCOLOR(1.0f, 1.0f, 1.0f, fAlpha));

  001a0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 936  :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  001a6	c1 e0 18	 shl	 eax, 24			; 00000018H
  001a9	0d ff ff ff 00	 or	 eax, 16777215		; 00ffffffH
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 836  : 	STATEMANAGER.SetRenderState(D3DRS_TEXTUREFACTOR, D3DXCOLOR(1.0f, 1.0f, 1.0f, fAlpha));

  001ae	50		 push	 eax
  001af	6a 3c		 push	 60			; 0000003cH
  001b1	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 837  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG1, D3DTA_TEXTURE);

  001b6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001bc	6a 02		 push	 2
  001be	6a 02		 push	 2
  001c0	6a 00		 push	 0
  001c2	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 838  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG2, D3DTA_TFACTOR);

  001c7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001cd	6a 03		 push	 3
  001cf	6a 03		 push	 3
  001d1	6a 00		 push	 0
  001d3	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 839  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP, D3DTOP_SELECTARG2);

  001d8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001de	6a 03		 push	 3
  001e0	6a 01		 push	 1
  001e2	6a 00		 push	 0
  001e4	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 840  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAARG1, D3DTA_TEXTURE);

  001e9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001ef	6a 02		 push	 2
  001f1	6a 05		 push	 5
  001f3	6a 00		 push	 0
  001f5	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 841  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAARG2, D3DTA_TFACTOR);

  001fa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00200	6a 03		 push	 3
  00202	6a 06		 push	 6
  00204	6a 00		 push	 0
  00206	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 842  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAOP, D3DTOP_SELECTARG2);

  0020b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00211	6a 03		 push	 3
  00213	6a 04		 push	 4
  00215	6a 00		 push	 0
  00217	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 843  : 	STATEMANAGER.SaveTextureStageState(0, D3DTSS_TEXCOORDINDEX, D3DTSS_TCI_CAMERASPACEPOSITION);

  0021c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00222	68 00 00 02 00	 push	 131072			; 00020000H
  00227	6a 0b		 push	 11			; 0000000bH
  00229	6a 00		 push	 0
  0022b	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 844  : 	STATEMANAGER.SaveTextureStageState(0, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_COUNT2);

  00230	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00236	6a 02		 push	 2
  00238	6a 18		 push	 24			; 00000018H
  0023a	6a 00		 push	 0
  0023c	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 845  : 
; 846  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_COLORARG1, D3DTA_CURRENT);

  00241	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00247	6a 01		 push	 1
  00249	6a 02		 push	 2
  0024b	6a 01		 push	 1
  0024d	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 847  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_COLOROP, D3DTOP_SELECTARG1);

  00252	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00258	6a 02		 push	 2
  0025a	6a 01		 push	 1
  0025c	6a 01		 push	 1
  0025e	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 848  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAARG1, D3DTA_TEXTURE);

  00263	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00269	6a 02		 push	 2
  0026b	6a 05		 push	 5
  0026d	6a 01		 push	 1
  0026f	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 849  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAARG2, D3DTA_CURRENT);

  00274	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0027a	6a 01		 push	 1
  0027c	6a 06		 push	 6
  0027e	6a 01		 push	 1
  00280	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 850  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAOP, D3DTOP_MODULATE);

  00285	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0028b	6a 04		 push	 4
  0028d	6a 04		 push	 4
  0028f	6a 01		 push	 1
  00291	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 851  : 	STATEMANAGER.SaveTextureStageState(1, D3DTSS_TEXCOORDINDEX, D3DTSS_TCI_CAMERASPACEPOSITION);

  00296	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0029c	68 00 00 02 00	 push	 131072			; 00020000H
  002a1	6a 0b		 push	 11			; 0000000bH
  002a3	6a 01		 push	 1
  002a5	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 852  : 	STATEMANAGER.SaveTextureStageState(1, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_COUNT2);

  002aa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  002b0	6a 02		 push	 2
  002b2	6a 18		 push	 24			; 00000018H
  002b4	6a 01		 push	 1
  002b6	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 853  : 	STATEMANAGER.SaveTextureStageState(1, D3DTSS_MINFILTER,	D3DTEXF_POINT);

  002bb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  002c1	6a 01		 push	 1
  002c3	6a 11		 push	 17			; 00000011H
  002c5	6a 01		 push	 1
  002c7	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 854  : 	STATEMANAGER.SaveTextureStageState(1, D3DTSS_MAGFILTER,	D3DTEXF_POINT);

  002cc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  002d2	6a 01		 push	 1
  002d4	6a 10		 push	 16			; 00000010H
  002d6	6a 01		 push	 1
  002d8	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 855  : 	STATEMANAGER.SaveTextureStageState(1, D3DTSS_MIPFILTER,	D3DTEXF_POINT);

  002dd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  002e3	6a 01		 push	 1
  002e5	6a 12		 push	 18			; 00000012H
  002e7	6a 01		 push	 1
  002e9	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 856  : 	STATEMANAGER.SaveTextureStageState(1, D3DTSS_ADDRESSU,	D3DTADDRESS_CLAMP);

  002ee	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  002f4	6a 03		 push	 3
  002f6	6a 0d		 push	 13			; 0000000dH
  002f8	6a 01		 push	 1
  002fa	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 857  : 	STATEMANAGER.SaveTextureStageState(1, D3DTSS_ADDRESSV,	D3DTADDRESS_CLAMP);

  002ff	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00305	6a 03		 push	 3
  00307	6a 0e		 push	 14			; 0000000eH
  00309	6a 01		 push	 1
  0030b	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState
; File C:\Marty 5.5\Src-Client\Client\eterBase\Singleton.h

; 27   : 		return (*ms_singleton);

  00310	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 859  : 	STATEMANAGER.SetTexture(0, m_attrImageInstance.GetTexturePointer()->GetD3DTexture());

  00316	8d 8f ec 0d 00
	00		 lea	 ecx, DWORD PTR [edi+3564]
  0031c	e8 00 00 00 00	 call	 ?GetTexturePointer@CGraphicImageInstance@@QAEPAVCGraphicTexture@@XZ ; CGraphicImageInstance::GetTexturePointer
  00321	8b c8		 mov	 ecx, eax
  00323	e8 00 00 00 00	 call	 ?GetD3DTexture@CGraphicTexture@@QBEPAUIDirect3DTexture8@@XZ ; CGraphicTexture::GetD3DTexture
  00328	50		 push	 eax
  00329	6a 00		 push	 0
  0032b	8b ce		 mov	 ecx, esi
  0032d	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 860  : 
; 861  : 	RecurseRenderAttr(m_pRootNode);

  00332	6a 01		 push	 1
  00334	ff b7 14 01 00
	00		 push	 DWORD PTR [edi+276]
  0033a	8b cf		 mov	 ecx, edi
  0033c	e8 00 00 00 00	 call	 ?RecurseRenderAttr@CMapOutdoor@@QAEXPAVCTerrainQuadtreeNode@@_N@Z ; CMapOutdoor::RecurseRenderAttr

; 862  : 
; 863  : 	STATEMANAGER.RestoreTextureStageState(0, D3DTSS_TEXCOORDINDEX);

  00341	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00347	6a 0b		 push	 11			; 0000000bH
  00349	6a 00		 push	 0
  0034b	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 864  : 	STATEMANAGER.RestoreTextureStageState(0, D3DTSS_TEXTURETRANSFORMFLAGS);

  00350	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00356	6a 18		 push	 24			; 00000018H
  00358	6a 00		 push	 0
  0035a	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 865  : 	STATEMANAGER.RestoreTextureStageState(1, D3DTSS_TEXCOORDINDEX);

  0035f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00365	6a 0b		 push	 11			; 0000000bH
  00367	6a 01		 push	 1
  00369	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 866  : 	STATEMANAGER.RestoreTextureStageState(1, D3DTSS_TEXTURETRANSFORMFLAGS);

  0036e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00374	6a 18		 push	 24			; 00000018H
  00376	6a 01		 push	 1
  00378	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 867  : 	STATEMANAGER.RestoreTextureStageState(1, D3DTSS_MINFILTER);

  0037d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00383	6a 11		 push	 17			; 00000011H
  00385	6a 01		 push	 1
  00387	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 868  : 	STATEMANAGER.RestoreTextureStageState(1, D3DTSS_MAGFILTER);

  0038c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00392	6a 10		 push	 16			; 00000010H
  00394	6a 01		 push	 1
  00396	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 869  : 	STATEMANAGER.RestoreTextureStageState(1, D3DTSS_MIPFILTER);

  0039b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  003a1	6a 12		 push	 18			; 00000012H
  003a3	6a 01		 push	 1
  003a5	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 870  : 	STATEMANAGER.RestoreTextureStageState(1, D3DTSS_ADDRESSU);

  003aa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  003b0	6a 0d		 push	 13			; 0000000dH
  003b2	6a 01		 push	 1
  003b4	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 871  : 	STATEMANAGER.RestoreTextureStageState(1, D3DTSS_ADDRESSV);

  003b9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  003bf	6a 0e		 push	 14			; 0000000eH
  003c1	6a 01		 push	 1
  003c3	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 872  : 
; 873  : 	STATEMANAGER.RestoreTransform(D3DTS_TEXTURE0);

  003c8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  003ce	6a 10		 push	 16			; 00000010H
  003d0	e8 00 00 00 00	 call	 ?RestoreTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@@Z ; CStateManager::RestoreTransform

; 874  : 	STATEMANAGER.RestoreTransform(D3DTS_TEXTURE1);

  003d5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  003db	6a 11		 push	 17			; 00000011H
  003dd	e8 00 00 00 00	 call	 ?RestoreTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@@Z ; CStateManager::RestoreTransform

; 875  : 
; 876  : 	STATEMANAGER.RestoreRenderState(D3DRS_ALPHABLENDENABLE);

  003e2	6a 1b		 push	 27			; 0000001bH
  003e4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  003ea	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 877  : 	STATEMANAGER.RestoreRenderState(D3DRS_SRCBLEND);

  003ef	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  003f5	6a 13		 push	 19			; 00000013H
  003f7	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 878  : 	STATEMANAGER.RestoreRenderState(D3DRS_DESTBLEND);

  003fc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00402	6a 14		 push	 20			; 00000014H
  00404	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState
  00409	5e		 pop	 esi
$LN1@RenderMark:

; 879  : }

  0040a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0040d	33 cd		 xor	 ecx, ebp
  0040f	5f		 pop	 edi
  00410	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00415	8b e5		 mov	 esp, ebp
  00417	5d		 pop	 ebp
  00418	c3		 ret	 0
$LN80@RenderMark:

; 832  : 
; 833  : 	static long lStartTime = timeGetTime();

  00419	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??RenderMarkedArea@CMapOutdoor@@QAEXXZ@4HA
  0041e	e8 00 00 00 00	 call	 __Init_thread_header
  00423	83 c4 04	 add	 esp, 4
  00426	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??RenderMarkedArea@CMapOutdoor@@QAEXXZ@4HA, -1
  0042d	0f 85 f1 fc ff
	ff		 jne	 $LN2@RenderMark
  00433	ff d6		 call	 esi
  00435	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??RenderMarkedArea@CMapOutdoor@@QAEXXZ@4HA
  0043a	a3 00 00 00 00	 mov	 DWORD PTR ?lStartTime@?1??RenderMarkedArea@CMapOutdoor@@QAEXXZ@4JA, eax
  0043f	e8 00 00 00 00	 call	 __Init_thread_footer
  00444	83 c4 04	 add	 esp, 4
  00447	e9 d8 fc ff ff	 jmp	 $LN2@RenderMark
?RenderMarkedArea@CMapOutdoor@@QAEXXZ ENDP		; CMapOutdoor::RenderMarkedArea
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?ApplyLight@CMapOutdoor@@UAEXKABU_D3DLIGHT8@@@Z
_TEXT	SEGMENT
_dwVersion$ = 8						; size = 4
_c_rkLight$ = 12					; size = 4
?ApplyLight@CMapOutdoor@@UAEXKABU_D3DLIGHT8@@@Z PROC	; CMapOutdoor::ApplyLight, COMDAT
; _this$ = ecx

; 129  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 130  : 	m_kSTPD.m_dwLightVersion=dwVersion;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwVersion$[ebp]
  00006	89 81 08 0a 00
	00		 mov	 DWORD PTR [ecx+2568], eax

; 131  : 	STATEMANAGER.SetLight(0, &c_rkLight);

  0000c	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _dwVersion$[ebp], 0
  00013	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton

; 132  : }

  00019	5d		 pop	 ebp

; 131  : 	STATEMANAGER.SetLight(0, &c_rkLight);

  0001a	e9 00 00 00 00	 jmp	 ?SetLight@CStateManager@@QAEXKPBU_D3DLIGHT8@@@Z ; CStateManager::SetLight
?ApplyLight@CMapOutdoor@@UAEXKABU_D3DLIGHT8@@@Z ENDP	; CMapOutdoor::ApplyLight
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?GetRenderedGraphicThingInstanceNum@CMapOutdoor@@QAEAAV?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@PAK0@Z
_TEXT	SEGMENT
_pdwGraphicThingInstanceNum$ = 8			; size = 4
_pdwCRCNum$ = 12					; size = 4
?GetRenderedGraphicThingInstanceNum@CMapOutdoor@@QAEAAV?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@PAK0@Z PROC ; CMapOutdoor::GetRenderedGraphicThingInstanceNum, COMDAT
; _this$ = ecx

; 177  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 178  : 	*pdwGraphicThingInstanceNum = m_dwRenderedGraphicThingInstanceNum;

  00003	8b 45 08	 mov	 eax, DWORD PTR _pdwGraphicThingInstanceNum$[ebp]
  00006	8b 91 b4 09 00
	00		 mov	 edx, DWORD PTR [ecx+2484]
  0000c	89 10		 mov	 DWORD PTR [eax], edx

; 179  : 	*pdwCRCNum = m_dwRenderedCRCNum;

  0000e	8b 45 0c	 mov	 eax, DWORD PTR _pdwCRCNum$[ebp]
  00011	8b 89 b0 09 00
	00		 mov	 ecx, DWORD PTR [ecx+2480]
  00017	89 08		 mov	 DWORD PTR [eax], ecx

; 180  : 
; 181  : 	return m_dwRenderedCRCWithNumberVector;

  00019	b8 00 00 00 00	 mov	 eax, OFFSET ?m_dwRenderedCRCWithNumberVector@@3V?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@A ; m_dwRenderedCRCWithNumberVector

; 182  : }

  0001e	5d		 pop	 ebp
  0001f	c2 08 00	 ret	 8
?GetRenderedGraphicThingInstanceNum@CMapOutdoor@@QAEAAV?$vector@USCRCWithNumber@CArea@@V?$allocator@USCRCWithNumber@CArea@@@std@@@std@@PAK0@Z ENDP ; CMapOutdoor::GetRenderedGraphicThingInstanceNum
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?GetRenderedSplatNum@CMapOutdoor@@QAEAAV?$vector@HV?$allocator@H@std@@@std@@PAH0PAM@Z
_TEXT	SEGMENT
_piPatch$ = 8						; size = 4
_piSplat$ = 12						; size = 4
_pfSplatRatio$ = 16					; size = 4
?GetRenderedSplatNum@CMapOutdoor@@QAEAAV?$vector@HV?$allocator@H@std@@@std@@PAH0PAM@Z PROC ; CMapOutdoor::GetRenderedSplatNum, COMDAT
; _this$ = ecx

; 168  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 169  : 	*piPatch = m_iRenderedPatchNum;

  00003	8b 45 08	 mov	 eax, DWORD PTR _piPatch$[ebp]
  00006	8b 91 8c 09 00
	00		 mov	 edx, DWORD PTR [ecx+2444]
  0000c	89 10		 mov	 DWORD PTR [eax], edx

; 170  : 	*piSplat = m_iRenderedSplatNum;

  0000e	8b 45 0c	 mov	 eax, DWORD PTR _piSplat$[ebp]
  00011	8b 91 88 09 00
	00		 mov	 edx, DWORD PTR [ecx+2440]
  00017	89 10		 mov	 DWORD PTR [eax], edx
  00019	66 0f 6e 89 84
	09 00 00	 movd	 xmm1, DWORD PTR [ecx+2436]
  00021	66 0f 6e 81 8c
	09 00 00	 movd	 xmm0, DWORD PTR [ecx+2444]

; 171  : 	*pfSplatRatio = m_iRenderedSplatNumSqSum/float(m_iRenderedPatchNum);

  00029	0f 5b c9	 cvtdq2ps xmm1, xmm1
  0002c	8b 45 10	 mov	 eax, DWORD PTR _pfSplatRatio$[ebp]
  0002f	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00032	f3 0f 5e c8	 divss	 xmm1, xmm0
  00036	f3 0f 11 08	 movss	 DWORD PTR [eax], xmm1

; 172  : 
; 173  : 	return m_RenderedTextureNumVector;

  0003a	8d 81 90 09 00
	00		 lea	 eax, DWORD PTR [ecx+2448]

; 174  : }

  00040	5d		 pop	 ebp
  00041	c2 0c 00	 ret	 12			; 0000000cH
?GetRenderedSplatNum@CMapOutdoor@@QAEAAV?$vector@HV?$allocator@H@std@@@std@@PAH0PAM@Z ENDP ; CMapOutdoor::GetRenderedSplatNum
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?SetSplatLimit@CMapOutdoor@@QAEXH@Z
_TEXT	SEGMENT
_iSplatNum$ = 8						; size = 4
?SetSplatLimit@CMapOutdoor@@QAEXH@Z PROC		; CMapOutdoor::SetSplatLimit, COMDAT
; _this$ = ecx

; 163  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 164  : 	m_iSplatLimit = iSplatNum;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iSplatNum$[ebp]
  00006	89 81 9c 09 00
	00		 mov	 DWORD PTR [ecx+2460], eax

; 165  : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?SetSplatLimit@CMapOutdoor@@QAEXH@Z ENDP		; CMapOutdoor::SetSplatLimit
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?SetVisiblePart@CMapOutdoor@@QAEXH_N@Z
_TEXT	SEGMENT
_ePart$ = 8						; size = 4
_isVisible$ = 12					; size = 1
?SetVisiblePart@CMapOutdoor@@QAEXH_N@Z PROC		; CMapOutdoor::SetVisiblePart, COMDAT
; _this$ = ecx

; 140  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 141  : 	DWORD dwMask=(1<<ePart);

  00006	b8 01 00 00 00	 mov	 eax, 1
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _ePart$[ebp]
  0000e	d3 e0		 shl	 eax, cl

; 142  : 	if (isVisible)

  00010	80 7d 0c 00	 cmp	 BYTE PTR _isVisible$[ebp], 0
  00014	8b 96 80 09 00
	00		 mov	 edx, DWORD PTR [esi+2432]
  0001a	74 0d		 je	 SHORT $LN2@SetVisible

; 143  : 	{
; 144  : 		m_dwVisiblePartFlags|=dwMask;

  0001c	0b d0		 or	 edx, eax

; 150  : 	}
; 151  : }

  0001e	89 96 80 09 00
	00		 mov	 DWORD PTR [esi+2432], edx
  00024	5e		 pop	 esi
  00025	5d		 pop	 ebp
  00026	c2 08 00	 ret	 8
$LN2@SetVisible:

; 145  : 	}
; 146  : 	else
; 147  : 	{
; 148  : 		DWORD dwReverseMask=~dwMask;

  00029	f7 d0		 not	 eax

; 149  : 		m_dwVisiblePartFlags&=dwReverseMask;

  0002b	23 c2		 and	 eax, edx

; 150  : 	}
; 151  : }

  0002d	89 86 80 09 00
	00		 mov	 DWORD PTR [esi+2432], eax
  00033	5e		 pop	 esi
  00034	5d		 pop	 ebp
  00035	c2 08 00	 ret	 8
?SetVisiblePart@CMapOutdoor@@QAEXH_N@Z ENDP		; CMapOutdoor::SetVisiblePart
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?SetInverseViewAndDynamicShaodwMatrices@CMapOutdoor@@QAEXXZ
_TEXT	SEGMENT
$T1 = -168						; size = 64
$T2 = -104						; size = 64
_v3LightEye$ = -40					; size = 12
$T3 = -28						; size = 12
_v3Target$ = -16					; size = 12
__$ArrayPad$ = -4					; size = 4
?SetInverseViewAndDynamicShaodwMatrices@CMapOutdoor@@QAEXXZ PROC ; CMapOutdoor::SetInverseViewAndDynamicShaodwMatrices, COMDAT
; _this$ = ecx

; 237  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a8 00 00
	00		 sub	 esp, 168		; 000000a8H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	8b d9		 mov	 ebx, ecx

; 238  : 	CCamera * pCamera = CCameraManager::Instance().GetCurrentCamera();

  00016	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
  0001c	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 239  : 
; 240  : 	if (!pCamera)

  00021	85 c0		 test	 eax, eax
  00023	0f 84 fd 00 00
	00		 je	 $LN1@SetInverse

; 243  : 	m_matViewInverse = pCamera->GetInverseViewMatrix();

  00029	0f 10 80 ac 00
	00 00		 movups	 xmm0, XMMWORD PTR [eax+172]
  00030	56		 push	 esi
  00031	57		 push	 edi
  00032	0f 11 83 88 07
	00 00		 movups	 XMMWORD PTR [ebx+1928], xmm0
  00039	8d bb 88 07 00
	00		 lea	 edi, DWORD PTR [ebx+1928]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 180  :     x = fx;

  0003f	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR $T3[ebp], 0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 243  : 	m_matViewInverse = pCamera->GetInverseViewMatrix();

  00046	0f 10 80 bc 00
	00 00		 movups	 xmm0, XMMWORD PTR [eax+188]

; 251  : 	D3DXMatrixLookAtRH(&m_matLightView, &v3LightEye, &v3Target, &D3DXVECTOR3(0.0f, 0.0f, 1.0f));

  0004d	8d b3 c8 08 00
	00		 lea	 esi, DWORD PTR [ebx+2248]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 181  :     y = fy;

  00053	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+4], 0

; 182  :     z = fz;

  0005a	c7 45 ec 00 00
	80 3f		 mov	 DWORD PTR $T3[ebp+8], 1065353216 ; 3f800000H
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 243  : 	m_matViewInverse = pCamera->GetInverseViewMatrix();

  00061	0f 11 47 10	 movups	 XMMWORD PTR [edi+16], xmm0
  00065	0f 10 80 cc 00
	00 00		 movups	 xmm0, XMMWORD PTR [eax+204]
  0006c	0f 11 47 20	 movups	 XMMWORD PTR [edi+32], xmm0
  00070	0f 10 80 dc 00
	00 00		 movups	 xmm0, XMMWORD PTR [eax+220]
  00077	0f 11 47 30	 movups	 XMMWORD PTR [edi+48], xmm0

; 244  : 
; 245  : 	D3DXVECTOR3 v3Target = pCamera->GetTarget();

  0007b	f3 0f 7e 40 3c	 movq	 xmm0, QWORD PTR [eax+60]
  00080	66 0f d6 45 f0	 movq	 QWORD PTR _v3Target$[ebp], xmm0

; 247  : 	D3DXVECTOR3 v3LightEye(v3Target.x - 1.732f * 1250.0f,

  00085	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _v3Target$[ebp]
  0008a	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@45075000
  00092	8b 40 44	 mov	 eax, DWORD PTR [eax+68]
  00095	89 45 f8	 mov	 DWORD PTR _v3Target$[ebp+8], eax

; 251  : 	D3DXMatrixLookAtRH(&m_matLightView, &v3LightEye, &v3Target, &D3DXVECTOR3(0.0f, 0.0f, 1.0f));

  00098	8d 45 e4	 lea	 eax, DWORD PTR $T3[ebp]
  0009b	50		 push	 eax
  0009c	8d 45 f0	 lea	 eax, DWORD PTR _v3Target$[ebp]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 180  :     x = fx;

  0009f	f3 0f 11 45 d8	 movss	 DWORD PTR _v3LightEye$[ebp], xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 247  : 	D3DXVECTOR3 v3LightEye(v3Target.x - 1.732f * 1250.0f,

  000a4	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _v3Target$[ebp+4]
  000a9	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@449c4000

; 251  : 	D3DXMatrixLookAtRH(&m_matLightView, &v3LightEye, &v3Target, &D3DXVECTOR3(0.0f, 0.0f, 1.0f));

  000b1	50		 push	 eax
  000b2	8d 45 d8	 lea	 eax, DWORD PTR _v3LightEye$[ebp]
  000b5	50		 push	 eax
  000b6	56		 push	 esi
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 181  :     y = fy;

  000b7	f3 0f 11 45 dc	 movss	 DWORD PTR _v3LightEye$[ebp+4], xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 247  : 	D3DXVECTOR3 v3LightEye(v3Target.x - 1.732f * 1250.0f,

  000bc	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _v3Target$[ebp+8]
  000c1	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@45875000
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 182  :     z = fz;

  000c9	f3 0f 11 45 e0	 movss	 DWORD PTR _v3LightEye$[ebp+8], xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 251  : 	D3DXMatrixLookAtRH(&m_matLightView, &v3LightEye, &v3Target, &D3DXVECTOR3(0.0f, 0.0f, 1.0f));

  000ce	e8 00 00 00 00	 call	 _D3DXMatrixLookAtRH@16
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 580  :     D3DXMatrixMultiply(&matT, this, &mat);

  000d3	56		 push	 esi
  000d4	57		 push	 edi
  000d5	8d 85 58 ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  000db	50		 push	 eax
  000dc	e8 00 00 00 00	 call	 _D3DXMatrixMultiply@12
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 252  : 	m_matDynamicShadow = m_matViewInverse * m_matLightView * m_matDynamicShadowScale;

  000e1	8d 83 88 08 00
	00		 lea	 eax, DWORD PTR [ebx+2184]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 580  :     D3DXMatrixMultiply(&matT, this, &mat);

  000e7	50		 push	 eax
  000e8	8d 85 58 ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  000ee	50		 push	 eax
  000ef	8d 45 98	 lea	 eax, DWORD PTR $T2[ebp]
  000f2	50		 push	 eax
  000f3	e8 00 00 00 00	 call	 _D3DXMatrixMultiply@12
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp

; 252  : 	m_matDynamicShadow = m_matViewInverse * m_matLightView * m_matDynamicShadowScale;

  000f8	0f 10 45 98	 movups	 xmm0, XMMWORD PTR $T2[ebp]
  000fc	5f		 pop	 edi
  000fd	5e		 pop	 esi
  000fe	0f 11 83 48 08
	00 00		 movups	 XMMWORD PTR [ebx+2120], xmm0
  00105	0f 10 45 a8	 movups	 xmm0, XMMWORD PTR $T2[ebp+16]
  00109	0f 11 83 58 08
	00 00		 movups	 XMMWORD PTR [ebx+2136], xmm0
  00110	0f 10 45 b8	 movups	 xmm0, XMMWORD PTR $T2[ebp+32]
  00114	0f 11 83 68 08
	00 00		 movups	 XMMWORD PTR [ebx+2152], xmm0
  0011b	0f 10 45 c8	 movups	 xmm0, XMMWORD PTR $T2[ebp+48]
  0011f	0f 11 83 78 08
	00 00		 movups	 XMMWORD PTR [ebx+2168], xmm0
$LN1@SetInverse:

; 253  : }

  00126	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00129	33 cd		 xor	 ecx, ebp
  0012b	5b		 pop	 ebx
  0012c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00131	8b e5		 mov	 esp, ebp
  00133	5d		 pop	 ebp
  00134	c3		 ret	 0
?SetInverseViewAndDynamicShaodwMatrices@CMapOutdoor@@QAEXXZ ENDP ; CMapOutdoor::SetInverseViewAndDynamicShaodwMatrices
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRender.cpp
;	COMDAT ?OnRender@CMapOutdoor@@MAEXXZ
_TEXT	SEGMENT
?OnRender@CMapOutdoor@@MAEXXZ PROC			; CMapOutdoor::OnRender, COMDAT
; _this$ = ecx

; 256  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 257  : #ifdef __PERFORMANCE_CHECKER__
; 258  : 	DWORD t1=ELTimer_GetMSec();
; 259  : 	SetInverseViewAndDynamicShaodwMatrices();
; 260  : 
; 261  : 	SetBlendOperation();
; 262  : 	DWORD t2=ELTimer_GetMSec();
; 263  : 	RenderArea();
; 264  : 	DWORD t3=ELTimer_GetMSec();
; 265  : 	if (!m_bEnableTerrainOnlyForHeight)
; 266  : 		RenderTerrain();
; 267  : 	DWORD t4=ELTimer_GetMSec();
; 268  : 	RenderTree();
; 269  : 	DWORD t5=ELTimer_GetMSec();
; 270  : 	DWORD tEnd=ELTimer_GetMSec();
; 271  : 
; 272  : 	if (tEnd-t1<7)
; 273  : 		return;
; 274  : 
; 275  : 	static FILE* fp=fopen("perf_map_render.txt", "w");
; 276  :  	fprintf(fp, "MAP.Total %d (Time %d)\n", tEnd-t1, ELTimer_GetMSec());
; 277  : 	fprintf(fp, "MAP.ENV %d\n", t2-t1);
; 278  : 	fprintf(fp, "MAP.OBJ %d\n", t3-t2);
; 279  : 	fprintf(fp, "MAP.TRN %d\n", t4-t3);
; 280  : 	fprintf(fp, "MAP.TRE %d\n", t5-t4);
; 281  : 
; 282  : #else
; 283  : 	SetInverseViewAndDynamicShaodwMatrices();

  00003	e8 00 00 00 00	 call	 ?SetInverseViewAndDynamicShaodwMatrices@CMapOutdoor@@QAEXXZ ; CMapOutdoor::SetInverseViewAndDynamicShaodwMatrices

; 284  : 
; 285  : 	SetBlendOperation();

  00008	8b ce		 mov	 ecx, esi
  0000a	e8 00 00 00 00	 call	 ?SetBlendOperation@CScreen@@QAEXXZ ; CScreen::SetBlendOperation

; 286  : 	RenderArea();

  0000f	6a 01		 push	 1
  00011	8b ce		 mov	 ecx, esi
  00013	e8 00 00 00 00	 call	 ?RenderArea@CMapOutdoor@@QAEX_N@Z ; CMapOutdoor::RenderArea

; 287  : 	RenderTree();

  00018	8b ce		 mov	 ecx, esi
  0001a	e8 00 00 00 00	 call	 ?RenderTree@CMapOutdoor@@QAEXXZ ; CMapOutdoor::RenderTree

; 288  : 	if (!m_bEnableTerrainOnlyForHeight)

  0001f	80 be b6 0e 00
	00 00		 cmp	 BYTE PTR [esi+3766], 0
  00026	75 07		 jne	 SHORT $LN2@OnRender

; 289  : 		RenderTerrain();

  00028	8b ce		 mov	 ecx, esi
  0002a	e8 00 00 00 00	 call	 ?RenderTerrain@CMapOutdoor@@QAEXXZ ; CMapOutdoor::RenderTerrain
$LN2@OnRender:

; 290  : 	RenderBlendArea();

  0002f	8b ce		 mov	 ecx, esi
  00031	5e		 pop	 esi
  00032	e9 00 00 00 00	 jmp	 ?RenderBlendArea@CMapOutdoor@@QAEXXZ ; CMapOutdoor::RenderBlendArea
?OnRender@CMapOutdoor@@MAEXXZ ENDP			; CMapOutdoor::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 137  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 138  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 139  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 140  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 87   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 141  :         _Throw_bad_array_new_length(); // add overflow
; 142  :     }
; 143  : 
; 144  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 87   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 146  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 147  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 148  : 
; 149  : #ifdef _DEBUG
; 150  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 151  : #endif // _DEBUG
; 152  :     return _Ptr;
; 153  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Xlength@?$vector@EV?$allocator@E@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@EV?$allocator@E@std@@@std@@CAXXZ PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::_Xlength, COMDAT

; 2138 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@EV?$allocator@E@std@@@std@@CAXXZ ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 331  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 332  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.h
;	COMDAT ??0D3DXMATRIX@@QAE@XZ
_TEXT	SEGMENT
??0D3DXMATRIX@@QAE@XZ PROC				; D3DXMATRIX::D3DXMATRIX, COMDAT
; _this$ = ecx

; 177  :     D3DXMATRIX() {};

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0D3DXMATRIX@@QAE@XZ ENDP				; D3DXMATRIX::D3DXMATRIX
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.37.32822.0 

	TITLE	C:\Marty 5.5\Src-Client\Client\GameLib\Distribute\MapOutdoorUpdate.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
PUBLIC	??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
PUBLIC	??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
PUBLIC	??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vector deleting destructor'
;	COMDAT ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDe'
	DB	'corator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDec'
	DB	'orator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpd'
	DB	'ateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@N'
	DB	'EffectUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEff'
	DB	'ectUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffe'
	DB	'ctUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecora'
	DB	'tor@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDeco'
	DB	'rator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
CONST	SEGMENT
?_Fake_alloc@std@@3U_Fake_allocator@1@B	ORG $+1		; std::_Fake_alloc
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	??0CDynamicSphereInstance@@QAE@XZ		; CDynamicSphereInstance::CDynamicSphereInstance
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??1SpherePackCallback@@UAE@XZ			; SpherePackCallback::~SpherePackCallback
PUBLIC	?VisibilityCallback@SpherePackCallback@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z ; SpherePackCallback::VisibilityCallback
PUBLIC	?RayTraceCallback@SpherePackCallback@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z ; SpherePackCallback::RayTraceCallback
PUBLIC	?RangeTestCallback@SpherePackCallback@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z ; SpherePackCallback::RangeTestCallback
PUBLIC	?PointTest2dCallback@SpherePackCallback@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z ; SpherePackCallback::PointTest2dCallback
PUBLIC	??_GSpherePackCallback@@UAEPAXI@Z		; SpherePackCallback::`scalar deleting destructor'
PUBLIC	??1?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@QAE@XZ ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::~vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >
PUBLIC	?push_back@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@QAEXABQAVCGraphicObjectInstance@@@Z ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::push_back
PUBLIC	?_Xlength@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::_Xlength
PUBLIC	?Update@CMapOutdoor@@UAE_NMMM@Z			; CMapOutdoor::Update
PUBLIC	?UpdateAroundAmbience@CMapOutdoor@@UAEXMMM@Z	; CMapOutdoor::UpdateAroundAmbience
PUBLIC	?UpdateSky@CMapOutdoor@@QAEXXZ			; CMapOutdoor::UpdateSky
PUBLIC	?__ClearGarvage@CMapOutdoor@@MAEXXZ		; CMapOutdoor::__ClearGarvage
PUBLIC	?__UpdateGarvage@CMapOutdoor@@MAEXXZ		; CMapOutdoor::__UpdateGarvage
PUBLIC	?UpdateAreaList@CMapOutdoor@@MAEXJJ@Z		; CMapOutdoor::UpdateAreaList
PUBLIC	?UpdateTerrain@CMapOutdoor@@IAEXMM@Z		; CMapOutdoor::UpdateTerrain
PUBLIC	?ConvertTerrainToTnL@CMapOutdoor@@IAEXJJ@Z	; CMapOutdoor::ConvertTerrainToTnL
PUBLIC	?AssignPatch@CMapOutdoor@@IAEXJJJJJ@Z		; CMapOutdoor::AssignPatch
PUBLIC	?__UpdateArea@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@@Z ; CMapOutdoor::__UpdateArea
PUBLIC	?__Game_UpdateArea@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@@Z ; CMapOutdoor::__Game_UpdateArea
PUBLIC	?__CollectShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z ; CMapOutdoor::__CollectShadowReceiver
PUBLIC	?__CollectCollisionPCBlocker@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0M@Z ; CMapOutdoor::__CollectCollisionPCBlocker
PUBLIC	?__CollectCollisionShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z ; CMapOutdoor::__CollectCollisionShadowReceiver
PUBLIC	?__UpdateAroundAreaList@CMapOutdoor@@IAEXXZ	; CMapOutdoor::__UpdateAroundAreaList
PUBLIC	?__IsInShadowReceiverList@CMapOutdoor@@IAE_NPAVCGraphicObjectInstance@@@Z ; CMapOutdoor::__IsInShadowReceiverList
PUBLIC	?__IsInPCBlockerList@CMapOutdoor@@IAE_NPAVCGraphicObjectInstance@@@Z ; CMapOutdoor::__IsInPCBlockerList
PUBLIC	?UpdateQuadTreeHeights@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@@Z ; CMapOutdoor::UpdateQuadTreeHeights
PUBLIC	?push_back@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@QAEXABQAVCTerrain@@@Z ; std::vector<CTerrain *,std::allocator<CTerrain *> >::push_back
PUBLIC	?_Change_array@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@AAEXQAPAVCTerrain@@II@Z ; std::vector<CTerrain *,std::allocator<CTerrain *> >::_Change_array
PUBLIC	?_Xlength@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@CAXXZ ; std::vector<CTerrain *,std::allocator<CTerrain *> >::_Xlength
PUBLIC	?push_back@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@QAEXABQAVCArea@@@Z ; std::vector<CArea *,std::allocator<CArea *> >::push_back
PUBLIC	?_Change_array@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@AAEXQAPAVCArea@@II@Z ; std::vector<CArea *,std::allocator<CArea *> >::_Change_array
PUBLIC	?_Xlength@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@CAXXZ ; std::vector<CArea *,std::allocator<CArea *> >::_Xlength
PUBLIC	??RFPushTerrainToDeleteVector@CMapOutdoor@@QAEXPAVCTerrain@@@Z ; CMapOutdoor::FPushTerrainToDeleteVector::operator()
PUBLIC	??1FPushTerrainToDeleteVector@CMapOutdoor@@QAE@XZ ; CMapOutdoor::FPushTerrainToDeleteVector::~FPushTerrainToDeleteVector
PUBLIC	??RFPushAreaToDeleteVector@CMapOutdoor@@QAEXPAVCArea@@@Z ; CMapOutdoor::FPushAreaToDeleteVector::operator()
PUBLIC	??1FPushAreaToDeleteVector@CMapOutdoor@@QAE@XZ	; CMapOutdoor::FPushAreaToDeleteVector::~FPushAreaToDeleteVector
PUBLIC	??RPCBlocker_SInstanceList@@QAEXPAVCGraphicObjectInstance@@@Z ; PCBlocker_SInstanceList::operator()
PUBLIC	??1?$RangeTester@UPCBlocker_SInstanceList@@@@UAE@XZ ; RangeTester<PCBlocker_SInstanceList>::~RangeTester<PCBlocker_SInstanceList>
PUBLIC	?RayTraceCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z ; RangeTester<PCBlocker_SInstanceList>::RayTraceCallback
PUBLIC	?VisibilityCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z ; RangeTester<PCBlocker_SInstanceList>::VisibilityCallback
PUBLIC	?RangeTestCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z ; RangeTester<PCBlocker_SInstanceList>::RangeTestCallback
PUBLIC	?PointTest2dCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z ; RangeTester<PCBlocker_SInstanceList>::PointTest2dCallback
PUBLIC	??_G?$RangeTester@UPCBlocker_SInstanceList@@@@UAEPAXI@Z ; RangeTester<PCBlocker_SInstanceList>::`scalar deleting destructor'
PUBLIC	??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
PUBLIC	??1?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAE@XZ ; RangeTester<FGetShadowReceiverFromHeightData>::~RangeTester<FGetShadowReceiverFromHeightData>
PUBLIC	?RayTraceCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z ; RangeTester<FGetShadowReceiverFromHeightData>::RayTraceCallback
PUBLIC	?VisibilityCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z ; RangeTester<FGetShadowReceiverFromHeightData>::VisibilityCallback
PUBLIC	?RangeTestCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z ; RangeTester<FGetShadowReceiverFromHeightData>::RangeTestCallback
PUBLIC	?PointTest2dCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z ; RangeTester<FGetShadowReceiverFromHeightData>::PointTest2dCallback
PUBLIC	??_G?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEPAXI@Z ; RangeTester<FGetShadowReceiverFromHeightData>::`scalar deleting destructor'
PUBLIC	??$_Sort_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@0HU?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ; std::_Sort_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >
PUBLIC	??1?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAE@XZ ; RangeTester<FGetShadowReceiverFromCollisionData>::~RangeTester<FGetShadowReceiverFromCollisionData>
PUBLIC	?RayTraceCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z ; RangeTester<FGetShadowReceiverFromCollisionData>::RayTraceCallback
PUBLIC	?VisibilityCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z ; RangeTester<FGetShadowReceiverFromCollisionData>::VisibilityCallback
PUBLIC	?RangeTestCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z ; RangeTester<FGetShadowReceiverFromCollisionData>::RangeTestCallback
PUBLIC	?PointTest2dCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z ; RangeTester<FGetShadowReceiverFromCollisionData>::PointTest2dCallback
PUBLIC	??_G?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEPAXI@Z ; RangeTester<FGetShadowReceiverFromCollisionData>::`scalar deleting destructor'
PUBLIC	??$_Copy_memmove@PAPAVCArea@@PAPAV1@@std@@YAPAPAVCArea@@PAPAV1@00@Z ; std::_Copy_memmove<CArea * *,CArea * *>
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<CArea *,std::allocator<CArea *> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Emplace_reallocate@ABQAVCArea@@@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@AAEPAPAVCArea@@QAPAV2@ABQAV2@@Z ; std::vector<CArea *,std::allocator<CArea *> >::_Emplace_reallocate<CArea * const &>
PUBLIC	??$_Copy_memmove@PAPAVCTerrain@@PAPAV1@@std@@YAPAPAVCTerrain@@PAPAV1@00@Z ; std::_Copy_memmove<CTerrain * *,CTerrain * *>
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<CTerrain *,std::allocator<CTerrain *> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Emplace_reallocate@ABQAVCTerrain@@@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@AAEPAPAVCTerrain@@QAPAV2@ABQAV2@@Z ; std::vector<CTerrain *,std::allocator<CTerrain *> >::_Emplace_reallocate<CTerrain * const &>
PUBLIC	??$_Emplace_reallocate@ABQAVCGraphicObjectInstance@@@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@AAEPAPAVCGraphicObjectInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::_Emplace_reallocate<CGraphicObjectInstance * const &>
PUBLIC	??$_Insertion_sort_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAPAPAVCGraphicObjectInstance@@QAPAV1@0U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ; std::_Insertion_sort_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >
PUBLIC	??$_Make_heap_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@0U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ; std::_Make_heap_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >
PUBLIC	??$_Partition_by_median_guess_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YA?AU?$pair@PAPAVCGraphicObjectInstance@@PAPAV1@@0@PAPAVCGraphicObjectInstance@@0U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ; std::_Partition_by_median_guess_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >
PUBLIC	??$__std_find_trivial@PAVCGraphicObjectInstance@@PAV1@@@YAPAPAVCGraphicObjectInstance@@PAPAV0@0QAV0@@Z ; __std_find_trivial<CGraphicObjectInstance *,CGraphicObjectInstance *>
PUBLIC	??$__std_find_trivial@PAVCTerrain@@PAV1@@@YAPAPAVCTerrain@@PAPAV0@0QAV0@@Z ; __std_find_trivial<CTerrain *,CTerrain *>
PUBLIC	??$__std_find_trivial@PAVCArea@@PAV1@@@YAPAPAVCArea@@PAPAV0@0QAV0@@Z ; __std_find_trivial<CArea *,CArea *>
PUBLIC	??$_Zero_range@PAPAVCArea@@@std@@YAPAPAVCArea@@QAPAV1@0@Z ; std::_Zero_range<CArea * *>
PUBLIC	??$_Zero_range@PAPAVCTerrain@@@std@@YAPAPAVCTerrain@@QAPAV1@0@Z ; std::_Zero_range<CTerrain * *>
PUBLIC	??$_Pop_heap_hole_by_index@PAPAVCGraphicObjectInstance@@PAV1@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@HH$$QAPAV1@U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ; std::_Pop_heap_hole_by_index<CGraphicObjectInstance * *,CGraphicObjectInstance *,std::_Ref_fn<FPCBlockerDistanceSort> >
PUBLIC	??$__std_find_trivial@PAVCGraphicObjectInstance@@I@@YAPAPAVCGraphicObjectInstance@@PAPAV0@0I@Z ; __std_find_trivial<CGraphicObjectInstance *,unsigned int>
PUBLIC	??$__std_find_trivial@PAVCTerrain@@I@@YAPAPAVCTerrain@@PAPAV0@0I@Z ; __std_find_trivial<CTerrain *,unsigned int>
PUBLIC	??$__std_find_trivial@PAVCArea@@I@@YAPAPAVCArea@@PAPAV0@0I@Z ; __std_find_trivial<CArea *,unsigned int>
PUBLIC	??$_Copy_memmove@PAPAVCGraphicObjectInstance@@PAPAV1@@std@@YAPAPAVCGraphicObjectInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicObjectInstance * *,CGraphicObjectInstance * *>
PUBLIC	??$_Copy_backward_memmove@PAPAVCGraphicObjectInstance@@PAPAV1@@std@@YAPAPAVCGraphicObjectInstance@@PAPAV1@00@Z ; std::_Copy_backward_memmove<CGraphicObjectInstance * *,CGraphicObjectInstance * *>
PUBLIC	??$_Med3_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@00U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ; std::_Med3_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
PUBLIC	??_7SpherePackCallback@@6B@			; SpherePackCallback::`vftable'
PUBLIC	?ms_singleton@?$CSingleton@VCCullingManager@@@@0PAVCCullingManager@@A ; CSingleton<CCullingManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCSpeedTreeForestDirectX8@@@@0PAVCSpeedTreeForestDirectX8@@A ; CSingleton<CSpeedTreeForestDirectX8>::ms_singleton
PUBLIC	?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
PUBLIC	??_C@_0BK@IDOOHDBC@Update?3?3Load?5spent?5?$CFd?5ms?6@ ; `string'
PUBLIC	??_7?$RangeTester@UPCBlocker_SInstanceList@@@@6B@ ; RangeTester<PCBlocker_SInstanceList>::`vftable'
PUBLIC	??_C@_0BB@GFILMBNJ@Delete?5Terrain?5?6@		; `string'
PUBLIC	??_C@_0O@MNAKBLAF@Delete?5Area?5?6@		; `string'
PUBLIC	??_7?$RangeTester@UFGetShadowReceiverFromHeightData@@@@6B@ ; RangeTester<FGetShadowReceiverFromHeightData>::`vftable'
PUBLIC	??_7?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@6B@ ; RangeTester<FGetShadowReceiverFromCollisionData>::`vftable'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4SpherePackCallback@@6B@			; SpherePackCallback::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSpherePackCallback@@@8			; SpherePackCallback `RTTI Type Descriptor'
PUBLIC	??_R3SpherePackCallback@@8			; SpherePackCallback::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SpherePackCallback@@8			; SpherePackCallback::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SpherePackCallback@@8		; SpherePackCallback::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$RangeTester@UPCBlocker_SInstanceList@@@@6B@ ; RangeTester<PCBlocker_SInstanceList>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AU?$RangeTester@UPCBlocker_SInstanceList@@@@@8 ; RangeTester<PCBlocker_SInstanceList> `RTTI Type Descriptor'
PUBLIC	??_R3?$RangeTester@UPCBlocker_SInstanceList@@@@8 ; RangeTester<PCBlocker_SInstanceList>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$RangeTester@UPCBlocker_SInstanceList@@@@8 ; RangeTester<PCBlocker_SInstanceList>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$RangeTester@UPCBlocker_SInstanceList@@@@8 ; RangeTester<PCBlocker_SInstanceList>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$RangeTester@UFGetShadowReceiverFromHeightData@@@@6B@ ; RangeTester<FGetShadowReceiverFromHeightData>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AU?$RangeTester@UFGetShadowReceiverFromHeightData@@@@@8 ; RangeTester<FGetShadowReceiverFromHeightData> `RTTI Type Descriptor'
PUBLIC	??_R3?$RangeTester@UFGetShadowReceiverFromHeightData@@@@8 ; RangeTester<FGetShadowReceiverFromHeightData>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$RangeTester@UFGetShadowReceiverFromHeightData@@@@8 ; RangeTester<FGetShadowReceiverFromHeightData>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@8 ; RangeTester<FGetShadowReceiverFromHeightData>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@6B@ ; RangeTester<FGetShadowReceiverFromCollisionData>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AU?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@@8 ; RangeTester<FGetShadowReceiverFromCollisionData> `RTTI Type Descriptor'
PUBLIC	??_R3?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@8 ; RangeTester<FGetShadowReceiverFromCollisionData>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@8 ; RangeTester<FGetShadowReceiverFromCollisionData>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@8 ; RangeTester<FGetShadowReceiverFromCollisionData>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@3f000000
PUBLIC	__real@3fddb22d
PUBLIC	__real@402fff8cc0000000
PUBLIC	__real@42480000
PUBLIC	__real@c05db22d
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_abort:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	__imp__timeGetTime@0:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	___std_find_trivial_4@12:PROC
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?Trace@@YAXPBD@Z:PROC				; Trace
EXTRN	?Tracenf@@YAXPBDZZ:PROC				; Tracenf
EXTRN	?MINMAX@@YAHHHH@Z:PROC				; MINMAX
EXTRN	?GetCurrentSecond@CTimer@@QAEMXZ:PROC		; CTimer::GetCurrentSecond
EXTRN	?ELTimer_GetMSec@@YAKXZ:PROC			; ELTimer_GetMSec
EXTRN	?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ:PROC ; CCameraManager::GetCurrentCamera
EXTRN	??_ESpherePackCallback@@UAEPAXI@Z:PROC		; SpherePackCallback::`vector deleting destructor'
EXTRN	?RangeTest@SpherePackFactory@@QAEXABVVector3d@@MPAVSpherePackCallback@@@Z:PROC ; SpherePackFactory::RangeTest
EXTRN	?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ:PROC ; CGraphicObjectInstance::GetPosition
EXTRN	?CollisionDynamicSphere@CGraphicObjectInstance@@QBE_NABUCDynamicSphereInstance@@@Z:PROC ; CGraphicObjectInstance::CollisionDynamicSphere
EXTRN	?GetObjectHeight@CGraphicObjectInstance@@QAE_NMMPAM@Z:PROC ; CGraphicObjectInstance::GetObjectHeight
EXTRN	?UpdateSystem@CSpeedTreeForest@@QAEXM@Z:PROC	; CSpeedTreeForest::UpdateSystem
EXTRN	?Update@CArea@@QAEXXZ:PROC			; CArea::Update
EXTRN	?UpdateAroundAmbience@CArea@@QAEXMMM@Z:PROC	; CArea::UpdateAroundAmbience
EXTRN	?GetCoordinate@CArea@@QAEXPAG0@Z:PROC		; CArea::GetCoordinate
EXTRN	?Delete@CArea@@SAXPAV1@@Z:PROC			; CArea::Delete
EXTRN	?GetTerrainPatchPtr@CTerrain@@QAEPAVCTerrainPatch@@EE@Z:PROC ; CTerrain::GetTerrainPatchPtr
EXTRN	?Delete@CTerrain@@SAXPAV1@@Z:PROC		; CTerrain::Delete
EXTRN	?AssignTerrainPtr@CMapOutdoor@@IAEXXZ:PROC	; CMapOutdoor::AssignTerrainPtr
EXTRN	?GetTerrainPointer@CMapOutdoor@@QAEHEPAPAVCTerrain@@@Z:PROC ; CMapOutdoor::GetTerrainPointer
EXTRN	?GetAreaPointer@CMapOutdoor@@QAEHEPAPAVCArea@@@Z:PROC ; CMapOutdoor::GetAreaPointer
EXTRN	?__HeightCache_Update@CMapOutdoor@@AAEXXZ:PROC	; CMapOutdoor::__HeightCache_Update
EXTRN	?IsBuilding@CActorInstance@@QAE_NXZ:PROC	; CActorInstance::IsBuilding
EXTRN	??_E?$RangeTester@UPCBlocker_SInstanceList@@@@UAEPAXI@Z:PROC ; RangeTester<PCBlocker_SInstanceList>::`vector deleting destructor'
EXTRN	??_E?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEPAXI@Z:PROC ; RangeTester<FGetShadowReceiverFromHeightData>::`vector deleting destructor'
EXTRN	??_E?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEPAXI@Z:PROC ; RangeTester<FGetShadowReceiverFromCollisionData>::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__libm_sse2_sqrt_precise:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	?PR_FCNV@@3MA:DWORD				; PR_FCNV
EXTRN	?PR_ICNV@@3JA:DWORD				; PR_ICNV
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A DD 01H DUP (?) ; CSingleton<CTimer>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A DD 01H DUP (?) ; CSingleton<CCameraManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCCullingManager@@@@0PAVCCullingManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCCullingManager@@@@0PAVCCullingManager@@A DD 01H DUP (?) ; CSingleton<CCullingManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCSpeedTreeForestDirectX8@@@@0PAVCSpeedTreeForestDirectX8@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCSpeedTreeForestDirectX8@@@@0PAVCSpeedTreeForestDirectX8@@A DD 01H DUP (?) ; CSingleton<CSpeedTreeForestDirectX8>::ms_singleton
_BSS	ENDS
;	COMDAT ?dwEraseTime@?1??__UpdateGarvage@CMapOutdoor@@MAEXXZ@4KA
_BSS	SEGMENT
?dwEraseTime@?1??__UpdateGarvage@CMapOutdoor@@MAEXXZ@4KA DD 01H DUP (?) ; `CMapOutdoor::__UpdateGarvage'::`2'::dwEraseTime
_BSS	ENDS
;	COMDAT ?$TSS0@?1??__UpdateGarvage@CMapOutdoor@@MAEXXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??__UpdateGarvage@CMapOutdoor@@MAEXXZ@4HA DD 01H DUP (?) ; `CMapOutdoor::__UpdateGarvage'::`2'::$TSS0
_BSS	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@c05db22d
CONST	SEGMENT
__real@c05db22d DD 0c05db22dr			; -3.464
CONST	ENDS
;	COMDAT __real@42480000
CONST	SEGMENT
__real@42480000 DD 042480000r			; 50
CONST	ENDS
;	COMDAT __real@402fff8cc0000000
CONST	SEGMENT
__real@402fff8cc0000000 DQ 0402fff8cc0000000r	; 15.9991
CONST	ENDS
;	COMDAT __real@3fddb22d
CONST	SEGMENT
__real@3fddb22d DD 03fddb22dr			; 1.732
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@8 DD FLAT:??_R0?AU?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@@8 ; RangeTester<FGetShadowReceiverFromCollisionData>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@8
rdata$r	SEGMENT
??_R2?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@8 DD FLAT:??_R1A@?0A@EA@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@8 ; RangeTester<FGetShadowReceiverFromCollisionData>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SpherePackCallback@@8
rdata$r	ENDS
;	COMDAT ??_R3?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@8
rdata$r	SEGMENT
??_R3?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@8 DD 00H ; RangeTester<FGetShadowReceiverFromCollisionData>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AU?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@@8
data$rs	SEGMENT
??_R0?AU?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@@8 DD FLAT:??_7type_info@@6B@ ; RangeTester<FGetShadowReceiverFromCollisionData> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AU?$RangeTester@UFGetShadowReceiverFromCollisionData@@'
	DB	'@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@6B@
rdata$r	SEGMENT
??_R4?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@6B@ DD 00H ; RangeTester<FGetShadowReceiverFromCollisionData>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AU?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@@8
	DD	FLAT:??_R3?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@8 DD FLAT:??_R0?AU?$RangeTester@UFGetShadowReceiverFromHeightData@@@@@8 ; RangeTester<FGetShadowReceiverFromHeightData>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$RangeTester@UFGetShadowReceiverFromHeightData@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$RangeTester@UFGetShadowReceiverFromHeightData@@@@8
rdata$r	SEGMENT
??_R2?$RangeTester@UFGetShadowReceiverFromHeightData@@@@8 DD FLAT:??_R1A@?0A@EA@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@8 ; RangeTester<FGetShadowReceiverFromHeightData>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SpherePackCallback@@8
rdata$r	ENDS
;	COMDAT ??_R3?$RangeTester@UFGetShadowReceiverFromHeightData@@@@8
rdata$r	SEGMENT
??_R3?$RangeTester@UFGetShadowReceiverFromHeightData@@@@8 DD 00H ; RangeTester<FGetShadowReceiverFromHeightData>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$RangeTester@UFGetShadowReceiverFromHeightData@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AU?$RangeTester@UFGetShadowReceiverFromHeightData@@@@@8
data$rs	SEGMENT
??_R0?AU?$RangeTester@UFGetShadowReceiverFromHeightData@@@@@8 DD FLAT:??_7type_info@@6B@ ; RangeTester<FGetShadowReceiverFromHeightData> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AU?$RangeTester@UFGetShadowReceiverFromHeightData@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$RangeTester@UFGetShadowReceiverFromHeightData@@@@6B@
rdata$r	SEGMENT
??_R4?$RangeTester@UFGetShadowReceiverFromHeightData@@@@6B@ DD 00H ; RangeTester<FGetShadowReceiverFromHeightData>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AU?$RangeTester@UFGetShadowReceiverFromHeightData@@@@@8
	DD	FLAT:??_R3?$RangeTester@UFGetShadowReceiverFromHeightData@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$RangeTester@UPCBlocker_SInstanceList@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$RangeTester@UPCBlocker_SInstanceList@@@@8 DD FLAT:??_R0?AU?$RangeTester@UPCBlocker_SInstanceList@@@@@8 ; RangeTester<PCBlocker_SInstanceList>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$RangeTester@UPCBlocker_SInstanceList@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$RangeTester@UPCBlocker_SInstanceList@@@@8
rdata$r	SEGMENT
??_R2?$RangeTester@UPCBlocker_SInstanceList@@@@8 DD FLAT:??_R1A@?0A@EA@?$RangeTester@UPCBlocker_SInstanceList@@@@8 ; RangeTester<PCBlocker_SInstanceList>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SpherePackCallback@@8
rdata$r	ENDS
;	COMDAT ??_R3?$RangeTester@UPCBlocker_SInstanceList@@@@8
rdata$r	SEGMENT
??_R3?$RangeTester@UPCBlocker_SInstanceList@@@@8 DD 00H	; RangeTester<PCBlocker_SInstanceList>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$RangeTester@UPCBlocker_SInstanceList@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AU?$RangeTester@UPCBlocker_SInstanceList@@@@@8
data$rs	SEGMENT
??_R0?AU?$RangeTester@UPCBlocker_SInstanceList@@@@@8 DD FLAT:??_7type_info@@6B@ ; RangeTester<PCBlocker_SInstanceList> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AU?$RangeTester@UPCBlocker_SInstanceList@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$RangeTester@UPCBlocker_SInstanceList@@@@6B@
rdata$r	SEGMENT
??_R4?$RangeTester@UPCBlocker_SInstanceList@@@@6B@ DD 00H ; RangeTester<PCBlocker_SInstanceList>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AU?$RangeTester@UPCBlocker_SInstanceList@@@@@8
	DD	FLAT:??_R3?$RangeTester@UPCBlocker_SInstanceList@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SpherePackCallback@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SpherePackCallback@@8 DD FLAT:??_R0?AVSpherePackCallback@@@8 ; SpherePackCallback::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SpherePackCallback@@8
rdata$r	ENDS
;	COMDAT ??_R2SpherePackCallback@@8
rdata$r	SEGMENT
??_R2SpherePackCallback@@8 DD FLAT:??_R1A@?0A@EA@SpherePackCallback@@8 ; SpherePackCallback::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3SpherePackCallback@@8
rdata$r	SEGMENT
??_R3SpherePackCallback@@8 DD 00H			; SpherePackCallback::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2SpherePackCallback@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSpherePackCallback@@@8
data$rs	SEGMENT
??_R0?AVSpherePackCallback@@@8 DD FLAT:??_7type_info@@6B@ ; SpherePackCallback `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSpherePackCallback@@', 00H
data$rs	ENDS
;	COMDAT ??_R4SpherePackCallback@@6B@
rdata$r	SEGMENT
??_R4SpherePackCallback@@6B@ DD 00H			; SpherePackCallback::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSpherePackCallback@@@8
	DD	FLAT:??_R3SpherePackCallback@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@6B@
CONST	SEGMENT
??_7?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@6B@ DD FLAT:??_R4?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@6B@ ; RangeTester<FGetShadowReceiverFromCollisionData>::`vftable'
	DD	FLAT:??_E?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEPAXI@Z
	DD	FLAT:?VisibilityCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z
	DD	FLAT:?RayTraceCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z
	DD	FLAT:?RangeTestCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z
	DD	FLAT:?PointTest2dCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z
CONST	ENDS
;	COMDAT ??_7?$RangeTester@UFGetShadowReceiverFromHeightData@@@@6B@
CONST	SEGMENT
??_7?$RangeTester@UFGetShadowReceiverFromHeightData@@@@6B@ DD FLAT:??_R4?$RangeTester@UFGetShadowReceiverFromHeightData@@@@6B@ ; RangeTester<FGetShadowReceiverFromHeightData>::`vftable'
	DD	FLAT:??_E?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEPAXI@Z
	DD	FLAT:?VisibilityCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z
	DD	FLAT:?RayTraceCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z
	DD	FLAT:?RangeTestCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z
	DD	FLAT:?PointTest2dCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@MNAKBLAF@Delete?5Area?5?6@
CONST	SEGMENT
??_C@_0O@MNAKBLAF@Delete?5Area?5?6@ DB 'Delete Area ', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GFILMBNJ@Delete?5Terrain?5?6@
CONST	SEGMENT
??_C@_0BB@GFILMBNJ@Delete?5Terrain?5?6@ DB 'Delete Terrain ', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$RangeTester@UPCBlocker_SInstanceList@@@@6B@
CONST	SEGMENT
??_7?$RangeTester@UPCBlocker_SInstanceList@@@@6B@ DD FLAT:??_R4?$RangeTester@UPCBlocker_SInstanceList@@@@6B@ ; RangeTester<PCBlocker_SInstanceList>::`vftable'
	DD	FLAT:??_E?$RangeTester@UPCBlocker_SInstanceList@@@@UAEPAXI@Z
	DD	FLAT:?VisibilityCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z
	DD	FLAT:?RayTraceCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z
	DD	FLAT:?RangeTestCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z
	DD	FLAT:?PointTest2dCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z
CONST	ENDS
;	COMDAT ??_C@_0BK@IDOOHDBC@Update?3?3Load?5spent?5?$CFd?5ms?6@
CONST	SEGMENT
??_C@_0BK@IDOOHDBC@Update?3?3Load?5spent?5?$CFd?5ms?6@ DB 'Update::Load s'
	DB	'pent %d ms', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_7SpherePackCallback@@6B@
CONST	SEGMENT
??_7SpherePackCallback@@6B@ DD FLAT:??_R4SpherePackCallback@@6B@ ; SpherePackCallback::`vftable'
	DD	FLAT:??_ESpherePackCallback@@UAEPAXI@Z
	DD	FLAT:?VisibilityCallback@SpherePackCallback@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z
	DD	FLAT:?RayTraceCallback@SpherePackCallback@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z
	DD	FLAT:?RangeTestCallback@SpherePackCallback@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z
	DD	FLAT:?PointTest2dCallback@SpherePackCallback@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$for_each@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCArea@@@std@@@std@@@std@@UFPushAreaToDeleteVector@CMapOutdoor@@@std@@YA?AUFPushAreaToDeleteVector@CMapOutdoor@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCArea@@@std@@@std@@@0@0U12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$for_each@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCArea@@@std@@@std@@@std@@UFPushAreaToDeleteVector@CMapOutdoor@@@std@@YA?AUFPushAreaToDeleteVector@CMapOutdoor@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCArea@@@std@@@std@@@0@0U12@@Z$0
__ehfuncinfo$??$for_each@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCArea@@@std@@@std@@@std@@UFPushAreaToDeleteVector@CMapOutdoor@@@std@@YA?AUFPushAreaToDeleteVector@CMapOutdoor@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCArea@@@std@@@std@@@0@0U12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$for_each@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCArea@@@std@@@std@@@std@@UFPushAreaToDeleteVector@CMapOutdoor@@@std@@YA?AUFPushAreaToDeleteVector@CMapOutdoor@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCArea@@@std@@@std@@@0@0U12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$for_each@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCTerrain@@@std@@@std@@@std@@UFPushTerrainToDeleteVector@CMapOutdoor@@@std@@YA?AUFPushTerrainToDeleteVector@CMapOutdoor@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCTerrain@@@std@@@std@@@0@0U12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$for_each@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCTerrain@@@std@@@std@@@std@@UFPushTerrainToDeleteVector@CMapOutdoor@@@std@@YA?AUFPushTerrainToDeleteVector@CMapOutdoor@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCTerrain@@@std@@@std@@@0@0U12@@Z$0
__ehfuncinfo$??$for_each@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCTerrain@@@std@@@std@@@std@@UFPushTerrainToDeleteVector@CMapOutdoor@@@std@@YA?AUFPushTerrainToDeleteVector@CMapOutdoor@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCTerrain@@@std@@@std@@@0@0U12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$for_each@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCTerrain@@@std@@@std@@@std@@UFPushTerrainToDeleteVector@CMapOutdoor@@@std@@YA?AUFPushTerrainToDeleteVector@CMapOutdoor@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCTerrain@@@std@@@std@@@0@0U12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$ForInRange@UFGetShadowReceiverFromCollisionData@@@CCullingManager@@QAEXABVVector3d@@MPAUFGetShadowReceiverFromCollisionData@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$ForInRange@UFGetShadowReceiverFromCollisionData@@@CCullingManager@@QAEXABVVector3d@@MPAUFGetShadowReceiverFromCollisionData@@@Z$0
__ehfuncinfo$??$ForInRange@UFGetShadowReceiverFromCollisionData@@@CCullingManager@@QAEXABVVector3d@@MPAUFGetShadowReceiverFromCollisionData@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$ForInRange@UFGetShadowReceiverFromCollisionData@@@CCullingManager@@QAEXABVVector3d@@MPAUFGetShadowReceiverFromCollisionData@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$ForInRange@UFGetShadowReceiverFromHeightData@@@CCullingManager@@QAEXABVVector3d@@MPAUFGetShadowReceiverFromHeightData@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$ForInRange@UFGetShadowReceiverFromHeightData@@@CCullingManager@@QAEXABVVector3d@@MPAUFGetShadowReceiverFromHeightData@@@Z$0
__ehfuncinfo$??$ForInRange@UFGetShadowReceiverFromHeightData@@@CCullingManager@@QAEXABVVector3d@@MPAUFGetShadowReceiverFromHeightData@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$ForInRange@UFGetShadowReceiverFromHeightData@@@CCullingManager@@QAEXABVVector3d@@MPAUFGetShadowReceiverFromHeightData@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?__CollectCollisionShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?__CollectCollisionShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?__CollectCollisionShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z$1
__ehfuncinfo$?__CollectCollisionShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?__CollectCollisionShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?__CollectCollisionPCBlocker@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0M@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?__CollectCollisionPCBlocker@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0M@Z$0
__ehfuncinfo$?__CollectCollisionPCBlocker@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0M@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?__CollectCollisionPCBlocker@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0M@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?__CollectShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?__CollectShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z$0
__ehfuncinfo$?__CollectShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?__CollectShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?UpdateAreaList@CMapOutdoor@@MAEXJJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UpdateAreaList@CMapOutdoor@@MAEXJJ@Z$10
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UpdateAreaList@CMapOutdoor@@MAEXJJ@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?UpdateAreaList@CMapOutdoor@@MAEXJJ@Z$6
	DD	01H
	DD	FLAT:__unwindfunclet$?UpdateAreaList@CMapOutdoor@@MAEXJJ@Z$3
__ehfuncinfo$?UpdateAreaList@CMapOutdoor@@MAEXJJ@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?UpdateAreaList@CMapOutdoor@@MAEXJJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?__UpdateGarvage@CMapOutdoor@@MAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?__UpdateGarvage@CMapOutdoor@@MAEXXZ$0
__ehfuncinfo$?__UpdateGarvage@CMapOutdoor@@MAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?__UpdateGarvage@CMapOutdoor@@MAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Med3_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@00U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z
_TEXT	SEGMENT
tv1245 = -12						; size = 4
tv1236 = -12						; size = 4
tv1218 = -12						; size = 4
tv1246 = -8						; size = 4
tv1231 = -8						; size = 4
tv1217 = -8						; size = 4
tv1232 = -4						; size = 4
tv1222 = -4						; size = 4
__First$ = 8						; size = 4
_v$1$ = 12						; size = 4
__Mid$ = 12						; size = 4
tv1251 = 16						; size = 4
__Last$ = 16						; size = 4
__Pred$ = 20						; size = 4
??$_Med3_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@00U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z PROC ; std::_Med3_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >, COMDAT

; 7929 : _CONSTEXPR20 void _Med3_unchecked(_RanIt _First, _RanIt _Mid, _RanIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 547  :             return _Fn(_STD forward<_Args>(_Vals)...);

  00006	8b 45 14	 mov	 eax, DWORD PTR __Pred$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7929 : _CONSTEXPR20 void _Med3_unchecked(_RanIt _First, _RanIt _Mid, _RanIt _Last, _Pr _Pred) {

  00009	53		 push	 ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 547  :             return _Fn(_STD forward<_Args>(_Vals)...);

  0000a	8b 5d 0c	 mov	 ebx, DWORD PTR __Mid$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7929 : _CONSTEXPR20 void _Med3_unchecked(_RanIt _First, _RanIt _Mid, _RanIt _Last, _Pr _Pred) {

  0000d	56		 push	 esi
  0000e	57		 push	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 547  :             return _Fn(_STD forward<_Args>(_Vals)...);

  0000f	8b 7d 08	 mov	 edi, DWORD PTR __First$[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00012	8b 0b		 mov	 ecx, DWORD PTR [ebx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 547  :             return _Fn(_STD forward<_Args>(_Vals)...);

  00014	89 45 0c	 mov	 DWORD PTR _v$1$[ebp], eax
  00017	8b 37		 mov	 esi, DWORD PTR [edi]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00019	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0001e	8b 4d 0c	 mov	 ecx, DWORD PTR _v$1$[ebp]
  00021	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00025	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  00029	f3 0f 11 45 f8	 movss	 DWORD PTR tv1217[ebp], xmm0
  0002e	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00033	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  00038	f3 0f 11 45 fc	 movss	 DWORD PTR tv1222[ebp], xmm0
  0003d	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00042	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00047	8b ce		 mov	 ecx, esi
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00049	f3 0f 11 45 f4	 movss	 DWORD PTR tv1218[ebp], xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0004e	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00053	8b 4d 0c	 mov	 ecx, DWORD PTR _v$1$[ebp]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00056	f3 0f 10 55 f8	 movss	 xmm2, DWORD PTR tv1217[ebp]

; 182  :     z = fz;

  0005b	f3 0f 10 65 fc	 movss	 xmm4, DWORD PTR tv1222[ebp]

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00060	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  00064	f3 0f 10 58 04	 movss	 xmm3, DWORD PTR [eax+4]
  00069	f3 0f 5c 59 04	 subss	 xmm3, DWORD PTR [ecx+4]
  0006e	f3 0f 5c 09	 subss	 xmm1, DWORD PTR [ecx]
  00072	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00077	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0007c	f3 0f 59 d2	 mulss	 xmm2, xmm2

; 182  :     z = fz;

  00080	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00084	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00088	f3 0f 59 c9	 mulss	 xmm1, xmm1
  0008c	f3 0f 58 e2	 addss	 xmm4, xmm2
  00090	f3 0f 10 55 f4	 movss	 xmm2, DWORD PTR tv1218[ebp]
  00095	f3 0f 59 d2	 mulss	 xmm2, xmm2
  00099	f3 0f 58 d9	 addss	 xmm3, xmm1
  0009d	f3 0f 59 c0	 mulss	 xmm0, xmm0
  000a1	f3 0f 58 e2	 addss	 xmm4, xmm2
  000a5	f3 0f 58 d8	 addss	 xmm3, xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  000a9	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7931 :     if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  000ac	76 08		 jbe	 SHORT $LN61@Med3_unche
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

  000ae	8b 0b		 mov	 ecx, DWORD PTR [ebx]

; 100  :     _Left    = _STD move(_Right);

  000b0	8b 07		 mov	 eax, DWORD PTR [edi]
  000b2	89 03		 mov	 DWORD PTR [ebx], eax

; 101  :     _Right   = _STD move(_Tmp);

  000b4	89 0f		 mov	 DWORD PTR [edi], ecx
$LN61@Med3_unche:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  000b6	8b 4d 10	 mov	 ecx, DWORD PTR __Last$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 547  :             return _Fn(_STD forward<_Args>(_Vals)...);

  000b9	8b 33		 mov	 esi, DWORD PTR [ebx]
  000bb	8b 7d 14	 mov	 edi, DWORD PTR __Pred$[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  000be	8b 09		 mov	 ecx, DWORD PTR [ecx]
  000c0	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  000c5	8b 4d 0c	 mov	 ecx, DWORD PTR _v$1$[ebp]
  000c8	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  000cc	f3 0f 5c 07	 subss	 xmm0, DWORD PTR [edi]
  000d0	f3 0f 11 45 f8	 movss	 DWORD PTR tv1231[ebp], xmm0
  000d5	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  000da	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  000df	f3 0f 11 45 f4	 movss	 DWORD PTR tv1236[ebp], xmm0
  000e4	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  000e9	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  000ee	8b ce		 mov	 ecx, esi
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  000f0	f3 0f 11 45 fc	 movss	 DWORD PTR tv1232[ebp], xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  000f5	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  000fa	8b 4d 0c	 mov	 ecx, DWORD PTR _v$1$[ebp]

; 182  :     z = fz;

  000fd	f3 0f 10 55 f8	 movss	 xmm2, DWORD PTR tv1231[ebp]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00102	f3 0f 10 65 f4	 movss	 xmm4, DWORD PTR tv1236[ebp]

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00107	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  0010b	f3 0f 10 58 04	 movss	 xmm3, DWORD PTR [eax+4]
  00110	f3 0f 5c 59 04	 subss	 xmm3, DWORD PTR [ecx+4]
  00115	f3 0f 5c 0f	 subss	 xmm1, DWORD PTR [edi]
  00119	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0011e	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]

; 182  :     z = fz;

  00123	f3 0f 59 d2	 mulss	 xmm2, xmm2

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00127	f3 0f 59 e4	 mulss	 xmm4, xmm4
  0012b	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0012f	f3 0f 59 c9	 mulss	 xmm1, xmm1
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00133	f3 0f 58 e2	 addss	 xmm4, xmm2
  00137	f3 0f 10 55 fc	 movss	 xmm2, DWORD PTR tv1232[ebp]
  0013c	f3 0f 59 d2	 mulss	 xmm2, xmm2
  00140	f3 0f 58 d9	 addss	 xmm3, xmm1
  00144	f3 0f 59 c0	 mulss	 xmm0, xmm0
  00148	f3 0f 58 e2	 addss	 xmm4, xmm2
  0014c	f3 0f 58 d8	 addss	 xmm3, xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00150	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7935 :     if (_DEBUG_LT_PRED(_Pred, *_Last, *_Mid)) { // swap middle and last, then test first again

  00153	0f 86 b3 00 00
	00		 jbe	 $LN59@Med3_unche
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

  00159	8b 55 10	 mov	 edx, DWORD PTR __Last$[ebp]

; 100  :     _Left    = _STD move(_Right);

  0015c	8b 03		 mov	 eax, DWORD PTR [ebx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 547  :             return _Fn(_STD forward<_Args>(_Vals)...);

  0015e	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00161	8b 7d 14	 mov	 edi, DWORD PTR __Pred$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

  00164	8b 0a		 mov	 ecx, DWORD PTR [edx]

; 100  :     _Left    = _STD move(_Right);

  00166	89 02		 mov	 DWORD PTR [edx], eax

; 101  :     _Right   = _STD move(_Tmp);

  00168	89 0b		 mov	 DWORD PTR [ebx], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 547  :             return _Fn(_STD forward<_Args>(_Vals)...);

  0016a	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0016c	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00171	8b 4d 0c	 mov	 ecx, DWORD PTR _v$1$[ebp]
  00174	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00178	f3 0f 5c 07	 subss	 xmm0, DWORD PTR [edi]
  0017c	f3 0f 11 45 f4	 movss	 DWORD PTR tv1245[ebp], xmm0
  00181	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00186	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  0018b	f3 0f 11 45 10	 movss	 DWORD PTR tv1251[ebp], xmm0
  00190	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00195	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0019a	8b ce		 mov	 ecx, esi
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0019c	f3 0f 11 45 f8	 movss	 DWORD PTR tv1246[ebp], xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  001a1	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  001a6	8b 4d 0c	 mov	 ecx, DWORD PTR _v$1$[ebp]

; 182  :     z = fz;

  001a9	f3 0f 10 55 f4	 movss	 xmm2, DWORD PTR tv1245[ebp]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  001ae	f3 0f 10 65 10	 movss	 xmm4, DWORD PTR tv1251[ebp]

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  001b3	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  001b7	f3 0f 10 58 04	 movss	 xmm3, DWORD PTR [eax+4]
  001bc	f3 0f 5c 59 04	 subss	 xmm3, DWORD PTR [ecx+4]
  001c1	f3 0f 5c 0f	 subss	 xmm1, DWORD PTR [edi]
  001c5	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  001ca	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]

; 182  :     z = fz;

  001cf	f3 0f 59 d2	 mulss	 xmm2, xmm2

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  001d3	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  001d7	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  001db	f3 0f 59 c9	 mulss	 xmm1, xmm1
  001df	f3 0f 58 e2	 addss	 xmm4, xmm2
  001e3	f3 0f 10 55 f8	 movss	 xmm2, DWORD PTR tv1246[ebp]
  001e8	f3 0f 59 d2	 mulss	 xmm2, xmm2
  001ec	f3 0f 58 d9	 addss	 xmm3, xmm1
  001f0	f3 0f 59 c0	 mulss	 xmm0, xmm0
  001f4	f3 0f 58 e2	 addss	 xmm4, xmm2
  001f8	f3 0f 58 d8	 addss	 xmm3, xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  001fc	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7938 :         if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  001ff	76 0b		 jbe	 SHORT $LN59@Med3_unche
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

  00201	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00204	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  00206	8b 02		 mov	 eax, DWORD PTR [edx]
  00208	89 03		 mov	 DWORD PTR [ebx], eax

; 101  :     _Right   = _STD move(_Tmp);

  0020a	89 0a		 mov	 DWORD PTR [edx], ecx
$LN59@Med3_unche:
  0020c	5f		 pop	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7942 : }

  0020d	5e		 pop	 esi
  0020e	5b		 pop	 ebx
  0020f	8b e5		 mov	 esp, ebp
  00211	5d		 pop	 ebp
  00212	c3		 ret	 0
??$_Med3_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@00U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ENDP ; std::_Med3_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Copy_backward_memmove@PAPAVCGraphicObjectInstance@@PAPAV1@@std@@YAPAPAVCGraphicObjectInstance@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_backward_memmove@PAPAVCGraphicObjectInstance@@PAPAV1@@std@@YAPAPAVCGraphicObjectInstance@@PAPAV1@00@Z PROC ; std::_Copy_backward_memmove<CGraphicObjectInstance * *,CGraphicObjectInstance * *>, COMDAT

; 4833 : _CtgIt2 _Copy_backward_memmove(_CtgIt1 _First, _CtgIt1 _Last, _CtgIt2 _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4834 :     // implement copy_backward-like function as memmove
; 4835 :     auto _FirstPtr              = _To_address(_First);
; 4836 :     auto _LastPtr               = _To_address(_Last);
; 4837 :     auto _DestPtr               = _To_address(_Dest);
; 4838 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4839 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4840 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4841 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	2b c8		 sub	 ecx, eax

; 4842 :     auto _Result                = _CSTD memmove(_Dest_ch - _Count, _First_ch, _Count);

  0000b	51		 push	 ecx
  0000c	50		 push	 eax
  0000d	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00010	2b c1		 sub	 eax, ecx
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4843 :     if constexpr (is_pointer_v<_CtgIt2>) {
; 4844 :         return static_cast<_CtgIt2>(_Result);
; 4845 :     } else {
; 4846 :         return _Dest - (_LastPtr - _FirstPtr);
; 4847 :     }
; 4848 : }

  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
??$_Copy_backward_memmove@PAPAVCGraphicObjectInstance@@PAPAV1@@std@@YAPAPAVCGraphicObjectInstance@@PAPAV1@00@Z ENDP ; std::_Copy_backward_memmove<CGraphicObjectInstance * *,CGraphicObjectInstance * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCGraphicObjectInstance@@PAPAV1@@std@@YAPAPAVCGraphicObjectInstance@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCGraphicObjectInstance@@PAPAV1@@std@@YAPAPAVCGraphicObjectInstance@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CGraphicObjectInstance * *,CGraphicObjectInstance * *>, COMDAT

; 4526 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4527 :     auto _FirstPtr              = _To_address(_First);
; 4528 :     auto _LastPtr               = _To_address(_Last);
; 4529 :     auto _DestPtr               = _To_address(_Dest);
; 4530 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4531 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4532 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4535 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4536 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4537 :     } else {
; 4538 :         return _Dest + (_LastPtr - _FirstPtr);
; 4539 :     }
; 4540 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCGraphicObjectInstance@@PAPAV1@@std@@YAPAPAVCGraphicObjectInstance@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CGraphicObjectInstance * *,CGraphicObjectInstance * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$__std_find_trivial@PAVCArea@@I@@YAPAPAVCArea@@PAPAV0@0I@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$__std_find_trivial@PAVCArea@@I@@YAPAPAVCArea@@PAPAV0@0I@Z PROC ; __std_find_trivial<CArea *,unsigned int>, COMDAT

; 114  : _Ty* __std_find_trivial(_Ty* _First, _Ty* _Last, const _TVal _Val) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 115  :     if constexpr (_STD is_pointer_v<_TVal> || _STD is_null_pointer_v<_TVal>) {
; 116  :         return __std_find_trivial(_First, _Last, reinterpret_cast<uintptr_t>(_Val));
; 117  :     } else if constexpr (sizeof(_Ty) == 1) {
; 118  :         return const_cast<_Ty*>(
; 119  :             static_cast<const _Ty*>(__std_find_trivial_1(_First, _Last, static_cast<uint8_t>(_Val))));
; 120  :     } else if constexpr (sizeof(_Ty) == 2) {
; 121  :         return const_cast<_Ty*>(
; 122  :             static_cast<const _Ty*>(__std_find_trivial_2(_First, _Last, static_cast<uint16_t>(_Val))));
; 123  :     } else if constexpr (sizeof(_Ty) == 4) {
; 124  :         return const_cast<_Ty*>(

  00003	ff 75 10	 push	 DWORD PTR __Val$[ebp]
  00006	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00009	ff 75 08	 push	 DWORD PTR __First$[ebp]
  0000c	e8 00 00 00 00	 call	 ___std_find_trivial_4@12

; 125  :             static_cast<const _Ty*>(__std_find_trivial_4(_First, _Last, static_cast<uint32_t>(_Val))));
; 126  :     } else if constexpr (sizeof(_Ty) == 8) {
; 127  :         return const_cast<_Ty*>(
; 128  :             static_cast<const _Ty*>(__std_find_trivial_8(_First, _Last, static_cast<uint64_t>(_Val))));
; 129  :     } else {
; 130  :         static_assert(_STD _Always_false<_Ty>, "Unexpected size");
; 131  :     }
; 132  : }

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$__std_find_trivial@PAVCArea@@I@@YAPAPAVCArea@@PAPAV0@0I@Z ENDP ; __std_find_trivial<CArea *,unsigned int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$__std_find_trivial@PAVCTerrain@@I@@YAPAPAVCTerrain@@PAPAV0@0I@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$__std_find_trivial@PAVCTerrain@@I@@YAPAPAVCTerrain@@PAPAV0@0I@Z PROC ; __std_find_trivial<CTerrain *,unsigned int>, COMDAT

; 114  : _Ty* __std_find_trivial(_Ty* _First, _Ty* _Last, const _TVal _Val) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 115  :     if constexpr (_STD is_pointer_v<_TVal> || _STD is_null_pointer_v<_TVal>) {
; 116  :         return __std_find_trivial(_First, _Last, reinterpret_cast<uintptr_t>(_Val));
; 117  :     } else if constexpr (sizeof(_Ty) == 1) {
; 118  :         return const_cast<_Ty*>(
; 119  :             static_cast<const _Ty*>(__std_find_trivial_1(_First, _Last, static_cast<uint8_t>(_Val))));
; 120  :     } else if constexpr (sizeof(_Ty) == 2) {
; 121  :         return const_cast<_Ty*>(
; 122  :             static_cast<const _Ty*>(__std_find_trivial_2(_First, _Last, static_cast<uint16_t>(_Val))));
; 123  :     } else if constexpr (sizeof(_Ty) == 4) {
; 124  :         return const_cast<_Ty*>(

  00003	ff 75 10	 push	 DWORD PTR __Val$[ebp]
  00006	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00009	ff 75 08	 push	 DWORD PTR __First$[ebp]
  0000c	e8 00 00 00 00	 call	 ___std_find_trivial_4@12

; 125  :             static_cast<const _Ty*>(__std_find_trivial_4(_First, _Last, static_cast<uint32_t>(_Val))));
; 126  :     } else if constexpr (sizeof(_Ty) == 8) {
; 127  :         return const_cast<_Ty*>(
; 128  :             static_cast<const _Ty*>(__std_find_trivial_8(_First, _Last, static_cast<uint64_t>(_Val))));
; 129  :     } else {
; 130  :         static_assert(_STD _Always_false<_Ty>, "Unexpected size");
; 131  :     }
; 132  : }

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$__std_find_trivial@PAVCTerrain@@I@@YAPAPAVCTerrain@@PAPAV0@0I@Z ENDP ; __std_find_trivial<CTerrain *,unsigned int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$__std_find_trivial@PAVCGraphicObjectInstance@@I@@YAPAPAVCGraphicObjectInstance@@PAPAV0@0I@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$__std_find_trivial@PAVCGraphicObjectInstance@@I@@YAPAPAVCGraphicObjectInstance@@PAPAV0@0I@Z PROC ; __std_find_trivial<CGraphicObjectInstance *,unsigned int>, COMDAT

; 114  : _Ty* __std_find_trivial(_Ty* _First, _Ty* _Last, const _TVal _Val) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 115  :     if constexpr (_STD is_pointer_v<_TVal> || _STD is_null_pointer_v<_TVal>) {
; 116  :         return __std_find_trivial(_First, _Last, reinterpret_cast<uintptr_t>(_Val));
; 117  :     } else if constexpr (sizeof(_Ty) == 1) {
; 118  :         return const_cast<_Ty*>(
; 119  :             static_cast<const _Ty*>(__std_find_trivial_1(_First, _Last, static_cast<uint8_t>(_Val))));
; 120  :     } else if constexpr (sizeof(_Ty) == 2) {
; 121  :         return const_cast<_Ty*>(
; 122  :             static_cast<const _Ty*>(__std_find_trivial_2(_First, _Last, static_cast<uint16_t>(_Val))));
; 123  :     } else if constexpr (sizeof(_Ty) == 4) {
; 124  :         return const_cast<_Ty*>(

  00003	ff 75 10	 push	 DWORD PTR __Val$[ebp]
  00006	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00009	ff 75 08	 push	 DWORD PTR __First$[ebp]
  0000c	e8 00 00 00 00	 call	 ___std_find_trivial_4@12

; 125  :             static_cast<const _Ty*>(__std_find_trivial_4(_First, _Last, static_cast<uint32_t>(_Val))));
; 126  :     } else if constexpr (sizeof(_Ty) == 8) {
; 127  :         return const_cast<_Ty*>(
; 128  :             static_cast<const _Ty*>(__std_find_trivial_8(_First, _Last, static_cast<uint64_t>(_Val))));
; 129  :     } else {
; 130  :         static_assert(_STD _Always_false<_Ty>, "Unexpected size");
; 131  :     }
; 132  : }

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$__std_find_trivial@PAVCGraphicObjectInstance@@I@@YAPAPAVCGraphicObjectInstance@@PAPAV0@0I@Z ENDP ; __std_find_trivial<CGraphicObjectInstance *,unsigned int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Pop_heap_hole_by_index@PAPAVCGraphicObjectInstance@@PAV1@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@HH$$QAPAV1@U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z
_TEXT	SEGMENT
tv1085 = -32						; size = 4
tv1048 = -32						; size = 4
__Idx$1$ = -28						; size = 4
__Max_sequence_non_leaf$1$ = -28			; size = 4
tv1026 = -24						; size = 4
__Idx$1$ = -24						; size = 4
tv1025 = -20						; size = 4
tv1031 = -16						; size = 4
__Top$1$ = -12						; size = 4
$T1 = -8						; size = 4
$T2 = -4						; size = 4
__First$ = 8						; size = 4
tv1052 = 12						; size = 4
__Hole$ = 12						; size = 4
tv1047 = 16						; size = 4
__Bottom$ = 16						; size = 4
__Val$ = 20						; size = 4
__Pred$ = 24						; size = 4
??$_Pop_heap_hole_by_index@PAPAVCGraphicObjectInstance@@PAV1@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@HH$$QAPAV1@U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z PROC ; std::_Pop_heap_hole_by_index<CGraphicObjectInstance * *,CGraphicObjectInstance *,std::_Ref_fn<FPCBlockerDistanceSort> >, COMDAT

; 6432 :     _RanIt _First, _Iter_diff_t<_RanIt> _Hole, _Iter_diff_t<_RanIt> _Bottom, _Ty&& _Val, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H

; 6433 :     // percolate _Hole to _Bottom, then push _Val
; 6434 :     _STL_INTERNAL_CHECK(_Bottom > 0);
; 6435 : 
; 6436 :     using _Diff      = _Iter_diff_t<_RanIt>;
; 6437 :     const _Diff _Top = _Hole;
; 6438 :     _Diff _Idx       = _Hole;
; 6439 : 
; 6440 :     // Check whether _Idx can have a child before calculating that child's index, since
; 6441 :     // calculating the child's index can trigger integer overflows
; 6442 :     const _Diff _Max_sequence_non_leaf = (_Bottom - 1) >> 1; // shift for codegen

  00006	8b 4d 10	 mov	 ecx, DWORD PTR __Bottom$[ebp]
  00009	53		 push	 ebx
  0000a	8b 5d 0c	 mov	 ebx, DWORD PTR __Hole$[ebp]
  0000d	49		 dec	 ecx
  0000e	56		 push	 esi
  0000f	8b 75 18	 mov	 esi, DWORD PTR __Pred$[ebp]
  00012	8b c3		 mov	 eax, ebx
  00014	89 4d e0	 mov	 DWORD PTR tv1085[ebp], ecx
  00017	d1 f9		 sar	 ecx, 1
  00019	89 4d e4	 mov	 DWORD PTR __Max_sequence_non_leaf$1$[ebp], ecx
  0001c	57		 push	 edi
  0001d	8b fb		 mov	 edi, ebx
  0001f	89 7d f4	 mov	 DWORD PTR __Top$1$[ebp], edi

; 6443 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  00022	3b d9		 cmp	 ebx, ecx
  00024	0f 8d de 00 00
	00		 jge	 $LN53@Pop_heap_h
  0002a	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  0002d	0f 1f 00	 npad	 3
$LL2@Pop_heap_h:

; 6444 :         _Idx = 2 * _Idx + 2;

  00030	8d 1c 00	 lea	 ebx, DWORD PTR [eax+eax]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00033	8b 4c 9a 08	 mov	 ecx, DWORD PTR [edx+ebx*4+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 547  :             return _Fn(_STD forward<_Args>(_Vals)...);

  00037	8b 7c 9a 04	 mov	 edi, DWORD PTR [edx+ebx*4+4]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0003b	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00040	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00043	89 4d fc	 mov	 DWORD PTR $T2[ebp], ecx
  00046	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0004a	f3 0f 5c 06	 subss	 xmm0, DWORD PTR [esi]
  0004e	f3 0f 11 45 ec	 movss	 DWORD PTR tv1025[ebp], xmm0
  00053	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00058	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  0005c	8d 4e 08	 lea	 ecx, DWORD PTR [esi+8]
  0005f	89 4d f8	 mov	 DWORD PTR $T1[ebp], ecx
  00062	f3 0f 11 45 f0	 movss	 DWORD PTR tv1031[ebp], xmm0
  00067	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0006c	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00070	8b cf		 mov	 ecx, edi
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00072	f3 0f 11 45 e8	 movss	 DWORD PTR tv1026[ebp], xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00077	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0007c	8b 4d fc	 mov	 ecx, DWORD PTR $T2[ebp]

; 182  :     z = fz;

  0007f	f3 0f 10 55 ec	 movss	 xmm2, DWORD PTR tv1025[ebp]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00084	f3 0f 10 65 f0	 movss	 xmm4, DWORD PTR tv1031[ebp]

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00089	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  0008d	f3 0f 10 58 04	 movss	 xmm3, DWORD PTR [eax+4]
  00092	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00097	f3 0f 5c 19	 subss	 xmm3, DWORD PTR [ecx]
  0009b	f3 0f 5c 0e	 subss	 xmm1, DWORD PTR [esi]
  0009f	8b 45 f8	 mov	 eax, DWORD PTR $T1[ebp]

; 182  :     z = fz;

  000a2	f3 0f 59 d2	 mulss	 xmm2, xmm2
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6448 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  000a6	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  000a9	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6448 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  000ad	8b 4d 0c	 mov	 ecx, DWORD PTR __Hole$[ebp]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  000b0	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  000b4	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6448 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  000b8	33 c0		 xor	 eax, eax
  000ba	8b 75 18	 mov	 esi, DWORD PTR __Pred$[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  000bd	f3 0f 59 c9	 mulss	 xmm1, xmm1
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  000c1	f3 0f 58 e2	 addss	 xmm4, xmm2
  000c5	f3 0f 10 55 e8	 movss	 xmm2, DWORD PTR tv1026[ebp]
  000ca	f3 0f 59 d2	 mulss	 xmm2, xmm2
  000ce	f3 0f 58 d9	 addss	 xmm3, xmm1
  000d2	f3 0f 59 c0	 mulss	 xmm0, xmm0
  000d6	f3 0f 58 e2	 addss	 xmm4, xmm2
  000da	f3 0f 58 d8	 addss	 xmm3, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6448 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  000de	0f 2f e3	 comiss	 xmm4, xmm3
  000e1	0f 96 c0	 setbe	 al
  000e4	40		 inc	 eax
  000e5	03 c3		 add	 eax, ebx
  000e7	89 45 e8	 mov	 DWORD PTR __Idx$1$[ebp], eax
  000ea	8b 04 82	 mov	 eax, DWORD PTR [edx+eax*4]
  000ed	89 04 8a	 mov	 DWORD PTR [edx+ecx*4], eax

; 6449 :         _Hole             = _Idx;

  000f0	8b 45 e8	 mov	 eax, DWORD PTR __Idx$1$[ebp]
  000f3	8b d8		 mov	 ebx, eax
  000f5	8b 4d e4	 mov	 ecx, DWORD PTR __Max_sequence_non_leaf$1$[ebp]
  000f8	89 5d 0c	 mov	 DWORD PTR __Hole$[ebp], ebx
  000fb	3b c1		 cmp	 eax, ecx
  000fd	0f 8c 2d ff ff
	ff		 jl	 $LL2@Pop_heap_h
  00103	8b 7d f4	 mov	 edi, DWORD PTR __Top$1$[ebp]
  00106	eb 0f		 jmp	 SHORT $LN50@Pop_heap_h
$LN53@Pop_heap_h:
  00108	8d 56 04	 lea	 edx, DWORD PTR [esi+4]
  0010b	89 55 fc	 mov	 DWORD PTR $T2[ebp], edx
  0010e	8d 56 08	 lea	 edx, DWORD PTR [esi+8]
  00111	89 55 f8	 mov	 DWORD PTR $T1[ebp], edx
  00114	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
$LN50@Pop_heap_h:

; 6450 :     }
; 6451 : 
; 6452 :     if (_Idx == _Max_sequence_non_leaf && _Bottom % 2 == 0) { // only child at bottom, move _Hole down to it

  00117	3b c1		 cmp	 eax, ecx
  00119	75 11		 jne	 SHORT $LN5@Pop_heap_h
  0011b	8b 45 10	 mov	 eax, DWORD PTR __Bottom$[ebp]
  0011e	a8 01		 test	 al, 1
  00120	75 0a		 jne	 SHORT $LN5@Pop_heap_h

; 6453 :         *(_First + _Hole) = _STD move(*(_First + (_Bottom - 1)));

  00122	8b 44 82 fc	 mov	 eax, DWORD PTR [edx+eax*4-4]
  00126	89 04 9a	 mov	 DWORD PTR [edx+ebx*4], eax

; 6454 :         _Hole             = _Bottom - 1;

  00129	8b 5d e0	 mov	 ebx, DWORD PTR tv1085[ebp]
$LN5@Pop_heap_h:

; 6328 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  0012c	3b fb		 cmp	 edi, ebx
  0012e	0f 8d be 00 00
	00		 jge	 $LN54@Pop_heap_h
$LL67@Pop_heap_h:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 547  :             return _Fn(_STD forward<_Args>(_Vals)...);

  00134	8b 4d 14	 mov	 ecx, DWORD PTR __Val$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6327 :     for (_Diff _Idx = (_Hole - 1) >> 1; // shift for codegen

  00137	8d 43 ff	 lea	 eax, DWORD PTR [ebx-1]
  0013a	d1 f8		 sar	 eax, 1
  0013c	89 45 e4	 mov	 DWORD PTR __Idx$1$[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 547  :             return _Fn(_STD forward<_Args>(_Vals)...);

  0013f	8b 39		 mov	 edi, DWORD PTR [ecx]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00141	8b 0c 82	 mov	 ecx, DWORD PTR [edx+eax*4]
  00144	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00149	8b 4d fc	 mov	 ecx, DWORD PTR $T2[ebp]
  0014c	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00150	f3 0f 5c 06	 subss	 xmm0, DWORD PTR [esi]
  00154	f3 0f 11 45 10	 movss	 DWORD PTR tv1047[ebp], xmm0
  00159	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0015e	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00162	8b cf		 mov	 ecx, edi
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00164	f3 0f 11 45 0c	 movss	 DWORD PTR tv1052[ebp], xmm0
  00169	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0016e	8b 45 f8	 mov	 eax, DWORD PTR $T1[ebp]
  00171	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  00175	f3 0f 11 45 e0	 movss	 DWORD PTR tv1048[ebp], xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0017a	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0017f	8b 4d fc	 mov	 ecx, DWORD PTR $T2[ebp]

; 182  :     z = fz;

  00182	f3 0f 10 55 10	 movss	 xmm2, DWORD PTR tv1047[ebp]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00187	f3 0f 10 65 0c	 movss	 xmm4, DWORD PTR tv1052[ebp]

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0018c	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  00190	f3 0f 10 58 04	 movss	 xmm3, DWORD PTR [eax+4]
  00195	f3 0f 5c 19	 subss	 xmm3, DWORD PTR [ecx]
  00199	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0019e	f3 0f 5c 0e	 subss	 xmm1, DWORD PTR [esi]
  001a2	8b 45 f8	 mov	 eax, DWORD PTR $T1[ebp]

; 182  :     z = fz;

  001a5	f3 0f 59 d2	 mulss	 xmm2, xmm2

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  001a9	f3 0f 59 e4	 mulss	 xmm4, xmm4

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  001ad	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  001b1	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  001b5	f3 0f 59 c9	 mulss	 xmm1, xmm1
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  001b9	f3 0f 58 e2	 addss	 xmm4, xmm2
  001bd	f3 0f 10 55 e0	 movss	 xmm2, DWORD PTR tv1048[ebp]
  001c2	f3 0f 59 d2	 mulss	 xmm2, xmm2
  001c6	f3 0f 58 d9	 addss	 xmm3, xmm1
  001ca	f3 0f 59 c0	 mulss	 xmm0, xmm0
  001ce	f3 0f 58 e2	 addss	 xmm4, xmm2
  001d2	f3 0f 58 d8	 addss	 xmm3, xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  001d6	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6328 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  001d9	76 26		 jbe	 SHORT $LN55@Pop_heap_h

; 6329 :          _Idx = (_Hole - 1) >> 1) { // shift for codegen
; 6330 :         // move _Hole up to parent
; 6331 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  001db	8b 4d e4	 mov	 ecx, DWORD PTR __Idx$1$[ebp]
  001de	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  001e1	8b 04 8a	 mov	 eax, DWORD PTR [edx+ecx*4]
  001e4	89 04 9a	 mov	 DWORD PTR [edx+ebx*4], eax

; 6332 :         _Hole             = _Idx;

  001e7	8b d9		 mov	 ebx, ecx
  001e9	39 4d f4	 cmp	 DWORD PTR __Top$1$[ebp], ecx
  001ec	0f 8c 42 ff ff
	ff		 jl	 $LL67@Pop_heap_h
$LN54@Pop_heap_h:

; 6455 :     }
; 6456 : 
; 6457 :     _STD _Push_heap_by_index(_First, _Hole, _Top, _STD forward<_Ty>(_Val), _Pred);
; 6458 : }

  001f2	8b 45 14	 mov	 eax, DWORD PTR __Val$[ebp]
  001f5	5f		 pop	 edi
  001f6	5e		 pop	 esi
  001f7	8b 00		 mov	 eax, DWORD PTR [eax]
  001f9	89 04 9a	 mov	 DWORD PTR [edx+ebx*4], eax
  001fc	5b		 pop	 ebx
  001fd	8b e5		 mov	 esp, ebp
  001ff	5d		 pop	 ebp
  00200	c3		 ret	 0
$LN55@Pop_heap_h:

; 6335 :     *(_First + _Hole) = _STD forward<_Ty>(_Val); // drop _Val into final hole

  00201	8b 45 14	 mov	 eax, DWORD PTR __Val$[ebp]
  00204	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00207	5f		 pop	 edi

; 6455 :     }
; 6456 : 
; 6457 :     _STD _Push_heap_by_index(_First, _Hole, _Top, _STD forward<_Ty>(_Val), _Pred);
; 6458 : }

  00208	5e		 pop	 esi

; 6335 :     *(_First + _Hole) = _STD forward<_Ty>(_Val); // drop _Val into final hole

  00209	8b 00		 mov	 eax, DWORD PTR [eax]
  0020b	89 04 99	 mov	 DWORD PTR [ecx+ebx*4], eax

; 6455 :     }
; 6456 : 
; 6457 :     _STD _Push_heap_by_index(_First, _Hole, _Top, _STD forward<_Ty>(_Val), _Pred);
; 6458 : }

  0020e	5b		 pop	 ebx
  0020f	8b e5		 mov	 esp, ebp
  00211	5d		 pop	 ebp
  00212	c3		 ret	 0
??$_Pop_heap_hole_by_index@PAPAVCGraphicObjectInstance@@PAV1@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@HH$$QAPAV1@U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ENDP ; std::_Pop_heap_hole_by_index<CGraphicObjectInstance * *,CGraphicObjectInstance *,std::_Ref_fn<FPCBlockerDistanceSort> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Zero_range@PAPAVCTerrain@@@std@@YAPAPAVCTerrain@@QAPAV1@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Zero_range@PAPAVCTerrain@@@std@@YAPAPAVCTerrain@@QAPAV1@0@Z PROC ; std::_Zero_range<CTerrain * *>, COMDAT

; 2017 : _Ptr _Zero_range(const _Ptr _First, const _Ptr _Last) { // fill [_First, _Last) with zeroes

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2018 :     char* const _First_ch = reinterpret_cast<char*>(_To_address(_First));
; 2019 :     char* const _Last_ch  = reinterpret_cast<char*>(_To_address(_Last));
; 2020 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

  00003	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	2b ca		 sub	 ecx, edx
  0000b	51		 push	 ecx
  0000c	6a 00		 push	 0
  0000e	52		 push	 edx
  0000f	e8 00 00 00 00	 call	 _memset

; 2021 :     return _Last;

  00014	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00017	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2022 : }

  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??$_Zero_range@PAPAVCTerrain@@@std@@YAPAPAVCTerrain@@QAPAV1@0@Z ENDP ; std::_Zero_range<CTerrain * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Zero_range@PAPAVCArea@@@std@@YAPAPAVCArea@@QAPAV1@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Zero_range@PAPAVCArea@@@std@@YAPAPAVCArea@@QAPAV1@0@Z PROC ; std::_Zero_range<CArea * *>, COMDAT

; 2017 : _Ptr _Zero_range(const _Ptr _First, const _Ptr _Last) { // fill [_First, _Last) with zeroes

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2018 :     char* const _First_ch = reinterpret_cast<char*>(_To_address(_First));
; 2019 :     char* const _Last_ch  = reinterpret_cast<char*>(_To_address(_Last));
; 2020 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

  00003	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	2b ca		 sub	 ecx, edx
  0000b	51		 push	 ecx
  0000c	6a 00		 push	 0
  0000e	52		 push	 edx
  0000f	e8 00 00 00 00	 call	 _memset

; 2021 :     return _Last;

  00014	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00017	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2022 : }

  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??$_Zero_range@PAPAVCArea@@@std@@YAPAPAVCArea@@QAPAV1@0@Z ENDP ; std::_Zero_range<CArea * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$__std_find_trivial@PAVCArea@@PAV1@@@YAPAPAVCArea@@PAPAV0@0QAV0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$__std_find_trivial@PAVCArea@@PAV1@@@YAPAPAVCArea@@PAPAV0@0QAV0@@Z PROC ; __std_find_trivial<CArea *,CArea *>, COMDAT

; 114  : _Ty* __std_find_trivial(_Ty* _First, _Ty* _Last, const _TVal _Val) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 117  :     } else if constexpr (sizeof(_Ty) == 1) {
; 118  :         return const_cast<_Ty*>(
; 119  :             static_cast<const _Ty*>(__std_find_trivial_1(_First, _Last, static_cast<uint8_t>(_Val))));
; 120  :     } else if constexpr (sizeof(_Ty) == 2) {
; 121  :         return const_cast<_Ty*>(
; 122  :             static_cast<const _Ty*>(__std_find_trivial_2(_First, _Last, static_cast<uint16_t>(_Val))));
; 123  :     } else if constexpr (sizeof(_Ty) == 4) {
; 124  :         return const_cast<_Ty*>(
; 125  :             static_cast<const _Ty*>(__std_find_trivial_4(_First, _Last, static_cast<uint32_t>(_Val))));
; 126  :     } else if constexpr (sizeof(_Ty) == 8) {
; 127  :         return const_cast<_Ty*>(
; 128  :             static_cast<const _Ty*>(__std_find_trivial_8(_First, _Last, static_cast<uint64_t>(_Val))));
; 129  :     } else {
; 130  :         static_assert(_STD _Always_false<_Ty>, "Unexpected size");
; 131  :     }
; 132  : }

  00003	5d		 pop	 ebp

; 115  :     if constexpr (_STD is_pointer_v<_TVal> || _STD is_null_pointer_v<_TVal>) {
; 116  :         return __std_find_trivial(_First, _Last, reinterpret_cast<uintptr_t>(_Val));

  00004	e9 00 00 00 00	 jmp	 ??$__std_find_trivial@PAVCArea@@I@@YAPAPAVCArea@@PAPAV0@0I@Z ; __std_find_trivial<CArea *,unsigned int>
??$__std_find_trivial@PAVCArea@@PAV1@@@YAPAPAVCArea@@PAPAV0@0QAV0@@Z ENDP ; __std_find_trivial<CArea *,CArea *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$__std_find_trivial@PAVCTerrain@@PAV1@@@YAPAPAVCTerrain@@PAPAV0@0QAV0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$__std_find_trivial@PAVCTerrain@@PAV1@@@YAPAPAVCTerrain@@PAPAV0@0QAV0@@Z PROC ; __std_find_trivial<CTerrain *,CTerrain *>, COMDAT

; 114  : _Ty* __std_find_trivial(_Ty* _First, _Ty* _Last, const _TVal _Val) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 117  :     } else if constexpr (sizeof(_Ty) == 1) {
; 118  :         return const_cast<_Ty*>(
; 119  :             static_cast<const _Ty*>(__std_find_trivial_1(_First, _Last, static_cast<uint8_t>(_Val))));
; 120  :     } else if constexpr (sizeof(_Ty) == 2) {
; 121  :         return const_cast<_Ty*>(
; 122  :             static_cast<const _Ty*>(__std_find_trivial_2(_First, _Last, static_cast<uint16_t>(_Val))));
; 123  :     } else if constexpr (sizeof(_Ty) == 4) {
; 124  :         return const_cast<_Ty*>(
; 125  :             static_cast<const _Ty*>(__std_find_trivial_4(_First, _Last, static_cast<uint32_t>(_Val))));
; 126  :     } else if constexpr (sizeof(_Ty) == 8) {
; 127  :         return const_cast<_Ty*>(
; 128  :             static_cast<const _Ty*>(__std_find_trivial_8(_First, _Last, static_cast<uint64_t>(_Val))));
; 129  :     } else {
; 130  :         static_assert(_STD _Always_false<_Ty>, "Unexpected size");
; 131  :     }
; 132  : }

  00003	5d		 pop	 ebp

; 115  :     if constexpr (_STD is_pointer_v<_TVal> || _STD is_null_pointer_v<_TVal>) {
; 116  :         return __std_find_trivial(_First, _Last, reinterpret_cast<uintptr_t>(_Val));

  00004	e9 00 00 00 00	 jmp	 ??$__std_find_trivial@PAVCTerrain@@I@@YAPAPAVCTerrain@@PAPAV0@0I@Z ; __std_find_trivial<CTerrain *,unsigned int>
??$__std_find_trivial@PAVCTerrain@@PAV1@@@YAPAPAVCTerrain@@PAPAV0@0QAV0@@Z ENDP ; __std_find_trivial<CTerrain *,CTerrain *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$__std_find_trivial@PAVCGraphicObjectInstance@@PAV1@@@YAPAPAVCGraphicObjectInstance@@PAPAV0@0QAV0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$__std_find_trivial@PAVCGraphicObjectInstance@@PAV1@@@YAPAPAVCGraphicObjectInstance@@PAPAV0@0QAV0@@Z PROC ; __std_find_trivial<CGraphicObjectInstance *,CGraphicObjectInstance *>, COMDAT

; 114  : _Ty* __std_find_trivial(_Ty* _First, _Ty* _Last, const _TVal _Val) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 117  :     } else if constexpr (sizeof(_Ty) == 1) {
; 118  :         return const_cast<_Ty*>(
; 119  :             static_cast<const _Ty*>(__std_find_trivial_1(_First, _Last, static_cast<uint8_t>(_Val))));
; 120  :     } else if constexpr (sizeof(_Ty) == 2) {
; 121  :         return const_cast<_Ty*>(
; 122  :             static_cast<const _Ty*>(__std_find_trivial_2(_First, _Last, static_cast<uint16_t>(_Val))));
; 123  :     } else if constexpr (sizeof(_Ty) == 4) {
; 124  :         return const_cast<_Ty*>(
; 125  :             static_cast<const _Ty*>(__std_find_trivial_4(_First, _Last, static_cast<uint32_t>(_Val))));
; 126  :     } else if constexpr (sizeof(_Ty) == 8) {
; 127  :         return const_cast<_Ty*>(
; 128  :             static_cast<const _Ty*>(__std_find_trivial_8(_First, _Last, static_cast<uint64_t>(_Val))));
; 129  :     } else {
; 130  :         static_assert(_STD _Always_false<_Ty>, "Unexpected size");
; 131  :     }
; 132  : }

  00003	5d		 pop	 ebp

; 115  :     if constexpr (_STD is_pointer_v<_TVal> || _STD is_null_pointer_v<_TVal>) {
; 116  :         return __std_find_trivial(_First, _Last, reinterpret_cast<uintptr_t>(_Val));

  00004	e9 00 00 00 00	 jmp	 ??$__std_find_trivial@PAVCGraphicObjectInstance@@I@@YAPAPAVCGraphicObjectInstance@@PAPAV0@0I@Z ; __std_find_trivial<CGraphicObjectInstance *,unsigned int>
??$__std_find_trivial@PAVCGraphicObjectInstance@@PAV1@@@YAPAPAVCGraphicObjectInstance@@PAPAV0@0QAV0@@Z ENDP ; __std_find_trivial<CGraphicObjectInstance *,CGraphicObjectInstance *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Partition_by_median_guess_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YA?AU?$pair@PAPAVCGraphicObjectInstance@@PAPAV1@@0@PAPAVCGraphicObjectInstance@@0U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z
_TEXT	SEGMENT
tv3468 = -32						; size = 4
tv3452 = -32						; size = 4
tv3463 = -28						; size = 4
tv3456 = -28						; size = 4
tv3442 = -28						; size = 4
tv3425 = -28						; size = 4
tv3464 = -24						; size = 4
tv3451 = -24						; size = 4
tv3437 = -24						; size = 4
tv3430 = -24						; size = 4
tv3416 = -24						; size = 4
tv3403 = -24						; size = 4
tv3391 = -24						; size = 4
tv3375 = -24						; size = 4
__Last$1$ = -20						; size = 4
_v$1$ = -20						; size = 4
tv3438 = -20						; size = 4
tv3424 = -20						; size = 4
tv3411 = -20						; size = 4
tv3398 = -20						; size = 4
tv3386 = -20						; size = 4
tv3379 = -20						; size = 4
_v$1$ = -16						; size = 4
_v$1$ = -16						; size = 4
__Pfirst$1$ = -16					; size = 4
tv3475 = -16						; size = 4
tv3412 = -16						; size = 4
tv3399 = -16						; size = 4
_v$1$ = -12						; size = 4
__Glast$1$ = -12					; size = 4
tv3507 = -12						; size = 4
tv3478 = -12						; size = 4
__Gfirst$1$ = -8					; size = 4
tv3387 = -8						; size = 4
tv3374 = -8						; size = 4
__Plast$1$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Pred$ = 20						; size = 4
??$_Partition_by_median_guess_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YA?AU?$pair@PAPAVCGraphicObjectInstance@@PAPAV1@@0@PAPAVCGraphicObjectInstance@@0U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z PROC ; std::_Partition_by_median_guess_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >, COMDAT

; 7962 : _CONSTEXPR20 pair<_RanIt, _RanIt> _Partition_by_median_guess_unchecked(_RanIt _First, _RanIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H

; 7963 :     // partition [_First, _Last)
; 7964 :     _RanIt _Mid = _First + ((_Last - _First) >> 1); // shift for codegen

  00006	8b 4d 10	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	8b c1		 mov	 eax, ecx
  0000b	53		 push	 ebx
  0000c	56		 push	 esi

; 7965 :     _Guess_median_unchecked(_First, _Mid, _Prev_iter(_Last), _Pred);

  0000d	8b 75 14	 mov	 esi, DWORD PTR __Pred$[ebp]
  00010	83 c1 fc	 add	 ecx, -4			; fffffffcH
  00013	57		 push	 edi
  00014	8b 7d 0c	 mov	 edi, DWORD PTR __First$[ebp]
  00017	2b c7		 sub	 eax, edi
  00019	c1 f8 03	 sar	 eax, 3
  0001c	89 4d ec	 mov	 DWORD PTR __Last$1$[ebp], ecx

; 7949 :     if (40 < _Count) { // Tukey's ninther

  0001f	56		 push	 esi

; 7963 :     // partition [_First, _Last)
; 7964 :     _RanIt _Mid = _First + ((_Last - _First) >> 1); // shift for codegen

  00020	8d 1c 87	 lea	 ebx, DWORD PTR [edi+eax*4]

; 7948 :     const _Diff _Count = _Last - _First;

  00023	8b c1		 mov	 eax, ecx
  00025	2b c7		 sub	 eax, edi

; 7963 :     // partition [_First, _Last)
; 7964 :     _RanIt _Mid = _First + ((_Last - _First) >> 1); // shift for codegen

  00027	89 5d f0	 mov	 DWORD PTR __Pfirst$1$[ebp], ebx

; 7948 :     const _Diff _Count = _Last - _First;

  0002a	c1 f8 02	 sar	 eax, 2

; 7949 :     if (40 < _Count) { // Tukey's ninther

  0002d	83 f8 28	 cmp	 eax, 40			; 00000028H
  00030	7e 60		 jle	 SHORT $LN179@Partition_

; 7950 :         const _Diff _Step     = (_Count + 1) >> 3; // +1 can't overflow because range was made inclusive in caller

  00032	40		 inc	 eax
  00033	c1 f8 03	 sar	 eax, 3

; 7951 :         const _Diff _Two_step = _Step << 1; // note: intentionally discards low-order bit
; 7952 :         _Med3_unchecked(_First, _First + _Step, _First + _Two_step, _Pred);

  00036	8d 0c c5 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*8]
  0003d	8d 1c 85 00 00
	00 00		 lea	 ebx, DWORD PTR [eax*4]
  00044	89 4d f4	 mov	 DWORD PTR tv3478[ebp], ecx
  00047	8d 04 39	 lea	 eax, DWORD PTR [ecx+edi]
  0004a	50		 push	 eax
  0004b	8d 14 3b	 lea	 edx, DWORD PTR [ebx+edi]
  0004e	52		 push	 edx
  0004f	57		 push	 edi
  00050	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@00U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ; std::_Med3_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >

; 7953 :         _Med3_unchecked(_Mid - _Step, _Mid, _Mid + _Step, _Pred);

  00055	8b 4d f0	 mov	 ecx, DWORD PTR __Pfirst$1$[ebp]
  00058	56		 push	 esi
  00059	8d 04 0b	 lea	 eax, DWORD PTR [ebx+ecx]
  0005c	50		 push	 eax
  0005d	51		 push	 ecx
  0005e	2b cb		 sub	 ecx, ebx
  00060	51		 push	 ecx
  00061	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@00U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ; std::_Med3_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >

; 7954 :         _Med3_unchecked(_Last - _Two_step, _Last - _Step, _Last, _Pred);

  00066	8b 45 ec	 mov	 eax, DWORD PTR __Last$1$[ebp]
  00069	8b f8		 mov	 edi, eax
  0006b	56		 push	 esi
  0006c	50		 push	 eax
  0006d	2b 45 f4	 sub	 eax, DWORD PTR tv3478[ebp]
  00070	2b fb		 sub	 edi, ebx
  00072	57		 push	 edi
  00073	50		 push	 eax
  00074	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@00U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ; std::_Med3_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >

; 7955 :         _Med3_unchecked(_First + _Step, _Mid, _Last - _Step, _Pred);

  00079	56		 push	 esi
  0007a	8b 75 0c	 mov	 esi, DWORD PTR __First$[ebp]
  0007d	57		 push	 edi
  0007e	ff 75 f0	 push	 DWORD PTR __Pfirst$1$[ebp]
  00081	8d 04 33	 lea	 eax, DWORD PTR [ebx+esi]
  00084	50		 push	 eax
  00085	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@00U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ; std::_Med3_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >

; 7956 :     } else {

  0008a	8b 5d f0	 mov	 ebx, DWORD PTR __Pfirst$1$[ebp]
  0008d	83 c4 40	 add	 esp, 64			; 00000040H
  00090	eb 0d		 jmp	 SHORT $LN180@Partition_
$LN179@Partition_:

; 7957 :         _Med3_unchecked(_First, _Mid, _Last, _Pred);

  00092	51		 push	 ecx
  00093	53		 push	 ebx
  00094	57		 push	 edi
  00095	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@00U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ; std::_Med3_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >
  0009a	83 c4 10	 add	 esp, 16			; 00000010H
  0009d	8b f7		 mov	 esi, edi
$LN180@Partition_:

; 7966 :     _RanIt _Pfirst = _Mid;
; 7967 :     _RanIt _Plast  = _Next_iter(_Pfirst);

  0009f	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
  000a2	89 7d fc	 mov	 DWORD PTR __Plast$1$[ebp], edi

; 7970 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  000a5	3b f3		 cmp	 esi, ebx
  000a7	0f 83 54 01 00
	00		 jae	 $LN184@Partition_
  000ad	0f 1f 00	 npad	 3
$LL2@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 547  :             return _Fn(_STD forward<_Args>(_Vals)...);

  000b0	8b 7d 14	 mov	 edi, DWORD PTR __Pred$[ebp]
  000b3	8d 43 fc	 lea	 eax, DWORD PTR [ebx-4]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  000b6	8b 08		 mov	 ecx, DWORD PTR [eax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 547  :             return _Fn(_STD forward<_Args>(_Vals)...);

  000b8	8b 33		 mov	 esi, DWORD PTR [ebx]
  000ba	89 45 f4	 mov	 DWORD PTR tv3507[ebp], eax
  000bd	89 7d f0	 mov	 DWORD PTR _v$1$[ebp], edi
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  000c0	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
  000c5	8b ce		 mov	 ecx, esi
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  000c7	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  000cb	f3 0f 5c 07	 subss	 xmm0, DWORD PTR [edi]
  000cf	f3 0f 11 45 f8	 movss	 DWORD PTR tv3374[ebp], xmm0
  000d4	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  000d9	f3 0f 5c 47 04	 subss	 xmm0, DWORD PTR [edi+4]
  000de	f3 0f 11 45 ec	 movss	 DWORD PTR tv3379[ebp], xmm0
  000e3	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  000e8	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]
  000ed	f3 0f 11 45 e8	 movss	 DWORD PTR tv3375[ebp], xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  000f2	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  000f7	f3 0f 10 55 f8	 movss	 xmm2, DWORD PTR tv3374[ebp]

; 182  :     z = fz;

  000fc	f3 0f 10 65 ec	 movss	 xmm4, DWORD PTR tv3379[ebp]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00101	f3 0f 59 d2	 mulss	 xmm2, xmm2

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00105	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  00109	f3 0f 10 58 04	 movss	 xmm3, DWORD PTR [eax+4]
  0010e	f3 0f 5c 5f 04	 subss	 xmm3, DWORD PTR [edi+4]
  00113	f3 0f 5c 0f	 subss	 xmm1, DWORD PTR [edi]
  00117	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0011c	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]

; 182  :     z = fz;

  00121	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00125	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00129	f3 0f 59 c9	 mulss	 xmm1, xmm1
  0012d	f3 0f 58 e2	 addss	 xmm4, xmm2
  00131	f3 0f 10 55 e8	 movss	 xmm2, DWORD PTR tv3375[ebp]
  00136	f3 0f 59 d2	 mulss	 xmm2, xmm2
  0013a	f3 0f 58 d9	 addss	 xmm3, xmm1
  0013e	f3 0f 59 c0	 mulss	 xmm0, xmm0
  00142	f3 0f 58 e2	 addss	 xmm4, xmm2
  00146	f3 0f 58 d8	 addss	 xmm3, xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0014a	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7970 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  0014d	0f 87 ab 00 00
	00		 ja	 $LN210@Partition_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 547  :             return _Fn(_STD forward<_Args>(_Vals)...);

  00153	8b 75 f4	 mov	 esi, DWORD PTR tv3507[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00156	8b 0b		 mov	 ecx, DWORD PTR [ebx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 547  :             return _Fn(_STD forward<_Args>(_Vals)...);

  00158	8b 7d 14	 mov	 edi, DWORD PTR __Pred$[ebp]
  0015b	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0015d	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00162	8b 4d f0	 mov	 ecx, DWORD PTR _v$1$[ebp]
  00165	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00169	f3 0f 5c 07	 subss	 xmm0, DWORD PTR [edi]
  0016d	f3 0f 11 45 ec	 movss	 DWORD PTR tv3386[ebp], xmm0
  00172	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00177	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  0017c	f3 0f 11 45 e8	 movss	 DWORD PTR tv3391[ebp], xmm0
  00181	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00186	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0018b	8b ce		 mov	 ecx, esi
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0018d	f3 0f 11 45 f8	 movss	 DWORD PTR tv3387[ebp], xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00192	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00197	8b 4d f0	 mov	 ecx, DWORD PTR _v$1$[ebp]

; 182  :     z = fz;

  0019a	f3 0f 10 55 ec	 movss	 xmm2, DWORD PTR tv3386[ebp]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0019f	f3 0f 10 65 e8	 movss	 xmm4, DWORD PTR tv3391[ebp]

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  001a4	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  001a8	f3 0f 10 58 04	 movss	 xmm3, DWORD PTR [eax+4]
  001ad	f3 0f 5c 59 04	 subss	 xmm3, DWORD PTR [ecx+4]
  001b2	f3 0f 5c 0f	 subss	 xmm1, DWORD PTR [edi]
  001b6	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  001bb	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]

; 182  :     z = fz;

  001c0	f3 0f 59 d2	 mulss	 xmm2, xmm2

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  001c4	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  001c8	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  001cc	f3 0f 59 c9	 mulss	 xmm1, xmm1
  001d0	f3 0f 58 e2	 addss	 xmm4, xmm2
  001d4	f3 0f 10 55 f8	 movss	 xmm2, DWORD PTR tv3387[ebp]
  001d9	f3 0f 59 d2	 mulss	 xmm2, xmm2
  001dd	f3 0f 58 d9	 addss	 xmm3, xmm1
  001e1	f3 0f 59 c0	 mulss	 xmm0, xmm0
  001e5	f3 0f 58 e2	 addss	 xmm4, xmm2
  001e9	f3 0f 58 d8	 addss	 xmm3, xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  001ed	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7970 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  001f0	77 0c		 ja	 SHORT $LN210@Partition_

; 7971 :         --_Pfirst;

  001f2	8b 5d f4	 mov	 ebx, DWORD PTR tv3507[ebp]
  001f5	39 5d 0c	 cmp	 DWORD PTR __First$[ebp], ebx
  001f8	0f 82 b2 fe ff
	ff		 jb	 $LL2@Partition_
$LN210@Partition_:
  001fe	8b 7d fc	 mov	 edi, DWORD PTR __Plast$1$[ebp]
$LN184@Partition_:

; 7974 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  00201	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
  00204	3b f8		 cmp	 edi, eax
  00206	0f 83 5c 01 00
	00		 jae	 $LN211@Partition_
  0020c	0f 1f 40 00	 npad	 4
$LL4@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 547  :             return _Fn(_STD forward<_Args>(_Vals)...);

  00210	8b 45 14	 mov	 eax, DWORD PTR __Pred$[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00213	8b 0f		 mov	 ecx, DWORD PTR [edi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 547  :             return _Fn(_STD forward<_Args>(_Vals)...);

  00215	8b 33		 mov	 esi, DWORD PTR [ebx]
  00217	89 45 f4	 mov	 DWORD PTR _v$1$[ebp], eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0021a	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0021f	8b 4d f4	 mov	 ecx, DWORD PTR _v$1$[ebp]
  00222	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00226	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  0022a	f3 0f 11 45 ec	 movss	 DWORD PTR tv3398[ebp], xmm0
  0022f	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00234	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  00239	f3 0f 11 45 e8	 movss	 DWORD PTR tv3403[ebp], xmm0
  0023e	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00243	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00248	8b ce		 mov	 ecx, esi
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0024a	f3 0f 11 45 f0	 movss	 DWORD PTR tv3399[ebp], xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0024f	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00254	8b 4d f4	 mov	 ecx, DWORD PTR _v$1$[ebp]

; 182  :     z = fz;

  00257	f3 0f 10 55 ec	 movss	 xmm2, DWORD PTR tv3398[ebp]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0025c	f3 0f 10 65 e8	 movss	 xmm4, DWORD PTR tv3403[ebp]

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00261	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  00265	f3 0f 10 58 04	 movss	 xmm3, DWORD PTR [eax+4]
  0026a	f3 0f 5c 59 04	 subss	 xmm3, DWORD PTR [ecx+4]
  0026f	f3 0f 5c 09	 subss	 xmm1, DWORD PTR [ecx]
  00273	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00278	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]

; 182  :     z = fz;

  0027d	f3 0f 59 d2	 mulss	 xmm2, xmm2

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00281	f3 0f 59 e4	 mulss	 xmm4, xmm4
  00285	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00289	f3 0f 59 c9	 mulss	 xmm1, xmm1
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0028d	f3 0f 58 e2	 addss	 xmm4, xmm2
  00291	f3 0f 10 55 f0	 movss	 xmm2, DWORD PTR tv3399[ebp]
  00296	f3 0f 59 d2	 mulss	 xmm2, xmm2
  0029a	f3 0f 58 d9	 addss	 xmm3, xmm1
  0029e	f3 0f 59 c0	 mulss	 xmm0, xmm0
  002a2	f3 0f 58 e2	 addss	 xmm4, xmm2
  002a6	f3 0f 58 d8	 addss	 xmm3, xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  002aa	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7974 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  002ad	0f 87 b2 00 00
	00		 ja	 $LN218@Partition_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 547  :             return _Fn(_STD forward<_Args>(_Vals)...);

  002b3	8b 37		 mov	 esi, DWORD PTR [edi]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  002b5	8b 0b		 mov	 ecx, DWORD PTR [ebx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 547  :             return _Fn(_STD forward<_Args>(_Vals)...);

  002b7	8b 7d 14	 mov	 edi, DWORD PTR __Pred$[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  002ba	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  002bf	8b 4d f4	 mov	 ecx, DWORD PTR _v$1$[ebp]
  002c2	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  002c6	f3 0f 5c 07	 subss	 xmm0, DWORD PTR [edi]
  002ca	f3 0f 11 45 ec	 movss	 DWORD PTR tv3411[ebp], xmm0
  002cf	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  002d4	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  002d9	f3 0f 11 45 e8	 movss	 DWORD PTR tv3416[ebp], xmm0
  002de	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  002e3	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  002e8	8b ce		 mov	 ecx, esi
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  002ea	f3 0f 11 45 f0	 movss	 DWORD PTR tv3412[ebp], xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  002ef	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  002f4	8b 4d f4	 mov	 ecx, DWORD PTR _v$1$[ebp]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  002f7	f3 0f 10 55 ec	 movss	 xmm2, DWORD PTR tv3411[ebp]

; 182  :     z = fz;

  002fc	f3 0f 10 65 e8	 movss	 xmm4, DWORD PTR tv3416[ebp]

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00301	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  00305	f3 0f 10 58 04	 movss	 xmm3, DWORD PTR [eax+4]
  0030a	f3 0f 5c 59 04	 subss	 xmm3, DWORD PTR [ecx+4]
  0030f	f3 0f 5c 0f	 subss	 xmm1, DWORD PTR [edi]
  00313	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00318	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7974 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  0031d	8b 7d fc	 mov	 edi, DWORD PTR __Plast$1$[ebp]
  00320	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00323	f3 0f 59 d2	 mulss	 xmm2, xmm2

; 182  :     z = fz;

  00327	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0032b	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0032f	f3 0f 59 c9	 mulss	 xmm1, xmm1
  00333	f3 0f 58 e2	 addss	 xmm4, xmm2
  00337	f3 0f 10 55 f0	 movss	 xmm2, DWORD PTR tv3412[ebp]
  0033c	f3 0f 59 d2	 mulss	 xmm2, xmm2
  00340	f3 0f 58 d9	 addss	 xmm3, xmm1
  00344	f3 0f 59 c0	 mulss	 xmm0, xmm0
  00348	f3 0f 58 e2	 addss	 xmm4, xmm2
  0034c	f3 0f 58 d8	 addss	 xmm3, xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00350	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7974 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  00353	77 13		 ja	 SHORT $LN211@Partition_

; 7975 :         ++_Plast;

  00355	83 c7 04	 add	 edi, 4
  00358	89 7d fc	 mov	 DWORD PTR __Plast$1$[ebp], edi
  0035b	3b f8		 cmp	 edi, eax
  0035d	0f 82 ad fe ff
	ff		 jb	 $LL4@Partition_

; 7974 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  00363	eb 03		 jmp	 SHORT $LN211@Partition_
$LN218@Partition_:
  00365	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
$LN211@Partition_:

; 7976 :     }
; 7977 : 
; 7978 :     _RanIt _Gfirst = _Plast;

  00368	8b d7		 mov	 edx, edi

; 7979 :     _RanIt _Glast  = _Pfirst;

  0036a	8b f3		 mov	 esi, ebx
$LN243@Partition_:

; 7980 : 
; 7981 :     for (;;) { // partition
; 7982 :         for (; _Gfirst < _Last; ++_Gfirst) {

  0036c	89 75 f4	 mov	 DWORD PTR __Glast$1$[ebp], esi
$LN242@Partition_:
  0036f	89 55 f8	 mov	 DWORD PTR __Gfirst$1$[ebp], edx
$LL6@Partition_:
  00372	3b d0		 cmp	 edx, eax
  00374	0f 83 71 01 00
	00		 jae	 $LN188@Partition_
  0037a	66 0f 1f 44 00
	00		 npad	 6
$LL239@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 547  :             return _Fn(_STD forward<_Args>(_Vals)...);

  00380	8b 7d 14	 mov	 edi, DWORD PTR __Pred$[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00383	8b 0b		 mov	 ecx, DWORD PTR [ebx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 547  :             return _Fn(_STD forward<_Args>(_Vals)...);

  00385	8b 32		 mov	 esi, DWORD PTR [edx]
  00387	89 7d f0	 mov	 DWORD PTR _v$1$[ebp], edi
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0038a	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
  0038f	8b ce		 mov	 ecx, esi
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00391	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00395	f3 0f 5c 07	 subss	 xmm0, DWORD PTR [edi]
  00399	f3 0f 11 45 ec	 movss	 DWORD PTR tv3424[ebp], xmm0
  0039e	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  003a3	f3 0f 5c 47 04	 subss	 xmm0, DWORD PTR [edi+4]
  003a8	f3 0f 11 45 e8	 movss	 DWORD PTR tv3430[ebp], xmm0
  003ad	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  003b2	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]
  003b7	f3 0f 11 45 e4	 movss	 DWORD PTR tv3425[ebp], xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  003bc	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 182  :     z = fz;

  003c1	f3 0f 10 55 ec	 movss	 xmm2, DWORD PTR tv3424[ebp]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  003c6	f3 0f 10 65 e8	 movss	 xmm4, DWORD PTR tv3430[ebp]

; 182  :     z = fz;

  003cb	f3 0f 59 d2	 mulss	 xmm2, xmm2

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  003cf	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  003d3	f3 0f 10 58 04	 movss	 xmm3, DWORD PTR [eax+4]
  003d8	f3 0f 5c 5f 04	 subss	 xmm3, DWORD PTR [edi+4]
  003dd	f3 0f 5c 0f	 subss	 xmm1, DWORD PTR [edi]
  003e1	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  003e6	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  003eb	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  003ef	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  003f3	f3 0f 59 c9	 mulss	 xmm1, xmm1
  003f7	f3 0f 58 e2	 addss	 xmm4, xmm2
  003fb	f3 0f 10 55 e4	 movss	 xmm2, DWORD PTR tv3425[ebp]
  00400	f3 0f 59 d2	 mulss	 xmm2, xmm2
  00404	f3 0f 58 d9	 addss	 xmm3, xmm1
  00408	f3 0f 59 c0	 mulss	 xmm0, xmm0
  0040c	f3 0f 58 e2	 addss	 xmm4, xmm2
  00410	f3 0f 58 d8	 addss	 xmm3, xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00414	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7983 :             if (_DEBUG_LT_PRED(_Pred, *_Pfirst, *_Gfirst)) {

  00417	0f 87 b9 00 00
	00		 ja	 $LN214@Partition_
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0041d	8b 4d f8	 mov	 ecx, DWORD PTR __Gfirst$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 547  :             return _Fn(_STD forward<_Args>(_Vals)...);

  00420	8b 33		 mov	 esi, DWORD PTR [ebx]
  00422	8b 7d 14	 mov	 edi, DWORD PTR __Pred$[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00425	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00427	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0042c	8b 4d f0	 mov	 ecx, DWORD PTR _v$1$[ebp]
  0042f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00433	f3 0f 5c 07	 subss	 xmm0, DWORD PTR [edi]
  00437	f3 0f 11 45 e8	 movss	 DWORD PTR tv3437[ebp], xmm0
  0043c	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00441	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  00446	f3 0f 11 45 e4	 movss	 DWORD PTR tv3442[ebp], xmm0
  0044b	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00450	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00455	8b ce		 mov	 ecx, esi
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00457	f3 0f 11 45 ec	 movss	 DWORD PTR tv3438[ebp], xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0045c	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00461	8b 4d f0	 mov	 ecx, DWORD PTR _v$1$[ebp]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00464	f3 0f 10 55 e8	 movss	 xmm2, DWORD PTR tv3437[ebp]

; 182  :     z = fz;

  00469	f3 0f 10 65 e4	 movss	 xmm4, DWORD PTR tv3442[ebp]

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0046e	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  00472	f3 0f 10 58 04	 movss	 xmm3, DWORD PTR [eax+4]
  00477	f3 0f 5c 59 04	 subss	 xmm3, DWORD PTR [ecx+4]
  0047c	f3 0f 5c 0f	 subss	 xmm1, DWORD PTR [edi]
  00480	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00485	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0048a	f3 0f 59 d2	 mulss	 xmm2, xmm2

; 182  :     z = fz;

  0048e	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00492	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00496	f3 0f 59 c9	 mulss	 xmm1, xmm1
  0049a	f3 0f 58 e2	 addss	 xmm4, xmm2
  0049e	f3 0f 10 55 ec	 movss	 xmm2, DWORD PTR tv3438[ebp]
  004a3	f3 0f 59 d2	 mulss	 xmm2, xmm2
  004a7	f3 0f 58 d9	 addss	 xmm3, xmm1
  004ab	f3 0f 59 c0	 mulss	 xmm0, xmm0
  004af	f3 0f 58 e2	 addss	 xmm4, xmm2
  004b3	f3 0f 58 d8	 addss	 xmm3, xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  004b7	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7985 :             } else if (_Pred(*_Gfirst, *_Pfirst)) {

  004ba	77 2c		 ja	 SHORT $LN212@Partition_

; 7986 :                 break;
; 7987 :             } else if (_Plast != _Gfirst) {

  004bc	8b 75 fc	 mov	 esi, DWORD PTR __Plast$1$[ebp]
  004bf	8b 55 f8	 mov	 edx, DWORD PTR __Gfirst$1$[ebp]
  004c2	8d 7e 04	 lea	 edi, DWORD PTR [esi+4]
  004c5	89 7d fc	 mov	 DWORD PTR __Plast$1$[ebp], edi
  004c8	3b f2		 cmp	 esi, edx
  004ca	74 0d		 je	 SHORT $LN9@Partition_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

  004cc	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 100  :     _Left    = _STD move(_Right);

  004ce	8b 02		 mov	 eax, DWORD PTR [edx]
  004d0	89 06		 mov	 DWORD PTR [esi], eax

; 101  :     _Right   = _STD move(_Tmp);

  004d2	89 0a		 mov	 DWORD PTR [edx], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7990 :             } else {

  004d4	eb 03		 jmp	 SHORT $LN9@Partition_
$LN214@Partition_:

; 7983 :             if (_DEBUG_LT_PRED(_Pred, *_Pfirst, *_Gfirst)) {

  004d6	8b 55 f8	 mov	 edx, DWORD PTR __Gfirst$1$[ebp]
$LN9@Partition_:

; 7980 : 
; 7981 :     for (;;) { // partition
; 7982 :         for (; _Gfirst < _Last; ++_Gfirst) {

  004d9	83 c2 04	 add	 edx, 4
  004dc	89 55 f8	 mov	 DWORD PTR __Gfirst$1$[ebp], edx
  004df	3b 55 10	 cmp	 edx, DWORD PTR __Last$[ebp]
  004e2	0f 82 98 fe ff
	ff		 jb	 $LL239@Partition_
$LN212@Partition_:
  004e8	8b 75 f4	 mov	 esi, DWORD PTR __Glast$1$[ebp]
$LN188@Partition_:

; 7991 :                 ++_Plast;
; 7992 :             }
; 7993 :         }
; 7994 : 
; 7995 :         for (; _First < _Glast; --_Glast) {

  004eb	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
  004ee	3b f0		 cmp	 esi, eax
  004f0	0f 86 81 01 00
	00		 jbe	 $LN241@Partition_
  004f6	8d 56 fc	 lea	 edx, DWORD PTR [esi-4]
  004f9	89 55 f0	 mov	 DWORD PTR tv3475[ebp], edx
  004fc	0f 1f 40 00	 npad	 4
$LL240@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 547  :             return _Fn(_STD forward<_Args>(_Vals)...);

  00500	8b 7d 14	 mov	 edi, DWORD PTR __Pred$[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00503	8b 0a		 mov	 ecx, DWORD PTR [edx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 547  :             return _Fn(_STD forward<_Args>(_Vals)...);

  00505	8b 33		 mov	 esi, DWORD PTR [ebx]
  00507	89 7d ec	 mov	 DWORD PTR _v$1$[ebp], edi
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0050a	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
  0050f	8b ce		 mov	 ecx, esi
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00511	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00515	f3 0f 5c 07	 subss	 xmm0, DWORD PTR [edi]
  00519	f3 0f 11 45 e8	 movss	 DWORD PTR tv3451[ebp], xmm0
  0051e	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00523	f3 0f 5c 47 04	 subss	 xmm0, DWORD PTR [edi+4]
  00528	f3 0f 11 45 e4	 movss	 DWORD PTR tv3456[ebp], xmm0
  0052d	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00532	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]
  00537	f3 0f 11 45 e0	 movss	 DWORD PTR tv3452[ebp], xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0053c	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00541	f3 0f 10 55 e8	 movss	 xmm2, DWORD PTR tv3451[ebp]

; 182  :     z = fz;

  00546	f3 0f 10 65 e4	 movss	 xmm4, DWORD PTR tv3456[ebp]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0054b	f3 0f 59 d2	 mulss	 xmm2, xmm2

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0054f	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  00553	f3 0f 10 58 04	 movss	 xmm3, DWORD PTR [eax+4]
  00558	f3 0f 5c 5f 04	 subss	 xmm3, DWORD PTR [edi+4]
  0055d	f3 0f 5c 0f	 subss	 xmm1, DWORD PTR [edi]
  00561	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00566	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]

; 182  :     z = fz;

  0056b	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0056f	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00573	f3 0f 59 c9	 mulss	 xmm1, xmm1
  00577	f3 0f 58 e2	 addss	 xmm4, xmm2
  0057b	f3 0f 10 55 e0	 movss	 xmm2, DWORD PTR tv3452[ebp]
  00580	f3 0f 59 d2	 mulss	 xmm2, xmm2
  00584	f3 0f 58 d9	 addss	 xmm3, xmm1
  00588	f3 0f 59 c0	 mulss	 xmm0, xmm0
  0058c	f3 0f 58 e2	 addss	 xmm4, xmm2
  00590	f3 0f 58 d8	 addss	 xmm3, xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00594	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7997 :             if (_DEBUG_LT_PRED(_Pred, *_Glast_prev, *_Pfirst)) {

  00597	0f 87 b3 00 00
	00		 ja	 $LN216@Partition_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 547  :             return _Fn(_STD forward<_Args>(_Vals)...);

  0059d	8b 75 f0	 mov	 esi, DWORD PTR tv3475[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  005a0	8b 0b		 mov	 ecx, DWORD PTR [ebx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 547  :             return _Fn(_STD forward<_Args>(_Vals)...);

  005a2	8b 7d 14	 mov	 edi, DWORD PTR __Pred$[ebp]
  005a5	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  005a7	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  005ac	8b 4d ec	 mov	 ecx, DWORD PTR _v$1$[ebp]
  005af	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  005b3	f3 0f 5c 07	 subss	 xmm0, DWORD PTR [edi]
  005b7	f3 0f 11 45 e4	 movss	 DWORD PTR tv3463[ebp], xmm0
  005bc	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  005c1	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  005c6	f3 0f 11 45 e0	 movss	 DWORD PTR tv3468[ebp], xmm0
  005cb	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  005d0	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  005d5	8b ce		 mov	 ecx, esi
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  005d7	f3 0f 11 45 e8	 movss	 DWORD PTR tv3464[ebp], xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  005dc	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  005e1	8b 4d ec	 mov	 ecx, DWORD PTR _v$1$[ebp]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  005e4	f3 0f 10 55 e4	 movss	 xmm2, DWORD PTR tv3463[ebp]

; 182  :     z = fz;

  005e9	f3 0f 10 65 e0	 movss	 xmm4, DWORD PTR tv3468[ebp]

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  005ee	f3 0f 10 18	 movss	 xmm3, DWORD PTR [eax]
  005f2	f3 0f 5c 1f	 subss	 xmm3, DWORD PTR [edi]
  005f6	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  005fb	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  00600	f3 0f 10 48 08	 movss	 xmm1, DWORD PTR [eax+8]
  00605	f3 0f 5c 49 08	 subss	 xmm1, DWORD PTR [ecx+8]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0060a	f3 0f 59 d2	 mulss	 xmm2, xmm2

; 182  :     z = fz;

  0060e	f3 0f 59 e4	 mulss	 xmm4, xmm4

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00612	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00616	f3 0f 59 c0	 mulss	 xmm0, xmm0
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0061a	f3 0f 58 e2	 addss	 xmm4, xmm2
  0061e	f3 0f 10 55 e8	 movss	 xmm2, DWORD PTR tv3464[ebp]
  00623	f3 0f 59 d2	 mulss	 xmm2, xmm2
  00627	f3 0f 58 d8	 addss	 xmm3, xmm0
  0062b	f3 0f 59 c9	 mulss	 xmm1, xmm1
  0062f	f3 0f 58 e2	 addss	 xmm4, xmm2
  00633	f3 0f 58 d9	 addss	 xmm3, xmm1
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00637	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7999 :             } else if (_Pred(*_Pfirst, *_Glast_prev)) {

  0063a	77 33		 ja	 SHORT $LN217@Partition_

; 8000 :                 break;
; 8001 :             } else if (--_Pfirst != _Glast_prev) {

  0063c	8b 55 f0	 mov	 edx, DWORD PTR tv3475[ebp]
  0063f	83 eb 04	 sub	 ebx, 4
  00642	3b da		 cmp	 ebx, edx
  00644	74 0d		 je	 SHORT $LN12@Partition_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

  00646	8b 0b		 mov	 ecx, DWORD PTR [ebx]

; 100  :     _Left    = _STD move(_Right);

  00648	8b 02		 mov	 eax, DWORD PTR [edx]
  0064a	89 03		 mov	 DWORD PTR [ebx], eax

; 101  :     _Right   = _STD move(_Tmp);

  0064c	89 0a		 mov	 DWORD PTR [edx], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7997 :             if (_DEBUG_LT_PRED(_Pred, *_Glast_prev, *_Pfirst)) {

  0064e	eb 03		 jmp	 SHORT $LN12@Partition_
$LN216@Partition_:
  00650	8b 55 f0	 mov	 edx, DWORD PTR tv3475[ebp]
$LN12@Partition_:

; 7991 :                 ++_Plast;
; 7992 :             }
; 7993 :         }
; 7994 : 
; 7995 :         for (; _First < _Glast; --_Glast) {

  00653	8b 75 f4	 mov	 esi, DWORD PTR __Glast$1$[ebp]
  00656	83 ea 04	 sub	 edx, 4
  00659	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
  0065c	83 ee 04	 sub	 esi, 4
  0065f	89 75 f4	 mov	 DWORD PTR __Glast$1$[ebp], esi
  00662	89 55 f0	 mov	 DWORD PTR tv3475[ebp], edx
  00665	3b c6		 cmp	 eax, esi
  00667	0f 82 93 fe ff
	ff		 jb	 $LL240@Partition_

; 7999 :             } else if (_Pred(*_Pfirst, *_Glast_prev)) {

  0066d	eb 06		 jmp	 SHORT $LN213@Partition_
$LN217@Partition_:
  0066f	8b 75 f4	 mov	 esi, DWORD PTR __Glast$1$[ebp]
  00672	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
$LN213@Partition_:

; 8002 :                 swap(*_Pfirst, *_Glast_prev); // intentional ADL
; 8003 :             }
; 8004 :         }
; 8005 : 
; 8006 :         if (_Glast == _First && _Gfirst == _Last) {

  00675	3b f0		 cmp	 esi, eax
$LN241@Partition_:
  00677	8b 55 f8	 mov	 edx, DWORD PTR __Gfirst$1$[ebp]
  0067a	75 30		 jne	 SHORT $LN27@Partition_
  0067c	3b 55 10	 cmp	 edx, DWORD PTR __Last$[ebp]
  0067f	74 71		 je	 SHORT $LN190@Partition_

; 8008 :         }
; 8009 : 
; 8010 :         if (_Glast == _First) { // no room at bottom, rotate pivot upward
; 8011 :             if (_Plast != _Gfirst) {

  00681	8b 7d fc	 mov	 edi, DWORD PTR __Plast$1$[ebp]
  00684	3b fa		 cmp	 edi, edx
  00686	74 08		 je	 SHORT $LN71@Partition_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

  00688	8b 0b		 mov	 ecx, DWORD PTR [ebx]

; 100  :     _Left    = _STD move(_Right);

  0068a	8b 07		 mov	 eax, DWORD PTR [edi]
  0068c	89 03		 mov	 DWORD PTR [ebx], eax

; 101  :     _Right   = _STD move(_Tmp);

  0068e	89 0f		 mov	 DWORD PTR [edi], ecx
$LN71@Partition_:

; 100  :     _Left    = _STD move(_Right);

  00690	8b 02		 mov	 eax, DWORD PTR [edx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8015 :             ++_Plast;

  00692	83 c7 04	 add	 edi, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

  00695	8b 0b		 mov	 ecx, DWORD PTR [ebx]

; 100  :     _Left    = _STD move(_Right);

  00697	89 03		 mov	 DWORD PTR [ebx], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8017 :             ++_Pfirst;

  00699	83 c3 04	 add	 ebx, 4

; 8018 :             ++_Gfirst;

  0069c	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 101  :     _Right   = _STD move(_Tmp);

  0069f	89 0a		 mov	 DWORD PTR [edx], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8018 :             ++_Gfirst;

  006a1	83 c2 04	 add	 edx, 4
  006a4	89 7d fc	 mov	 DWORD PTR __Plast$1$[ebp], edi
  006a7	e9 c3 fc ff ff	 jmp	 $LN242@Partition_
$LN27@Partition_:

; 8019 :         } else if (_Gfirst == _Last) { // no room at top, rotate pivot downward

  006ac	83 c6 fc	 add	 esi, -4			; fffffffcH
  006af	89 75 f4	 mov	 DWORD PTR __Glast$1$[ebp], esi
  006b2	3b 55 10	 cmp	 edx, DWORD PTR __Last$[ebp]
  006b5	75 28		 jne	 SHORT $LN30@Partition_

; 8020 :             if (--_Glast != --_Pfirst) {

  006b7	83 eb 04	 sub	 ebx, 4
  006ba	3b f3		 cmp	 esi, ebx
  006bc	74 08		 je	 SHORT $LN206@Partition_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

  006be	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 100  :     _Left    = _STD move(_Right);

  006c0	8b 03		 mov	 eax, DWORD PTR [ebx]
  006c2	89 06		 mov	 DWORD PTR [esi], eax

; 101  :     _Right   = _STD move(_Tmp);

  006c4	89 0b		 mov	 DWORD PTR [ebx], ecx
$LN206@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8024 :             swap(*_Pfirst, *--_Plast); // intentional ADL

  006c6	8b 7d fc	 mov	 edi, DWORD PTR __Plast$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

  006c9	8b 0b		 mov	 ecx, DWORD PTR [ebx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8024 :             swap(*_Pfirst, *--_Plast); // intentional ADL

  006cb	83 ef 04	 sub	 edi, 4
  006ce	89 7d fc	 mov	 DWORD PTR __Plast$1$[ebp], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

  006d1	8b 07		 mov	 eax, DWORD PTR [edi]
  006d3	89 03		 mov	 DWORD PTR [ebx], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8025 :         } else {

  006d5	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 101  :     _Right   = _STD move(_Tmp);

  006d8	89 0f		 mov	 DWORD PTR [edi], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8025 :         } else {

  006da	e9 93 fc ff ff	 jmp	 $LL6@Partition_
$LN30@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

  006df	8b 0a		 mov	 ecx, DWORD PTR [edx]

; 100  :     _Left    = _STD move(_Right);

  006e1	8b 06		 mov	 eax, DWORD PTR [esi]
  006e3	89 02		 mov	 DWORD PTR [edx], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8027 :             ++_Gfirst;

  006e5	83 c2 04	 add	 edx, 4

; 8029 :     }

  006e8	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 101  :     _Right   = _STD move(_Tmp);

  006eb	89 0e		 mov	 DWORD PTR [esi], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8029 :     }

  006ed	e9 7a fc ff ff	 jmp	 $LN243@Partition_
$LN190@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

  006f2	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  006f5	8b 4d fc	 mov	 ecx, DWORD PTR __Plast$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8007 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);

  006f8	5f		 pop	 edi
  006f9	5e		 pop	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

  006fa	89 18		 mov	 DWORD PTR [eax], ebx
  006fc	89 48 04	 mov	 DWORD PTR [eax+4], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8007 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);

  006ff	5b		 pop	 ebx

; 8030 : }

  00700	8b e5		 mov	 esp, ebp
  00702	5d		 pop	 ebp
  00703	c3		 ret	 0
??$_Partition_by_median_guess_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YA?AU?$pair@PAPAVCGraphicObjectInstance@@PAPAV1@@0@PAPAVCGraphicObjectInstance@@0U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ENDP ; std::_Partition_by_median_guess_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Make_heap_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@0U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z
_TEXT	SEGMENT
tv1127 = -36						; size = 4
__Idx$1$ = -32						; size = 4
tv1101 = -32						; size = 4
tv1080 = -32						; size = 4
tv1096 = -28						; size = 4
tv1079 = -28						; size = 4
tv1097 = -24						; size = 4
tv1084 = -24						; size = 4
__Val$1$ = -20						; size = 4
__Hole$1$ = -16						; size = 4
__Hole$1$ = -12						; size = 4
__Max_sequence_non_leaf$1$ = -8				; size = 4
$T1 = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Pred$ = 16						; size = 4
??$_Make_heap_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@0U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z PROC ; std::_Make_heap_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >, COMDAT

; 6593 : _CONSTEXPR20 void _Make_heap_unchecked(_RanIt _First, _RanIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 6594 :     // make [_First, _Last) into a heap
; 6595 :     using _Diff   = _Iter_diff_t<_RanIt>;
; 6596 :     _Diff _Bottom = _Last - _First;

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00006	83 ec 24	 sub	 esp, 36			; 00000024H
  00009	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  0000c	2b c2		 sub	 eax, edx
  0000e	c1 f8 02	 sar	 eax, 2

; 6597 :     for (_Diff _Hole = _Bottom >> 1; _Hole > 0;) { // shift for codegen

  00011	8b c8		 mov	 ecx, eax
  00013	89 45 0c	 mov	 DWORD PTR __Last$[ebp], eax
  00016	d1 f9		 sar	 ecx, 1
  00018	85 c9		 test	 ecx, ecx
  0001a	0f 8e e4 01 00
	00		 jle	 $LN3@Make_heap_
  00020	48		 dec	 eax
  00021	53		 push	 ebx
  00022	89 45 dc	 mov	 DWORD PTR tv1127[ebp], eax
  00025	d1 f8		 sar	 eax, 1
  00027	56		 push	 esi
  00028	89 45 f8	 mov	 DWORD PTR __Max_sequence_non_leaf$1$[ebp], eax
  0002b	57		 push	 edi
  0002c	0f 1f 40 00	 npad	 4
$LL2@Make_heap_:

; 6598 :         // reheap top half, bottom to top
; 6599 :         --_Hole;
; 6600 :         _Iter_value_t<_RanIt> _Val = _STD move(*(_First + _Hole));
; 6601 :         _STD _Pop_heap_hole_by_index(_First, _Hole, _Bottom, _STD move(_Val), _Pred);

  00030	8b 75 10	 mov	 esi, DWORD PTR __Pred$[ebp]
  00033	49		 dec	 ecx
  00034	8b d9		 mov	 ebx, ecx
  00036	89 4d f4	 mov	 DWORD PTR __Hole$1$[ebp], ecx

; 6438 :     _Diff _Idx       = _Hole;

  00039	8b f9		 mov	 edi, ecx

; 6598 :         // reheap top half, bottom to top
; 6599 :         --_Hole;
; 6600 :         _Iter_value_t<_RanIt> _Val = _STD move(*(_First + _Hole));
; 6601 :         _STD _Pop_heap_hole_by_index(_First, _Hole, _Bottom, _STD move(_Val), _Pred);

  0003b	89 5d f0	 mov	 DWORD PTR __Hole$1$[ebp], ebx
  0003e	8b 04 8a	 mov	 eax, DWORD PTR [edx+ecx*4]
  00041	89 45 ec	 mov	 DWORD PTR __Val$1$[ebp], eax

; 6438 :     _Diff _Idx       = _Hole;

  00044	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00047	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax

; 6439 : 
; 6440 :     // Check whether _Idx can have a child before calculating that child's index, since
; 6441 :     // calculating the child's index can trigger integer overflows
; 6442 :     const _Diff _Max_sequence_non_leaf = (_Bottom - 1) >> 1; // shift for codegen
; 6443 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  0004a	3b 4d f8	 cmp	 ecx, DWORD PTR __Max_sequence_non_leaf$1$[ebp]
  0004d	0f 8d cb 00 00
	00		 jge	 $LN62@Make_heap_
$LL7@Make_heap_:

; 6444 :         _Idx = 2 * _Idx + 2;

  00053	8d 1c 3f	 lea	 ebx, DWORD PTR [edi+edi]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00056	8b 4c 9a 08	 mov	 ecx, DWORD PTR [edx+ebx*4+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 547  :             return _Fn(_STD forward<_Args>(_Vals)...);

  0005a	8b 7c 9a 04	 mov	 edi, DWORD PTR [edx+ebx*4+4]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0005e	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00063	8b 4d fc	 mov	 ecx, DWORD PTR $T1[ebp]
  00066	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0006a	f3 0f 5c 06	 subss	 xmm0, DWORD PTR [esi]
  0006e	f3 0f 11 45 e4	 movss	 DWORD PTR tv1079[ebp], xmm0
  00073	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00078	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0007c	8b cf		 mov	 ecx, edi
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0007e	f3 0f 11 45 e8	 movss	 DWORD PTR tv1084[ebp], xmm0
  00083	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00088	f3 0f 5c 46 08	 subss	 xmm0, DWORD PTR [esi+8]
  0008d	f3 0f 11 45 e0	 movss	 DWORD PTR tv1080[ebp], xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00092	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00097	8b 4d fc	 mov	 ecx, DWORD PTR $T1[ebp]

; 182  :     z = fz;

  0009a	f3 0f 10 55 e4	 movss	 xmm2, DWORD PTR tv1079[ebp]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0009f	f3 0f 10 65 e8	 movss	 xmm4, DWORD PTR tv1084[ebp]

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  000a4	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  000a8	f3 0f 10 58 04	 movss	 xmm3, DWORD PTR [eax+4]
  000ad	f3 0f 5c 19	 subss	 xmm3, DWORD PTR [ecx]
  000b1	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6448 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  000b6	33 c0		 xor	 eax, eax
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  000b8	f3 0f 5c 0e	 subss	 xmm1, DWORD PTR [esi]
  000bc	f3 0f 5c 46 08	 subss	 xmm0, DWORD PTR [esi+8]

; 182  :     z = fz;

  000c1	f3 0f 59 d2	 mulss	 xmm2, xmm2
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6448 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  000c5	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  000c8	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6448 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  000cc	8b 4d f0	 mov	 ecx, DWORD PTR __Hole$1$[ebp]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  000cf	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  000d3	f3 0f 59 c9	 mulss	 xmm1, xmm1
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  000d7	f3 0f 58 e2	 addss	 xmm4, xmm2
  000db	f3 0f 10 55 e0	 movss	 xmm2, DWORD PTR tv1080[ebp]
  000e0	f3 0f 59 d2	 mulss	 xmm2, xmm2
  000e4	f3 0f 58 d9	 addss	 xmm3, xmm1
  000e8	f3 0f 59 c0	 mulss	 xmm0, xmm0
  000ec	f3 0f 58 e2	 addss	 xmm4, xmm2
  000f0	f3 0f 58 d8	 addss	 xmm3, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6448 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  000f4	0f 2f e3	 comiss	 xmm4, xmm3
  000f7	0f 96 c0	 setbe	 al
  000fa	40		 inc	 eax
  000fb	03 c3		 add	 eax, ebx
  000fd	89 45 e0	 mov	 DWORD PTR __Idx$1$[ebp], eax

; 6449 :         _Hole             = _Idx;

  00100	8b 7d e0	 mov	 edi, DWORD PTR __Idx$1$[ebp]
  00103	8b df		 mov	 ebx, edi
  00105	89 7d f0	 mov	 DWORD PTR __Hole$1$[ebp], edi
  00108	8b 04 82	 mov	 eax, DWORD PTR [edx+eax*4]
  0010b	89 04 8a	 mov	 DWORD PTR [edx+ecx*4], eax
  0010e	8b 45 f8	 mov	 eax, DWORD PTR __Max_sequence_non_leaf$1$[ebp]
  00111	3b f8		 cmp	 edi, eax
  00113	0f 8c 3a ff ff
	ff		 jl	 $LL7@Make_heap_
  00119	8b 4d f4	 mov	 ecx, DWORD PTR __Hole$1$[ebp]
  0011c	eb 06		 jmp	 SHORT $LN58@Make_heap_
$LN62@Make_heap_:
  0011e	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  00121	8b 45 f8	 mov	 eax, DWORD PTR __Max_sequence_non_leaf$1$[ebp]
$LN58@Make_heap_:

; 6450 :     }
; 6451 : 
; 6452 :     if (_Idx == _Max_sequence_non_leaf && _Bottom % 2 == 0) { // only child at bottom, move _Hole down to it

  00124	3b d8		 cmp	 ebx, eax
  00126	75 11		 jne	 SHORT $LN10@Make_heap_
  00128	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0012b	a8 01		 test	 al, 1
  0012d	75 0a		 jne	 SHORT $LN10@Make_heap_

; 6453 :         *(_First + _Hole) = _STD move(*(_First + (_Bottom - 1)));

  0012f	8b 44 82 fc	 mov	 eax, DWORD PTR [edx+eax*4-4]
  00133	89 04 9a	 mov	 DWORD PTR [edx+ebx*4], eax

; 6454 :         _Hole             = _Bottom - 1;

  00136	8b 5d dc	 mov	 ebx, DWORD PTR tv1127[ebp]
$LN10@Make_heap_:

; 6328 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  00139	3b cb		 cmp	 ecx, ebx
  0013b	0f 8d b2 00 00
	00		 jge	 $LN64@Make_heap_
$LL72@Make_heap_:

; 6327 :     for (_Diff _Idx = (_Hole - 1) >> 1; // shift for codegen

  00141	8d 7b ff	 lea	 edi, DWORD PTR [ebx-1]
  00144	d1 ff		 sar	 edi, 1
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00146	8b 0c ba	 mov	 ecx, DWORD PTR [edx+edi*4]
  00149	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0014e	8b 4d fc	 mov	 ecx, DWORD PTR $T1[ebp]
  00151	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00155	f3 0f 5c 06	 subss	 xmm0, DWORD PTR [esi]
  00159	f3 0f 11 45 e4	 movss	 DWORD PTR tv1096[ebp], xmm0
  0015e	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00163	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00167	8b 4d ec	 mov	 ecx, DWORD PTR __Val$1$[ebp]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0016a	f3 0f 11 45 e0	 movss	 DWORD PTR tv1101[ebp], xmm0
  0016f	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00174	f3 0f 5c 46 08	 subss	 xmm0, DWORD PTR [esi+8]
  00179	f3 0f 11 45 e8	 movss	 DWORD PTR tv1097[ebp], xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0017e	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00183	8b 4d fc	 mov	 ecx, DWORD PTR $T1[ebp]

; 182  :     z = fz;

  00186	f3 0f 10 55 e4	 movss	 xmm2, DWORD PTR tv1096[ebp]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0018b	f3 0f 10 65 e0	 movss	 xmm4, DWORD PTR tv1101[ebp]

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00190	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  00194	f3 0f 10 58 04	 movss	 xmm3, DWORD PTR [eax+4]
  00199	f3 0f 5c 19	 subss	 xmm3, DWORD PTR [ecx]
  0019d	f3 0f 5c 0e	 subss	 xmm1, DWORD PTR [esi]
  001a1	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  001a6	f3 0f 5c 46 08	 subss	 xmm0, DWORD PTR [esi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6328 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  001ab	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  001ae	8b 4d f4	 mov	 ecx, DWORD PTR __Hole$1$[ebp]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 182  :     z = fz;

  001b1	f3 0f 59 d2	 mulss	 xmm2, xmm2

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  001b5	f3 0f 59 e4	 mulss	 xmm4, xmm4
  001b9	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  001bd	f3 0f 59 c9	 mulss	 xmm1, xmm1
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  001c1	f3 0f 58 e2	 addss	 xmm4, xmm2
  001c5	f3 0f 10 55 e8	 movss	 xmm2, DWORD PTR tv1097[ebp]
  001ca	f3 0f 59 d2	 mulss	 xmm2, xmm2
  001ce	f3 0f 58 d9	 addss	 xmm3, xmm1
  001d2	f3 0f 59 c0	 mulss	 xmm0, xmm0
  001d6	f3 0f 58 e2	 addss	 xmm4, xmm2
  001da	f3 0f 58 d8	 addss	 xmm3, xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  001de	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6328 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  001e1	76 10		 jbe	 SHORT $LN64@Make_heap_

; 6329 :          _Idx = (_Hole - 1) >> 1) { // shift for codegen
; 6330 :         // move _Hole up to parent
; 6331 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  001e3	8b 04 ba	 mov	 eax, DWORD PTR [edx+edi*4]
  001e6	89 04 9a	 mov	 DWORD PTR [edx+ebx*4], eax

; 6332 :         _Hole             = _Idx;

  001e9	8b df		 mov	 ebx, edi
  001eb	3b cf		 cmp	 ecx, edi
  001ed	0f 8c 4e ff ff
	ff		 jl	 $LL72@Make_heap_
$LN64@Make_heap_:

; 6333 :     }
; 6334 : 
; 6335 :     *(_First + _Hole) = _STD forward<_Ty>(_Val); // drop _Val into final hole

  001f3	8b 45 ec	 mov	 eax, DWORD PTR __Val$1$[ebp]
  001f6	89 04 9a	 mov	 DWORD PTR [edx+ebx*4], eax

; 6597 :     for (_Diff _Hole = _Bottom >> 1; _Hole > 0;) { // shift for codegen

  001f9	85 c9		 test	 ecx, ecx
  001fb	0f 8f 2f fe ff
	ff		 jg	 $LL2@Make_heap_
  00201	5f		 pop	 edi
  00202	5e		 pop	 esi
  00203	5b		 pop	 ebx
$LN3@Make_heap_:

; 6602 :     }
; 6603 : }

  00204	8b e5		 mov	 esp, ebp
  00206	5d		 pop	 ebp
  00207	c3		 ret	 0
??$_Make_heap_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@0U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ENDP ; std::_Make_heap_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Insertion_sort_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAPAPAVCGraphicObjectInstance@@QAPAV1@0U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z
_TEXT	SEGMENT
tv1060 = -32						; size = 4
tv1043 = -32						; size = 4
tv1055 = -28						; size = 4
tv1047 = -28						; size = 4
tv1031 = -28						; size = 4
tv1056 = -24						; size = 4
tv1042 = -24						; size = 4
tv1030 = -24						; size = 4
tv1035 = -20						; size = 4
__Prev$1$ = -20						; size = 4
__Mid$1$ = -16						; size = 4
__Hole$1$ = -12						; size = 4
_v$1$ = -8						; size = 4
__Val$1$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Pred$ = 16						; size = 4
??$_Insertion_sort_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAPAPAVCGraphicObjectInstance@@QAPAV1@0U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z PROC ; std::_Insertion_sort_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >, COMDAT

; 7905 : _CONSTEXPR20 _BidIt _Insertion_sort_unchecked(const _BidIt _First, const _BidIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 7906 :     // insertion sort [_First, _Last)
; 7907 :     if (_First != _Last) {

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00006	83 ec 20	 sub	 esp, 32			; 00000020H
  00009	57		 push	 edi
  0000a	8b 7d 08	 mov	 edi, DWORD PTR __First$[ebp]
  0000d	3b f8		 cmp	 edi, eax
  0000f	0f 84 4a 02 00
	00		 je	 $LN3@Insertion_

; 7908 :         for (_BidIt _Mid = _First; ++_Mid != _Last;) { // order next element

  00015	53		 push	 ebx
  00016	8d 5f 04	 lea	 ebx, DWORD PTR [edi+4]
  00019	89 5d f0	 mov	 DWORD PTR __Mid$1$[ebp], ebx
  0001c	3b d8		 cmp	 ebx, eax
  0001e	0f 84 3a 02 00
	00		 je	 $LN64@Insertion_
  00024	56		 push	 esi
$LL2@Insertion_:

; 7910 :             _Iter_value_t<_BidIt> _Val = _STD move(*_Mid);

  00025	8b 03		 mov	 eax, DWORD PTR [ebx]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00027	8b c8		 mov	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 547  :             return _Fn(_STD forward<_Args>(_Vals)...);

  00029	8b 37		 mov	 esi, DWORD PTR [edi]
  0002b	8b 7d 10	 mov	 edi, DWORD PTR __Pred$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7909 :             _BidIt _Hole               = _Mid;

  0002e	89 5d f4	 mov	 DWORD PTR __Hole$1$[ebp], ebx

; 7910 :             _Iter_value_t<_BidIt> _Val = _STD move(*_Mid);

  00031	89 45 fc	 mov	 DWORD PTR __Val$1$[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 547  :             return _Fn(_STD forward<_Args>(_Vals)...);

  00034	89 7d f8	 mov	 DWORD PTR _v$1$[ebp], edi
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00037	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
  0003c	8b ce		 mov	 ecx, esi
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0003e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00042	f3 0f 5c 07	 subss	 xmm0, DWORD PTR [edi]
  00046	f3 0f 11 45 e8	 movss	 DWORD PTR tv1030[ebp], xmm0
  0004b	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00050	f3 0f 5c 47 04	 subss	 xmm0, DWORD PTR [edi+4]
  00055	f3 0f 11 45 ec	 movss	 DWORD PTR tv1035[ebp], xmm0
  0005a	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0005f	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]
  00064	f3 0f 11 45 e4	 movss	 DWORD PTR tv1031[ebp], xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00069	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0006e	f3 0f 10 55 e8	 movss	 xmm2, DWORD PTR tv1030[ebp]

; 182  :     z = fz;

  00073	f3 0f 10 65 ec	 movss	 xmm4, DWORD PTR tv1035[ebp]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00078	f3 0f 59 d2	 mulss	 xmm2, xmm2

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0007c	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  00080	f3 0f 10 58 04	 movss	 xmm3, DWORD PTR [eax+4]
  00085	f3 0f 5c 5f 04	 subss	 xmm3, DWORD PTR [edi+4]
  0008a	f3 0f 5c 0f	 subss	 xmm1, DWORD PTR [edi]
  0008e	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00093	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]

; 182  :     z = fz;

  00098	f3 0f 59 e4	 mulss	 xmm4, xmm4

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0009c	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  000a0	f3 0f 59 c9	 mulss	 xmm1, xmm1
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  000a4	f3 0f 58 e2	 addss	 xmm4, xmm2
  000a8	f3 0f 10 55 e4	 movss	 xmm2, DWORD PTR tv1031[ebp]
  000ad	f3 0f 59 d2	 mulss	 xmm2, xmm2
  000b1	f3 0f 58 d9	 addss	 xmm3, xmm1
  000b5	f3 0f 59 c0	 mulss	 xmm0, xmm0
  000b9	f3 0f 58 e2	 addss	 xmm4, xmm2
  000bd	f3 0f 58 d8	 addss	 xmm3, xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  000c1	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7912 :             if (_DEBUG_LT_PRED(_Pred, _Val, *_First)) { // found new earliest element, move to front

  000c4	76 1d		 jbe	 SHORT $LN9@Insertion_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4936 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  000c6	8b 7d 08	 mov	 edi, DWORD PTR __First$[ebp]
  000c9	8d 73 04	 lea	 esi, DWORD PTR [ebx+4]
  000cc	56		 push	 esi
  000cd	53		 push	 ebx
  000ce	57		 push	 edi
  000cf	e8 00 00 00 00	 call	 ??$_Copy_backward_memmove@PAPAVCGraphicObjectInstance@@PAPAV1@@std@@YAPAPAVCGraphicObjectInstance@@PAPAV1@00@Z ; std::_Copy_backward_memmove<CGraphicObjectInstance * *,CGraphicObjectInstance * *>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7914 :                 *_First = _STD move(_Val);

  000d4	8b 4d fc	 mov	 ecx, DWORD PTR __Val$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4936 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  000d7	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7914 :                 *_First = _STD move(_Val);

  000da	89 0f		 mov	 DWORD PTR [edi], ecx
  000dc	8b de		 mov	 ebx, esi

; 7915 :             } else { // look for insertion point after first

  000de	e9 6c 01 00 00	 jmp	 $LN65@Insertion_
$LN9@Insertion_:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  000e3	8b 4d fc	 mov	 ecx, DWORD PTR __Val$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7916 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

  000e6	8d 73 fc	 lea	 esi, DWORD PTR [ebx-4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 547  :             return _Fn(_STD forward<_Args>(_Vals)...);

  000e9	8b 7d 10	 mov	 edi, DWORD PTR __Pred$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7916 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

  000ec	89 75 ec	 mov	 DWORD PTR __Prev$1$[ebp], esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 547  :             return _Fn(_STD forward<_Args>(_Vals)...);

  000ef	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  000f1	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  000f6	8b 4d f8	 mov	 ecx, DWORD PTR _v$1$[ebp]
  000f9	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  000fd	f3 0f 5c 07	 subss	 xmm0, DWORD PTR [edi]
  00101	f3 0f 11 45 e8	 movss	 DWORD PTR tv1042[ebp], xmm0
  00106	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0010b	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  00110	f3 0f 11 45 e4	 movss	 DWORD PTR tv1047[ebp], xmm0
  00115	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0011a	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0011f	8b ce		 mov	 ecx, esi
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00121	f3 0f 11 45 e0	 movss	 DWORD PTR tv1043[ebp], xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00126	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0012b	8b 4d f8	 mov	 ecx, DWORD PTR _v$1$[ebp]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  0012e	f3 0f 10 55 e8	 movss	 xmm2, DWORD PTR tv1042[ebp]

; 182  :     z = fz;

  00133	f3 0f 10 65 e4	 movss	 xmm4, DWORD PTR tv1047[ebp]

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00138	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  0013c	f3 0f 10 58 04	 movss	 xmm3, DWORD PTR [eax+4]
  00141	f3 0f 5c 59 04	 subss	 xmm3, DWORD PTR [ecx+4]
  00146	f3 0f 5c 0f	 subss	 xmm1, DWORD PTR [edi]
  0014a	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0014f	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00154	f3 0f 59 d2	 mulss	 xmm2, xmm2

; 182  :     z = fz;

  00158	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  0015c	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00160	f3 0f 59 c9	 mulss	 xmm1, xmm1
  00164	f3 0f 58 e2	 addss	 xmm4, xmm2
  00168	f3 0f 10 55 e0	 movss	 xmm2, DWORD PTR tv1043[ebp]
  0016d	f3 0f 59 d2	 mulss	 xmm2, xmm2
  00171	f3 0f 58 d9	 addss	 xmm3, xmm1
  00175	f3 0f 59 c0	 mulss	 xmm0, xmm0
  00179	f3 0f 58 e2	 addss	 xmm4, xmm2
  0017d	f3 0f 58 d8	 addss	 xmm3, xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00181	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7916 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

  00184	0f 86 b7 00 00
	00		 jbe	 $LN6@Insertion_
  0018a	8b d9		 mov	 ebx, ecx
  0018c	0f 1f 40 00	 npad	 4
$LL63@Insertion_:

; 7917 :                     *_Hole = _STD move(*_Prev); // move hole down

  00190	8b 4d ec	 mov	 ecx, DWORD PTR __Prev$1$[ebp]
  00193	8b 55 f4	 mov	 edx, DWORD PTR __Hole$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 547  :             return _Fn(_STD forward<_Args>(_Vals)...);

  00196	8b 7d 10	 mov	 edi, DWORD PTR __Pred$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7916 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

  00199	89 4d f4	 mov	 DWORD PTR __Hole$1$[ebp], ecx

; 7917 :                     *_Hole = _STD move(*_Prev); // move hole down

  0019c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0019e	83 e9 04	 sub	 ecx, 4
  001a1	89 02		 mov	 DWORD PTR [edx], eax
  001a3	89 4d ec	 mov	 DWORD PTR __Prev$1$[ebp], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 547  :             return _Fn(_STD forward<_Args>(_Vals)...);

  001a6	8b 31		 mov	 esi, DWORD PTR [ecx]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  001a8	8b 4d fc	 mov	 ecx, DWORD PTR __Val$1$[ebp]
  001ab	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
  001b0	8b ce		 mov	 ecx, esi
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  001b2	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  001b6	f3 0f 5c 07	 subss	 xmm0, DWORD PTR [edi]
  001ba	f3 0f 11 45 e4	 movss	 DWORD PTR tv1055[ebp], xmm0
  001bf	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  001c4	f3 0f 5c 43 04	 subss	 xmm0, DWORD PTR [ebx+4]
  001c9	f3 0f 11 45 e0	 movss	 DWORD PTR tv1060[ebp], xmm0
  001ce	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  001d3	f3 0f 5c 43 08	 subss	 xmm0, DWORD PTR [ebx+8]
  001d8	f3 0f 11 45 e8	 movss	 DWORD PTR tv1056[ebp], xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  001dd	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  001e2	f3 0f 10 55 e4	 movss	 xmm2, DWORD PTR tv1055[ebp]

; 182  :     z = fz;

  001e7	f3 0f 10 65 e0	 movss	 xmm4, DWORD PTR tv1060[ebp]

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  001ec	f3 0f 59 d2	 mulss	 xmm2, xmm2

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  001f0	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  001f4	f3 0f 10 58 04	 movss	 xmm3, DWORD PTR [eax+4]
  001f9	f3 0f 5c 5b 04	 subss	 xmm3, DWORD PTR [ebx+4]
  001fe	f3 0f 5c 0f	 subss	 xmm1, DWORD PTR [edi]
  00202	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00207	f3 0f 5c 43 08	 subss	 xmm0, DWORD PTR [ebx+8]

; 182  :     z = fz;

  0020c	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00210	f3 0f 59 db	 mulss	 xmm3, xmm3
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  00214	f3 0f 59 c9	 mulss	 xmm1, xmm1
  00218	f3 0f 58 e2	 addss	 xmm4, xmm2
  0021c	f3 0f 10 55 e8	 movss	 xmm2, DWORD PTR tv1056[ebp]
  00221	f3 0f 59 d2	 mulss	 xmm2, xmm2
  00225	f3 0f 58 d9	 addss	 xmm3, xmm1
  00229	f3 0f 59 c0	 mulss	 xmm0, xmm0
  0022d	f3 0f 58 e2	 addss	 xmm4, xmm2
  00231	f3 0f 58 d8	 addss	 xmm3, xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 197  : 		return D3DXVec3LengthSq(&(plhs->GetPosition() - m_v3Eye)) > D3DXVec3LengthSq(&(prhs->GetPosition() - m_v3Eye));

  00235	0f 2f e3	 comiss	 xmm4, xmm3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7916 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

  00238	0f 87 52 ff ff
	ff		 ja	 $LL63@Insertion_
  0023e	8b 5d f0	 mov	 ebx, DWORD PTR __Mid$1$[ebp]
$LN6@Insertion_:

; 7918 :                 }
; 7919 : 
; 7920 :                 *_Hole = _STD move(_Val); // insert element in hole

  00241	8b 55 f4	 mov	 edx, DWORD PTR __Hole$1$[ebp]
  00244	83 c3 04	 add	 ebx, 4
  00247	8b 45 fc	 mov	 eax, DWORD PTR __Val$1$[ebp]
  0024a	8b 7d 08	 mov	 edi, DWORD PTR __First$[ebp]
  0024d	89 02		 mov	 DWORD PTR [edx], eax
$LN65@Insertion_:

; 7908 :         for (_BidIt _Mid = _First; ++_Mid != _Last;) { // order next element

  0024f	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00252	89 5d f0	 mov	 DWORD PTR __Mid$1$[ebp], ebx
  00255	3b d8		 cmp	 ebx, eax
  00257	0f 85 c8 fd ff
	ff		 jne	 $LL2@Insertion_
  0025d	5e		 pop	 esi
$LN64@Insertion_:
  0025e	5b		 pop	 ebx
$LN3@Insertion_:
  0025f	5f		 pop	 edi

; 7921 :             }
; 7922 :         }
; 7923 :     }
; 7924 : 
; 7925 :     return _Last;
; 7926 : }

  00260	8b e5		 mov	 esp, ebp
  00262	5d		 pop	 ebp
  00263	c3		 ret	 0
??$_Insertion_sort_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAPAPAVCGraphicObjectInstance@@QAPAV1@0U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ENDP ; std::_Insertion_sort_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCGraphicObjectInstance@@@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@AAEPAPAVCGraphicObjectInstance@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
__Newsize$1$ = -12					; size = 4
tv607 = -8						; size = 4
tv590 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCGraphicObjectInstance@@@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@AAEPAPAVCGraphicObjectInstance@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::_Emplace_reallocate<CGraphicObjectInstance * const &>, COMDAT
; _this$ = ecx

; 812  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 813  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 814  :         _Alty& _Al        = _Getal();
; 815  :         auto& _My_data    = _Mypair._Myval2;
; 816  :         pointer& _Myfirst = _My_data._Myfirst;
; 817  :         pointer& _Mylast  = _My_data._Mylast;
; 818  : 
; 819  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 820  : 
; 821  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b d9		 sub	 ebx, ecx

; 822  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c1		 sub	 eax, ecx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 823  : 
; 824  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 0f 01 00
	00		 je	 $LN96@Emplace_re

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 56 08	 mov	 edx, DWORD PTR [esi+8]

; 826  :         }
; 827  : 
; 828  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b d1		 sub	 edx, ecx

; 826  :         }
; 827  : 
; 828  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f4	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 fa 02	 sar	 edx, 2

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b ca		 mov	 ecx, edx
  0003d	d1 e9		 shr	 ecx, 1
  0003f	2b c1		 sub	 eax, ecx
  00041	3b d0		 cmp	 edx, eax
  00043	76 15		 jbe	 SHORT $LN12@Emplace_re

; 1967 :             return _Max; // geometric growth would overflow

  00045	b8 fc ff ff ff	 mov	 eax, -4			; fffffffcH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004a	50		 push	 eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1967 :             return _Max; // geometric growth would overflow

  0004b	89 45 f8	 mov	 DWORD PTR tv607[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b f8		 mov	 edi, eax
  00058	eb 47		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1970 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 70   :         if (_Count > _Max_possible) {

  0005d	8b cf		 mov	 ecx, edi
  0005f	3b c7		 cmp	 eax, edi
  00061	0f 43 c8	 cmovae	 ecx, eax
  00064	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  0006a	0f 87 cc 00 00
	00		 ja	 $LN97@Emplace_re

; 72   :         }
; 73   :     }
; 74   : 
; 75   :     return _Count * _Ty_size;

  00070	8d 04 8d 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*4]
  00077	89 45 f8	 mov	 DWORD PTR tv607[ebp], eax

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0007a	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0007f	72 0d		 jb	 SHORT $LN24@Emplace_re

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00087	83 c4 04	 add	 esp, 4
  0008a	8b f8		 mov	 edi, eax
  0008c	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 240  :         }
; 241  :     }
; 242  : #endif // defined(_M_IX86) || defined(_M_X64)
; 243  : 
; 244  :     if (_Bytes != 0) {

  0008e	85 c0		 test	 eax, eax
  00090	74 0d		 je	 SHORT $LN25@Emplace_re

; 87   :         return ::operator new(_Bytes);

  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00098	83 c4 04	 add	 esp, 4

; 245  :         return _Traits::_Allocate(_Bytes);

  0009b	8b f8		 mov	 edi, eax
  0009d	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 246  :     }
; 247  : 
; 248  :     return nullptr;

  0009f	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 836  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000a1	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a4	8d 0c 9f	 lea	 ecx, DWORD PTR [edi+ebx*4]

; 837  :         _Constructed_first = _Newvec + _Whereoff;
; 838  : 
; 839  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000a7	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  000aa	89 4d fc	 mov	 DWORD PTR tv590[ebp], ecx
  000ad	8b 00		 mov	 eax, DWORD PTR [eax]
  000af	89 01		 mov	 DWORD PTR [ecx], eax
  000b1	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000b4	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000b6	3b d8		 cmp	 ebx, eax
  000b8	75 07		 jne	 SHORT $LN4@Emplace_re

; 845  :         } else { // provide basic guarantee

  000ba	8b 5d fc	 mov	 ebx, DWORD PTR tv590[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1939 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bd	8b d7		 mov	 edx, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 845  :         } else { // provide basic guarantee

  000bf	eb 16		 jmp	 SHORT $LN52@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1939 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c1	57		 push	 edi
  000c2	53		 push	 ebx
  000c3	51		 push	 ecx
  000c4	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGraphicObjectInstance@@PAPAV1@@std@@YAPAPAVCGraphicObjectInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicObjectInstance * *,CGraphicObjectInstance * *>
  000c9	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000cc	8b cb		 mov	 ecx, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 848  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000ce	8b 5d fc	 mov	 ebx, DWORD PTR tv590[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1939 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000d1	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 848  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000d4	8d 53 04	 lea	 edx, DWORD PTR [ebx+4]
$LN52@Emplace_re:
  000d7	52		 push	 edx
  000d8	50		 push	 eax
  000d9	51		 push	 ecx
  000da	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGraphicObjectInstance@@PAPAV1@@std@@YAPAPAVCGraphicObjectInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicObjectInstance * *,CGraphicObjectInstance * *>

; 2023 :         if (_Myfirst) { // destroy and deallocate old array

  000df	8b 06		 mov	 eax, DWORD PTR [esi]

; 848  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000e1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2023 :         if (_Myfirst) { // destroy and deallocate old array

  000e4	85 c0		 test	 eax, eax
  000e6	74 2c		 je	 SHORT $LN70@Emplace_re

; 2024 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2025 :             _ASAN_VECTOR_REMOVE;
; 2026 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e8	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000eb	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ed	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000f0	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f6	72 12		 jb	 SHORT $LN80@Emplace_re

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f8	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000fb	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000fe	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00100	83 c0 fc	 add	 eax, -4			; fffffffcH
  00103	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00106	77 2a		 ja	 SHORT $LN77@Emplace_re

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00108	8b c2		 mov	 eax, edx
$LN80@Emplace_re:

; 265  :         ::operator delete(_Ptr, _Bytes);

  0010a	51		 push	 ecx
  0010b	50		 push	 eax
  0010c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00111	83 c4 08	 add	 esp, 8
$LN70@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2030 :         _Mylast  = _Newvec + _Newsize;

  00114	8b 45 f4	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  00117	89 3e		 mov	 DWORD PTR [esi], edi
  00119	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 849  :         }
; 850  :         _CATCH_ALL
; 851  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 852  :         _Al.deallocate(_Newvec, _Newcapacity);
; 853  :         _RERAISE;
; 854  :         _CATCH_END
; 855  : 
; 856  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 857  :         return _Newvec + _Whereoff;

  0011c	8b c3		 mov	 eax, ebx

; 2030 :         _Mylast  = _Newvec + _Newsize;

  0011e	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 2031 :         _Myend   = _Newvec + _Newcapacity;

  00121	8b 4d f8	 mov	 ecx, DWORD PTR tv607[ebp]
  00124	03 cf		 add	 ecx, edi

; 858  :     }

  00126	5f		 pop	 edi

; 2031 :         _Myend   = _Newvec + _Newcapacity;

  00127	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 858  :     }

  0012a	5e		 pop	 esi
  0012b	5b		 pop	 ebx
  0012c	8b e5		 mov	 esp, ebp
  0012e	5d		 pop	 ebp
  0012f	c2 08 00	 ret	 8
$LN77@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00132	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN96@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 825  :             _Xlength();

  00137	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::_Xlength
$LN97@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 71   :             _Throw_bad_array_new_length(); // multiply overflow

  0013c	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN94@Emplace_re:
  00141	cc		 int	 3
??$_Emplace_reallocate@ABQAVCGraphicObjectInstance@@@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@AAEPAPAVCGraphicObjectInstance@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::_Emplace_reallocate<CGraphicObjectInstance * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCTerrain@@@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@AAEPAPAVCTerrain@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
__Newsize$1$ = -8					; size = 4
tv463 = -4						; size = 4
__Whereoff$1$ = -4					; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCTerrain@@@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@AAEPAPAVCTerrain@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CTerrain *,std::allocator<CTerrain *> >::_Emplace_reallocate<CTerrain * const &>, COMDAT
; _this$ = ecx

; 812  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 813  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 814  :         _Alty& _Al        = _Getal();
; 815  :         auto& _My_data    = _Mypair._Myval2;
; 816  :         pointer& _Myfirst = _My_data._Myfirst;
; 817  :         pointer& _Mylast  = _My_data._Mylast;
; 818  : 
; 819  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 820  : 
; 821  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00006	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  00009	53		 push	 ebx
  0000a	8b d9		 mov	 ebx, ecx
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	8b 13		 mov	 edx, DWORD PTR [ebx]
  00010	2b c2		 sub	 eax, edx
  00012	c1 f8 02	 sar	 eax, 2
  00015	89 45 fc	 mov	 DWORD PTR __Whereoff$1$[ebp], eax

; 822  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00018	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0001b	2b c2		 sub	 eax, edx
  0001d	c1 f8 02	 sar	 eax, 2

; 823  : 
; 824  :         if (_Oldsize == max_size()) {

  00020	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00025	0f 84 d2 00 00
	00		 je	 $LN71@Emplace_re

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002b	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]

; 826  :         }
; 827  : 
; 828  :         const size_type _Newsize     = _Oldsize + 1;

  0002e	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00031	2b ca		 sub	 ecx, edx

; 826  :         }
; 827  : 
; 828  :         const size_type _Newsize     = _Oldsize + 1;

  00033	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00036	c1 f9 02	 sar	 ecx, 2

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00039	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003e	8b d1		 mov	 edx, ecx
  00040	d1 ea		 shr	 edx, 1
  00042	2b c2		 sub	 eax, edx
  00044	3b c8		 cmp	 ecx, eax
  00046	76 17		 jbe	 SHORT $LN12@Emplace_re

; 1967 :             return _Max; // geometric growth would overflow

  00048	b8 fc ff ff ff	 mov	 eax, -4			; fffffffcH
  0004d	be ff ff ff 3f	 mov	 esi, 1073741823		; 3fffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00058	83 c4 04	 add	 esp, 4
  0005b	8b f8		 mov	 edi, eax
  0005d	eb 44		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1970 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005f	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 70   :         if (_Count > _Max_possible) {

  00062	8b f7		 mov	 esi, edi
  00064	3b c7		 cmp	 eax, edi
  00066	0f 43 f0	 cmovae	 esi, eax
  00069	81 fe ff ff ff
	3f		 cmp	 esi, 1073741823		; 3fffffffH
  0006f	0f 87 8d 00 00
	00		 ja	 $LN72@Emplace_re

; 72   :         }
; 73   :     }
; 74   : 
; 75   :     return _Count * _Ty_size;

  00075	8d 04 b5 00 00
	00 00		 lea	 eax, DWORD PTR [esi*4]

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0007c	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  00081	72 0d		 jb	 SHORT $LN24@Emplace_re

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00083	50		 push	 eax
  00084	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00089	83 c4 04	 add	 esp, 4
  0008c	8b f8		 mov	 edi, eax
  0008e	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 240  :         }
; 241  :     }
; 242  : #endif // defined(_M_IX86) || defined(_M_X64)
; 243  : 
; 244  :     if (_Bytes != 0) {

  00090	85 c0		 test	 eax, eax
  00092	74 0d		 je	 SHORT $LN25@Emplace_re

; 87   :         return ::operator new(_Bytes);

  00094	50		 push	 eax
  00095	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0009a	83 c4 04	 add	 esp, 4

; 245  :         return _Traits::_Allocate(_Bytes);

  0009d	8b f8		 mov	 edi, eax
  0009f	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 246  :     }
; 247  : 
; 248  :     return nullptr;

  000a1	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 836  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000a3	8b 45 fc	 mov	 eax, DWORD PTR __Whereoff$1$[ebp]
  000a6	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]
  000a9	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000ac	89 4d fc	 mov	 DWORD PTR tv463[ebp], ecx
  000af	8b 00		 mov	 eax, DWORD PTR [eax]
  000b1	89 01		 mov	 DWORD PTR [ecx], eax

; 837  :         _Constructed_first = _Newvec + _Whereoff;
; 838  : 
; 839  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000b3	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  000b6	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  000b9	8b 13		 mov	 edx, DWORD PTR [ebx]
  000bb	3b c1		 cmp	 eax, ecx
  000bd	75 04		 jne	 SHORT $LN4@Emplace_re
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1939 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bf	8b c7		 mov	 eax, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 845  :         } else { // provide basic guarantee

  000c1	eb 17		 jmp	 SHORT $LN52@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1939 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c3	57		 push	 edi
  000c4	50		 push	 eax
  000c5	52		 push	 edx
  000c6	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCTerrain@@PAPAV1@@std@@YAPAPAVCTerrain@@PAPAV1@00@Z ; std::_Copy_memmove<CTerrain * *,CTerrain * *>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 848  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000cb	8b 45 fc	 mov	 eax, DWORD PTR tv463[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1939 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000ce	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d1	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 848  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000d4	83 c0 04	 add	 eax, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1939 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000d7	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
$LN52@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 848  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000da	50		 push	 eax
  000db	51		 push	 ecx
  000dc	52		 push	 edx
  000dd	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCTerrain@@PAPAV1@@std@@YAPAPAVCTerrain@@PAPAV1@00@Z ; std::_Copy_memmove<CTerrain * *,CTerrain * *>
  000e2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 849  :         }
; 850  :         _CATCH_ALL
; 851  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 852  :         _Al.deallocate(_Newvec, _Newcapacity);
; 853  :         _RERAISE;
; 854  :         _CATCH_END
; 855  : 
; 856  :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  000e5	8b cb		 mov	 ecx, ebx
  000e7	56		 push	 esi
  000e8	ff 75 f8	 push	 DWORD PTR __Newsize$1$[ebp]
  000eb	57		 push	 edi
  000ec	e8 00 00 00 00	 call	 ?_Change_array@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@AAEXQAPAVCTerrain@@II@Z ; std::vector<CTerrain *,std::allocator<CTerrain *> >::_Change_array

; 857  :         return _Newvec + _Whereoff;

  000f1	8b 45 fc	 mov	 eax, DWORD PTR tv463[ebp]

; 858  :     }

  000f4	5f		 pop	 edi
  000f5	5e		 pop	 esi
  000f6	5b		 pop	 ebx
  000f7	8b e5		 mov	 esp, ebp
  000f9	5d		 pop	 ebp
  000fa	c2 08 00	 ret	 8
$LN71@Emplace_re:

; 825  :             _Xlength();

  000fd	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@CAXXZ ; std::vector<CTerrain *,std::allocator<CTerrain *> >::_Xlength
$LN72@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 71   :             _Throw_bad_array_new_length(); // multiply overflow

  00102	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN69@Emplace_re:
  00107	cc		 int	 3
??$_Emplace_reallocate@ABQAVCTerrain@@@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@AAEPAPAVCTerrain@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CTerrain *,std::allocator<CTerrain *> >::_Emplace_reallocate<CTerrain * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
__Oldsize$1$ = 8					; size = 4
__Newsize$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z PROC ; std::vector<CTerrain *,std::allocator<CTerrain *> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT
; _this$ = ecx

; 1511 :     _CONSTEXPR20 void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	57		 push	 edi

; 1512 :         if (_Newsize > max_size()) {

  00007	8b 7d 08	 mov	 edi, DWORD PTR __Newsize$[ebp]
  0000a	89 4d fc	 mov	 DWORD PTR _this$1$[ebp], ecx
  0000d	81 ff ff ff ff
	3f		 cmp	 edi, 1073741823		; 3fffffffH
  00013	0f 87 b5 00 00
	00		 ja	 $LN60@Resize_rea

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  00019	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0001e	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  00021	2b d0		 sub	 edx, eax

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00023	2b c8		 sub	 ecx, eax

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  00025	c1 fa 02	 sar	 edx, 2

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	c1 f9 02	 sar	 ecx, 2

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  0002b	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  00030	89 55 08	 mov	 DWORD PTR __Oldsize$1$[ebp], edx

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00033	8b d1		 mov	 edx, ecx
  00035	d1 ea		 shr	 edx, 1
  00037	2b c2		 sub	 eax, edx
  00039	3b c8		 cmp	 ecx, eax
  0003b	76 17		 jbe	 SHORT $LN10@Resize_rea

; 1967 :             return _Max; // geometric growth would overflow

  0003d	b8 fc ff ff ff	 mov	 eax, -4			; fffffffcH
  00042	be ff ff ff 3f	 mov	 esi, 1073741823		; 3fffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00047	50		 push	 eax
  00048	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  0004d	83 c4 04	 add	 esp, 4
  00050	8b d8		 mov	 ebx, eax
  00052	eb 41		 jmp	 SHORT $LN21@Resize_rea
$LN10@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1970 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00054	8d 34 0a	 lea	 esi, DWORD PTR [edx+ecx]

; 1971 : 
; 1972 :         if (_Geometric < _Newsize) {

  00057	3b f7		 cmp	 esi, edi
  00059	73 1d		 jae	 SHORT $LN11@Resize_rea

; 1973 :             return _Newsize; // geometric growth would be insufficient

  0005b	8b f7		 mov	 esi, edi
$LN18@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 75   :     return _Count * _Ty_size;

  0005d	8d 04 b5 00 00
	00 00		 lea	 eax, DWORD PTR [esi*4]

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00064	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  00069	72 17		 jb	 SHORT $LN22@Resize_rea

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0006b	50		 push	 eax
  0006c	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00071	83 c4 04	 add	 esp, 4
  00074	8b d8		 mov	 ebx, eax
  00076	eb 1d		 jmp	 SHORT $LN21@Resize_rea
$LN11@Resize_rea:

; 70   :         if (_Count > _Max_possible) {

  00078	81 fe ff ff ff
	3f		 cmp	 esi, 1073741823		; 3fffffffH
  0007e	77 53		 ja	 SHORT $LN61@Resize_rea
  00080	eb db		 jmp	 SHORT $LN18@Resize_rea
$LN22@Resize_rea:

; 244  :     if (_Bytes != 0) {

  00082	85 c0		 test	 eax, eax
  00084	74 0d		 je	 SHORT $LN23@Resize_rea

; 87   :         return ::operator new(_Bytes);

  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0008c	83 c4 04	 add	 esp, 4

; 245  :         return _Traits::_Allocate(_Bytes);

  0008f	8b d8		 mov	 ebx, eax
  00091	eb 02		 jmp	 SHORT $LN21@Resize_rea
$LN23@Resize_rea:

; 246  :     }
; 247  : 
; 248  :     return nullptr;

  00093	33 db		 xor	 ebx, ebx
$LN21@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1525 :         const pointer _Appended_first = _Newvec + _Oldsize;

  00095	8b 55 08	 mov	 edx, DWORD PTR __Oldsize$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2035 :             _Zero_range(_PFirst, _PFirst + _Count);

  00098	8b c7		 mov	 eax, edi
  0009a	2b c2		 sub	 eax, edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1525 :         const pointer _Appended_first = _Newvec + _Oldsize;

  0009c	8d 0c 93	 lea	 ecx, DWORD PTR [ebx+edx*4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2035 :             _Zero_range(_PFirst, _PFirst + _Count);

  0009f	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  000a2	50		 push	 eax
  000a3	51		 push	 ecx
  000a4	e8 00 00 00 00	 call	 ??$_Zero_range@PAPAVCTerrain@@@std@@YAPAPAVCTerrain@@QAPAV1@0@Z ; std::_Zero_range<CTerrain * *>

; 1939 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000a9	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  000ac	53		 push	 ebx
  000ad	ff 70 04	 push	 DWORD PTR [eax+4]
  000b0	ff 30		 push	 DWORD PTR [eax]
  000b2	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCTerrain@@PAPAV1@@std@@YAPAPAVCTerrain@@PAPAV1@00@Z ; std::_Copy_memmove<CTerrain * *,CTerrain * *>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1547 :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  000b7	8b 4d fc	 mov	 ecx, DWORD PTR _this$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1939 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000ba	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1547 :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  000bd	56		 push	 esi
  000be	57		 push	 edi
  000bf	53		 push	 ebx
  000c0	e8 00 00 00 00	 call	 ?_Change_array@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@AAEXQAPAVCTerrain@@II@Z ; std::vector<CTerrain *,std::allocator<CTerrain *> >::_Change_array

; 1548 :     }

  000c5	5f		 pop	 edi
  000c6	5e		 pop	 esi
  000c7	5b		 pop	 ebx
  000c8	8b e5		 mov	 esp, ebp
  000ca	5d		 pop	 ebp
  000cb	c2 08 00	 ret	 8
$LN60@Resize_rea:

; 1513 :             _Xlength();

  000ce	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@CAXXZ ; std::vector<CTerrain *,std::allocator<CTerrain *> >::_Xlength
$LN61@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 71   :             _Throw_bad_array_new_length(); // multiply overflow

  000d3	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN58@Resize_rea:
  000d8	cc		 int	 3
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ENDP ; std::vector<CTerrain *,std::allocator<CTerrain *> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCTerrain@@PAPAV1@@std@@YAPAPAVCTerrain@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCTerrain@@PAPAV1@@std@@YAPAPAVCTerrain@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CTerrain * *,CTerrain * *>, COMDAT

; 4526 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4527 :     auto _FirstPtr              = _To_address(_First);
; 4528 :     auto _LastPtr               = _To_address(_Last);
; 4529 :     auto _DestPtr               = _To_address(_Dest);
; 4530 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4531 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4532 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4535 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4536 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4537 :     } else {
; 4538 :         return _Dest + (_LastPtr - _FirstPtr);
; 4539 :     }
; 4540 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCTerrain@@PAPAV1@@std@@YAPAPAVCTerrain@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CTerrain * *,CTerrain * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCArea@@@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@AAEPAPAVCArea@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
__Newsize$1$ = -8					; size = 4
tv463 = -4						; size = 4
__Whereoff$1$ = -4					; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCArea@@@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@AAEPAPAVCArea@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CArea *,std::allocator<CArea *> >::_Emplace_reallocate<CArea * const &>, COMDAT
; _this$ = ecx

; 812  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 813  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 814  :         _Alty& _Al        = _Getal();
; 815  :         auto& _My_data    = _Mypair._Myval2;
; 816  :         pointer& _Myfirst = _My_data._Myfirst;
; 817  :         pointer& _Mylast  = _My_data._Mylast;
; 818  : 
; 819  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 820  : 
; 821  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00006	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  00009	53		 push	 ebx
  0000a	8b d9		 mov	 ebx, ecx
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	8b 13		 mov	 edx, DWORD PTR [ebx]
  00010	2b c2		 sub	 eax, edx
  00012	c1 f8 02	 sar	 eax, 2
  00015	89 45 fc	 mov	 DWORD PTR __Whereoff$1$[ebp], eax

; 822  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00018	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0001b	2b c2		 sub	 eax, edx
  0001d	c1 f8 02	 sar	 eax, 2

; 823  : 
; 824  :         if (_Oldsize == max_size()) {

  00020	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00025	0f 84 d2 00 00
	00		 je	 $LN71@Emplace_re

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002b	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]

; 826  :         }
; 827  : 
; 828  :         const size_type _Newsize     = _Oldsize + 1;

  0002e	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00031	2b ca		 sub	 ecx, edx

; 826  :         }
; 827  : 
; 828  :         const size_type _Newsize     = _Oldsize + 1;

  00033	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00036	c1 f9 02	 sar	 ecx, 2

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00039	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003e	8b d1		 mov	 edx, ecx
  00040	d1 ea		 shr	 edx, 1
  00042	2b c2		 sub	 eax, edx
  00044	3b c8		 cmp	 ecx, eax
  00046	76 17		 jbe	 SHORT $LN12@Emplace_re

; 1967 :             return _Max; // geometric growth would overflow

  00048	b8 fc ff ff ff	 mov	 eax, -4			; fffffffcH
  0004d	be ff ff ff 3f	 mov	 esi, 1073741823		; 3fffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00058	83 c4 04	 add	 esp, 4
  0005b	8b f8		 mov	 edi, eax
  0005d	eb 44		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1970 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005f	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 70   :         if (_Count > _Max_possible) {

  00062	8b f7		 mov	 esi, edi
  00064	3b c7		 cmp	 eax, edi
  00066	0f 43 f0	 cmovae	 esi, eax
  00069	81 fe ff ff ff
	3f		 cmp	 esi, 1073741823		; 3fffffffH
  0006f	0f 87 8d 00 00
	00		 ja	 $LN72@Emplace_re

; 72   :         }
; 73   :     }
; 74   : 
; 75   :     return _Count * _Ty_size;

  00075	8d 04 b5 00 00
	00 00		 lea	 eax, DWORD PTR [esi*4]

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0007c	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  00081	72 0d		 jb	 SHORT $LN24@Emplace_re

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00083	50		 push	 eax
  00084	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00089	83 c4 04	 add	 esp, 4
  0008c	8b f8		 mov	 edi, eax
  0008e	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 240  :         }
; 241  :     }
; 242  : #endif // defined(_M_IX86) || defined(_M_X64)
; 243  : 
; 244  :     if (_Bytes != 0) {

  00090	85 c0		 test	 eax, eax
  00092	74 0d		 je	 SHORT $LN25@Emplace_re

; 87   :         return ::operator new(_Bytes);

  00094	50		 push	 eax
  00095	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0009a	83 c4 04	 add	 esp, 4

; 245  :         return _Traits::_Allocate(_Bytes);

  0009d	8b f8		 mov	 edi, eax
  0009f	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 246  :     }
; 247  : 
; 248  :     return nullptr;

  000a1	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 836  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000a3	8b 45 fc	 mov	 eax, DWORD PTR __Whereoff$1$[ebp]
  000a6	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]
  000a9	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000ac	89 4d fc	 mov	 DWORD PTR tv463[ebp], ecx
  000af	8b 00		 mov	 eax, DWORD PTR [eax]
  000b1	89 01		 mov	 DWORD PTR [ecx], eax

; 837  :         _Constructed_first = _Newvec + _Whereoff;
; 838  : 
; 839  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000b3	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  000b6	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  000b9	8b 13		 mov	 edx, DWORD PTR [ebx]
  000bb	3b c1		 cmp	 eax, ecx
  000bd	75 04		 jne	 SHORT $LN4@Emplace_re
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1939 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bf	8b c7		 mov	 eax, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 845  :         } else { // provide basic guarantee

  000c1	eb 17		 jmp	 SHORT $LN52@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1939 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c3	57		 push	 edi
  000c4	50		 push	 eax
  000c5	52		 push	 edx
  000c6	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCArea@@PAPAV1@@std@@YAPAPAVCArea@@PAPAV1@00@Z ; std::_Copy_memmove<CArea * *,CArea * *>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 848  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000cb	8b 45 fc	 mov	 eax, DWORD PTR tv463[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1939 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000ce	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d1	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 848  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000d4	83 c0 04	 add	 eax, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1939 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000d7	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
$LN52@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 848  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000da	50		 push	 eax
  000db	51		 push	 ecx
  000dc	52		 push	 edx
  000dd	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCArea@@PAPAV1@@std@@YAPAPAVCArea@@PAPAV1@00@Z ; std::_Copy_memmove<CArea * *,CArea * *>
  000e2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 849  :         }
; 850  :         _CATCH_ALL
; 851  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 852  :         _Al.deallocate(_Newvec, _Newcapacity);
; 853  :         _RERAISE;
; 854  :         _CATCH_END
; 855  : 
; 856  :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  000e5	8b cb		 mov	 ecx, ebx
  000e7	56		 push	 esi
  000e8	ff 75 f8	 push	 DWORD PTR __Newsize$1$[ebp]
  000eb	57		 push	 edi
  000ec	e8 00 00 00 00	 call	 ?_Change_array@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@AAEXQAPAVCArea@@II@Z ; std::vector<CArea *,std::allocator<CArea *> >::_Change_array

; 857  :         return _Newvec + _Whereoff;

  000f1	8b 45 fc	 mov	 eax, DWORD PTR tv463[ebp]

; 858  :     }

  000f4	5f		 pop	 edi
  000f5	5e		 pop	 esi
  000f6	5b		 pop	 ebx
  000f7	8b e5		 mov	 esp, ebp
  000f9	5d		 pop	 ebp
  000fa	c2 08 00	 ret	 8
$LN71@Emplace_re:

; 825  :             _Xlength();

  000fd	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@CAXXZ ; std::vector<CArea *,std::allocator<CArea *> >::_Xlength
$LN72@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 71   :             _Throw_bad_array_new_length(); // multiply overflow

  00102	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN69@Emplace_re:
  00107	cc		 int	 3
??$_Emplace_reallocate@ABQAVCArea@@@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@AAEPAPAVCArea@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CArea *,std::allocator<CArea *> >::_Emplace_reallocate<CArea * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
__Oldsize$1$ = 8					; size = 4
__Newsize$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z PROC ; std::vector<CArea *,std::allocator<CArea *> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT
; _this$ = ecx

; 1511 :     _CONSTEXPR20 void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	57		 push	 edi

; 1512 :         if (_Newsize > max_size()) {

  00007	8b 7d 08	 mov	 edi, DWORD PTR __Newsize$[ebp]
  0000a	89 4d fc	 mov	 DWORD PTR _this$1$[ebp], ecx
  0000d	81 ff ff ff ff
	3f		 cmp	 edi, 1073741823		; 3fffffffH
  00013	0f 87 b5 00 00
	00		 ja	 $LN60@Resize_rea

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  00019	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0001e	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  00021	2b d0		 sub	 edx, eax

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00023	2b c8		 sub	 ecx, eax

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  00025	c1 fa 02	 sar	 edx, 2

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	c1 f9 02	 sar	 ecx, 2

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  0002b	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  00030	89 55 08	 mov	 DWORD PTR __Oldsize$1$[ebp], edx

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00033	8b d1		 mov	 edx, ecx
  00035	d1 ea		 shr	 edx, 1
  00037	2b c2		 sub	 eax, edx
  00039	3b c8		 cmp	 ecx, eax
  0003b	76 17		 jbe	 SHORT $LN10@Resize_rea

; 1967 :             return _Max; // geometric growth would overflow

  0003d	b8 fc ff ff ff	 mov	 eax, -4			; fffffffcH
  00042	be ff ff ff 3f	 mov	 esi, 1073741823		; 3fffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00047	50		 push	 eax
  00048	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  0004d	83 c4 04	 add	 esp, 4
  00050	8b d8		 mov	 ebx, eax
  00052	eb 41		 jmp	 SHORT $LN21@Resize_rea
$LN10@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1970 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00054	8d 34 0a	 lea	 esi, DWORD PTR [edx+ecx]

; 1971 : 
; 1972 :         if (_Geometric < _Newsize) {

  00057	3b f7		 cmp	 esi, edi
  00059	73 1d		 jae	 SHORT $LN11@Resize_rea

; 1973 :             return _Newsize; // geometric growth would be insufficient

  0005b	8b f7		 mov	 esi, edi
$LN18@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 75   :     return _Count * _Ty_size;

  0005d	8d 04 b5 00 00
	00 00		 lea	 eax, DWORD PTR [esi*4]

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00064	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  00069	72 17		 jb	 SHORT $LN22@Resize_rea

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0006b	50		 push	 eax
  0006c	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00071	83 c4 04	 add	 esp, 4
  00074	8b d8		 mov	 ebx, eax
  00076	eb 1d		 jmp	 SHORT $LN21@Resize_rea
$LN11@Resize_rea:

; 70   :         if (_Count > _Max_possible) {

  00078	81 fe ff ff ff
	3f		 cmp	 esi, 1073741823		; 3fffffffH
  0007e	77 53		 ja	 SHORT $LN61@Resize_rea
  00080	eb db		 jmp	 SHORT $LN18@Resize_rea
$LN22@Resize_rea:

; 244  :     if (_Bytes != 0) {

  00082	85 c0		 test	 eax, eax
  00084	74 0d		 je	 SHORT $LN23@Resize_rea

; 87   :         return ::operator new(_Bytes);

  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0008c	83 c4 04	 add	 esp, 4

; 245  :         return _Traits::_Allocate(_Bytes);

  0008f	8b d8		 mov	 ebx, eax
  00091	eb 02		 jmp	 SHORT $LN21@Resize_rea
$LN23@Resize_rea:

; 246  :     }
; 247  : 
; 248  :     return nullptr;

  00093	33 db		 xor	 ebx, ebx
$LN21@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1525 :         const pointer _Appended_first = _Newvec + _Oldsize;

  00095	8b 55 08	 mov	 edx, DWORD PTR __Oldsize$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2035 :             _Zero_range(_PFirst, _PFirst + _Count);

  00098	8b c7		 mov	 eax, edi
  0009a	2b c2		 sub	 eax, edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1525 :         const pointer _Appended_first = _Newvec + _Oldsize;

  0009c	8d 0c 93	 lea	 ecx, DWORD PTR [ebx+edx*4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2035 :             _Zero_range(_PFirst, _PFirst + _Count);

  0009f	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  000a2	50		 push	 eax
  000a3	51		 push	 ecx
  000a4	e8 00 00 00 00	 call	 ??$_Zero_range@PAPAVCArea@@@std@@YAPAPAVCArea@@QAPAV1@0@Z ; std::_Zero_range<CArea * *>

; 1939 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000a9	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  000ac	53		 push	 ebx
  000ad	ff 70 04	 push	 DWORD PTR [eax+4]
  000b0	ff 30		 push	 DWORD PTR [eax]
  000b2	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCArea@@PAPAV1@@std@@YAPAPAVCArea@@PAPAV1@00@Z ; std::_Copy_memmove<CArea * *,CArea * *>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1547 :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  000b7	8b 4d fc	 mov	 ecx, DWORD PTR _this$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1939 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000ba	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1547 :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  000bd	56		 push	 esi
  000be	57		 push	 edi
  000bf	53		 push	 ebx
  000c0	e8 00 00 00 00	 call	 ?_Change_array@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@AAEXQAPAVCArea@@II@Z ; std::vector<CArea *,std::allocator<CArea *> >::_Change_array

; 1548 :     }

  000c5	5f		 pop	 edi
  000c6	5e		 pop	 esi
  000c7	5b		 pop	 ebx
  000c8	8b e5		 mov	 esp, ebp
  000ca	5d		 pop	 ebp
  000cb	c2 08 00	 ret	 8
$LN60@Resize_rea:

; 1513 :             _Xlength();

  000ce	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@CAXXZ ; std::vector<CArea *,std::allocator<CArea *> >::_Xlength
$LN61@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 71   :             _Throw_bad_array_new_length(); // multiply overflow

  000d3	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN58@Resize_rea:
  000d8	cc		 int	 3
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ENDP ; std::vector<CArea *,std::allocator<CArea *> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCArea@@PAPAV1@@std@@YAPAPAVCArea@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCArea@@PAPAV1@@std@@YAPAPAVCArea@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CArea * *,CArea * *>, COMDAT

; 4526 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4527 :     auto _FirstPtr              = _To_address(_First);
; 4528 :     auto _LastPtr               = _To_address(_Last);
; 4529 :     auto _DestPtr               = _To_address(_Dest);
; 4530 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4531 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4532 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4535 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4536 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4537 :     } else {
; 4538 :         return _Dest + (_LastPtr - _FirstPtr);
; 4539 :     }
; 4540 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCArea@@PAPAV1@@std@@YAPAPAVCArea@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CArea * *,CArea * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEPAXI@Z PROC ; RangeTester<FGetShadowReceiverFromCollisionData>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SpherePackCallback@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 0c		 push	 12			; 0000000cH
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_G?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEPAXI@Z ENDP ; RangeTester<FGetShadowReceiverFromCollisionData>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h
;	COMDAT ?PointTest2dCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_sphere$ = 12						; size = 4
_pInstance$ = 16					; size = 4
_state$ = 16						; size = 4
?PointTest2dCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z PROC ; RangeTester<FGetShadowReceiverFromCollisionData>::PointTest2dCallback, COMDAT
; _this$ = ecx

; 50   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 51   : #ifdef SPHERELIB_STRICT
; 52   : 		if (sphere->IS_SPHERE)
; 53   : 			puts("RangeTester::PointTest2dCallback");
; 54   : #endif
; 55   : 		if (state!=VS_OUTSIDE)

  00003	83 7d 10 02	 cmp	 DWORD PTR _state$[ebp], 2
  00007	74 5b		 je	 SHORT $LN7@PointTest2

; 56   : 		{
; 57   : #ifdef SPHERELIB_STRICT
; 58   : 			puts("FIND!!");
; 59   : #endif
; 60   : 			(*f)((CGraphicObjectInstance *)sphere->GetUserData());

  00009	8b 45 0c	 mov	 eax, DWORD PTR _sphere$[ebp]
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	8b 79 04	 mov	 edi, DWORD PTR [ecx+4]
  00011	8b 70 44	 mov	 esi, DWORD PTR [eax+68]
  00014	89 75 10	 mov	 DWORD PTR _pInstance$[ebp], esi
  00017	85 f6		 test	 esi, esi
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 175  : 		if (!pInstance)

  00019	74 47		 je	 SHORT $LN16@PointTest2

; 176  : 			return;
; 177  : 
; 178  : 		if (TREE_OBJECT == pInstance->GetType() || ACTOR_OBJECT == pInstance->GetType() || EFFECT_OBJECT == pInstance->GetType())

  0001b	8b 06		 mov	 eax, DWORD PTR [esi]
  0001d	8b ce		 mov	 ecx, esi
  0001f	ff 50 04	 call	 DWORD PTR [eax+4]
  00022	3d a6 f7 c9 8a	 cmp	 eax, -1966475354	; 8ac9f7a6H
  00027	74 39		 je	 SHORT $LN16@PointTest2
  00029	8b 06		 mov	 eax, DWORD PTR [esi]
  0002b	8b ce		 mov	 ecx, esi
  0002d	ff 50 04	 call	 DWORD PTR [eax+4]
  00030	3d 24 6c a7 29	 cmp	 eax, 698838052		; 29a76c24H
  00035	74 2b		 je	 SHORT $LN16@PointTest2
  00037	8b 06		 mov	 eax, DWORD PTR [esi]
  00039	8b ce		 mov	 ecx, esi
  0003b	ff 50 04	 call	 DWORD PTR [eax+4]
  0003e	3d c6 97 fa 1c	 cmp	 eax, 486184902		; 1cfa97c6H
  00043	74 1d		 je	 SHORT $LN16@PointTest2

; 179  : 			return;
; 180  : 		if (pInstance->CollisionDynamicSphere(*m_pdsi))

  00045	ff 77 08	 push	 DWORD PTR [edi+8]
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?CollisionDynamicSphere@CGraphicObjectInstance@@QBE_NABUCDynamicSphereInstance@@@Z ; CGraphicObjectInstance::CollisionDynamicSphere
  0004f	84 c0		 test	 al, al
  00051	74 0f		 je	 SHORT $LN16@PointTest2

; 181  : 		{
; 182  : 			m_pkVct_pkShadowReceiver->push_back(pInstance);

  00053	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00056	8d 45 10	 lea	 eax, DWORD PTR _pInstance$[ebp]
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ?push_back@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@QAEXABQAVCGraphicObjectInstance@@@Z ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::push_back

; 183  : 			m_bCollide = true;

  0005f	c6 07 01	 mov	 BYTE PTR [edi], 1
$LN16@PointTest2:
  00062	5f		 pop	 edi
  00063	5e		 pop	 esi
$LN7@PointTest2:
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h

; 62   : 	}

  00064	5d		 pop	 ebp
  00065	c2 0c 00	 ret	 12			; 0000000cH
?PointTest2dCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z ENDP ; RangeTester<FGetShadowReceiverFromCollisionData>::PointTest2dCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h
;	COMDAT ?RangeTestCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_distance$ = 12						; size = 4
_sphere$ = 16						; size = 4
_pInstance$ = 20					; size = 4
_state$ = 20						; size = 4
?RangeTestCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z PROC ; RangeTester<FGetShadowReceiverFromCollisionData>::RangeTestCallback, COMDAT
; _this$ = ecx

; 40   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 41   : #ifdef SPHERELIB_STRICT
; 42   : 		if (sphere->IS_SPHERE)
; 43   : 			puts("RangeTester::RangeTestCallback");
; 44   : #endif
; 45   : 		if (state!=VS_OUTSIDE)

  00003	83 7d 14 02	 cmp	 DWORD PTR _state$[ebp], 2
  00007	74 5b		 je	 SHORT $LN7@RangeTestC

; 46   : 			(*f)((CGraphicObjectInstance *)sphere->GetUserData());

  00009	8b 45 10	 mov	 eax, DWORD PTR _sphere$[ebp]
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	8b 79 04	 mov	 edi, DWORD PTR [ecx+4]
  00011	8b 70 44	 mov	 esi, DWORD PTR [eax+68]
  00014	89 75 14	 mov	 DWORD PTR _pInstance$[ebp], esi
  00017	85 f6		 test	 esi, esi
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 175  : 		if (!pInstance)

  00019	74 47		 je	 SHORT $LN16@RangeTestC

; 176  : 			return;
; 177  : 
; 178  : 		if (TREE_OBJECT == pInstance->GetType() || ACTOR_OBJECT == pInstance->GetType() || EFFECT_OBJECT == pInstance->GetType())

  0001b	8b 06		 mov	 eax, DWORD PTR [esi]
  0001d	8b ce		 mov	 ecx, esi
  0001f	ff 50 04	 call	 DWORD PTR [eax+4]
  00022	3d a6 f7 c9 8a	 cmp	 eax, -1966475354	; 8ac9f7a6H
  00027	74 39		 je	 SHORT $LN16@RangeTestC
  00029	8b 06		 mov	 eax, DWORD PTR [esi]
  0002b	8b ce		 mov	 ecx, esi
  0002d	ff 50 04	 call	 DWORD PTR [eax+4]
  00030	3d 24 6c a7 29	 cmp	 eax, 698838052		; 29a76c24H
  00035	74 2b		 je	 SHORT $LN16@RangeTestC
  00037	8b 06		 mov	 eax, DWORD PTR [esi]
  00039	8b ce		 mov	 ecx, esi
  0003b	ff 50 04	 call	 DWORD PTR [eax+4]
  0003e	3d c6 97 fa 1c	 cmp	 eax, 486184902		; 1cfa97c6H
  00043	74 1d		 je	 SHORT $LN16@RangeTestC

; 179  : 			return;
; 180  : 		if (pInstance->CollisionDynamicSphere(*m_pdsi))

  00045	ff 77 08	 push	 DWORD PTR [edi+8]
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?CollisionDynamicSphere@CGraphicObjectInstance@@QBE_NABUCDynamicSphereInstance@@@Z ; CGraphicObjectInstance::CollisionDynamicSphere
  0004f	84 c0		 test	 al, al
  00051	74 0f		 je	 SHORT $LN16@RangeTestC

; 181  : 		{
; 182  : 			m_pkVct_pkShadowReceiver->push_back(pInstance);

  00053	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00056	8d 45 14	 lea	 eax, DWORD PTR _pInstance$[ebp]
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ?push_back@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@QAEXABQAVCGraphicObjectInstance@@@Z ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::push_back

; 183  : 			m_bCollide = true;

  0005f	c6 07 01	 mov	 BYTE PTR [edi], 1
$LN16@RangeTestC:
  00062	5f		 pop	 edi
  00063	5e		 pop	 esi
$LN7@RangeTestC:
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h

; 47   : 	}

  00064	5d		 pop	 ebp
  00065	c2 10 00	 ret	 16			; 00000010H
?RangeTestCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z ENDP ; RangeTester<FGetShadowReceiverFromCollisionData>::RangeTestCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h
;	COMDAT ?VisibilityCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
_sphere$ = 12						; size = 4
_state$ = 16						; size = 4
?VisibilityCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z PROC ; RangeTester<FGetShadowReceiverFromCollisionData>::VisibilityCallback, COMDAT
; _this$ = ecx

; 37   : 	virtual void VisibilityCallback(const Frustum &f,SpherePack *sphere,ViewState state){};

  00000	c2 0c 00	 ret	 12			; 0000000cH
?VisibilityCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z ENDP ; RangeTester<FGetShadowReceiverFromCollisionData>::VisibilityCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h
;	COMDAT ?RayTraceCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z
_TEXT	SEGMENT
_p1$ = 8						; size = 4
_dir$ = 12						; size = 4
_pInstance$ = 16					; size = 4
_distance$ = 16						; size = 4
_sect$ = 20						; size = 4
_sphere$ = 24						; size = 4
?RayTraceCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z PROC ; RangeTester<FGetShadowReceiverFromCollisionData>::RayTraceCallback, COMDAT
; _this$ = ecx

; 27   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 28   : #ifdef SPHERELIB_STRICT
; 29   : 		if (sphere->IS_SPHERE)
; 30   : 			puts("RangeTester::RayTraceCallback");
; 31   : #endif
; 32   : 		if (dist<=0.0f || dist>=distance)

  00003	f3 0f 10 49 08	 movss	 xmm1, DWORD PTR [ecx+8]
  00008	0f 57 c0	 xorps	 xmm0, xmm0
  0000b	0f 2f c1	 comiss	 xmm0, xmm1
  0000e	73 06		 jae	 SHORT $LN3@RayTraceCa
  00010	0f 2f 4d 10	 comiss	 xmm1, DWORD PTR _distance$[ebp]
  00014	72 5b		 jb	 SHORT $LN8@RayTraceCa
$LN3@RayTraceCa:

; 33   : 			(*f)((CGraphicObjectInstance *)sphere->GetUserData());

  00016	8b 45 18	 mov	 eax, DWORD PTR _sphere$[ebp]
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	8b 79 04	 mov	 edi, DWORD PTR [ecx+4]
  0001e	8b 70 44	 mov	 esi, DWORD PTR [eax+68]
  00021	89 75 10	 mov	 DWORD PTR _pInstance$[ebp], esi
  00024	85 f6		 test	 esi, esi
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 175  : 		if (!pInstance)

  00026	74 47		 je	 SHORT $LN17@RayTraceCa

; 176  : 			return;
; 177  : 
; 178  : 		if (TREE_OBJECT == pInstance->GetType() || ACTOR_OBJECT == pInstance->GetType() || EFFECT_OBJECT == pInstance->GetType())

  00028	8b 06		 mov	 eax, DWORD PTR [esi]
  0002a	8b ce		 mov	 ecx, esi
  0002c	ff 50 04	 call	 DWORD PTR [eax+4]
  0002f	3d a6 f7 c9 8a	 cmp	 eax, -1966475354	; 8ac9f7a6H
  00034	74 39		 je	 SHORT $LN17@RayTraceCa
  00036	8b 06		 mov	 eax, DWORD PTR [esi]
  00038	8b ce		 mov	 ecx, esi
  0003a	ff 50 04	 call	 DWORD PTR [eax+4]
  0003d	3d 24 6c a7 29	 cmp	 eax, 698838052		; 29a76c24H
  00042	74 2b		 je	 SHORT $LN17@RayTraceCa
  00044	8b 06		 mov	 eax, DWORD PTR [esi]
  00046	8b ce		 mov	 ecx, esi
  00048	ff 50 04	 call	 DWORD PTR [eax+4]
  0004b	3d c6 97 fa 1c	 cmp	 eax, 486184902		; 1cfa97c6H
  00050	74 1d		 je	 SHORT $LN17@RayTraceCa

; 179  : 			return;
; 180  : 		if (pInstance->CollisionDynamicSphere(*m_pdsi))

  00052	ff 77 08	 push	 DWORD PTR [edi+8]
  00055	8b ce		 mov	 ecx, esi
  00057	e8 00 00 00 00	 call	 ?CollisionDynamicSphere@CGraphicObjectInstance@@QBE_NABUCDynamicSphereInstance@@@Z ; CGraphicObjectInstance::CollisionDynamicSphere
  0005c	84 c0		 test	 al, al
  0005e	74 0f		 je	 SHORT $LN17@RayTraceCa

; 181  : 		{
; 182  : 			m_pkVct_pkShadowReceiver->push_back(pInstance);

  00060	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00063	8d 45 10	 lea	 eax, DWORD PTR _pInstance$[ebp]
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ?push_back@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@QAEXABQAVCGraphicObjectInstance@@@Z ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::push_back

; 183  : 			m_bCollide = true;

  0006c	c6 07 01	 mov	 BYTE PTR [edi], 1
$LN17@RayTraceCa:
  0006f	5f		 pop	 edi
  00070	5e		 pop	 esi
$LN8@RayTraceCa:
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h

; 34   : 	};

  00071	5d		 pop	 ebp
  00072	c2 14 00	 ret	 20			; 00000014H
?RayTraceCallback@?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z ENDP ; RangeTester<FGetShadowReceiverFromCollisionData>::RayTraceCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h
;	COMDAT ??1?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAE@XZ
_TEXT	SEGMENT
??1?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAE@XZ PROC ; RangeTester<FGetShadowReceiverFromCollisionData>::~RangeTester<FGetShadowReceiverFromCollisionData>, COMDAT
; _this$ = ecx

; 19   : 	{}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SpherePackCallback@@6B@
  00006	c3		 ret	 0
??1?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAE@XZ ENDP ; RangeTester<FGetShadowReceiverFromCollisionData>::~RangeTester<FGetShadowReceiverFromCollisionData>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Sort_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@0HU?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z
_TEXT	SEGMENT
__Mid$1 = -8						; size = 8
__First$ = 8						; size = 4
__Val$2 = 12						; size = 4
__Last$ = 12						; size = 4
__Ideal$ = 16						; size = 4
__Pred$ = 20						; size = 4
??$_Sort_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@0HU?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z PROC ; std::_Sort_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >, COMDAT

; 8033 : _CONSTEXPR20 void _Sort_unchecked(_RanIt _First, _RanIt _Last, _Iter_diff_t<_RanIt> _Ideal, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 8034 :     // order [_First, _Last)
; 8035 :     for (;;) {
; 8036 :         if (_Last - _First <= _ISORT_MAX) { // small

  00008	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  0000b	8b c6		 mov	 eax, esi
  0000d	57		 push	 edi
  0000e	8b 7d 08	 mov	 edi, DWORD PTR __First$[ebp]
  00011	2b c7		 sub	 eax, edi
  00013	83 e0 fc	 and	 eax, -4			; fffffffcH
  00016	3d 80 00 00 00	 cmp	 eax, 128		; 00000080H
  0001b	7e 65		 jle	 SHORT $LN23@Sort_unche
  0001d	8b 5d 10	 mov	 ebx, DWORD PTR __Ideal$[ebp]
$LL2@Sort_unche:

; 8038 :             return;
; 8039 :         }
; 8040 : 
; 8041 :         if (_Ideal <= 0) { // heap sort if too many divisions

  00020	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  00023	56		 push	 esi
  00024	57		 push	 edi
  00025	85 db		 test	 ebx, ebx
  00027	7e 6d		 jle	 SHORT $LN24@Sort_unche

; 8043 :             _Sort_heap_unchecked(_First, _Last, _Pred);
; 8044 :             return;
; 8045 :         }
; 8046 : 
; 8047 :         // divide and conquer by quicksort
; 8048 :         auto _Mid = _Partition_by_median_guess_unchecked(_First, _Last, _Pred);

  00029	8d 45 f8	 lea	 eax, DWORD PTR __Mid$1[ebp]
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ??$_Partition_by_median_guess_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YA?AU?$pair@PAPAVCGraphicObjectInstance@@PAPAV1@@0@PAPAVCGraphicObjectInstance@@0U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ; std::_Partition_by_median_guess_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >

; 8049 : 
; 8050 :         _Ideal = (_Ideal >> 1) + (_Ideal >> 2); // allow 1.5 log2(N) divisions
; 8051 : 
; 8052 :         if (_Mid.first - _First < _Last - _Mid.second) { // loop on second half

  00032	8b 55 fc	 mov	 edx, DWORD PTR __Mid$1[ebp+4]
  00035	8b c3		 mov	 eax, ebx
  00037	c1 f8 02	 sar	 eax, 2
  0003a	83 c4 10	 add	 esp, 16			; 00000010H
  0003d	d1 fb		 sar	 ebx, 1
  0003f	8b ce		 mov	 ecx, esi
  00041	03 d8		 add	 ebx, eax
  00043	2b ca		 sub	 ecx, edx
  00045	8b 45 f8	 mov	 eax, DWORD PTR __Mid$1[ebp]
  00048	83 e1 fc	 and	 ecx, -4			; fffffffcH
  0004b	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  0004e	2b c7		 sub	 eax, edi
  00050	83 e0 fc	 and	 eax, -4			; fffffffcH
  00053	53		 push	 ebx
  00054	3b c1		 cmp	 eax, ecx
  00056	7d 0f		 jge	 SHORT $LN7@Sort_unche

; 8053 :             _Sort_unchecked(_First, _Mid.first, _Ideal, _Pred);

  00058	8b 45 f8	 mov	 eax, DWORD PTR __Mid$1[ebp]
  0005b	50		 push	 eax
  0005c	57		 push	 edi
  0005d	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@0HU?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ; std::_Sort_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >

; 8054 :             _First = _Mid.second;

  00062	8b 7d fc	 mov	 edi, DWORD PTR __Mid$1[ebp+4]

; 8055 :         } else { // loop on first half

  00065	eb 0a		 jmp	 SHORT $LN36@Sort_unche
$LN7@Sort_unche:

; 8056 :             _Sort_unchecked(_Mid.second, _Last, _Ideal, _Pred);

  00067	56		 push	 esi
  00068	52		 push	 edx
  00069	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@0HU?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ; std::_Sort_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >

; 8057 :             _Last = _Mid.first;

  0006e	8b 75 f8	 mov	 esi, DWORD PTR __Mid$1[ebp]
$LN36@Sort_unche:

; 8034 :     // order [_First, _Last)
; 8035 :     for (;;) {
; 8036 :         if (_Last - _First <= _ISORT_MAX) { // small

  00071	8b c6		 mov	 eax, esi
  00073	83 c4 10	 add	 esp, 16			; 00000010H
  00076	2b c7		 sub	 eax, edi
  00078	83 e0 fc	 and	 eax, -4			; fffffffcH
  0007b	3d 80 00 00 00	 cmp	 eax, 128		; 00000080H
  00080	7f 9e		 jg	 SHORT $LL2@Sort_unche
$LN23@Sort_unche:

; 8037 :             _Insertion_sort_unchecked(_First, _Last, _Pred);

  00082	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  00085	56		 push	 esi
  00086	57		 push	 edi
  00087	e8 00 00 00 00	 call	 ??$_Insertion_sort_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAPAPAVCGraphicObjectInstance@@QAPAV1@0U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ; std::_Insertion_sort_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >
  0008c	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN12@Sort_unche:

; 8058 :         }
; 8059 :     }
; 8060 : }

  0008f	5f		 pop	 edi
  00090	5e		 pop	 esi
  00091	5b		 pop	 ebx
  00092	8b e5		 mov	 esp, ebp
  00094	5d		 pop	 ebp
  00095	c3		 ret	 0
$LN24@Sort_unche:

; 8042 :             _Make_heap_unchecked(_First, _Last, _Pred);

  00096	e8 00 00 00 00	 call	 ??$_Make_heap_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@0U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ; std::_Make_heap_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >

; 6818 :     for (; _Last - _First >= 2; --_Last) {

  0009b	2b f7		 sub	 esi, edi

; 8042 :             _Make_heap_unchecked(_First, _Last, _Pred);

  0009d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 6818 :     for (; _Last - _First >= 2; --_Last) {

  000a0	8b c6		 mov	 eax, esi
  000a2	83 e0 fc	 and	 eax, -4			; fffffffcH
  000a5	83 f8 08	 cmp	 eax, 8
  000a8	7c e5		 jl	 SHORT $LN12@Sort_unche
  000aa	66 0f 1f 44 00
	00		 npad	 6
$LL13@Sort_unche:

; 6476 :         _Iter_value_t<_RanIt> _Val = _STD move(*_Last);

  000b0	8b 44 37 fc	 mov	 eax, DWORD PTR [edi+esi-4]
  000b4	89 45 0c	 mov	 DWORD PTR __Val$2[ebp], eax

; 6465 :     *_Dest      = _STD move(*_First);

  000b7	8b 07		 mov	 eax, DWORD PTR [edi]
  000b9	89 44 37 fc	 mov	 DWORD PTR [edi+esi-4], eax

; 6466 :     using _Diff = _Iter_diff_t<_RanIt>;
; 6467 :     _STD _Pop_heap_hole_by_index(

  000bd	8d 45 0c	 lea	 eax, DWORD PTR __Val$2[ebp]
  000c0	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  000c3	83 c6 fc	 add	 esi, -4			; fffffffcH
  000c6	50		 push	 eax
  000c7	8b c6		 mov	 eax, esi
  000c9	c1 f8 02	 sar	 eax, 2
  000cc	50		 push	 eax
  000cd	6a 00		 push	 0
  000cf	57		 push	 edi
  000d0	e8 00 00 00 00	 call	 ??$_Pop_heap_hole_by_index@PAPAVCGraphicObjectInstance@@PAV1@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@HH$$QAPAV1@U?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ; std::_Pop_heap_hole_by_index<CGraphicObjectInstance * *,CGraphicObjectInstance *,std::_Ref_fn<FPCBlockerDistanceSort> >

; 6818 :     for (; _Last - _First >= 2; --_Last) {

  000d5	8b c6		 mov	 eax, esi

; 6467 :     _STD _Pop_heap_hole_by_index(

  000d7	83 c4 14	 add	 esp, 20			; 00000014H

; 6818 :     for (; _Last - _First >= 2; --_Last) {

  000da	83 e0 fc	 and	 eax, -4			; fffffffcH
  000dd	83 f8 08	 cmp	 eax, 8
  000e0	7d ce		 jge	 SHORT $LL13@Sort_unche

; 8058 :         }
; 8059 :     }
; 8060 : }

  000e2	5f		 pop	 edi
  000e3	5e		 pop	 esi
  000e4	5b		 pop	 ebx
  000e5	8b e5		 mov	 esp, ebp
  000e7	5d		 pop	 ebp
  000e8	c3		 ret	 0
??$_Sort_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@0HU?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ENDP ; std::_Sort_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEPAXI@Z PROC ; RangeTester<FGetShadowReceiverFromHeightData>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SpherePackCallback@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 0c		 push	 12			; 0000000cH
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_G?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEPAXI@Z ENDP ; RangeTester<FGetShadowReceiverFromHeightData>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h
;	COMDAT ?PointTest2dCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_sphere$ = 12						; size = 4
_state$ = 16						; size = 4
?PointTest2dCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z PROC ; RangeTester<FGetShadowReceiverFromHeightData>::PointTest2dCallback, COMDAT
; _this$ = ecx

; 50   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 51   : #ifdef SPHERELIB_STRICT
; 52   : 		if (sphere->IS_SPHERE)
; 53   : 			puts("RangeTester::PointTest2dCallback");
; 54   : #endif
; 55   : 		if (state!=VS_OUTSIDE)

  00003	83 7d 10 02	 cmp	 DWORD PTR _state$[ebp], 2
  00007	0f 84 af 00 00
	00		 je	 $LN8@PointTest2

; 56   : 		{
; 57   : #ifdef SPHERELIB_STRICT
; 58   : 			puts("FIND!!");
; 59   : #endif
; 60   : 			(*f)((CGraphicObjectInstance *)sphere->GetUserData());

  0000d	8b 45 0c	 mov	 eax, DWORD PTR _sphere$[ebp]
  00010	56		 push	 esi
  00011	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00014	57		 push	 edi
  00015	8b 78 44	 mov	 edi, DWORD PTR [eax+68]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 365  : 		m_dwCheckCount++;

  00018	ff 46 08	 inc	 DWORD PTR [esi+8]

; 366  : 
; 367  : 		if (!pInstance)

  0001b	85 ff		 test	 edi, edi
  0001d	0f 84 97 00 00
	00		 je	 $LN19@PointTest2

; 368  : 			return;
; 369  : 
; 370  : 		if (m_fFromY < 0)

  00023	f3 0f 10 4e 14	 movss	 xmm1, DWORD PTR [esi+20]
  00028	0f 57 db	 xorps	 xmm3, xmm3
  0002b	0f 2f d9	 comiss	 xmm3, xmm1
  0002e	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __xmm@80000000800000008000000080000000
  00036	76 08		 jbe	 SHORT $LN6@PointTest2

; 371  : 			m_fFromY = -m_fFromY;

  00038	0f 57 ca	 xorps	 xmm1, xmm2
  0003b	f3 0f 11 4e 14	 movss	 DWORD PTR [esi+20], xmm1
$LN6@PointTest2:

; 372  : 		if (m_fToY < 0)

  00040	f3 0f 10 46 1c	 movss	 xmm0, DWORD PTR [esi+28]
  00045	0f 2f d8	 comiss	 xmm3, xmm0
  00048	76 08		 jbe	 SHORT $LN7@PointTest2

; 373  : 			m_fToY = -m_fToY;

  0004a	0f 57 c2	 xorps	 xmm0, xmm2
  0004d	f3 0f 11 46 1c	 movss	 DWORD PTR [esi+28], xmm0
$LN7@PointTest2:

; 374  : 		if (pInstance->GetObjectHeight(m_fFromX, m_fFromY, &m_fReturnHeight) ||

  00052	f3 0f 10 46 10	 movss	 xmm0, DWORD PTR [esi+16]
  00057	8d 46 20	 lea	 eax, DWORD PTR [esi+32]
  0005a	50		 push	 eax
  0005b	83 ec 08	 sub	 esp, 8
  0005e	8b cf		 mov	 ecx, edi
  00060	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  00066	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006b	e8 00 00 00 00	 call	 ?GetObjectHeight@CGraphicObjectInstance@@QAE_NMMPAM@Z ; CGraphicObjectInstance::GetObjectHeight
  00070	84 c0		 test	 al, al
  00072	75 27		 jne	 SHORT $LN9@PointTest2
  00074	f3 0f 10 46 1c	 movss	 xmm0, DWORD PTR [esi+28]
  00079	8d 46 20	 lea	 eax, DWORD PTR [esi+32]
  0007c	50		 push	 eax
  0007d	83 ec 08	 sub	 esp, 8
  00080	8b cf		 mov	 ecx, edi
  00082	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00088	f3 0f 10 46 18	 movss	 xmm0, DWORD PTR [esi+24]
  0008d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00092	e8 00 00 00 00	 call	 ?GetObjectHeight@CGraphicObjectInstance@@QAE_NMMPAM@Z ; CGraphicObjectInstance::GetObjectHeight
  00097	84 c0		 test	 al, al
  00099	74 1f		 je	 SHORT $LN19@PointTest2
$LN9@PointTest2:

; 375  : 			pInstance->GetObjectHeight(m_fToX, m_fToY, &m_fReturnHeight))
; 376  : 		{
; 377  : 			if (m_dwCollectCount<COLLECT_MAX)

  0009b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0009e	83 f8 64	 cmp	 eax, 100		; 00000064H
  000a1	73 11		 jae	 SHORT $LN10@PointTest2

; 378  : 				m_apkShadowReceiver[m_dwCollectCount++]=pInstance;

  000a3	89 7c 86 24	 mov	 DWORD PTR [esi+eax*4+36], edi
  000a7	ff 46 04	 inc	 DWORD PTR [esi+4]
  000aa	5f		 pop	 edi

; 381  : 
; 382  : 			m_bReceiverFound = true;

  000ab	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1
  000af	5e		 pop	 esi
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h

; 62   : 	}

  000b0	5d		 pop	 ebp
  000b1	c2 0c 00	 ret	 12			; 0000000cH
$LN10@PointTest2:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 380  : 				m_dwCollectOverCount++;

  000b4	ff 06		 inc	 DWORD PTR [esi]

; 381  : 
; 382  : 			m_bReceiverFound = true;

  000b6	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1
$LN19@PointTest2:
  000ba	5f		 pop	 edi
  000bb	5e		 pop	 esi
$LN8@PointTest2:
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h

; 62   : 	}

  000bc	5d		 pop	 ebp
  000bd	c2 0c 00	 ret	 12			; 0000000cH
?PointTest2dCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z ENDP ; RangeTester<FGetShadowReceiverFromHeightData>::PointTest2dCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h
;	COMDAT ?RangeTestCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_distance$ = 12						; size = 4
_sphere$ = 16						; size = 4
_state$ = 20						; size = 4
?RangeTestCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z PROC ; RangeTester<FGetShadowReceiverFromHeightData>::RangeTestCallback, COMDAT
; _this$ = ecx

; 40   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 41   : #ifdef SPHERELIB_STRICT
; 42   : 		if (sphere->IS_SPHERE)
; 43   : 			puts("RangeTester::RangeTestCallback");
; 44   : #endif
; 45   : 		if (state!=VS_OUTSIDE)

  00003	83 7d 14 02	 cmp	 DWORD PTR _state$[ebp], 2
  00007	0f 84 af 00 00
	00		 je	 $LN8@RangeTestC

; 46   : 			(*f)((CGraphicObjectInstance *)sphere->GetUserData());

  0000d	8b 45 10	 mov	 eax, DWORD PTR _sphere$[ebp]
  00010	56		 push	 esi
  00011	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00014	57		 push	 edi
  00015	8b 78 44	 mov	 edi, DWORD PTR [eax+68]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 365  : 		m_dwCheckCount++;

  00018	ff 46 08	 inc	 DWORD PTR [esi+8]

; 366  : 
; 367  : 		if (!pInstance)

  0001b	85 ff		 test	 edi, edi
  0001d	0f 84 97 00 00
	00		 je	 $LN19@RangeTestC

; 368  : 			return;
; 369  : 
; 370  : 		if (m_fFromY < 0)

  00023	f3 0f 10 4e 14	 movss	 xmm1, DWORD PTR [esi+20]
  00028	0f 57 db	 xorps	 xmm3, xmm3
  0002b	0f 2f d9	 comiss	 xmm3, xmm1
  0002e	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __xmm@80000000800000008000000080000000
  00036	76 08		 jbe	 SHORT $LN6@RangeTestC

; 371  : 			m_fFromY = -m_fFromY;

  00038	0f 57 ca	 xorps	 xmm1, xmm2
  0003b	f3 0f 11 4e 14	 movss	 DWORD PTR [esi+20], xmm1
$LN6@RangeTestC:

; 372  : 		if (m_fToY < 0)

  00040	f3 0f 10 46 1c	 movss	 xmm0, DWORD PTR [esi+28]
  00045	0f 2f d8	 comiss	 xmm3, xmm0
  00048	76 08		 jbe	 SHORT $LN7@RangeTestC

; 373  : 			m_fToY = -m_fToY;

  0004a	0f 57 c2	 xorps	 xmm0, xmm2
  0004d	f3 0f 11 46 1c	 movss	 DWORD PTR [esi+28], xmm0
$LN7@RangeTestC:

; 374  : 		if (pInstance->GetObjectHeight(m_fFromX, m_fFromY, &m_fReturnHeight) ||

  00052	f3 0f 10 46 10	 movss	 xmm0, DWORD PTR [esi+16]
  00057	8d 46 20	 lea	 eax, DWORD PTR [esi+32]
  0005a	50		 push	 eax
  0005b	83 ec 08	 sub	 esp, 8
  0005e	8b cf		 mov	 ecx, edi
  00060	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  00066	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006b	e8 00 00 00 00	 call	 ?GetObjectHeight@CGraphicObjectInstance@@QAE_NMMPAM@Z ; CGraphicObjectInstance::GetObjectHeight
  00070	84 c0		 test	 al, al
  00072	75 27		 jne	 SHORT $LN9@RangeTestC
  00074	f3 0f 10 46 1c	 movss	 xmm0, DWORD PTR [esi+28]
  00079	8d 46 20	 lea	 eax, DWORD PTR [esi+32]
  0007c	50		 push	 eax
  0007d	83 ec 08	 sub	 esp, 8
  00080	8b cf		 mov	 ecx, edi
  00082	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00088	f3 0f 10 46 18	 movss	 xmm0, DWORD PTR [esi+24]
  0008d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00092	e8 00 00 00 00	 call	 ?GetObjectHeight@CGraphicObjectInstance@@QAE_NMMPAM@Z ; CGraphicObjectInstance::GetObjectHeight
  00097	84 c0		 test	 al, al
  00099	74 1f		 je	 SHORT $LN19@RangeTestC
$LN9@RangeTestC:

; 375  : 			pInstance->GetObjectHeight(m_fToX, m_fToY, &m_fReturnHeight))
; 376  : 		{
; 377  : 			if (m_dwCollectCount<COLLECT_MAX)

  0009b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0009e	83 f8 64	 cmp	 eax, 100		; 00000064H
  000a1	73 11		 jae	 SHORT $LN10@RangeTestC

; 378  : 				m_apkShadowReceiver[m_dwCollectCount++]=pInstance;

  000a3	89 7c 86 24	 mov	 DWORD PTR [esi+eax*4+36], edi
  000a7	ff 46 04	 inc	 DWORD PTR [esi+4]
  000aa	5f		 pop	 edi

; 381  : 
; 382  : 			m_bReceiverFound = true;

  000ab	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1
  000af	5e		 pop	 esi
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h

; 47   : 	}

  000b0	5d		 pop	 ebp
  000b1	c2 10 00	 ret	 16			; 00000010H
$LN10@RangeTestC:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 380  : 				m_dwCollectOverCount++;

  000b4	ff 06		 inc	 DWORD PTR [esi]

; 381  : 
; 382  : 			m_bReceiverFound = true;

  000b6	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1
$LN19@RangeTestC:
  000ba	5f		 pop	 edi
  000bb	5e		 pop	 esi
$LN8@RangeTestC:
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h

; 47   : 	}

  000bc	5d		 pop	 ebp
  000bd	c2 10 00	 ret	 16			; 00000010H
?RangeTestCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z ENDP ; RangeTester<FGetShadowReceiverFromHeightData>::RangeTestCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h
;	COMDAT ?VisibilityCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
_sphere$ = 12						; size = 4
_state$ = 16						; size = 4
?VisibilityCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z PROC ; RangeTester<FGetShadowReceiverFromHeightData>::VisibilityCallback, COMDAT
; _this$ = ecx

; 37   : 	virtual void VisibilityCallback(const Frustum &f,SpherePack *sphere,ViewState state){};

  00000	c2 0c 00	 ret	 12			; 0000000cH
?VisibilityCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z ENDP ; RangeTester<FGetShadowReceiverFromHeightData>::VisibilityCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h
;	COMDAT ?RayTraceCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z
_TEXT	SEGMENT
_p1$ = 8						; size = 4
_dir$ = 12						; size = 4
_distance$ = 16						; size = 4
_sect$ = 20						; size = 4
_sphere$ = 24						; size = 4
?RayTraceCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z PROC ; RangeTester<FGetShadowReceiverFromHeightData>::RayTraceCallback, COMDAT
; _this$ = ecx

; 27   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 28   : #ifdef SPHERELIB_STRICT
; 29   : 		if (sphere->IS_SPHERE)
; 30   : 			puts("RangeTester::RayTraceCallback");
; 31   : #endif
; 32   : 		if (dist<=0.0f || dist>=distance)

  00003	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  00008	0f 57 d2	 xorps	 xmm2, xmm2
  0000b	0f 2f d0	 comiss	 xmm2, xmm0
  0000e	73 0a		 jae	 SHORT $LN3@RayTraceCa
  00010	0f 2f 45 10	 comiss	 xmm0, DWORD PTR _distance$[ebp]
  00014	0f 82 ac 00 00
	00		 jb	 $LN9@RayTraceCa
$LN3@RayTraceCa:

; 33   : 			(*f)((CGraphicObjectInstance *)sphere->GetUserData());

  0001a	8b 45 18	 mov	 eax, DWORD PTR _sphere$[ebp]
  0001d	56		 push	 esi
  0001e	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00021	57		 push	 edi
  00022	8b 78 44	 mov	 edi, DWORD PTR [eax+68]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 365  : 		m_dwCheckCount++;

  00025	ff 46 08	 inc	 DWORD PTR [esi+8]

; 366  : 
; 367  : 		if (!pInstance)

  00028	85 ff		 test	 edi, edi
  0002a	0f 84 94 00 00
	00		 je	 $LN20@RayTraceCa

; 368  : 			return;
; 369  : 
; 370  : 		if (m_fFromY < 0)

  00030	f3 0f 10 4e 14	 movss	 xmm1, DWORD PTR [esi+20]
  00035	0f 2f d1	 comiss	 xmm2, xmm1
  00038	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __xmm@80000000800000008000000080000000
  00040	76 08		 jbe	 SHORT $LN7@RayTraceCa

; 371  : 			m_fFromY = -m_fFromY;

  00042	0f 57 cb	 xorps	 xmm1, xmm3
  00045	f3 0f 11 4e 14	 movss	 DWORD PTR [esi+20], xmm1
$LN7@RayTraceCa:

; 372  : 		if (m_fToY < 0)

  0004a	f3 0f 10 46 1c	 movss	 xmm0, DWORD PTR [esi+28]
  0004f	0f 2f d0	 comiss	 xmm2, xmm0
  00052	76 08		 jbe	 SHORT $LN8@RayTraceCa

; 373  : 			m_fToY = -m_fToY;

  00054	0f 57 c3	 xorps	 xmm0, xmm3
  00057	f3 0f 11 46 1c	 movss	 DWORD PTR [esi+28], xmm0
$LN8@RayTraceCa:

; 374  : 		if (pInstance->GetObjectHeight(m_fFromX, m_fFromY, &m_fReturnHeight) ||

  0005c	f3 0f 10 46 10	 movss	 xmm0, DWORD PTR [esi+16]
  00061	8d 46 20	 lea	 eax, DWORD PTR [esi+32]
  00064	50		 push	 eax
  00065	83 ec 08	 sub	 esp, 8
  00068	8b cf		 mov	 ecx, edi
  0006a	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  00070	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00075	e8 00 00 00 00	 call	 ?GetObjectHeight@CGraphicObjectInstance@@QAE_NMMPAM@Z ; CGraphicObjectInstance::GetObjectHeight
  0007a	84 c0		 test	 al, al
  0007c	75 27		 jne	 SHORT $LN10@RayTraceCa
  0007e	f3 0f 10 46 1c	 movss	 xmm0, DWORD PTR [esi+28]
  00083	8d 46 20	 lea	 eax, DWORD PTR [esi+32]
  00086	50		 push	 eax
  00087	83 ec 08	 sub	 esp, 8
  0008a	8b cf		 mov	 ecx, edi
  0008c	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00092	f3 0f 10 46 18	 movss	 xmm0, DWORD PTR [esi+24]
  00097	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0009c	e8 00 00 00 00	 call	 ?GetObjectHeight@CGraphicObjectInstance@@QAE_NMMPAM@Z ; CGraphicObjectInstance::GetObjectHeight
  000a1	84 c0		 test	 al, al
  000a3	74 1f		 je	 SHORT $LN20@RayTraceCa
$LN10@RayTraceCa:

; 375  : 			pInstance->GetObjectHeight(m_fToX, m_fToY, &m_fReturnHeight))
; 376  : 		{
; 377  : 			if (m_dwCollectCount<COLLECT_MAX)

  000a5	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000a8	83 f8 64	 cmp	 eax, 100		; 00000064H
  000ab	73 11		 jae	 SHORT $LN11@RayTraceCa

; 378  : 				m_apkShadowReceiver[m_dwCollectCount++]=pInstance;

  000ad	89 7c 86 24	 mov	 DWORD PTR [esi+eax*4+36], edi
  000b1	ff 46 04	 inc	 DWORD PTR [esi+4]
  000b4	5f		 pop	 edi

; 381  : 
; 382  : 			m_bReceiverFound = true;

  000b5	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1
  000b9	5e		 pop	 esi
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h

; 34   : 	};

  000ba	5d		 pop	 ebp
  000bb	c2 14 00	 ret	 20			; 00000014H
$LN11@RayTraceCa:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 380  : 				m_dwCollectOverCount++;

  000be	ff 06		 inc	 DWORD PTR [esi]

; 381  : 
; 382  : 			m_bReceiverFound = true;

  000c0	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1
$LN20@RayTraceCa:
  000c4	5f		 pop	 edi
  000c5	5e		 pop	 esi
$LN9@RayTraceCa:
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h

; 34   : 	};

  000c6	5d		 pop	 ebp
  000c7	c2 14 00	 ret	 20			; 00000014H
?RayTraceCallback@?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z ENDP ; RangeTester<FGetShadowReceiverFromHeightData>::RayTraceCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h
;	COMDAT ??1?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAE@XZ
_TEXT	SEGMENT
??1?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAE@XZ PROC ; RangeTester<FGetShadowReceiverFromHeightData>::~RangeTester<FGetShadowReceiverFromHeightData>, COMDAT
; _this$ = ecx

; 19   : 	{}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SpherePackCallback@@6B@
  00006	c3		 ret	 0
??1?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAE@XZ ENDP ; RangeTester<FGetShadowReceiverFromHeightData>::~RangeTester<FGetShadowReceiverFromHeightData>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00026	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00029	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0002c	74 03		 je	 SHORT $LN24@CDynamicPo

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  0002e	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN24@CDynamicPo:

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00031	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00034	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00037	74 03		 je	 SHORT $LN27@CDynamicPo

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  00039	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN27@CDynamicPo:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  0003c	85 c0		 test	 eax, eax
  0003e	74 41		 je	 SHORT $LN33@CDynamicPo

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00040	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00043	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00045	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00048	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0004e	72 12		 jb	 SHORT $LN49@CDynamicPo

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00050	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00053	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00056	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00058	83 c0 fc	 add	 eax, -4			; fffffffcH
  0005b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0005e	77 6d		 ja	 SHORT $LN71@CDynamicPo

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00060	8b c2		 mov	 eax, edx
$LN49@CDynamicPo:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00062	51		 push	 ecx
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  00069	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00070	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2050 :             _Mylast  = nullptr;

  00073	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2051 :             _Myend   = nullptr;

  0007a	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN33@CDynamicPo:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  00081	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00084	85 c0		 test	 eax, eax
  00086	74 41		 je	 SHORT $LN58@CDynamicPo

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00088	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  0008b	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0008d	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00090	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00096	72 12		 jb	 SHORT $LN74@CDynamicPo

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00098	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0009b	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0009e	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000a0	83 c0 fc	 add	 eax, -4			; fffffffcH
  000a3	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000a6	77 25		 ja	 SHORT $LN71@CDynamicPo

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000a8	8b c2		 mov	 eax, edx
$LN74@CDynamicPo:

; 265  :         ::operator delete(_Ptr, _Bytes);

  000aa	51		 push	 ecx
  000ab	50		 push	 eax
  000ac	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  000b1	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  000b8	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2050 :             _Mylast  = nullptr;

  000bb	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2051 :             _Myend   = nullptr;

  000c2	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN58@CDynamicPo:
  000c9	5f		 pop	 edi
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 142  : 		}

  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	c3		 ret	 0
$LN71@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000cd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN92@CDynamicPo:
  000d2	cc		 int	 3
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00026	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00029	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0002c	74 03		 je	 SHORT $LN24@CDynamicPo

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  0002e	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN24@CDynamicPo:

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00031	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00034	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00037	74 03		 je	 SHORT $LN27@CDynamicPo

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  00039	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN27@CDynamicPo:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  0003c	85 c0		 test	 eax, eax
  0003e	74 41		 je	 SHORT $LN33@CDynamicPo

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00040	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00043	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00045	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00048	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0004e	72 12		 jb	 SHORT $LN49@CDynamicPo

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00050	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00053	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00056	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00058	83 c0 fc	 add	 eax, -4			; fffffffcH
  0005b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0005e	77 6d		 ja	 SHORT $LN71@CDynamicPo

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00060	8b c2		 mov	 eax, edx
$LN49@CDynamicPo:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00062	51		 push	 ecx
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  00069	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00070	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2050 :             _Mylast  = nullptr;

  00073	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2051 :             _Myend   = nullptr;

  0007a	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN33@CDynamicPo:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  00081	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00084	85 c0		 test	 eax, eax
  00086	74 41		 je	 SHORT $LN58@CDynamicPo

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00088	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  0008b	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0008d	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00090	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00096	72 12		 jb	 SHORT $LN74@CDynamicPo

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00098	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0009b	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0009e	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000a0	83 c0 fc	 add	 eax, -4			; fffffffcH
  000a3	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000a6	77 25		 ja	 SHORT $LN71@CDynamicPo

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000a8	8b c2		 mov	 eax, edx
$LN74@CDynamicPo:

; 265  :         ::operator delete(_Ptr, _Bytes);

  000aa	51		 push	 ecx
  000ab	50		 push	 eax
  000ac	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  000b1	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  000b8	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2050 :             _Mylast  = nullptr;

  000bb	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2051 :             _Myend   = nullptr;

  000c2	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN58@CDynamicPo:
  000c9	5f		 pop	 edi
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 142  : 		}

  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	c3		 ret	 0
$LN71@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000cd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN92@CDynamicPo:
  000d2	cc		 int	 3
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00026	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00029	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0002c	74 03		 je	 SHORT $LN24@CDynamicPo

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  0002e	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN24@CDynamicPo:

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00031	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00034	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00037	74 03		 je	 SHORT $LN27@CDynamicPo

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  00039	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN27@CDynamicPo:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  0003c	85 c0		 test	 eax, eax
  0003e	74 41		 je	 SHORT $LN33@CDynamicPo

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00040	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00043	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00045	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00048	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0004e	72 12		 jb	 SHORT $LN49@CDynamicPo

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00050	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00053	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00056	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00058	83 c0 fc	 add	 eax, -4			; fffffffcH
  0005b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0005e	77 6d		 ja	 SHORT $LN71@CDynamicPo

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00060	8b c2		 mov	 eax, edx
$LN49@CDynamicPo:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00062	51		 push	 ecx
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  00069	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00070	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2050 :             _Mylast  = nullptr;

  00073	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2051 :             _Myend   = nullptr;

  0007a	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN33@CDynamicPo:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  00081	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00084	85 c0		 test	 eax, eax
  00086	74 41		 je	 SHORT $LN58@CDynamicPo

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00088	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  0008b	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0008d	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00090	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00096	72 12		 jb	 SHORT $LN74@CDynamicPo

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00098	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0009b	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0009e	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000a0	83 c0 fc	 add	 eax, -4			; fffffffcH
  000a3	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000a6	77 25		 ja	 SHORT $LN71@CDynamicPo

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000a8	8b c2		 mov	 eax, edx
$LN74@CDynamicPo:

; 265  :         ::operator delete(_Ptr, _Bytes);

  000aa	51		 push	 ecx
  000ab	50		 push	 eax
  000ac	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  000b1	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  000b8	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2050 :             _Mylast  = nullptr;

  000bb	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2051 :             _Myend   = nullptr;

  000c2	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN58@CDynamicPo:
  000c9	5f		 pop	 edi
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 142  : 		}

  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	c3		 ret	 0
$LN71@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000cd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN92@CDynamicPo:
  000d2	cc		 int	 3
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00026	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00029	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0002c	74 03		 je	 SHORT $LN24@CDynamicPo

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  0002e	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN24@CDynamicPo:

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00031	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00034	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00037	74 03		 je	 SHORT $LN27@CDynamicPo

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  00039	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN27@CDynamicPo:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  0003c	85 c0		 test	 eax, eax
  0003e	74 41		 je	 SHORT $LN33@CDynamicPo

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00040	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00043	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00045	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00048	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0004e	72 12		 jb	 SHORT $LN49@CDynamicPo

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00050	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00053	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00056	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00058	83 c0 fc	 add	 eax, -4			; fffffffcH
  0005b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0005e	77 6d		 ja	 SHORT $LN71@CDynamicPo

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00060	8b c2		 mov	 eax, edx
$LN49@CDynamicPo:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00062	51		 push	 ecx
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  00069	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00070	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2050 :             _Mylast  = nullptr;

  00073	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2051 :             _Myend   = nullptr;

  0007a	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN33@CDynamicPo:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  00081	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00084	85 c0		 test	 eax, eax
  00086	74 41		 je	 SHORT $LN58@CDynamicPo

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00088	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  0008b	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0008d	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00090	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00096	72 12		 jb	 SHORT $LN74@CDynamicPo

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00098	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0009b	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0009e	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000a0	83 c0 fc	 add	 eax, -4			; fffffffcH
  000a3	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000a6	77 25		 ja	 SHORT $LN71@CDynamicPo

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000a8	8b c2		 mov	 eax, edx
$LN74@CDynamicPo:

; 265  :         ::operator delete(_Ptr, _Bytes);

  000aa	51		 push	 ecx
  000ab	50		 push	 eax
  000ac	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  000b1	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  000b8	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2050 :             _Mylast  = nullptr;

  000bb	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2051 :             _Myend   = nullptr;

  000c2	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN58@CDynamicPo:
  000c9	5f		 pop	 edi
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 142  : 		}

  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	c3		 ret	 0
$LN71@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000cd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN92@CDynamicPo:
  000d2	cc		 int	 3
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00026	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00029	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0002c	74 03		 je	 SHORT $LN24@CDynamicPo

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  0002e	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN24@CDynamicPo:

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00031	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00034	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00037	74 03		 je	 SHORT $LN27@CDynamicPo

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  00039	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN27@CDynamicPo:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  0003c	85 c0		 test	 eax, eax
  0003e	74 41		 je	 SHORT $LN33@CDynamicPo

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00040	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00043	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00045	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00048	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0004e	72 12		 jb	 SHORT $LN49@CDynamicPo

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00050	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00053	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00056	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00058	83 c0 fc	 add	 eax, -4			; fffffffcH
  0005b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0005e	77 6d		 ja	 SHORT $LN71@CDynamicPo

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00060	8b c2		 mov	 eax, edx
$LN49@CDynamicPo:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00062	51		 push	 ecx
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  00069	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00070	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2050 :             _Mylast  = nullptr;

  00073	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2051 :             _Myend   = nullptr;

  0007a	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN33@CDynamicPo:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  00081	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00084	85 c0		 test	 eax, eax
  00086	74 41		 je	 SHORT $LN58@CDynamicPo

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00088	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  0008b	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0008d	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00090	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00096	72 12		 jb	 SHORT $LN74@CDynamicPo

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00098	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0009b	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0009e	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000a0	83 c0 fc	 add	 eax, -4			; fffffffcH
  000a3	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000a6	77 25		 ja	 SHORT $LN71@CDynamicPo

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000a8	8b c2		 mov	 eax, edx
$LN74@CDynamicPo:

; 265  :         ::operator delete(_Ptr, _Bytes);

  000aa	51		 push	 ecx
  000ab	50		 push	 eax
  000ac	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  000b1	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  000b8	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2050 :             _Mylast  = nullptr;

  000bb	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2051 :             _Myend   = nullptr;

  000c2	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN58@CDynamicPo:
  000c9	5f		 pop	 edi
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 142  : 		}

  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	c3		 ret	 0
$LN71@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000cd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN92@CDynamicPo:
  000d2	cc		 int	 3
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00026	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00029	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0002c	74 03		 je	 SHORT $LN24@CDynamicPo

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  0002e	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN24@CDynamicPo:

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00031	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00034	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00037	74 03		 je	 SHORT $LN27@CDynamicPo

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  00039	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN27@CDynamicPo:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  0003c	85 c0		 test	 eax, eax
  0003e	74 41		 je	 SHORT $LN33@CDynamicPo

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00040	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00043	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00045	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00048	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0004e	72 12		 jb	 SHORT $LN49@CDynamicPo

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00050	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00053	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00056	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00058	83 c0 fc	 add	 eax, -4			; fffffffcH
  0005b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0005e	77 6d		 ja	 SHORT $LN71@CDynamicPo

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00060	8b c2		 mov	 eax, edx
$LN49@CDynamicPo:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00062	51		 push	 ecx
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  00069	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00070	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2050 :             _Mylast  = nullptr;

  00073	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2051 :             _Myend   = nullptr;

  0007a	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN33@CDynamicPo:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  00081	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00084	85 c0		 test	 eax, eax
  00086	74 41		 je	 SHORT $LN58@CDynamicPo

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00088	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  0008b	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0008d	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00090	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00096	72 12		 jb	 SHORT $LN74@CDynamicPo

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00098	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0009b	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0009e	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000a0	83 c0 fc	 add	 eax, -4			; fffffffcH
  000a3	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000a6	77 25		 ja	 SHORT $LN71@CDynamicPo

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000a8	8b c2		 mov	 eax, edx
$LN74@CDynamicPo:

; 265  :         ::operator delete(_Ptr, _Bytes);

  000aa	51		 push	 ecx
  000ab	50		 push	 eax
  000ac	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  000b1	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  000b8	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2050 :             _Mylast  = nullptr;

  000bb	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2051 :             _Myend   = nullptr;

  000c2	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN58@CDynamicPo:
  000c9	5f		 pop	 edi
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 142  : 		}

  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	c3		 ret	 0
$LN71@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000cd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN92@CDynamicPo:
  000d2	cc		 int	 3
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00026	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00029	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0002c	74 03		 je	 SHORT $LN24@CDynamicPo

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  0002e	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN24@CDynamicPo:

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00031	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00034	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00037	74 03		 je	 SHORT $LN27@CDynamicPo

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  00039	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN27@CDynamicPo:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  0003c	85 c0		 test	 eax, eax
  0003e	74 41		 je	 SHORT $LN33@CDynamicPo

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00040	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00043	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00045	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00048	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0004e	72 12		 jb	 SHORT $LN49@CDynamicPo

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00050	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00053	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00056	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00058	83 c0 fc	 add	 eax, -4			; fffffffcH
  0005b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0005e	77 6d		 ja	 SHORT $LN71@CDynamicPo

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00060	8b c2		 mov	 eax, edx
$LN49@CDynamicPo:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00062	51		 push	 ecx
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  00069	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00070	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2050 :             _Mylast  = nullptr;

  00073	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2051 :             _Myend   = nullptr;

  0007a	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN33@CDynamicPo:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  00081	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00084	85 c0		 test	 eax, eax
  00086	74 41		 je	 SHORT $LN58@CDynamicPo

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00088	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  0008b	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0008d	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00090	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00096	72 12		 jb	 SHORT $LN74@CDynamicPo

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00098	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0009b	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0009e	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000a0	83 c0 fc	 add	 eax, -4			; fffffffcH
  000a3	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000a6	77 25		 ja	 SHORT $LN71@CDynamicPo

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000a8	8b c2		 mov	 eax, edx
$LN74@CDynamicPo:

; 265  :         ::operator delete(_Ptr, _Bytes);

  000aa	51		 push	 ecx
  000ab	50		 push	 eax
  000ac	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  000b1	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  000b8	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2050 :             _Mylast  = nullptr;

  000bb	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2051 :             _Myend   = nullptr;

  000c2	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN58@CDynamicPo:
  000c9	5f		 pop	 edi
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 142  : 		}

  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	c3		 ret	 0
$LN71@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000cd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN92@CDynamicPo:
  000d2	cc		 int	 3
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 11		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
$LN19@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00026	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00029	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0002c	74 03		 je	 SHORT $LN24@CDynamicPo

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  0002e	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN24@CDynamicPo:

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00031	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00034	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00037	74 03		 je	 SHORT $LN27@CDynamicPo

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  00039	89 47 14	 mov	 DWORD PTR [edi+20], eax
$LN27@CDynamicPo:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  0003c	85 c0		 test	 eax, eax
  0003e	74 41		 je	 SHORT $LN33@CDynamicPo

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00040	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00043	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00045	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00048	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0004e	72 12		 jb	 SHORT $LN49@CDynamicPo

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00050	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00053	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00056	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00058	83 c0 fc	 add	 eax, -4			; fffffffcH
  0005b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0005e	77 6d		 ja	 SHORT $LN71@CDynamicPo

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00060	8b c2		 mov	 eax, edx
$LN49@CDynamicPo:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00062	51		 push	 ecx
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  00069	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00070	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2050 :             _Mylast  = nullptr;

  00073	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2051 :             _Myend   = nullptr;

  0007a	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN33@CDynamicPo:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  00081	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00084	85 c0		 test	 eax, eax
  00086	74 41		 je	 SHORT $LN58@CDynamicPo

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00088	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  0008b	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0008d	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00090	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00096	72 12		 jb	 SHORT $LN74@CDynamicPo

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00098	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0009b	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0009e	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000a0	83 c0 fc	 add	 eax, -4			; fffffffcH
  000a3	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000a6	77 25		 ja	 SHORT $LN71@CDynamicPo

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000a8	8b c2		 mov	 eax, edx
$LN74@CDynamicPo:

; 265  :         ::operator delete(_Ptr, _Bytes);

  000aa	51		 push	 ecx
  000ab	50		 push	 eax
  000ac	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  000b1	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  000b8	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2050 :             _Mylast  = nullptr;

  000bb	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 2051 :             _Myend   = nullptr;

  000c2	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN58@CDynamicPo:
  000c9	5f		 pop	 edi
; File C:\Marty 5.5\Src-Client\Client\eterLib\Pool.h

; 142  : 		}

  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	c3		 ret	 0
$LN71@CDynamicPo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000cd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN92@CDynamicPo:
  000d2	cc		 int	 3
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$RangeTester@UPCBlocker_SInstanceList@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$RangeTester@UPCBlocker_SInstanceList@@@@UAEPAXI@Z PROC ; RangeTester<PCBlocker_SInstanceList>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SpherePackCallback@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 0c		 push	 12			; 0000000cH
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_G?$RangeTester@UPCBlocker_SInstanceList@@@@UAEPAXI@Z ENDP ; RangeTester<PCBlocker_SInstanceList>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h
;	COMDAT ?PointTest2dCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_sphere$ = 12						; size = 4
_state$ = 16						; size = 4
?PointTest2dCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z PROC ; RangeTester<PCBlocker_SInstanceList>::PointTest2dCallback, COMDAT
; _this$ = ecx

; 50   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 51   : #ifdef SPHERELIB_STRICT
; 52   : 		if (sphere->IS_SPHERE)
; 53   : 			puts("RangeTester::PointTest2dCallback");
; 54   : #endif
; 55   : 		if (state!=VS_OUTSIDE)

  00003	83 7d 10 02	 cmp	 DWORD PTR _state$[ebp], 2
  00007	74 0e		 je	 SHORT $LN2@PointTest2

; 56   : 		{
; 57   : #ifdef SPHERELIB_STRICT
; 58   : 			puts("FIND!!");
; 59   : #endif
; 60   : 			(*f)((CGraphicObjectInstance *)sphere->GetUserData());

  00009	8b 45 0c	 mov	 eax, DWORD PTR _sphere$[ebp]
  0000c	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0000f	ff 70 44	 push	 DWORD PTR [eax+68]
  00012	e8 00 00 00 00	 call	 ??RPCBlocker_SInstanceList@@QAEXPAVCGraphicObjectInstance@@@Z ; PCBlocker_SInstanceList::operator()
$LN2@PointTest2:

; 61   : 		}
; 62   : 	}

  00017	5d		 pop	 ebp
  00018	c2 0c 00	 ret	 12			; 0000000cH
?PointTest2dCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z ENDP ; RangeTester<PCBlocker_SInstanceList>::PointTest2dCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h
;	COMDAT ?RangeTestCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_distance$ = 12						; size = 4
_sphere$ = 16						; size = 4
_state$ = 20						; size = 4
?RangeTestCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z PROC ; RangeTester<PCBlocker_SInstanceList>::RangeTestCallback, COMDAT
; _this$ = ecx

; 40   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 41   : #ifdef SPHERELIB_STRICT
; 42   : 		if (sphere->IS_SPHERE)
; 43   : 			puts("RangeTester::RangeTestCallback");
; 44   : #endif
; 45   : 		if (state!=VS_OUTSIDE)

  00003	83 7d 14 02	 cmp	 DWORD PTR _state$[ebp], 2
  00007	74 0e		 je	 SHORT $LN2@RangeTestC

; 46   : 			(*f)((CGraphicObjectInstance *)sphere->GetUserData());

  00009	8b 45 10	 mov	 eax, DWORD PTR _sphere$[ebp]
  0000c	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0000f	ff 70 44	 push	 DWORD PTR [eax+68]
  00012	e8 00 00 00 00	 call	 ??RPCBlocker_SInstanceList@@QAEXPAVCGraphicObjectInstance@@@Z ; PCBlocker_SInstanceList::operator()
$LN2@RangeTestC:

; 47   : 	}

  00017	5d		 pop	 ebp
  00018	c2 10 00	 ret	 16			; 00000010H
?RangeTestCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z ENDP ; RangeTester<PCBlocker_SInstanceList>::RangeTestCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h
;	COMDAT ?VisibilityCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
_sphere$ = 12						; size = 4
_state$ = 16						; size = 4
?VisibilityCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z PROC ; RangeTester<PCBlocker_SInstanceList>::VisibilityCallback, COMDAT
; _this$ = ecx

; 37   : 	virtual void VisibilityCallback(const Frustum &f,SpherePack *sphere,ViewState state){};

  00000	c2 0c 00	 ret	 12			; 0000000cH
?VisibilityCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z ENDP ; RangeTester<PCBlocker_SInstanceList>::VisibilityCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h
;	COMDAT ?RayTraceCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z
_TEXT	SEGMENT
_p1$ = 8						; size = 4
_dir$ = 12						; size = 4
_distance$ = 16						; size = 4
_sect$ = 20						; size = 4
_sphere$ = 24						; size = 4
?RayTraceCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z PROC ; RangeTester<PCBlocker_SInstanceList>::RayTraceCallback, COMDAT
; _this$ = ecx

; 27   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 28   : #ifdef SPHERELIB_STRICT
; 29   : 		if (sphere->IS_SPHERE)
; 30   : 			puts("RangeTester::RayTraceCallback");
; 31   : #endif
; 32   : 		if (dist<=0.0f || dist>=distance)

  00003	f3 0f 10 49 08	 movss	 xmm1, DWORD PTR [ecx+8]
  00008	0f 57 c0	 xorps	 xmm0, xmm0
  0000b	0f 2f c1	 comiss	 xmm0, xmm1
  0000e	73 06		 jae	 SHORT $LN3@RayTraceCa
  00010	0f 2f 4d 10	 comiss	 xmm1, DWORD PTR _distance$[ebp]
  00014	72 0e		 jb	 SHORT $LN2@RayTraceCa
$LN3@RayTraceCa:

; 33   : 			(*f)((CGraphicObjectInstance *)sphere->GetUserData());

  00016	8b 45 18	 mov	 eax, DWORD PTR _sphere$[ebp]
  00019	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0001c	ff 70 44	 push	 DWORD PTR [eax+68]
  0001f	e8 00 00 00 00	 call	 ??RPCBlocker_SInstanceList@@QAEXPAVCGraphicObjectInstance@@@Z ; PCBlocker_SInstanceList::operator()
$LN2@RayTraceCa:

; 34   : 	};

  00024	5d		 pop	 ebp
  00025	c2 14 00	 ret	 20			; 00000014H
?RayTraceCallback@?$RangeTester@UPCBlocker_SInstanceList@@@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z ENDP ; RangeTester<PCBlocker_SInstanceList>::RayTraceCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h
;	COMDAT ??1?$RangeTester@UPCBlocker_SInstanceList@@@@UAE@XZ
_TEXT	SEGMENT
??1?$RangeTester@UPCBlocker_SInstanceList@@@@UAE@XZ PROC ; RangeTester<PCBlocker_SInstanceList>::~RangeTester<PCBlocker_SInstanceList>, COMDAT
; _this$ = ecx

; 19   : 	{}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SpherePackCallback@@6B@
  00006	c3		 ret	 0
??1?$RangeTester@UPCBlocker_SInstanceList@@@@UAE@XZ ENDP ; RangeTester<PCBlocker_SInstanceList>::~RangeTester<PCBlocker_SInstanceList>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ??RPCBlocker_SInstanceList@@QAEXPAVCGraphicObjectInstance@@@Z
_TEXT	SEGMENT
_fRadius$1 = -36					; size = 4
_fRadius$2 = -32					; size = 4
_v3Center$3 = -28					; size = 12
_v3Center$4 = -16					; size = 12
__$ArrayPad$ = -4					; size = 4
_pInstance$ = 8						; size = 4
??RPCBlocker_SInstanceList@@QAEXPAVCGraphicObjectInstance@@@Z PROC ; PCBlocker_SInstanceList::operator(), COMDAT
; _this$ = ecx

; 545  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b f1		 mov	 esi, ecx
  00013	57		 push	 edi
  00014	8b 7d 08	 mov	 edi, DWORD PTR _pInstance$[ebp]

; 546  : 		if (!m_pCamera)

  00017	83 be 10 08 00
	00 00		 cmp	 DWORD PTR [esi+2064], 0
  0001e	0f 84 26 01 00
	00		 je	 $LN42@operator

; 547  : 			return;
; 548  : 
; 549  : 		if (!pInstance)

  00024	85 ff		 test	 edi, edi
  00026	0f 84 1e 01 00
	00		 je	 $LN42@operator

; 550  : 			return;
; 551  : 
; 552  : 		++m_dwInstCount;

  0002c	ff 06		 inc	 DWORD PTR [esi]
  0002e	53		 push	 ebx

; 553  : 
; 554  : 		PCBlocker_CDynamicSphereInstanceVector::Iterator i;
; 555  : 
; 556  : 		for (i=m_pkDSIVector->Begin(); i!=m_pkDSIVector->End(); ++i)

  0002f	8b 9e 0c 08 00
	00		 mov	 ebx, DWORD PTR [esi+2060]
  00035	8d 43 70	 lea	 eax, DWORD PTR [ebx+112]
  00038	3b d8		 cmp	 ebx, eax
  0003a	0f 84 09 01 00
	00		 je	 $LN56@operator
$LL55@operator:

; 557  : 		{
; 558  : 			CDynamicSphereInstance& rkDSI = *i;
; 559  : 			if (pInstance->CollisionDynamicSphere(rkDSI) )

  00040	53		 push	 ebx
  00041	8b cf		 mov	 ecx, edi
  00043	e8 00 00 00 00	 call	 ?CollisionDynamicSphere@CGraphicObjectInstance@@QBE_NABUCDynamicSphereInstance@@@Z ; CGraphicObjectInstance::CollisionDynamicSphere
  00048	84 c0		 test	 al, al
  0004a	0f 84 ab 00 00
	00		 je	 $LN2@operator

; 560  : 			{
; 561  : 				if (TREE_OBJECT == pInstance->GetType())

  00050	8b 07		 mov	 eax, DWORD PTR [edi]
  00052	8b cf		 mov	 ecx, edi
  00054	ff 50 04	 call	 DWORD PTR [eax+4]
  00057	3d a6 f7 c9 8a	 cmp	 eax, -1966475354	; 8ac9f7a6H
  0005c	0f 84 c0 00 00
	00		 je	 $LN38@operator

; 562  : 				{
; 563  : 					__AppendPCBlocker(pInstance);
; 564  : 					return;
; 565  : 				}
; 566  : 				else if (THING_OBJECT == pInstance->GetType())

  00062	8b 07		 mov	 eax, DWORD PTR [edi]
  00064	8b cf		 mov	 ecx, edi
  00066	ff 50 04	 call	 DWORD PTR [eax+4]
  00069	8b 17		 mov	 edx, DWORD PTR [edi]
  0006b	8b cf		 mov	 ecx, edi
  0006d	3d 13 1f f2 ad	 cmp	 eax, -1376641261	; adf21f13H
  00072	75 17		 jne	 SHORT $LN10@operator

; 532  : 		pInstance->GetBoundingSphere(v3Center, fRadius);

  00074	8d 45 e0	 lea	 eax, DWORD PTR _fRadius$2[ebp]
  00077	50		 push	 eax
  00078	8d 45 f0	 lea	 eax, DWORD PTR _v3Center$4[ebp]
  0007b	50		 push	 eax
  0007c	ff 52 0c	 call	 DWORD PTR [edx+12]

; 533  : 
; 534  : 		D3DXVECTOR2 v2TargetToCenter;
; 535  : 		v2TargetToCenter.x = v3Center.x - m_v2Target.x;
; 536  : 		v2TargetToCenter.y = v3Center.y - m_v2Target.y;

  0007f	f3 0f 10 4d f4	 movss	 xmm1, DWORD PTR _v3Center$4[ebp+4]
  00084	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _v3Center$4[ebp]

; 567  : 				{
; 568  : 					__AppendObject(pInstance);
; 569  : 				}

  00089	eb 2e		 jmp	 SHORT $LN60@operator
$LN10@operator:

; 570  : 				else if (ACTOR_OBJECT == pInstance->GetType())

  0008b	ff 52 04	 call	 DWORD PTR [edx+4]
  0008e	3d 24 6c a7 29	 cmp	 eax, 698838052		; 29a76c24H
  00093	75 66		 jne	 SHORT $LN2@operator

; 571  : 				{
; 572  : 					if (((CActorInstance *)pInstance)->IsBuilding())

  00095	8b cf		 mov	 ecx, edi
  00097	e8 00 00 00 00	 call	 ?IsBuilding@CActorInstance@@QAE_NXZ ; CActorInstance::IsBuilding
  0009c	84 c0		 test	 al, al
  0009e	74 5b		 je	 SHORT $LN2@operator

; 532  : 		pInstance->GetBoundingSphere(v3Center, fRadius);

  000a0	8b 07		 mov	 eax, DWORD PTR [edi]
  000a2	8d 4d dc	 lea	 ecx, DWORD PTR _fRadius$1[ebp]
  000a5	51		 push	 ecx
  000a6	8d 4d e4	 lea	 ecx, DWORD PTR _v3Center$3[ebp]
  000a9	51		 push	 ecx
  000aa	8b cf		 mov	 ecx, edi
  000ac	ff 50 0c	 call	 DWORD PTR [eax+12]

; 533  : 
; 534  : 		D3DXVECTOR2 v2TargetToCenter;
; 535  : 		v2TargetToCenter.x = v3Center.x - m_v2Target.x;
; 536  : 		v2TargetToCenter.y = v3Center.y - m_v2Target.y;

  000af	f3 0f 10 4d e8	 movss	 xmm1, DWORD PTR _v3Center$3[ebp+4]
  000b4	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _v3Center$3[ebp]
$LN60@operator:

; 553  : 
; 554  : 		PCBlocker_CDynamicSphereInstanceVector::Iterator i;
; 555  : 
; 556  : 		for (i=m_pkDSIVector->Begin(); i!=m_pkDSIVector->End(); ++i)

  000b9	f3 0f 5c 86 1c
	08 00 00	 subss	 xmm0, DWORD PTR [esi+2076]
  000c1	f3 0f 5c 8e 20
	08 00 00	 subss	 xmm1, DWORD PTR [esi+2080]
  000c9	f3 0f 59 86 14
	08 00 00	 mulss	 xmm0, DWORD PTR [esi+2068]
  000d1	f3 0f 59 8e 18
	08 00 00	 mulss	 xmm1, DWORD PTR [esi+2072]
  000d9	f3 0f 58 c8	 addss	 xmm1, xmm0
  000dd	0f 57 c0	 xorps	 xmm0, xmm0
  000e0	0f 2f c1	 comiss	 xmm0, xmm1
  000e3	72 16		 jb	 SHORT $LN2@operator
  000e5	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000e8	3d 00 02 00 00	 cmp	 eax, 512		; 00000200H
  000ed	73 09		 jae	 SHORT $LN34@operator
  000ef	89 7c 86 0c	 mov	 DWORD PTR [esi+eax*4+12], edi
  000f3	ff 46 04	 inc	 DWORD PTR [esi+4]
  000f6	eb 03		 jmp	 SHORT $LN2@operator
$LN34@operator:
  000f8	ff 46 08	 inc	 DWORD PTR [esi+8]
$LN2@operator:
  000fb	8b 86 0c 08 00
	00		 mov	 eax, DWORD PTR [esi+2060]
  00101	83 c3 1c	 add	 ebx, 28			; 0000001cH
  00104	83 c0 70	 add	 eax, 112		; 00000070H
  00107	3b d8		 cmp	 ebx, eax
  00109	0f 85 31 ff ff
	ff		 jne	 $LL55@operator

; 573  : 					{
; 574  : 						__AppendObject(pInstance);
; 575  : 					}
; 576  : 				}
; 577  : 			}
; 578  : 		}
; 579  : 	}

  0010f	5b		 pop	 ebx
  00110	5f		 pop	 edi
  00111	5e		 pop	 esi
  00112	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00115	33 cd		 xor	 ecx, ebp
  00117	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0011c	8b e5		 mov	 esp, ebp
  0011e	5d		 pop	 ebp
  0011f	c2 04 00	 ret	 4
$LN38@operator:

; 522  : 		if (m_dwBlockerCount<CAPACITY)

  00122	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00125	3d 00 02 00 00	 cmp	 eax, 512		; 00000200H
  0012a	73 1a		 jae	 SHORT $LN16@operator

; 523  : 			m_apkPCBlocker[m_dwBlockerCount++]=pInstance;

  0012c	89 7c 86 0c	 mov	 DWORD PTR [esi+eax*4+12], edi
  00130	ff 46 04	 inc	 DWORD PTR [esi+4]
  00133	5b		 pop	 ebx
  00134	5f		 pop	 edi

; 573  : 					{
; 574  : 						__AppendObject(pInstance);
; 575  : 					}
; 576  : 				}
; 577  : 			}
; 578  : 		}
; 579  : 	}

  00135	5e		 pop	 esi
  00136	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00139	33 cd		 xor	 ecx, ebp
  0013b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00140	8b e5		 mov	 esp, ebp
  00142	5d		 pop	 ebp
  00143	c2 04 00	 ret	 4
$LN16@operator:

; 525  : 			m_dwBlockerOverCount++;

  00146	ff 46 08	 inc	 DWORD PTR [esi+8]
$LN56@operator:
  00149	5b		 pop	 ebx
$LN42@operator:

; 573  : 					{
; 574  : 						__AppendObject(pInstance);
; 575  : 					}
; 576  : 				}
; 577  : 			}
; 578  : 		}
; 579  : 	}

  0014a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0014d	5f		 pop	 edi
  0014e	33 cd		 xor	 ecx, ebp
  00150	5e		 pop	 esi
  00151	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00156	8b e5		 mov	 esp, ebp
  00158	5d		 pop	 ebp
  00159	c2 04 00	 ret	 4
??RPCBlocker_SInstanceList@@QAEXPAVCGraphicObjectInstance@@@Z ENDP ; PCBlocker_SInstanceList::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1FPushAreaToDeleteVector@CMapOutdoor@@QAE@XZ
_TEXT	SEGMENT
??1FPushAreaToDeleteVector@CMapOutdoor@@QAE@XZ PROC	; CMapOutdoor::FPushAreaToDeleteVector::~FPushAreaToDeleteVector, COMDAT
; _this$ = ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00006	85 c0		 test	 eax, eax
  00008	74 41		 je	 SHORT $LN6@FPushAreaT

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0000a	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0000d	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000f	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00012	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00018	72 12		 jb	 SHORT $LN22@FPushAreaT

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0001a	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0001d	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00020	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00022	83 c0 fc	 add	 eax, -4			; fffffffcH
  00025	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00028	77 23		 ja	 SHORT $LN19@FPushAreaT

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0002a	8b c2		 mov	 eax, edx
$LN22@FPushAreaT:

; 265  :         ::operator delete(_Ptr, _Bytes);

  0002c	51		 push	 ecx
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  00033	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  0003a	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2050 :             _Mylast  = nullptr;

  0003d	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 2051 :             _Myend   = nullptr;

  00044	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
$LN6@FPushAreaT:
  0004b	5e		 pop	 esi
  0004c	c3		 ret	 0
$LN19@FPushAreaT:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004d	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN31@FPushAreaT:
  00052	cc		 int	 3
??1FPushAreaToDeleteVector@CMapOutdoor@@QAE@XZ ENDP	; CMapOutdoor::FPushAreaToDeleteVector::~FPushAreaToDeleteVector
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ??RFPushAreaToDeleteVector@CMapOutdoor@@QAEXPAVCArea@@@Z
_TEXT	SEGMENT
_wReferenceCoordY$1$ = -16				; size = 4
_wReferenceCoordX$1$ = -12				; size = 4
_wCoordY$ = -8						; size = 2
_wCoordX$ = -4						; size = 2
_pArea$ = 8						; size = 4
??RFPushAreaToDeleteVector@CMapOutdoor@@QAEXPAVCArea@@@Z PROC ; CMapOutdoor::FPushAreaToDeleteVector::operator(), COMDAT
; _this$ = ecx

; 791  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR _pArea$[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 791  : {

  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b f9		 mov	 edi, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  0000e	53		 push	 ebx
  0000f	ff 77 10	 push	 DWORD PTR [edi+16]
  00012	ff 77 0c	 push	 DWORD PTR [edi+12]
  00015	e8 00 00 00 00	 call	 ??$__std_find_trivial@PAVCArea@@PAV1@@@YAPAPAVCArea@@PAPAV0@0QAV0@@Z ; __std_find_trivial<CArea *,CArea *>
  0001a	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 163  :         return _Ptr == _Right._Ptr;

  0001d	3b 47 10	 cmp	 eax, DWORD PTR [edi+16]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 793  : 	if (aIterator != m_ReturnAreaVector.end())

  00020	0f 85 b3 00 00
	00		 jne	 $LN13@operator

; 794  : 		return;
; 795  : 
; 796  : 	WORD wReferenceCoordX = m_CurCoordinate.m_sTerrainCoordX;

  00026	0f b7 47 08	 movzx	 eax, WORD PTR [edi+8]

; 797  : 	WORD wReferenceCoordY = m_CurCoordinate.m_sTerrainCoordY;
; 798  : 
; 799  : 	WORD wCoordX, wCoordY;
; 800  : 	pArea->GetCoordinate(&wCoordX, &wCoordY);

  0002a	8b cb		 mov	 ecx, ebx
  0002c	89 45 f4	 mov	 DWORD PTR _wReferenceCoordX$1$[ebp], eax
  0002f	0f b7 47 0a	 movzx	 eax, WORD PTR [edi+10]
  00033	89 45 f0	 mov	 DWORD PTR _wReferenceCoordY$1$[ebp], eax
  00036	8d 45 f8	 lea	 eax, DWORD PTR _wCoordY$[ebp]
  00039	50		 push	 eax
  0003a	8d 45 fc	 lea	 eax, DWORD PTR _wCoordX$[ebp]
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ?GetCoordinate@CArea@@QAEXPAG0@Z ; CArea::GetCoordinate

; 801  : 
; 802  : 	switch(m_eLRDeleteDir)

  00043	8b 07		 mov	 eax, DWORD PTR [edi]
  00045	83 e8 00	 sub	 eax, 0
  00048	74 16		 je	 SHORT $LN7@operator
  0004a	83 e8 01	 sub	 eax, 1
  0004d	75 3d		 jne	 SHORT $LN50@operator

; 806  : 			m_ReturnAreaVector.push_back(pArea);
; 807  : 		break;
; 808  : 	case DELETE_RIGHT:
; 809  : 		if (wCoordX > wReferenceCoordX + LOAD_SIZE_WIDTH)

  0004f	8b 45 f4	 mov	 eax, DWORD PTR _wReferenceCoordX$1$[ebp]
  00052	0f b7 c8	 movzx	 ecx, ax
  00055	0f b7 45 fc	 movzx	 eax, WORD PTR _wCoordX$[ebp]
  00059	41		 inc	 ecx
  0005a	3b c1		 cmp	 eax, ecx
  0005c	76 2e		 jbe	 SHORT $LN50@operator
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0005e	eb 0f		 jmp	 SHORT $LN107@operator
$LN7@operator:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 805  : 		if (wCoordX < wReferenceCoordX - LOAD_SIZE_WIDTH)

  00060	8b 45 f4	 mov	 eax, DWORD PTR _wReferenceCoordX$1$[ebp]
  00063	0f b7 c8	 movzx	 ecx, ax
  00066	0f b7 45 fc	 movzx	 eax, WORD PTR _wCoordX$[ebp]
  0006a	49		 dec	 ecx
  0006b	3b c1		 cmp	 eax, ecx
  0006d	7d 1d		 jge	 SHORT $LN50@operator
$LN107@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  0006f	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00072	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00075	74 08		 je	 SHORT $LN51@operator
  00077	89 18		 mov	 DWORD PTR [eax], ebx
  00079	83 47 10 04	 add	 DWORD PTR [edi+16], 4
  0007d	eb 0d		 jmp	 SHORT $LN50@operator
$LN51@operator:
  0007f	8d 4d 08	 lea	 ecx, DWORD PTR _pArea$[ebp]
  00082	51		 push	 ecx
  00083	50		 push	 eax
  00084	8d 4f 0c	 lea	 ecx, DWORD PTR [edi+12]
  00087	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCArea@@@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@AAEPAPAVCArea@@QAPAV2@ABQAV2@@Z ; std::vector<CArea *,std::allocator<CArea *> >::_Emplace_reallocate<CArea * const &>
$LN50@operator:
  0008c	53		 push	 ebx
  0008d	ff 77 10	 push	 DWORD PTR [edi+16]
  00090	ff 77 0c	 push	 DWORD PTR [edi+12]
  00093	e8 00 00 00 00	 call	 ??$__std_find_trivial@PAVCArea@@PAV1@@@YAPAPAVCArea@@PAPAV0@0QAV0@@Z ; __std_find_trivial<CArea *,CArea *>
  00098	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 163  :         return _Ptr == _Right._Ptr;

  0009b	3b 47 10	 cmp	 eax, DWORD PTR [edi+16]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 815  : 	if (aIterator != m_ReturnAreaVector.end())

  0009e	75 39		 jne	 SHORT $LN13@operator

; 816  : 		return;
; 817  : 
; 818  : 	switch(m_eTBDeleteDir)

  000a0	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a3	83 e8 02	 sub	 eax, 2
  000a6	74 16		 je	 SHORT $LN12@operator
  000a8	83 e8 01	 sub	 eax, 1
  000ab	75 2c		 jne	 SHORT $LN13@operator

; 822  : 			m_ReturnAreaVector.push_back(pArea);
; 823  : 		break;
; 824  : 	case DELETE_BOTTOM:
; 825  : 		if (wCoordY > wReferenceCoordY + LOAD_SIZE_WIDTH)

  000ad	8b 45 f0	 mov	 eax, DWORD PTR _wReferenceCoordY$1$[ebp]
  000b0	0f b7 c8	 movzx	 ecx, ax
  000b3	0f b7 45 f8	 movzx	 eax, WORD PTR _wCoordY$[ebp]
  000b7	41		 inc	 ecx
  000b8	3b c1		 cmp	 eax, ecx
  000ba	76 1d		 jbe	 SHORT $LN13@operator

; 826  : 			m_ReturnAreaVector.push_back(pArea);

  000bc	eb 0f		 jmp	 SHORT $LN108@operator
$LN12@operator:

; 819  : 	{
; 820  : 	case DELETE_TOP:
; 821  : 		if (wCoordY < wReferenceCoordY - LOAD_SIZE_WIDTH)

  000be	8b 45 f0	 mov	 eax, DWORD PTR _wReferenceCoordY$1$[ebp]
  000c1	0f b7 c8	 movzx	 ecx, ax
  000c4	0f b7 45 f8	 movzx	 eax, WORD PTR _wCoordY$[ebp]
  000c8	49		 dec	 ecx
  000c9	3b c1		 cmp	 eax, ecx
  000cb	7d 0c		 jge	 SHORT $LN13@operator
$LN108@operator:

; 827  : 		break;
; 828  : 	}
; 829  : }

  000cd	8d 45 08	 lea	 eax, DWORD PTR _pArea$[ebp]
  000d0	50		 push	 eax
  000d1	8d 4f 0c	 lea	 ecx, DWORD PTR [edi+12]
  000d4	e8 00 00 00 00	 call	 ?push_back@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@QAEXABQAVCArea@@@Z ; std::vector<CArea *,std::allocator<CArea *> >::push_back
$LN13@operator:
  000d9	5f		 pop	 edi
  000da	5e		 pop	 esi
  000db	5b		 pop	 ebx
  000dc	8b e5		 mov	 esp, ebp
  000de	5d		 pop	 ebp
  000df	c2 04 00	 ret	 4
??RFPushAreaToDeleteVector@CMapOutdoor@@QAEXPAVCArea@@@Z ENDP ; CMapOutdoor::FPushAreaToDeleteVector::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1FPushTerrainToDeleteVector@CMapOutdoor@@QAE@XZ
_TEXT	SEGMENT
??1FPushTerrainToDeleteVector@CMapOutdoor@@QAE@XZ PROC	; CMapOutdoor::FPushTerrainToDeleteVector::~FPushTerrainToDeleteVector, COMDAT
; _this$ = ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00006	85 c0		 test	 eax, eax
  00008	74 41		 je	 SHORT $LN6@FPushTerra

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0000a	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0000d	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000f	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00012	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00018	72 12		 jb	 SHORT $LN22@FPushTerra

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0001a	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0001d	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00020	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00022	83 c0 fc	 add	 eax, -4			; fffffffcH
  00025	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00028	77 23		 ja	 SHORT $LN19@FPushTerra

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0002a	8b c2		 mov	 eax, edx
$LN22@FPushTerra:

; 265  :         ::operator delete(_Ptr, _Bytes);

  0002c	51		 push	 ecx
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  00033	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  0003a	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2050 :             _Mylast  = nullptr;

  0003d	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 2051 :             _Myend   = nullptr;

  00044	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
$LN6@FPushTerra:
  0004b	5e		 pop	 esi
  0004c	c3		 ret	 0
$LN19@FPushTerra:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004d	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN31@FPushTerra:
  00052	cc		 int	 3
??1FPushTerrainToDeleteVector@CMapOutdoor@@QAE@XZ ENDP	; CMapOutdoor::FPushTerrainToDeleteVector::~FPushTerrainToDeleteVector
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\Client\GameLib\AreaTerrain.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\Client\GameLib\AreaTerrain.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ??RFPushTerrainToDeleteVector@CMapOutdoor@@QAEXPAVCTerrain@@@Z
_TEXT	SEGMENT
_wCoordY$1$ = -8					; size = 4
_wReferenceCoordY$1$ = -4				; size = 4
_pTerrain$ = 8						; size = 4
??RFPushTerrainToDeleteVector@CMapOutdoor@@QAEXPAVCTerrain@@@Z PROC ; CMapOutdoor::FPushTerrainToDeleteVector::operator(), COMDAT
; _this$ = ecx

; 749  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR _pTerrain$[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 749  : {

  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b f9		 mov	 edi, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  0000e	53		 push	 ebx
  0000f	ff 77 10	 push	 DWORD PTR [edi+16]
  00012	ff 77 0c	 push	 DWORD PTR [edi+12]
  00015	e8 00 00 00 00	 call	 ??$__std_find_trivial@PAVCTerrain@@PAV1@@@YAPAPAVCTerrain@@PAPAV0@0QAV0@@Z ; __std_find_trivial<CTerrain *,CTerrain *>
  0001a	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 163  :         return _Ptr == _Right._Ptr;

  0001d	3b 47 10	 cmp	 eax, DWORD PTR [edi+16]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 751  : 	if (aIterator != m_ReturnTerrainVector.end())

  00020	0f 85 a2 00 00
	00		 jne	 $LN13@operator

; 755  : 	WORD wReferenceCoordY = m_CurCoordinate.m_sTerrainCoordY;

  00026	0f b7 47 0a	 movzx	 eax, WORD PTR [edi+10]
  0002a	0f b7 4f 08	 movzx	 ecx, WORD PTR [edi+8]
; File C:\Marty 5.5\Src-Client\Client\GameLib\AreaTerrain.h

; 92   : 			*usCoordX = m_wX;

  0002e	0f b7 93 6c a5
	06 00		 movzx	 edx, WORD PTR [ebx+435564]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 755  : 	WORD wReferenceCoordY = m_CurCoordinate.m_sTerrainCoordY;

  00035	89 45 fc	 mov	 DWORD PTR _wReferenceCoordY$1$[ebp], eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\AreaTerrain.h

; 93   : 			*usCoordY = m_wY;

  00038	0f b7 83 6e a5
	06 00		 movzx	 eax, WORD PTR [ebx+435566]
  0003f	89 45 f8	 mov	 DWORD PTR _wCoordY$1$[ebp], eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 761  : 	switch(m_eLRDeleteDir)

  00042	8b 07		 mov	 eax, DWORD PTR [edi]
  00044	83 e8 00	 sub	 eax, 0
  00047	74 0c		 je	 SHORT $LN7@operator
  00049	83 e8 01	 sub	 eax, 1
  0004c	75 29		 jne	 SHORT $LN83@operator

; 765  : 			m_ReturnTerrainVector.push_back(pTerrain);
; 766  : 		break;
; 767  : 	case DELETE_RIGHT:
; 768  : 		if (wCoordX > wReferenceCoordX + LOAD_SIZE_WIDTH)

  0004e	41		 inc	 ecx
  0004f	3b d1		 cmp	 edx, ecx
  00051	76 24		 jbe	 SHORT $LN83@operator
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00053	eb 05		 jmp	 SHORT $LN109@operator
$LN7@operator:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 764  : 		if (wCoordX < wReferenceCoordX - LOAD_SIZE_WIDTH)

  00055	49		 dec	 ecx
  00056	3b d1		 cmp	 edx, ecx
  00058	7d 1d		 jge	 SHORT $LN83@operator
$LN109@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  0005a	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0005d	3b 47 14	 cmp	 eax, DWORD PTR [edi+20]
  00060	74 08		 je	 SHORT $LN84@operator
  00062	89 18		 mov	 DWORD PTR [eax], ebx
  00064	83 47 10 04	 add	 DWORD PTR [edi+16], 4
  00068	eb 0d		 jmp	 SHORT $LN83@operator
$LN84@operator:
  0006a	8d 4d 08	 lea	 ecx, DWORD PTR _pTerrain$[ebp]
  0006d	51		 push	 ecx
  0006e	50		 push	 eax
  0006f	8d 4f 0c	 lea	 ecx, DWORD PTR [edi+12]
  00072	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCTerrain@@@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@AAEPAPAVCTerrain@@QAPAV2@ABQAV2@@Z ; std::vector<CTerrain *,std::allocator<CTerrain *> >::_Emplace_reallocate<CTerrain * const &>
$LN83@operator:
  00077	53		 push	 ebx
  00078	ff 77 10	 push	 DWORD PTR [edi+16]
  0007b	ff 77 0c	 push	 DWORD PTR [edi+12]
  0007e	e8 00 00 00 00	 call	 ??$__std_find_trivial@PAVCTerrain@@PAV1@@@YAPAPAVCTerrain@@PAPAV0@0QAV0@@Z ; __std_find_trivial<CTerrain *,CTerrain *>
  00083	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 163  :         return _Ptr == _Right._Ptr;

  00086	3b 47 10	 cmp	 eax, DWORD PTR [edi+16]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 774  : 	if (aIterator != m_ReturnTerrainVector.end())

  00089	75 3d		 jne	 SHORT $LN13@operator

; 775  : 		return;
; 776  : 
; 777  : 	switch(m_eTBDeleteDir)

  0008b	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0008e	83 e8 02	 sub	 eax, 2
  00091	74 18		 je	 SHORT $LN12@operator
  00093	83 e8 01	 sub	 eax, 1
  00096	75 30		 jne	 SHORT $LN13@operator

; 781  : 			m_ReturnTerrainVector.push_back(pTerrain);
; 782  : 		break;
; 783  : 	case DELETE_BOTTOM:
; 784  : 		if (wCoordY > wReferenceCoordY + LOAD_SIZE_WIDTH)

  00098	8b 45 fc	 mov	 eax, DWORD PTR _wReferenceCoordY$1$[ebp]
  0009b	0f b7 c8	 movzx	 ecx, ax
  0009e	8b 45 f8	 mov	 eax, DWORD PTR _wCoordY$1$[ebp]
  000a1	41		 inc	 ecx
  000a2	0f b7 c0	 movzx	 eax, ax
  000a5	3b c1		 cmp	 eax, ecx
  000a7	76 1f		 jbe	 SHORT $LN13@operator

; 785  : 			m_ReturnTerrainVector.push_back(pTerrain);

  000a9	eb 11		 jmp	 SHORT $LN110@operator
$LN12@operator:

; 778  : 	{
; 779  : 	case DELETE_TOP:
; 780  : 		if (wCoordY < wReferenceCoordY - LOAD_SIZE_WIDTH)

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _wReferenceCoordY$1$[ebp]
  000ae	0f b7 c8	 movzx	 ecx, ax
  000b1	8b 45 f8	 mov	 eax, DWORD PTR _wCoordY$1$[ebp]
  000b4	49		 dec	 ecx
  000b5	0f b7 c0	 movzx	 eax, ax
  000b8	3b c1		 cmp	 eax, ecx
  000ba	7d 0c		 jge	 SHORT $LN13@operator
$LN110@operator:

; 786  : 		break;
; 787  : 	}
; 788  : }

  000bc	8d 45 08	 lea	 eax, DWORD PTR _pTerrain$[ebp]
  000bf	50		 push	 eax
  000c0	8d 4f 0c	 lea	 ecx, DWORD PTR [edi+12]
  000c3	e8 00 00 00 00	 call	 ?push_back@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@QAEXABQAVCTerrain@@@Z ; std::vector<CTerrain *,std::allocator<CTerrain *> >::push_back
$LN13@operator:
  000c8	5f		 pop	 edi
  000c9	5e		 pop	 esi
  000ca	5b		 pop	 ebx
  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c2 04 00	 ret	 4
??RFPushTerrainToDeleteVector@CMapOutdoor@@QAEXPAVCTerrain@@@Z ENDP ; CMapOutdoor::FPushTerrainToDeleteVector::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@CAXXZ PROC ; std::vector<CArea *,std::allocator<CArea *> >::_Xlength, COMDAT

; 2138 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@CAXXZ ENDP ; std::vector<CArea *,std::allocator<CArea *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Change_array@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@AAEXQAPAVCArea@@II@Z
_TEXT	SEGMENT
__Newvec$ = 8						; size = 4
__Newsize$ = 12						; size = 4
__Newcapacity$ = 16					; size = 4
?_Change_array@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@AAEXQAPAVCArea@@II@Z PROC ; std::vector<CArea *,std::allocator<CArea *> >::_Change_array, COMDAT
; _this$ = ecx

; 2013 :     _CONSTEXPR20 void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 2014 :         // orphan all iterators, discard old array, acquire new array
; 2015 :         auto& _Al         = _Getal();
; 2016 :         auto& _My_data    = _Mypair._Myval2;
; 2017 :         pointer& _Myfirst = _My_data._Myfirst;
; 2018 :         pointer& _Mylast  = _My_data._Mylast;
; 2019 :         pointer& _Myend   = _My_data._Myend;
; 2020 : 
; 2021 :         _My_data._Orphan_all();
; 2022 : 
; 2023 :         if (_Myfirst) { // destroy and deallocate old array

  00006	8b 06		 mov	 eax, DWORD PTR [esi]
  00008	85 c0		 test	 eax, eax
  0000a	74 2c		 je	 SHORT $LN8@Change_arr

; 2024 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2025 :             _ASAN_VECTOR_REMOVE;
; 2026 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0000c	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0000f	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00011	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00014	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0001a	72 12		 jb	 SHORT $LN18@Change_arr

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0001c	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0001f	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00022	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00024	83 c0 fc	 add	 eax, -4			; fffffffcH
  00027	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0002a	77 28		 ja	 SHORT $LN15@Change_arr

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0002c	8b c2		 mov	 eax, edx
$LN18@Change_arr:

; 265  :         ::operator delete(_Ptr, _Bytes);

  0002e	51		 push	 ecx
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00035	83 c4 08	 add	 esp, 8
$LN8@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2029 :         _Myfirst = _Newvec;

  00038	8b 4d 08	 mov	 ecx, DWORD PTR __Newvec$[ebp]

; 2030 :         _Mylast  = _Newvec + _Newsize;

  0003b	8b 45 0c	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0003e	89 0e		 mov	 DWORD PTR [esi], ecx
  00040	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  00043	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 2031 :         _Myend   = _Newvec + _Newcapacity;

  00046	8b 45 10	 mov	 eax, DWORD PTR __Newcapacity$[ebp]
  00049	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  0004c	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0004f	5e		 pop	 esi

; 2033 :     }

  00050	5d		 pop	 ebp
  00051	c2 0c 00	 ret	 12			; 0000000cH
$LN15@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00054	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN25@Change_arr:
  00059	cc		 int	 3
?_Change_array@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@AAEXQAPAVCArea@@II@Z ENDP ; std::vector<CArea *,std::allocator<CArea *> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?push_back@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@QAEXABQAVCArea@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@QAEXABQAVCArea@@@Z PROC ; std::vector<CArea *,std::allocator<CArea *> >::push_back, COMDAT
; _this$ = ecx

; 872  :     _CONSTEXPR20 void push_back(const _Ty& _Val) { // insert element at end, provide strong guarantee

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 781  :         if (_Mylast != _My_data._Myend) {

  00003	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00006	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00009	74 0f		 je	 SHORT $LN4@push_back

; 797  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  0000b	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  0000e	8b 00		 mov	 eax, DWORD PTR [eax]
  00010	89 02		 mov	 DWORD PTR [edx], eax

; 798  :         } else {
; 799  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 800  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 801  :             _ASAN_VECTOR_RELEASE_GUARD;
; 802  :         }
; 803  : 
; 804  :         _Orphan_range(_Mylast, _Mylast);
; 805  :         _Ty& _Result = *_Mylast;
; 806  :         ++_Mylast;

  00012	83 41 04 04	 add	 DWORD PTR [ecx+4], 4

; 873  :         _Emplace_one_at_back(_Val);
; 874  :     }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN4@push_back:

; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0001a	ff 75 08	 push	 DWORD PTR __Val$[ebp]
  0001d	52		 push	 edx
  0001e	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCArea@@@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@AAEPAPAVCArea@@QAPAV2@ABQAV2@@Z ; std::vector<CArea *,std::allocator<CArea *> >::_Emplace_reallocate<CArea * const &>

; 873  :         _Emplace_one_at_back(_Val);
; 874  :     }

  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
?push_back@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@QAEXABQAVCArea@@@Z ENDP ; std::vector<CArea *,std::allocator<CArea *> >::push_back
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@CAXXZ PROC ; std::vector<CTerrain *,std::allocator<CTerrain *> >::_Xlength, COMDAT

; 2138 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@CAXXZ ENDP ; std::vector<CTerrain *,std::allocator<CTerrain *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Change_array@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@AAEXQAPAVCTerrain@@II@Z
_TEXT	SEGMENT
__Newvec$ = 8						; size = 4
__Newsize$ = 12						; size = 4
__Newcapacity$ = 16					; size = 4
?_Change_array@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@AAEXQAPAVCTerrain@@II@Z PROC ; std::vector<CTerrain *,std::allocator<CTerrain *> >::_Change_array, COMDAT
; _this$ = ecx

; 2013 :     _CONSTEXPR20 void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 2014 :         // orphan all iterators, discard old array, acquire new array
; 2015 :         auto& _Al         = _Getal();
; 2016 :         auto& _My_data    = _Mypair._Myval2;
; 2017 :         pointer& _Myfirst = _My_data._Myfirst;
; 2018 :         pointer& _Mylast  = _My_data._Mylast;
; 2019 :         pointer& _Myend   = _My_data._Myend;
; 2020 : 
; 2021 :         _My_data._Orphan_all();
; 2022 : 
; 2023 :         if (_Myfirst) { // destroy and deallocate old array

  00006	8b 06		 mov	 eax, DWORD PTR [esi]
  00008	85 c0		 test	 eax, eax
  0000a	74 2c		 je	 SHORT $LN8@Change_arr

; 2024 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2025 :             _ASAN_VECTOR_REMOVE;
; 2026 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0000c	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0000f	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00011	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00014	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0001a	72 12		 jb	 SHORT $LN18@Change_arr

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0001c	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0001f	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00022	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00024	83 c0 fc	 add	 eax, -4			; fffffffcH
  00027	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0002a	77 28		 ja	 SHORT $LN15@Change_arr

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0002c	8b c2		 mov	 eax, edx
$LN18@Change_arr:

; 265  :         ::operator delete(_Ptr, _Bytes);

  0002e	51		 push	 ecx
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00035	83 c4 08	 add	 esp, 8
$LN8@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2029 :         _Myfirst = _Newvec;

  00038	8b 4d 08	 mov	 ecx, DWORD PTR __Newvec$[ebp]

; 2030 :         _Mylast  = _Newvec + _Newsize;

  0003b	8b 45 0c	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0003e	89 0e		 mov	 DWORD PTR [esi], ecx
  00040	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  00043	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 2031 :         _Myend   = _Newvec + _Newcapacity;

  00046	8b 45 10	 mov	 eax, DWORD PTR __Newcapacity$[ebp]
  00049	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  0004c	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0004f	5e		 pop	 esi

; 2033 :     }

  00050	5d		 pop	 ebp
  00051	c2 0c 00	 ret	 12			; 0000000cH
$LN15@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00054	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN25@Change_arr:
  00059	cc		 int	 3
?_Change_array@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@AAEXQAPAVCTerrain@@II@Z ENDP ; std::vector<CTerrain *,std::allocator<CTerrain *> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?push_back@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@QAEXABQAVCTerrain@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@QAEXABQAVCTerrain@@@Z PROC ; std::vector<CTerrain *,std::allocator<CTerrain *> >::push_back, COMDAT
; _this$ = ecx

; 872  :     _CONSTEXPR20 void push_back(const _Ty& _Val) { // insert element at end, provide strong guarantee

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 781  :         if (_Mylast != _My_data._Myend) {

  00003	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00006	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00009	74 0f		 je	 SHORT $LN4@push_back

; 797  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  0000b	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  0000e	8b 00		 mov	 eax, DWORD PTR [eax]
  00010	89 02		 mov	 DWORD PTR [edx], eax

; 798  :         } else {
; 799  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 800  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 801  :             _ASAN_VECTOR_RELEASE_GUARD;
; 802  :         }
; 803  : 
; 804  :         _Orphan_range(_Mylast, _Mylast);
; 805  :         _Ty& _Result = *_Mylast;
; 806  :         ++_Mylast;

  00012	83 41 04 04	 add	 DWORD PTR [ecx+4], 4

; 873  :         _Emplace_one_at_back(_Val);
; 874  :     }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN4@push_back:

; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0001a	ff 75 08	 push	 DWORD PTR __Val$[ebp]
  0001d	52		 push	 edx
  0001e	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCTerrain@@@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@AAEPAPAVCTerrain@@QAPAV2@ABQAV2@@Z ; std::vector<CTerrain *,std::allocator<CTerrain *> >::_Emplace_reallocate<CTerrain * const &>

; 873  :         _Emplace_one_at_back(_Val);
; 874  :     }

  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
?push_back@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@QAEXABQAVCTerrain@@@Z ENDP ; std::vector<CTerrain *,std::allocator<CTerrain *> >::push_back
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\Client\GameLib\TerrainPatch.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\Client\GameLib\TerrainPatch.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?UpdateQuadTreeHeights@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@@Z
_TEXT	SEGMENT
_this$1$ = -12						; size = 4
tv1014 = -8						; size = 4
tv1015 = -4						; size = 4
_Node$ = 8						; size = 4
?UpdateQuadTreeHeights@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@@Z PROC ; CMapOutdoor::UpdateQuadTreeHeights, COMDAT
; _this$ = ecx

; 1065 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	53		 push	 ebx
  0000a	8b d9		 mov	 ebx, ecx
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	89 5c 24 0c	 mov	 DWORD PTR _this$1$[esp+24], ebx

; 1066 : 	// Inserted by levites
; 1067 : 	assert(NULL!=m_pTerrainPatchProxyList && "CMapOutdoor::UpdateQuadTreeHeights");
; 1068 : 	if (!m_pTerrainPatchProxyList)

  00012	8b 53 64	 mov	 edx, DWORD PTR [ebx+100]
  00015	85 d2		 test	 edx, edx
  00017	0f 84 d9 01 00
	00		 je	 $LN80@UpdateQuad

; 1089 : 
; 1090 : 			if (!m_pTerrainPatchProxyList[patch].isUsed())

  0001d	f3 0f 10 3d 00
	00 00 00	 movss	 xmm7, DWORD PTR __real@3f000000
  00025	8b 7d 08	 mov	 edi, DWORD PTR _Node$[ebp]
  00028	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL66@UpdateQuad:

; 1069 : 		return;
; 1070 : 
; 1071 : 	float minx, maxx, miny, maxy, minz, maxz;
; 1072 : 	minx = maxx = miny = maxy = minz = maxz = 0;
; 1073 : 
; 1074 : 	if (m_pTerrainPatchProxyList[Node->PatchNum].isUsed())

  00030	8b 47 28	 mov	 eax, DWORD PTR [edi+40]
  00033	0f 57 db	 xorps	 xmm3, xmm3
  00036	0f 57 ed	 xorps	 xmm5, xmm5
  00039	0f 57 e4	 xorps	 xmm4, xmm4
  0003c	0f 57 f6	 xorps	 xmm6, xmm6
  0003f	0f 57 d2	 xorps	 xmm2, xmm2
  00042	0f 57 c9	 xorps	 xmm1, xmm1
  00045	8d 0c c5 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*8]
  0004c	2b c8		 sub	 ecx, eax
  0004e	80 7c 8a 04 00	 cmp	 BYTE PTR [edx+ecx*4+4], 0
  00053	74 21		 je	 SHORT $LN9@UpdateQuad
; File C:\Marty 5.5\Src-Client\Client\GameLib\TerrainPatch.h

; 64   : 	float GetMinX()											{ return m_fMinX; }

  00055	8b 44 8a 0c	 mov	 eax, DWORD PTR [edx+ecx*4+12]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 1076 : 		minx = m_pTerrainPatchProxyList[Node->PatchNum].GetMinX();

  00059	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]

; 1077 : 		maxx = m_pTerrainPatchProxyList[Node->PatchNum].GetMaxX();

  0005d	f3 0f 10 50 04	 movss	 xmm2, DWORD PTR [eax+4]

; 1078 : 		miny = m_pTerrainPatchProxyList[Node->PatchNum].GetMinY();

  00062	f3 0f 10 70 08	 movss	 xmm6, DWORD PTR [eax+8]

; 1079 : 		maxy = m_pTerrainPatchProxyList[Node->PatchNum].GetMaxY();

  00067	f3 0f 10 60 0c	 movss	 xmm4, DWORD PTR [eax+12]

; 1080 : 		minz = m_pTerrainPatchProxyList[Node->PatchNum].GetMinZ();

  0006c	f3 0f 10 68 10	 movss	 xmm5, DWORD PTR [eax+16]

; 1081 : 		maxz = m_pTerrainPatchProxyList[Node->PatchNum].GetMaxZ();

  00071	f3 0f 10 58 14	 movss	 xmm3, DWORD PTR [eax+20]
$LN9@UpdateQuad:

; 1082 : 	}
; 1083 : 
; 1084 : 	for (long y = Node->y0; y <= Node->y1; y++)

  00076	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00079	8b 77 08	 mov	 esi, DWORD PTR [edi+8]
  0007c	89 44 24 14	 mov	 DWORD PTR tv1015[esp+24], eax
  00080	3b f0		 cmp	 esi, eax
  00082	0f 8f a8 00 00
	00		 jg	 $LN3@UpdateQuad

; 1085 : 	{
; 1086 : 		for (long x = Node->x0; x <= Node->x1; x++)

  00088	8b 57 0c	 mov	 edx, DWORD PTR [edi+12]
  0008b	8b 5f 04	 mov	 ebx, DWORD PTR [edi+4]
  0008e	8b 7c 24 0c	 mov	 edi, DWORD PTR _this$1$[esp+24]
  00092	89 54 24 10	 mov	 DWORD PTR tv1014[esp+24], edx
$LL4@UpdateQuad:
  00096	3b da		 cmp	 ebx, edx
  00098	0f 8f 82 00 00
	00		 jg	 $LN2@UpdateQuad

; 1087 : 		{
; 1088 : 			long patch = y * m_wPatchCount + x;

  0009e	0f b7 8f 8c 00
	00 00		 movzx	 ecx, WORD PTR [edi+140]
  000a5	2b d3		 sub	 edx, ebx
  000a7	0f af ce	 imul	 ecx, esi
  000aa	03 cb		 add	 ecx, ebx
  000ac	8d 04 cd 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*8]
  000b3	2b c1		 sub	 eax, ecx
  000b5	8b 4f 64	 mov	 ecx, DWORD PTR [edi+100]
  000b8	83 c1 0c	 add	 ecx, 12			; 0000000cH
  000bb	42		 inc	 edx
  000bc	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  000bf	90		 npad	 1
$LL7@UpdateQuad:

; 1089 : 
; 1090 : 			if (!m_pTerrainPatchProxyList[patch].isUsed())

  000c0	80 78 f8 00	 cmp	 BYTE PTR [eax-8], 0
  000c4	74 4a		 je	 SHORT $LN5@UpdateQuad
; File C:\Marty 5.5\Src-Client\Client\GameLib\TerrainPatch.h

; 64   : 	float GetMinX()											{ return m_fMinX; }

  000c6	8b 08		 mov	 ecx, DWORD PTR [eax]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 1093 : 			if (m_pTerrainPatchProxyList[patch].GetMinX() < minx)

  000c8	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  000cc	0f 2f c8	 comiss	 xmm1, xmm0
  000cf	76 03		 jbe	 SHORT $LN11@UpdateQuad

; 1094 : 				minx = m_pTerrainPatchProxyList[patch].GetMinX();

  000d1	0f 28 c8	 movaps	 xmm1, xmm0
$LN11@UpdateQuad:

; 1095 : 			if (m_pTerrainPatchProxyList[patch].GetMaxX() > maxx)

  000d4	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
  000d9	f3 0f 5f c2	 maxss	 xmm0, xmm2

; 1096 : 				maxx = m_pTerrainPatchProxyList[patch].GetMaxX();

  000dd	0f 28 d0	 movaps	 xmm2, xmm0

; 1097 : 
; 1098 : 			if (m_pTerrainPatchProxyList[patch].GetMinY() < miny)

  000e0	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  000e5	f3 0f 5d c6	 minss	 xmm0, xmm6

; 1099 : 				miny = m_pTerrainPatchProxyList[patch].GetMinY();

  000e9	0f 28 f0	 movaps	 xmm6, xmm0

; 1100 : 			if (m_pTerrainPatchProxyList[patch].GetMaxY() > maxy)

  000ec	f3 0f 10 41 0c	 movss	 xmm0, DWORD PTR [ecx+12]
  000f1	f3 0f 5f c4	 maxss	 xmm0, xmm4

; 1101 : 				maxy = m_pTerrainPatchProxyList[patch].GetMaxY();

  000f5	0f 28 e0	 movaps	 xmm4, xmm0

; 1102 : 
; 1103 : 			if (m_pTerrainPatchProxyList[patch].GetMinZ() < minz)

  000f8	f3 0f 10 41 10	 movss	 xmm0, DWORD PTR [ecx+16]
  000fd	f3 0f 5d c5	 minss	 xmm0, xmm5

; 1104 : 				minz = m_pTerrainPatchProxyList[patch].GetMinZ();

  00101	0f 28 e8	 movaps	 xmm5, xmm0

; 1105 : 			if (m_pTerrainPatchProxyList[patch].GetMaxZ() > maxz)

  00104	f3 0f 10 41 14	 movss	 xmm0, DWORD PTR [ecx+20]
  00109	f3 0f 5f c3	 maxss	 xmm0, xmm3

; 1106 : 				maxz = m_pTerrainPatchProxyList[patch].GetMaxZ();

  0010d	0f 28 d8	 movaps	 xmm3, xmm0
$LN5@UpdateQuad:

; 1085 : 	{
; 1086 : 		for (long x = Node->x0; x <= Node->x1; x++)

  00110	83 c0 1c	 add	 eax, 28			; 0000001cH
  00113	83 ea 01	 sub	 edx, 1
  00116	75 a8		 jne	 SHORT $LL7@UpdateQuad
  00118	8b 54 24 10	 mov	 edx, DWORD PTR tv1014[esp+24]
  0011c	8b 44 24 14	 mov	 eax, DWORD PTR tv1015[esp+24]
$LN2@UpdateQuad:

; 1082 : 	}
; 1083 : 
; 1084 : 	for (long y = Node->y0; y <= Node->y1; y++)

  00120	46		 inc	 esi
  00121	3b f0		 cmp	 esi, eax
  00123	0f 8e 6d ff ff
	ff		 jle	 $LL4@UpdateQuad
  00129	8b 7d 08	 mov	 edi, DWORD PTR _Node$[ebp]
  0012c	8b 5c 24 0c	 mov	 ebx, DWORD PTR _this$1$[esp+24]
$LN3@UpdateQuad:

; 1107 : 		}
; 1108 : 	}
; 1109 : 
; 1110 : 	Node->center.x = (maxx + minx) * 0.5f;

  00130	0f 28 c2	 movaps	 xmm0, xmm2

; 1114 : 	Node->radius = sqrtf((maxx-minx)*(maxx-minx) +

  00133	f3 0f 5c d1	 subss	 xmm2, xmm1
  00137	f3 0f 58 c1	 addss	 xmm0, xmm1
  0013b	0f 57 c9	 xorps	 xmm1, xmm1
  0013e	f3 0f 59 d2	 mulss	 xmm2, xmm2
  00142	f3 0f 59 c7	 mulss	 xmm0, xmm7
  00146	f3 0f 11 47 2c	 movss	 DWORD PTR [edi+44], xmm0
  0014b	0f 28 c4	 movaps	 xmm0, xmm4
  0014e	f3 0f 58 c6	 addss	 xmm0, xmm6
  00152	f3 0f 5c e6	 subss	 xmm4, xmm6
  00156	f3 0f 59 c7	 mulss	 xmm0, xmm7
  0015a	f3 0f 59 e4	 mulss	 xmm4, xmm4
  0015e	f3 0f 11 47 30	 movss	 DWORD PTR [edi+48], xmm0
  00163	0f 28 c3	 movaps	 xmm0, xmm3
  00166	f3 0f 5c dd	 subss	 xmm3, xmm5
  0016a	f3 0f 58 c5	 addss	 xmm0, xmm5
  0016e	f3 0f 58 d4	 addss	 xmm2, xmm4
  00172	f3 0f 59 db	 mulss	 xmm3, xmm3
  00176	f3 0f 59 c7	 mulss	 xmm0, xmm7
  0017a	f3 0f 58 d3	 addss	 xmm2, xmm3
  0017e	f3 0f 11 47 34	 movss	 DWORD PTR [edi+52], xmm0
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h

; 768  :             return (float)sqrt(_X);

  00183	0f 57 c0	 xorps	 xmm0, xmm0
  00186	f3 0f 5a c2	 cvtss2sd xmm0, xmm2
  0018a	66 0f 2e c8	 ucomisd xmm1, xmm0
  0018e	77 06		 ja	 SHORT $LN81@UpdateQuad
  00190	f2 0f 51 c0	 sqrtsd	 xmm0, xmm0
  00194	eb 05		 jmp	 SHORT $LN82@UpdateQuad
$LN81@UpdateQuad:
  00196	e8 00 00 00 00	 call	 __libm_sse2_sqrt_precise
$LN82@UpdateQuad:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 1118 : 	if (Node->NW_Node != NULL)

  0019b	8b 47 14	 mov	 eax, DWORD PTR [edi+20]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h

; 768  :             return (float)sqrt(_X);

  0019e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 1114 : 	Node->radius = sqrtf((maxx-minx)*(maxx-minx) +

  001a2	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
  001aa	f3 0f 11 47 38	 movss	 DWORD PTR [edi+56], xmm0

; 1118 : 	if (Node->NW_Node != NULL)

  001af	85 c0		 test	 eax, eax
  001b1	74 08		 je	 SHORT $LN17@UpdateQuad

; 1119 : 		UpdateQuadTreeHeights(Node->NW_Node);

  001b3	50		 push	 eax
  001b4	8b cb		 mov	 ecx, ebx
  001b6	e8 00 00 00 00	 call	 ?UpdateQuadTreeHeights@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@@Z ; CMapOutdoor::UpdateQuadTreeHeights
$LN17@UpdateQuad:

; 1120 : 
; 1121 : 	if (Node->NE_Node != NULL)

  001bb	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  001be	85 c0		 test	 eax, eax
  001c0	74 08		 je	 SHORT $LN18@UpdateQuad

; 1122 : 		UpdateQuadTreeHeights(Node->NE_Node);

  001c2	50		 push	 eax
  001c3	8b cb		 mov	 ecx, ebx
  001c5	e8 00 00 00 00	 call	 ?UpdateQuadTreeHeights@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@@Z ; CMapOutdoor::UpdateQuadTreeHeights
$LN18@UpdateQuad:

; 1123 : 
; 1124 : 	if (Node->SW_Node != NULL)

  001ca	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
  001cd	85 c0		 test	 eax, eax
  001cf	74 08		 je	 SHORT $LN19@UpdateQuad

; 1125 : 		UpdateQuadTreeHeights(Node->SW_Node);

  001d1	50		 push	 eax
  001d2	8b cb		 mov	 ecx, ebx
  001d4	e8 00 00 00 00	 call	 ?UpdateQuadTreeHeights@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@@Z ; CMapOutdoor::UpdateQuadTreeHeights
$LN19@UpdateQuad:

; 1126 : 
; 1127 : 	if (Node->SE_Node != NULL)

  001d9	8b 7f 20	 mov	 edi, DWORD PTR [edi+32]
  001dc	89 7d 08	 mov	 DWORD PTR _Node$[ebp], edi
  001df	85 ff		 test	 edi, edi
  001e1	74 13		 je	 SHORT $LN80@UpdateQuad

; 1066 : 	// Inserted by levites
; 1067 : 	assert(NULL!=m_pTerrainPatchProxyList && "CMapOutdoor::UpdateQuadTreeHeights");
; 1068 : 	if (!m_pTerrainPatchProxyList)

  001e3	8b 53 64	 mov	 edx, DWORD PTR [ebx+100]
  001e6	f3 0f 10 3d 00
	00 00 00	 movss	 xmm7, DWORD PTR __real@3f000000
  001ee	85 d2		 test	 edx, edx
  001f0	0f 85 3a fe ff
	ff		 jne	 $LL66@UpdateQuad
$LN80@UpdateQuad:

; 1128 : 		UpdateQuadTreeHeights(Node->SE_Node);
; 1129 : }

  001f6	5f		 pop	 edi
  001f7	5e		 pop	 esi
  001f8	5b		 pop	 ebx
  001f9	8b e5		 mov	 esp, ebp
  001fb	5d		 pop	 ebp
  001fc	c2 04 00	 ret	 4
?UpdateQuadTreeHeights@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@@Z ENDP ; CMapOutdoor::UpdateQuadTreeHeights
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?__IsInPCBlockerList@CMapOutdoor@@IAE_NPAVCGraphicObjectInstance@@@Z
_TEXT	SEGMENT
_pkObjInstTest$ = 8					; size = 4
?__IsInPCBlockerList@CMapOutdoor@@IAE_NPAVCGraphicObjectInstance@@@Z PROC ; CMapOutdoor::__IsInPCBlockerList, COMDAT
; _this$ = ecx

; 713  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00004	ff 75 08	 push	 DWORD PTR _pkObjInstTest$[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 713  : {

  00007	8b f1		 mov	 esi, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00009	ff b6 1c 0a 00
	00		 push	 DWORD PTR [esi+2588]
  0000f	ff b6 18 0a 00
	00		 push	 DWORD PTR [esi+2584]
  00015	e8 00 00 00 00	 call	 ??$__std_find_trivial@PAVCGraphicObjectInstance@@PAV1@@@YAPAPAVCGraphicObjectInstance@@PAPAV0@0QAV0@@Z ; __std_find_trivial<CGraphicObjectInstance *,CGraphicObjectInstance *>
  0001a	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 163  :         return _Ptr == _Right._Ptr;

  0001d	39 86 1c 0a 00
	00		 cmp	 DWORD PTR [esi+2588], eax
  00023	0f 95 c0	 setne	 al
  00026	5e		 pop	 esi
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 718  : }

  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?__IsInPCBlockerList@CMapOutdoor@@IAE_NPAVCGraphicObjectInstance@@@Z ENDP ; CMapOutdoor::__IsInPCBlockerList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?__IsInShadowReceiverList@CMapOutdoor@@IAE_NPAVCGraphicObjectInstance@@@Z
_TEXT	SEGMENT
_pkObjInstTest$ = 8					; size = 4
?__IsInShadowReceiverList@CMapOutdoor@@IAE_NPAVCGraphicObjectInstance@@@Z PROC ; CMapOutdoor::__IsInShadowReceiverList, COMDAT
; _this$ = ecx

; 705  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00004	ff 75 08	 push	 DWORD PTR _pkObjInstTest$[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 705  : {

  00007	8b f1		 mov	 esi, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00009	ff b6 10 0a 00
	00		 push	 DWORD PTR [esi+2576]
  0000f	ff b6 0c 0a 00
	00		 push	 DWORD PTR [esi+2572]
  00015	e8 00 00 00 00	 call	 ??$__std_find_trivial@PAVCGraphicObjectInstance@@PAV1@@@YAPAPAVCGraphicObjectInstance@@PAPAV0@0QAV0@@Z ; __std_find_trivial<CGraphicObjectInstance *,CGraphicObjectInstance *>
  0001a	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 163  :         return _Ptr == _Right._Ptr;

  0001d	39 86 10 0a 00
	00		 cmp	 DWORD PTR [esi+2576], eax
  00023	0f 95 c0	 setne	 al
  00026	5e		 pop	 esi
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 710  : }

  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?__IsInShadowReceiverList@CMapOutdoor@@IAE_NPAVCGraphicObjectInstance@@@Z ENDP ; CMapOutdoor::__IsInShadowReceiverList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?__UpdateAroundAreaList@CMapOutdoor@@IAEXXZ
_TEXT	SEGMENT
tv73 = -8						; size = 4
tv66 = -8						; size = 4
_pArea$1 = -4						; size = 4
?__UpdateAroundAreaList@CMapOutdoor@@IAEXXZ PROC	; CMapOutdoor::__UpdateAroundAreaList, COMDAT
; _this$ = ecx

; 300  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 301  : #ifdef __PERFORMANCE_CHECKER__
; 302  : 	DWORD ft1=timeGetTime();
; 303  : #endif
; 304  : 	DWORD at[AROUND_AREA_NUM];
; 305  : 	for (int i = 0; i < AROUND_AREA_NUM; ++i)

  00009	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__timeGetTime@0
  0000f	8b d9		 mov	 ebx, ecx
  00011	33 f6		 xor	 esi, esi
$LL4@UpdateArou:

; 306  : 	{
; 307  : 		DWORD t1=timeGetTime();

  00013	ff d7		 call	 edi

; 308  : 		CArea * pArea;
; 309  : 		if (GetAreaPointer(i, &pArea))

  00015	8d 45 fc	 lea	 eax, DWORD PTR _pArea$1[ebp]
  00018	8b cb		 mov	 ecx, ebx
  0001a	50		 push	 eax
  0001b	56		 push	 esi
  0001c	e8 00 00 00 00	 call	 ?GetAreaPointer@CMapOutdoor@@QAEHEPAPAVCArea@@@Z ; CMapOutdoor::GetAreaPointer
  00021	85 c0		 test	 eax, eax
  00023	74 08		 je	 SHORT $LN5@UpdateArou

; 310  : 			pArea->Update();

  00025	8b 4d fc	 mov	 ecx, DWORD PTR _pArea$1[ebp]
  00028	e8 00 00 00 00	 call	 ?Update@CArea@@QAEXXZ	; CArea::Update
$LN5@UpdateArou:

; 311  : 		DWORD t2=timeGetTime();

  0002d	ff d7		 call	 edi
  0002f	46		 inc	 esi
  00030	83 fe 09	 cmp	 esi, 9
  00033	7c de		 jl	 SHORT $LL4@UpdateArou

; 301  : #ifdef __PERFORMANCE_CHECKER__
; 302  : 	DWORD ft1=timeGetTime();
; 303  : #endif
; 304  : 	DWORD at[AROUND_AREA_NUM];
; 305  : 	for (int i = 0; i < AROUND_AREA_NUM; ++i)

  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx

; 312  : 
; 313  : 		at[i]=t2-t1;
; 314  : 	}
; 315  : #ifdef __PERFORMANCE_CHECKER__
; 316  : 	DWORD ft2=timeGetTime();
; 317  : 	if (ft2-ft1>5)
; 318  : 	{
; 319  : 		for (int i=0; i<AROUND_AREA_NUM; ++i)
; 320  : 			Tracef("Area %d %d\n", i, at[i]);
; 321  : 	}
; 322  : #endif
; 323  : }

  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?__UpdateAroundAreaList@CMapOutdoor@@IAEXXZ ENDP	; CMapOutdoor::__UpdateAroundAreaList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\SphereLib\vector.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\Client\SphereLib\vector.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\Client\SphereLib\vector.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?__CollectCollisionShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z
_TEXT	SEGMENT
_r$2 = -96						; size = 12
_kGetShadowReceiverFromCollisionData$ = -84		; size = 12
_pObjInstEach$3 = -72					; size = 4
_kVct_pkShadowReceiver$ = -68				; size = 12
_s$ = -56						; size = 28
_aVector3d$ = -28					; size = 12
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_v3Target$ = 8						; size = 4
_v3Light$ = 12						; size = 4
?__CollectCollisionShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z PROC ; CMapOutdoor::__CollectCollisionShadowReceiver, COMDAT
; _this$ = ecx

; 677  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?__CollectCollisionShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 54	 sub	 esp, 84			; 00000054H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b d9		 mov	 ebx, ecx
  0002d	8b 55 08	 mov	 edx, DWORD PTR _v3Target$[ebp]
  00030	8b 45 0c	 mov	 eax, DWORD PTR _v3Light$[ebp]

; 682  : 
; 683  : 	Vector3d aVector3d;
; 684  : 	aVector3d.Set(v3Target.x, v3Target.y, v3Target.z);
; 685  : 
; 686  : 	CCullingManager & rkCullingMgr = CCullingManager::Instance();

  00033	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCullingManager@@@@0PAVCCullingManager@@A ; CSingleton<CCullingManager>::ms_singleton
  00039	c7 45 e0 00 00
	48 42		 mov	 DWORD PTR _s$[ebp+24], 1112014848 ; 42480000H
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  00040	f3 0f 10 7a 04	 movss	 xmm7, DWORD PTR [edx+4]
  00045	f3 0f 10 6a 08	 movss	 xmm5, DWORD PTR [edx+8]
  0004a	0f 28 e7	 movaps	 xmm4, xmm7
  0004d	f3 0f 10 32	 movss	 xmm6, DWORD PTR [edx]
  00051	0f 28 cd	 movaps	 xmm1, xmm5
  00054	f3 0f 58 30	 addss	 xmm6, DWORD PTR [eax]
  00058	f3 0f 58 60 04	 addss	 xmm4, DWORD PTR [eax+4]
  0005d	f3 0f 58 48 08	 addss	 xmm1, DWORD PTR [eax+8]
; File C:\Marty 5.5\Src-Client\Client\SphereLib\vector.h

; 107  : 		x = a;

  00062	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  00066	f3 0f 11 45 e4	 movss	 DWORD PTR _aVector3d$[ebp], xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 680  : 	s.v3LastPosition = v3Target + v3Light;

  0006b	f3 0f 11 75 d4	 movss	 DWORD PTR _s$[ebp+12], xmm6
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  00070	f3 0f 58 30	 addss	 xmm6, DWORD PTR [eax]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 680  : 	s.v3LastPosition = v3Target + v3Light;

  00074	f3 0f 11 65 d8	 movss	 DWORD PTR _s$[ebp+16], xmm4
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  00079	f3 0f 58 60 04	 addss	 xmm4, DWORD PTR [eax+4]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 680  : 	s.v3LastPosition = v3Target + v3Light;

  0007e	f3 0f 11 4d dc	 movss	 DWORD PTR _s$[ebp+20], xmm1
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  00083	f3 0f 58 48 08	 addss	 xmm1, DWORD PTR [eax+8]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 681  : 	s.v3Position = s.v3LastPosition + v3Light;

  00088	f3 0f 11 75 c8	 movss	 DWORD PTR _s$[ebp], xmm6
; File C:\Marty 5.5\Src-Client\Client\SphereLib\vector.h

; 108  : 		y = b;

  0008d	f3 0f 11 7d e8	 movss	 DWORD PTR _aVector3d$[ebp+4], xmm7
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 681  : 	s.v3Position = s.v3LastPosition + v3Light;

  00092	f3 0f 11 65 cc	 movss	 DWORD PTR _s$[ebp+4], xmm4
; File C:\Marty 5.5\Src-Client\Client\SphereLib\vector.h

; 109  : 		z = c;

  00097	f3 0f 11 6d ec	 movss	 DWORD PTR _aVector3d$[ebp+8], xmm5
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 681  : 	s.v3Position = s.v3LastPosition + v3Light;

  0009c	f3 0f 11 4d d0	 movss	 DWORD PTR _s$[ebp+8], xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  000a1	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _kVct_pkShadowReceiver$[ebp], 0
  000a8	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _kVct_pkShadowReceiver$[ebp+4], 0
  000af	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _kVct_pkShadowReceiver$[ebp+8], 0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 168  : 	FGetShadowReceiverFromCollisionData(CDynamicSphereInstance * pdsi, std::vector<CGraphicObjectInstance *>* pkVct_pkShadowReceiver) : m_pdsi(pdsi), m_bCollide(false)

  000b6	8d 45 c8	 lea	 eax, DWORD PTR _s$[ebp]

; 687  : 
; 688  : 	std::vector<CGraphicObjectInstance *> kVct_pkShadowReceiver;

  000b9	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 168  : 	FGetShadowReceiverFromCollisionData(CDynamicSphereInstance * pdsi, std::vector<CGraphicObjectInstance *>* pkVct_pkShadowReceiver) : m_pdsi(pdsi), m_bCollide(false)

  000c0	89 45 b4	 mov	 DWORD PTR _kGetShadowReceiverFromCollisionData$[ebp+8], eax

; 169  : 	{
; 170  : 		m_pkVct_pkShadowReceiver=pkVct_pkShadowReceiver;

  000c3	8d 45 bc	 lea	 eax, DWORD PTR _kVct_pkShadowReceiver$[ebp]
  000c6	89 45 b0	 mov	 DWORD PTR _kGetShadowReceiverFromCollisionData$[ebp+4], eax
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h

; 15   : 		: f(fn), dist(distance)

  000c9	8d 45 ac	 lea	 eax, DWORD PTR _kGetShadowReceiverFromCollisionData$[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 168  : 	FGetShadowReceiverFromCollisionData(CDynamicSphereInstance * pdsi, std::vector<CGraphicObjectInstance *>* pkVct_pkShadowReceiver) : m_pdsi(pdsi), m_bCollide(false)

  000cc	c6 45 ac 00	 mov	 BYTE PTR _kGetShadowReceiverFromCollisionData$[ebp], 0
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h

; 16   : 	{}

  000d0	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR _r$2[ebp], OFFSET ??_7?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@6B@

; 15   : 		: f(fn), dist(distance)

  000d7	89 45 a4	 mov	 DWORD PTR _r$2[ebp+4], eax
  000da	c7 45 a8 00 00
	80 bf		 mov	 DWORD PTR _r$2[ebp+8], -1082130432 ; bf800000H

; 114  : 		m_Factory->RangeTest(p, radius, &r/*this*/);

  000e1	8d 45 a0	 lea	 eax, DWORD PTR _r$2[ebp]
  000e4	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000e8	50		 push	 eax
  000e9	51		 push	 ecx
  000ea	8b 49 1c	 mov	 ecx, DWORD PTR [ecx+28]
  000ed	8d 45 e4	 lea	 eax, DWORD PTR _aVector3d$[ebp]
  000f0	c7 04 24 00 00
	c8 42		 mov	 DWORD PTR [esp], 1120403456 ; 42c80000H
  000f7	50		 push	 eax
  000f8	e8 00 00 00 00	 call	 ?RangeTest@SpherePackFactory@@QAEXABVVector3d@@MPAVSpherePackCallback@@@Z ; SpherePackFactory::RangeTest
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 691  : 	if (!kGetShadowReceiverFromCollisionData.m_bCollide)

  000fd	80 7d ac 00	 cmp	 BYTE PTR _kGetShadowReceiverFromCollisionData$[ebp], 0
  00101	8b 75 bc	 mov	 esi, DWORD PTR _kVct_pkShadowReceiver$[ebp]
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h

; 115  : 	}

  00104	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 691  : 	if (!kGetShadowReceiverFromCollisionData.m_bCollide)

  00108	74 51		 je	 SHORT $LN3@CollectCol
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0010a	3b 75 c0	 cmp	 esi, DWORD PTR _kVct_pkShadowReceiver$[ebp+4]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 695  : 	for ( i = kVct_pkShadowReceiver.begin(); i != kVct_pkShadowReceiver.end(); ++i)

  0010d	74 4c		 je	 SHORT $LN3@CollectCol
  0010f	90		 npad	 1
$LL49@CollectCol:

; 696  : 	{
; 697  : 		CGraphicObjectInstance * pObjInstEach = *i;

  00110	8b 3e		 mov	 edi, DWORD PTR [esi]

; 698  : 		if (!__IsInPCBlockerList(pObjInstEach))

  00112	8b cb		 mov	 ecx, ebx
  00114	57		 push	 edi
  00115	89 7d b8	 mov	 DWORD PTR _pObjInstEach$3[ebp], edi
  00118	e8 00 00 00 00	 call	 ?__IsInPCBlockerList@CMapOutdoor@@IAE_NPAVCGraphicObjectInstance@@@Z ; CMapOutdoor::__IsInPCBlockerList
  0011d	84 c0		 test	 al, al
  0011f	75 2f		 jne	 SHORT $LN2@CollectCol

; 699  : 			if (!__IsInShadowReceiverList(pObjInstEach))

  00121	57		 push	 edi
  00122	8b cb		 mov	 ecx, ebx
  00124	e8 00 00 00 00	 call	 ?__IsInShadowReceiverList@CMapOutdoor@@IAE_NPAVCGraphicObjectInstance@@@Z ; CMapOutdoor::__IsInShadowReceiverList
  00129	84 c0		 test	 al, al
  0012b	75 23		 jne	 SHORT $LN2@CollectCol
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  0012d	8b 83 10 0a 00
	00		 mov	 eax, DWORD PTR [ebx+2576]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 700  : 				m_ShadowReceiverVector.push_back(pObjInstEach);

  00133	8d 8b 0c 0a 00
	00		 lea	 ecx, DWORD PTR [ebx+2572]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  00139	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  0013c	74 08		 je	 SHORT $LN81@CollectCol

; 797  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  0013e	89 38		 mov	 DWORD PTR [eax], edi

; 798  :         } else {
; 799  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 800  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 801  :             _ASAN_VECTOR_RELEASE_GUARD;
; 802  :         }
; 803  : 
; 804  :         _Orphan_range(_Mylast, _Mylast);
; 805  :         _Ty& _Result = *_Mylast;
; 806  :         ++_Mylast;

  00140	83 41 04 04	 add	 DWORD PTR [ecx+4], 4

; 782  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00144	eb 0a		 jmp	 SHORT $LN2@CollectCol
$LN81@CollectCol:

; 783  :         }
; 784  : 
; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00146	8d 55 b8	 lea	 edx, DWORD PTR _pObjInstEach$3[ebp]
  00149	52		 push	 edx
  0014a	50		 push	 eax
  0014b	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicObjectInstance@@@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@AAEPAPAVCGraphicObjectInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::_Emplace_reallocate<CGraphicObjectInstance * const &>
$LN2@CollectCol:

; 79   :         ++_Ptr;

  00150	83 c6 04	 add	 esi, 4

; 163  :         return _Ptr == _Right._Ptr;

  00153	3b 75 c0	 cmp	 esi, DWORD PTR _kVct_pkShadowReceiver$[ebp+4]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 695  : 	for ( i = kVct_pkShadowReceiver.begin(); i != kVct_pkShadowReceiver.end(); ++i)

  00156	75 b8		 jne	 SHORT $LL49@CollectCol
  00158	8b 75 bc	 mov	 esi, DWORD PTR _kVct_pkShadowReceiver$[ebp]
$LN3@CollectCol:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  0015b	85 f6		 test	 esi, esi
  0015d	74 2c		 je	 SHORT $LN24@CollectCol

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0015f	8b 4d c4	 mov	 ecx, DWORD PTR _kVct_pkShadowReceiver$[ebp+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00162	8b c6		 mov	 eax, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00164	2b ce		 sub	 ecx, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00166	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00169	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0016f	72 10		 jb	 SHORT $LN40@CollectCol

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00171	8b 70 fc	 mov	 esi, DWORD PTR [eax-4]
  00174	83 c1 23	 add	 ecx, 35			; 00000023H
  00177	2b c6		 sub	 eax, esi

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00179	83 c0 fc	 add	 eax, -4			; fffffffcH
  0017c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0017f	77 28		 ja	 SHORT $LN108@CollectCol
$LN40@CollectCol:

; 265  :         ::operator delete(_Ptr, _Bytes);

  00181	51		 push	 ecx
  00182	56		 push	 esi
  00183	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00188	83 c4 08	 add	 esp, 8
$LN24@CollectCol:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 702  : }

  0018b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0018e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00195	59		 pop	 ecx
  00196	5f		 pop	 edi
  00197	5e		 pop	 esi
  00198	5b		 pop	 ebx
  00199	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0019c	33 cd		 xor	 ecx, ebp
  0019e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001a3	8b e5		 mov	 esp, ebp
  001a5	5d		 pop	 ebp
  001a6	c2 08 00	 ret	 8
$LN108@CollectCol:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  001a9	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN106@CollectCol:
  001ae	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?__CollectCollisionShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z$0:
  00000	8d 4d bc	 lea	 ecx, DWORD PTR _kVct_pkShadowReceiver$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@QAE@XZ ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::~vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >
__unwindfunclet$?__CollectCollisionShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z$1:
  00008	8d 4d a0	 lea	 ecx, DWORD PTR _r$2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$RangeTester@UFGetShadowReceiverFromCollisionData@@@@UAE@XZ ; RangeTester<FGetShadowReceiverFromCollisionData>::~RangeTester<FGetShadowReceiverFromCollisionData>
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$?__CollectCollisionShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a 9c	 mov	 ecx, DWORD PTR [edx-100]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?__CollectCollisionShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?__CollectCollisionShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z ENDP ; CMapOutdoor::__CollectCollisionShadowReceiver
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\Client\SphereLib\vector.h
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\Client\SphereLib\vector.h
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\SphereLib\vector.h
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?__CollectCollisionPCBlocker@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0M@Z
_TEXT	SEGMENT
_kPCBlockerList$ = -2268				; size = 2084
_kPCBlockerRangeTester$ = -184				; size = 12
_m_v3View$3 = -172					; size = 12
_v3Eye$GSCopy$1$ = -160					; size = 4
_pObjInstEach$4 = -156					; size = 4
_aDynamicSphereInstanceVector$ = -152			; size = 112
_v3dRayStart$ = -40					; size = 12
_m_v3Target$5 = -28					; size = 12
__Pred$ = -28						; size = 12
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_v3Eye$ = 8						; size = 4
_v3Target$ = 12						; size = 4
_fDistance$ = 16					; size = 4
?__CollectCollisionPCBlocker@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0M@Z PROC ; CMapOutdoor::__CollectCollisionPCBlocker, COMDAT
; _this$ = ecx

; 584  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?__CollectCollisionPCBlocker@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0M@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec d0 08 00
	00		 sub	 esp, 2256		; 000008d0H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	8b f9		 mov	 edi, ecx
  00030	8b 75 08	 mov	 esi, DWORD PTR _v3Eye$[ebp]
  00033	8b 55 0c	 mov	 edx, DWORD PTR _v3Target$[ebp]

; 598  : 		pkDSI->fRadius = fDistance * 0.5f;

  00036	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@3f000000
  0003e	f3 0f 10 65 10	 movss	 xmm4, DWORD PTR _fDistance$[ebp]

; 599  : 		pkDSI->v3LastPosition = v3Eye;

  00043	f3 0f 7e 06	 movq	 xmm0, QWORD PTR [esi]
  00047	f3 0f 10 2e	 movss	 xmm5, DWORD PTR [esi]
  0004b	f3 0f 10 76 04	 movss	 xmm6, DWORD PTR [esi+4]
  00050	f3 0f 10 7e 08	 movss	 xmm7, DWORD PTR [esi+8]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00055	f3 0f 10 4a 04	 movss	 xmm1, DWORD PTR [edx+4]
  0005a	f3 0f 10 5a 08	 movss	 xmm3, DWORD PTR [edx+8]
  0005f	f3 0f 5c ce	 subss	 xmm1, xmm6
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 599  : 		pkDSI->v3LastPosition = v3Eye;

  00063	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00066	f3 0f 5c df	 subss	 xmm3, xmm7
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 464  : 		m_pCamera = CCameraManager::Instance().GetCurrentCamera();

  0006a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton

; 616  : 		++pkDSI;
; 617  : 	}
; 618  : #ifdef __PERFORMANCE_CHECKER__
; 619  : 	DWORD t3=timeGetTime();
; 620  : #endif
; 621  : 	CCullingManager & rkCullingMgr = CCullingManager::Instance();

  00070	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?ms_singleton@?$CSingleton@VCCullingManager@@@@0PAVCCullingManager@@A ; CSingleton<CCullingManager>::ms_singleton
  00076	66 0f d6 85 74
	ff ff ff	 movq	 QWORD PTR _aDynamicSphereInstanceVector$[ebp+12], xmm0
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0007e	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  00082	f3 0f 5c c5	 subss	 xmm0, xmm5

; 283  :     return D3DXVECTOR3(f * v.x, f * v.y, f * v.z);

  00086	f3 0f 59 ca	 mulss	 xmm1, xmm2
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 599  : 		pkDSI->v3LastPosition = v3Eye;

  0008a	89 85 7c ff ff
	ff		 mov	 DWORD PTR _aDynamicSphereInstanceVector$[ebp+20], eax

; 605  : 		pkDSI->v3Position = v3Target;

  00090	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 283  :     return D3DXVECTOR3(f * v.x, f * v.y, f * v.z);

  00093	f3 0f 59 da	 mulss	 xmm3, xmm2
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 605  : 		pkDSI->v3Position = v3Target;

  00097	89 45 8c	 mov	 DWORD PTR _aDynamicSphereInstanceVector$[ebp+36], eax
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 182  :     z = fz;

  0009a	f3 0f 59 c2	 mulss	 xmm0, xmm2
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 609  : 		pkDSI->v3LastPosition = v3Target;

  0009e	89 45 b4	 mov	 DWORD PTR _aDynamicSphereInstanceVector$[ebp+76], eax

; 610  : 		pkDSI->v3Position = v3Eye + 0.5f * (v3Target - v3Eye);
; 611  : 		++pkDSI;
; 612  : 
; 613  : 		pkDSI->fRadius = fDistance * 0.5f;
; 614  : 		pkDSI->v3LastPosition = v3Eye + 0.5f * (v3Target - v3Eye);
; 615  : 		pkDSI->v3Position = v3Eye;

  000a1	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
; File C:\Marty 5.5\Src-Client\Client\SphereLib\vector.h

; 107  : 		x = a;

  000a4	f3 0f 11 6d d8	 movss	 DWORD PTR _v3dRayStart$[ebp], xmm5
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  000a9	f3 0f 58 e8	 addss	 xmm5, xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 598  : 		pkDSI->fRadius = fDistance * 0.5f;

  000ad	f3 0f 59 e2	 mulss	 xmm4, xmm2
  000b1	89 b5 60 ff ff
	ff		 mov	 DWORD PTR _v3Eye$GSCopy$1$[ebp], esi

; 605  : 		pkDSI->v3Position = v3Target;

  000b7	f3 0f 7e 02	 movq	 xmm0, QWORD PTR [edx]
; File C:\Marty 5.5\Src-Client\Client\SphereLib\vector.h

; 108  : 		y = b;

  000bb	f3 0f 11 75 dc	 movss	 DWORD PTR _v3dRayStart$[ebp+4], xmm6
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  000c0	f3 0f 58 f1	 addss	 xmm6, xmm1
; File C:\Marty 5.5\Src-Client\Client\SphereLib\vector.h

; 109  : 		z = c;

  000c4	f3 0f 11 7d e0	 movss	 DWORD PTR _v3dRayStart$[ebp+8], xmm7
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  000c9	f3 0f 58 fb	 addss	 xmm7, xmm3
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 605  : 		pkDSI->v3Position = v3Target;

  000cd	66 0f d6 45 84	 movq	 QWORD PTR _aDynamicSphereInstanceVector$[ebp+28], xmm0

; 609  : 		pkDSI->v3LastPosition = v3Target;

  000d2	f3 0f 7e c0	 movq	 xmm0, xmm0
  000d6	66 0f d6 45 ac	 movq	 QWORD PTR _aDynamicSphereInstanceVector$[ebp+68], xmm0

; 610  : 		pkDSI->v3Position = v3Eye + 0.5f * (v3Target - v3Eye);
; 611  : 		++pkDSI;
; 612  : 
; 613  : 		pkDSI->fRadius = fDistance * 0.5f;
; 614  : 		pkDSI->v3LastPosition = v3Eye + 0.5f * (v3Target - v3Eye);
; 615  : 		pkDSI->v3Position = v3Eye;

  000db	f3 0f 7e 06	 movq	 xmm0, QWORD PTR [esi]
  000df	f3 0f 11 65 80	 movss	 DWORD PTR _aDynamicSphereInstanceVector$[ebp+24], xmm4
  000e4	f3 0f 11 ad 68
	ff ff ff	 movss	 DWORD PTR _aDynamicSphereInstanceVector$[ebp], xmm5
  000ec	f3 0f 11 b5 6c
	ff ff ff	 movss	 DWORD PTR _aDynamicSphereInstanceVector$[ebp+4], xmm6
  000f4	f3 0f 11 bd 70
	ff ff ff	 movss	 DWORD PTR _aDynamicSphereInstanceVector$[ebp+8], xmm7
  000fc	f3 0f 11 65 9c	 movss	 DWORD PTR _aDynamicSphereInstanceVector$[ebp+52], xmm4
  00101	f3 0f 11 6d 90	 movss	 DWORD PTR _aDynamicSphereInstanceVector$[ebp+40], xmm5
  00106	f3 0f 11 75 94	 movss	 DWORD PTR _aDynamicSphereInstanceVector$[ebp+44], xmm6
  0010b	f3 0f 11 7d 98	 movss	 DWORD PTR _aDynamicSphereInstanceVector$[ebp+48], xmm7
  00110	f3 0f 11 65 b8	 movss	 DWORD PTR _aDynamicSphereInstanceVector$[ebp+80], xmm4
  00115	f3 0f 11 6d a0	 movss	 DWORD PTR _aDynamicSphereInstanceVector$[ebp+56], xmm5
  0011a	f3 0f 11 75 a4	 movss	 DWORD PTR _aDynamicSphereInstanceVector$[ebp+60], xmm6
  0011f	f3 0f 11 7d a8	 movss	 DWORD PTR _aDynamicSphereInstanceVector$[ebp+64], xmm7
  00124	f3 0f 11 65 d4	 movss	 DWORD PTR _aDynamicSphereInstanceVector$[ebp+108], xmm4
  00129	f3 0f 11 6d c8	 movss	 DWORD PTR _aDynamicSphereInstanceVector$[ebp+96], xmm5
  0012e	f3 0f 11 75 cc	 movss	 DWORD PTR _aDynamicSphereInstanceVector$[ebp+100], xmm6
  00133	f3 0f 11 7d d0	 movss	 DWORD PTR _aDynamicSphereInstanceVector$[ebp+104], xmm7
  00138	66 0f d6 45 bc	 movq	 QWORD PTR _aDynamicSphereInstanceVector$[ebp+84], xmm0
  0013d	89 45 c4	 mov	 DWORD PTR _aDynamicSphereInstanceVector$[ebp+92], eax

; 464  : 		m_pCamera = CCameraManager::Instance().GetCurrentCamera();

  00140	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera
  00145	8b c8		 mov	 ecx, eax
  00147	89 8d 34 ff ff
	ff		 mov	 DWORD PTR _kPCBlockerList$[ebp+2064], ecx
  0014d	85 c9		 test	 ecx, ecx

; 465  : 		if (!m_pCamera)

  0014f	0f 84 81 00 00
	00		 je	 $LN82@CollectCol

; 466  : 			return;
; 467  : 
; 468  : 		D3DXVECTOR3 m_v3View = m_pCamera->GetView();

  00155	f3 0f 7e 41 54	 movq	 xmm0, QWORD PTR [ecx+84]

; 469  : 		D3DXVECTOR3 m_v3Target = m_pCamera->GetTarget();

  0015a	8b 41 44	 mov	 eax, DWORD PTR [ecx+68]
  0015d	66 0f d6 85 54
	ff ff ff	 movq	 QWORD PTR _m_v3View$3[ebp], xmm0
  00165	f3 0f 7e 41 3c	 movq	 xmm0, QWORD PTR [ecx+60]
  0016a	66 0f d6 45 e4	 movq	 QWORD PTR _m_v3Target$5[ebp], xmm0

; 470  : 
; 471  : 		m_v2View.x = m_v3View.x;

  0016f	f3 0f 10 85 54
	ff ff ff	 movss	 xmm0, DWORD PTR _m_v3View$3[ebp]
  00177	f3 0f 11 85 38
	ff ff ff	 movss	 DWORD PTR _kPCBlockerList$[ebp+2068], xmm0

; 472  : 		m_v2View.y = m_v3View.y;

  0017f	f3 0f 10 85 58
	ff ff ff	 movss	 xmm0, DWORD PTR _m_v3View$3[ebp+4]
  00187	f3 0f 11 85 3c
	ff ff ff	 movss	 DWORD PTR _kPCBlockerList$[ebp+2072], xmm0

; 473  : 
; 474  : 		m_v2Target.x = m_v3Target.x;

  0018f	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _m_v3Target$5[ebp]
  00194	89 45 ec	 mov	 DWORD PTR _m_v3Target$5[ebp+8], eax

; 475  : 		m_v2Target.y = m_v3Target.y;
; 476  : 
; 477  : 		m_pkDSIVector=pkDSIVector;

  00197	8d 85 68 ff ff
	ff		 lea	 eax, DWORD PTR _aDynamicSphereInstanceVector$[ebp]
  0019d	f3 0f 11 85 40
	ff ff ff	 movss	 DWORD PTR _kPCBlockerList$[ebp+2076], xmm0
  001a5	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _m_v3Target$5[ebp+4]
  001aa	f3 0f 11 85 44
	ff ff ff	 movss	 DWORD PTR _kPCBlockerList$[ebp+2080], xmm0
  001b2	89 85 30 ff ff
	ff		 mov	 DWORD PTR _kPCBlockerList$[ebp+2060], eax

; 478  : 		m_dwBlockerCount=0;

  001b8	c7 85 28 f7 ff
	ff 00 00 00 00	 mov	 DWORD PTR _kPCBlockerList$[ebp+4], 0

; 479  : 		m_dwBlockerOverCount=0;

  001c2	c7 85 2c f7 ff
	ff 00 00 00 00	 mov	 DWORD PTR _kPCBlockerList$[ebp+8], 0

; 480  : 		m_dwInstCount=0;

  001cc	c7 85 24 f7 ff
	ff 00 00 00 00	 mov	 DWORD PTR _kPCBlockerList$[ebp], 0
$LN82@CollectCol:
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h

; 15   : 		: f(fn), dist(distance)

  001d6	8d 85 24 f7 ff
	ff		 lea	 eax, DWORD PTR _kPCBlockerList$[ebp]
  001dc	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _kPCBlockerRangeTester$[ebp], OFFSET ??_7?$RangeTester@UPCBlocker_SInstanceList@@@@6B@
  001e6	89 85 4c ff ff
	ff		 mov	 DWORD PTR _kPCBlockerRangeTester$[ebp+4], eax
  001ec	c7 85 50 ff ff
	ff 00 00 80 bf	 mov	 DWORD PTR _kPCBlockerRangeTester$[ebp+8], -1082130432 ; bf800000H

; 95   : 		m_Factory->RangeTest(p, radius, callback);

  001f6	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fDistance$[ebp]
  001fb	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR _kPCBlockerRangeTester$[ebp]
  00201	50		 push	 eax
  00202	51		 push	 ecx
  00203	8b 4b 1c	 mov	 ecx, DWORD PTR [ebx+28]
  00206	8d 45 d8	 lea	 eax, DWORD PTR _v3dRayStart$[ebp]
  00209	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0020e	50		 push	 eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 624  : 	RangeTester<PCBlocker_SInstanceList> kPCBlockerRangeTester(&kPCBlockerList);

  0020f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h

; 95   : 		m_Factory->RangeTest(p, radius, callback);

  00216	e8 00 00 00 00	 call	 ?RangeTest@SpherePackFactory@@QAEXABVVector3d@@MPAVSpherePackCallback@@@Z ; SpherePackFactory::RangeTest
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 514  : 		if (m_dwBlockerCount>0)

  0021b	8b 85 28 f7 ff
	ff		 mov	 eax, DWORD PTR _kPCBlockerList$[ebp+4]
  00221	85 c0		 test	 eax, eax
  00223	0f 84 92 00 00
	00		 je	 $LN3@CollectCol

; 625  : 	rkCullingMgr.RangeTest(v3dRayStart, fDistance, &kPCBlockerRangeTester);
; 626  : #ifdef __PERFORMANCE_CHECKER__
; 627  :  	DWORD t4=timeGetTime();
; 628  : #endif
; 629  : 
; 630  : 	if (!kPCBlockerList.IsEmpty())
; 631  : 	{
; 632  : 		PCBlocker_SInstanceList::Iterator i;
; 633  : 
; 634  : 		for (i=kPCBlockerList.Begin(); i!=kPCBlockerList.End(); ++i)

  00229	8d 9d 30 f7 ff
	ff		 lea	 ebx, DWORD PTR _kPCBlockerList$[ebp+12]

; 504  : 		return m_apkPCBlocker+m_dwBlockerCount;

  0022f	8b cb		 mov	 ecx, ebx
  00231	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]

; 625  : 	rkCullingMgr.RangeTest(v3dRayStart, fDistance, &kPCBlockerRangeTester);
; 626  : #ifdef __PERFORMANCE_CHECKER__
; 627  :  	DWORD t4=timeGetTime();
; 628  : #endif
; 629  : 
; 630  : 	if (!kPCBlockerList.IsEmpty())
; 631  : 	{
; 632  : 		PCBlocker_SInstanceList::Iterator i;
; 633  : 
; 634  : 		for (i=kPCBlockerList.Begin(); i!=kPCBlockerList.End(); ++i)

  00234	3b c8		 cmp	 ecx, eax
  00236	0f 84 7f 00 00
	00		 je	 $LN3@CollectCol
  0023c	0f 1f 40 00	 npad	 4
$LL4@CollectCol:

; 635  : 		{
; 636  : 			CGraphicObjectInstance * pObjInstEach = *i;

  00240	8b 33		 mov	 esi, DWORD PTR [ebx]
  00242	89 b5 64 ff ff
	ff		 mov	 DWORD PTR _pObjInstEach$4[ebp], esi
  00248	85 f6		 test	 esi, esi

; 637  : 
; 638  : 			if (!pObjInstEach)

  0024a	74 55		 je	 SHORT $LN2@CollectCol

; 639  : 				continue;
; 640  : 
; 641  : 			if (TREE_OBJECT == pObjInstEach->GetType() && !m_bTransparentTree)

  0024c	8b 06		 mov	 eax, DWORD PTR [esi]
  0024e	8b ce		 mov	 ecx, esi
  00250	ff 50 04	 call	 DWORD PTR [eax+4]
  00253	3d a6 f7 c9 8a	 cmp	 eax, -1966475354	; 8ac9f7a6H
  00258	75 09		 jne	 SHORT $LN7@CollectCol
  0025a	80 bf b5 0e 00
	00 00		 cmp	 BYTE PTR [edi+3765], 0
  00261	74 3e		 je	 SHORT $LN2@CollectCol
$LN7@CollectCol:

; 642  : 				continue;
; 643  : 
; 644  : 			if (!__IsInShadowReceiverList(pObjInstEach))

  00263	56		 push	 esi
  00264	8b cf		 mov	 ecx, edi
  00266	e8 00 00 00 00	 call	 ?__IsInShadowReceiverList@CMapOutdoor@@IAE_NPAVCGraphicObjectInstance@@@Z ; CMapOutdoor::__IsInShadowReceiverList
  0026b	84 c0		 test	 al, al
  0026d	75 32		 jne	 SHORT $LN2@CollectCol

; 645  : 				if (!__IsInPCBlockerList(pObjInstEach))

  0026f	56		 push	 esi
  00270	8b cf		 mov	 ecx, edi
  00272	e8 00 00 00 00	 call	 ?__IsInPCBlockerList@CMapOutdoor@@IAE_NPAVCGraphicObjectInstance@@@Z ; CMapOutdoor::__IsInPCBlockerList
  00277	84 c0		 test	 al, al
  00279	75 26		 jne	 SHORT $LN2@CollectCol
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  0027b	8b 87 1c 0a 00
	00		 mov	 eax, DWORD PTR [edi+2588]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 646  : 					m_PCBlockerVector.push_back(pObjInstEach);

  00281	8d 8f 18 0a 00
	00		 lea	 ecx, DWORD PTR [edi+2584]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  00287	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  0028a	74 08		 je	 SHORT $LN97@CollectCol

; 797  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  0028c	89 30		 mov	 DWORD PTR [eax], esi

; 798  :         } else {
; 799  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 800  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 801  :             _ASAN_VECTOR_RELEASE_GUARD;
; 802  :         }
; 803  : 
; 804  :         _Orphan_range(_Mylast, _Mylast);
; 805  :         _Ty& _Result = *_Mylast;
; 806  :         ++_Mylast;

  0028e	83 41 04 04	 add	 DWORD PTR [ecx+4], 4

; 782  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00292	eb 0d		 jmp	 SHORT $LN2@CollectCol
$LN97@CollectCol:

; 783  :         }
; 784  : 
; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00294	8d 95 64 ff ff
	ff		 lea	 edx, DWORD PTR _pObjInstEach$4[ebp]
  0029a	52		 push	 edx
  0029b	50		 push	 eax
  0029c	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicObjectInstance@@@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@AAEPAPAVCGraphicObjectInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::_Emplace_reallocate<CGraphicObjectInstance * const &>
$LN2@CollectCol:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 504  : 		return m_apkPCBlocker+m_dwBlockerCount;

  002a1	8b 85 28 f7 ff
	ff		 mov	 eax, DWORD PTR _kPCBlockerList$[ebp+4]

; 625  : 	rkCullingMgr.RangeTest(v3dRayStart, fDistance, &kPCBlockerRangeTester);
; 626  : #ifdef __PERFORMANCE_CHECKER__
; 627  :  	DWORD t4=timeGetTime();
; 628  : #endif
; 629  : 
; 630  : 	if (!kPCBlockerList.IsEmpty())
; 631  : 	{
; 632  : 		PCBlocker_SInstanceList::Iterator i;
; 633  : 
; 634  : 		for (i=kPCBlockerList.Begin(); i!=kPCBlockerList.End(); ++i)

  002a7	83 c3 04	 add	 ebx, 4

; 504  : 		return m_apkPCBlocker+m_dwBlockerCount;

  002aa	8d 84 85 30 f7
	ff ff		 lea	 eax, DWORD PTR _kPCBlockerList$[ebp+eax*4+12]

; 625  : 	rkCullingMgr.RangeTest(v3dRayStart, fDistance, &kPCBlockerRangeTester);
; 626  : #ifdef __PERFORMANCE_CHECKER__
; 627  :  	DWORD t4=timeGetTime();
; 628  : #endif
; 629  : 
; 630  : 	if (!kPCBlockerList.IsEmpty())
; 631  : 	{
; 632  : 		PCBlocker_SInstanceList::Iterator i;
; 633  : 
; 634  : 		for (i=kPCBlockerList.Begin(); i!=kPCBlockerList.End(); ++i)

  002b1	3b d8		 cmp	 ebx, eax
  002b3	75 8b		 jne	 SHORT $LL4@CollectCol
  002b5	8b b5 60 ff ff
	ff		 mov	 esi, DWORD PTR _v3Eye$GSCopy$1$[ebp]
$LN3@CollectCol:

; 652  : 	std::sort(m_PCBlockerVector.begin(), m_PCBlockerVector.end(), FPCBlockerDistanceSort(v3Eye));

  002bb	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  002be	8b 8f 1c 0a 00
	00		 mov	 ecx, DWORD PTR [edi+2588]
  002c4	8b 97 18 0a 00
	00		 mov	 edx, DWORD PTR [edi+2584]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 652  : 	std::sort(m_PCBlockerVector.begin(), m_PCBlockerVector.end(), FPCBlockerDistanceSort(v3Eye));

  002ca	f3 0f 7e 06	 movq	 xmm0, QWORD PTR [esi]
  002ce	89 45 ec	 mov	 DWORD PTR __Pred$[ebp+8], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8067 :     _Sort_unchecked(_UFirst, _ULast, _ULast - _UFirst, _Pass_fn(_Pred));

  002d1	8d 45 e4	 lea	 eax, DWORD PTR __Pred$[ebp]
  002d4	50		 push	 eax
  002d5	8b c1		 mov	 eax, ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 652  : 	std::sort(m_PCBlockerVector.begin(), m_PCBlockerVector.end(), FPCBlockerDistanceSort(v3Eye));

  002d7	66 0f d6 45 e4	 movq	 QWORD PTR __Pred$[ebp], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8067 :     _Sort_unchecked(_UFirst, _ULast, _ULast - _UFirst, _Pass_fn(_Pred));

  002dc	2b c2		 sub	 eax, edx
  002de	c1 f8 02	 sar	 eax, 2
  002e1	50		 push	 eax
  002e2	51		 push	 ecx
  002e3	52		 push	 edx
  002e4	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAPAVCGraphicObjectInstance@@U?$_Ref_fn@UFPCBlockerDistanceSort@@@std@@@std@@YAXPAPAVCGraphicObjectInstance@@0HU?$_Ref_fn@UFPCBlockerDistanceSort@@@0@@Z ; std::_Sort_unchecked<CGraphicObjectInstance * *,std::_Ref_fn<FPCBlockerDistanceSort> >
  002e9	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 674  : }

  002ec	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  002ef	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  002f6	59		 pop	 ecx
  002f7	5f		 pop	 edi
  002f8	5e		 pop	 esi
  002f9	5b		 pop	 ebx
  002fa	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002fd	33 cd		 xor	 ecx, ebp
  002ff	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00304	8b e5		 mov	 esp, ebp
  00306	5d		 pop	 ebp
  00307	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?__CollectCollisionPCBlocker@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0M@Z$0:
  00000	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR _kPCBlockerRangeTester$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1?$RangeTester@UPCBlocker_SInstanceList@@@@UAE@XZ ; RangeTester<PCBlocker_SInstanceList>::~RangeTester<PCBlocker_SInstanceList>
  0000b	cc		 int	 3
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
__ehhandler$?__CollectCollisionPCBlocker@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0M@Z:
  00010	90		 npad	 1
  00011	90		 npad	 1
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 8a 20 f7 ff
	ff		 mov	 ecx, DWORD PTR [edx-2272]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00029	33 c8		 xor	 ecx, eax
  0002b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00030	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?__CollectCollisionPCBlocker@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0M@Z
  00035	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?__CollectCollisionPCBlocker@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0M@Z ENDP ; CMapOutdoor::__CollectCollisionPCBlocker
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\SphereLib\vector.h
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\SphereLib\vector.h
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\SphereLib\vector.h
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?__CollectShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z
_TEXT	SEGMENT
_kGetShadowReceiverFromHeightData$ = -480		; size = 436
_r$2 = -44						; size = 12
_pObjInstEach$3 = -32					; size = 4
_aVector3d$ = -28					; size = 12
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_v3Target$ = 8						; size = 4
_v3Light$ = 12						; size = 4
?__CollectShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z PROC ; CMapOutdoor::__CollectShadowReceiver, COMDAT
; _this$ = ecx

; 389  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?__CollectShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec d4 01 00
	00		 sub	 esp, 468		; 000001d4H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	8b d9		 mov	 ebx, ecx
  00030	8b 45 0c	 mov	 eax, DWORD PTR _v3Light$[ebp]
  00033	8b 55 08	 mov	 edx, DWORD PTR _v3Target$[ebp]

; 390  : 	CDynamicSphereInstance s;
; 391  : 	s.v3LastPosition = v3Target + v3Light;
; 392  : 	s.v3Position = s.v3LastPosition + v3Light;
; 393  : 	s.fRadius = 50.0f;
; 394  : 
; 395  : 	Vector3d aVector3d;
; 396  : 	aVector3d.Set(v3Target.x, v3Target.y, v3Target.z);
; 397  : 
; 398  : 	CCullingManager & rkCullingMgr = CCullingManager::Instance();

  00036	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCullingManager@@@@0PAVCCullingManager@@A ; CSingleton<CCullingManager>::ms_singleton

; 343  : 	m_fFromX(fFromX), m_fFromY(fFromY), m_fToX(fToX), m_fToY(fToY), m_bReceiverFound(false)

  0003c	c6 85 2c fe ff
	ff 00		 mov	 BYTE PTR _kGetShadowReceiverFromHeightData$[ebp+12], 0
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  00043	f3 0f 10 18	 movss	 xmm3, DWORD PTR [eax]
  00047	f3 0f 10 2a	 movss	 xmm5, DWORD PTR [edx]
  0004b	f3 0f 10 62 04	 movss	 xmm4, DWORD PTR [edx+4]
  00050	f3 0f 58 dd	 addss	 xmm3, xmm5
  00054	f3 0f 10 50 04	 movss	 xmm2, DWORD PTR [eax+4]
; File C:\Marty 5.5\Src-Client\Client\SphereLib\vector.h

; 109  : 		z = c;

  00059	f3 0f 10 42 08	 movss	 xmm0, DWORD PTR [edx+8]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  0005e	f3 0f 58 d4	 addss	 xmm2, xmm4
; File C:\Marty 5.5\Src-Client\Client\SphereLib\vector.h

; 107  : 		x = a;

  00062	f3 0f 11 6d e4	 movss	 DWORD PTR _aVector3d$[ebp], xmm5

; 108  : 		y = b;

  00067	f3 0f 11 65 e8	 movss	 DWORD PTR _aVector3d$[ebp+4], xmm4
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  0006c	f3 0f 58 18	 addss	 xmm3, DWORD PTR [eax]
; File C:\Marty 5.5\Src-Client\Client\SphereLib\vector.h

; 109  : 		z = c;

  00070	f3 0f 11 45 ec	 movss	 DWORD PTR _aVector3d$[ebp+8], xmm0
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  00075	f3 0f 58 50 04	 addss	 xmm2, DWORD PTR [eax+4]
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h

; 15   : 		: f(fn), dist(distance)

  0007a	8d 85 20 fe ff
	ff		 lea	 eax, DWORD PTR _kGetShadowReceiverFromHeightData$[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 343  : 	m_fFromX(fFromX), m_fFromY(fFromY), m_fToX(fToX), m_fToY(fToY), m_bReceiverFound(false)

  00080	f3 0f 11 ad 30
	fe ff ff	 movss	 DWORD PTR _kGetShadowReceiverFromHeightData$[ebp+16], xmm5
  00088	f3 0f 11 a5 34
	fe ff ff	 movss	 DWORD PTR _kGetShadowReceiverFromHeightData$[ebp+20], xmm4
  00090	f3 0f 11 9d 38
	fe ff ff	 movss	 DWORD PTR _kGetShadowReceiverFromHeightData$[ebp+24], xmm3

; 344  : 	{
; 345  : 		m_dwCheckCount=0;

  00098	c7 85 28 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _kGetShadowReceiverFromHeightData$[ebp+8], 0
  000a2	f3 0f 11 95 3c
	fe ff ff	 movss	 DWORD PTR _kGetShadowReceiverFromHeightData$[ebp+28], xmm2

; 346  : 		m_dwCollectOverCount=0;

  000aa	c7 85 20 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _kGetShadowReceiverFromHeightData$[ebp], 0

; 347  : 		m_dwCollectCount=0;

  000b4	c7 85 24 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _kGetShadowReceiverFromHeightData$[ebp+4], 0
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h

; 16   : 	{}

  000be	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _r$2[ebp], OFFSET ??_7?$RangeTester@UFGetShadowReceiverFromHeightData@@@@6B@

; 15   : 		: f(fn), dist(distance)

  000c5	89 45 d8	 mov	 DWORD PTR _r$2[ebp+4], eax
  000c8	c7 45 dc 00 00
	80 bf		 mov	 DWORD PTR _r$2[ebp+8], -1082130432 ; bf800000H

; 114  : 		m_Factory->RangeTest(p, radius, &r/*this*/);

  000cf	8d 45 d4	 lea	 eax, DWORD PTR _r$2[ebp]
  000d2	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000d9	50		 push	 eax
  000da	51		 push	 ecx
  000db	8b 49 1c	 mov	 ecx, DWORD PTR [ecx+28]
  000de	8d 45 e4	 lea	 eax, DWORD PTR _aVector3d$[ebp]
  000e1	c7 04 24 00 00
	20 41		 mov	 DWORD PTR [esp], 1092616192 ; 41200000H
  000e8	50		 push	 eax
  000e9	e8 00 00 00 00	 call	 ?RangeTest@SpherePackFactory@@QAEXABVVector3d@@MPAVSpherePackCallback@@@Z ; SpherePackFactory::RangeTest
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 411  : 	if (kGetShadowReceiverFromHeightData.m_bReceiverFound)

  000ee	80 bd 2c fe ff
	ff 00		 cmp	 BYTE PTR _kGetShadowReceiverFromHeightData$[ebp+12], 0
; File C:\Marty 5.5\Src-Client\Client\eterLib\CullingManager.h

; 115  : 	}

  000f5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 411  : 	if (kGetShadowReceiverFromHeightData.m_bReceiverFound)

  000fc	74 58		 je	 SHORT $LN3@CollectSha

; 413  : 		for (UINT i=0; i<kGetShadowReceiverFromHeightData.GetCollectCount(); ++i)

  000fe	8b 85 24 fe ff
	ff		 mov	 eax, DWORD PTR _kGetShadowReceiverFromHeightData$[ebp+4]
  00104	33 f6		 xor	 esi, esi
  00106	85 c0		 test	 eax, eax
  00108	74 4c		 je	 SHORT $LN3@CollectSha

; 352  : 		if (uIndex>=m_dwCollectCount)

  0010a	3b f0		 cmp	 esi, eax
  0010c	72 04		 jb	 SHORT $LN28@CollectSha

; 353  : 			return NULL;

  0010e	33 ff		 xor	 edi, edi
  00110	eb 07		 jmp	 SHORT $LN27@CollectSha
$LN28@CollectSha:

; 354  : 
; 355  : 		return m_apkShadowReceiver[uIndex];

  00112	8b bc b5 44 fe
	ff ff		 mov	 edi, DWORD PTR _kGetShadowReceiverFromHeightData$[ebp+esi*4+36]
$LN27@CollectSha:

; 414  : 		{
; 415  : 			CGraphicObjectInstance * pObjInstEach = kGetShadowReceiverFromHeightData.GetCollectItem(i);
; 416  : 			if (!__IsInShadowReceiverList(pObjInstEach))

  00119	57		 push	 edi
  0011a	8b cb		 mov	 ecx, ebx
  0011c	89 7d e0	 mov	 DWORD PTR _pObjInstEach$3[ebp], edi
  0011f	e8 00 00 00 00	 call	 ?__IsInShadowReceiverList@CMapOutdoor@@IAE_NPAVCGraphicObjectInstance@@@Z ; CMapOutdoor::__IsInShadowReceiverList
  00124	84 c0		 test	 al, al
  00126	75 23		 jne	 SHORT $LN2@CollectSha
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  00128	8b 83 10 0a 00
	00		 mov	 eax, DWORD PTR [ebx+2576]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 417  : 				m_ShadowReceiverVector.push_back(pObjInstEach);

  0012e	8d 8b 0c 0a 00
	00		 lea	 ecx, DWORD PTR [ebx+2572]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  00134	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  00137	74 08		 je	 SHORT $LN33@CollectSha

; 797  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  00139	89 38		 mov	 DWORD PTR [eax], edi

; 798  :         } else {
; 799  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 800  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 801  :             _ASAN_VECTOR_RELEASE_GUARD;
; 802  :         }
; 803  : 
; 804  :         _Orphan_range(_Mylast, _Mylast);
; 805  :         _Ty& _Result = *_Mylast;
; 806  :         ++_Mylast;

  0013b	83 41 04 04	 add	 DWORD PTR [ecx+4], 4

; 782  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0013f	eb 0a		 jmp	 SHORT $LN2@CollectSha
$LN33@CollectSha:

; 783  :         }
; 784  : 
; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00141	8d 55 e0	 lea	 edx, DWORD PTR _pObjInstEach$3[ebp]
  00144	52		 push	 edx
  00145	50		 push	 eax
  00146	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicObjectInstance@@@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@AAEPAPAVCGraphicObjectInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::_Emplace_reallocate<CGraphicObjectInstance * const &>
$LN2@CollectSha:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 413  : 		for (UINT i=0; i<kGetShadowReceiverFromHeightData.GetCollectCount(); ++i)

  0014b	8b 85 24 fe ff
	ff		 mov	 eax, DWORD PTR _kGetShadowReceiverFromHeightData$[ebp+4]
  00151	46		 inc	 esi
  00152	3b f0		 cmp	 esi, eax
  00154	72 bc		 jb	 SHORT $LN28@CollectSha
$LN3@CollectSha:

; 418  : 		}
; 419  : 	}
; 420  : 
; 421  : #ifdef __PERFORMANCE_CHECKER__
; 422  : 	static FILE* fp=fopen("perf_shadow_collect.txt", "w");
; 423  : 	DWORD t3=ELTimer_GetMSec();
; 424  : 
; 425  : 	if (t3-t1>5)
; 426  : 	{
; 427  : 		fprintf(fp, "SC.Total %d (Time %f)\n", t3-t1, ELTimer_GetMSec()/1000.0f);
; 428  : 		fprintf(fp, "SC.Find %d\n", t2-t1);
; 429  : 		fprintf(fp, "SC.Push %d\n", t3-t2);
; 430  : 		fprintf(fp, "SC.Count (Collect %d, Over %d, Check %d)\n",
; 431  : 			kGetShadowReceiverFromHeightData.m_dwCollectCount,
; 432  : 			kGetShadowReceiverFromHeightData.m_dwCollectOverCount,
; 433  : 			kGetShadowReceiverFromHeightData.m_dwCheckCount);
; 434  : 		fflush(fp);
; 435  : 	}
; 436  : #endif
; 437  : }

  00156	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00159	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00160	59		 pop	 ecx
  00161	5f		 pop	 edi
  00162	5e		 pop	 esi
  00163	5b		 pop	 ebx
  00164	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00167	33 cd		 xor	 ecx, ebp
  00169	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0016e	8b e5		 mov	 esp, ebp
  00170	5d		 pop	 ebp
  00171	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?__CollectShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z$0:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR _r$2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$RangeTester@UFGetShadowReceiverFromHeightData@@@@UAE@XZ ; RangeTester<FGetShadowReceiverFromHeightData>::~RangeTester<FGetShadowReceiverFromHeightData>
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?__CollectShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 8a 1c fe ff
	ff		 mov	 ecx, DWORD PTR [edx-484]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00026	33 c8		 xor	 ecx, eax
  00028	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002d	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?__CollectShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z
  00032	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?__CollectShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z ENDP ; CMapOutdoor::__CollectShadowReceiver
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?__Game_UpdateArea@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@@Z
_TEXT	SEGMENT
_fDistance$1$ = -28					; size = 4
_v3Light$ = -24						; size = 12
_v3Eye$ = -12						; size = 12
_v3Player$ = 8						; size = 4
?__Game_UpdateArea@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@@Z PROC ; CMapOutdoor::__Game_UpdateArea, COMDAT
; _this$ = ecx

; 221  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	83 ec 20	 sub	 esp, 32			; 00000020H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  0000d	8b 87 18 0a 00
	00		 mov	 eax, DWORD PTR [edi+2584]
  00013	3b 87 1c 0a 00
	00		 cmp	 eax, DWORD PTR [edi+2588]
  00019	74 06		 je	 SHORT $LN4@Game_Updat

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  0001b	89 87 1c 0a 00
	00		 mov	 DWORD PTR [edi+2588], eax
$LN4@Game_Updat:

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00021	8b 87 0c 0a 00
	00		 mov	 eax, DWORD PTR [edi+2572]
  00027	3b 87 10 0a 00
	00		 cmp	 eax, DWORD PTR [edi+2576]
  0002d	74 06		 je	 SHORT $LN7@Game_Updat

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  0002f	89 87 10 0a 00
	00		 mov	 DWORD PTR [edi+2576], eax
$LN7@Game_Updat:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 231  : 	CCamera * pCamera = rCmrMgr.GetCurrentCamera();

  00035	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
  0003b	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 232  : 	if (!pCamera)

  00040	85 c0		 test	 eax, eax
  00042	0f 84 ae 00 00
	00		 je	 $LN1@Game_Updat

; 233  : 		return;
; 234  : 
; 235  : 	float fDistance = pCamera->GetDistance();

  00048	f3 0f 10 80 34
	01 00 00	 movss	 xmm0, DWORD PTR [eax+308]
  00050	0f 57 c9	 xorps	 xmm1, xmm1
  00053	f3 0f 11 44 24
	0c		 movss	 DWORD PTR _fDistance$1$[esp+40], xmm0

; 239  : 	D3DXVECTOR3 v3Eye= pCamera->GetEye();

  00059	f3 0f 7e 40 30	 movq	 xmm0, QWORD PTR [eax+48]
  0005e	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  00061	66 0f d6 44 24
	1c		 movq	 QWORD PTR _v3Eye$[esp+40], xmm0
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h

; 768  :             return (float)sqrt(_X);

  00067	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@402fff8cc0000000
  0006f	66 0f 2e c8	 ucomisd xmm1, xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 239  : 	D3DXVECTOR3 v3Eye= pCamera->GetEye();

  00073	89 44 24 24	 mov	 DWORD PTR _v3Eye$[esp+48], eax
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h

; 768  :             return (float)sqrt(_X);

  00077	77 06		 ja	 SHORT $LN18@Game_Updat
  00079	f2 0f 51 c0	 sqrtsd	 xmm0, xmm0
  0007d	eb 05		 jmp	 SHORT $LN19@Game_Updat
$LN18@Game_Updat:
  0007f	e8 00 00 00 00	 call	 __libm_sse2_sqrt_precise
$LN19@Game_Updat:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 242  : 	v3Light *= 50.0f / D3DXVec3Length(&v3Light);

  00084	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@42480000

; 257  : 	__CollectShadowReceiver(v3Player, v3Light);

  0008c	8d 44 24 10	 lea	 eax, DWORD PTR _v3Light$[esp+40]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h

; 768  :             return (float)sqrt(_X);

  00090	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 257  : 	__CollectShadowReceiver(v3Player, v3Light);

  00094	8b 75 08	 mov	 esi, DWORD PTR _v3Player$[ebp]
  00097	8b cf		 mov	 ecx, edi
  00099	50		 push	 eax
  0009a	56		 push	 esi
  0009b	f3 0f 5e c8	 divss	 xmm1, xmm0
  0009f	0f 28 c1	 movaps	 xmm0, xmm1
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 223  :     y *= f;

  000a2	f3 0f 11 4c 24
	1c		 movss	 DWORD PTR _v3Light$[esp+52], xmm1
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 242  : 	v3Light *= 50.0f / D3DXVec3Length(&v3Light);

  000a8	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3fddb22d
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 223  :     y *= f;

  000b0	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@c05db22d
  000b8	f3 0f 11 44 24
	18		 movss	 DWORD PTR _v3Light$[esp+48], xmm0

; 224  :     z *= f;

  000be	f3 0f 11 4c 24
	20		 movss	 DWORD PTR _v3Light$[esp+56], xmm1
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 257  : 	__CollectShadowReceiver(v3Player, v3Light);

  000c4	e8 00 00 00 00	 call	 ?__CollectShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z ; CMapOutdoor::__CollectShadowReceiver

; 258  : #ifdef __PERFORMANCE_CHECKER__
; 259  : 	DWORD t4=timeGetTime();
; 260  : #endif
; 261  : 	__CollectCollisionPCBlocker(v3Eye, v3Player, fDistance);

  000c9	f3 0f 10 44 24
	0c		 movss	 xmm0, DWORD PTR _fDistance$1$[esp+40]
  000cf	8d 44 24 1c	 lea	 eax, DWORD PTR _v3Eye$[esp+40]
  000d3	51		 push	 ecx
  000d4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d9	8b cf		 mov	 ecx, edi
  000db	56		 push	 esi
  000dc	50		 push	 eax
  000dd	e8 00 00 00 00	 call	 ?__CollectCollisionPCBlocker@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0M@Z ; CMapOutdoor::__CollectCollisionPCBlocker

; 262  : #ifdef __PERFORMANCE_CHECKER__
; 263  : 	DWORD t5=timeGetTime();
; 264  : #endif
; 265  : 	__CollectCollisionShadowReceiver(v3Player, v3Light);

  000e2	8d 44 24 10	 lea	 eax, DWORD PTR _v3Light$[esp+40]
  000e6	8b cf		 mov	 ecx, edi
  000e8	50		 push	 eax
  000e9	56		 push	 esi
  000ea	e8 00 00 00 00	 call	 ?__CollectCollisionShadowReceiver@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@0@Z ; CMapOutdoor::__CollectCollisionShadowReceiver

; 266  : #ifdef __PERFORMANCE_CHECKER__
; 267  : 	DWORD t6=timeGetTime();
; 268  : #endif
; 269  : 	__UpdateAroundAreaList();

  000ef	8b cf		 mov	 ecx, edi
  000f1	e8 00 00 00 00	 call	 ?__UpdateAroundAreaList@CMapOutdoor@@IAEXXZ ; CMapOutdoor::__UpdateAroundAreaList
$LN1@Game_Updat:

; 270  : 
; 271  : #ifdef __PERFORMANCE_CHECKER__
; 272  : 	DWORD t7=timeGetTime();
; 273  : 	{
; 274  : 		static FILE* fp=fopen("perf_area_update.txt", "w");
; 275  : 
; 276  : 		if (t7-t1>5)
; 277  : 		{
; 278  : 			fprintf(fp, "UA.Total %d (Time %f)\n", t3-t1, ELTimer_GetMSec()/1000.0f);
; 279  : 			fprintf(fp, "UA.Clear %d\n", t2-t1);
; 280  : 			fprintf(fp, "UA.Vector %d\n", t3-t2);
; 281  : 			fprintf(fp, "UA.Shadow %d\n", t4-t3);
; 282  : 			fprintf(fp, "UA.Blocker %d\n", t5-t4);
; 283  : 			fprintf(fp, "UA.ColliShadow %d\n", t6-t5);
; 284  : 			fprintf(fp, "UA.Area %d\n", t7-t6);
; 285  : 			fflush(fp);
; 286  : 		}
; 287  : 	}
; 288  : #endif
; 289  : }

  000f6	5f		 pop	 edi
  000f7	5e		 pop	 esi
  000f8	8b e5		 mov	 esp, ebp
  000fa	5d		 pop	 ebp
  000fb	c2 04 00	 ret	 4
?__Game_UpdateArea@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@@Z ENDP ; CMapOutdoor::__Game_UpdateArea
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?__UpdateArea@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@@Z
_TEXT	SEGMENT
_v3Player$ = 8						; size = 4
?__UpdateArea@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@@Z PROC	; CMapOutdoor::__UpdateArea, COMDAT
; _this$ = ecx

; 212  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 217  : #endif
; 218  : }

  00003	5d		 pop	 ebp

; 213  : #ifdef WORLD_EDITOR
; 214  : 	__NEW_WorldEditor_UpdateArea();
; 215  : #else
; 216  : 	__Game_UpdateArea(v3Player);

  00004	e9 00 00 00 00	 jmp	 ?__Game_UpdateArea@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@@Z ; CMapOutdoor::__Game_UpdateArea
?__UpdateArea@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@@Z ENDP	; CMapOutdoor::__UpdateArea
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?AssignPatch@CMapOutdoor@@IAEXJJJJJ@Z
_TEXT	SEGMENT
tv264 = 8						; size = 4
_lPatchNum$ = 8						; size = 4
_byPatchNumX$ = 12					; size = 1
_x0$ = 12						; size = 4
_y0$ = 16						; size = 4
_byPatchNumY$ = 20					; size = 1
$T1 = 20						; size = 1
_x1$ = 20						; size = 4
_pTerrain$ = 24						; size = 4
_y1$ = 24						; size = 4
?AssignPatch@CMapOutdoor@@IAEXJJJJJ@Z PROC		; CMapOutdoor::AssignPatch, COMDAT
; _this$ = ecx

; 984  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 985  : 	assert(NULL!=m_pTerrainPatchProxyList && "CMapOutdoor::AssignPatch");
; 986  : 
; 987  : 	CTerrainPatchProxy * pTerrainPatchProxy = &m_pTerrainPatchProxyList[lPatchNum];

  00003	8b 45 08	 mov	 eax, DWORD PTR _lPatchNum$[ebp]
  00006	53		 push	 ebx

; 988  : 
; 989  : 	if (y0 < 0 && y1 <= 0)

  00007	8b 5d 10	 mov	 ebx, DWORD PTR _y0$[ebp]
  0000a	56		 push	 esi
  0000b	8d 14 c5 00 00
	00 00		 lea	 edx, DWORD PTR [eax*8]
  00012	2b d0		 sub	 edx, eax
  00014	8b 41 64	 mov	 eax, DWORD PTR [ecx+100]
  00017	57		 push	 edi
  00018	8d 3c 90	 lea	 edi, DWORD PTR [eax+edx*4]
  0001b	85 db		 test	 ebx, ebx
  0001d	79 61		 jns	 SHORT $LN2@AssignPatc
  0001f	83 7d 18 00	 cmp	 DWORD PTR _y1$[ebp], 0
  00023	0f 8f b6 00 00
	00		 jg	 $LN8@AssignPatc

; 990  : 	{
; 991  : 		if (x0 < 0 && x1 <= 0)

  00029	8b 75 0c	 mov	 esi, DWORD PTR _x0$[ebp]
  0002c	85 f6		 test	 esi, esi
  0002e	79 1a		 jns	 SHORT $LN4@AssignPatc
  00030	83 7d 14 00	 cmp	 DWORD PTR _x1$[ebp], 0
  00034	7f 39		 jg	 SHORT $LN6@AssignPatc

; 992  : 		{
; 993  : 			pTerrainPatchProxy->SetTerrainNum(0);
; 994  : 			x0 += CTerrainImpl::XSIZE;

  00036	32 c0		 xor	 al, al
  00038	c6 47 08 00	 mov	 BYTE PTR [edi+8], 0
  0003c	83 ee 80	 sub	 esi, -128		; ffffff80H

; 1005 : 
; 1006 : 		y0 += CTerrainImpl::YSIZE;

  0003f	88 45 14	 mov	 BYTE PTR $T1[ebp], al
  00042	83 eb 80	 sub	 ebx, -128		; ffffff80H

; 1007 : 		y1 += CTerrainImpl::YSIZE;
; 1008 : 	}

  00045	e9 d5 00 00 00	 jmp	 $LN17@AssignPatc
$LN4@AssignPatc:

; 995  : 			x1 += CTerrainImpl::XSIZE;
; 996  : 		}
; 997  : 		else if (x0 >= CTerrainImpl::XSIZE && x1 > CTerrainImpl::XSIZE)

  0004a	81 fe 80 00 00
	00		 cmp	 esi, 128		; 00000080H
  00050	7c 1d		 jl	 SHORT $LN6@AssignPatc
  00052	81 7d 14 80 00
	00 00		 cmp	 DWORD PTR _x1$[ebp], 128 ; 00000080H
  00059	7e 14		 jle	 SHORT $LN6@AssignPatc

; 998  : 		{
; 999  : 			pTerrainPatchProxy->SetTerrainNum(2);
; 1000 : 			x0 -= CTerrainImpl::XSIZE;

  0005b	b0 02		 mov	 al, 2
  0005d	c6 47 08 02	 mov	 BYTE PTR [edi+8], 2
  00061	83 c6 80	 add	 esi, -128		; ffffff80H

; 1005 : 
; 1006 : 		y0 += CTerrainImpl::YSIZE;

  00064	88 45 14	 mov	 BYTE PTR $T1[ebp], al
  00067	83 eb 80	 sub	 ebx, -128		; ffffff80H

; 1007 : 		y1 += CTerrainImpl::YSIZE;
; 1008 : 	}

  0006a	e9 b0 00 00 00	 jmp	 $LN17@AssignPatc
$LN6@AssignPatc:

; 1001 : 			x1 -= CTerrainImpl::XSIZE;
; 1002 : 		}
; 1003 : 		else
; 1004 : 			pTerrainPatchProxy->SetTerrainNum(1);

  0006f	b0 01		 mov	 al, 1
  00071	c6 47 08 01	 mov	 BYTE PTR [edi+8], 1

; 1005 : 
; 1006 : 		y0 += CTerrainImpl::YSIZE;

  00075	83 eb 80	 sub	 ebx, -128		; ffffff80H
  00078	88 45 14	 mov	 BYTE PTR $T1[ebp], al

; 1007 : 		y1 += CTerrainImpl::YSIZE;
; 1008 : 	}

  0007b	e9 9f 00 00 00	 jmp	 $LN17@AssignPatc
$LN2@AssignPatc:

; 1009 : 	else if (y0 >= CTerrainImpl::YSIZE && y1 > CTerrainImpl::YSIZE)

  00080	81 fb 80 00 00
	00		 cmp	 ebx, 128		; 00000080H
  00086	7c 57		 jl	 SHORT $LN8@AssignPatc
  00088	81 7d 18 80 00
	00 00		 cmp	 DWORD PTR _y1$[ebp], 128 ; 00000080H
  0008f	7e 4e		 jle	 SHORT $LN8@AssignPatc

; 1010 : 	{
; 1011 : 		if (x0 < 0 && x1 <= 0)

  00091	8b 75 0c	 mov	 esi, DWORD PTR _x0$[ebp]
  00094	85 f6		 test	 esi, esi
  00096	79 17		 jns	 SHORT $LN10@AssignPatc
  00098	83 7d 14 00	 cmp	 DWORD PTR _x1$[ebp], 0
  0009c	7f 33		 jg	 SHORT $LN12@AssignPatc

; 1012 : 		{
; 1013 : 			pTerrainPatchProxy->SetTerrainNum(6);
; 1014 : 			x0 += CTerrainImpl::XSIZE;

  0009e	b0 06		 mov	 al, 6
  000a0	c6 47 08 06	 mov	 BYTE PTR [edi+8], 6
  000a4	83 ee 80	 sub	 esi, -128		; ffffff80H

; 1025 : 
; 1026 : 		y0 -= CTerrainImpl::YSIZE;

  000a7	88 45 14	 mov	 BYTE PTR $T1[ebp], al
  000aa	83 c3 80	 add	 ebx, -128		; ffffff80H

; 1027 : 		y1 -= CTerrainImpl::YSIZE;
; 1028 : 	}

  000ad	eb 70		 jmp	 SHORT $LN17@AssignPatc
$LN10@AssignPatc:

; 1015 : 			x1 += CTerrainImpl::XSIZE;
; 1016 : 		}
; 1017 : 		else if (x0 >= CTerrainImpl::XSIZE && x1 > CTerrainImpl::XSIZE)

  000af	81 fe 80 00 00
	00		 cmp	 esi, 128		; 00000080H
  000b5	7c 1a		 jl	 SHORT $LN12@AssignPatc
  000b7	81 7d 14 80 00
	00 00		 cmp	 DWORD PTR _x1$[ebp], 128 ; 00000080H
  000be	7e 11		 jle	 SHORT $LN12@AssignPatc

; 1018 : 		{
; 1019 : 			pTerrainPatchProxy->SetTerrainNum(8);
; 1020 : 			x0 -= CTerrainImpl::XSIZE;

  000c0	b0 08		 mov	 al, 8
  000c2	c6 47 08 08	 mov	 BYTE PTR [edi+8], 8
  000c6	83 c6 80	 add	 esi, -128		; ffffff80H

; 1025 : 
; 1026 : 		y0 -= CTerrainImpl::YSIZE;

  000c9	88 45 14	 mov	 BYTE PTR $T1[ebp], al
  000cc	83 c3 80	 add	 ebx, -128		; ffffff80H

; 1027 : 		y1 -= CTerrainImpl::YSIZE;
; 1028 : 	}

  000cf	eb 4e		 jmp	 SHORT $LN17@AssignPatc
$LN12@AssignPatc:

; 1021 : 			x1 -= CTerrainImpl::XSIZE;
; 1022 : 		}
; 1023 : 		else
; 1024 : 			pTerrainPatchProxy->SetTerrainNum(7);

  000d1	b0 07		 mov	 al, 7
  000d3	c6 47 08 07	 mov	 BYTE PTR [edi+8], 7

; 1025 : 
; 1026 : 		y0 -= CTerrainImpl::YSIZE;

  000d7	83 c3 80	 add	 ebx, -128		; ffffff80H
  000da	88 45 14	 mov	 BYTE PTR $T1[ebp], al

; 1027 : 		y1 -= CTerrainImpl::YSIZE;
; 1028 : 	}

  000dd	eb 40		 jmp	 SHORT $LN17@AssignPatc
$LN8@AssignPatc:

; 1029 : 	else
; 1030 : 	{
; 1031 : 		if (x0 < 0 && x1 <= 0)

  000df	8b 75 0c	 mov	 esi, DWORD PTR _x0$[ebp]
  000e2	85 f6		 test	 esi, esi
  000e4	79 13		 jns	 SHORT $LN14@AssignPatc
  000e6	83 7d 14 00	 cmp	 DWORD PTR _x1$[ebp], 0
  000ea	7f 2b		 jg	 SHORT $LN16@AssignPatc

; 1032 : 		{
; 1033 : 			pTerrainPatchProxy->SetTerrainNum(3);

  000ec	c6 47 08 03	 mov	 BYTE PTR [edi+8], 3

; 1034 : 			x0 += CTerrainImpl::XSIZE;

  000f0	83 ee 80	 sub	 esi, -128		; ffffff80H
  000f3	c6 45 14 03	 mov	 BYTE PTR $T1[ebp], 3

; 1035 : 			x1 += CTerrainImpl::XSIZE;
; 1036 : 		}

  000f7	eb 26		 jmp	 SHORT $LN17@AssignPatc
$LN14@AssignPatc:

; 1037 : 		else if (x0 >= CTerrainImpl::XSIZE && x1 > CTerrainImpl::XSIZE)

  000f9	81 fe 80 00 00
	00		 cmp	 esi, 128		; 00000080H
  000ff	7c 16		 jl	 SHORT $LN16@AssignPatc
  00101	81 7d 14 80 00
	00 00		 cmp	 DWORD PTR _x1$[ebp], 128 ; 00000080H
  00108	7e 0d		 jle	 SHORT $LN16@AssignPatc

; 1038 : 		{
; 1039 : 			pTerrainPatchProxy->SetTerrainNum(5);

  0010a	c6 47 08 05	 mov	 BYTE PTR [edi+8], 5

; 1040 : 			x0 -= CTerrainImpl::XSIZE;

  0010e	83 c6 80	 add	 esi, -128		; ffffff80H
  00111	c6 45 14 05	 mov	 BYTE PTR $T1[ebp], 5

; 1041 : 			x1 -= CTerrainImpl::XSIZE;
; 1042 : 		}

  00115	eb 08		 jmp	 SHORT $LN17@AssignPatc
$LN16@AssignPatc:

; 1043 : 		else
; 1044 : 			pTerrainPatchProxy->SetTerrainNum(4);

  00117	c6 47 08 04	 mov	 BYTE PTR [edi+8], 4
  0011b	c6 45 14 04	 mov	 BYTE PTR $T1[ebp], 4
$LN17@AssignPatc:

; 1045 : 	}
; 1046 : 
; 1047 : 	CTerrain * pTerrain;
; 1048 : 	if (!GetTerrainPointer(pTerrainPatchProxy->GetTerrainNum(), &pTerrain))

  0011f	8d 45 18	 lea	 eax, DWORD PTR _pTerrain$[ebp]
  00122	50		 push	 eax
  00123	ff 75 14	 push	 DWORD PTR $T1[ebp]
  00126	e8 00 00 00 00	 call	 ?GetTerrainPointer@CMapOutdoor@@QAEHEPAPAVCTerrain@@@Z ; CMapOutdoor::GetTerrainPointer
  0012b	85 c0		 test	 eax, eax
  0012d	74 4f		 je	 SHORT $LN1@AssignPatc

; 1049 : 		return;
; 1050 : 
; 1051 : 	BYTE byPatchNumX, byPatchNumY;
; 1052 : 	byPatchNumX = x0 / CTerrainImpl::PATCH_XSIZE;
; 1053 : 	byPatchNumY = y0 / CTerrainImpl::PATCH_YSIZE;
; 1054 : 
; 1055 : 	CTerrainPatch * pTerrainPatch = pTerrain->GetTerrainPatchPtr(byPatchNumX, byPatchNumY);

  0012f	8b 4d 18	 mov	 ecx, DWORD PTR _pTerrain$[ebp]
  00132	8b c6		 mov	 eax, esi
  00134	99		 cdq
  00135	83 e2 0f	 and	 edx, 15			; 0000000fH
  00138	03 c2		 add	 eax, edx
  0013a	c1 f8 04	 sar	 eax, 4
  0013d	88 45 0c	 mov	 BYTE PTR _byPatchNumX$[ebp], al
  00140	89 45 08	 mov	 DWORD PTR tv264[ebp], eax
  00143	8b c3		 mov	 eax, ebx
  00145	99		 cdq
  00146	83 e2 0f	 and	 edx, 15			; 0000000fH
  00149	8d 1c 02	 lea	 ebx, DWORD PTR [edx+eax]
  0014c	c1 fb 04	 sar	 ebx, 4
  0014f	88 5d 14	 mov	 BYTE PTR _byPatchNumY$[ebp], bl
  00152	ff 75 14	 push	 DWORD PTR _byPatchNumY$[ebp]
  00155	ff 75 0c	 push	 DWORD PTR _byPatchNumX$[ebp]
  00158	e8 00 00 00 00	 call	 ?GetTerrainPatchPtr@CTerrain@@QAEPAVCTerrainPatch@@EE@Z ; CTerrain::GetTerrainPatchPtr
  0015d	8b f0		 mov	 esi, eax

; 1056 : 	if (!pTerrainPatch)

  0015f	85 f6		 test	 esi, esi
  00161	74 1b		 je	 SHORT $LN1@AssignPatc

; 1057 : 		return;
; 1058 : 
; 1059 : 	pTerrainPatchProxy->SetPatchNum(byPatchNumY * CTerrainImpl::PATCH_XCOUNT + byPatchNumX);

  00163	8b 45 08	 mov	 eax, DWORD PTR tv264[ebp]
  00166	0f b6 d3	 movzx	 edx, bl
  00169	66 c1 e2 03	 shl	 dx, 3
  0016d	0f b6 c8	 movzx	 ecx, al
  00170	66 03 d1	 add	 dx, cx

; 1060 : 	pTerrainPatchProxy->SetTerrainPatch(pTerrainPatch);

  00173	89 77 0c	 mov	 DWORD PTR [edi+12], esi
  00176	66 89 57 06	 mov	 WORD PTR [edi+6], dx

; 1061 : 	pTerrainPatchProxy->SetUsed(true);

  0017a	c6 47 04 01	 mov	 BYTE PTR [edi+4], 1
$LN1@AssignPatc:

; 1062 : }

  0017e	5f		 pop	 edi
  0017f	5e		 pop	 esi
  00180	5b		 pop	 ebx
  00181	5d		 pop	 ebp
  00182	c2 14 00	 ret	 20			; 00000014H
?AssignPatch@CMapOutdoor@@IAEXJJJJJ@Z ENDP		; CMapOutdoor::AssignPatch
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?ConvertTerrainToTnL@CMapOutdoor@@IAEXJJ@Z
_TEXT	SEGMENT
_yw$1$ = -24						; size = 4
tv370 = -20						; size = 4
tv369 = -16						; size = 4
tv364 = -12						; size = 4
_xw$1$ = -8						; size = 4
_yp$1$ = -4						; size = 4
_lx$ = 8						; size = 4
_ly$ = 12						; size = 4
?ConvertTerrainToTnL@CMapOutdoor@@IAEXJJ@Z PROC		; CMapOutdoor::ConvertTerrainToTnL, COMDAT
; _this$ = ecx

; 941  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H

; 942  : 	assert(NULL!=m_pTerrainPatchProxyList && "CMapOutdoor::ConvertTerrainToTnL");
; 943  : 
; 944  : 	for (long i = 0; i < m_wPatchCount * m_wPatchCount; i++)

  00006	33 d2		 xor	 edx, edx
  00008	53		 push	 ebx
  00009	8b d9		 mov	 ebx, ecx
  0000b	56		 push	 esi
  0000c	57		 push	 edi
  0000d	0f b7 83 8c 00
	00 00		 movzx	 eax, WORD PTR [ebx+140]
  00014	0f af c0	 imul	 eax, eax
  00017	85 c0		 test	 eax, eax
  00019	7e 1f		 jle	 SHORT $LN3@ConvertTer
  0001b	33 c9		 xor	 ecx, ecx
  0001d	0f 1f 00	 npad	 3
$LL4@ConvertTer:

; 945  : 		m_pTerrainPatchProxyList[i].SetUsed(false);

  00020	8b 43 64	 mov	 eax, DWORD PTR [ebx+100]
  00023	8d 49 1c	 lea	 ecx, DWORD PTR [ecx+28]
  00026	42		 inc	 edx
  00027	c6 44 08 e8 00	 mov	 BYTE PTR [eax+ecx-24], 0
  0002c	0f b7 83 8c 00
	00 00		 movzx	 eax, WORD PTR [ebx+140]
  00033	0f af c0	 imul	 eax, eax
  00036	3b d0		 cmp	 edx, eax
  00038	7c e6		 jl	 SHORT $LL4@ConvertTer
$LN3@ConvertTer:

; 946  : 
; 947  : 	lx -= m_lViewRadius;          /* Move to the top left corner of the */

  0003a	8b 43 68	 mov	 eax, DWORD PTR [ebx+104]
  0003d	8b 55 08	 mov	 edx, DWORD PTR _lx$[ebp]

; 948  : 	ly -= m_lViewRadius;          /* input rectangle */

  00040	8b 75 0c	 mov	 esi, DWORD PTR _ly$[ebp]
  00043	2b d0		 sub	 edx, eax
  00045	2b f0		 sub	 esi, eax
  00047	89 55 08	 mov	 DWORD PTR _lx$[ebp], edx

; 949  : 
; 950  : 	long diameter = m_lViewRadius * 2;

  0004a	8d 0c 00	 lea	 ecx, DWORD PTR [eax+eax]
  0004d	89 75 0c	 mov	 DWORD PTR _ly$[ebp], esi
  00050	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
  00053	89 45 ec	 mov	 DWORD PTR tv370[ebp], eax

; 951  : 
; 952  : 	long x0 = lx / TERRAIN_PATCHSIZE;

  00056	8d 42 ff	 lea	 eax, DWORD PTR [edx-1]
  00059	03 c1		 add	 eax, ecx

; 953  : 	long y0 = ly / TERRAIN_PATCHSIZE;
; 954  : 	long x1 = ( lx + diameter - 1 ) / TERRAIN_PATCHSIZE;

  0005b	99		 cdq
  0005c	83 e2 0f	 and	 edx, 15			; 0000000fH
  0005f	8d 3c 02	 lea	 edi, DWORD PTR [edx+eax]
  00062	8b 45 08	 mov	 eax, DWORD PTR _lx$[ebp]
  00065	99		 cdq
  00066	83 e2 0f	 and	 edx, 15			; 0000000fH
  00069	c1 ff 04	 sar	 edi, 4
  0006c	03 c2		 add	 eax, edx
  0006e	c1 f8 04	 sar	 eax, 4
  00071	2b f8		 sub	 edi, eax

; 955  : 	long y1 = ( ly + diameter - 1 ) / TERRAIN_PATCHSIZE;
; 956  : 
; 957  : 	long xw = x1 - x0 + 1;     /* Figure out how many patches are needed */

  00073	8d 04 31	 lea	 eax, DWORD PTR [ecx+esi]
  00076	89 45 f0	 mov	 DWORD PTR tv369[ebp], eax
  00079	47		 inc	 edi
  0007a	48		 dec	 eax
  0007b	89 7d f8	 mov	 DWORD PTR _xw$1$[ebp], edi
  0007e	99		 cdq
  0007f	33 ff		 xor	 edi, edi
  00081	83 e2 0f	 and	 edx, 15			; 0000000fH
  00084	89 7d fc	 mov	 DWORD PTR _yp$1$[ebp], edi
  00087	8d 0c 02	 lea	 ecx, DWORD PTR [edx+eax]
  0008a	8b c6		 mov	 eax, esi
  0008c	99		 cdq
  0008d	83 e2 0f	 and	 edx, 15			; 0000000fH
  00090	c1 f9 04	 sar	 ecx, 4
  00093	03 c2		 add	 eax, edx
  00095	c1 f8 04	 sar	 eax, 4
  00098	2b c8		 sub	 ecx, eax

; 958  : 	long yw = y1 - y0 + 1;

  0009a	41		 inc	 ecx
  0009b	89 4d e8	 mov	 DWORD PTR _yw$1$[ebp], ecx

; 959  : 
; 960  : 	long ex = lx + diameter;
; 961  : 	long ey = ly + diameter;
; 962  : 
; 963  : 	y0 = ly;
; 964  : 	for (long yp = 0; yp < yw; yp++)

  0009e	85 c9		 test	 ecx, ecx
  000a0	7e 74		 jle	 SHORT $LN6@ConvertTer
$LL7@ConvertTer:

; 965  :     {
; 966  : 		x0 = lx;

  000a2	8b 4d 08	 mov	 ecx, DWORD PTR _lx$[ebp]

; 967  : 		y1 = (y0 / TERRAIN_PATCHSIZE + 1) * TERRAIN_PATCHSIZE;

  000a5	8b c6		 mov	 eax, esi
  000a7	99		 cdq
  000a8	83 e2 0f	 and	 edx, 15			; 0000000fH
  000ab	03 c2		 add	 eax, edx

; 968  : 		if (y1 > ey)
; 969  : 			y1 = ey;
; 970  : 		for (long xp = 0; xp < xw; xp++)

  000ad	8b 55 f0	 mov	 edx, DWORD PTR tv369[ebp]
  000b0	c1 f8 04	 sar	 eax, 4
  000b3	40		 inc	 eax
  000b4	c1 e0 04	 shl	 eax, 4
  000b7	3b c2		 cmp	 eax, edx
  000b9	0f 4e d0	 cmovle	 edx, eax
  000bc	33 f6		 xor	 esi, esi
  000be	89 55 f4	 mov	 DWORD PTR tv364[ebp], edx
  000c1	39 75 f8	 cmp	 DWORD PTR _xw$1$[ebp], esi
  000c4	7e 42		 jle	 SHORT $LN9@ConvertTer
$LL10@ConvertTer:

; 971  : 		{
; 972  : 			x1 = (x0 / TERRAIN_PATCHSIZE + 1) * TERRAIN_PATCHSIZE;
; 973  : 			if (x1 > ex)
; 974  : 				x1 = ex;
; 975  :  			AssignPatch(yp * m_wPatchCount + xp, x0, y0, x1, y1);

  000c6	8b 7d ec	 mov	 edi, DWORD PTR tv370[ebp]
  000c9	8b c1		 mov	 eax, ecx
  000cb	ff 75 f4	 push	 DWORD PTR tv364[ebp]
  000ce	99		 cdq
  000cf	83 e2 0f	 and	 edx, 15			; 0000000fH
  000d2	03 c2		 add	 eax, edx
  000d4	c1 f8 04	 sar	 eax, 4
  000d7	40		 inc	 eax
  000d8	c1 e0 04	 shl	 eax, 4
  000db	3b c7		 cmp	 eax, edi
  000dd	0f 4e f8	 cmovle	 edi, eax
  000e0	0f b7 83 8c 00
	00 00		 movzx	 eax, WORD PTR [ebx+140]
  000e7	0f af 45 fc	 imul	 eax, DWORD PTR _yp$1$[ebp]
  000eb	57		 push	 edi
  000ec	ff 75 0c	 push	 DWORD PTR _ly$[ebp]
  000ef	51		 push	 ecx
  000f0	03 c6		 add	 eax, esi
  000f2	8b cb		 mov	 ecx, ebx
  000f4	50		 push	 eax
  000f5	e8 00 00 00 00	 call	 ?AssignPatch@CMapOutdoor@@IAEXJJJJJ@Z ; CMapOutdoor::AssignPatch
  000fa	46		 inc	 esi

; 976  : 			x0 = x1;

  000fb	8b cf		 mov	 ecx, edi
  000fd	3b 75 f8	 cmp	 esi, DWORD PTR _xw$1$[ebp]
  00100	7c c4		 jl	 SHORT $LL10@ConvertTer
  00102	8b 55 f4	 mov	 edx, DWORD PTR tv364[ebp]
  00105	8b 7d fc	 mov	 edi, DWORD PTR _yp$1$[ebp]
$LN9@ConvertTer:

; 959  : 
; 960  : 	long ex = lx + diameter;
; 961  : 	long ey = ly + diameter;
; 962  : 
; 963  : 	y0 = ly;
; 964  : 	for (long yp = 0; yp < yw; yp++)

  00108	47		 inc	 edi

; 977  : 		}
; 978  : 		y0 = y1;

  00109	8b f2		 mov	 esi, edx
  0010b	89 75 0c	 mov	 DWORD PTR _ly$[ebp], esi
  0010e	89 7d fc	 mov	 DWORD PTR _yp$1$[ebp], edi
  00111	3b 7d e8	 cmp	 edi, DWORD PTR _yw$1$[ebp]
  00114	7c 8c		 jl	 SHORT $LL7@ConvertTer
$LN6@ConvertTer:

; 979  :     }
; 980  : 	UpdateQuadTreeHeights(m_pRootNode);

  00116	ff b3 14 01 00
	00		 push	 DWORD PTR [ebx+276]
  0011c	8b cb		 mov	 ecx, ebx
  0011e	e8 00 00 00 00	 call	 ?UpdateQuadTreeHeights@CMapOutdoor@@IAEXPAVCTerrainQuadtreeNode@@@Z ; CMapOutdoor::UpdateQuadTreeHeights
  00123	5f		 pop	 edi
  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx

; 981  : }

  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 08 00	 ret	 8
?ConvertTerrainToTnL@CMapOutdoor@@IAEXJJ@Z ENDP		; CMapOutdoor::ConvertTerrainToTnL
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?UpdateTerrain@CMapOutdoor@@IAEXMM@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
_fX$ = 8						; size = 4
tv195 = 12						; size = 4
_fY$ = 12						; size = 4
?UpdateTerrain@CMapOutdoor@@IAEXMM@Z PROC		; CMapOutdoor::UpdateTerrain, COMDAT
; _this$ = ecx

; 722  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 723  : 	if (fY < 0)

  00004	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _fY$[ebp]
  00009	0f 57 c0	 xorps	 xmm0, xmm0
  0000c	0f 2f c1	 comiss	 xmm0, xmm1
  0000f	89 4d fc	 mov	 DWORD PTR _this$1$[ebp], ecx
  00012	76 07		 jbe	 SHORT $LN2@UpdateTerr

; 724  : 		fY = -fY;

  00014	0f 57 0d 00 00
	00 00		 xorps	 xmm1, DWORD PTR __xmm@80000000800000008000000080000000
$LN2@UpdateTerr:

; 725  : 
; 726  : 	int sx, sy;
; 727  : 	PR_FLOAT_TO_INT(fX, sx);

  0001b	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fX$[ebp]
  00020	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?PR_FCNV@@3MA, xmm0
  00028	d9 05 00 00 00
	00		 fld	 DWORD PTR ?PR_FCNV@@3MA	; PR_FCNV
  0002e	db 1d 00 00 00
	00		 fistp	 DWORD PTR ?PR_ICNV@@3JA
  00034	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  0003a	66 0f 6e c2	 movd	 xmm0, edx
  0003e	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00041	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?PR_FCNV@@3MA
  00048	76 01		 jbe	 SHORT $LN6@UpdateTerr
  0004a	4a		 dec	 edx
$LN6@UpdateTerr:
  0004b	56		 push	 esi
  0004c	57		 push	 edi

; 728  : 	PR_FLOAT_TO_INT(fY, sy);

  0004d	f3 0f 11 0d 00
	00 00 00	 movss	 DWORD PTR ?PR_FCNV@@3MA, xmm1
  00055	d9 05 00 00 00
	00		 fld	 DWORD PTR ?PR_FCNV@@3MA	; PR_FCNV
  0005b	db 1d 00 00 00
	00		 fistp	 DWORD PTR ?PR_ICNV@@3JA
  00061	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  00067	66 0f 6e c6	 movd	 xmm0, esi
  0006b	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0006e	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?PR_FCNV@@3MA
  00075	76 01		 jbe	 SHORT $LN8@UpdateTerr
  00077	4e		 dec	 esi
$LN8@UpdateTerr:

; 729  : 
; 730  : 	long lDivider = (CTerrainImpl::CELLSCALE * TERRAIN_PATCHSIZE);
; 731  : 
; 732  : 	m_lCenterX = (sx - m_lCurCoordStartX) / lDivider;

  00078	2b 51 78	 sub	 edx, DWORD PTR [ecx+120]
  0007b	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH

; 733  : 	m_lCenterY = (sy - m_lCurCoordStartY) / lDivider;

  00080	2b 71 7c	 sub	 esi, DWORD PTR [ecx+124]
  00083	f7 ea		 imul	 edx
  00085	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  0008a	c1 fa 0a	 sar	 edx, 10			; 0000000aH
  0008d	8b fa		 mov	 edi, edx
  0008f	c1 ef 1f	 shr	 edi, 31			; 0000001fH
  00092	03 fa		 add	 edi, edx
  00094	f7 ee		 imul	 esi
  00096	89 7d 0c	 mov	 DWORD PTR tv195[ebp], edi
  00099	c1 fa 0a	 sar	 edx, 10			; 0000000aH
  0009c	8b c2		 mov	 eax, edx
  0009e	89 b9 04 01 00
	00		 mov	 DWORD PTR [ecx+260], edi
  000a4	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000a7	03 c2		 add	 eax, edx
  000a9	89 81 08 01 00
	00		 mov	 DWORD PTR [ecx+264], eax

; 734  : 
; 735  : 	if ((m_lCenterX != m_lOldReadX) || (m_lCenterY != m_lOldReadY))

  000af	3b b9 0c 01 00
	00		 cmp	 edi, DWORD PTR [ecx+268]
  000b5	75 08		 jne	 SHORT $LN10@UpdateTerr
  000b7	3b 81 10 01 00
	00		 cmp	 eax, DWORD PTR [ecx+272]
  000bd	74 28		 je	 SHORT $LN3@UpdateTerr
$LN10@UpdateTerr:

; 736  : 	{
; 737  : 		long lRealCenterX = m_lCenterX * TERRAIN_PATCHSIZE;
; 738  : 		long lRealCenterY = m_lCenterY * TERRAIN_PATCHSIZE;
; 739  : 		m_lOldReadX = m_lCenterX;

  000bf	8b 55 0c	 mov	 edx, DWORD PTR tv195[ebp]
  000c2	8b f0		 mov	 esi, eax
  000c4	c1 e6 04	 shl	 esi, 4

; 740  : 		m_lOldReadY = m_lCenterY;
; 741  : 
; 742  : 		ConvertTerrainToTnL(lRealCenterX, lRealCenterY);

  000c7	56		 push	 esi
  000c8	c1 e7 04	 shl	 edi, 4
  000cb	57		 push	 edi
  000cc	89 91 0c 01 00
	00		 mov	 DWORD PTR [ecx+268], edx
  000d2	89 81 10 01 00
	00		 mov	 DWORD PTR [ecx+272], eax
  000d8	e8 00 00 00 00	 call	 ?ConvertTerrainToTnL@CMapOutdoor@@IAEXJJ@Z ; CMapOutdoor::ConvertTerrainToTnL

; 743  : 		UpdateAreaList(lRealCenterX, lRealCenterY);

  000dd	8b 4d fc	 mov	 ecx, DWORD PTR _this$1$[ebp]
  000e0	56		 push	 esi
  000e1	57		 push	 edi
  000e2	8b 01		 mov	 eax, DWORD PTR [ecx]
  000e4	ff 50 4c	 call	 DWORD PTR [eax+76]
$LN3@UpdateTerr:

; 744  : 		//	m_AreaVector.size(), m_TerrainVector.size(), m_AreaDeleteVector.size(), m_TerrainDeleteVector.size());
; 745  : 	}
; 746  : }

  000e7	5f		 pop	 edi
  000e8	5e		 pop	 esi
  000e9	8b e5		 mov	 esp, ebp
  000eb	5d		 pop	 ebp
  000ec	c2 08 00	 ret	 8
?UpdateTerrain@CMapOutdoor@@IAEXMM@Z ENDP		; CMapOutdoor::UpdateTerrain
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?UpdateAreaList@CMapOutdoor@@MAEXJJ@Z
_TEXT	SEGMENT
_$S2$ = -128						; size = 24
_$S1$ = -104						; size = 24
$T2 = -80						; size = 24
$T3 = -56						; size = 24
__Bytes$1$ = -32					; size = 4
__Bytes$1$ = -28					; size = 4
__My_data$1$ = -24					; size = 4
__Newsize$1$ = -20					; size = 4
$T4 = -20						; size = 4
__Ptr$1$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__PFirst$1$ = 8						; size = 4
tv2506 = 8						; size = 4
_lCenterX$ = 8						; size = 4
$T5 = 11						; size = 1
$T6 = 11						; size = 1
__Ptr$1$ = 12						; size = 4
tv2505 = 12						; size = 4
_lCenterY$ = 12						; size = 4
?UpdateAreaList@CMapOutdoor@@MAEXJJ@Z PROC		; CMapOutdoor::UpdateAreaList, COMDAT
; _this$ = ecx

; 876  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?UpdateAreaList@CMapOutdoor@@MAEXJJ@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 74	 sub	 esp, 116		; 00000074H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f9		 mov	 edi, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0002a	8b 87 1c 09 00
	00		 mov	 eax, DWORD PTR [edi+2332]
  00030	8d 8f 4c 09 00
	00		 lea	 ecx, DWORD PTR [edi+2380]
  00036	2b 87 18 09 00
	00		 sub	 eax, DWORD PTR [edi+2328]
  0003c	c1 f8 02	 sar	 eax, 2
  0003f	89 4d e8	 mov	 DWORD PTR __My_data$1$[ebp], ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 877  : 	if (m_TerrainVector.size() <= AROUND_AREA_NUM && m_AreaVector.size() <= AROUND_AREA_NUM)

  00042	83 f8 09	 cmp	 eax, 9
  00045	77 13		 ja	 SHORT $LN438@UpdateArea
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00047	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0004a	2b 01		 sub	 eax, DWORD PTR [ecx]
  0004c	c1 f8 02	 sar	 eax, 2
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 877  : 	if (m_TerrainVector.size() <= AROUND_AREA_NUM && m_AreaVector.size() <= AROUND_AREA_NUM)

  0004f	83 f8 09	 cmp	 eax, 9
  00052	0f 86 20 03 00
	00		 jbe	 $LN117@UpdateArea
  00058	eb 03		 jmp	 SHORT $LN431@UpdateArea
$LN438@UpdateArea:
  0005a	89 4d e8	 mov	 DWORD PTR __My_data$1$[ebp], ecx
$LN431@UpdateArea:

; 878  : 		return;
; 879  : 
; 880  : 	__ClearGarvage();

  0005d	8b 07		 mov	 eax, DWORD PTR [edi]
  0005f	8b cf		 mov	 ecx, edi
  00061	ff 50 3c	 call	 DWORD PTR [eax+60]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00064	8b b7 18 09 00
	00		 mov	 esi, DWORD PTR [edi+2328]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 888  : 	if (lCenterY > CTerrainImpl::YSIZE / 2)

  0006a	33 c9		 xor	 ecx, ecx
  0006c	83 7d 08 40	 cmp	 DWORD PTR _lCenterX$[ebp], 64 ; 00000040H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00070	8b 9f 1c 09 00
	00		 mov	 ebx, DWORD PTR [edi+2332]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 888  : 	if (lCenterY > CTerrainImpl::YSIZE / 2)

  00076	0f 9e c1	 setle	 cl

; 893  : 	FPushTerrainToDeleteVector &rPushTerrainToDeleteVector = std::for_each(m_TerrainVector.begin(), m_TerrainVector.end(),

  00079	33 c0		 xor	 eax, eax
  0007b	83 7d 0c 40	 cmp	 DWORD PTR _lCenterY$[ebp], 64 ; 00000040H
  0007f	89 4d 08	 mov	 DWORD PTR tv2506[ebp], ecx
  00082	0f 9e c0	 setle	 al
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 510  : 				m_eLRDeleteDir = eLRDeleteDir;

  00085	89 4d c8	 mov	 DWORD PTR $T3[ebp], ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 893  : 	FPushTerrainToDeleteVector &rPushTerrainToDeleteVector = std::for_each(m_TerrainVector.begin(), m_TerrainVector.end(),

  00088	83 c0 02	 add	 eax, 2
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0008b	33 c9		 xor	 ecx, ecx
  0008d	33 d2		 xor	 edx, edx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 893  : 	FPushTerrainToDeleteVector &rPushTerrainToDeleteVector = std::for_each(m_TerrainVector.begin(), m_TerrainVector.end(),

  0008f	89 45 0c	 mov	 DWORD PTR tv2505[ebp], eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 511  : 				m_eTBDeleteDir = eTBDeleteDir;

  00092	89 45 cc	 mov	 DWORD PTR $T3[ebp+4], eax

; 512  : 				m_CurCoordinate = CurCoord;

  00095	8b 47 74	 mov	 eax, DWORD PTR [edi+116]
  00098	89 45 d0	 mov	 DWORD PTR $T3[ebp+8], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0009b	89 4d f0	 mov	 DWORD PTR __Ptr$1$[ebp], ecx
  0009e	89 4d d4	 mov	 DWORD PTR $T3[ebp+12], ecx
  000a1	89 4d d8	 mov	 DWORD PTR $T3[ebp+16], ecx
  000a4	89 55 e0	 mov	 DWORD PTR __Bytes$1$[ebp], edx
  000a7	89 55 dc	 mov	 DWORD PTR $T3[ebp+20], edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 241  : _CONSTEXPR20 _Fn for_each(_InIt _First, _InIt _Last, _Fn _Func) { // perform function for each element [_First, _Last)

  000aa	89 55 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], edx

; 242  :     _Adl_verify_range(_First, _Last);
; 243  :     auto _UFirst      = _Get_unwrapped(_First);
; 244  :     const auto _ULast = _Get_unwrapped(_Last);
; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  000ad	3b f3		 cmp	 esi, ebx
  000af	74 25		 je	 SHORT $LN441@UpdateArea
$LL309@UpdateArea:

; 246  :         _Func(*_UFirst);

  000b1	ff 36		 push	 DWORD PTR [esi]
  000b3	8d 4d c8	 lea	 ecx, DWORD PTR $T3[ebp]
  000b6	e8 00 00 00 00	 call	 ??RFPushTerrainToDeleteVector@CMapOutdoor@@QAEXPAVCTerrain@@@Z ; CMapOutdoor::FPushTerrainToDeleteVector::operator()
  000bb	83 c6 04	 add	 esi, 4
  000be	3b f3		 cmp	 esi, ebx
  000c0	75 ef		 jne	 SHORT $LL309@UpdateArea
  000c2	8b 55 dc	 mov	 edx, DWORD PTR $T3[ebp+20]
  000c5	8b 5d d4	 mov	 ebx, DWORD PTR $T3[ebp+12]
  000c8	8b 45 d0	 mov	 eax, DWORD PTR $T3[ebp+8]
  000cb	8b 4d d8	 mov	 ecx, DWORD PTR $T3[ebp+16]
  000ce	89 55 e0	 mov	 DWORD PTR __Bytes$1$[ebp], edx
  000d1	89 5d f0	 mov	 DWORD PTR __Ptr$1$[ebp], ebx

; 242  :     _Adl_verify_range(_First, _Last);
; 243  :     auto _UFirst      = _Get_unwrapped(_First);
; 244  :     const auto _ULast = _Get_unwrapped(_Last);
; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  000d4	eb 02		 jmp	 SHORT $LN308@UpdateArea
$LN441@UpdateArea:
  000d6	33 db		 xor	 ebx, ebx
$LN308@UpdateArea:
  000d8	f3 0f 7e 45 c8	 movq	 xmm0, QWORD PTR $T3[ebp]
  000dd	66 0f d6 45 98	 movq	 QWORD PTR _$S1$[ebp], xmm0
  000e2	89 45 a0	 mov	 DWORD PTR _$S1$[ebp+8], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

  000e5	89 5d a4	 mov	 DWORD PTR _$S1$[ebp+12], ebx
  000e8	89 4d a8	 mov	 DWORD PTR _$S1$[ebp+16], ecx
  000eb	89 55 ac	 mov	 DWORD PTR _$S1$[ebp+20], edx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 510  : 				m_eLRDeleteDir = eLRDeleteDir;

  000ee	8b 45 08	 mov	 eax, DWORD PTR tv2506[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  000f1	33 d2		 xor	 edx, edx

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000f3	8b 75 e8	 mov	 esi, DWORD PTR __My_data$1$[ebp]
  000f6	8b 9f 50 09 00
	00		 mov	 ebx, DWORD PTR [edi+2384]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 510  : 				m_eLRDeleteDir = eLRDeleteDir;

  000fc	89 45 b0	 mov	 DWORD PTR $T2[ebp], eax

; 511  : 				m_eTBDeleteDir = eTBDeleteDir;

  000ff	8b 45 0c	 mov	 eax, DWORD PTR tv2505[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00102	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 511  : 				m_eTBDeleteDir = eTBDeleteDir;

  00104	89 45 b4	 mov	 DWORD PTR $T2[ebp+4], eax

; 512  : 				m_CurCoordinate = CurCoord;

  00107	8b 47 74	 mov	 eax, DWORD PTR [edi+116]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 893  : 	FPushTerrainToDeleteVector &rPushTerrainToDeleteVector = std::for_each(m_TerrainVector.begin(), m_TerrainVector.end(),

  0010a	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoor.h

; 512  : 				m_CurCoordinate = CurCoord;

  00111	89 45 b8	 mov	 DWORD PTR $T2[ebp+8], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00114	89 55 0c	 mov	 DWORD PTR __Ptr$1$[ebp], edx
  00117	89 55 bc	 mov	 DWORD PTR $T2[ebp+12], edx
  0011a	89 55 c0	 mov	 DWORD PTR $T2[ebp+16], edx
  0011d	89 55 e4	 mov	 DWORD PTR __Bytes$1$[ebp], edx
  00120	89 55 c4	 mov	 DWORD PTR $T2[ebp+20], edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 241  : _CONSTEXPR20 _Fn for_each(_InIt _First, _InIt _Last, _Fn _Func) { // perform function for each element [_First, _Last)

  00123	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 242  :     _Adl_verify_range(_First, _Last);
; 243  :     auto _UFirst      = _Get_unwrapped(_First);
; 244  :     const auto _ULast = _Get_unwrapped(_Last);
; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00127	3b f3		 cmp	 esi, ebx
  00129	74 2a		 je	 SHORT $LN440@UpdateArea
  0012b	0f 1f 44 00 00	 npad	 5
$LL226@UpdateArea:

; 246  :         _Func(*_UFirst);

  00130	ff 36		 push	 DWORD PTR [esi]
  00132	8d 4d b0	 lea	 ecx, DWORD PTR $T2[ebp]
  00135	e8 00 00 00 00	 call	 ??RFPushAreaToDeleteVector@CMapOutdoor@@QAEXPAVCArea@@@Z ; CMapOutdoor::FPushAreaToDeleteVector::operator()
  0013a	83 c6 04	 add	 esi, 4
  0013d	3b f3		 cmp	 esi, ebx
  0013f	75 ef		 jne	 SHORT $LL226@UpdateArea
  00141	8b 55 c4	 mov	 edx, DWORD PTR $T2[ebp+20]
  00144	8b 75 bc	 mov	 esi, DWORD PTR $T2[ebp+12]
  00147	8b 45 b8	 mov	 eax, DWORD PTR $T2[ebp+8]
  0014a	8b 4d d8	 mov	 ecx, DWORD PTR $T3[ebp+16]
  0014d	89 55 e4	 mov	 DWORD PTR __Bytes$1$[ebp], edx
  00150	89 75 0c	 mov	 DWORD PTR __Ptr$1$[ebp], esi

; 242  :     _Adl_verify_range(_First, _Last);
; 243  :     auto _UFirst      = _Get_unwrapped(_First);
; 244  :     const auto _ULast = _Get_unwrapped(_Last);
; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00153	eb 02		 jmp	 SHORT $LN225@UpdateArea
$LN440@UpdateArea:
  00155	33 f6		 xor	 esi, esi
$LN225@UpdateArea:
  00157	f3 0f 7e 45 b0	 movq	 xmm0, QWORD PTR $T2[ebp]
  0015c	89 45 88	 mov	 DWORD PTR _$S2$[ebp+8], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

  0015f	8b 45 c0	 mov	 eax, DWORD PTR $T2[ebp+16]
  00162	66 0f d6 45 80	 movq	 QWORD PTR _$S2$[ebp], xmm0
  00167	89 75 8c	 mov	 DWORD PTR _$S2$[ebp+12], esi
  0016a	89 45 90	 mov	 DWORD PTR _$S2$[ebp+16], eax
  0016d	89 55 94	 mov	 DWORD PTR _$S2$[ebp+20], edx

; 1864 :         return _My_data._Myfirst == _My_data._Mylast;

  00170	8b 45 f0	 mov	 eax, DWORD PTR __Ptr$1$[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 895  : 	FPushAreaToDeleteVector &rPushAreaToDeleteVector = std::for_each(m_AreaVector.begin(), m_AreaVector.end(),

  00173	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1864 :         return _My_data._Myfirst == _My_data._Mylast;

  00177	3b c1		 cmp	 eax, ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 898  : 	if (!rPushTerrainToDeleteVector.m_ReturnTerrainVector.empty())

  00179	0f 84 bc 00 00
	00		 je	 $LN3@UpdateArea
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  0017f	8b 97 28 09 00
	00		 mov	 edx, DWORD PTR [edi+2344]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 900  : 		m_TerrainDeleteVector.resize(rPushTerrainToDeleteVector.m_ReturnTerrainVector.size());

  00185	8d 9f 24 09 00
	00		 lea	 ebx, DWORD PTR [edi+2340]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  0018b	8b 33		 mov	 esi, DWORD PTR [ebx]

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0018d	2b c8		 sub	 ecx, eax

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  0018f	2b d6		 sub	 edx, esi

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00191	c1 f9 02	 sar	 ecx, 2

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  00194	c1 fa 02	 sar	 edx, 2

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00197	89 4d ec	 mov	 DWORD PTR __Newsize$1$[ebp], ecx

; 1558 :         if (_Newsize < _Oldsize) { // trim

  0019a	3b ca		 cmp	 ecx, edx
  0019c	73 08		 jae	 SHORT $LN396@UpdateArea

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

  0019e	8d 04 8e	 lea	 eax, DWORD PTR [esi+ecx*4]

; 1560 :             _Orphan_range(_Newlast, _Mylast);
; 1561 :             _Destroy_range(_Newlast, _Mylast, _Al);
; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

  001a1	89 43 04	 mov	 DWORD PTR [ebx+4], eax

; 1564 :             return;

  001a4	eb 33		 jmp	 SHORT $LN397@UpdateArea
$LN396@UpdateArea:

; 1565 :         }
; 1566 : 
; 1567 :         if (_Newsize > _Oldsize) { // append

  001a6	76 31		 jbe	 SHORT $LN397@UpdateArea

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  001a8	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  001ab	2b c6		 sub	 eax, esi
  001ad	c1 f8 02	 sar	 eax, 2

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

  001b0	3b c8		 cmp	 ecx, eax
  001b2	76 0e		 jbe	 SHORT $LN398@UpdateArea

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

  001b4	8d 45 0b	 lea	 eax, DWORD PTR $T5[ebp]
  001b7	50		 push	 eax
  001b8	51		 push	 ecx
  001b9	8b cb		 mov	 ecx, ebx
  001bb	e8 00 00 00 00	 call	 ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@PAVCTerrain@@V?$allocator@PAVCTerrain@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<CTerrain *,std::allocator<CTerrain *> >::_Resize_reallocate<std::_Value_init_tag>

; 1571 :                 return;

  001c0	eb 17		 jmp	 SHORT $LN397@UpdateArea
$LN398@UpdateArea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2035 :             _Zero_range(_PFirst, _PFirst + _Count);

  001c2	8b c1		 mov	 eax, ecx
  001c4	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  001c7	2b c2		 sub	 eax, edx
  001c9	8d 34 81	 lea	 esi, DWORD PTR [ecx+eax*4]
  001cc	56		 push	 esi
  001cd	51		 push	 ecx
  001ce	e8 00 00 00 00	 call	 ??$_Zero_range@PAPAVCTerrain@@@std@@YAPAPAVCTerrain@@QAPAV1@0@Z ; std::_Zero_range<CTerrain * *>
  001d3	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

  001d6	89 73 04	 mov	 DWORD PTR [ebx+4], esi
$LN397@UpdateArea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4601 :                 return _Copy_memmove(_First, _Last, _Dest);

  001d9	ff 33		 push	 DWORD PTR [ebx]
  001db	8b 5d f0	 mov	 ebx, DWORD PTR __Ptr$1$[ebp]
  001de	ff 75 d8	 push	 DWORD PTR $T3[ebp+16]
  001e1	53		 push	 ebx
  001e2	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCTerrain@@PAPAV1@@std@@YAPAPAVCTerrain@@PAPAV1@00@Z ; std::_Copy_memmove<CTerrain * *,CTerrain * *>
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 903  : 		for (DWORD dwIndex = 0; dwIndex < rPushTerrainToDeleteVector.m_ReturnTerrainVector.size(); ++dwIndex)

  001e7	8b 45 ec	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4601 :                 return _Copy_memmove(_First, _Last, _Dest);

  001ea	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 903  : 		for (DWORD dwIndex = 0; dwIndex < rPushTerrainToDeleteVector.m_ReturnTerrainVector.size(); ++dwIndex)

  001ed	85 c0		 test	 eax, eax
  001ef	74 47		 je	 SHORT $LN439@UpdateArea
$LL4@UpdateArea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001f1	8b b7 18 09 00
	00		 mov	 esi, DWORD PTR [edi+2328]
  001f7	8b 8f 1c 09 00
	00		 mov	 ecx, DWORD PTR [edi+2332]
  001fd	3b f1		 cmp	 esi, ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 907  : 			while(aTerrainPtrItertor != m_TerrainVector.end())

  001ff	74 2c		 je	 SHORT $LN2@UpdateArea
$LL5@UpdateArea:

; 908  : 			{
; 909  : 				CTerrain * pTerrain = *aTerrainPtrItertor;
; 910  : 				if (pTerrain == rPushTerrainToDeleteVector.m_ReturnTerrainVector[dwIndex])

  00201	8b 06		 mov	 eax, DWORD PTR [esi]
  00203	8d 56 04	 lea	 edx, DWORD PTR [esi+4]
  00206	3b 03		 cmp	 eax, DWORD PTR [ebx]
  00208	75 1a		 jne	 SHORT $LN18@UpdateArea
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4894 :             return _Copy_memmove(_First, _Last, _Dest);

  0020a	56		 push	 esi
  0020b	51		 push	 ecx
  0020c	52		 push	 edx
  0020d	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCTerrain@@PAPAV1@@std@@YAPAPAVCTerrain@@PAPAV1@00@Z ; std::_Copy_memmove<CTerrain * *,CTerrain * *>
  00212	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1732 :         --_Mylast;

  00215	83 87 1c 09 00
	00 fc		 add	 DWORD PTR [edi+2332], -4 ; fffffffcH
  0021c	8b 8f 1c 09 00
	00		 mov	 ecx, DWORD PTR [edi+2332]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 914  : 				}

  00222	eb 02		 jmp	 SHORT $LN70@UpdateArea
$LN18@UpdateArea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 79   :         ++_Ptr;

  00224	8b f2		 mov	 esi, edx
$LN70@UpdateArea:

; 163  :         return _Ptr == _Right._Ptr;

  00226	3b f1		 cmp	 esi, ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 907  : 			while(aTerrainPtrItertor != m_TerrainVector.end())

  00228	75 d7		 jne	 SHORT $LL5@UpdateArea
  0022a	8b 45 ec	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
$LN2@UpdateArea:

; 903  : 		for (DWORD dwIndex = 0; dwIndex < rPushTerrainToDeleteVector.m_ReturnTerrainVector.size(); ++dwIndex)

  0022d	83 c3 04	 add	 ebx, 4
  00230	83 e8 01	 sub	 eax, 1
  00233	89 45 ec	 mov	 DWORD PTR __Newsize$1$[ebp], eax
  00236	75 b9		 jne	 SHORT $LL4@UpdateArea
$LN439@UpdateArea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1864 :         return _My_data._Myfirst == _My_data._Mylast;

  00238	8b 75 0c	 mov	 esi, DWORD PTR __Ptr$1$[ebp]
$LN3@UpdateArea:
  0023b	8b 4d c0	 mov	 ecx, DWORD PTR $T2[ebp+16]
  0023e	3b f1		 cmp	 esi, ecx
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 920  : 	if (!rPushAreaToDeleteVector.m_ReturnAreaVector.empty())

  00240	0f 84 cf 00 00
	00		 je	 $LN8@UpdateArea
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  00246	8b 87 5c 09 00
	00		 mov	 eax, DWORD PTR [edi+2396]

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0024c	8b d9		 mov	 ebx, ecx

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  0024e	8b 97 58 09 00
	00		 mov	 edx, DWORD PTR [edi+2392]

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00254	2b de		 sub	 ebx, esi
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 922  : 		m_AreaDeleteVector.resize(rPushAreaToDeleteVector.m_ReturnAreaVector.size());

  00256	8d b7 58 09 00
	00		 lea	 esi, DWORD PTR [edi+2392]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0025c	c1 fb 02	 sar	 ebx, 2

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  0025f	8b c8		 mov	 ecx, eax

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00261	89 5d ec	 mov	 DWORD PTR $T4[ebp], ebx

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  00264	2b ca		 sub	 ecx, edx
  00266	89 45 08	 mov	 DWORD PTR __PFirst$1$[ebp], eax
  00269	c1 f9 02	 sar	 ecx, 2

; 1558 :         if (_Newsize < _Oldsize) { // trim

  0026c	3b d9		 cmp	 ebx, ecx
  0026e	73 08		 jae	 SHORT $LN162@UpdateArea

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

  00270	8d 04 9a	 lea	 eax, DWORD PTR [edx+ebx*4]

; 1560 :             _Orphan_range(_Newlast, _Mylast);
; 1561 :             _Destroy_range(_Newlast, _Mylast, _Al);
; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

  00273	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 1564 :             return;

  00276	eb 3c		 jmp	 SHORT $LN163@UpdateArea
$LN162@UpdateArea:

; 1565 :         }
; 1566 : 
; 1567 :         if (_Newsize > _Oldsize) { // append

  00278	76 3a		 jbe	 SHORT $LN163@UpdateArea

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  0027a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0027d	2b c2		 sub	 eax, edx
  0027f	c1 f8 02	 sar	 eax, 2

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

  00282	3b d8		 cmp	 ebx, eax
  00284	76 0e		 jbe	 SHORT $LN164@UpdateArea

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

  00286	8d 45 0b	 lea	 eax, DWORD PTR $T6[ebp]
  00289	8b ce		 mov	 ecx, esi
  0028b	50		 push	 eax
  0028c	53		 push	 ebx
  0028d	e8 00 00 00 00	 call	 ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@PAVCArea@@V?$allocator@PAVCArea@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<CArea *,std::allocator<CArea *> >::_Resize_reallocate<std::_Value_init_tag>

; 1571 :                 return;

  00292	eb 20		 jmp	 SHORT $LN163@UpdateArea
$LN164@UpdateArea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2035 :             _Zero_range(_PFirst, _PFirst + _Count);

  00294	8b c3		 mov	 eax, ebx
  00296	2b c1		 sub	 eax, ecx
  00298	8b 4d 08	 mov	 ecx, DWORD PTR __PFirst$1$[ebp]
  0029b	8d 34 81	 lea	 esi, DWORD PTR [ecx+eax*4]
  0029e	56		 push	 esi
  0029f	51		 push	 ecx
  002a0	e8 00 00 00 00	 call	 ??$_Zero_range@PAPAVCArea@@@std@@YAPAPAVCArea@@QAPAV1@0@Z ; std::_Zero_range<CArea * *>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

  002a5	89 b7 5c 09 00
	00		 mov	 DWORD PTR [edi+2396], esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2035 :             _Zero_range(_PFirst, _PFirst + _Count);

  002ab	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

  002ae	8d b7 58 09 00
	00		 lea	 esi, DWORD PTR [edi+2392]
$LN163@UpdateArea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4601 :                 return _Copy_memmove(_First, _Last, _Dest);

  002b4	ff 36		 push	 DWORD PTR [esi]
  002b6	8b 45 c0	 mov	 eax, DWORD PTR $T2[ebp+16]
  002b9	8b 75 0c	 mov	 esi, DWORD PTR __Ptr$1$[ebp]
  002bc	50		 push	 eax
  002bd	56		 push	 esi
  002be	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCArea@@PAPAV1@@std@@YAPAPAVCArea@@PAPAV1@00@Z ; std::_Copy_memmove<CArea * *,CArea * *>
  002c3	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 925  : 		for (DWORD dwIndex = 0; dwIndex < rPushAreaToDeleteVector.m_ReturnAreaVector.size(); ++dwIndex)

  002c6	85 db		 test	 ebx, ebx
  002c8	74 4b		 je	 SHORT $LN8@UpdateArea
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1796 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  002ca	8b de		 mov	 ebx, esi
  002cc	0f 1f 40 00	 npad	 4
$LL9@UpdateArea:

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  002d0	8b 45 e8	 mov	 eax, DWORD PTR __My_data$1$[ebp]
  002d3	8b 30		 mov	 esi, DWORD PTR [eax]
  002d5	8b 87 50 09 00
	00		 mov	 eax, DWORD PTR [edi+2384]
  002db	3b f0		 cmp	 esi, eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 928  : 			while(aAreaPtrItertor != m_AreaVector.end())

  002dd	74 2a		 je	 SHORT $LN7@UpdateArea
  002df	90		 npad	 1
$LL10@UpdateArea:

; 929  : 			{
; 930  : 				CArea * pArea = *aAreaPtrItertor;
; 931  : 				if (pArea == rPushAreaToDeleteVector.m_ReturnAreaVector[dwIndex])

  002e0	8b 0e		 mov	 ecx, DWORD PTR [esi]
  002e2	8d 56 04	 lea	 edx, DWORD PTR [esi+4]
  002e5	3b 0b		 cmp	 ecx, DWORD PTR [ebx]
  002e7	75 1a		 jne	 SHORT $LN21@UpdateArea
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4894 :             return _Copy_memmove(_First, _Last, _Dest);

  002e9	56		 push	 esi
  002ea	50		 push	 eax
  002eb	52		 push	 edx
  002ec	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCArea@@PAPAV1@@std@@YAPAPAVCArea@@PAPAV1@00@Z ; std::_Copy_memmove<CArea * *,CArea * *>
  002f1	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1732 :         --_Mylast;

  002f4	83 87 50 09 00
	00 fc		 add	 DWORD PTR [edi+2384], -4 ; fffffffcH
  002fb	8b 87 50 09 00
	00		 mov	 eax, DWORD PTR [edi+2384]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 932  : 					aAreaPtrItertor = m_AreaVector.erase(aAreaPtrItertor);

  00301	eb 02		 jmp	 SHORT $LN43@UpdateArea
$LN21@UpdateArea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 79   :         ++_Ptr;

  00303	8b f2		 mov	 esi, edx
$LN43@UpdateArea:

; 163  :         return _Ptr == _Right._Ptr;

  00305	3b f0		 cmp	 esi, eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 928  : 			while(aAreaPtrItertor != m_AreaVector.end())

  00307	75 d7		 jne	 SHORT $LL10@UpdateArea
$LN7@UpdateArea:

; 925  : 		for (DWORD dwIndex = 0; dwIndex < rPushAreaToDeleteVector.m_ReturnAreaVector.size(); ++dwIndex)

  00309	83 c3 04	 add	 ebx, 4
  0030c	83 6d ec 01	 sub	 DWORD PTR $T4[ebp], 1
  00310	75 be		 jne	 SHORT $LL9@UpdateArea
  00312	8b 75 0c	 mov	 esi, DWORD PTR __Ptr$1$[ebp]
$LN8@UpdateArea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  00315	85 f6		 test	 esi, esi
  00317	74 2c		 je	 SHORT $LN88@UpdateArea

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00319	8b 4d e4	 mov	 ecx, DWORD PTR __Bytes$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0031c	8b c6		 mov	 eax, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0031e	2b ce		 sub	 ecx, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00320	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00323	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00329	72 10		 jb	 SHORT $LN104@UpdateArea

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0032b	8b 70 fc	 mov	 esi, DWORD PTR [eax-4]
  0032e	83 c1 23	 add	 ecx, 35			; 00000023H
  00331	2b c6		 sub	 eax, esi

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00333	83 c0 fc	 add	 eax, -4			; fffffffcH
  00336	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00339	77 51		 ja	 SHORT $LN130@UpdateArea
$LN104@UpdateArea:

; 265  :         ::operator delete(_Ptr, _Bytes);

  0033b	51		 push	 ecx
  0033c	56		 push	 esi
  0033d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00342	83 c4 08	 add	 esp, 8
$LN88@UpdateArea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  00345	8b 55 f0	 mov	 edx, DWORD PTR __Ptr$1$[ebp]
  00348	85 d2		 test	 edx, edx
  0034a	74 2c		 je	 SHORT $LN117@UpdateArea

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0034c	8b 4d e0	 mov	 ecx, DWORD PTR __Bytes$1$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0034f	8b c2		 mov	 eax, edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00351	2b ca		 sub	 ecx, edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00353	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00356	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0035c	72 10		 jb	 SHORT $LN133@UpdateArea

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0035e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00361	83 c1 23	 add	 ecx, 35			; 00000023H
  00364	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00366	83 c0 fc	 add	 eax, -4			; fffffffcH
  00369	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0036c	77 1e		 ja	 SHORT $LN130@UpdateArea
$LN133@UpdateArea:

; 265  :         ::operator delete(_Ptr, _Bytes);

  0036e	51		 push	 ecx
  0036f	52		 push	 edx
  00370	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00375	83 c4 08	 add	 esp, 8
$LN117@UpdateArea:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 938  : }

  00378	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0037b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00382	59		 pop	 ecx
  00383	5f		 pop	 edi
  00384	5e		 pop	 esi
  00385	5b		 pop	 ebx
  00386	8b e5		 mov	 esp, ebp
  00388	5d		 pop	 ebp
  00389	c2 08 00	 ret	 8
$LN130@UpdateArea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0038c	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN443@UpdateArea:
  00391	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?UpdateAreaList@CMapOutdoor@@MAEXJJ@Z$10:
  00000	8d 4d c8	 lea	 ecx, DWORD PTR $T3[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1FPushTerrainToDeleteVector@CMapOutdoor@@QAE@XZ
__unwindfunclet$?UpdateAreaList@CMapOutdoor@@MAEXJJ@Z$1:
  00008	8d 4d 98	 lea	 ecx, DWORD PTR _$S1$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1FPushTerrainToDeleteVector@CMapOutdoor@@QAE@XZ
__unwindfunclet$?UpdateAreaList@CMapOutdoor@@MAEXJJ@Z$6:
  00010	8d 4d b0	 lea	 ecx, DWORD PTR $T2[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1FPushAreaToDeleteVector@CMapOutdoor@@QAE@XZ
__unwindfunclet$?UpdateAreaList@CMapOutdoor@@MAEXJJ@Z$3:
  00018	8d 4d 80	 lea	 ecx, DWORD PTR _$S2$[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1FPushAreaToDeleteVector@CMapOutdoor@@QAE@XZ
  00020	cc		 int	 3
  00021	cc		 int	 3
  00022	cc		 int	 3
  00023	cc		 int	 3
  00024	cc		 int	 3
__ehhandler$?UpdateAreaList@CMapOutdoor@@MAEXJJ@Z:
  00025	90		 npad	 1
  00026	90		 npad	 1
  00027	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002e	8b 8a 7c ff ff
	ff		 mov	 ecx, DWORD PTR [edx-132]
  00034	33 c8		 xor	 ecx, eax
  00036	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?UpdateAreaList@CMapOutdoor@@MAEXJJ@Z
  00040	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?UpdateAreaList@CMapOutdoor@@MAEXJJ@Z ENDP		; CMapOutdoor::UpdateAreaList
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?__UpdateGarvage@CMapOutdoor@@MAEXXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?__UpdateGarvage@CMapOutdoor@@MAEXXZ PROC		; CMapOutdoor::__UpdateGarvage, COMDAT
; _this$ = ecx

; 841  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?__UpdateGarvage@CMapOutdoor@@MAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f9		 mov	 edi, ecx

; 842  : 	const DWORD dwTerrainEraseInterval = 1000 * 60;
; 843  : 	static DWORD dwEraseTime = ELTimer_GetMSec();

  00026	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  0002c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR __tls_index
  00032	8b 14 90	 mov	 edx, DWORD PTR [eax+edx*4]
  00035	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??__UpdateGarvage@CMapOutdoor@@MAEXXZ@4HA
  0003a	3b 82 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[edx]
  00040	0f 8f c0 00 00
	00		 jg	 $LN50@UpdateGarv
$LN2@UpdateGarv:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1864 :         return _My_data._Myfirst == _My_data._Mylast;

  00046	8b 87 24 09 00
	00		 mov	 eax, DWORD PTR [edi+2340]
  0004c	3b 87 28 09 00
	00		 cmp	 eax, DWORD PTR [edi+2344]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 845  : 	if (!m_TerrainDeleteVector.empty())

  00052	74 46		 je	 SHORT $LN3@UpdateGarv

; 846  : 	{
; 847  : 		if (ELTimer_GetMSec() - dwEraseTime <= dwTerrainEraseInterval)

  00054	e8 00 00 00 00	 call	 ?ELTimer_GetMSec@@YAKXZ	; ELTimer_GetMSec
  00059	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?dwEraseTime@?1??__UpdateGarvage@CMapOutdoor@@MAEXXZ@4KA
  0005f	3d 60 ea 00 00	 cmp	 eax, 60000		; 0000ea60H
  00064	0f 86 8b 00 00
	00		 jbe	 $LN5@UpdateGarv
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0006a	8b b7 24 09 00
	00		 mov	 esi, DWORD PTR [edi+2340]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 851  : 		CTerrain::Delete(pTerrain);

  00070	ff 36		 push	 DWORD PTR [esi]
  00072	e8 00 00 00 00	 call	 ?Delete@CTerrain@@SAXPAV1@@Z ; CTerrain::Delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4894 :             return _Copy_memmove(_First, _Last, _Dest);

  00077	56		 push	 esi
  00078	ff b7 28 09 00
	00		 push	 DWORD PTR [edi+2344]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1729 :         _STD _Move_unchecked(_Whereptr + 1, _Mylast, _Whereptr);

  0007e	83 c6 04	 add	 esi, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4894 :             return _Copy_memmove(_First, _Last, _Dest);

  00081	56		 push	 esi
  00082	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCTerrain@@PAPAV1@@std@@YAPAPAVCTerrain@@PAPAV1@00@Z ; std::_Copy_memmove<CTerrain * *,CTerrain * *>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1732 :         --_Mylast;

  00087	83 87 28 09 00
	00 fc		 add	 DWORD PTR [edi+2344], -4 ; fffffffcH
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 854  : 		dwEraseTime = ELTimer_GetMSec();

  0008e	e8 00 00 00 00	 call	 ?ELTimer_GetMSec@@YAKXZ	; ELTimer_GetMSec

; 855  : 		Trace("Delete Terrain \n");

  00093	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GFILMBNJ@Delete?5Terrain?5?6@

; 856  : 		return;

  00098	eb 4e		 jmp	 SHORT $LN48@UpdateGarv
$LN3@UpdateGarv:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1864 :         return _My_data._Myfirst == _My_data._Mylast;

  0009a	8b 87 58 09 00
	00		 mov	 eax, DWORD PTR [edi+2392]
  000a0	3b 87 5c 09 00
	00		 cmp	 eax, DWORD PTR [edi+2396]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 859  : 	if (!m_AreaDeleteVector.empty())

  000a6	74 4d		 je	 SHORT $LN5@UpdateGarv

; 860  : 	{
; 861  : 		if (ELTimer_GetMSec() - dwEraseTime <= dwTerrainEraseInterval)

  000a8	e8 00 00 00 00	 call	 ?ELTimer_GetMSec@@YAKXZ	; ELTimer_GetMSec
  000ad	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?dwEraseTime@?1??__UpdateGarvage@CMapOutdoor@@MAEXXZ@4KA
  000b3	3d 60 ea 00 00	 cmp	 eax, 60000		; 0000ea60H
  000b8	76 3b		 jbe	 SHORT $LN5@UpdateGarv
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000ba	8b b7 58 09 00
	00		 mov	 esi, DWORD PTR [edi+2392]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 866  : 		CArea::Delete(pArea);

  000c0	ff 36		 push	 DWORD PTR [esi]
  000c2	e8 00 00 00 00	 call	 ?Delete@CArea@@SAXPAV1@@Z ; CArea::Delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4894 :             return _Copy_memmove(_First, _Last, _Dest);

  000c7	56		 push	 esi
  000c8	ff b7 5c 09 00
	00		 push	 DWORD PTR [edi+2396]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1729 :         _STD _Move_unchecked(_Whereptr + 1, _Mylast, _Whereptr);

  000ce	83 c6 04	 add	 esi, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4894 :             return _Copy_memmove(_First, _Last, _Dest);

  000d1	56		 push	 esi
  000d2	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCArea@@PAPAV1@@std@@YAPAPAVCArea@@PAPAV1@00@Z ; std::_Copy_memmove<CArea * *,CArea * *>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1732 :         --_Mylast;

  000d7	83 87 5c 09 00
	00 fc		 add	 DWORD PTR [edi+2396], -4 ; fffffffcH
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 869  : 		dwEraseTime = ELTimer_GetMSec();

  000de	e8 00 00 00 00	 call	 ?ELTimer_GetMSec@@YAKXZ	; ELTimer_GetMSec

; 870  : 		Trace("Delete Area \n");

  000e3	68 00 00 00 00	 push	 OFFSET ??_C@_0O@MNAKBLAF@Delete?5Area?5?6@
$LN48@UpdateGarv:

; 871  : 		return;
; 872  : 	}
; 873  : }

  000e8	a3 00 00 00 00	 mov	 DWORD PTR ?dwEraseTime@?1??__UpdateGarvage@CMapOutdoor@@MAEXXZ@4KA, eax
  000ed	e8 00 00 00 00	 call	 ?Trace@@YAXPBD@Z	; Trace
  000f2	83 c4 14	 add	 esp, 20			; 00000014H
$LN5@UpdateGarv:
  000f5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ff	59		 pop	 ecx
  00100	5f		 pop	 edi
  00101	5e		 pop	 esi
  00102	8b e5		 mov	 esp, ebp
  00104	5d		 pop	 ebp
  00105	c3		 ret	 0
$LN50@UpdateGarv:

; 842  : 	const DWORD dwTerrainEraseInterval = 1000 * 60;
; 843  : 	static DWORD dwEraseTime = ELTimer_GetMSec();

  00106	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??__UpdateGarvage@CMapOutdoor@@MAEXXZ@4HA
  0010b	e8 00 00 00 00	 call	 __Init_thread_header
  00110	83 c4 04	 add	 esp, 4
  00113	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??__UpdateGarvage@CMapOutdoor@@MAEXXZ@4HA, -1
  0011a	0f 85 26 ff ff
	ff		 jne	 $LN2@UpdateGarv
  00120	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00127	e8 00 00 00 00	 call	 ?ELTimer_GetMSec@@YAKXZ	; ELTimer_GetMSec
  0012c	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??__UpdateGarvage@CMapOutdoor@@MAEXXZ@4HA
  00131	a3 00 00 00 00	 mov	 DWORD PTR ?dwEraseTime@?1??__UpdateGarvage@CMapOutdoor@@MAEXXZ@4KA, eax
  00136	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0013d	e8 00 00 00 00	 call	 __Init_thread_footer
  00142	83 c4 04	 add	 esp, 4
  00145	e9 fc fe ff ff	 jmp	 $LN2@UpdateGarv
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?__UpdateGarvage@CMapOutdoor@@MAEXXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??__UpdateGarvage@CMapOutdoor@@MAEXXZ@4HA
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$?__UpdateGarvage@CMapOutdoor@@MAEXXZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?__UpdateGarvage@CMapOutdoor@@MAEXXZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?__UpdateGarvage@CMapOutdoor@@MAEXXZ ENDP		; CMapOutdoor::__UpdateGarvage
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?__ClearGarvage@CMapOutdoor@@MAEXXZ
_TEXT	SEGMENT
?__ClearGarvage@CMapOutdoor@@MAEXXZ PROC		; CMapOutdoor::__ClearGarvage, COMDAT
; _this$ = ecx

; 832  : {

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00005	8b 9f 28 09 00
	00		 mov	 ebx, DWORD PTR [edi+2344]
  0000b	8b b7 24 09 00
	00		 mov	 esi, DWORD PTR [edi+2340]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 11		 je	 SHORT $LN17@ClearGarva
$LL18@ClearGarva:

; 246  :         _Func(*_UFirst);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ?Delete@CTerrain@@SAXPAV1@@Z ; CTerrain::Delete
  0001c	83 c6 04	 add	 esi, 4
  0001f	83 c4 04	 add	 esp, 4
  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL18@ClearGarva
$LN17@ClearGarva:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00026	8b 87 24 09 00
	00		 mov	 eax, DWORD PTR [edi+2340]
  0002c	3b 87 28 09 00
	00		 cmp	 eax, DWORD PTR [edi+2344]
  00032	74 06		 je	 SHORT $LN20@ClearGarva

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  00034	89 87 28 09 00
	00		 mov	 DWORD PTR [edi+2344], eax
$LN20@ClearGarva:

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0003a	8b 9f 5c 09 00
	00		 mov	 ebx, DWORD PTR [edi+2396]
  00040	8b b7 58 09 00
	00		 mov	 esi, DWORD PTR [edi+2392]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 245  :     for (; _UFirst != _ULast; ++_UFirst) {

  00046	3b f3		 cmp	 esi, ebx
  00048	74 17		 je	 SHORT $LN37@ClearGarva
  0004a	66 0f 1f 44 00
	00		 npad	 6
$LL38@ClearGarva:

; 246  :         _Func(*_UFirst);

  00050	ff 36		 push	 DWORD PTR [esi]
  00052	e8 00 00 00 00	 call	 ?Delete@CArea@@SAXPAV1@@Z ; CArea::Delete
  00057	83 c6 04	 add	 esi, 4
  0005a	83 c4 04	 add	 esp, 4
  0005d	3b f3		 cmp	 esi, ebx
  0005f	75 ef		 jne	 SHORT $LL38@ClearGarva
$LN37@ClearGarva:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00061	8b 87 58 09 00
	00		 mov	 eax, DWORD PTR [edi+2392]
  00067	3b 87 5c 09 00
	00		 cmp	 eax, DWORD PTR [edi+2396]
  0006d	74 06		 je	 SHORT $LN40@ClearGarva

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  0006f	89 87 5c 09 00
	00		 mov	 DWORD PTR [edi+2396], eax
$LN40@ClearGarva:
  00075	5f		 pop	 edi
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 838  : }

  00076	5e		 pop	 esi
  00077	5b		 pop	 ebx
  00078	c3		 ret	 0
?__ClearGarvage@CMapOutdoor@@MAEXXZ ENDP		; CMapOutdoor::__ClearGarvage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?UpdateSky@CMapOutdoor@@QAEXXZ
_TEXT	SEGMENT
?UpdateSky@CMapOutdoor@@QAEXXZ PROC			; CMapOutdoor::UpdateSky, COMDAT
; _this$ = ecx

; 160  : 	m_SkyBox.Update();

  00000	8b 81 38 03 00
	00		 mov	 eax, DWORD PTR [ecx+824]
  00006	81 c1 38 03 00
	00		 add	 ecx, 824		; 00000338H
  0000c	ff 60 0c	 jmp	 DWORD PTR [eax+12]
?UpdateSky@CMapOutdoor@@QAEXXZ ENDP			; CMapOutdoor::UpdateSky
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?UpdateAroundAmbience@CMapOutdoor@@UAEXMMM@Z
_TEXT	SEGMENT
_pArea$1 = -4						; size = 4
_fX$ = 8						; size = 4
_fY$ = 12						; size = 4
_fZ$ = 16						; size = 4
?UpdateAroundAmbience@CMapOutdoor@@UAEXMMM@Z PROC	; CMapOutdoor::UpdateAroundAmbience, COMDAT
; _this$ = ecx

; 202  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx

; 203  : 	for (int i = 0; i < AROUND_AREA_NUM; ++i)

  00008	33 f6		 xor	 esi, esi
  0000a	66 0f 1f 44 00
	00		 npad	 6
$LL4@UpdateArou:

; 204  : 	{
; 205  : 		CArea * pArea;
; 206  : 		if (GetAreaPointer(i, &pArea))

  00010	8d 45 fc	 lea	 eax, DWORD PTR _pArea$1[ebp]
  00013	8b cf		 mov	 ecx, edi
  00015	50		 push	 eax
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ?GetAreaPointer@CMapOutdoor@@QAEHEPAPAVCArea@@@Z ; CMapOutdoor::GetAreaPointer
  0001c	85 c0		 test	 eax, eax
  0001e	74 2b		 je	 SHORT $LN2@UpdateArou

; 207  : 			pArea->UpdateAroundAmbience(fX, fY, fZ);

  00020	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fZ$[ebp]
  00025	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _pArea$1[ebp]
  0002b	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00031	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fY$[ebp]
  00036	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0003c	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fX$[ebp]
  00041	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00046	e8 00 00 00 00	 call	 ?UpdateAroundAmbience@CArea@@QAEXMMM@Z ; CArea::UpdateAroundAmbience
$LN2@UpdateArou:

; 203  : 	for (int i = 0; i < AROUND_AREA_NUM; ++i)

  0004b	46		 inc	 esi
  0004c	83 fe 09	 cmp	 esi, 9
  0004f	7c bf		 jl	 SHORT $LL4@UpdateArou
  00051	5f		 pop	 edi
  00052	5e		 pop	 esi

; 208  : 	}
; 209  : }

  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 0c 00	 ret	 12			; 0000000cH
?UpdateAroundAmbience@CMapOutdoor@@UAEXMMM@Z ENDP	; CMapOutdoor::UpdateAroundAmbience
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
; File C:\Marty 5.5\Src-Client\Client\eterBase\Singleton.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?Update@CMapOutdoor@@UAE_NMMM@Z
_TEXT	SEGMENT
_v3Player$ = -52					; size = 12
_t1$1$ = -40						; size = 4
$T1 = -36						; size = 4
tv711 = -36						; size = 4
tv718 = -32						; size = 4
tv712 = -32						; size = 4
tv732 = -28						; size = 4
tv734 = -24						; size = 4
_sCoordY$1$ = -20					; size = 4
_iy$1$ = -16						; size = 4
tv716 = -16						; size = 4
_wCellCoordX$1$ = -12					; size = 4
_ix$1$ = -12						; size = 4
$T2 = -8						; size = 4
_this$1$ = -4						; size = 4
_usY$1$ = 8						; size = 4
_sCoordX$1$ = 8						; size = 4
_fX$ = 8						; size = 4
_fY$1$ = 12						; size = 4
_fY$ = 12						; size = 4
$T3 = 16						; size = 4
_wCellCoordY$1$ = 16					; size = 4
_fZ$ = 16						; size = 4
?Update@CMapOutdoor@@UAE_NMMM@Z PROC			; CMapOutdoor::Update, COMDAT
; _this$ = ecx

; 46   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 181  :     y = fy;

  00006	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _fY$[ebp]
  0000b	f3 0f 10 55 08	 movss	 xmm2, DWORD PTR _fX$[ebp]

; 182  :     z = fz;

  00010	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fZ$[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 46   : {

  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	8b f9		 mov	 edi, ecx
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 180  :     x = fx;

  00019	f3 0f 11 55 cc	 movss	 DWORD PTR _v3Player$[ebp], xmm2

; 181  :     y = fy;

  0001e	f3 0f 11 4d d0	 movss	 DWORD PTR _v3Player$[ebp+4], xmm1

; 182  :     z = fz;

  00023	f3 0f 11 45 d4	 movss	 DWORD PTR _v3Player$[ebp+8], xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 46   : {

  00028	89 7d fc	 mov	 DWORD PTR _this$1$[ebp], edi

; 49   : 	m_v3Player=v3Player;

  0002b	f3 0f 11 97 a8
	0e 00 00	 movss	 DWORD PTR [edi+3752], xmm2
  00033	f3 0f 11 8f ac
	0e 00 00	 movss	 DWORD PTR [edi+3756], xmm1
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 181  :     y = fy;

  0003b	f3 0f 11 4d 0c	 movss	 DWORD PTR _fY$1$[ebp], xmm1
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 49   : 	m_v3Player=v3Player;

  00040	f3 0f 11 87 b0
	0e 00 00	 movss	 DWORD PTR [edi+3760], xmm0

; 50   : 
; 51   : 
; 52   : 	DWORD t1=ELTimer_GetMSec();

  00048	e8 00 00 00 00	 call	 ?ELTimer_GetMSec@@YAKXZ	; ELTimer_GetMSec

; 53   : 
; 54   : 	int ix, iy;
; 55   : 	PR_FLOAT_TO_INT(fX, ix);

  0004d	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _v3Player$[ebp]
  00052	89 45 d8	 mov	 DWORD PTR _t1$1$[ebp], eax
  00055	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?PR_FCNV@@3MA, xmm0
  0005d	d9 05 00 00 00
	00		 fld	 DWORD PTR ?PR_FCNV@@3MA	; PR_FCNV
  00063	db 1d 00 00 00
	00		 fistp	 DWORD PTR ?PR_ICNV@@3JA
  00069	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  0006f	89 4d f4	 mov	 DWORD PTR _ix$1$[ebp], ecx
  00072	66 0f 6e c1	 movd	 xmm0, ecx
  00076	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00079	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?PR_FCNV@@3MA
  00080	76 04		 jbe	 SHORT $LN14@Update
  00082	49		 dec	 ecx
  00083	89 4d f4	 mov	 DWORD PTR _ix$1$[ebp], ecx
$LN14@Update:

; 56   : 	if ( fY < 0 )

  00086	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _fY$1$[ebp]
  0008b	0f 57 c0	 xorps	 xmm0, xmm0
  0008e	0f 2f c1	 comiss	 xmm0, xmm1
  00091	76 0c		 jbe	 SHORT $LN8@Update

; 57   : 		fY = -fY;

  00093	0f 57 0d 00 00
	00 00		 xorps	 xmm1, DWORD PTR __xmm@80000000800000008000000080000000
  0009a	f3 0f 11 4d 0c	 movss	 DWORD PTR _fY$1$[ebp], xmm1
$LN8@Update:

; 58   : 	PR_FLOAT_TO_INT(fY, iy);

  0009f	f3 0f 11 0d 00
	00 00 00	 movss	 DWORD PTR ?PR_FCNV@@3MA, xmm1
  000a7	d9 05 00 00 00
	00		 fld	 DWORD PTR ?PR_FCNV@@3MA	; PR_FCNV
  000ad	db 1d 00 00 00
	00		 fistp	 DWORD PTR ?PR_ICNV@@3JA
  000b3	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  000b9	89 75 f0	 mov	 DWORD PTR _iy$1$[ebp], esi
  000bc	66 0f 6e c6	 movd	 xmm0, esi
  000c0	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000c3	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?PR_FCNV@@3MA
  000ca	76 04		 jbe	 SHORT $LN16@Update
  000cc	4e		 dec	 esi
  000cd	89 75 f0	 mov	 DWORD PTR _iy$1$[ebp], esi
$LN16@Update:

; 59   : 
; 60   : 	short sCoordX = MINMAX(0, ix / CTerrainImpl::TERRAIN_XSIZE, m_sTerrainCountX - 1);

  000d0	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  000d5	f7 e9		 imul	 ecx
  000d7	0f bf 47 70	 movsx	 eax, WORD PTR [edi+112]
  000db	c1 fa 0d	 sar	 edx, 13			; 0000000dH
  000de	48		 dec	 eax
  000df	8b ca		 mov	 ecx, edx
  000e1	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  000e4	03 ca		 add	 ecx, edx
  000e6	50		 push	 eax
  000e7	51		 push	 ecx
  000e8	6a 00		 push	 0
  000ea	89 4d e8	 mov	 DWORD PTR tv734[ebp], ecx
  000ed	e8 00 00 00 00	 call	 ?MINMAX@@YAHHHH@Z	; MINMAX
  000f2	0f b7 c0	 movzx	 eax, ax
  000f5	89 45 08	 mov	 DWORD PTR _sCoordX$1$[ebp], eax
  000f8	0f b7 c0	 movzx	 eax, ax
  000fb	89 45 e0	 mov	 DWORD PTR tv712[ebp], eax

; 61   : 	short sCoordY = MINMAX(0, iy / CTerrainImpl::TERRAIN_YSIZE, m_sTerrainCountY - 1);

  000fe	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  00103	f7 ee		 imul	 esi
  00105	0f bf 47 72	 movsx	 eax, WORD PTR [edi+114]
  00109	c1 fa 0d	 sar	 edx, 13			; 0000000dH
  0010c	48		 dec	 eax
  0010d	8b ca		 mov	 ecx, edx
  0010f	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00112	03 ca		 add	 ecx, edx
  00114	50		 push	 eax
  00115	51		 push	 ecx
  00116	6a 00		 push	 0
  00118	89 4d e4	 mov	 DWORD PTR tv732[ebp], ecx
  0011b	e8 00 00 00 00	 call	 ?MINMAX@@YAHHHH@Z	; MINMAX
  00120	0f b7 c8	 movzx	 ecx, ax
  00123	83 c4 18	 add	 esp, 24			; 00000018H

; 62   : #ifdef __PERFORMANCE_CHECKER__
; 63   : 	DWORD t2=ELTimer_GetMSec();
; 64   : #endif
; 65   : 
; 66   : 	bool bNeedInit = (m_PrevCoordinate.m_sTerrainCoordX == -1 || m_PrevCoordinate.m_sTerrainCoordY == -1);

  00126	66 83 bf 80 00
	00 00 ff	 cmp	 WORD PTR [edi+128], -1
  0012e	0f b7 c1	 movzx	 eax, cx
  00131	89 4d ec	 mov	 DWORD PTR _sCoordY$1$[ebp], ecx
  00134	89 45 dc	 mov	 DWORD PTR tv711[ebp], eax
  00137	74 2b		 je	 SHORT $LN41@Update
  00139	66 83 bf 82 00
	00 00 ff	 cmp	 WORD PTR [edi+130], -1
  00141	74 21		 je	 SHORT $LN41@Update

; 67   : 
; 68   : 	if ( bNeedInit ||
; 69   : 		(m_CurCoordinate.m_sTerrainCoordX/LOAD_SIZE_WIDTH) != (sCoordX/LOAD_SIZE_WIDTH) ||

  00143	0f b7 47 74	 movzx	 eax, WORD PTR [edi+116]
  00147	8b 55 08	 mov	 edx, DWORD PTR _sCoordX$1$[ebp]
  0014a	8b f0		 mov	 esi, eax
  0014c	66 3b c2	 cmp	 ax, dx
  0014f	75 0a		 jne	 SHORT $LN43@Update
  00151	66 39 4f 76	 cmp	 WORD PTR [edi+118], cx
  00155	0f 84 8d 01 00
	00		 je	 $LN9@Update
$LN43@Update:

; 76   : 		}
; 77   : 		else
; 78   : 		{
; 79   : 			m_PrevCoordinate.m_sTerrainCoordX = m_CurCoordinate.m_sTerrainCoordX;
; 80   : 			m_PrevCoordinate.m_sTerrainCoordY = m_CurCoordinate.m_sTerrainCoordY;

  0015b	0f b7 57 76	 movzx	 edx, WORD PTR [edi+118]
  0015f	8b 45 08	 mov	 eax, DWORD PTR _sCoordX$1$[ebp]
  00162	eb 09		 jmp	 SHORT $LN53@Update
$LN41@Update:

; 70   : 		(m_CurCoordinate.m_sTerrainCoordY/LOAD_SIZE_WIDTH) != (sCoordY/LOAD_SIZE_WIDTH) )
; 71   : 	{
; 72   : 		if (bNeedInit)
; 73   : 		{
; 74   : 			m_PrevCoordinate.m_sTerrainCoordX = sCoordX;
; 75   : 			m_PrevCoordinate.m_sTerrainCoordY = sCoordY;

  00164	8b 45 08	 mov	 eax, DWORD PTR _sCoordX$1$[ebp]
  00167	0f b7 d1	 movzx	 edx, cx
  0016a	0f b7 f0	 movzx	 esi, ax
$LN53@Update:

; 81   : 		}
; 82   : 
; 83   : 		m_CurCoordinate.m_sTerrainCoordX = sCoordX;

  0016d	66 89 b7 80 00
	00 00		 mov	 WORD PTR [edi+128], si
  00174	66 89 97 82 00
	00 00		 mov	 WORD PTR [edi+130], dx
  0017b	89 7d 10	 mov	 DWORD PTR $T3[ebp], edi
  0017e	8b 55 10	 mov	 edx, DWORD PTR $T3[ebp]
  00181	c7 45 f8 74 00
	00 00		 mov	 DWORD PTR $T2[ebp], 116	; 00000074H
  00188	8b 75 f8	 mov	 esi, DWORD PTR $T2[ebp]

; 84   : 		m_CurCoordinate.m_sTerrainCoordY = sCoordY;

  0018b	66 89 4f 76	 mov	 WORD PTR [edi+118], cx
  0018f	66 89 04 16	 mov	 WORD PTR [esi+edx], ax

; 85   : 		m_lCurCoordStartX = sCoordX * CTerrainImpl::TERRAIN_XSIZE;

  00193	0f bf f0	 movsx	 esi, ax
  00196	69 c6 00 64 00
	00		 imul	 eax, esi, 25600
  0019c	89 47 78	 mov	 DWORD PTR [edi+120], eax

; 86   : 		m_lCurCoordStartY = sCoordY * CTerrainImpl::TERRAIN_YSIZE;

  0019f	0f bf c1	 movsx	 eax, cx
  001a2	69 c0 00 64 00
	00		 imul	 eax, eax, 25600

; 87   : 
; 88   : 		WORD wCellCoordX = (ix % CTerrainImpl::TERRAIN_XSIZE) / CTerrainImpl::CELLSCALE;

  001a8	8b 4d f4	 mov	 ecx, DWORD PTR _ix$1$[ebp]
  001ab	89 47 7c	 mov	 DWORD PTR [edi+124], eax
  001ae	69 45 e8 00 64
	00 00		 imul	 eax, DWORD PTR tv734[ebp], 25600
  001b5	2b c8		 sub	 ecx, eax
  001b7	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  001bc	f7 e9		 imul	 ecx
  001be	c1 fa 06	 sar	 edx, 6
  001c1	8b ca		 mov	 ecx, edx
  001c3	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  001c6	03 ca		 add	 ecx, edx

; 89   : 		WORD wCellCoordY = (iy % CTerrainImpl::TERRAIN_YSIZE) / CTerrainImpl::CELLSCALE;

  001c8	8b 55 f0	 mov	 edx, DWORD PTR _iy$1$[ebp]
  001cb	0f b7 c1	 movzx	 eax, cx
  001ce	69 4d e4 00 64
	00 00		 imul	 ecx, DWORD PTR tv732[ebp], 25600
  001d5	89 45 f4	 mov	 DWORD PTR _wCellCoordX$1$[ebp], eax
  001d8	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  001dd	2b d1		 sub	 edx, ecx

; 90   : 
; 91   : 		short sReferenceCoordMinX, sReferenceCoordMaxX, sReferenceCoordMinY, sReferenceCoordMaxY;
; 92   : 		sReferenceCoordMinX = max(m_CurCoordinate.m_sTerrainCoordX - LOAD_SIZE_WIDTH, 0);
; 93   : 		sReferenceCoordMaxX = min(m_CurCoordinate.m_sTerrainCoordX + LOAD_SIZE_WIDTH, m_sTerrainCountX - 1);

  001df	33 c9		 xor	 ecx, ecx
  001e1	f7 ea		 imul	 edx
  001e3	c1 fa 06	 sar	 edx, 6
  001e6	8b c2		 mov	 eax, edx
  001e8	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  001eb	03 c2		 add	 eax, edx
  001ed	0f b7 c0	 movzx	 eax, ax
  001f0	89 45 10	 mov	 DWORD PTR _wCellCoordY$1$[ebp], eax
  001f3	8b 45 e0	 mov	 eax, DWORD PTR tv712[ebp]
  001f6	48		 dec	 eax
  001f7	83 fe 01	 cmp	 esi, 1
  001fa	0f b7 c0	 movzx	 eax, ax
  001fd	0f 4e c1	 cmovle	 eax, ecx
  00200	0f b7 4f 70	 movzx	 ecx, WORD PTR [edi+112]
  00204	0f b7 c0	 movzx	 eax, ax
  00207	46		 inc	 esi
  00208	89 45 e0	 mov	 DWORD PTR tv718[ebp], eax

; 94   : 		sReferenceCoordMinY = max(m_CurCoordinate.m_sTerrainCoordY - LOAD_SIZE_WIDTH, 0);

  0020b	8b 45 08	 mov	 eax, DWORD PTR _sCoordX$1$[ebp]
  0020e	40		 inc	 eax
  0020f	0f bf f9	 movsx	 edi, cx
  00212	0f b7 d0	 movzx	 edx, ax
  00215	4f		 dec	 edi
  00216	49		 dec	 ecx
  00217	3b f7		 cmp	 esi, edi
  00219	0f b7 c1	 movzx	 eax, cx
  0021c	0f 4d d0	 cmovge	 edx, eax

; 95   : 		sReferenceCoordMaxY = min(m_CurCoordinate.m_sTerrainCoordY + LOAD_SIZE_WIDTH, m_sTerrainCountY - 1);

  0021f	33 ff		 xor	 edi, edi
  00221	0f b7 c2	 movzx	 eax, dx
  00224	8b 55 ec	 mov	 edx, DWORD PTR _sCoordY$1$[ebp]
  00227	89 45 f0	 mov	 DWORD PTR tv716[ebp], eax
  0022a	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  0022d	0f bf f2	 movsx	 esi, dx
  00230	0f b7 48 72	 movzx	 ecx, WORD PTR [eax+114]
  00234	8b 45 dc	 mov	 eax, DWORD PTR tv711[ebp]
  00237	48		 dec	 eax
  00238	83 fe 01	 cmp	 esi, 1
  0023b	0f b7 c0	 movzx	 eax, ax
  0023e	0f 4e c7	 cmovle	 eax, edi
  00241	0f bf f9	 movsx	 edi, cx

; 96   : 
; 97   : 		for (WORD usY = sReferenceCoordMinY; usY <=sReferenceCoordMaxY; ++usY)

  00244	0f b7 d0	 movzx	 edx, ax
  00247	4f		 dec	 edi
  00248	8b 45 ec	 mov	 eax, DWORD PTR _sCoordY$1$[ebp]
  0024b	46		 inc	 esi
  0024c	40		 inc	 eax
  0024d	89 55 08	 mov	 DWORD PTR _usY$1$[ebp], edx
  00250	49		 dec	 ecx
  00251	0f b7 d0	 movzx	 edx, ax
  00254	3b f7		 cmp	 esi, edi
  00256	0f b7 c1	 movzx	 eax, cx
  00259	0f 4d d0	 cmovge	 edx, eax
  0025c	0f bf d2	 movsx	 edx, dx
  0025f	89 55 dc	 mov	 DWORD PTR $T1[ebp], edx
  00262	8b 4d 08	 mov	 ecx, DWORD PTR _usY$1$[ebp]
  00265	0f b7 c1	 movzx	 eax, cx
  00268	3b c2		 cmp	 eax, edx
  0026a	7f 52		 jg	 SHORT $LN3@Update
  0026c	8b 45 f0	 mov	 eax, DWORD PTR tv716[ebp]
  0026f	0f bf d0	 movsx	 edx, ax
$LL4@Update:

; 98   : 		{
; 99   : 			for (WORD usX = sReferenceCoordMinX; usX <= sReferenceCoordMaxX; ++usX)

  00272	8b 45 e0	 mov	 eax, DWORD PTR tv718[ebp]
  00275	0f b7 f0	 movzx	 esi, ax
  00278	3b f2		 cmp	 esi, edx
  0027a	7f 36		 jg	 SHORT $LN2@Update
  0027c	8b 7d fc	 mov	 edi, DWORD PTR _this$1$[ebp]
  0027f	90		 npad	 1
$LL7@Update:

; 100  : 			{
; 101  : 				LoadTerrain(usX, usY, wCellCoordX, wCellCoordY);

  00280	ff 75 10	 push	 DWORD PTR _wCellCoordY$1$[ebp]
  00283	8b 07		 mov	 eax, DWORD PTR [edi]
  00285	ff 75 f4	 push	 DWORD PTR _wCellCoordX$1$[ebp]
  00288	51		 push	 ecx
  00289	56		 push	 esi
  0028a	8b cf		 mov	 ecx, edi
  0028c	ff 50 44	 call	 DWORD PTR [eax+68]

; 102  :   				LoadArea(usX, usY, wCellCoordX, wCellCoordY);

  0028f	ff 75 10	 push	 DWORD PTR _wCellCoordY$1$[ebp]
  00292	8b 55 08	 mov	 edx, DWORD PTR _usY$1$[ebp]
  00295	8b cf		 mov	 ecx, edi
  00297	ff 75 f4	 push	 DWORD PTR _wCellCoordX$1$[ebp]
  0029a	8b 07		 mov	 eax, DWORD PTR [edi]
  0029c	52		 push	 edx
  0029d	56		 push	 esi
  0029e	ff 50 48	 call	 DWORD PTR [eax+72]
  002a1	8b 4d f0	 mov	 ecx, DWORD PTR tv716[ebp]
  002a4	46		 inc	 esi
  002a5	0f bf d1	 movsx	 edx, cx
  002a8	8b 4d 08	 mov	 ecx, DWORD PTR _usY$1$[ebp]
  002ab	0f b7 c6	 movzx	 eax, si
  002ae	3b c2		 cmp	 eax, edx
  002b0	7e ce		 jle	 SHORT $LL7@Update
$LN2@Update:

; 96   : 
; 97   : 		for (WORD usY = sReferenceCoordMinY; usY <=sReferenceCoordMaxY; ++usY)

  002b2	41		 inc	 ecx
  002b3	0f b7 c1	 movzx	 eax, cx
  002b6	89 4d 08	 mov	 DWORD PTR _usY$1$[ebp], ecx
  002b9	3b 45 dc	 cmp	 eax, DWORD PTR $T1[ebp]
  002bc	7e b4		 jle	 SHORT $LL4@Update
$LN3@Update:

; 103  : 			}
; 104  : 		}
; 105  : 
; 106  : 		AssignTerrainPtr();

  002be	8b 7d fc	 mov	 edi, DWORD PTR _this$1$[ebp]
  002c1	8b cf		 mov	 ecx, edi
  002c3	e8 00 00 00 00	 call	 ?AssignTerrainPtr@CMapOutdoor@@IAEXXZ ; CMapOutdoor::AssignTerrainPtr

; 107  : 		m_lOldReadX = -1;

  002c8	c7 87 0c 01 00
	00 ff ff ff ff	 mov	 DWORD PTR [edi+268], -1

; 108  : 
; 109  : 		Tracenf("Update::Load spent %d ms\n", ELTimer_GetMSec() - t1);

  002d2	e8 00 00 00 00	 call	 ?ELTimer_GetMSec@@YAKXZ	; ELTimer_GetMSec
  002d7	2b 45 d8	 sub	 eax, DWORD PTR _t1$1$[ebp]
  002da	50		 push	 eax
  002db	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@IDOOHDBC@Update?3?3Load?5spent?5?$CFd?5ms?6@
  002e0	e8 00 00 00 00	 call	 ?Tracenf@@YAXPBDZZ	; Tracenf
  002e5	83 c4 08	 add	 esp, 8
$LN9@Update:

; 114  : 	CSpeedTreeForestDirectX8::Instance().UpdateSystem(CTimer::Instance().GetCurrentSecond());

  002e8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
; File C:\Marty 5.5\Src-Client\Client\eterBase\Singleton.h

; 27   : 		return (*ms_singleton);

  002ee	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ms_singleton@?$CSingleton@VCSpeedTreeForestDirectX8@@@@0PAVCSpeedTreeForestDirectX8@@A ; CSingleton<CSpeedTreeForestDirectX8>::ms_singleton
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp

; 114  : 	CSpeedTreeForestDirectX8::Instance().UpdateSystem(CTimer::Instance().GetCurrentSecond());

  002f4	e8 00 00 00 00	 call	 ?GetCurrentSecond@CTimer@@QAEMXZ ; CTimer::GetCurrentSecond
  002f9	51		 push	 ecx
  002fa	8b ce		 mov	 ecx, esi
  002fc	d9 1c 24	 fstp	 DWORD PTR [esp]
  002ff	e8 00 00 00 00	 call	 ?UpdateSystem@CSpeedTreeForest@@QAEXM@Z ; CSpeedTreeForest::UpdateSystem

; 115  : #ifdef __PERFORMANCE_CHECKER__
; 116  : 	DWORD t4=ELTimer_GetMSec();
; 117  : #endif
; 118  : 	__UpdateGarvage();

  00304	8b 07		 mov	 eax, DWORD PTR [edi]
  00306	8b cf		 mov	 ecx, edi
  00308	ff 50 40	 call	 DWORD PTR [eax+64]

; 119  : #ifdef __PERFORMANCE_CHECKER__
; 120  : 	DWORD t5=ELTimer_GetMSec();
; 121  : #endif
; 122  : 	UpdateTerrain(fX, fY);

  0030b	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _fY$1$[ebp]
  00310	83 ec 08	 sub	 esp, 8
  00313	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _v3Player$[ebp]
  00318	8b cf		 mov	 ecx, edi
  0031a	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  00320	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00325	e8 00 00 00 00	 call	 ?UpdateTerrain@CMapOutdoor@@IAEXMM@Z ; CMapOutdoor::UpdateTerrain

; 123  : #ifdef __PERFORMANCE_CHECKER__
; 124  : 	DWORD t6=ELTimer_GetMSec();
; 125  : #endif
; 126  : 	__UpdateArea(v3Player);

  0032a	8d 45 cc	 lea	 eax, DWORD PTR _v3Player$[ebp]
  0032d	8b cf		 mov	 ecx, edi
  0032f	50		 push	 eax
  00330	e8 00 00 00 00	 call	 ?__UpdateArea@CMapOutdoor@@IAEXAAUD3DXVECTOR3@@@Z ; CMapOutdoor::__UpdateArea

; 127  : #ifdef __PERFORMANCE_CHECKER__
; 128  : 	DWORD t7=ELTimer_GetMSec();
; 129  : #endif
; 130  : 	UpdateSky();

  00335	8b cf		 mov	 ecx, edi
  00337	e8 00 00 00 00	 call	 ?UpdateSky@CMapOutdoor@@QAEXXZ ; CMapOutdoor::UpdateSky

; 131  : #ifdef __PERFORMANCE_CHECKER__
; 132  : 	DWORD t8=ELTimer_GetMSec();
; 133  : #endif
; 134  : 	__HeightCache_Update();

  0033c	8b cf		 mov	 ecx, edi
  0033e	e8 00 00 00 00	 call	 ?__HeightCache_Update@CMapOutdoor@@AAEXXZ ; CMapOutdoor::__HeightCache_Update

; 135  : 
; 136  : #ifdef __PERFORMANCE_CHECKER__
; 137  : 	{
; 138  : 		static FILE* fp=fopen("perf_outdoor_update.txt", "w");
; 139  : 
; 140  : 		if (t8-t1>5)
; 141  : 		{
; 142  : 			fprintf(fp, "OD.Total %d (Time %f)\n", t3-t1, ELTimer_GetMSec()/1000.0f);
; 143  : 			fprintf(fp, "OD.INIT %d\n", t2-t1);
; 144  : 			fprintf(fp, "OD.LOAD %d\n", t3-t2);
; 145  : 			fprintf(fp, "OD.TREE %d\n", t4-t3);
; 146  : 			fprintf(fp, "OD.GVG %d\n", t5-t4);
; 147  : 			fprintf(fp, "OD.TRN %d\n", t6-t5);
; 148  : 			fprintf(fp, "OD.AREA %d\n", t7-t6);
; 149  : 			fprintf(fp, "OD.SKY %d\n", t8-t7);
; 150  : 			fflush(fp);
; 151  : 		}
; 152  : 	}
; 153  : #endif
; 154  : 
; 155  : 	return true;

  00343	5f		 pop	 edi
  00344	b0 01		 mov	 al, 1
  00346	5e		 pop	 esi

; 156  : }

  00347	8b e5		 mov	 esp, ebp
  00349	5d		 pop	 ebp
  0034a	c2 0c 00	 ret	 12			; 0000000cH
?Update@CMapOutdoor@@UAE_NMMM@Z ENDP			; CMapOutdoor::Update
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@CAXXZ PROC ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::_Xlength, COMDAT

; 2138 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@CAXXZ ENDP ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?push_back@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@QAEXABQAVCGraphicObjectInstance@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@QAEXABQAVCGraphicObjectInstance@@@Z PROC ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::push_back, COMDAT
; _this$ = ecx

; 872  :     _CONSTEXPR20 void push_back(const _Ty& _Val) { // insert element at end, provide strong guarantee

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 781  :         if (_Mylast != _My_data._Myend) {

  00003	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00006	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00009	74 0f		 je	 SHORT $LN4@push_back

; 797  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  0000b	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  0000e	8b 00		 mov	 eax, DWORD PTR [eax]
  00010	89 02		 mov	 DWORD PTR [edx], eax

; 798  :         } else {
; 799  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 800  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 801  :             _ASAN_VECTOR_RELEASE_GUARD;
; 802  :         }
; 803  : 
; 804  :         _Orphan_range(_Mylast, _Mylast);
; 805  :         _Ty& _Result = *_Mylast;
; 806  :         ++_Mylast;

  00012	83 41 04 04	 add	 DWORD PTR [ecx+4], 4

; 873  :         _Emplace_one_at_back(_Val);
; 874  :     }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN4@push_back:

; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0001a	ff 75 08	 push	 DWORD PTR __Val$[ebp]
  0001d	52		 push	 edx
  0001e	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicObjectInstance@@@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@AAEPAPAVCGraphicObjectInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::_Emplace_reallocate<CGraphicObjectInstance * const &>

; 873  :         _Emplace_one_at_back(_Val);
; 874  :     }

  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
?push_back@?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@QAEXABQAVCGraphicObjectInstance@@@Z ENDP ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::push_back
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??1?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@QAE@XZ PROC ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::~vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >, COMDAT
; _this$ = ecx

; 766  :     _CONSTEXPR20 ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	85 c0		 test	 eax, eax
  00007	74 40		 je	 SHORT $LN4@vector

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0000c	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000e	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00011	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00017	72 12		 jb	 SHORT $LN20@vector

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00019	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0001c	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0001f	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00021	83 c0 fc	 add	 eax, -4			; fffffffcH
  00024	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00027	77 22		 ja	 SHORT $LN17@vector

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00029	8b c2		 mov	 eax, edx
$LN20@vector:

; 265  :         ::operator delete(_Ptr, _Bytes);

  0002b	51		 push	 ecx
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

  00032	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

  00038	83 c4 08	 add	 esp, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2050 :             _Mylast  = nullptr;

  0003b	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 2051 :             _Myend   = nullptr;

  00042	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@vector:
  00049	5e		 pop	 esi

; 772  :     }

  0004a	c3		 ret	 0
$LN17@vector:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004b	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN28@vector:
  00050	cc		 int	 3
??1?$vector@PAVCGraphicObjectInstance@@V?$allocator@PAVCGraphicObjectInstance@@@std@@@std@@QAE@XZ ENDP ; std::vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >::~vector<CGraphicObjectInstance *,std::allocator<CGraphicObjectInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GSpherePackCallback@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSpherePackCallback@@UAEPAXI@Z PROC			; SpherePackCallback::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SpherePackCallback@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 04		 push	 4
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_GSpherePackCallback@@UAEPAXI@Z ENDP			; SpherePackCallback::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\SphereLib\spherepack.h
;	COMDAT ?PointTest2dCallback@SpherePackCallback@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z
_TEXT	SEGMENT
_searchpos$ = 8						; size = 4
_sphere$ = 12						; size = 4
_state$ = 16						; size = 4
?PointTest2dCallback@SpherePackCallback@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z PROC ; SpherePackCallback::PointTest2dCallback, COMDAT
; _this$ = ecx

; 79   : 	{};

  00000	c2 0c 00	 ret	 12			; 0000000cH
?PointTest2dCallback@SpherePackCallback@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z ENDP ; SpherePackCallback::PointTest2dCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\SphereLib\spherepack.h
;	COMDAT ?RangeTestCallback@SpherePackCallback@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z
_TEXT	SEGMENT
_searchpos$ = 8						; size = 4
_distance$ = 12						; size = 4
_sphere$ = 16						; size = 4
_state$ = 20						; size = 4
?RangeTestCallback@SpherePackCallback@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z PROC ; SpherePackCallback::RangeTestCallback, COMDAT
; _this$ = ecx

; 74   : 	{};

  00000	c2 10 00	 ret	 16			; 00000010H
?RangeTestCallback@SpherePackCallback@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z ENDP ; SpherePackCallback::RangeTestCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\SphereLib\spherepack.h
;	COMDAT ?RayTraceCallback@SpherePackCallback@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z
_TEXT	SEGMENT
_p1$ = 8						; size = 4
_dir$ = 12						; size = 4
_distance$ = 16						; size = 4
_sect$ = 20						; size = 4
_sphere$ = 24						; size = 4
?RayTraceCallback@SpherePackCallback@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z PROC ; SpherePackCallback::RayTraceCallback, COMDAT
; _this$ = ecx

; 68   : 	{};

  00000	c2 14 00	 ret	 20			; 00000014H
?RayTraceCallback@SpherePackCallback@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z ENDP ; SpherePackCallback::RayTraceCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\SphereLib\spherepack.h
;	COMDAT ?VisibilityCallback@SpherePackCallback@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
_sphere$ = 12						; size = 4
_state$ = 16						; size = 4
?VisibilityCallback@SpherePackCallback@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z PROC ; SpherePackCallback::VisibilityCallback, COMDAT
; _this$ = ecx

; 61   : 	{};

  00000	c2 0c 00	 ret	 12			; 0000000cH
?VisibilityCallback@SpherePackCallback@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z ENDP ; SpherePackCallback::VisibilityCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\SphereLib\spherepack.h
;	COMDAT ??1SpherePackCallback@@UAE@XZ
_TEXT	SEGMENT
??1SpherePackCallback@@UAE@XZ PROC			; SpherePackCallback::~SpherePackCallback, COMDAT
; _this$ = ecx

; 56   : 	virtual ~SpherePackCallback() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SpherePackCallback@@6B@
  00006	c3		 ret	 0
??1SpherePackCallback@@UAE@XZ ENDP			; SpherePackCallback::~SpherePackCallback
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 137  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 138  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 139  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 140  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 87   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 141  :         _Throw_bad_array_new_length(); // add overflow
; 142  :     }
; 143  : 
; 144  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 87   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 146  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 147  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 148  : 
; 149  : #ifdef _DEBUG
; 150  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 151  : #endif // _DEBUG
; 152  :     return _Ptr;
; 153  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0CDynamicSphereInstance@@QAE@XZ
_TEXT	SEGMENT
??0CDynamicSphereInstance@@QAE@XZ PROC			; CDynamicSphereInstance::CDynamicSphereInstance, COMDAT
; _this$ = ecx
  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0CDynamicSphereInstance@@QAE@XZ ENDP			; CDynamicSphereInstance::CDynamicSphereInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 331  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 332  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorUpdate.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END

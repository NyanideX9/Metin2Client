; Listing generated by Microsoft (R) Optimizing Compiler Version 19.37.32822.0 

	TITLE	C:\Marty 5.5\Src-Client\Client\GameLib\Distribute\MapOutdoorRenderSTP.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
?_Fake_alloc@std@@3U_Fake_allocator@1@B	ORG $+1		; std::_Fake_alloc
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??0D3DXVECTOR4@@QAE@XZ				; D3DXVECTOR4::D3DXVECTOR4
PUBLIC	??0D3DXMATRIX@@QAE@XZ				; D3DXMATRIX::D3DXMATRIX
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ ; std::vector<int,std::allocator<int> >::_Xlength
PUBLIC	?__RenderTerrain_RenderSoftwareTransformPatch@CMapOutdoor@@IAEXXZ ; CMapOutdoor::__RenderTerrain_RenderSoftwareTransformPatch
PUBLIC	??0SoftwareTransformPatch_STVertex@CMapOutdoor@@QAE@XZ ; CMapOutdoor::SoftwareTransformPatch_STVertex::SoftwareTransformPatch_STVertex
PUBLIC	??0SoftwareTransformPatch_STLVertex@CMapOutdoor@@QAE@XZ ; CMapOutdoor::SoftwareTransformPatch_STLVertex::SoftwareTransformPatch_STLVertex
PUBLIC	?__SoftwareTransformPatch_ApplyRenderState@CMapOutdoor@@IAEXXZ ; CMapOutdoor::__SoftwareTransformPatch_ApplyRenderState
PUBLIC	?__SoftwareTransformPatch_RestoreRenderState@CMapOutdoor@@IAEXK@Z ; CMapOutdoor::__SoftwareTransformPatch_RestoreRenderState
PUBLIC	?__SoftwareTransformPatch_Initialize@CMapOutdoor@@IAEXXZ ; CMapOutdoor::__SoftwareTransformPatch_Initialize
PUBLIC	?__SoftwareTransformPatch_Create@CMapOutdoor@@IAE_NXZ ; CMapOutdoor::__SoftwareTransformPatch_Create
PUBLIC	?__SoftwareTransformPatch_Destroy@CMapOutdoor@@IAEXXZ ; CMapOutdoor::__SoftwareTransformPatch_Destroy
PUBLIC	?__SoftwareTransformPatch_BuildPipeline@CMapOutdoor@@IAEXAAUSoftwareTransformPatch_SRenderState@1@@Z ; CMapOutdoor::__SoftwareTransformPatch_BuildPipeline
PUBLIC	?__SoftwareTransformPatch_SetTransform@CMapOutdoor@@IAE_NAAUSoftwareTransformPatch_SRenderState@1@PAUSoftwareTransformPatch_STLVertex@1@AAVCTerrainPatchProxy@@II_N3@Z ; CMapOutdoor::__SoftwareTransformPatch_SetTransform
PUBLIC	?__SoftwareTransformPatch_SetSplatStream@CMapOutdoor@@IAE_NPAUSoftwareTransformPatch_STLVertex@1@@Z ; CMapOutdoor::__SoftwareTransformPatch_SetSplatStream
PUBLIC	?__SoftwareTransformPatch_SetShadowStream@CMapOutdoor@@IAE_NPAUSoftwareTransformPatch_STLVertex@1@@Z ; CMapOutdoor::__SoftwareTransformPatch_SetShadowStream
PUBLIC	?__SoftwareTransformPatch_ApplyStaticShadowRenderState@CMapOutdoor@@IAEXXZ ; CMapOutdoor::__SoftwareTransformPatch_ApplyStaticShadowRenderState
PUBLIC	?__SoftwareTransformPatch_RestoreStaticShadowRenderState@CMapOutdoor@@IAEXXZ ; CMapOutdoor::__SoftwareTransformPatch_RestoreStaticShadowRenderState
PUBLIC	?__SoftwareTransformPatch_ApplyFogShadowRenderState@CMapOutdoor@@IAEXXZ ; CMapOutdoor::__SoftwareTransformPatch_ApplyFogShadowRenderState
PUBLIC	?__SoftwareTransformPatch_RestoreFogShadowRenderState@CMapOutdoor@@IAEXXZ ; CMapOutdoor::__SoftwareTransformPatch_RestoreFogShadowRenderState
PUBLIC	?__SoftwareTransformPatch_ApplyDynamicShadowRenderState@CMapOutdoor@@IAEXXZ ; CMapOutdoor::__SoftwareTransformPatch_ApplyDynamicShadowRenderState
PUBLIC	?__SoftwareTransformPatch_RestoreDynamicShadowRenderState@CMapOutdoor@@IAEXXZ ; CMapOutdoor::__SoftwareTransformPatch_RestoreDynamicShadowRenderState
PUBLIC	?__SoftwareTransformPatch_RenderPatchSplat@CMapOutdoor@@IAEXAAUSoftwareTransformPatch_SRenderState@1@JGW4_D3DPRIMITIVETYPE@@_N@Z ; CMapOutdoor::__SoftwareTransformPatch_RenderPatchSplat
PUBLIC	?__SoftwareTransformPatch_RenderPatchNone@CMapOutdoor@@IAEXAAUSoftwareTransformPatch_SRenderState@1@JGW4_D3DPRIMITIVETYPE@@@Z ; CMapOutdoor::__SoftwareTransformPatch_RenderPatchNone
PUBLIC	??$upper_bound@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@MJ@std@@@std@@@std@@@std@@U?$pair@MJ@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@MJ@std@@@std@@@std@@@0@V10@0ABU?$pair@MJ@0@@Z ; std::upper_bound<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::pair<float,long> > > >,std::pair<float,long> >
PUBLIC	??$_Emplace_reallocate@H@?$vector@HV?$allocator@H@std@@@std@@AAEPAHQAH$$QAH@Z ; std::vector<int,std::allocator<int> >::_Emplace_reallocate<int>
PUBLIC	??$__std_find_trivial@HH@@YAPAHPAH0H@Z		; __std_find_trivial<int,int>
PUBLIC	??$_Sort_unchecked@PAHU?$less@X@std@@@std@@YAXPAH0HU?$less@X@0@@Z ; std::_Sort_unchecked<int *,std::less<void> >
PUBLIC	??$_Partition_by_median_guess_unchecked@PAHU?$less@X@std@@@std@@YA?AU?$pair@PAHPAH@0@PAH0U?$less@X@0@@Z ; std::_Partition_by_median_guess_unchecked<int *,std::less<void> >
PUBLIC	??$_Copy_memmove@PAHPAH@std@@YAPAHPAH00@Z	; std::_Copy_memmove<int *,int *>
PUBLIC	??$_Pop_heap_hole_by_index@PAHHU?$less@X@std@@@std@@YAXPAHHH$$QAHU?$less@X@0@@Z ; std::_Pop_heap_hole_by_index<int *,int,std::less<void> >
PUBLIC	??$_Guess_median_unchecked@PAHU?$less@X@std@@@std@@YAXPAH00U?$less@X@0@@Z ; std::_Guess_median_unchecked<int *,std::less<void> >
PUBLIC	??$_Copy_backward_memmove@PAHPAH@std@@YAPAHPAH00@Z ; std::_Copy_backward_memmove<int *,int *>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	__real@3acccccd
PUBLIC	__real@3e000000
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@4144ec4c
PUBLIC	__real@437f0000
PUBLIC	__real@44480000
PUBLIC	__real@45480000
PUBLIC	__real@461c4000
PUBLIC	__real@bacccccd
PUBLIC	__xmm@41f00000000000000000000000000000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	_D3DXVec3Transform@12:PROC
EXTRN	_D3DXVec3TransformCoord@12:PROC
EXTRN	_D3DXMatrixMultiply@12:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	___std_find_trivial_4@12:PROC
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?GetBackBufferSize@CGraphicBase@@SAXPAI0@Z:PROC	; CGraphicBase::GetBackBufferSize
EXTRN	?IsTLVertexClipping@CGraphicBase@@SA_NXZ:PROC	; CGraphicBase::IsTLVertexClipping
EXTRN	?IsFastTNL@CGraphicBase@@SA_NXZ:PROC		; CGraphicBase::IsFastTNL
EXTRN	?GetFogNearDistance@SEnvironmentData@@QBEMXZ:PROC ; SEnvironmentData::GetFogNearDistance
EXTRN	?GetFogFarDistance@SEnvironmentData@@QBEMXZ:PROC ; SEnvironmentData::GetFogFarDistance
EXTRN	?GetTextureCount@CTextureSet@@QAEKXZ:PROC	; CTextureSet::GetTextureCount
EXTRN	?GetTexture@CTextureSet@@QAEAAUSTerrainTexture@@K@Z:PROC ; CTextureSet::GetTexture
EXTRN	?IsIn@CTerrainPatchProxy@@QAE_NABUD3DXVECTOR3@@M@Z:PROC ; CTerrainPatchProxy::IsIn
EXTRN	?SoftwareTransformPatch_GetTerrainVertexDataPtr@CTerrainPatchProxy@@QAEPAUSoftwareTransformPatch_SSourceVertex@@XZ:PROC ; CTerrainPatchProxy::SoftwareTransformPatch_GetTerrainVertexDataPtr
EXTRN	?SoftwareTransformPatch_UpdateTerrainLighting@CTerrainPatchProxy@@QAEXKABU_D3DLIGHT8@@ABU_D3DMATERIAL8@@@Z:PROC ; CTerrainPatchProxy::SoftwareTransformPatch_UpdateTerrainLighting
EXTRN	?GetTerrainPointer@CMapOutdoor@@QAEHEPAPAVCTerrain@@@Z:PROC ; CMapOutdoor::GetTerrainPointer
EXTRN	?SelectIndexBuffer@CMapOutdoor@@IAEXEPAGPAW4_D3DPRIMITIVETYPE@@@Z:PROC ; CMapOutdoor::SelectIndexBuffer
EXTRN	?__GetNoFogDistance@CMapOutdoor@@IAEMXZ:PROC	; CMapOutdoor::__GetNoFogDistance
EXTRN	?__GetFogDistance@CMapOutdoor@@IAEMXZ:PROC	; CMapOutdoor::__GetFogDistance
EXTRN	?GetMaterial@CStateManager@@QAEXPAU_D3DMATERIAL8@@@Z:PROC ; CStateManager::GetMaterial
EXTRN	?GetLight@CStateManager@@QAEXKPAU_D3DLIGHT8@@@Z:PROC ; CStateManager::GetLight
EXTRN	?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; CStateManager::SaveRenderState
EXTRN	?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z:PROC ; CStateManager::RestoreRenderState
EXTRN	?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; CStateManager::SetRenderState
EXTRN	?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z:PROC ; CStateManager::SetTexture
EXTRN	?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z:PROC ; CStateManager::SetTextureStageState
EXTRN	?SetBestFiltering@CStateManager@@QAEXK@Z:PROC	; CStateManager::SetBestFiltering
EXTRN	?SetVertexShader@CStateManager@@QAEXK@Z:PROC	; CStateManager::SetVertexShader
EXTRN	?SetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z:PROC ; CStateManager::SetTransform
EXTRN	?GetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PAU_D3DMATRIX@@@Z:PROC ; CStateManager::GetTransform
EXTRN	?SetStreamSource@CStateManager@@QAEXIPAUIDirect3DVertexBuffer8@@I@Z:PROC ; CStateManager::SetStreamSource
EXTRN	?DrawIndexedPrimitive@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IIII@Z:PROC ; CStateManager::DrawIndexedPrimitive
EXTRN	?GetRenderState@CStateManager@@QAEKW4_D3DRENDERSTATETYPE@@@Z:PROC ; CStateManager::GetRenderState
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	__chkstk:PROC
EXTRN	__ftol3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A:DWORD ; CGraphicBase::ms_lpd3dDevice
EXTRN	?ms_faceCount@CGraphicBase@@1KA:DWORD		; CGraphicBase::ms_faceCount
EXTRN	?ms_bSelfShadowOn@CSpeedTreeWrapper@@2_NA:BYTE	; CSpeedTreeWrapper::ms_bSelfShadowOn
EXTRN	?ms_pTextureSet@CTerrainImpl@@1PAVCTextureSet@@A:DWORD ; CTerrainImpl::ms_pTextureSet
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A DD 01H DUP (?) ; CSingleton<CStateManager>::ms_singleton
_BSS	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@bacccccd
CONST	SEGMENT
__real@bacccccd DD 0bacccccdr			; -0.0015625
CONST	ENDS
;	COMDAT __real@461c4000
CONST	SEGMENT
__real@461c4000 DD 0461c4000r			; 10000
CONST	ENDS
;	COMDAT __real@45480000
CONST	SEGMENT
__real@45480000 DD 045480000r			; 3200
CONST	ENDS
;	COMDAT __real@44480000
CONST	SEGMENT
__real@44480000 DD 044480000r			; 800
CONST	ENDS
;	COMDAT __real@437f0000
CONST	SEGMENT
__real@437f0000 DD 0437f0000r			; 255
CONST	ENDS
;	COMDAT __real@4144ec4c
CONST	SEGMENT
__real@4144ec4c DD 04144ec4cr			; 12.3077
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3e000000
CONST	SEGMENT
__real@3e000000 DD 03e000000r			; 0.125
CONST	ENDS
;	COMDAT __real@3acccccd
CONST	SEGMENT
__real@3acccccd DD 03acccccdr			; 0.0015625
CONST	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Copy_backward_memmove@PAHPAH@std@@YAPAHPAH00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_backward_memmove@PAHPAH@std@@YAPAHPAH00@Z PROC	; std::_Copy_backward_memmove<int *,int *>, COMDAT

; 4833 : _CtgIt2 _Copy_backward_memmove(_CtgIt1 _First, _CtgIt1 _Last, _CtgIt2 _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4834 :     // implement copy_backward-like function as memmove
; 4835 :     auto _FirstPtr              = _To_address(_First);
; 4836 :     auto _LastPtr               = _To_address(_Last);
; 4837 :     auto _DestPtr               = _To_address(_Dest);
; 4838 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4839 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4840 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4841 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	2b c8		 sub	 ecx, eax

; 4842 :     auto _Result                = _CSTD memmove(_Dest_ch - _Count, _First_ch, _Count);

  0000b	51		 push	 ecx
  0000c	50		 push	 eax
  0000d	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00010	2b c1		 sub	 eax, ecx
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4843 :     if constexpr (is_pointer_v<_CtgIt2>) {
; 4844 :         return static_cast<_CtgIt2>(_Result);
; 4845 :     } else {
; 4846 :         return _Dest - (_LastPtr - _FirstPtr);
; 4847 :     }
; 4848 : }

  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
??$_Copy_backward_memmove@PAHPAH@std@@YAPAHPAH00@Z ENDP	; std::_Copy_backward_memmove<int *,int *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Guess_median_unchecked@PAHU?$less@X@std@@@std@@YAXPAH00U?$less@X@0@@Z
_TEXT	SEGMENT
tv599 = -4						; size = 4
tv598 = 8						; size = 4
tv571 = 8						; size = 4
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
tv572 = 16						; size = 4
__Last$ = 16						; size = 4
__Pred$ = 20						; size = 1
??$_Guess_median_unchecked@PAHU?$less@X@std@@@std@@YAXPAH00U?$less@X@0@@Z PROC ; std::_Guess_median_unchecked<int *,std::less<void> >, COMDAT

; 7945 : _CONSTEXPR20 void _Guess_median_unchecked(_RanIt _First, _RanIt _Mid, _RanIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 7946 :     // sort median element to middle
; 7947 :     using _Diff        = _Iter_diff_t<_RanIt>;
; 7948 :     const _Diff _Count = _Last - _First;

  00004	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00007	56		 push	 esi
  00008	8b 75 10	 mov	 esi, DWORD PTR __Last$[ebp]
  0000b	8b c6		 mov	 eax, esi
  0000d	2b c1		 sub	 eax, ecx
  0000f	c1 f8 02	 sar	 eax, 2
  00012	57		 push	 edi

; 7949 :     if (40 < _Count) { // Tukey's ninther

  00013	8b 39		 mov	 edi, DWORD PTR [ecx]
  00015	83 f8 28	 cmp	 eax, 40			; 00000028H
  00018	0f 8e dc 00 00
	00		 jle	 $LN2@Guess_medi

; 7950 :         const _Diff _Step     = (_Count + 1) >> 3; // +1 can't overflow because range was made inclusive in caller

  0001e	40		 inc	 eax
  0001f	c1 f8 03	 sar	 eax, 3
  00022	53		 push	 ebx

; 7952 :         _Med3_unchecked(_First, _First + _Step, _First + _Two_step, _Pred);

  00023	8d 14 c5 00 00
	00 00		 lea	 edx, DWORD PTR [eax*8]
  0002a	8d 1c 85 00 00
	00 00		 lea	 ebx, DWORD PTR [eax*4]
  00031	89 55 fc	 mov	 DWORD PTR tv599[ebp], edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2475 :         return static_cast<_Ty1&&>(_Left) < static_cast<_Ty2&&>(_Right);

  00034	8b 04 0b	 mov	 eax, DWORD PTR [ebx+ecx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7952 :         _Med3_unchecked(_First, _First + _Step, _First + _Two_step, _Pred);

  00037	8d 14 0b	 lea	 edx, DWORD PTR [ebx+ecx]
  0003a	89 5d 08	 mov	 DWORD PTR tv598[ebp], ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2475 :         return static_cast<_Ty1&&>(_Left) < static_cast<_Ty2&&>(_Right);

  0003d	3b c7		 cmp	 eax, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7931 :     if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  0003f	7d 04		 jge	 SHORT $LN13@Guess_medi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

  00041	89 3a		 mov	 DWORD PTR [edx], edi

; 101  :     _Right   = _STD move(_Tmp);

  00043	89 01		 mov	 DWORD PTR [ecx], eax
$LN13@Guess_medi:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2475 :         return static_cast<_Ty1&&>(_Left) < static_cast<_Ty2&&>(_Right);

  00045	8b 45 fc	 mov	 eax, DWORD PTR tv599[ebp]
  00048	8b 3a		 mov	 edi, DWORD PTR [edx]
  0004a	8b 04 08	 mov	 eax, DWORD PTR [eax+ecx]
  0004d	3b c7		 cmp	 eax, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7935 :     if (_DEBUG_LT_PRED(_Pred, *_Last, *_Mid)) { // swap middle and last, then test first again

  0004f	7d 15		 jge	 SHORT $LN21@Guess_medi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

  00051	8b 75 fc	 mov	 esi, DWORD PTR tv599[ebp]
  00054	89 3c 0e	 mov	 DWORD PTR [esi+ecx], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7938 :         if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  00057	8b 75 10	 mov	 esi, DWORD PTR __Last$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 101  :     _Right   = _STD move(_Tmp);

  0005a	89 02		 mov	 DWORD PTR [edx], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2475 :         return static_cast<_Ty1&&>(_Left) < static_cast<_Ty2&&>(_Right);

  0005c	8b 39		 mov	 edi, DWORD PTR [ecx]
  0005e	3b c7		 cmp	 eax, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7938 :         if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  00060	7d 04		 jge	 SHORT $LN21@Guess_medi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

  00062	89 3a		 mov	 DWORD PTR [edx], edi

; 101  :     _Right   = _STD move(_Tmp);

  00064	89 01		 mov	 DWORD PTR [ecx], eax
$LN21@Guess_medi:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7953 :         _Med3_unchecked(_Mid - _Step, _Mid, _Mid + _Step, _Pred);

  00066	8b 45 0c	 mov	 eax, DWORD PTR __Mid$[ebp]
  00069	8b c8		 mov	 ecx, eax
  0006b	2b cb		 sub	 ecx, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2475 :         return static_cast<_Ty1&&>(_Left) < static_cast<_Ty2&&>(_Right);

  0006d	8b 38		 mov	 edi, DWORD PTR [eax]
  0006f	8b 19		 mov	 ebx, DWORD PTR [ecx]
  00071	3b fb		 cmp	 edi, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7931 :     if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  00073	7d 04		 jge	 SHORT $LN30@Guess_medi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

  00075	89 18		 mov	 DWORD PTR [eax], ebx

; 101  :     _Right   = _STD move(_Tmp);

  00077	89 39		 mov	 DWORD PTR [ecx], edi
$LN30@Guess_medi:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2475 :         return static_cast<_Ty1&&>(_Left) < static_cast<_Ty2&&>(_Right);

  00079	8b 5d 08	 mov	 ebx, DWORD PTR tv598[ebp]
  0007c	8b 3c 03	 mov	 edi, DWORD PTR [ebx+eax]
  0007f	8b 18		 mov	 ebx, DWORD PTR [eax]
  00081	3b fb		 cmp	 edi, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7935 :     if (_DEBUG_LT_PRED(_Pred, *_Last, *_Mid)) { // swap middle and last, then test first again

  00083	7d 15		 jge	 SHORT $LN38@Guess_medi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

  00085	8b 75 08	 mov	 esi, DWORD PTR tv598[ebp]
  00088	89 1c 06	 mov	 DWORD PTR [esi+eax], ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7938 :         if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  0008b	8b 75 10	 mov	 esi, DWORD PTR __Last$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 101  :     _Right   = _STD move(_Tmp);

  0008e	89 38		 mov	 DWORD PTR [eax], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2475 :         return static_cast<_Ty1&&>(_Left) < static_cast<_Ty2&&>(_Right);

  00090	8b 19		 mov	 ebx, DWORD PTR [ecx]
  00092	3b fb		 cmp	 edi, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7938 :         if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  00094	7d 04		 jge	 SHORT $LN38@Guess_medi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

  00096	89 18		 mov	 DWORD PTR [eax], ebx

; 101  :     _Right   = _STD move(_Tmp);

  00098	89 39		 mov	 DWORD PTR [ecx], edi
$LN38@Guess_medi:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7954 :         _Med3_unchecked(_Last - _Two_step, _Last - _Step, _Last, _Pred);

  0009a	8b ce		 mov	 ecx, esi
  0009c	8b fe		 mov	 edi, esi
  0009e	2b 4d 08	 sub	 ecx, DWORD PTR tv598[ebp]
  000a1	2b 7d fc	 sub	 edi, DWORD PTR tv599[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2475 :         return static_cast<_Ty1&&>(_Left) < static_cast<_Ty2&&>(_Right);

  000a4	8b 19		 mov	 ebx, DWORD PTR [ecx]
  000a6	8b 07		 mov	 eax, DWORD PTR [edi]
  000a8	3b d8		 cmp	 ebx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7931 :     if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  000aa	7d 09		 jge	 SHORT $LN47@Guess_medi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

  000ac	8b f0		 mov	 esi, eax
  000ae	89 31		 mov	 DWORD PTR [ecx], esi
  000b0	8b 75 10	 mov	 esi, DWORD PTR __Last$[ebp]

; 101  :     _Right   = _STD move(_Tmp);

  000b3	89 1f		 mov	 DWORD PTR [edi], ebx
$LN47@Guess_medi:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2475 :         return static_cast<_Ty1&&>(_Left) < static_cast<_Ty2&&>(_Right);

  000b5	8b 1e		 mov	 ebx, DWORD PTR [esi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7935 :     if (_DEBUG_LT_PRED(_Pred, *_Last, *_Mid)) { // swap middle and last, then test first again

  000b7	8b 45 0c	 mov	 eax, DWORD PTR __Mid$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2475 :         return static_cast<_Ty1&&>(_Left) < static_cast<_Ty2&&>(_Right);

  000ba	3b 19		 cmp	 ebx, DWORD PTR [ecx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7935 :     if (_DEBUG_LT_PRED(_Pred, *_Last, *_Mid)) { // swap middle and last, then test first again

  000bc	7d 13		 jge	 SHORT $LN55@Guess_medi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

  000be	8b 01		 mov	 eax, DWORD PTR [ecx]
  000c0	89 06		 mov	 DWORD PTR [esi], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7938 :         if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  000c2	8b 45 0c	 mov	 eax, DWORD PTR __Mid$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 101  :     _Right   = _STD move(_Tmp);

  000c5	89 19		 mov	 DWORD PTR [ecx], ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2475 :         return static_cast<_Ty1&&>(_Left) < static_cast<_Ty2&&>(_Right);

  000c7	8b 37		 mov	 esi, DWORD PTR [edi]
  000c9	3b de		 cmp	 ebx, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7938 :         if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  000cb	7d 04		 jge	 SHORT $LN55@Guess_medi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

  000cd	89 31		 mov	 DWORD PTR [ecx], esi

; 101  :     _Right   = _STD move(_Tmp);

  000cf	89 1f		 mov	 DWORD PTR [edi], ebx
$LN55@Guess_medi:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2475 :         return static_cast<_Ty1&&>(_Left) < static_cast<_Ty2&&>(_Right);

  000d1	8b 30		 mov	 esi, DWORD PTR [eax]
  000d3	8b 3a		 mov	 edi, DWORD PTR [edx]
  000d5	5b		 pop	 ebx
  000d6	3b f7		 cmp	 esi, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7931 :     if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  000d8	7d 04		 jge	 SHORT $LN64@Guess_medi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

  000da	89 38		 mov	 DWORD PTR [eax], edi

; 101  :     _Right   = _STD move(_Tmp);

  000dc	89 32		 mov	 DWORD PTR [edx], esi
$LN64@Guess_medi:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2475 :         return static_cast<_Ty1&&>(_Left) < static_cast<_Ty2&&>(_Right);

  000de	8b 31		 mov	 esi, DWORD PTR [ecx]
  000e0	8b 38		 mov	 edi, DWORD PTR [eax]
  000e2	3b f7		 cmp	 esi, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7935 :     if (_DEBUG_LT_PRED(_Pred, *_Last, *_Mid)) { // swap middle and last, then test first again

  000e4	7d 37		 jge	 SHORT $LN89@Guess_medi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

  000e6	89 39		 mov	 DWORD PTR [ecx], edi

; 101  :     _Right   = _STD move(_Tmp);

  000e8	89 30		 mov	 DWORD PTR [eax], esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2475 :         return static_cast<_Ty1&&>(_Left) < static_cast<_Ty2&&>(_Right);

  000ea	8b 0a		 mov	 ecx, DWORD PTR [edx]
  000ec	3b f1		 cmp	 esi, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7938 :         if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  000ee	7d 2d		 jge	 SHORT $LN89@Guess_medi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

  000f0	89 08		 mov	 DWORD PTR [eax], ecx
  000f2	5f		 pop	 edi

; 101  :     _Right   = _STD move(_Tmp);

  000f3	89 32		 mov	 DWORD PTR [edx], esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7959 : }

  000f5	5e		 pop	 esi
  000f6	8b e5		 mov	 esp, ebp
  000f8	5d		 pop	 ebp
  000f9	c3		 ret	 0
$LN2@Guess_medi:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2475 :         return static_cast<_Ty1&&>(_Left) < static_cast<_Ty2&&>(_Right);

  000fa	8b 45 0c	 mov	 eax, DWORD PTR __Mid$[ebp]
  000fd	8b 10		 mov	 edx, DWORD PTR [eax]
  000ff	3b d7		 cmp	 edx, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7931 :     if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  00101	7d 04		 jge	 SHORT $LN81@Guess_medi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

  00103	89 38		 mov	 DWORD PTR [eax], edi

; 101  :     _Right   = _STD move(_Tmp);

  00105	89 11		 mov	 DWORD PTR [ecx], edx
$LN81@Guess_medi:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2475 :         return static_cast<_Ty1&&>(_Left) < static_cast<_Ty2&&>(_Right);

  00107	8b 16		 mov	 edx, DWORD PTR [esi]
  00109	8b 38		 mov	 edi, DWORD PTR [eax]
  0010b	3b d7		 cmp	 edx, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7935 :     if (_DEBUG_LT_PRED(_Pred, *_Last, *_Mid)) { // swap middle and last, then test first again

  0010d	7d 0e		 jge	 SHORT $LN89@Guess_medi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

  0010f	89 3e		 mov	 DWORD PTR [esi], edi

; 101  :     _Right   = _STD move(_Tmp);

  00111	89 10		 mov	 DWORD PTR [eax], edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2475 :         return static_cast<_Ty1&&>(_Left) < static_cast<_Ty2&&>(_Right);

  00113	8b 31		 mov	 esi, DWORD PTR [ecx]
  00115	3b d6		 cmp	 edx, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7938 :         if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  00117	7d 04		 jge	 SHORT $LN89@Guess_medi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

  00119	89 30		 mov	 DWORD PTR [eax], esi

; 101  :     _Right   = _STD move(_Tmp);

  0011b	89 11		 mov	 DWORD PTR [ecx], edx
$LN89@Guess_medi:
  0011d	5f		 pop	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7959 : }

  0011e	5e		 pop	 esi
  0011f	8b e5		 mov	 esp, ebp
  00121	5d		 pop	 ebp
  00122	c3		 ret	 0
??$_Guess_median_unchecked@PAHU?$less@X@std@@@std@@YAXPAH00U?$less@X@0@@Z ENDP ; std::_Guess_median_unchecked<int *,std::less<void> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Pop_heap_hole_by_index@PAHHU?$less@X@std@@@std@@YAXPAHHH$$QAHU?$less@X@0@@Z
_TEXT	SEGMENT
tv246 = 8						; size = 4
__First$ = 8						; size = 4
__Top$1$ = 12						; size = 4
__Hole$ = 12						; size = 4
__Bottom$ = 16						; size = 4
__Val$ = 20						; size = 4
__Pred$ = 24						; size = 1
??$_Pop_heap_hole_by_index@PAHHU?$less@X@std@@@std@@YAXPAHHH$$QAHU?$less@X@0@@Z PROC ; std::_Pop_heap_hole_by_index<int *,int,std::less<void> >, COMDAT

; 6432 :     _RanIt _First, _Iter_diff_t<_RanIt> _Hole, _Iter_diff_t<_RanIt> _Bottom, _Ty&& _Val, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 6433 :     // percolate _Hole to _Bottom, then push _Val
; 6434 :     _STL_INTERNAL_CHECK(_Bottom > 0);
; 6435 : 
; 6436 :     using _Diff      = _Iter_diff_t<_RanIt>;
; 6437 :     const _Diff _Top = _Hole;
; 6438 :     _Diff _Idx       = _Hole;
; 6439 : 
; 6440 :     // Check whether _Idx can have a child before calculating that child's index, since
; 6441 :     // calculating the child's index can trigger integer overflows
; 6442 :     const _Diff _Max_sequence_non_leaf = (_Bottom - 1) >> 1; // shift for codegen

  00003	8b 45 10	 mov	 eax, DWORD PTR __Bottom$[ebp]
  00006	8b 55 0c	 mov	 edx, DWORD PTR __Hole$[ebp]
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  0000e	8d 48 ff	 lea	 ecx, DWORD PTR [eax-1]
  00011	57		 push	 edi
  00012	8b f9		 mov	 edi, ecx
  00014	89 55 0c	 mov	 DWORD PTR __Top$1$[ebp], edx
  00017	d1 ff		 sar	 edi, 1
  00019	8b da		 mov	 ebx, edx
  0001b	89 4d 08	 mov	 DWORD PTR tv246[ebp], ecx

; 6443 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  0001e	3b d7		 cmp	 edx, edi
  00020	7d 25		 jge	 SHORT $LN3@Pop_heap_h
$LL2@Pop_heap_h:

; 6444 :         _Idx = 2 * _Idx + 2;

  00022	8d 0c 1b	 lea	 ecx, DWORD PTR [ebx+ebx]

; 6445 :         if (_DEBUG_LT_PRED(_Pred, *(_First + _Idx), *(_First + (_Idx - 1)))) {
; 6446 :             --_Idx;
; 6447 :         }
; 6448 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  00025	33 db		 xor	 ebx, ebx
  00027	8b 44 8e 08	 mov	 eax, DWORD PTR [esi+ecx*4+8]
  0002b	3b 44 8e 04	 cmp	 eax, DWORD PTR [esi+ecx*4+4]
  0002f	0f 9d c3	 setge	 bl
  00032	43		 inc	 ebx
  00033	03 d9		 add	 ebx, ecx
  00035	8b 04 9e	 mov	 eax, DWORD PTR [esi+ebx*4]
  00038	89 04 96	 mov	 DWORD PTR [esi+edx*4], eax

; 6449 :         _Hole             = _Idx;

  0003b	8b d3		 mov	 edx, ebx
  0003d	3b df		 cmp	 ebx, edi
  0003f	7c e1		 jl	 SHORT $LL2@Pop_heap_h
  00041	8b 45 10	 mov	 eax, DWORD PTR __Bottom$[ebp]
  00044	8b 4d 08	 mov	 ecx, DWORD PTR tv246[ebp]
$LN3@Pop_heap_h:

; 6450 :     }
; 6451 : 
; 6452 :     if (_Idx == _Max_sequence_non_leaf && _Bottom % 2 == 0) { // only child at bottom, move _Hole down to it

  00047	3b df		 cmp	 ebx, edi
  00049	75 0d		 jne	 SHORT $LN5@Pop_heap_h
  0004b	a8 01		 test	 al, 1
  0004d	75 09		 jne	 SHORT $LN5@Pop_heap_h

; 6453 :         *(_First + _Hole) = _STD move(*(_First + (_Bottom - 1)));

  0004f	8b 44 86 fc	 mov	 eax, DWORD PTR [esi+eax*4-4]
  00053	89 04 96	 mov	 DWORD PTR [esi+edx*4], eax

; 6454 :         _Hole             = _Bottom - 1;

  00056	8b d1		 mov	 edx, ecx
$LN5@Pop_heap_h:

; 6328 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  00058	8b 5d 0c	 mov	 ebx, DWORD PTR __Top$1$[ebp]
  0005b	3b da		 cmp	 ebx, edx
  0005d	7d 22		 jge	 SHORT $LN24@Pop_heap_h
  0005f	8b 7d 14	 mov	 edi, DWORD PTR __Val$[ebp]
$LL12@Pop_heap_h:

; 6327 :     for (_Diff _Idx = (_Hole - 1) >> 1; // shift for codegen

  00062	8d 42 ff	 lea	 eax, DWORD PTR [edx-1]
  00065	d1 f8		 sar	 eax, 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2475 :         return static_cast<_Ty1&&>(_Left) < static_cast<_Ty2&&>(_Right);

  00067	8b 0c 86	 mov	 ecx, DWORD PTR [esi+eax*4]
  0006a	3b 0f		 cmp	 ecx, DWORD PTR [edi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6328 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  0006c	7d 09		 jge	 SHORT $LN25@Pop_heap_h

; 6329 :          _Idx = (_Hole - 1) >> 1) { // shift for codegen
; 6330 :         // move _Hole up to parent
; 6331 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  0006e	89 0c 96	 mov	 DWORD PTR [esi+edx*4], ecx

; 6332 :         _Hole             = _Idx;

  00071	8b d0		 mov	 edx, eax
  00073	3b d8		 cmp	 ebx, eax
  00075	7c eb		 jl	 SHORT $LL12@Pop_heap_h
$LN25@Pop_heap_h:

; 6455 :     }
; 6456 : 
; 6457 :     _STD _Push_heap_by_index(_First, _Hole, _Top, _STD forward<_Ty>(_Val), _Pred);
; 6458 : }

  00077	8b 07		 mov	 eax, DWORD PTR [edi]
  00079	5f		 pop	 edi
  0007a	89 04 96	 mov	 DWORD PTR [esi+edx*4], eax
  0007d	5e		 pop	 esi
  0007e	5b		 pop	 ebx
  0007f	5d		 pop	 ebp
  00080	c3		 ret	 0
$LN24@Pop_heap_h:

; 6335 :     *(_First + _Hole) = _STD forward<_Ty>(_Val); // drop _Val into final hole

  00081	8b 45 14	 mov	 eax, DWORD PTR __Val$[ebp]
  00084	5f		 pop	 edi
  00085	8b 00		 mov	 eax, DWORD PTR [eax]

; 6455 :     }
; 6456 : 
; 6457 :     _STD _Push_heap_by_index(_First, _Hole, _Top, _STD forward<_Ty>(_Val), _Pred);
; 6458 : }

  00087	89 04 96	 mov	 DWORD PTR [esi+edx*4], eax
  0008a	5e		 pop	 esi
  0008b	5b		 pop	 ebx
  0008c	5d		 pop	 ebp
  0008d	c3		 ret	 0
??$_Pop_heap_hole_by_index@PAHHU?$less@X@std@@@std@@YAXPAHHH$$QAHU?$less@X@0@@Z ENDP ; std::_Pop_heap_hole_by_index<int *,int,std::less<void> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Copy_memmove@PAHPAH@std@@YAPAHPAH00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAHPAH@std@@YAPAHPAH00@Z PROC		; std::_Copy_memmove<int *,int *>, COMDAT

; 4526 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4527 :     auto _FirstPtr              = _To_address(_First);
; 4528 :     auto _LastPtr               = _To_address(_Last);
; 4529 :     auto _DestPtr               = _To_address(_Dest);
; 4530 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4531 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4532 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4535 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4536 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4537 :     } else {
; 4538 :         return _Dest + (_LastPtr - _FirstPtr);
; 4539 :     }
; 4540 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAHPAH@std@@YAPAHPAH00@Z ENDP		; std::_Copy_memmove<int *,int *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Partition_by_median_guess_unchecked@PAHU?$less@X@std@@@std@@YA?AU?$pair@PAHPAH@0@PAH0U?$less@X@0@@Z
_TEXT	SEGMENT
tv517 = -12						; size = 4
__Gfirst$1$ = -12					; size = 4
tv509 = -8						; size = 4
__Glast$1$ = -8						; size = 4
__Plast$1$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Pred$ = 20						; size = 1
??$_Partition_by_median_guess_unchecked@PAHU?$less@X@std@@@std@@YA?AU?$pair@PAHPAH@0@PAH0U?$less@X@0@@Z PROC ; std::_Partition_by_median_guess_unchecked<int *,std::less<void> >, COMDAT

; 7962 : _CONSTEXPR20 pair<_RanIt, _RanIt> _Partition_by_median_guess_unchecked(_RanIt _First, _RanIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 7963 :     // partition [_First, _Last)
; 7964 :     _RanIt _Mid = _First + ((_Last - _First) >> 1); // shift for codegen

  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __First$[ebp]
  00009	53		 push	 ebx
  0000a	8b 5d 10	 mov	 ebx, DWORD PTR __Last$[ebp]
  0000d	8b c3		 mov	 eax, ebx
  0000f	56		 push	 esi
  00010	2b c1		 sub	 eax, ecx
  00012	c1 f8 03	 sar	 eax, 3
  00015	57		 push	 edi

; 7965 :     _Guess_median_unchecked(_First, _Mid, _Prev_iter(_Last), _Pred);

  00016	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  00019	8d 34 81	 lea	 esi, DWORD PTR [ecx+eax*4]
  0001c	8d 43 fc	 lea	 eax, DWORD PTR [ebx-4]
  0001f	50		 push	 eax
  00020	56		 push	 esi
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ??$_Guess_median_unchecked@PAHU?$less@X@std@@@std@@YAXPAH00U?$less@X@0@@Z ; std::_Guess_median_unchecked<int *,std::less<void> >
  00027	83 c4 10	 add	 esp, 16			; 00000010H

; 7966 :     _RanIt _Pfirst = _Mid;
; 7967 :     _RanIt _Plast  = _Next_iter(_Pfirst);

  0002a	8d 7e 04	 lea	 edi, DWORD PTR [esi+4]
  0002d	89 7d fc	 mov	 DWORD PTR __Plast$1$[ebp], edi

; 7970 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  00030	39 75 0c	 cmp	 DWORD PTR __First$[ebp], esi
  00033	73 20		 jae	 SHORT $LN68@Partition_
  00035	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00037	8b 5d 0c	 mov	 ebx, DWORD PTR __First$[ebp]
  0003a	66 0f 1f 44 00
	00		 npad	 6
$LL2@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2475 :         return static_cast<_Ty1&&>(_Left) < static_cast<_Ty2&&>(_Right);

  00040	8b 46 fc	 mov	 eax, DWORD PTR [esi-4]
  00043	3b c1		 cmp	 eax, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7970 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  00045	7c 0b		 jl	 SHORT $LN94@Partition_
  00047	7f 09		 jg	 SHORT $LN94@Partition_

; 7971 :         --_Pfirst;

  00049	83 c6 fc	 add	 esi, -4			; fffffffcH
  0004c	8b c8		 mov	 ecx, eax
  0004e	3b de		 cmp	 ebx, esi
  00050	72 ee		 jb	 SHORT $LL2@Partition_
$LN94@Partition_:
  00052	8b 5d 10	 mov	 ebx, DWORD PTR __Last$[ebp]
$LN68@Partition_:

; 7974 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  00055	3b fb		 cmp	 edi, ebx
  00057	73 17		 jae	 SHORT $LN5@Partition_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2475 :         return static_cast<_Ty1&&>(_Left) < static_cast<_Ty2&&>(_Right);

  00059	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0005b	0f 1f 44 00 00	 npad	 5
$LL4@Partition_:
  00060	39 0f		 cmp	 DWORD PTR [edi], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7974 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  00062	7c 09		 jl	 SHORT $LN95@Partition_
  00064	7f 07		 jg	 SHORT $LN95@Partition_

; 7975 :         ++_Plast;

  00066	83 c7 04	 add	 edi, 4
  00069	3b fb		 cmp	 edi, ebx
  0006b	72 f3		 jb	 SHORT $LL4@Partition_
$LN95@Partition_:
  0006d	89 7d fc	 mov	 DWORD PTR __Plast$1$[ebp], edi
$LN5@Partition_:

; 7976 :     }
; 7977 : 
; 7978 :     _RanIt _Gfirst = _Plast;

  00070	8b d7		 mov	 edx, edi

; 7979 :     _RanIt _Glast  = _Pfirst;

  00072	8b de		 mov	 ebx, esi
$LN119@Partition_:

; 7980 : 
; 7981 :     for (;;) { // partition
; 7982 :         for (; _Gfirst < _Last; ++_Gfirst) {

  00074	89 5d f8	 mov	 DWORD PTR __Glast$1$[ebp], ebx
$LN118@Partition_:
  00077	89 55 f4	 mov	 DWORD PTR __Gfirst$1$[ebp], edx
  0007a	66 0f 1f 44 00
	00		 npad	 6
$LL6@Partition_:
  00080	3b 55 10	 cmp	 edx, DWORD PTR __Last$[ebp]
  00083	73 32		 jae	 SHORT $LN72@Partition_
  00085	8b 5d 10	 mov	 ebx, DWORD PTR __Last$[ebp]
$LL11@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2475 :         return static_cast<_Ty1&&>(_Left) < static_cast<_Ty2&&>(_Right);

  00088	8b 0a		 mov	 ecx, DWORD PTR [edx]
  0008a	39 0e		 cmp	 DWORD PTR [esi], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7983 :             if (_DEBUG_LT_PRED(_Pred, *_Pfirst, *_Gfirst)) {

  0008c	7c 19		 jl	 SHORT $LN9@Partition_

; 7984 :                 continue;
; 7985 :             } else if (_Pred(*_Gfirst, *_Pfirst)) {

  0008e	7f 1e		 jg	 SHORT $LN96@Partition_

; 7986 :                 break;
; 7987 :             } else if (_Plast != _Gfirst) {

  00090	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  00093	89 45 f4	 mov	 DWORD PTR tv517[ebp], eax
  00096	3b fa		 cmp	 edi, edx
  00098	74 0b		 je	 SHORT $LN19@Partition_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

  0009a	8b 07		 mov	 eax, DWORD PTR [edi]

; 100  :     _Left    = _STD move(_Right);

  0009c	89 0f		 mov	 DWORD PTR [edi], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7989 :                 ++_Plast;

  0009e	8b 7d f4	 mov	 edi, DWORD PTR tv517[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 101  :     _Right   = _STD move(_Tmp);

  000a1	89 02		 mov	 DWORD PTR [edx], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7990 :             } else {

  000a3	eb 02		 jmp	 SHORT $LN9@Partition_
$LN19@Partition_:

; 7991 :                 ++_Plast;

  000a5	8b f8		 mov	 edi, eax
$LN9@Partition_:

; 7980 : 
; 7981 :     for (;;) { // partition
; 7982 :         for (; _Gfirst < _Last; ++_Gfirst) {

  000a7	83 c2 04	 add	 edx, 4
  000aa	3b d3		 cmp	 edx, ebx
  000ac	72 da		 jb	 SHORT $LL11@Partition_
$LN96@Partition_:
  000ae	8b 5d f8	 mov	 ebx, DWORD PTR __Glast$1$[ebp]
  000b1	89 7d fc	 mov	 DWORD PTR __Plast$1$[ebp], edi
  000b4	89 55 f4	 mov	 DWORD PTR __Gfirst$1$[ebp], edx
$LN72@Partition_:

; 7995 :         for (; _First < _Glast; --_Glast) {

  000b7	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
  000ba	3b d8		 cmp	 ebx, eax
  000bc	76 34		 jbe	 SHORT $LN117@Partition_
  000be	8d 4b fc	 lea	 ecx, DWORD PTR [ebx-4]
  000c1	8b f8		 mov	 edi, eax
$LL14@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2475 :         return static_cast<_Ty1&&>(_Left) < static_cast<_Ty2&&>(_Right);

  000c3	8b 01		 mov	 eax, DWORD PTR [ecx]
  000c5	3b 06		 cmp	 eax, DWORD PTR [esi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7997 :             if (_DEBUG_LT_PRED(_Pred, *_Glast_prev, *_Pfirst)) {

  000c7	7c 11		 jl	 SHORT $LN12@Partition_

; 7998 :                 continue;
; 7999 :             } else if (_Pred(*_Pfirst, *_Glast_prev)) {

  000c9	7f 19		 jg	 SHORT $LN97@Partition_

; 8000 :                 break;
; 8001 :             } else if (--_Pfirst != _Glast_prev) {

  000cb	83 ee 04	 sub	 esi, 4
  000ce	3b f1		 cmp	 esi, ecx
  000d0	74 08		 je	 SHORT $LN12@Partition_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

  000d2	8b 06		 mov	 eax, DWORD PTR [esi]

; 100  :     _Left    = _STD move(_Right);

  000d4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d6	89 16		 mov	 DWORD PTR [esi], edx

; 101  :     _Right   = _STD move(_Tmp);

  000d8	89 01		 mov	 DWORD PTR [ecx], eax
$LN12@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7995 :         for (; _First < _Glast; --_Glast) {

  000da	83 eb 04	 sub	 ebx, 4
  000dd	83 e9 04	 sub	 ecx, 4
  000e0	3b fb		 cmp	 edi, ebx
  000e2	72 df		 jb	 SHORT $LL14@Partition_
$LN97@Partition_:
  000e4	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]

; 8002 :                 swap(*_Pfirst, *_Glast_prev); // intentional ADL
; 8003 :             }
; 8004 :         }
; 8005 : 
; 8006 :         if (_Glast == _First && _Gfirst == _Last) {

  000e7	3b d8		 cmp	 ebx, eax
  000e9	8b 55 f4	 mov	 edx, DWORD PTR __Gfirst$1$[ebp]
  000ec	8b 7d fc	 mov	 edi, DWORD PTR __Plast$1$[ebp]
  000ef	89 5d f8	 mov	 DWORD PTR __Glast$1$[ebp], ebx
$LN117@Partition_:
  000f2	75 2a		 jne	 SHORT $LN27@Partition_
  000f4	3b 55 10	 cmp	 edx, DWORD PTR __Last$[ebp]
  000f7	74 62		 je	 SHORT $LN74@Partition_

; 8008 :         }
; 8009 : 
; 8010 :         if (_Glast == _First) { // no room at bottom, rotate pivot upward
; 8011 :             if (_Plast != _Gfirst) {

  000f9	3b fa		 cmp	 edi, edx
  000fb	74 08		 je	 SHORT $LN43@Partition_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

  000fd	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 100  :     _Left    = _STD move(_Right);

  000ff	8b 07		 mov	 eax, DWORD PTR [edi]
  00101	89 06		 mov	 DWORD PTR [esi], eax

; 101  :     _Right   = _STD move(_Tmp);

  00103	89 0f		 mov	 DWORD PTR [edi], ecx
$LN43@Partition_:

; 99   :     _Ty _Tmp = _STD move(_Left);

  00105	8b 0e		 mov	 ecx, DWORD PTR [esi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8015 :             ++_Plast;

  00107	83 c7 04	 add	 edi, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

  0010a	8b 02		 mov	 eax, DWORD PTR [edx]
  0010c	89 06		 mov	 DWORD PTR [esi], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8017 :             ++_Pfirst;

  0010e	83 c6 04	 add	 esi, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 101  :     _Right   = _STD move(_Tmp);

  00111	89 0a		 mov	 DWORD PTR [edx], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8018 :             ++_Gfirst;

  00113	83 c2 04	 add	 edx, 4
  00116	89 7d fc	 mov	 DWORD PTR __Plast$1$[ebp], edi
  00119	e9 59 ff ff ff	 jmp	 $LN118@Partition_
$LN27@Partition_:

; 8019 :         } else if (_Gfirst == _Last) { // no room at top, rotate pivot downward

  0011e	83 c3 fc	 add	 ebx, -4			; fffffffcH
  00121	89 5d f8	 mov	 DWORD PTR __Glast$1$[ebp], ebx
  00124	3b 55 10	 cmp	 edx, DWORD PTR __Last$[ebp]
  00127	75 22		 jne	 SHORT $LN30@Partition_

; 8020 :             if (--_Glast != --_Pfirst) {

  00129	83 ee 04	 sub	 esi, 4
  0012c	3b de		 cmp	 ebx, esi
  0012e	74 08		 je	 SHORT $LN90@Partition_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

  00130	8b 0b		 mov	 ecx, DWORD PTR [ebx]

; 100  :     _Left    = _STD move(_Right);

  00132	8b 06		 mov	 eax, DWORD PTR [esi]
  00134	89 03		 mov	 DWORD PTR [ebx], eax

; 101  :     _Right   = _STD move(_Tmp);

  00136	89 0e		 mov	 DWORD PTR [esi], ecx
$LN90@Partition_:

; 99   :     _Ty _Tmp = _STD move(_Left);

  00138	8b 0e		 mov	 ecx, DWORD PTR [esi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8024 :             swap(*_Pfirst, *--_Plast); // intentional ADL

  0013a	83 ef 04	 sub	 edi, 4
  0013d	89 7d fc	 mov	 DWORD PTR __Plast$1$[ebp], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

  00140	8b 07		 mov	 eax, DWORD PTR [edi]
  00142	89 06		 mov	 DWORD PTR [esi], eax

; 101  :     _Right   = _STD move(_Tmp);

  00144	89 0f		 mov	 DWORD PTR [edi], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8025 :         } else {

  00146	e9 35 ff ff ff	 jmp	 $LL6@Partition_
$LN30@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

  0014b	8b 0a		 mov	 ecx, DWORD PTR [edx]

; 100  :     _Left    = _STD move(_Right);

  0014d	8b 03		 mov	 eax, DWORD PTR [ebx]
  0014f	89 02		 mov	 DWORD PTR [edx], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8027 :             ++_Gfirst;

  00151	83 c2 04	 add	 edx, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 101  :     _Right   = _STD move(_Tmp);

  00154	89 0b		 mov	 DWORD PTR [ebx], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8029 :     }

  00156	e9 19 ff ff ff	 jmp	 $LN119@Partition_
$LN74@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

  0015b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0015e	89 78 04	 mov	 DWORD PTR [eax+4], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8007 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);

  00161	5f		 pop	 edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

  00162	89 30		 mov	 DWORD PTR [eax], esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8007 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);

  00164	5e		 pop	 esi
  00165	5b		 pop	 ebx

; 8030 : }

  00166	8b e5		 mov	 esp, ebp
  00168	5d		 pop	 ebp
  00169	c3		 ret	 0
??$_Partition_by_median_guess_unchecked@PAHU?$less@X@std@@@std@@YA?AU?$pair@PAHPAH@0@PAH0U?$less@X@0@@Z ENDP ; std::_Partition_by_median_guess_unchecked<int *,std::less<void> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Sort_unchecked@PAHU?$less@X@std@@@std@@YAXPAH0HU?$less@X@0@@Z
_TEXT	SEGMENT
__Mid$1 = -20						; size = 8
tv695 = -16						; size = 4
__Hole$1$ = -12						; size = 4
__Bottom$1$ = -8					; size = 4
__Val$1$ = -4						; size = 4
__Max_sequence_non_leaf$1$ = 8				; size = 4
__First$ = 8						; size = 4
__Val$2 = 12						; size = 4
__Last$ = 12						; size = 4
__Ideal$ = 16						; size = 4
__Pred$ = 20						; size = 1
??$_Sort_unchecked@PAHU?$less@X@std@@@std@@YAXPAH0HU?$less@X@0@@Z PROC ; std::_Sort_unchecked<int *,std::less<void> >, COMDAT

; 8033 : _CONSTEXPR20 void _Sort_unchecked(_RanIt _First, _RanIt _Last, _Iter_diff_t<_RanIt> _Ideal, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	53		 push	 ebx

; 8034 :     // order [_First, _Last)
; 8035 :     for (;;) {
; 8036 :         if (_Last - _First <= _ISORT_MAX) { // small

  00007	8b 5d 0c	 mov	 ebx, DWORD PTR __Last$[ebp]
  0000a	8b c3		 mov	 eax, ebx
  0000c	56		 push	 esi
  0000d	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00010	2b c6		 sub	 eax, esi
  00012	83 e0 fc	 and	 eax, -4			; fffffffcH
  00015	57		 push	 edi
  00016	3d 80 00 00 00	 cmp	 eax, 128		; 00000080H
  0001b	7e 71		 jle	 SHORT $LN67@Sort_unche
  0001d	8b 4d 14	 mov	 ecx, DWORD PTR __Pred$[ebp]
  00020	8b 7d 10	 mov	 edi, DWORD PTR __Ideal$[ebp]
$LL2@Sort_unche:

; 8037 :             _Insertion_sort_unchecked(_First, _Last, _Pred);
; 8038 :             return;
; 8039 :         }
; 8040 : 
; 8041 :         if (_Ideal <= 0) { // heap sort if too many divisions

  00023	85 ff		 test	 edi, edi
  00025	0f 8e 99 00 00
	00		 jle	 $LN68@Sort_unche

; 8042 :             _Make_heap_unchecked(_First, _Last, _Pred);
; 8043 :             _Sort_heap_unchecked(_First, _Last, _Pred);
; 8044 :             return;
; 8045 :         }
; 8046 : 
; 8047 :         // divide and conquer by quicksort
; 8048 :         auto _Mid = _Partition_by_median_guess_unchecked(_First, _Last, _Pred);

  0002b	51		 push	 ecx
  0002c	53		 push	 ebx
  0002d	8d 45 ec	 lea	 eax, DWORD PTR __Mid$1[ebp]
  00030	56		 push	 esi
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ??$_Partition_by_median_guess_unchecked@PAHU?$less@X@std@@@std@@YA?AU?$pair@PAHPAH@0@PAH0U?$less@X@0@@Z ; std::_Partition_by_median_guess_unchecked<int *,std::less<void> >

; 8049 : 
; 8050 :         _Ideal = (_Ideal >> 1) + (_Ideal >> 2); // allow 1.5 log2(N) divisions
; 8051 : 
; 8052 :         if (_Mid.first - _First < _Last - _Mid.second) { // loop on second half

  00037	8b 55 f0	 mov	 edx, DWORD PTR __Mid$1[ebp+4]
  0003a	8b c7		 mov	 eax, edi
  0003c	c1 f8 02	 sar	 eax, 2
  0003f	8b cb		 mov	 ecx, ebx
  00041	d1 ff		 sar	 edi, 1
  00043	83 c4 10	 add	 esp, 16			; 00000010H
  00046	03 f8		 add	 edi, eax
  00048	2b ca		 sub	 ecx, edx
  0004a	8b 45 ec	 mov	 eax, DWORD PTR __Mid$1[ebp]
  0004d	83 e1 fc	 and	 ecx, -4			; fffffffcH
  00050	2b c6		 sub	 eax, esi
  00052	83 e0 fc	 and	 eax, -4			; fffffffcH
  00055	3b c1		 cmp	 eax, ecx
  00057	8b 45 14	 mov	 eax, DWORD PTR __Pred$[ebp]
  0005a	50		 push	 eax
  0005b	57		 push	 edi
  0005c	7d 0f		 jge	 SHORT $LN7@Sort_unche

; 8053 :             _Sort_unchecked(_First, _Mid.first, _Ideal, _Pred);

  0005e	8b 45 ec	 mov	 eax, DWORD PTR __Mid$1[ebp]
  00061	50		 push	 eax
  00062	56		 push	 esi
  00063	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAHU?$less@X@std@@@std@@YAXPAH0HU?$less@X@0@@Z ; std::_Sort_unchecked<int *,std::less<void> >

; 8054 :             _First = _Mid.second;

  00068	8b 75 f0	 mov	 esi, DWORD PTR __Mid$1[ebp+4]

; 8055 :         } else { // loop on first half

  0006b	eb 0d		 jmp	 SHORT $LN108@Sort_unche
$LN7@Sort_unche:

; 8056 :             _Sort_unchecked(_Mid.second, _Last, _Ideal, _Pred);

  0006d	53		 push	 ebx
  0006e	52		 push	 edx
  0006f	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAHU?$less@X@std@@@std@@YAXPAH0HU?$less@X@0@@Z ; std::_Sort_unchecked<int *,std::less<void> >

; 8057 :             _Last = _Mid.first;

  00074	8b 5d ec	 mov	 ebx, DWORD PTR __Mid$1[ebp]
  00077	89 5d 0c	 mov	 DWORD PTR __Last$[ebp], ebx
$LN108@Sort_unche:

; 8034 :     // order [_First, _Last)
; 8035 :     for (;;) {
; 8036 :         if (_Last - _First <= _ISORT_MAX) { // small

  0007a	8b 4d 14	 mov	 ecx, DWORD PTR __Pred$[ebp]
  0007d	8b c3		 mov	 eax, ebx
  0007f	2b c6		 sub	 eax, esi
  00081	83 c4 10	 add	 esp, 16			; 00000010H
  00084	83 e0 fc	 and	 eax, -4			; fffffffcH
  00087	3d 80 00 00 00	 cmp	 eax, 128		; 00000080H
  0008c	7f 95		 jg	 SHORT $LL2@Sort_unche
$LN67@Sort_unche:

; 7907 :     if (_First != _Last) {

  0008e	3b f3		 cmp	 esi, ebx
  00090	0f 84 3b 01 00
	00		 je	 $LN51@Sort_unche

; 7908 :         for (_BidIt _Mid = _First; ++_Mid != _Last;) { // order next element

  00096	8d 56 04	 lea	 edx, DWORD PTR [esi+4]
  00099	3b d3		 cmp	 edx, ebx
  0009b	0f 84 30 01 00
	00		 je	 $LN51@Sort_unche
$LL11@Sort_unche:

; 7909 :             _BidIt _Hole               = _Mid;
; 7910 :             _Iter_value_t<_BidIt> _Val = _STD move(*_Mid);

  000a1	8b 1a		 mov	 ebx, DWORD PTR [edx]
  000a3	8b fa		 mov	 edi, edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2475 :         return static_cast<_Ty1&&>(_Left) < static_cast<_Ty2&&>(_Right);

  000a5	3b 1e		 cmp	 ebx, DWORD PTR [esi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7912 :             if (_DEBUG_LT_PRED(_Pred, _Val, *_First)) { // found new earliest element, move to front

  000a7	0f 8d fe 00 00
	00		 jge	 $LN18@Sort_unche
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4936 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  000ad	8d 7a 04	 lea	 edi, DWORD PTR [edx+4]
  000b0	57		 push	 edi
  000b1	52		 push	 edx
  000b2	56		 push	 esi
  000b3	e8 00 00 00 00	 call	 ??$_Copy_backward_memmove@PAHPAH@std@@YAPAHPAH00@Z ; std::_Copy_backward_memmove<int *,int *>
  000b8	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7914 :                 *_First = _STD move(_Val);

  000bb	89 1e		 mov	 DWORD PTR [esi], ebx
  000bd	8b d7		 mov	 edx, edi

; 7915 :             } else { // look for insertion point after first

  000bf	e9 04 01 00 00	 jmp	 $LN19@Sort_unche
$LN68@Sort_unche:

; 6596 :     _Diff _Bottom = _Last - _First;

  000c4	2b de		 sub	 ebx, esi
  000c6	8b c3		 mov	 eax, ebx
  000c8	89 5d 0c	 mov	 DWORD PTR __Last$[ebp], ebx
  000cb	c1 f8 02	 sar	 eax, 2

; 6597 :     for (_Diff _Hole = _Bottom >> 1; _Hole > 0;) { // shift for codegen

  000ce	8b f8		 mov	 edi, eax
  000d0	89 45 f8	 mov	 DWORD PTR __Bottom$1$[ebp], eax
  000d3	d1 ff		 sar	 edi, 1
  000d5	85 ff		 test	 edi, edi
  000d7	0f 8e 8c 00 00
	00		 jle	 $LN31@Sort_unche
  000dd	48		 dec	 eax
  000de	8b c8		 mov	 ecx, eax
  000e0	89 45 f0	 mov	 DWORD PTR tv695[ebp], eax
  000e3	d1 f9		 sar	 ecx, 1
  000e5	89 4d 08	 mov	 DWORD PTR __Max_sequence_non_leaf$1$[ebp], ecx
$LL30@Sort_unche:

; 6598 :         // reheap top half, bottom to top
; 6599 :         --_Hole;
; 6600 :         _Iter_value_t<_RanIt> _Val = _STD move(*(_First + _Hole));

  000e8	8b 44 be fc	 mov	 eax, DWORD PTR [esi+edi*4-4]
  000ec	4f		 dec	 edi
  000ed	89 7d f4	 mov	 DWORD PTR __Hole$1$[ebp], edi

; 6601 :         _STD _Pop_heap_hole_by_index(_First, _Hole, _Bottom, _STD move(_Val), _Pred);

  000f0	8b d7		 mov	 edx, edi
  000f2	89 45 fc	 mov	 DWORD PTR __Val$1$[ebp], eax

; 6438 :     _Diff _Idx       = _Hole;

  000f5	8b df		 mov	 ebx, edi

; 6439 : 
; 6440 :     // Check whether _Idx can have a child before calculating that child's index, since
; 6441 :     // calculating the child's index can trigger integer overflows
; 6442 :     const _Diff _Max_sequence_non_leaf = (_Bottom - 1) >> 1; // shift for codegen
; 6443 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  000f7	3b f9		 cmp	 edi, ecx
  000f9	7d 2a		 jge	 SHORT $LN36@Sort_unche
  000fb	8b 7d 08	 mov	 edi, DWORD PTR __Max_sequence_non_leaf$1$[ebp]
  000fe	66 90		 npad	 2
$LL35@Sort_unche:

; 6444 :         _Idx = 2 * _Idx + 2;

  00100	8d 0c 1b	 lea	 ecx, DWORD PTR [ebx+ebx]

; 6445 :         if (_DEBUG_LT_PRED(_Pred, *(_First + _Idx), *(_First + (_Idx - 1)))) {
; 6446 :             --_Idx;
; 6447 :         }
; 6448 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  00103	33 db		 xor	 ebx, ebx
  00105	8b 44 8e 08	 mov	 eax, DWORD PTR [esi+ecx*4+8]
  00109	3b 44 8e 04	 cmp	 eax, DWORD PTR [esi+ecx*4+4]
  0010d	0f 9d c3	 setge	 bl
  00110	43		 inc	 ebx
  00111	03 d9		 add	 ebx, ecx
  00113	8b 04 9e	 mov	 eax, DWORD PTR [esi+ebx*4]
  00116	89 04 96	 mov	 DWORD PTR [esi+edx*4], eax

; 6449 :         _Hole             = _Idx;

  00119	8b d3		 mov	 edx, ebx
  0011b	3b df		 cmp	 ebx, edi
  0011d	7c e1		 jl	 SHORT $LL35@Sort_unche
  0011f	8b 7d f4	 mov	 edi, DWORD PTR __Hole$1$[ebp]
  00122	8b 4d 08	 mov	 ecx, DWORD PTR __Max_sequence_non_leaf$1$[ebp]
$LN36@Sort_unche:

; 6450 :     }
; 6451 : 
; 6452 :     if (_Idx == _Max_sequence_non_leaf && _Bottom % 2 == 0) { // only child at bottom, move _Hole down to it

  00125	3b d9		 cmp	 ebx, ecx
  00127	75 11		 jne	 SHORT $LN38@Sort_unche
  00129	8b 45 f8	 mov	 eax, DWORD PTR __Bottom$1$[ebp]
  0012c	a8 01		 test	 al, 1
  0012e	75 0a		 jne	 SHORT $LN38@Sort_unche

; 6453 :         *(_First + _Hole) = _STD move(*(_First + (_Bottom - 1)));

  00130	8b 44 86 fc	 mov	 eax, DWORD PTR [esi+eax*4-4]
  00134	89 04 96	 mov	 DWORD PTR [esi+edx*4], eax

; 6454 :         _Hole             = _Bottom - 1;

  00137	8b 55 f0	 mov	 edx, DWORD PTR tv695[ebp]
$LN38@Sort_unche:

; 6328 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  0013a	8b 5d fc	 mov	 ebx, DWORD PTR __Val$1$[ebp]
  0013d	3b fa		 cmp	 edi, edx
  0013f	7d 18		 jge	 SHORT $LN44@Sort_unche
$LL45@Sort_unche:

; 6327 :     for (_Diff _Idx = (_Hole - 1) >> 1; // shift for codegen

  00141	8d 42 ff	 lea	 eax, DWORD PTR [edx-1]
  00144	d1 f8		 sar	 eax, 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2475 :         return static_cast<_Ty1&&>(_Left) < static_cast<_Ty2&&>(_Right);

  00146	8b 0c 86	 mov	 ecx, DWORD PTR [esi+eax*4]
  00149	3b cb		 cmp	 ecx, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6328 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  0014b	7d 09		 jge	 SHORT $LN90@Sort_unche

; 6329 :          _Idx = (_Hole - 1) >> 1) { // shift for codegen
; 6330 :         // move _Hole up to parent
; 6331 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  0014d	89 0c 96	 mov	 DWORD PTR [esi+edx*4], ecx

; 6332 :         _Hole             = _Idx;

  00150	8b d0		 mov	 edx, eax
  00152	3b f8		 cmp	 edi, eax
  00154	7c eb		 jl	 SHORT $LL45@Sort_unche
$LN90@Sort_unche:

; 6328 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  00156	8b 4d 08	 mov	 ecx, DWORD PTR __Max_sequence_non_leaf$1$[ebp]
$LN44@Sort_unche:

; 6333 :     }
; 6334 : 
; 6335 :     *(_First + _Hole) = _STD forward<_Ty>(_Val); // drop _Val into final hole

  00159	89 1c 96	 mov	 DWORD PTR [esi+edx*4], ebx

; 6597 :     for (_Diff _Hole = _Bottom >> 1; _Hole > 0;) { // shift for codegen

  0015c	85 ff		 test	 edi, edi
  0015e	7f 88		 jg	 SHORT $LL30@Sort_unche
  00160	8b 5d 0c	 mov	 ebx, DWORD PTR __Last$[ebp]
  00163	8b 4d 14	 mov	 ecx, DWORD PTR __Pred$[ebp]
  00166	8b 45 f8	 mov	 eax, DWORD PTR __Bottom$1$[ebp]
$LN31@Sort_unche:

; 6818 :     for (; _Last - _First >= 2; --_Last) {

  00169	83 f8 02	 cmp	 eax, 2
  0016c	7c 63		 jl	 SHORT $LN51@Sort_unche
  0016e	66 90		 npad	 2
$LL52@Sort_unche:

; 6476 :         _Iter_value_t<_RanIt> _Val = _STD move(*_Last);

  00170	8b 44 1e fc	 mov	 eax, DWORD PTR [esi+ebx-4]
  00174	89 45 0c	 mov	 DWORD PTR __Val$2[ebp], eax

; 6465 :     *_Dest      = _STD move(*_First);

  00177	8b 06		 mov	 eax, DWORD PTR [esi]
  00179	89 44 1e fc	 mov	 DWORD PTR [esi+ebx-4], eax

; 6466 :     using _Diff = _Iter_diff_t<_RanIt>;
; 6467 :     _STD _Pop_heap_hole_by_index(

  0017d	8d 45 0c	 lea	 eax, DWORD PTR __Val$2[ebp]
  00180	51		 push	 ecx
  00181	50		 push	 eax
  00182	8d 43 fc	 lea	 eax, DWORD PTR [ebx-4]
  00185	c1 f8 02	 sar	 eax, 2
  00188	50		 push	 eax
  00189	6a 00		 push	 0
  0018b	56		 push	 esi
  0018c	e8 00 00 00 00	 call	 ??$_Pop_heap_hole_by_index@PAHHU?$less@X@std@@@std@@YAXPAHHH$$QAHU?$less@X@0@@Z ; std::_Pop_heap_hole_by_index<int *,int,std::less<void> >

; 6818 :     for (; _Last - _First >= 2; --_Last) {

  00191	8b 4d 14	 mov	 ecx, DWORD PTR __Pred$[ebp]
  00194	83 c3 fc	 add	 ebx, -4			; fffffffcH
  00197	8b c3		 mov	 eax, ebx

; 6467 :     _STD _Pop_heap_hole_by_index(

  00199	83 c4 14	 add	 esp, 20			; 00000014H

; 6818 :     for (; _Last - _First >= 2; --_Last) {

  0019c	83 e0 fc	 and	 eax, -4			; fffffffcH
  0019f	83 f8 08	 cmp	 eax, 8
  001a2	7d cc		 jge	 SHORT $LL52@Sort_unche

; 8058 :         }
; 8059 :     }
; 8060 : }

  001a4	5f		 pop	 edi
  001a5	5e		 pop	 esi
  001a6	5b		 pop	 ebx
  001a7	8b e5		 mov	 esp, ebp
  001a9	5d		 pop	 ebp
  001aa	c3		 ret	 0
$LN18@Sort_unche:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2475 :         return static_cast<_Ty1&&>(_Left) < static_cast<_Ty2&&>(_Right);

  001ab	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7916 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

  001ae	8d 42 fc	 lea	 eax, DWORD PTR [edx-4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2475 :         return static_cast<_Ty1&&>(_Left) < static_cast<_Ty2&&>(_Right);

  001b1	3b d9		 cmp	 ebx, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7916 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

  001b3	7d 0e		 jge	 SHORT $LN15@Sort_unche
$LL16@Sort_unche:

; 7917 :                     *_Hole = _STD move(*_Prev); // move hole down

  001b5	89 0f		 mov	 DWORD PTR [edi], ecx
  001b7	8b f8		 mov	 edi, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2475 :         return static_cast<_Ty1&&>(_Left) < static_cast<_Ty2&&>(_Right);

  001b9	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7916 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

  001bc	83 e8 04	 sub	 eax, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2475 :         return static_cast<_Ty1&&>(_Left) < static_cast<_Ty2&&>(_Right);

  001bf	3b d9		 cmp	 ebx, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7916 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

  001c1	7c f2		 jl	 SHORT $LL16@Sort_unche
$LN15@Sort_unche:

; 7918 :                 }
; 7919 : 
; 7920 :                 *_Hole = _STD move(_Val); // insert element in hole

  001c3	89 1f		 mov	 DWORD PTR [edi], ebx
  001c5	83 c2 04	 add	 edx, 4
$LN19@Sort_unche:

; 7908 :         for (_BidIt _Mid = _First; ++_Mid != _Last;) { // order next element

  001c8	3b 55 0c	 cmp	 edx, DWORD PTR __Last$[ebp]
  001cb	0f 85 d0 fe ff
	ff		 jne	 $LL11@Sort_unche
$LN51@Sort_unche:
  001d1	5f		 pop	 edi

; 8058 :         }
; 8059 :     }
; 8060 : }

  001d2	5e		 pop	 esi
  001d3	5b		 pop	 ebx
  001d4	8b e5		 mov	 esp, ebp
  001d6	5d		 pop	 ebp
  001d7	c3		 ret	 0
??$_Sort_unchecked@PAHU?$less@X@std@@@std@@YAXPAH0HU?$less@X@0@@Z ENDP ; std::_Sort_unchecked<int *,std::less<void> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$__std_find_trivial@HH@@YAPAHPAH0H@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$__std_find_trivial@HH@@YAPAHPAH0H@Z PROC		; __std_find_trivial<int,int>, COMDAT

; 114  : _Ty* __std_find_trivial(_Ty* _First, _Ty* _Last, const _TVal _Val) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 115  :     if constexpr (_STD is_pointer_v<_TVal> || _STD is_null_pointer_v<_TVal>) {
; 116  :         return __std_find_trivial(_First, _Last, reinterpret_cast<uintptr_t>(_Val));
; 117  :     } else if constexpr (sizeof(_Ty) == 1) {
; 118  :         return const_cast<_Ty*>(
; 119  :             static_cast<const _Ty*>(__std_find_trivial_1(_First, _Last, static_cast<uint8_t>(_Val))));
; 120  :     } else if constexpr (sizeof(_Ty) == 2) {
; 121  :         return const_cast<_Ty*>(
; 122  :             static_cast<const _Ty*>(__std_find_trivial_2(_First, _Last, static_cast<uint16_t>(_Val))));
; 123  :     } else if constexpr (sizeof(_Ty) == 4) {
; 124  :         return const_cast<_Ty*>(

  00003	ff 75 10	 push	 DWORD PTR __Val$[ebp]
  00006	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00009	ff 75 08	 push	 DWORD PTR __First$[ebp]
  0000c	e8 00 00 00 00	 call	 ___std_find_trivial_4@12

; 125  :             static_cast<const _Ty*>(__std_find_trivial_4(_First, _Last, static_cast<uint32_t>(_Val))));
; 126  :     } else if constexpr (sizeof(_Ty) == 8) {
; 127  :         return const_cast<_Ty*>(
; 128  :             static_cast<const _Ty*>(__std_find_trivial_8(_First, _Last, static_cast<uint64_t>(_Val))));
; 129  :     } else {
; 130  :         static_assert(_STD _Always_false<_Ty>, "Unexpected size");
; 131  :     }
; 132  : }

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$__std_find_trivial@HH@@YAPAHPAH0H@Z ENDP		; __std_find_trivial<int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Emplace_reallocate@H@?$vector@HV?$allocator@H@std@@@std@@AAEPAHQAH$$QAH@Z
_TEXT	SEGMENT
__Newsize$1$ = -12					; size = 4
tv607 = -8						; size = 4
tv590 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@H@?$vector@HV?$allocator@H@std@@@std@@AAEPAHQAH$$QAH@Z PROC ; std::vector<int,std::allocator<int> >::_Emplace_reallocate<int>, COMDAT
; _this$ = ecx

; 812  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 813  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 814  :         _Alty& _Al        = _Getal();
; 815  :         auto& _My_data    = _Mypair._Myval2;
; 816  :         pointer& _Myfirst = _My_data._Myfirst;
; 817  :         pointer& _Mylast  = _My_data._Mylast;
; 818  : 
; 819  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 820  : 
; 821  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b d9		 sub	 ebx, ecx

; 822  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c1		 sub	 eax, ecx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 823  : 
; 824  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 0f 01 00
	00		 je	 $LN96@Emplace_re

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 56 08	 mov	 edx, DWORD PTR [esi+8]

; 826  :         }
; 827  : 
; 828  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b d1		 sub	 edx, ecx

; 826  :         }
; 827  : 
; 828  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f4	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 fa 02	 sar	 edx, 2

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b ca		 mov	 ecx, edx
  0003d	d1 e9		 shr	 ecx, 1
  0003f	2b c1		 sub	 eax, ecx
  00041	3b d0		 cmp	 edx, eax
  00043	76 15		 jbe	 SHORT $LN12@Emplace_re

; 1967 :             return _Max; // geometric growth would overflow

  00045	b8 fc ff ff ff	 mov	 eax, -4			; fffffffcH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004a	50		 push	 eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1967 :             return _Max; // geometric growth would overflow

  0004b	89 45 f8	 mov	 DWORD PTR tv607[ebp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b f8		 mov	 edi, eax
  00058	eb 47		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1970 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 70   :         if (_Count > _Max_possible) {

  0005d	8b cf		 mov	 ecx, edi
  0005f	3b c7		 cmp	 eax, edi
  00061	0f 43 c8	 cmovae	 ecx, eax
  00064	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  0006a	0f 87 cc 00 00
	00		 ja	 $LN97@Emplace_re

; 72   :         }
; 73   :     }
; 74   : 
; 75   :     return _Count * _Ty_size;

  00070	8d 04 8d 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*4]
  00077	89 45 f8	 mov	 DWORD PTR tv607[ebp], eax

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0007a	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0007f	72 0d		 jb	 SHORT $LN24@Emplace_re

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00087	83 c4 04	 add	 esp, 4
  0008a	8b f8		 mov	 edi, eax
  0008c	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 240  :         }
; 241  :     }
; 242  : #endif // defined(_M_IX86) || defined(_M_X64)
; 243  : 
; 244  :     if (_Bytes != 0) {

  0008e	85 c0		 test	 eax, eax
  00090	74 0d		 je	 SHORT $LN25@Emplace_re

; 87   :         return ::operator new(_Bytes);

  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00098	83 c4 04	 add	 esp, 4

; 245  :         return _Traits::_Allocate(_Bytes);

  0009b	8b f8		 mov	 edi, eax
  0009d	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 246  :     }
; 247  : 
; 248  :     return nullptr;

  0009f	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 836  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000a1	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a4	8d 0c 9f	 lea	 ecx, DWORD PTR [edi+ebx*4]

; 837  :         _Constructed_first = _Newvec + _Whereoff;
; 838  : 
; 839  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000a7	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  000aa	89 4d fc	 mov	 DWORD PTR tv590[ebp], ecx
  000ad	8b 00		 mov	 eax, DWORD PTR [eax]
  000af	89 01		 mov	 DWORD PTR [ecx], eax
  000b1	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000b4	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000b6	3b d8		 cmp	 ebx, eax
  000b8	75 07		 jne	 SHORT $LN4@Emplace_re

; 845  :         } else { // provide basic guarantee

  000ba	8b 5d fc	 mov	 ebx, DWORD PTR tv590[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1939 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bd	8b d7		 mov	 edx, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 845  :         } else { // provide basic guarantee

  000bf	eb 16		 jmp	 SHORT $LN52@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1939 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c1	57		 push	 edi
  000c2	53		 push	 ebx
  000c3	51		 push	 ecx
  000c4	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAHPAH@std@@YAPAHPAH00@Z ; std::_Copy_memmove<int *,int *>
  000c9	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000cc	8b cb		 mov	 ecx, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 848  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000ce	8b 5d fc	 mov	 ebx, DWORD PTR tv590[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1939 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000d1	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 848  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000d4	8d 53 04	 lea	 edx, DWORD PTR [ebx+4]
$LN52@Emplace_re:
  000d7	52		 push	 edx
  000d8	50		 push	 eax
  000d9	51		 push	 ecx
  000da	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAHPAH@std@@YAPAHPAH00@Z ; std::_Copy_memmove<int *,int *>

; 2023 :         if (_Myfirst) { // destroy and deallocate old array

  000df	8b 06		 mov	 eax, DWORD PTR [esi]

; 848  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  000e1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2023 :         if (_Myfirst) { // destroy and deallocate old array

  000e4	85 c0		 test	 eax, eax
  000e6	74 2c		 je	 SHORT $LN70@Emplace_re

; 2024 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2025 :             _ASAN_VECTOR_REMOVE;
; 2026 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e8	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000eb	2b c8		 sub	 ecx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ed	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000f0	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f6	72 12		 jb	 SHORT $LN80@Emplace_re

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f8	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000fb	83 c1 23	 add	 ecx, 35			; 00000023H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000fe	2b c2		 sub	 eax, edx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00100	83 c0 fc	 add	 eax, -4			; fffffffcH
  00103	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00106	77 2a		 ja	 SHORT $LN77@Emplace_re

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00108	8b c2		 mov	 eax, edx
$LN80@Emplace_re:

; 265  :         ::operator delete(_Ptr, _Bytes);

  0010a	51		 push	 ecx
  0010b	50		 push	 eax
  0010c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00111	83 c4 08	 add	 esp, 8
$LN70@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2030 :         _Mylast  = _Newvec + _Newsize;

  00114	8b 45 f4	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  00117	89 3e		 mov	 DWORD PTR [esi], edi
  00119	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 849  :         }
; 850  :         _CATCH_ALL
; 851  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 852  :         _Al.deallocate(_Newvec, _Newcapacity);
; 853  :         _RERAISE;
; 854  :         _CATCH_END
; 855  : 
; 856  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 857  :         return _Newvec + _Whereoff;

  0011c	8b c3		 mov	 eax, ebx

; 2030 :         _Mylast  = _Newvec + _Newsize;

  0011e	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 2031 :         _Myend   = _Newvec + _Newcapacity;

  00121	8b 4d f8	 mov	 ecx, DWORD PTR tv607[ebp]
  00124	03 cf		 add	 ecx, edi

; 858  :     }

  00126	5f		 pop	 edi

; 2031 :         _Myend   = _Newvec + _Newcapacity;

  00127	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 858  :     }

  0012a	5e		 pop	 esi
  0012b	5b		 pop	 ebx
  0012c	8b e5		 mov	 esp, ebp
  0012e	5d		 pop	 ebp
  0012f	c2 08 00	 ret	 8
$LN77@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00132	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN96@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 825  :             _Xlength();

  00137	e8 00 00 00 00	 call	 ?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ ; std::vector<int,std::allocator<int> >::_Xlength
$LN97@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 71   :             _Throw_bad_array_new_length(); // multiply overflow

  0013c	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN94@Emplace_re:
  00141	cc		 int	 3
??$_Emplace_reallocate@H@?$vector@HV?$allocator@H@std@@@std@@AAEPAHQAH$$QAH@Z ENDP ; std::vector<int,std::allocator<int> >::_Emplace_reallocate<int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$upper_bound@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@MJ@std@@@std@@@std@@@std@@U?$pair@MJ@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@MJ@std@@@std@@@std@@@0@V10@0ABU?$pair@MJ@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Val$ = 20						; size = 4
??$upper_bound@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@MJ@std@@@std@@@std@@@std@@U?$pair@MJ@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@MJ@std@@@std@@@std@@@0@V10@0ABU?$pair@MJ@0@@Z PROC ; std::upper_bound<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::pair<float,long> > > >,std::pair<float,long> >, COMDAT

; 7081 : _NODISCARD _CONSTEXPR20 _FwdIt upper_bound(_FwdIt _First, _FwdIt _Last, const _Ty& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1422 :         return _Last - _First; // assume the iterator will do debug checking

  00003	8b 4d 10	 mov	 ecx, DWORD PTR __Last$[ebp]

; 7081 : _NODISCARD _CONSTEXPR20 _FwdIt upper_bound(_FwdIt _First, _FwdIt _Last, const _Ty& _Val) {

  00006	57		 push	 edi

; 7062 :     auto _UFirst                = _Get_unwrapped(_First);

  00007	8b 7d 0c	 mov	 edi, DWORD PTR __First$[ebp]

; 1422 :         return _Last - _First; // assume the iterator will do debug checking

  0000a	2b cf		 sub	 ecx, edi
  0000c	c1 f9 03	 sar	 ecx, 3

; 7065 :     while (0 < _Count) { // divide and conquer, find half that contains answer

  0000f	85 c9		 test	 ecx, ecx
  00011	7e 3f		 jle	 SHORT $LN26@upper_boun
  00013	53		 push	 ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 506  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00014	8b 5d 14	 mov	 ebx, DWORD PTR __Val$[ebp]
  00017	56		 push	 esi
  00018	f3 0f 10 0b	 movss	 xmm1, DWORD PTR [ebx]
  0001c	0f 1f 40 00	 npad	 4
$LL4@upper_boun:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 7066 :         _Iter_diff_t<_FwdIt> _Count2 = _Count / 2;

  00020	8b d1		 mov	 edx, ecx
  00022	d1 ea		 shr	 edx, 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 506  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00024	f3 0f 10 04 d7	 movss	 xmm0, DWORD PTR [edi+edx*8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1394 :         _Where += _Off;

  00029	8d 34 d7	 lea	 esi, DWORD PTR [edi+edx*8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 506  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  0002c	0f 2f c1	 comiss	 xmm0, xmm1
  0002f	77 19		 ja	 SHORT $LN25@upper_boun
  00031	0f 2f c8	 comiss	 xmm1, xmm0
  00034	77 08		 ja	 SHORT $LN6@upper_boun
  00036	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00039	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
  0003c	7c 0c		 jl	 SHORT $LN25@upper_boun
$LN6@upper_boun:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 7072 :             _Count -= _Count2 + 1;

  0003e	83 c8 ff	 or	 eax, -1
  00041	8d 7e 08	 lea	 edi, DWORD PTR [esi+8]
  00044	2b c2		 sub	 eax, edx
  00046	03 c8		 add	 ecx, eax
  00048	eb 02		 jmp	 SHORT $LN7@upper_boun
$LN25@upper_boun:

; 7067 :         const auto _UMid             = _STD next(_UFirst, _Count2);
; 7068 :         if (_Pred(_Val, *_UMid)) {
; 7069 :             _Count = _Count2;

  0004a	8b ca		 mov	 ecx, edx
$LN7@upper_boun:

; 7063 :     _Iter_diff_t<_FwdIt> _Count = _STD distance(_UFirst, _Get_unwrapped(_Last));
; 7064 : 
; 7065 :     while (0 < _Count) { // divide and conquer, find half that contains answer

  0004c	85 c9		 test	 ecx, ecx
  0004e	7f d0		 jg	 SHORT $LL4@upper_boun
  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx
$LN26@upper_boun:

; 7082 :     // find first element that _Val is before
; 7083 :     return _STD upper_bound(_First, _Last, _Val, less<>{});
; 7084 : }

  00052	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00055	89 38		 mov	 DWORD PTR [eax], edi
  00057	5f		 pop	 edi
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
??$upper_bound@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@MJ@std@@@std@@@std@@@std@@U?$pair@MJ@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@MJ@std@@@std@@@std@@@0@V10@0ABU?$pair@MJ@0@@Z ENDP ; std::upper_bound<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::pair<float,long> > > >,std::pair<float,long> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
;	COMDAT ?__SoftwareTransformPatch_RenderPatchNone@CMapOutdoor@@IAEXAAUSoftwareTransformPatch_SRenderState@1@JGW4_D3DPRIMITIVETYPE@@@Z
_TEXT	SEGMENT
_pTerrain$ = -4720					; size = 4
_akDstVertex$ = -4716					; size = 4
_this$GSCopy$1$ = -4712					; size = 4
_fScreenHalfWidth$1$ = -4708				; size = 4
_fScreenHalfHeight$1$ = -4704				; size = 4
_ucTerrainNum$ = -4696					; size = 1
tv498 = -4696						; size = 4
_m4Frustum$ = -4692					; size = 64
_akTransVertex$ = -4628					; size = 4624
__$ArrayPad$ = -4					; size = 4
_rkTPRS$ = 8						; size = 4
_patchnum$ = 12						; size = 4
_wPrimitiveCount$ = 16					; size = 2
_ePrimitiveType$ = 20					; size = 4
?__SoftwareTransformPatch_RenderPatchNone@CMapOutdoor@@IAEXAAUSoftwareTransformPatch_SRenderState@1@JGW4_D3DPRIMITIVETYPE@@@Z PROC ; CMapOutdoor::__SoftwareTransformPatch_RenderPatchNone, COMDAT
; _this$ = ecx

; 270  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 70 12 00 00	 mov	 eax, 4720		; 00001270H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00017	8b 45 0c	 mov	 eax, DWORD PTR _patchnum$[ebp]
  0001a	53		 push	 ebx
  0001b	8b d9		 mov	 ebx, ecx
  0001d	56		 push	 esi

; 271  : 	assert(NULL!=m_pTerrainPatchProxyList && "CMapOutdoor::__SoftwareTransformPatch_RenderPatchNone");
; 272  : 
; 273  : 	CTerrainPatchProxy * pTerrainPatchProxy = &m_pTerrainPatchProxyList[patchnum];

  0001e	8d 14 c5 00 00
	00 00		 lea	 edx, DWORD PTR [eax*8]
  00025	89 9d 98 ed ff
	ff		 mov	 DWORD PTR _this$GSCopy$1$[ebp], ebx
  0002b	2b d0		 sub	 edx, eax
  0002d	8b 43 64	 mov	 eax, DWORD PTR [ebx+100]

; 274  : 
; 275  : 	if (!pTerrainPatchProxy->isUsed())

  00030	80 7c 90 04 00	 cmp	 BYTE PTR [eax+edx*4+4], 0
  00035	57		 push	 edi
  00036	8b 7d 08	 mov	 edi, DWORD PTR _rkTPRS$[ebp]
  00039	8d 34 90	 lea	 esi, DWORD PTR [eax+edx*4]
  0003c	0f 84 a1 01 00
	00		 je	 $LN1@SoftwareTr

; 276  : 		return;
; 277  : 
; 278  : 	long sPatchNum = pTerrainPatchProxy->GetPatchNum();
; 279  : 	if (sPatchNum < 0)

  00042	66 83 7e 06 00	 cmp	 WORD PTR [esi+6], 0
  00047	0f 8c 96 01 00
	00		 jl	 $LN1@SoftwareTr

; 280  : 		return;
; 281  : 
; 282  : 	BYTE ucTerrainNum = pTerrainPatchProxy->GetTerrainNum();

  0004d	8a 46 08	 mov	 al, BYTE PTR [esi+8]
  00050	88 85 a8 ed ff
	ff		 mov	 BYTE PTR _ucTerrainNum$[ebp], al

; 283  : 	if (0xFF == ucTerrainNum)

  00056	3c ff		 cmp	 al, 255			; 000000ffH
  00058	0f 84 85 01 00
	00		 je	 $LN1@SoftwareTr

; 284  : 		return;
; 285  : 
; 286  : 	CTerrain * pTerrain;
; 287  : 	if (!GetTerrainPointer(ucTerrainNum, &pTerrain))

  0005e	8d 85 90 ed ff
	ff		 lea	 eax, DWORD PTR _pTerrain$[ebp]
  00064	50		 push	 eax
  00065	ff b5 a8 ed ff
	ff		 push	 DWORD PTR _ucTerrainNum$[ebp]
  0006b	e8 00 00 00 00	 call	 ?GetTerrainPointer@CMapOutdoor@@QAEHEPAPAVCTerrain@@@Z ; CMapOutdoor::GetTerrainPointer
  00070	85 c0		 test	 eax, eax
  00072	0f 84 6b 01 00
	00		 je	 $LN1@SoftwareTr

; 288  : 		return;
; 289  : 
; 290  : 	WORD wCoordX, wCoordY;
; 291  : 	pTerrain->GetCoordinate(&wCoordX, &wCoordY);
; 292  : 
; 293  : 	SoftwareTransformPatch_SSourceVertex* akSrcVertex=pTerrainPatchProxy->SoftwareTransformPatch_GetTerrainVertexDataPtr();

  00078	8b ce		 mov	 ecx, esi
  0007a	e8 00 00 00 00	 call	 ?SoftwareTransformPatch_GetTerrainVertexDataPtr@CTerrainPatchProxy@@QAEPAUSoftwareTransformPatch_SSourceVertex@@XZ ; CTerrainPatchProxy::SoftwareTransformPatch_GetTerrainVertexDataPtr

; 294  : 	if (!akSrcVertex)

  0007f	85 c0		 test	 eax, eax
  00081	0f 84 5c 01 00
	00		 je	 $LN1@SoftwareTr

; 295  : 		return;
; 296  : 
; 297  : 	float fScreenHalfWidth=rkTPRS.m_fScreenHalfWidth;

  00087	f3 0f 10 87 7c
	01 00 00	 movss	 xmm0, DWORD PTR [edi+380]
  0008f	8b d8		 mov	 ebx, eax
  00091	f3 0f 11 85 9c
	ed ff ff	 movss	 DWORD PTR _fScreenHalfWidth$1$[ebp], xmm0

; 298  : 	float fScreenHalfHeight=rkTPRS.m_fScreenHalfHeight;

  00099	f3 0f 10 87 80
	01 00 00	 movss	 xmm0, DWORD PTR [edi+384]
  000a1	f3 0f 11 85 a0
	ed ff ff	 movss	 DWORD PTR _fScreenHalfHeight$1$[ebp], xmm0

; 299  : 
; 300  : 	D3DXMATRIX m4Frustum=rkTPRS.m_m4Frustum;

  000a9	0f 10 47 40	 movups	 xmm0, XMMWORD PTR [edi+64]

; 301  : 
; 302  : 	SoftwareTransformPatch_STVertex akTransVertex[CTerrainPatch::TERRAIN_VERTEX_COUNT];
; 303  : 
; 304  : 	D3DXVECTOR4* akPosition=(D3DXVECTOR4*)akTransVertex;

  000ad	c7 85 a8 ed ff
	ff 21 01 00 00	 mov	 DWORD PTR tv498[ebp], 289 ; 00000121H
  000b7	0f 11 85 ac ed
	ff ff		 movups	 XMMWORD PTR _m4Frustum$[ebp], xmm0
  000be	0f 10 47 50	 movups	 xmm0, XMMWORD PTR [edi+80]
  000c2	0f 11 85 bc ed
	ff ff		 movups	 XMMWORD PTR _m4Frustum$[ebp+16], xmm0
  000c9	0f 10 47 60	 movups	 xmm0, XMMWORD PTR [edi+96]
  000cd	0f 11 85 cc ed
	ff ff		 movups	 XMMWORD PTR _m4Frustum$[ebp+32], xmm0
  000d4	0f 10 47 70	 movups	 xmm0, XMMWORD PTR [edi+112]
  000d8	8d bd f4 ed ff
	ff		 lea	 edi, DWORD PTR _akTransVertex$[ebp+8]
  000de	0f 11 85 dc ed
	ff ff		 movups	 XMMWORD PTR _m4Frustum$[ebp+48], xmm0
$LL4@SoftwareTr:

; 305  : 	D3DXVECTOR4* pkPosition;
; 306  : 	for (UINT uIndex=0; uIndex!=CTerrainPatch::TERRAIN_VERTEX_COUNT; ++uIndex)
; 307  : 	{
; 308  : 		pkPosition=akPosition+uIndex;
; 309  : 		D3DXVec3Transform(pkPosition, &akSrcVertex[uIndex].kPosition, &m4Frustum);

  000e5	8d 85 ac ed ff
	ff		 lea	 eax, DWORD PTR _m4Frustum$[ebp]
  000eb	50		 push	 eax
  000ec	53		 push	 ebx
  000ed	8d 77 f8	 lea	 esi, DWORD PTR [edi-8]
  000f0	56		 push	 esi
  000f1	e8 00 00 00 00	 call	 _D3DXVec3Transform@12

; 310  : 		pkPosition->w=1.0f/pkPosition->w;

  000f6	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@3f800000
  000fe	83 c3 1c	 add	 ebx, 28			; 0000001cH
  00101	0f 28 ca	 movaps	 xmm1, xmm2
  00104	f3 0f 5e 4f 04	 divss	 xmm1, DWORD PTR [edi+4]

; 311  : 		pkPosition->z*=pkPosition->w;

  00109	0f 28 c1	 movaps	 xmm0, xmm1
  0010c	f3 0f 11 4f 04	 movss	 DWORD PTR [edi+4], xmm1
  00111	f3 0f 59 07	 mulss	 xmm0, DWORD PTR [edi]
  00115	f3 0f 11 07	 movss	 DWORD PTR [edi], xmm0

; 312  : 		pkPosition->y=(pkPosition->y*pkPosition->w-1.0f)*fScreenHalfHeight;

  00119	0f 28 c1	 movaps	 xmm0, xmm1
  0011c	f3 0f 59 47 fc	 mulss	 xmm0, DWORD PTR [edi-4]

; 313  : 		pkPosition->x=(pkPosition->x*pkPosition->w+1.0f)*fScreenHalfWidth;

  00121	f3 0f 59 0e	 mulss	 xmm1, DWORD PTR [esi]
  00125	f3 0f 5c c2	 subss	 xmm0, xmm2
  00129	f3 0f 58 ca	 addss	 xmm1, xmm2
  0012d	f3 0f 59 85 a0
	ed ff ff	 mulss	 xmm0, DWORD PTR _fScreenHalfHeight$1$[ebp]
  00135	f3 0f 59 8d 9c
	ed ff ff	 mulss	 xmm1, DWORD PTR _fScreenHalfWidth$1$[ebp]
  0013d	f3 0f 11 47 fc	 movss	 DWORD PTR [edi-4], xmm0
  00142	83 c7 10	 add	 edi, 16			; 00000010H
  00145	83 ad a8 ed ff
	ff 01		 sub	 DWORD PTR tv498[ebp], 1
  0014c	f3 0f 11 0e	 movss	 DWORD PTR [esi], xmm1
  00150	75 93		 jne	 SHORT $LL4@SoftwareTr

; 314  : 	}
; 315  : 
; 316  : 
; 317  : 	IDirect3DVertexBuffer8* pkVB=m_kSTPD.m_pkVBNone[m_kSTPD.m_dwNonePos++];

  00152	8b 9d 98 ed ff
	ff		 mov	 ebx, DWORD PTR _this$GSCopy$1$[ebp]
  00158	8b 83 04 0a 00
	00		 mov	 eax, DWORD PTR [ebx+2564]
  0015e	8b b4 83 e0 09
	00 00		 mov	 esi, DWORD PTR [ebx+eax*4+2528]
  00165	40		 inc	 eax

; 318  : 	m_kSTPD.m_dwNonePos%=SoftwareTransformPatch_SData::NONE_VB_NUM;

  00166	83 e0 07	 and	 eax, 7
  00169	89 83 04 0a 00
	00		 mov	 DWORD PTR [ebx+2564], eax

; 319  : 	if (!pkVB)

  0016f	85 f6		 test	 esi, esi
  00171	74 70		 je	 SHORT $LN1@SoftwareTr

; 320  : 		return;
; 321  : 
; 322  : 	DWORD dwVBSize=sizeof(SoftwareTransformPatch_STVertex)*CTerrainPatch::TERRAIN_VERTEX_COUNT;
; 323  : 	SoftwareTransformPatch_STVertex* akDstVertex;
; 324  : 	if (FAILED(

  00173	8b 06		 mov	 eax, DWORD PTR [esi]
  00175	8d 8d 94 ed ff
	ff		 lea	 ecx, DWORD PTR _akDstVertex$[ebp]
  0017b	68 00 20 00 00	 push	 8192			; 00002000H
  00180	51		 push	 ecx
  00181	68 10 12 00 00	 push	 4624			; 00001210H
  00186	6a 00		 push	 0
  00188	56		 push	 esi
  00189	ff 50 2c	 call	 DWORD PTR [eax+44]
  0018c	85 c0		 test	 eax, eax
  0018e	78 53		 js	 SHORT $LN1@SoftwareTr

; 325  : 		pkVB->Lock(0, dwVBSize, (BYTE**)&akDstVertex, D3DLOCK_DISCARD)
; 326  : 	)) return;
; 327  : 
; 328  : 	memcpy(akDstVertex, akTransVertex, dwVBSize);

  00190	68 10 12 00 00	 push	 4624			; 00001210H
  00195	8d 85 ec ed ff
	ff		 lea	 eax, DWORD PTR _akTransVertex$[ebp]
  0019b	50		 push	 eax
  0019c	ff b5 94 ed ff
	ff		 push	 DWORD PTR _akDstVertex$[ebp]
  001a2	e8 00 00 00 00	 call	 _memcpy

; 329  : 
; 330  : 	pkVB->Unlock();

  001a7	8b 06		 mov	 eax, DWORD PTR [esi]
  001a9	83 c4 0c	 add	 esp, 12			; 0000000cH
  001ac	56		 push	 esi
  001ad	ff 50 30	 call	 DWORD PTR [eax+48]

; 331  : 
; 332  : 	STATEMANAGER.SetStreamSource(0, pkVB, sizeof(SoftwareTransformPatch_STVertex));

  001b0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001b6	6a 10		 push	 16			; 00000010H
  001b8	56		 push	 esi
  001b9	6a 00		 push	 0
  001bb	e8 00 00 00 00	 call	 ?SetStreamSource@CStateManager@@QAEXIPAUIDirect3DVertexBuffer8@@I@Z ; CStateManager::SetStreamSource

; 333  : 	STATEMANAGER.DrawIndexedPrimitive(ePrimitiveType, 0, m_iPatchTerrainVertexCount, 0, wPrimitiveCount);

  001c0	0f b7 75 10	 movzx	 esi, WORD PTR _wPrimitiveCount$[ebp]
  001c4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001ca	56		 push	 esi
  001cb	6a 00		 push	 0
  001cd	ff b3 a0 09 00
	00		 push	 DWORD PTR [ebx+2464]
  001d3	6a 00		 push	 0
  001d5	ff 75 14	 push	 DWORD PTR _ePrimitiveType$[ebp]
  001d8	e8 00 00 00 00	 call	 ?DrawIndexedPrimitive@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IIII@Z ; CStateManager::DrawIndexedPrimitive

; 334  : 	ms_faceCount += wPrimitiveCount;

  001dd	01 35 00 00 00
	00		 add	 DWORD PTR ?ms_faceCount@CGraphicBase@@1KA, esi ; CGraphicBase::ms_faceCount
$LN1@SoftwareTr:

; 335  : }

  001e3	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001e6	5f		 pop	 edi
  001e7	5e		 pop	 esi
  001e8	33 cd		 xor	 ecx, ebp
  001ea	5b		 pop	 ebx
  001eb	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001f0	8b e5		 mov	 esp, ebp
  001f2	5d		 pop	 ebp
  001f3	c2 10 00	 ret	 16			; 00000010H
?__SoftwareTransformPatch_RenderPatchNone@CMapOutdoor@@IAEXAAUSoftwareTransformPatch_SRenderState@1@JGW4_D3DPRIMITIVETYPE@@@Z ENDP ; CMapOutdoor::__SoftwareTransformPatch_RenderPatchNone
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
; File C:\Marty 5.5\Src-Client\Client\GameLib\AreaTerrain.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
; File C:\Marty 5.5\Src-Client\Client\GameLib\AreaTerrain.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
; File C:\Marty 5.5\Src-Client\Client\PRTerrainLib\Terrain.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
; File C:\Marty 5.5\Src-Client\Client\PRTerrainLib\Terrain.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
; File C:\Marty 5.5\Src-Client\Client\PRTerrainLib\Terrain.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
; File C:\Marty 5.5\Src-Client\Client\PRTerrainLib\Terrain.h
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
;	COMDAT ?__SoftwareTransformPatch_RenderPatchSplat@CMapOutdoor@@IAEXAAUSoftwareTransformPatch_SRenderState@1@JGW4_D3DPRIMITIVETYPE@@_N@Z
_TEXT	SEGMENT
_iPrevRenderedSplatNum$1$ = -16224			; size = 4
_sPatchNum$1$ = -16220					; size = 4
tv812 = -16216						; size = 4
_rkTPRS$GSCopy$1$ = -16212				; size = 4
tv811 = -16208						; size = 4
tv824 = -16204						; size = 4
$T1 = -16204						; size = 4
_pTerrain$ = -16200					; size = 4
_pTerrain$1$ = -16196					; size = 4
_ucTerrainNum$ = -16196					; size = 1
_isFirst$1$ = -16189					; size = 1
_akTransVertex$ = -16188				; size = 16184
__$ArrayPad$ = -4					; size = 4
_rkTPRS$ = 8						; size = 4
_patchnum$ = 12						; size = 4
_wPrimitiveCount$ = 16					; size = 2
_ePrimitiveType$ = 20					; size = 4
_isFogEnable$ = 24					; size = 1
?__SoftwareTransformPatch_RenderPatchSplat@CMapOutdoor@@IAEXAAUSoftwareTransformPatch_SRenderState@1@JGW4_D3DPRIMITIVETYPE@@_N@Z PROC ; CMapOutdoor::__SoftwareTransformPatch_RenderPatchSplat, COMDAT
; _this$ = ecx

; 133  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 60 3f 00 00	 mov	 eax, 16224		; 00003f60H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00017	8b 45 0c	 mov	 eax, DWORD PTR _patchnum$[ebp]
  0001a	56		 push	 esi
  0001b	8b f1		 mov	 esi, ecx
  0001d	8b 4d 08	 mov	 ecx, DWORD PTR _rkTPRS$[ebp]
  00020	57		 push	 edi

; 134  : 	assert(NULL!=m_pTerrainPatchProxyList && "CMapOutdoor::__SoftwareTransformPatch_RenderPatchSplat");
; 135  : 
; 136  : 	CTerrainPatchProxy * pTerrainPatchProxy = &m_pTerrainPatchProxyList[patchnum];

  00021	8d 14 c5 00 00
	00 00		 lea	 edx, DWORD PTR [eax*8]
  00028	89 8d ac c0 ff
	ff		 mov	 DWORD PTR _rkTPRS$GSCopy$1$[ebp], ecx
  0002e	2b d0		 sub	 edx, eax
  00030	8b 46 64	 mov	 eax, DWORD PTR [esi+100]

; 137  : 
; 138  : 	if (!pTerrainPatchProxy->isUsed())

  00033	80 7c 90 04 00	 cmp	 BYTE PTR [eax+edx*4+4], 0
  00038	8d 3c 90	 lea	 edi, DWORD PTR [eax+edx*4]
  0003b	0f 84 e1 03 00
	00		 je	 $LN1@SoftwareTr

; 139  : 		return;
; 140  : 
; 141  : 	bool isDynamicShadow = pTerrainPatchProxy->IsIn(rkTPRS.m_v3Player, 3000.0f);

  00041	53		 push	 ebx
  00042	51		 push	 ecx
  00043	8d 81 6c 01 00
	00		 lea	 eax, DWORD PTR [ecx+364]
  00049	c7 04 24 00 80
	3b 45		 mov	 DWORD PTR [esp], 1161527296 ; 453b8000H
  00050	50		 push	 eax
  00051	8b cf		 mov	 ecx, edi
  00053	e8 00 00 00 00	 call	 ?IsIn@CTerrainPatchProxy@@QAE_NABUD3DXVECTOR3@@M@Z ; CTerrainPatchProxy::IsIn

; 142  : 
; 143  : 	if (!m_bDrawChrShadow)
; 144  : 		isDynamicShadow = false;
; 145  : 
; 146  : 	long sPatchNum = pTerrainPatchProxy->GetPatchNum();

  00058	33 c9		 xor	 ecx, ecx
  0005a	0f b6 c0	 movzx	 eax, al
  0005d	38 8e 32 01 00
	00		 cmp	 BYTE PTR [esi+306], cl
  00063	0f 45 c8	 cmovne	 ecx, eax
  00066	0f bf 47 06	 movsx	 eax, WORD PTR [edi+6]
  0006a	89 85 a4 c0 ff
	ff		 mov	 DWORD PTR _sPatchNum$1$[ebp], eax
  00070	8a d9		 mov	 bl, cl
  00072	89 9d a8 c0 ff
	ff		 mov	 DWORD PTR tv812[ebp], ebx

; 147  : 
; 148  : 	if (sPatchNum < 0)

  00078	85 c0		 test	 eax, eax
  0007a	0f 88 a1 03 00
	00		 js	 $LN121@SoftwareTr

; 149  : 		return;
; 150  : 
; 151  : 	BYTE ucTerrainNum = pTerrainPatchProxy->GetTerrainNum();

  00080	8a 47 08	 mov	 al, BYTE PTR [edi+8]
  00083	88 85 bc c0 ff
	ff		 mov	 BYTE PTR _ucTerrainNum$[ebp], al

; 152  : 
; 153  : 	if (0xFF == ucTerrainNum)

  00089	3c ff		 cmp	 al, 255			; 000000ffH
  0008b	0f 84 90 03 00
	00		 je	 $LN121@SoftwareTr

; 154  : 		return;
; 155  : 
; 156  : 	CTerrain * pTerrain;
; 157  : 	if (!GetTerrainPointer(ucTerrainNum, &pTerrain))

  00091	8d 85 b8 c0 ff
	ff		 lea	 eax, DWORD PTR _pTerrain$[ebp]
  00097	8b ce		 mov	 ecx, esi
  00099	50		 push	 eax
  0009a	ff b5 bc c0 ff
	ff		 push	 DWORD PTR _ucTerrainNum$[ebp]
  000a0	e8 00 00 00 00	 call	 ?GetTerrainPointer@CMapOutdoor@@QAEHEPAPAVCTerrain@@@Z ; CMapOutdoor::GetTerrainPointer
  000a5	85 c0		 test	 eax, eax
  000a7	0f 84 74 03 00
	00		 je	 $LN121@SoftwareTr
; File C:\Marty 5.5\Src-Client\Client\GameLib\AreaTerrain.h

; 92   : 			*usCoordX = m_wX;

  000ad	8b 85 b8 c0 ff
	ff		 mov	 eax, DWORD PTR _pTerrain$[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp

; 166  : 	if (!__SoftwareTransformPatch_SetTransform(rkTPRS, akTransVertex, *pTerrainPatchProxy, wCoordX, wCoordY, isFogEnable, isDynamicShadow))

  000b3	53		 push	 ebx
  000b4	8b 5d 18	 mov	 ebx, DWORD PTR _isFogEnable$[ebp]
  000b7	53		 push	 ebx
; File C:\Marty 5.5\Src-Client\Client\GameLib\AreaTerrain.h

; 92   : 			*usCoordX = m_wX;

  000b8	0f b7 88 6c a5
	06 00		 movzx	 ecx, WORD PTR [eax+435564]
  000bf	89 85 bc c0 ff
	ff		 mov	 DWORD PTR _pTerrain$1$[ebp], eax

; 93   : 			*usCoordY = m_wY;

  000c5	0f b7 80 6e a5
	06 00		 movzx	 eax, WORD PTR [eax+435566]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp

; 166  : 	if (!__SoftwareTransformPatch_SetTransform(rkTPRS, akTransVertex, *pTerrainPatchProxy, wCoordX, wCoordY, isFogEnable, isDynamicShadow))

  000cc	50		 push	 eax
  000cd	51		 push	 ecx
  000ce	57		 push	 edi
  000cf	8d 85 c4 c0 ff
	ff		 lea	 eax, DWORD PTR _akTransVertex$[ebp]
  000d5	8b ce		 mov	 ecx, esi
  000d7	50		 push	 eax
  000d8	ff b5 ac c0 ff
	ff		 push	 DWORD PTR _rkTPRS$GSCopy$1$[ebp]
  000de	e8 00 00 00 00	 call	 ?__SoftwareTransformPatch_SetTransform@CMapOutdoor@@IAE_NAAUSoftwareTransformPatch_SRenderState@1@PAUSoftwareTransformPatch_STLVertex@1@AAVCTerrainPatchProxy@@II_N3@Z ; CMapOutdoor::__SoftwareTransformPatch_SetTransform
  000e3	84 c0		 test	 al, al
  000e5	0f 84 36 03 00
	00		 je	 $LN121@SoftwareTr

; 167  : 		return;
; 168  : 
; 169  : 	if (!__SoftwareTransformPatch_SetSplatStream(akTransVertex))

  000eb	8d 85 c4 c0 ff
	ff		 lea	 eax, DWORD PTR _akTransVertex$[ebp]
  000f1	8b ce		 mov	 ecx, esi
  000f3	50		 push	 eax
  000f4	e8 00 00 00 00	 call	 ?__SoftwareTransformPatch_SetSplatStream@CMapOutdoor@@IAE_NPAUSoftwareTransformPatch_STLVertex@1@@Z ; CMapOutdoor::__SoftwareTransformPatch_SetSplatStream
  000f9	84 c0		 test	 al, al
  000fb	0f 84 20 03 00
	00		 je	 $LN121@SoftwareTr

; 170  : 		return;
; 171  : 
; 172  : 	if (isFogEnable)

  00101	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00107	6a 02		 push	 2
  00109	6a 02		 push	 2
  0010b	6a 00		 push	 0
  0010d	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState
  00112	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00118	84 db		 test	 bl, bl
  0011a	74 0f		 je	 SHORT $LN12@SoftwareTr

; 173  : 	{
; 174  : 		STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG1, D3DTA_TEXTURE);
; 175  : 		STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG2, D3DTA_TFACTOR);

  0011c	6a 03		 push	 3
  0011e	6a 03		 push	 3
  00120	6a 00		 push	 0
  00122	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 176  : 		STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP,   D3DTOP_BLENDDIFFUSEALPHA);

  00127	6a 0c		 push	 12			; 0000000cH

; 177  : 	}

  00129	eb 0d		 jmp	 SHORT $LN122@SoftwareTr
$LN12@SoftwareTr:

; 178  : 	else
; 179  : 	{
; 180  : 		STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG1, D3DTA_TEXTURE);
; 181  : 		STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG2, D3DTA_DIFFUSE);

  0012b	6a 00		 push	 0
  0012d	6a 03		 push	 3
  0012f	6a 00		 push	 0
  00131	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 182  : 		STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP,   D3DTOP_SELECTARG1);

  00136	6a 02		 push	 2
$LN122@SoftwareTr:

; 185  : 	int iPrevRenderedSplatNum=m_iRenderedSplatNum;

  00138	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0013e	6a 01		 push	 1
  00140	6a 00		 push	 0
  00142	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState
  00147	8b 86 88 09 00
	00		 mov	 eax, DWORD PTR [esi+2440]

; 188  : 	for (DWORD j = 1; j < pTerrain->GetNumTextures(); ++j)

  0014d	bf 01 00 00 00	 mov	 edi, 1
; File C:\Marty 5.5\Src-Client\Client\PRTerrainLib\Terrain.h

; 87   : 		DWORD					GetNumTextures()						{ return ms_pTextureSet->GetTextureCount(); }

  00152	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_pTextureSet@CTerrainImpl@@1PAVCTextureSet@@A ; CTerrainImpl::ms_pTextureSet
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp

; 185  : 	int iPrevRenderedSplatNum=m_iRenderedSplatNum;

  00158	89 85 a0 c0 ff
	ff		 mov	 DWORD PTR _iPrevRenderedSplatNum$1$[ebp], eax

; 186  : 
; 187  : 	bool isFirst=true;

  0015e	c6 85 c3 c0 ff
	ff 01		 mov	 BYTE PTR _isFirst$1$[ebp], 1
; File C:\Marty 5.5\Src-Client\Client\PRTerrainLib\Terrain.h

; 87   : 		DWORD					GetNumTextures()						{ return ms_pTextureSet->GetTextureCount(); }

  00165	e8 00 00 00 00	 call	 ?GetTextureCount@CTextureSet@@QAEKXZ ; CTextureSet::GetTextureCount
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp

; 188  : 	for (DWORD j = 1; j < pTerrain->GetNumTextures(); ++j)

  0016a	8b 5d 14	 mov	 ebx, DWORD PTR _ePrimitiveType$[ebp]
  0016d	3b c7		 cmp	 eax, edi
  0016f	0f 86 82 01 00
	00		 jbe	 $LN94@SoftwareTr

; 185  : 	int iPrevRenderedSplatNum=m_iRenderedSplatNum;

  00175	8b 8d bc c0 ff
	ff		 mov	 ecx, DWORD PTR _pTerrain$1$[ebp]
  0017b	8d 99 50 95 04
	00		 lea	 ebx, DWORD PTR [ecx+300368]
  00181	89 9d b0 c0 ff
	ff		 mov	 DWORD PTR tv811[ebp], ebx
  00187	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL4@SoftwareTr:

; 189  : 	{
; 190  : 		TTerainSplat & rSplat = rTerrainSplatPatch.Splats[j];
; 191  : 
; 192  : 		if (!rSplat.Active)

  00190	83 7b f8 00	 cmp	 DWORD PTR [ebx-8], 0
  00194	0f 84 37 01 00
	00		 je	 $LN2@SoftwareTr

; 193  : 			continue;
; 194  : 
; 195  : 		if (rTerrainSplatPatch.PatchTileCount[sPatchNum][j] == 0)

  0019a	8b 85 a4 c0 ff
	ff		 mov	 eax, DWORD PTR _sPatchNum$1$[ebp]
  001a0	40		 inc	 eax
  001a1	c1 e0 08	 shl	 eax, 8
  001a4	03 c7		 add	 eax, edi
  001a6	83 bc 81 3c 91
	03 00 00	 cmp	 DWORD PTR [ecx+eax*4+233788], 0
  001ae	0f 84 1d 01 00
	00		 je	 $LN2@SoftwareTr

; 196  : 			continue;
; 197  : 
; 198  : 		const TTerrainTexture & rTexture = m_TextureSet.GetTexture(j);

  001b4	57		 push	 edi
  001b5	8d 8e 7c 02 00
	00		 lea	 ecx, DWORD PTR [esi+636]
  001bb	e8 00 00 00 00	 call	 ?GetTexture@CTextureSet@@QAEAAUSTerrainTexture@@K@Z ; CTextureSet::GetTexture

; 199  : 
; 200  : 		if (isFirst)

  001c0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001c6	83 c0 18	 add	 eax, 24			; 00000018H
  001c9	80 bd c3 c0 ff
	ff 00		 cmp	 BYTE PTR _isFirst$1$[ebp], 0
  001d0	89 85 b4 c0 ff
	ff		 mov	 DWORD PTR tv824[ebp], eax
  001d6	74 66		 je	 SHORT $LN16@SoftwareTr

; 201  : 		{
; 202  : 			STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAOP,   D3DTOP_SELECTARG2);

  001d8	6a 03		 push	 3
  001da	6a 04		 push	 4
  001dc	6a 01		 push	 1
  001de	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 203  : 			STATEMANAGER.SetTexture(0, rTexture.pd3dTexture);

  001e3	8b 85 b4 c0 ff
	ff		 mov	 eax, DWORD PTR tv824[ebp]
  001e9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001ef	ff 30		 push	 DWORD PTR [eax]
  001f1	6a 00		 push	 0
  001f3	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 204  : 			STATEMANAGER.SetTexture(1, rSplat.pd3dTexture);

  001f8	ff 33		 push	 DWORD PTR [ebx]
  001fa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00200	6a 01		 push	 1
  00202	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 205  : 			STATEMANAGER.DrawIndexedPrimitive(ePrimitiveType, 0, m_iPatchTerrainVertexCount, 0, wPrimitiveCount);

  00207	0f b7 45 10	 movzx	 eax, WORD PTR _wPrimitiveCount$[ebp]
  0020b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00211	50		 push	 eax
  00212	6a 00		 push	 0
  00214	ff b6 a0 09 00
	00		 push	 DWORD PTR [esi+2464]
  0021a	6a 00		 push	 0
  0021c	ff 75 14	 push	 DWORD PTR _ePrimitiveType$[ebp]
  0021f	e8 00 00 00 00	 call	 ?DrawIndexedPrimitive@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IIII@Z ; CStateManager::DrawIndexedPrimitive

; 206  : 			STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAOP,   D3DTOP_SELECTARG1);

  00224	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0022a	6a 02		 push	 2
  0022c	6a 04		 push	 4
  0022e	6a 01		 push	 1
  00230	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 207  : 			isFirst=false;

  00235	c6 85 c3 c0 ff
	ff 00		 mov	 BYTE PTR _isFirst$1$[ebp], 0

; 208  : 		}

  0023c	eb 35		 jmp	 SHORT $LN17@SoftwareTr
$LN16@SoftwareTr:

; 209  : 		else
; 210  : 		{
; 211  : 			STATEMANAGER.SetTexture(0, rTexture.pd3dTexture);

  0023e	ff 30		 push	 DWORD PTR [eax]
  00240	6a 00		 push	 0
  00242	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 212  : 			STATEMANAGER.SetTexture(1, rSplat.pd3dTexture);

  00247	ff 33		 push	 DWORD PTR [ebx]
  00249	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0024f	6a 01		 push	 1
  00251	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 213  : 			STATEMANAGER.DrawIndexedPrimitive(ePrimitiveType, 0, m_iPatchTerrainVertexCount, 0, wPrimitiveCount);

  00256	0f b7 45 10	 movzx	 eax, WORD PTR _wPrimitiveCount$[ebp]
  0025a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00260	50		 push	 eax
  00261	6a 00		 push	 0
  00263	ff b6 a0 09 00
	00		 push	 DWORD PTR [esi+2464]
  00269	6a 00		 push	 0
  0026b	ff 75 14	 push	 DWORD PTR _ePrimitiveType$[ebp]
  0026e	e8 00 00 00 00	 call	 ?DrawIndexedPrimitive@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IIII@Z ; CStateManager::DrawIndexedPrimitive
$LN17@SoftwareTr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00273	57		 push	 edi
  00274	ff b6 94 09 00
	00		 push	 DWORD PTR [esi+2452]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1796 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  0027a	8d 9e 90 09 00
	00		 lea	 ebx, DWORD PTR [esi+2448]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5814 :             const auto _Result    = __std_find_trivial(_First_ptr, _To_address(_Last), _Val);

  00280	ff 33		 push	 DWORD PTR [ebx]
  00282	e8 00 00 00 00	 call	 ??$__std_find_trivial@HH@@YAPAHPAH0H@Z ; __std_find_trivial<int,int>
  00287	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0028a	3b 86 94 09 00
	00		 cmp	 eax, DWORD PTR [esi+2452]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp

; 217  : 		if (aIterator == m_RenderedTextureNumVector.end())

  00290	75 25		 jne	 SHORT $LN79@SoftwareTr
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  00292	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp

; 218  : 			m_RenderedTextureNumVector.push_back(j);

  00295	89 bd b4 c0 ff
	ff		 mov	 DWORD PTR $T1[ebp], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

  0029b	3b 43 08	 cmp	 eax, DWORD PTR [ebx+8]
  0029e	74 08		 je	 SHORT $LN80@SoftwareTr

; 797  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  002a0	89 38		 mov	 DWORD PTR [eax], edi

; 798  :         } else {
; 799  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 800  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 801  :             _ASAN_VECTOR_RELEASE_GUARD;
; 802  :         }
; 803  : 
; 804  :         _Orphan_range(_Mylast, _Mylast);
; 805  :         _Ty& _Result = *_Mylast;
; 806  :         ++_Mylast;

  002a2	83 43 04 04	 add	 DWORD PTR [ebx+4], 4

; 782  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  002a6	eb 0f		 jmp	 SHORT $LN79@SoftwareTr
$LN80@SoftwareTr:

; 783  :         }
; 784  : 
; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  002a8	8d 8d b4 c0 ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  002ae	51		 push	 ecx
  002af	50		 push	 eax
  002b0	8b cb		 mov	 ecx, ebx
  002b2	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@H@?$vector@HV?$allocator@H@std@@@std@@AAEPAHQAH$$QAH@Z ; std::vector<int,std::allocator<int> >::_Emplace_reallocate<int>
$LN79@SoftwareTr:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp

; 219  : 		++m_iRenderedSplatNum;

  002b7	ff 86 88 09 00
	00		 inc	 DWORD PTR [esi+2440]
  002bd	8b 86 88 09 00
	00		 mov	 eax, DWORD PTR [esi+2440]

; 220  : 		if (m_iRenderedSplatNum >= m_iSplatLimit)

  002c3	3b 86 9c 09 00
	00		 cmp	 eax, DWORD PTR [esi+2460]
  002c9	7d 29		 jge	 SHORT $LN102@SoftwareTr
  002cb	8b 9d b0 c0 ff
	ff		 mov	 ebx, DWORD PTR tv811[ebp]
$LN2@SoftwareTr:
; File C:\Marty 5.5\Src-Client\Client\PRTerrainLib\Terrain.h

; 87   : 		DWORD					GetNumTextures()						{ return ms_pTextureSet->GetTextureCount(); }

  002d1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_pTextureSet@CTerrainImpl@@1PAVCTextureSet@@A ; CTerrainImpl::ms_pTextureSet
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp

; 188  : 	for (DWORD j = 1; j < pTerrain->GetNumTextures(); ++j)

  002d7	83 c3 0c	 add	 ebx, 12			; 0000000cH
  002da	47		 inc	 edi
  002db	89 9d b0 c0 ff
	ff		 mov	 DWORD PTR tv811[ebp], ebx
; File C:\Marty 5.5\Src-Client\Client\PRTerrainLib\Terrain.h

; 87   : 		DWORD					GetNumTextures()						{ return ms_pTextureSet->GetTextureCount(); }

  002e1	e8 00 00 00 00	 call	 ?GetTextureCount@CTextureSet@@QAEKXZ ; CTextureSet::GetTextureCount
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp

; 188  : 	for (DWORD j = 1; j < pTerrain->GetNumTextures(); ++j)

  002e6	8b 8d bc c0 ff
	ff		 mov	 ecx, DWORD PTR _pTerrain$1$[ebp]
  002ec	3b f8		 cmp	 edi, eax
  002ee	0f 82 9c fe ff
	ff		 jb	 $LL4@SoftwareTr
$LN102@SoftwareTr:
  002f4	8b 5d 14	 mov	 ebx, DWORD PTR _ePrimitiveType$[ebp]
$LN94@SoftwareTr:

; 221  : 			break;
; 222  : 	}
; 223  : 
; 224  : 	if (m_bDrawShadow)

  002f7	80 be 31 01 00
	00 00		 cmp	 BYTE PTR [esi+305], 0
  002fe	0f 84 02 01 00
	00		 je	 $LN20@SoftwareTr

; 225  : 	{
; 226  : 		__SoftwareTransformPatch_SetShadowStream(akTransVertex);

  00304	8d 85 c4 c0 ff
	ff		 lea	 eax, DWORD PTR _akTransVertex$[ebp]
  0030a	8b ce		 mov	 ecx, esi
  0030c	50		 push	 eax
  0030d	e8 00 00 00 00	 call	 ?__SoftwareTransformPatch_SetShadowStream@CMapOutdoor@@IAE_NPAUSoftwareTransformPatch_STLVertex@1@@Z ; CMapOutdoor::__SoftwareTransformPatch_SetShadowStream

; 227  : 		__SoftwareTransformPatch_ApplyStaticShadowRenderState();

  00312	8b ce		 mov	 ecx, esi
  00314	e8 00 00 00 00	 call	 ?__SoftwareTransformPatch_ApplyStaticShadowRenderState@CMapOutdoor@@IAEXXZ ; CMapOutdoor::__SoftwareTransformPatch_ApplyStaticShadowRenderState

; 228  : 
; 229  : 		if (isDynamicShadow)

  00319	80 bd a8 c0 ff
	ff 00		 cmp	 BYTE PTR tv812[ebp], 0
  00320	8b ce		 mov	 ecx, esi
  00322	74 07		 je	 SHORT $LN21@SoftwareTr

; 230  : 			__SoftwareTransformPatch_ApplyDynamicShadowRenderState();

  00324	e8 00 00 00 00	 call	 ?__SoftwareTransformPatch_ApplyDynamicShadowRenderState@CMapOutdoor@@IAEXXZ ; CMapOutdoor::__SoftwareTransformPatch_ApplyDynamicShadowRenderState
  00329	eb 05		 jmp	 SHORT $LN22@SoftwareTr
$LN21@SoftwareTr:

; 231  : 		else
; 232  : 			__SoftwareTransformPatch_ApplyFogShadowRenderState();

  0032b	e8 00 00 00 00	 call	 ?__SoftwareTransformPatch_ApplyFogShadowRenderState@CMapOutdoor@@IAEXXZ ; CMapOutdoor::__SoftwareTransformPatch_ApplyFogShadowRenderState
$LN22@SoftwareTr:

; 233  : 
; 234  : 		if (isFogEnable)

  00330	80 7d 18 00	 cmp	 BYTE PTR _isFogEnable$[ebp], 0
  00334	0f b7 7d 10	 movzx	 edi, WORD PTR _wPrimitiveCount$[ebp]
  00338	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0033e	74 72		 je	 SHORT $LN23@SoftwareTr

; 235  : 		{
; 236  : 			STATEMANAGER.SetRenderState(D3DRS_FOGENABLE, TRUE);

  00340	6a 01		 push	 1
  00342	6a 1c		 push	 28			; 0000001cH
  00344	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 237  : 			STATEMANAGER.SetRenderState(D3DRS_FOGCOLOR, 0xFFFFFFFF);

  00349	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0034f	6a ff		 push	 -1
  00351	6a 22		 push	 34			; 00000022H
  00353	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 238  : 			STATEMANAGER.SetTexture(0, pTerrain->GetShadowTexture());

  00358	8b 85 b8 c0 ff
	ff		 mov	 eax, DWORD PTR _pTerrain$[ebp]
  0035e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00364	ff b0 44 a5 04
	00		 push	 DWORD PTR [eax+304452]
  0036a	6a 00		 push	 0
  0036c	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 239  : 			STATEMANAGER.DrawIndexedPrimitive(ePrimitiveType, 0, m_iPatchTerrainVertexCount, 0, wPrimitiveCount);

  00371	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00377	57		 push	 edi
  00378	6a 00		 push	 0
  0037a	ff b6 a0 09 00
	00		 push	 DWORD PTR [esi+2464]
  00380	6a 00		 push	 0
  00382	53		 push	 ebx
  00383	e8 00 00 00 00	 call	 ?DrawIndexedPrimitive@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IIII@Z ; CStateManager::DrawIndexedPrimitive

; 240  : 			STATEMANAGER.SetRenderState(D3DRS_FOGCOLOR, rkTPRS.m_dwFogColor);

  00388	8b 85 ac c0 ff
	ff		 mov	 eax, DWORD PTR _rkTPRS$GSCopy$1$[ebp]
  0038e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00394	ff b0 78 01 00
	00		 push	 DWORD PTR [eax+376]
  0039a	6a 22		 push	 34			; 00000022H
  0039c	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 241  : 			STATEMANAGER.SetRenderState(D3DRS_FOGENABLE, FALSE);

  003a1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  003a7	6a 00		 push	 0
  003a9	6a 1c		 push	 28			; 0000001cH
  003ab	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 242  : 		}

  003b0	eb 2a		 jmp	 SHORT $LN24@SoftwareTr
$LN23@SoftwareTr:

; 243  : 		else
; 244  : 		{
; 245  : 			STATEMANAGER.SetTexture(0, pTerrain->GetShadowTexture());

  003b2	8b 85 b8 c0 ff
	ff		 mov	 eax, DWORD PTR _pTerrain$[ebp]
  003b8	ff b0 44 a5 04
	00		 push	 DWORD PTR [eax+304452]
  003be	6a 00		 push	 0
  003c0	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 246  : 			STATEMANAGER.DrawIndexedPrimitive(ePrimitiveType, 0, m_iPatchTerrainVertexCount, 0, wPrimitiveCount);

  003c5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  003cb	57		 push	 edi
  003cc	6a 00		 push	 0
  003ce	ff b6 a0 09 00
	00		 push	 DWORD PTR [esi+2464]
  003d4	6a 00		 push	 0
  003d6	53		 push	 ebx
  003d7	e8 00 00 00 00	 call	 ?DrawIndexedPrimitive@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IIII@Z ; CStateManager::DrawIndexedPrimitive
$LN24@SoftwareTr:

; 247  : 		}
; 248  : 
; 249  : 		if (isDynamicShadow)

  003dc	80 bd a8 c0 ff
	ff 00		 cmp	 BYTE PTR tv812[ebp], 0
  003e3	8b ce		 mov	 ecx, esi
  003e5	74 07		 je	 SHORT $LN25@SoftwareTr

; 250  : 			__SoftwareTransformPatch_RestoreDynamicShadowRenderState();

  003e7	e8 00 00 00 00	 call	 ?__SoftwareTransformPatch_RestoreDynamicShadowRenderState@CMapOutdoor@@IAEXXZ ; CMapOutdoor::__SoftwareTransformPatch_RestoreDynamicShadowRenderState
  003ec	eb 05		 jmp	 SHORT $LN26@SoftwareTr
$LN25@SoftwareTr:

; 251  : 		else
; 252  : 			__SoftwareTransformPatch_RestoreFogShadowRenderState();

  003ee	e8 00 00 00 00	 call	 ?__SoftwareTransformPatch_RestoreFogShadowRenderState@CMapOutdoor@@IAEXXZ ; CMapOutdoor::__SoftwareTransformPatch_RestoreFogShadowRenderState
$LN26@SoftwareTr:

; 253  : 
; 254  : 		ms_faceCount += wPrimitiveCount;

  003f3	01 3d 00 00 00
	00		 add	 DWORD PTR ?ms_faceCount@CGraphicBase@@1KA, edi ; CGraphicBase::ms_faceCount

; 255  :   		++m_iRenderedSplatNum;
; 256  : 
; 257  : 
; 258  : 
; 259  : 		__SoftwareTransformPatch_RestoreStaticShadowRenderState();

  003f9	8b ce		 mov	 ecx, esi
  003fb	ff 86 88 09 00
	00		 inc	 DWORD PTR [esi+2440]
  00401	e8 00 00 00 00	 call	 ?__SoftwareTransformPatch_RestoreStaticShadowRenderState@CMapOutdoor@@IAEXXZ ; CMapOutdoor::__SoftwareTransformPatch_RestoreStaticShadowRenderState
$LN20@SoftwareTr:

; 260  : 	}
; 261  : 
; 262  : 	++m_iRenderedPatchNum;
; 263  : 
; 264  : 	int iCurRenderedSplatNum=m_iRenderedSplatNum-iPrevRenderedSplatNum;

  00406	8b 86 88 09 00
	00		 mov	 eax, DWORD PTR [esi+2440]
  0040c	2b 85 a0 c0 ff
	ff		 sub	 eax, DWORD PTR _iPrevRenderedSplatNum$1$[ebp]
  00412	ff 86 8c 09 00
	00		 inc	 DWORD PTR [esi+2444]

; 265  : 
; 266  : 	m_iRenderedSplatNumSqSum+=iCurRenderedSplatNum*iCurRenderedSplatNum;

  00418	0f af c0	 imul	 eax, eax
  0041b	01 86 84 09 00
	00		 add	 DWORD PTR [esi+2436], eax
$LN121@SoftwareTr:
  00421	5b		 pop	 ebx
$LN1@SoftwareTr:

; 267  : }

  00422	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00425	5f		 pop	 edi
  00426	33 cd		 xor	 ecx, ebp
  00428	5e		 pop	 esi
  00429	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0042e	8b e5		 mov	 esp, ebp
  00430	5d		 pop	 ebp
  00431	c2 14 00	 ret	 20			; 00000014H
?__SoftwareTransformPatch_RenderPatchSplat@CMapOutdoor@@IAEXAAUSoftwareTransformPatch_SRenderState@1@JGW4_D3DPRIMITIVETYPE@@_N@Z ENDP ; CMapOutdoor::__SoftwareTransformPatch_RenderPatchSplat
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
;	COMDAT ?__SoftwareTransformPatch_RestoreDynamicShadowRenderState@CMapOutdoor@@IAEXXZ
_TEXT	SEGMENT
?__SoftwareTransformPatch_RestoreDynamicShadowRenderState@CMapOutdoor@@IAEXXZ PROC ; CMapOutdoor::__SoftwareTransformPatch_RestoreDynamicShadowRenderState, COMDAT
; _this$ = ecx

; 390  : 	STATEMANAGER.SetTexture(1, NULL);

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00006	6a 00		 push	 0
  00008	6a 01		 push	 1
  0000a	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 391  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_COLORARG1, D3DTA_CURRENT);

  0000f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00015	6a 01		 push	 1
  00017	6a 02		 push	 2
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 392  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_COLOROP,   D3DTOP_SELECTARG1);

  00020	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00026	6a 02		 push	 2
  00028	6a 01		 push	 1
  0002a	6a 01		 push	 1
  0002c	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 393  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAARG1, D3DTA_TEXTURE);

  00031	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00037	6a 02		 push	 2
  00039	6a 05		 push	 5
  0003b	6a 01		 push	 1
  0003d	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 394  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAOP,   D3DTOP_SELECTARG1);

  00042	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00048	6a 02		 push	 2
  0004a	6a 04		 push	 4
  0004c	6a 01		 push	 1
  0004e	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 395  : 
; 396  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ADDRESSU,	D3DTADDRESS_CLAMP);

  00053	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00059	6a 03		 push	 3
  0005b	6a 0d		 push	 13			; 0000000dH
  0005d	6a 01		 push	 1
  0005f	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 397  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ADDRESSV,	D3DTADDRESS_CLAMP);

  00064	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0006a	6a 03		 push	 3
  0006c	6a 0e		 push	 14			; 0000000eH
  0006e	6a 01		 push	 1
  00070	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 398  : }

  00075	c3		 ret	 0
?__SoftwareTransformPatch_RestoreDynamicShadowRenderState@CMapOutdoor@@IAEXXZ ENDP ; CMapOutdoor::__SoftwareTransformPatch_RestoreDynamicShadowRenderState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
;	COMDAT ?__SoftwareTransformPatch_ApplyDynamicShadowRenderState@CMapOutdoor@@IAEXXZ
_TEXT	SEGMENT
?__SoftwareTransformPatch_ApplyDynamicShadowRenderState@CMapOutdoor@@IAEXXZ PROC ; CMapOutdoor::__SoftwareTransformPatch_ApplyDynamicShadowRenderState, COMDAT
; _this$ = ecx

; 354  :  	STATEMANAGER.SetTexture(1, m_lpCharacterShadowMapTexture);

  00000	ff b1 d4 01 00
	00		 push	 DWORD PTR [ecx+468]
  00006	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0000c	6a 01		 push	 1
  0000e	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 355  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_COLORARG1, D3DTA_TEXTURE);

  00013	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00019	6a 02		 push	 2
  0001b	6a 02		 push	 2
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 356  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_COLORARG2, D3DTA_CURRENT);

  00024	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0002a	6a 01		 push	 1
  0002c	6a 03		 push	 3
  0002e	6a 01		 push	 1
  00030	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 357  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_COLOROP,   D3DTOP_MODULATE);

  00035	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0003b	6a 04		 push	 4
  0003d	6a 01		 push	 1
  0003f	6a 01		 push	 1
  00041	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 358  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAARG1, D3DTA_CURRENT);

  00046	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0004c	6a 01		 push	 1
  0004e	6a 05		 push	 5
  00050	6a 01		 push	 1
  00052	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 359  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAOP,   D3DTOP_SELECTARG1);

  00057	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0005d	6a 02		 push	 2
  0005f	6a 04		 push	 4
  00061	6a 01		 push	 1
  00063	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 360  : 
; 361  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ADDRESSU,	D3DTADDRESS_CLAMP);

  00068	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0006e	6a 03		 push	 3
  00070	6a 0d		 push	 13			; 0000000dH
  00072	6a 01		 push	 1
  00074	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 362  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ADDRESSV,	D3DTADDRESS_CLAMP);

  00079	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0007f	6a 03		 push	 3
  00081	6a 0e		 push	 14			; 0000000eH
  00083	6a 01		 push	 1
  00085	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 363  : }

  0008a	c3		 ret	 0
?__SoftwareTransformPatch_ApplyDynamicShadowRenderState@CMapOutdoor@@IAEXXZ ENDP ; CMapOutdoor::__SoftwareTransformPatch_ApplyDynamicShadowRenderState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
;	COMDAT ?__SoftwareTransformPatch_RestoreFogShadowRenderState@CMapOutdoor@@IAEXXZ
_TEXT	SEGMENT
?__SoftwareTransformPatch_RestoreFogShadowRenderState@CMapOutdoor@@IAEXXZ PROC ; CMapOutdoor::__SoftwareTransformPatch_RestoreFogShadowRenderState, COMDAT
; _this$ = ecx

; 404  : 	STATEMANAGER.SetRenderState(D3DRS_FOGENABLE, FALSE);

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00006	6a 00		 push	 0
  00008	6a 1c		 push	 28			; 0000001cH
  0000a	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 405  : 
; 406  : 	STATEMANAGER.SetTexture(1, NULL);

  0000f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00015	6a 00		 push	 0
  00017	6a 01		 push	 1
  00019	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 407  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_COLORARG1, D3DTA_CURRENT);

  0001e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00024	6a 01		 push	 1
  00026	6a 02		 push	 2
  00028	6a 01		 push	 1
  0002a	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 408  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_COLOROP,   D3DTOP_SELECTARG1);

  0002f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00035	6a 02		 push	 2
  00037	6a 01		 push	 1
  00039	6a 01		 push	 1
  0003b	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 409  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAARG1, D3DTA_TEXTURE);

  00040	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00046	6a 02		 push	 2
  00048	6a 05		 push	 5
  0004a	6a 01		 push	 1
  0004c	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 410  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAOP,   D3DTOP_SELECTARG1);

  00051	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00057	6a 02		 push	 2
  00059	6a 04		 push	 4
  0005b	6a 01		 push	 1
  0005d	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 411  : }

  00062	c3		 ret	 0
?__SoftwareTransformPatch_RestoreFogShadowRenderState@CMapOutdoor@@IAEXXZ ENDP ; CMapOutdoor::__SoftwareTransformPatch_RestoreFogShadowRenderState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
;	COMDAT ?__SoftwareTransformPatch_ApplyFogShadowRenderState@CMapOutdoor@@IAEXXZ
_TEXT	SEGMENT
?__SoftwareTransformPatch_ApplyFogShadowRenderState@CMapOutdoor@@IAEXXZ PROC ; CMapOutdoor::__SoftwareTransformPatch_ApplyFogShadowRenderState, COMDAT
; _this$ = ecx

; 367  : 	STATEMANAGER.SetTexture(1, NULL);

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00006	6a 00		 push	 0
  00008	6a 01		 push	 1
  0000a	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 368  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_COLORARG1, D3DTA_CURRENT);

  0000f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00015	6a 01		 push	 1
  00017	6a 02		 push	 2
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 369  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_COLOROP,   D3DTOP_SELECTARG1);

  00020	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00026	6a 02		 push	 2
  00028	6a 01		 push	 1
  0002a	6a 01		 push	 1
  0002c	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 370  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAARG1, D3DTA_CURRENT);

  00031	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00037	6a 01		 push	 1
  00039	6a 05		 push	 5
  0003b	6a 01		 push	 1
  0003d	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 371  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAOP,   D3DTOP_SELECTARG1);

  00042	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00048	6a 02		 push	 2
  0004a	6a 04		 push	 4
  0004c	6a 01		 push	 1
  0004e	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 372  : }

  00053	c3		 ret	 0
?__SoftwareTransformPatch_ApplyFogShadowRenderState@CMapOutdoor@@IAEXXZ ENDP ; CMapOutdoor::__SoftwareTransformPatch_ApplyFogShadowRenderState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
;	COMDAT ?__SoftwareTransformPatch_RestoreStaticShadowRenderState@CMapOutdoor@@IAEXXZ
_TEXT	SEGMENT
?__SoftwareTransformPatch_RestoreStaticShadowRenderState@CMapOutdoor@@IAEXXZ PROC ; CMapOutdoor::__SoftwareTransformPatch_RestoreStaticShadowRenderState, COMDAT
; _this$ = ecx

; 375  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG1, D3DTA_TEXTURE);

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00006	6a 02		 push	 2
  00008	6a 02		 push	 2
  0000a	6a 00		 push	 0
  0000c	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 376  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP,   D3DTOP_SELECTARG1);

  00011	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00017	6a 02		 push	 2
  00019	6a 01		 push	 1
  0001b	6a 00		 push	 0
  0001d	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 377  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAARG1, D3DTA_TEXTURE);

  00022	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00028	6a 02		 push	 2
  0002a	6a 05		 push	 5
  0002c	6a 00		 push	 0
  0002e	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 378  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAOP,   D3DTOP_SELECTARG1);

  00033	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00039	6a 02		 push	 2
  0003b	6a 04		 push	 4
  0003d	6a 00		 push	 0
  0003f	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 379  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_ADDRESSU,  D3DTADDRESS_WRAP);

  00044	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0004a	6a 01		 push	 1
  0004c	6a 0d		 push	 13			; 0000000dH
  0004e	6a 00		 push	 0
  00050	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 380  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_ADDRESSV,  D3DTADDRESS_WRAP);

  00055	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0005b	6a 01		 push	 1
  0005d	6a 0e		 push	 14			; 0000000eH
  0005f	6a 00		 push	 0
  00061	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 381  : 
; 382  : 	STATEMANAGER.SetRenderState(D3DRS_SRCBLEND, D3DBLEND_SRCALPHA);

  00066	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0006c	6a 05		 push	 5
  0006e	6a 13		 push	 19			; 00000013H
  00070	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 383  : 	STATEMANAGER.SetRenderState(D3DRS_DESTBLEND, D3DBLEND_INVSRCALPHA);

  00075	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0007b	6a 06		 push	 6
  0007d	6a 14		 push	 20			; 00000014H
  0007f	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 384  : }

  00084	c3		 ret	 0
?__SoftwareTransformPatch_RestoreStaticShadowRenderState@CMapOutdoor@@IAEXXZ ENDP ; CMapOutdoor::__SoftwareTransformPatch_RestoreStaticShadowRenderState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
;	COMDAT ?__SoftwareTransformPatch_ApplyStaticShadowRenderState@CMapOutdoor@@IAEXXZ
_TEXT	SEGMENT
?__SoftwareTransformPatch_ApplyStaticShadowRenderState@CMapOutdoor@@IAEXXZ PROC ; CMapOutdoor::__SoftwareTransformPatch_ApplyStaticShadowRenderState, COMDAT
; _this$ = ecx

; 339  : 	STATEMANAGER.SetRenderState(D3DRS_SRCBLEND, D3DBLEND_ZERO);

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00006	6a 01		 push	 1
  00008	6a 13		 push	 19			; 00000013H
  0000a	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 340  : 	STATEMANAGER.SetRenderState(D3DRS_DESTBLEND, D3DBLEND_SRCCOLOR);

  0000f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00015	6a 03		 push	 3
  00017	6a 14		 push	 20			; 00000014H
  00019	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 341  : 
; 342  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG1, D3DTA_TEXTURE);

  0001e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00024	6a 02		 push	 2
  00026	6a 02		 push	 2
  00028	6a 00		 push	 0
  0002a	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 343  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG2, D3DTA_DIFFUSE);

  0002f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00035	6a 00		 push	 0
  00037	6a 03		 push	 3
  00039	6a 00		 push	 0
  0003b	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 344  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP,   D3DTOP_MODULATE);

  00040	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00046	6a 04		 push	 4
  00048	6a 01		 push	 1
  0004a	6a 00		 push	 0
  0004c	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 345  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAARG1, D3DTA_TEXTURE);

  00051	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00057	6a 02		 push	 2
  00059	6a 05		 push	 5
  0005b	6a 00		 push	 0
  0005d	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 346  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAOP,   D3DTOP_SELECTARG1);

  00062	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00068	6a 02		 push	 2
  0006a	6a 04		 push	 4
  0006c	6a 00		 push	 0
  0006e	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 347  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_ADDRESSU,	D3DTADDRESS_CLAMP);

  00073	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00079	6a 03		 push	 3
  0007b	6a 0d		 push	 13			; 0000000dH
  0007d	6a 00		 push	 0
  0007f	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 348  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_ADDRESSV,	D3DTADDRESS_CLAMP);

  00084	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0008a	6a 03		 push	 3
  0008c	6a 0e		 push	 14			; 0000000eH
  0008e	6a 00		 push	 0
  00090	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 349  : 
; 350  : }

  00095	c3		 ret	 0
?__SoftwareTransformPatch_ApplyStaticShadowRenderState@CMapOutdoor@@IAEXXZ ENDP ; CMapOutdoor::__SoftwareTransformPatch_ApplyStaticShadowRenderState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
;	COMDAT ?__SoftwareTransformPatch_SetShadowStream@CMapOutdoor@@IAE_NPAUSoftwareTransformPatch_STLVertex@1@@Z
_TEXT	SEGMENT
_akDstVertex$ = -4					; size = 4
_akSrcVertex$ = 8					; size = 4
?__SoftwareTransformPatch_SetShadowStream@CMapOutdoor@@IAE_NPAUSoftwareTransformPatch_STLVertex@1@@Z PROC ; CMapOutdoor::__SoftwareTransformPatch_SetShadowStream, COMDAT
; _this$ = ecx

; 700  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 701  : 	IDirect3DVertexBuffer8* pkVB=m_kSTPD.m_pkVBSplat[m_kSTPD.m_dwSplatPos++];

  00004	8b 81 00 0a 00
	00		 mov	 eax, DWORD PTR [ecx+2560]
  0000a	57		 push	 edi
  0000b	8b bc 81 c0 09
	00 00		 mov	 edi, DWORD PTR [ecx+eax*4+2496]
  00012	40		 inc	 eax

; 702  : 	m_kSTPD.m_dwSplatPos%=SoftwareTransformPatch_SData::SPLAT_VB_NUM;

  00013	83 e0 07	 and	 eax, 7
  00016	89 81 00 0a 00
	00		 mov	 DWORD PTR [ecx+2560], eax

; 703  : 	if (!pkVB)

  0001c	85 ff		 test	 edi, edi
  0001e	0f 84 83 00 00
	00		 je	 $LN12@SoftwareTr

; 704  : 		return false;
; 705  : 
; 706  : 	DWORD dwVBSize=sizeof(SoftwareTransformPatch_SSplatVertex)*CTerrainPatch::TERRAIN_VERTEX_COUNT;
; 707  : 	SoftwareTransformPatch_SSplatVertex* akDstVertex;
; 708  : 	if (FAILED(

  00024	8b 07		 mov	 eax, DWORD PTR [edi]
  00026	8d 4d fc	 lea	 ecx, DWORD PTR _akDstVertex$[ebp]
  00029	6a 00		 push	 0
  0002b	51		 push	 ecx
  0002c	68 28 2d 00 00	 push	 11560			; 00002d28H
  00031	6a 00		 push	 0
  00033	57		 push	 edi
  00034	ff 50 2c	 call	 DWORD PTR [eax+44]
  00037	85 c0		 test	 eax, eax
  00039	78 6c		 js	 SHORT $LN12@SoftwareTr

; 711  : 
; 712  : 	SoftwareTransformPatch_STLVertex* pkSrcVertex;
; 713  : 	SoftwareTransformPatch_SSplatVertex* pkDstVertex;
; 714  : 	for (UINT uIndex=0; uIndex!=CTerrainPatch::TERRAIN_VERTEX_COUNT; ++uIndex)

  0003b	53		 push	 ebx
  0003c	56		 push	 esi
  0003d	8b 75 08	 mov	 esi, DWORD PTR _akSrcVertex$[ebp]
  00040	33 db		 xor	 ebx, ebx
  00042	83 c6 14	 add	 esi, 20			; 00000014H
$LL4@SoftwareTr:

; 715  : 	{
; 716  : 		pkSrcVertex=akSrcVertex+uIndex;
; 717  : 		pkDstVertex=akDstVertex+uIndex;

  00045	8b 55 fc	 mov	 edx, DWORD PTR _akDstVertex$[ebp]
  00048	8d 76 38	 lea	 esi, DWORD PTR [esi+56]

; 718  : 		pkDstVertex->kPosition=pkSrcVertex->kPosition;

  0004b	0f 10 46 b4	 movups	 xmm0, XMMWORD PTR [esi-76]
  0004f	03 d3		 add	 edx, ebx
  00051	83 c3 28	 add	 ebx, 40			; 00000028H
  00054	0f 11 02	 movups	 XMMWORD PTR [edx], xmm0

; 719  : 		pkDstVertex->dwDiffuse=pkSrcVertex->dwDiffuse;

  00057	8b 46 c4	 mov	 eax, DWORD PTR [esi-60]
  0005a	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 720  : 		pkDstVertex->dwSpecular=pkSrcVertex->dwFog;

  0005d	8b 46 c8	 mov	 eax, DWORD PTR [esi-56]
  00060	89 42 14	 mov	 DWORD PTR [edx+20], eax

; 721  : 		pkDstVertex->kTex1=pkSrcVertex->kTexStaticShadow;

  00063	8b 46 dc	 mov	 eax, DWORD PTR [esi-36]
  00066	8b 4e e0	 mov	 ecx, DWORD PTR [esi-32]
  00069	89 42 18	 mov	 DWORD PTR [edx+24], eax
  0006c	89 4a 1c	 mov	 DWORD PTR [edx+28], ecx

; 722  : 		pkDstVertex->kTex2=pkSrcVertex->kTexDynamicShadow;

  0006f	8b 46 e4	 mov	 eax, DWORD PTR [esi-28]
  00072	8b 4e e8	 mov	 ecx, DWORD PTR [esi-24]
  00075	89 42 20	 mov	 DWORD PTR [edx+32], eax
  00078	89 4a 24	 mov	 DWORD PTR [edx+36], ecx
  0007b	81 fb 28 2d 00
	00		 cmp	 ebx, 11560		; 00002d28H
  00081	75 c2		 jne	 SHORT $LL4@SoftwareTr

; 723  : 	}
; 724  : 	pkVB->Unlock();

  00083	8b 07		 mov	 eax, DWORD PTR [edi]
  00085	5e		 pop	 esi
  00086	5b		 pop	 ebx
  00087	57		 push	 edi
  00088	ff 50 30	 call	 DWORD PTR [eax+48]

; 725  : 
; 726  : 
; 727  : 	ms_lpd3dDevice->SetStreamSource(0, pkVB, sizeof(SoftwareTransformPatch_SSplatVertex));

  0008b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  00090	6a 28		 push	 40			; 00000028H
  00092	57		 push	 edi
  00093	6a 00		 push	 0
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	50		 push	 eax
  00098	ff 91 4c 01 00
	00		 call	 DWORD PTR [ecx+332]

; 728  : 	return true;

  0009e	b0 01		 mov	 al, 1
  000a0	5f		 pop	 edi

; 729  : }

  000a1	8b e5		 mov	 esp, ebp
  000a3	5d		 pop	 ebp
  000a4	c2 04 00	 ret	 4
$LN12@SoftwareTr:

; 709  : 		pkVB->Lock(0, dwVBSize, (BYTE**)&akDstVertex, 0)//D3DLOCK_DISCARD)
; 710  : 	)) return false;

  000a7	32 c0		 xor	 al, al
  000a9	5f		 pop	 edi

; 729  : }

  000aa	8b e5		 mov	 esp, ebp
  000ac	5d		 pop	 ebp
  000ad	c2 04 00	 ret	 4
?__SoftwareTransformPatch_SetShadowStream@CMapOutdoor@@IAE_NPAUSoftwareTransformPatch_STLVertex@1@@Z ENDP ; CMapOutdoor::__SoftwareTransformPatch_SetShadowStream
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
;	COMDAT ?__SoftwareTransformPatch_SetSplatStream@CMapOutdoor@@IAE_NPAUSoftwareTransformPatch_STLVertex@1@@Z
_TEXT	SEGMENT
_akDstVertex$ = -4					; size = 4
_akSrcVertex$ = 8					; size = 4
?__SoftwareTransformPatch_SetSplatStream@CMapOutdoor@@IAE_NPAUSoftwareTransformPatch_STLVertex@1@@Z PROC ; CMapOutdoor::__SoftwareTransformPatch_SetSplatStream, COMDAT
; _this$ = ecx

; 678  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 679  : 	IDirect3DVertexBuffer8* pkVB=m_kSTPD.m_pkVBSplat[m_kSTPD.m_dwSplatPos++];

  00004	8b 81 00 0a 00
	00		 mov	 eax, DWORD PTR [ecx+2560]
  0000a	56		 push	 esi
  0000b	8b b4 81 c0 09
	00 00		 mov	 esi, DWORD PTR [ecx+eax*4+2496]
  00012	40		 inc	 eax

; 680  : 	m_kSTPD.m_dwSplatPos%=SoftwareTransformPatch_SData::SPLAT_VB_NUM;

  00013	83 e0 07	 and	 eax, 7
  00016	89 81 00 0a 00
	00		 mov	 DWORD PTR [ecx+2560], eax

; 681  : 	if (!pkVB)

  0001c	85 f6		 test	 esi, esi
  0001e	74 6b		 je	 SHORT $LN14@SoftwareTr

; 682  : 		return false;
; 683  : 
; 684  : 	DWORD dwVBSize=sizeof(SoftwareTransformPatch_SSplatVertex)*CTerrainPatch::TERRAIN_VERTEX_COUNT;
; 685  : 	SoftwareTransformPatch_SSplatVertex* akDstVertex;
; 686  : 	if (FAILED(

  00020	8b 06		 mov	 eax, DWORD PTR [esi]
  00022	8d 4d fc	 lea	 ecx, DWORD PTR _akDstVertex$[ebp]
  00025	6a 00		 push	 0
  00027	51		 push	 ecx
  00028	68 28 2d 00 00	 push	 11560			; 00002d28H
  0002d	6a 00		 push	 0
  0002f	56		 push	 esi
  00030	ff 50 2c	 call	 DWORD PTR [eax+44]
  00033	85 c0		 test	 eax, eax
  00035	78 54		 js	 SHORT $LN14@SoftwareTr

; 689  : 
; 690  : 	for (UINT uIndex=0; uIndex!=CTerrainPatch::TERRAIN_VERTEX_COUNT; ++uIndex)

  00037	8b 4d 08	 mov	 ecx, DWORD PTR _akSrcVertex$[ebp]
  0003a	33 d2		 xor	 edx, edx
  0003c	0f 1f 40 00	 npad	 4
$LL4@SoftwareTr:

; 691  : 		*(akDstVertex+uIndex)=*((SoftwareTransformPatch_SSplatVertex*)(akSrcVertex+uIndex));

  00040	0f 10 01	 movups	 xmm0, XMMWORD PTR [ecx]
  00043	8b 45 fc	 mov	 eax, DWORD PTR _akDstVertex$[ebp]
  00046	8d 49 38	 lea	 ecx, DWORD PTR [ecx+56]
  00049	0f 11 04 02	 movups	 XMMWORD PTR [edx+eax], xmm0
  0004d	0f 10 41 d8	 movups	 xmm0, XMMWORD PTR [ecx-40]
  00051	0f 11 44 02 10	 movups	 XMMWORD PTR [edx+eax+16], xmm0
  00056	f3 0f 7e 41 e8	 movq	 xmm0, QWORD PTR [ecx-24]
  0005b	66 0f d6 44 02
	20		 movq	 QWORD PTR [edx+eax+32], xmm0
  00061	83 c2 28	 add	 edx, 40			; 00000028H
  00064	81 fa 28 2d 00
	00		 cmp	 edx, 11560		; 00002d28H
  0006a	75 d4		 jne	 SHORT $LL4@SoftwareTr

; 692  : 
; 693  : 	pkVB->Unlock();

  0006c	8b 06		 mov	 eax, DWORD PTR [esi]
  0006e	56		 push	 esi
  0006f	ff 50 30	 call	 DWORD PTR [eax+48]

; 694  : 
; 695  : 	STATEMANAGER.SetStreamSource(0, pkVB, sizeof(SoftwareTransformPatch_SSplatVertex));

  00072	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00078	6a 28		 push	 40			; 00000028H
  0007a	56		 push	 esi
  0007b	6a 00		 push	 0
  0007d	e8 00 00 00 00	 call	 ?SetStreamSource@CStateManager@@QAEXIPAUIDirect3DVertexBuffer8@@I@Z ; CStateManager::SetStreamSource

; 696  : 	return true;

  00082	b0 01		 mov	 al, 1
  00084	5e		 pop	 esi

; 697  : }

  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c2 04 00	 ret	 4
$LN14@SoftwareTr:

; 687  : 		pkVB->Lock(0, dwVBSize, (BYTE**)&akDstVertex, 0)//D3DLOCK_DISCARD)
; 688  : 	)) return false;

  0008b	32 c0		 xor	 al, al
  0008d	5e		 pop	 esi

; 697  : }

  0008e	8b e5		 mov	 esp, ebp
  00090	5d		 pop	 ebp
  00091	c2 04 00	 ret	 4
?__SoftwareTransformPatch_SetSplatStream@CMapOutdoor@@IAE_NPAUSoftwareTransformPatch_STLVertex@1@@Z ENDP ; CMapOutdoor::__SoftwareTransformPatch_SetSplatStream
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
;	COMDAT ?__SoftwareTransformPatch_SetTransform@CMapOutdoor@@IAE_NAAUSoftwareTransformPatch_SRenderState@1@PAUSoftwareTransformPatch_STLVertex@1@AAVCTerrainPatchProxy@@II_N3@Z
_TEXT	SEGMENT
tv935 = -212						; size = 4
tv958 = -208						; size = 4
_akSrcVertex$1$ = -204					; size = 4
_fShadowPatternX$1$ = -200				; size = 4
_fAlphaBiasY$1$ = -196					; size = 4
_fAlphaPatternY$1$ = -192				; size = 4
_fAlphaBiasX$1$ = -188					; size = 4
_fAlphaPatternX$1$ = -184				; size = 4
_fScreenHalfHeight$1$ = -180				; size = 4
_fScreenHalfWidth$1$ = -176				; size = 4
_fTerrainBaseY$1$ = -172				; size = 4
_fTerrainBaseX$1$ = -168				; size = 4
_fFogLenInv$1$ = -164					; size = 4
tv955 = -164						; size = 4
_akTransVertex$GSCopy$1$ = -160				; size = 4
_fShadowPatternY$1$ = -156				; size = 4
_rkTerrainPatchProxy$GSCopy$1$ = -156			; size = 4
_rkTPRS$GSCopy$1$ = -152				; size = 4
tv960 = -152						; size = 4
_this$GSCopy$1$ = -148					; size = 4
tv962 = -148						; size = 4
tv961 = -148						; size = 4
_m4Frustum$ = -144					; size = 64
_v3Shadow$1 = -80					; size = 12
_m4DynamicShadow$2 = -68				; size = 64
_kWorkVertex$3 = -60					; size = 56
_kWorkVertex$4 = -60					; size = 56
__$ArrayPad$ = -4					; size = 4
_rkTPRS$ = 8						; size = 4
_akTransVertex$ = 12					; size = 4
_rkTerrainPatchProxy$ = 16				; size = 4
_uTerrainX$ = 20					; size = 4
_uTerrainY$ = 24					; size = 4
_isFogEnable$ = 28					; size = 1
_isDynamicShadow$ = 32					; size = 1
?__SoftwareTransformPatch_SetTransform@CMapOutdoor@@IAE_NAAUSoftwareTransformPatch_SRenderState@1@PAUSoftwareTransformPatch_STLVertex@1@AAVCTerrainPatchProxy@@II_N3@Z PROC ; CMapOutdoor::__SoftwareTransformPatch_SetTransform, COMDAT
; _this$ = ecx

; 556  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d4 00 00
	00		 sub	 esp, 212		; 000000d4H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	8b 45 0c	 mov	 eax, DWORD PTR _akTransVertex$[ebp]
  00016	56		 push	 esi
  00017	8b 75 08	 mov	 esi, DWORD PTR _rkTPRS$[ebp]
  0001a	89 85 60 ff ff
	ff		 mov	 DWORD PTR _akTransVertex$GSCopy$1$[ebp], eax
  00020	8b 45 10	 mov	 eax, DWORD PTR _rkTerrainPatchProxy$[ebp]
  00023	89 8d 6c ff ff
	ff		 mov	 DWORD PTR _this$GSCopy$1$[ebp], ecx

; 557  : 	SoftwareTransformPatch_SSourceVertex* akSrcVertex=rkTerrainPatchProxy.SoftwareTransformPatch_GetTerrainVertexDataPtr();

  00029	8b c8		 mov	 ecx, eax
  0002b	57		 push	 edi
  0002c	89 b5 68 ff ff
	ff		 mov	 DWORD PTR _rkTPRS$GSCopy$1$[ebp], esi
  00032	89 85 64 ff ff
	ff		 mov	 DWORD PTR _rkTerrainPatchProxy$GSCopy$1$[ebp], eax
  00038	e8 00 00 00 00	 call	 ?SoftwareTransformPatch_GetTerrainVertexDataPtr@CTerrainPatchProxy@@QAEPAUSoftwareTransformPatch_SSourceVertex@@XZ ; CTerrainPatchProxy::SoftwareTransformPatch_GetTerrainVertexDataPtr
  0003d	8b f8		 mov	 edi, eax
  0003f	89 bd 34 ff ff
	ff		 mov	 DWORD PTR _akSrcVertex$1$[ebp], edi

; 558  : 	if (!akSrcVertex)

  00045	85 ff		 test	 edi, edi
  00047	75 14		 jne	 SHORT $LN11@SoftwareTr

; 559  : 		return false;

  00049	5f		 pop	 edi
  0004a	32 c0		 xor	 al, al

; 671  : 		}
; 672  : 	}
; 673  : 
; 674  : 	return true;
; 675  : }

  0004c	5e		 pop	 esi
  0004d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00050	33 cd		 xor	 ecx, ebp
  00052	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c2 1c 00	 ret	 28			; 0000001cH
$LN11@SoftwareTr:

; 560  : 
; 561  : 	rkTerrainPatchProxy.SoftwareTransformPatch_UpdateTerrainLighting(

  0005d	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR _rkTerrainPatchProxy$GSCopy$1$[ebp]
  00063	8d 86 28 01 00
	00		 lea	 eax, DWORD PTR [esi+296]
  00069	50		 push	 eax
  0006a	8d 86 c0 00 00
	00		 lea	 eax, DWORD PTR [esi+192]
  00070	50		 push	 eax
  00071	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00077	ff b0 08 0a 00
	00		 push	 DWORD PTR [eax+2568]
  0007d	e8 00 00 00 00	 call	 ?SoftwareTransformPatch_UpdateTerrainLighting@CTerrainPatchProxy@@QAEXKABU_D3DLIGHT8@@ABU_D3DMATERIAL8@@@Z ; CTerrainPatchProxy::SoftwareTransformPatch_UpdateTerrainLighting

; 562  : 		m_kSTPD.m_dwLightVersion,
; 563  : 		rkTPRS.m_kLight, rkTPRS.m_kMtrl);
; 564  : 
; 565  : 	D3DXVECTOR3* pkSrcPosition;
; 566  : 
; 567  : 	float fTilePatternX=+1/640.0f;
; 568  : 	float fTilePatternY=-1/640.0f;
; 569  : 
; 570  : 	float fTerrainBaseX=-(float) (uTerrainX * CTerrainImpl::TERRAIN_XSIZE)+m_fTerrainTexCoordBase * 12.30769f;

  00082	69 45 14 00 64
	00 00		 imul	 eax, DWORD PTR _uTerrainX$[ebp], 25600
  00089	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  0008f	f3 0f 10 91 08
	09 00 00	 movss	 xmm2, DWORD PTR [ecx+2312]
  00097	0f 28 ca	 movaps	 xmm1, xmm2
  0009a	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@4144ec4c
  000a2	66 0f 6e c0	 movd	 xmm0, eax
  000a6	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  000aa	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000ad	0f 28 d9	 movaps	 xmm3, xmm1
  000b0	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]

; 571  : 	float fTerrainBaseY=+(float) (uTerrainY * CTerrainImpl::TERRAIN_YSIZE)+m_fTerrainTexCoordBase * 12.30769f;

  000b9	69 45 18 00 64
	00 00		 imul	 eax, DWORD PTR _uTerrainY$[ebp], 25600
  000c0	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  000c4	f3 0f 5c d8	 subss	 xmm3, xmm0
  000c8	66 0f 6e c0	 movd	 xmm0, eax
  000cc	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  000d0	c1 e8 1f	 shr	 eax, 31			; 0000001fH

; 572  : 
; 573  : 	float fScreenHalfWidth=rkTPRS.m_fScreenHalfWidth;
; 574  : 	float fScreenHalfHeight=rkTPRS.m_fScreenHalfHeight;
; 575  : 
; 576  : 	float fAlphaPatternX=m_matSplatAlpha._11;
; 577  : 	float fAlphaPatternY=m_matSplatAlpha._22;
; 578  : 	float fAlphaBiasX=m_matSplatAlpha._41;
; 579  : 	float fAlphaBiasY=m_matSplatAlpha._42;
; 580  : 	float fShadowPatternX=+m_fTerrainTexCoordBase * ((float) CTerrainImpl::PATCH_XSIZE / (CTerrainImpl::XSIZE));
; 581  : 	float fShadowPatternY=-m_fTerrainTexCoordBase * ((float) CTerrainImpl::PATCH_YSIZE / (CTerrainImpl::YSIZE));
; 582  : 
; 583  : 	D3DXMATRIX m4Frustum=rkTPRS.m_m4Frustum;
; 584  : 
; 585  : 	if (isFogEnable)

  000d3	80 7d 1c 00	 cmp	 BYTE PTR _isFogEnable$[ebp], 0
  000d7	f3 0f 11 9d 58
	ff ff ff	 movss	 DWORD PTR _fTerrainBaseX$1$[ebp], xmm3
  000df	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  000e8	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  000ec	f3 0f 58 c1	 addss	 xmm0, xmm1
  000f0	0f 28 ca	 movaps	 xmm1, xmm2
  000f3	0f 57 15 00 00
	00 00		 xorps	 xmm2, DWORD PTR __xmm@80000000800000008000000080000000
  000fa	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@3e000000
  00102	f3 0f 59 15 00
	00 00 00	 mulss	 xmm2, DWORD PTR __real@3e000000
  0010a	f3 0f 11 85 54
	ff ff ff	 movss	 DWORD PTR _fTerrainBaseY$1$[ebp], xmm0
  00112	f3 0f 10 86 7c
	01 00 00	 movss	 xmm0, DWORD PTR [esi+380]
  0011a	f3 0f 11 85 50
	ff ff ff	 movss	 DWORD PTR _fScreenHalfWidth$1$[ebp], xmm0
  00122	f3 0f 10 86 80
	01 00 00	 movss	 xmm0, DWORD PTR [esi+384]
  0012a	f3 0f 11 85 4c
	ff ff ff	 movss	 DWORD PTR _fScreenHalfHeight$1$[ebp], xmm0
  00132	f3 0f 10 81 c8
	07 00 00	 movss	 xmm0, DWORD PTR [ecx+1992]
  0013a	f3 0f 11 85 48
	ff ff ff	 movss	 DWORD PTR _fAlphaPatternX$1$[ebp], xmm0
  00142	f3 0f 10 81 dc
	07 00 00	 movss	 xmm0, DWORD PTR [ecx+2012]
  0014a	f3 0f 11 85 40
	ff ff ff	 movss	 DWORD PTR _fAlphaPatternY$1$[ebp], xmm0
  00152	f3 0f 10 81 f8
	07 00 00	 movss	 xmm0, DWORD PTR [ecx+2040]
  0015a	f3 0f 11 85 44
	ff ff ff	 movss	 DWORD PTR _fAlphaBiasX$1$[ebp], xmm0
  00162	f3 0f 10 81 fc
	07 00 00	 movss	 xmm0, DWORD PTR [ecx+2044]
  0016a	f3 0f 11 85 3c
	ff ff ff	 movss	 DWORD PTR _fAlphaBiasY$1$[ebp], xmm0
  00172	0f 10 46 40	 movups	 xmm0, XMMWORD PTR [esi+64]
  00176	f3 0f 11 8d 38
	ff ff ff	 movss	 DWORD PTR _fShadowPatternX$1$[ebp], xmm1
  0017e	0f 11 85 70 ff
	ff ff		 movups	 XMMWORD PTR _m4Frustum$[ebp], xmm0
  00185	0f 10 46 50	 movups	 xmm0, XMMWORD PTR [esi+80]
  00189	f3 0f 11 95 64
	ff ff ff	 movss	 DWORD PTR _fShadowPatternY$1$[ebp], xmm2
  00191	0f 11 45 80	 movups	 XMMWORD PTR _m4Frustum$[ebp+16], xmm0
  00195	0f 10 46 60	 movups	 xmm0, XMMWORD PTR [esi+96]
  00199	0f 11 45 90	 movups	 XMMWORD PTR _m4Frustum$[ebp+32], xmm0
  0019d	0f 10 46 70	 movups	 xmm0, XMMWORD PTR [esi+112]
  001a1	0f 11 45 a0	 movups	 XMMWORD PTR _m4Frustum$[ebp+48], xmm0
  001a5	0f 84 c1 01 00
	00		 je	 $LN12@SoftwareTr

; 586  : 	{
; 587  : 		float fFogCur;
; 588  : 		float fFogFar=rkTPRS.m_fFogFarTransZ;

  001ab	f3 0f 10 86 90
	01 00 00	 movss	 xmm0, DWORD PTR [esi+400]
  001b3	f3 0f 11 85 2c
	ff ff ff	 movss	 DWORD PTR tv935[ebp], xmm0

; 589  : 		float fFogLenInv=rkTPRS.m_fFogLenInv;

  001bb	f3 0f 10 86 94
	01 00 00	 movss	 xmm0, DWORD PTR [esi+404]
  001c3	8b b5 60 ff ff
	ff		 mov	 esi, DWORD PTR _akTransVertex$GSCopy$1$[ebp]
  001c9	f3 0f 11 85 5c
	ff ff ff	 movss	 DWORD PTR _fFogLenInv$1$[ebp], xmm0
  001d1	c7 85 6c ff ff
	ff 21 01 00 00	 mov	 DWORD PTR tv961[ebp], 289 ; 00000121H
  001db	0f 1f 44 00 00	 npad	 5
$LL4@SoftwareTr:

; 590  : 
; 591  : 		float fLocalX;
; 592  : 		float fLocalY;
; 593  : 
; 594  : 		SoftwareTransformPatch_STLVertex kWorkVertex;
; 595  : 		for (UINT uIndex=0; uIndex!=CTerrainPatch::TERRAIN_VERTEX_COUNT; ++uIndex)
; 596  : 		{
; 597  : 			pkSrcPosition=&akSrcVertex[uIndex].kPosition;
; 598  : 			D3DXVec3Transform(&kWorkVertex.kPosition, pkSrcPosition, &m4Frustum);

  001e0	8d 85 70 ff ff
	ff		 lea	 eax, DWORD PTR _m4Frustum$[ebp]
  001e6	50		 push	 eax
  001e7	57		 push	 edi
  001e8	8d 45 c4	 lea	 eax, DWORD PTR _kWorkVertex$4[ebp]
  001eb	50		 push	 eax
  001ec	e8 00 00 00 00	 call	 _D3DXVec3Transform@12

; 599  : 			fLocalX=pkSrcPosition->x+fTerrainBaseX;
; 600  : 			fLocalY=pkSrcPosition->y+fTerrainBaseY;
; 601  : 			kWorkVertex.kPosition.w=1.0f/kWorkVertex.kPosition.w;

  001f1	f3 0f 10 3d 00
	00 00 00	 movss	 xmm7, DWORD PTR __real@3f800000
  001f9	0f 28 cf	 movaps	 xmm1, xmm7
  001fc	f3 0f 10 1f	 movss	 xmm3, DWORD PTR [edi]
  00200	f3 0f 5e 4d d0	 divss	 xmm1, DWORD PTR _kWorkVertex$4[ebp+12]

; 602  : 			kWorkVertex.kPosition.x*=kWorkVertex.kPosition.w;
; 603  : 			kWorkVertex.kPosition.y*=kWorkVertex.kPosition.w;
; 604  : 			kWorkVertex.kPosition.z*=kWorkVertex.kPosition.w;
; 605  : 			kWorkVertex.kPosition.x=(kWorkVertex.kPosition.x+1.0f)*fScreenHalfWidth;
; 606  : 			kWorkVertex.kPosition.y=(kWorkVertex.kPosition.y-1.0f)*fScreenHalfHeight;
; 607  : 			kWorkVertex.dwDiffuse=akSrcVertex[uIndex].dwDiffuse;

  00205	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]

; 608  : 			kWorkVertex.kTexTile.x=pkSrcPosition->x*fTilePatternX;
; 609  : 			kWorkVertex.kTexTile.y=pkSrcPosition->y*fTilePatternY;
; 610  : 			kWorkVertex.kTexAlpha.x=fLocalX*fAlphaPatternX+fAlphaBiasX;
; 611  : 			kWorkVertex.kTexAlpha.y=fLocalY*fAlphaPatternY+fAlphaBiasY;
; 612  : 			kWorkVertex.kTexStaticShadow.x=fLocalX*fShadowPatternX;
; 613  : 			kWorkVertex.kTexStaticShadow.y=fLocalY*fShadowPatternY;
; 614  : 			kWorkVertex.kTexDynamicShadow.x=0.0f;

  00208	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _kWorkVertex$4[ebp+48], 0

; 615  : 			kWorkVertex.kTexDynamicShadow.y=0.0f;

  0020f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _kWorkVertex$4[ebp+52], 0
  00216	f3 0f 10 57 04	 movss	 xmm2, DWORD PTR [edi+4]
  0021b	0f 28 f3	 movaps	 xmm6, xmm3
  0021e	f3 0f 58 b5 58
	ff ff ff	 addss	 xmm6, DWORD PTR _fTerrainBaseX$1$[ebp]
  00226	0f 28 c1	 movaps	 xmm0, xmm1
  00229	f3 0f 59 1d 00
	00 00 00	 mulss	 xmm3, DWORD PTR __real@3acccccd
  00231	f3 0f 59 45 c4	 mulss	 xmm0, DWORD PTR _kWorkVertex$4[ebp]
  00236	0f 28 ea	 movaps	 xmm5, xmm2
  00239	f3 0f 58 ad 54
	ff ff ff	 addss	 xmm5, DWORD PTR _fTerrainBaseY$1$[ebp]
  00241	f3 0f 59 15 00
	00 00 00	 mulss	 xmm2, DWORD PTR __real@bacccccd
  00249	0f 28 e1	 movaps	 xmm4, xmm1
  0024c	f3 0f 58 c7	 addss	 xmm0, xmm7
  00250	f3 0f 59 65 cc	 mulss	 xmm4, DWORD PTR _kWorkVertex$4[ebp+8]
  00255	f3 0f 11 4d d0	 movss	 DWORD PTR _kWorkVertex$4[ebp+12], xmm1
  0025a	f3 0f 59 4d c8	 mulss	 xmm1, DWORD PTR _kWorkVertex$4[ebp+4]
  0025f	f3 0f 59 85 50
	ff ff ff	 mulss	 xmm0, DWORD PTR _fScreenHalfWidth$1$[ebp]
  00267	f3 0f 5c cf	 subss	 xmm1, xmm7
  0026b	f3 0f 11 65 cc	 movss	 DWORD PTR _kWorkVertex$4[ebp+8], xmm4
  00270	f3 0f 11 5d dc	 movss	 DWORD PTR _kWorkVertex$4[ebp+24], xmm3
  00275	f3 0f 11 45 c4	 movss	 DWORD PTR _kWorkVertex$4[ebp], xmm0
  0027a	0f 28 c6	 movaps	 xmm0, xmm6
  0027d	f3 0f 59 85 48
	ff ff ff	 mulss	 xmm0, DWORD PTR _fAlphaPatternX$1$[ebp]
  00285	f3 0f 59 8d 4c
	ff ff ff	 mulss	 xmm1, DWORD PTR _fScreenHalfHeight$1$[ebp]
  0028d	f3 0f 58 85 44
	ff ff ff	 addss	 xmm0, DWORD PTR _fAlphaBiasX$1$[ebp]
  00295	f3 0f 59 b5 38
	ff ff ff	 mulss	 xmm6, DWORD PTR _fShadowPatternX$1$[ebp]
  0029d	f3 0f 11 4d c8	 movss	 DWORD PTR _kWorkVertex$4[ebp+4], xmm1
  002a2	0f 57 c9	 xorps	 xmm1, xmm1
  002a5	f3 0f 11 55 e0	 movss	 DWORD PTR _kWorkVertex$4[ebp+28], xmm2
  002aa	f3 0f 11 45 e4	 movss	 DWORD PTR _kWorkVertex$4[ebp+32], xmm0
  002af	0f 28 c5	 movaps	 xmm0, xmm5
  002b2	f3 0f 59 85 40
	ff ff ff	 mulss	 xmm0, DWORD PTR _fAlphaPatternY$1$[ebp]
  002ba	f3 0f 59 ad 64
	ff ff ff	 mulss	 xmm5, DWORD PTR _fShadowPatternY$1$[ebp]
  002c2	f3 0f 58 85 3c
	ff ff ff	 addss	 xmm0, DWORD PTR _fAlphaBiasY$1$[ebp]
  002ca	f3 0f 11 75 ec	 movss	 DWORD PTR _kWorkVertex$4[ebp+40], xmm6
  002cf	f3 0f 11 6d f0	 movss	 DWORD PTR _kWorkVertex$4[ebp+44], xmm5
  002d4	f3 0f 11 45 e8	 movss	 DWORD PTR _kWorkVertex$4[ebp+36], xmm0
  002d9	f3 0f 10 85 2c
	ff ff ff	 movss	 xmm0, DWORD PTR tv935[ebp]
  002e1	f3 0f 5c c4	 subss	 xmm0, xmm4

; 616  : 
; 617  : 			fFogCur=(fFogFar-kWorkVertex.kPosition.z)*fFogLenInv;

  002e5	f3 0f 59 85 5c
	ff ff ff	 mulss	 xmm0, DWORD PTR _fFogLenInv$1$[ebp]

; 618  : 			if (fFogCur<0.0f)

  002ed	0f 2f c8	 comiss	 xmm1, xmm0
  002f0	76 0e		 jbe	 SHORT $LN14@SoftwareTr

; 619  : 				kWorkVertex.dwFog=kWorkVertex.dwDiffuse=0x0000000|(kWorkVertex.dwDiffuse&0xffffff);

  002f2	81 e1 ff ff ff
	00		 and	 ecx, 16777215		; 00ffffffH
  002f8	89 4d d4	 mov	 DWORD PTR _kWorkVertex$4[ebp+16], ecx
  002fb	89 4d d8	 mov	 DWORD PTR _kWorkVertex$4[ebp+20], ecx
  002fe	eb 33		 jmp	 SHORT $LN17@SoftwareTr
$LN14@SoftwareTr:

; 620  : 			else if (fFogCur>1.0f)

  00300	0f 2f c7	 comiss	 xmm0, xmm7
  00303	76 0e		 jbe	 SHORT $LN16@SoftwareTr

; 621  : 				kWorkVertex.dwFog=kWorkVertex.dwDiffuse=0xFF000000|(kWorkVertex.dwDiffuse&0xffffff);

  00305	81 c9 00 00 00
	ff		 or	 ecx, -16777216		; ff000000H
  0030b	89 4d d4	 mov	 DWORD PTR _kWorkVertex$4[ebp+16], ecx
  0030e	89 4d d8	 mov	 DWORD PTR _kWorkVertex$4[ebp+20], ecx
  00311	eb 20		 jmp	 SHORT $LN17@SoftwareTr
$LN16@SoftwareTr:

; 622  : 			else
; 623  : 				kWorkVertex.dwFog=kWorkVertex.dwDiffuse=BYTE(255.0f*fFogCur)<<24|(kWorkVertex.dwDiffuse&0xffffff);

  00313	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  0031b	81 e1 ff ff ff
	00		 and	 ecx, 16777215		; 00ffffffH
  00321	f3 0f 2c c0	 cvttss2si eax, xmm0
  00325	0f b6 c0	 movzx	 eax, al
  00328	c1 e0 18	 shl	 eax, 24			; 00000018H
  0032b	0b c1		 or	 eax, ecx
  0032d	89 45 d4	 mov	 DWORD PTR _kWorkVertex$4[ebp+16], eax
  00330	89 45 d8	 mov	 DWORD PTR _kWorkVertex$4[ebp+20], eax
$LN17@SoftwareTr:

; 624  : 
; 625  : 			*(akTransVertex+uIndex)=kWorkVertex;

  00333	0f 10 45 c4	 movups	 xmm0, XMMWORD PTR _kWorkVertex$4[ebp]
  00337	83 c7 1c	 add	 edi, 28			; 0000001cH
  0033a	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0
  0033d	0f 10 45 d4	 movups	 xmm0, XMMWORD PTR _kWorkVertex$4[ebp+16]
  00341	0f 11 46 10	 movups	 XMMWORD PTR [esi+16], xmm0
  00345	0f 10 45 e4	 movups	 xmm0, XMMWORD PTR _kWorkVertex$4[ebp+32]
  00349	0f 11 46 20	 movups	 XMMWORD PTR [esi+32], xmm0
  0034d	f3 0f 7e 45 f4	 movq	 xmm0, QWORD PTR _kWorkVertex$4[ebp+48]
  00352	66 0f d6 46 30	 movq	 QWORD PTR [esi+48], xmm0
  00357	83 c6 38	 add	 esi, 56			; 00000038H
  0035a	83 ad 6c ff ff
	ff 01		 sub	 DWORD PTR tv961[ebp], 1
  00361	0f 85 79 fe ff
	ff		 jne	 $LL4@SoftwareTr

; 626  : 		}
; 627  : 	}

  00367	e9 48 01 00 00	 jmp	 $LN39@SoftwareTr
$LN12@SoftwareTr:

; 628  : 	else
; 629  : 	{

  0036c	8b f7		 mov	 esi, edi
  0036e	c7 85 6c ff ff
	ff 21 01 00 00	 mov	 DWORD PTR tv962[ebp], 289 ; 00000121H
  00378	8b bd 60 ff ff
	ff		 mov	 edi, DWORD PTR _akTransVertex$GSCopy$1$[ebp]
  0037e	66 90		 npad	 2
$LL7@SoftwareTr:

; 630  : 		float fLocalX;
; 631  : 		float fLocalY;
; 632  : 
; 633  : 		SoftwareTransformPatch_STLVertex kWorkVertex;
; 634  : 		for (UINT uIndex=0; uIndex!=CTerrainPatch::TERRAIN_VERTEX_COUNT; ++uIndex)
; 635  : 		{
; 636  : 			pkSrcPosition=&akSrcVertex[uIndex].kPosition;
; 637  : 			D3DXVec3Transform(&kWorkVertex.kPosition, pkSrcPosition, &m4Frustum);

  00380	8d 85 70 ff ff
	ff		 lea	 eax, DWORD PTR _m4Frustum$[ebp]
  00386	50		 push	 eax
  00387	56		 push	 esi
  00388	8d 45 c4	 lea	 eax, DWORD PTR _kWorkVertex$3[ebp]
  0038b	50		 push	 eax
  0038c	e8 00 00 00 00	 call	 _D3DXVec3Transform@12

; 638  : 			fLocalX=pkSrcPosition->x+fTerrainBaseX;
; 639  : 			fLocalY=pkSrcPosition->y+fTerrainBaseY;
; 640  : 			kWorkVertex.kPosition.w=1.0f/kWorkVertex.kPosition.w;

  00391	f3 0f 10 35 00
	00 00 00	 movss	 xmm6, DWORD PTR __real@3f800000
  00399	0f 28 ce	 movaps	 xmm1, xmm6

; 641  : 			kWorkVertex.kPosition.x*=kWorkVertex.kPosition.w;
; 642  : 			kWorkVertex.kPosition.y*=kWorkVertex.kPosition.w;

  0039c	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _kWorkVertex$3[ebp+8]
  003a1	f3 0f 5e 4d d0	 divss	 xmm1, DWORD PTR _kWorkVertex$3[ebp+12]

; 643  : 			kWorkVertex.kPosition.z*=kWorkVertex.kPosition.w;
; 644  : 			kWorkVertex.kPosition.x=(kWorkVertex.kPosition.x+1.0f)*fScreenHalfWidth;
; 645  : 			kWorkVertex.kPosition.y=(kWorkVertex.kPosition.y-1.0f)*fScreenHalfHeight;
; 646  : 			kWorkVertex.dwDiffuse=akSrcVertex[uIndex].dwDiffuse;

  003a6	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  003a9	89 45 d4	 mov	 DWORD PTR _kWorkVertex$3[ebp+16], eax

; 647  : 			kWorkVertex.dwFog=0xffffffff;

  003ac	c7 45 d8 ff ff
	ff ff		 mov	 DWORD PTR _kWorkVertex$3[ebp+20], -1
  003b3	f3 0f 10 1e	 movss	 xmm3, DWORD PTR [esi]
  003b7	f3 0f 59 c1	 mulss	 xmm0, xmm1
  003bb	0f 28 eb	 movaps	 xmm5, xmm3
  003be	f3 0f 58 ad 58
	ff ff ff	 addss	 xmm5, DWORD PTR _fTerrainBaseX$1$[ebp]
  003c6	f3 0f 10 56 04	 movss	 xmm2, DWORD PTR [esi+4]
  003cb	83 c6 1c	 add	 esi, 28			; 0000001cH
  003ce	f3 0f 11 45 cc	 movss	 DWORD PTR _kWorkVertex$3[ebp+8], xmm0
  003d3	0f 28 e2	 movaps	 xmm4, xmm2
  003d6	0f 28 c1	 movaps	 xmm0, xmm1

; 648  : 			kWorkVertex.kTexTile.x=pkSrcPosition->x*fTilePatternX;

  003d9	f3 0f 59 1d 00
	00 00 00	 mulss	 xmm3, DWORD PTR __real@3acccccd
  003e1	f3 0f 59 45 c4	 mulss	 xmm0, DWORD PTR _kWorkVertex$3[ebp]
  003e6	f3 0f 58 a5 54
	ff ff ff	 addss	 xmm4, DWORD PTR _fTerrainBaseY$1$[ebp]

; 649  : 			kWorkVertex.kTexTile.y=pkSrcPosition->y*fTilePatternY;

  003ee	f3 0f 59 15 00
	00 00 00	 mulss	 xmm2, DWORD PTR __real@bacccccd
  003f6	f3 0f 58 c6	 addss	 xmm0, xmm6
  003fa	f3 0f 11 4d d0	 movss	 DWORD PTR _kWorkVertex$3[ebp+12], xmm1
  003ff	f3 0f 11 5d dc	 movss	 DWORD PTR _kWorkVertex$3[ebp+24], xmm3
  00404	f3 0f 11 55 e0	 movss	 DWORD PTR _kWorkVertex$3[ebp+28], xmm2
  00409	f3 0f 59 85 50
	ff ff ff	 mulss	 xmm0, DWORD PTR _fScreenHalfWidth$1$[ebp]
  00411	f3 0f 11 45 c4	 movss	 DWORD PTR _kWorkVertex$3[ebp], xmm0
  00416	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _kWorkVertex$3[ebp+4]
  0041b	f3 0f 59 c1	 mulss	 xmm0, xmm1
  0041f	0f 57 c9	 xorps	 xmm1, xmm1
  00422	f3 0f 5c c6	 subss	 xmm0, xmm6
  00426	f3 0f 59 85 4c
	ff ff ff	 mulss	 xmm0, DWORD PTR _fScreenHalfHeight$1$[ebp]
  0042e	f3 0f 11 45 c8	 movss	 DWORD PTR _kWorkVertex$3[ebp+4], xmm0

; 650  : 			kWorkVertex.kTexAlpha.x=fLocalX*fAlphaPatternX+fAlphaBiasX;

  00433	0f 28 c5	 movaps	 xmm0, xmm5
  00436	f3 0f 59 85 48
	ff ff ff	 mulss	 xmm0, DWORD PTR _fAlphaPatternX$1$[ebp]

; 651  : 			kWorkVertex.kTexAlpha.y=fLocalY*fAlphaPatternY+fAlphaBiasY;
; 652  : 			kWorkVertex.kTexStaticShadow.x=fLocalX*fShadowPatternX;

  0043e	f3 0f 59 ad 38
	ff ff ff	 mulss	 xmm5, DWORD PTR _fShadowPatternX$1$[ebp]
  00446	f3 0f 58 85 44
	ff ff ff	 addss	 xmm0, DWORD PTR _fAlphaBiasX$1$[ebp]
  0044e	f3 0f 11 6d ec	 movss	 DWORD PTR _kWorkVertex$3[ebp+40], xmm5
  00453	f3 0f 11 45 e4	 movss	 DWORD PTR _kWorkVertex$3[ebp+32], xmm0
  00458	0f 28 c4	 movaps	 xmm0, xmm4
  0045b	f3 0f 59 85 40
	ff ff ff	 mulss	 xmm0, DWORD PTR _fAlphaPatternY$1$[ebp]

; 653  : 			kWorkVertex.kTexStaticShadow.y=fLocalY*fShadowPatternY;

  00463	f3 0f 59 a5 64
	ff ff ff	 mulss	 xmm4, DWORD PTR _fShadowPatternY$1$[ebp]
  0046b	f3 0f 58 85 3c
	ff ff ff	 addss	 xmm0, DWORD PTR _fAlphaBiasY$1$[ebp]
  00473	f3 0f 11 65 f0	 movss	 DWORD PTR _kWorkVertex$3[ebp+44], xmm4
  00478	f3 0f 11 45 e8	 movss	 DWORD PTR _kWorkVertex$3[ebp+36], xmm0

; 654  : 			kWorkVertex.kTexDynamicShadow.x=0.0f;
; 655  : 			kWorkVertex.kTexDynamicShadow.y=0.0f;
; 656  : 
; 657  : 			*(akTransVertex+uIndex)=kWorkVertex;

  0047d	0f 10 45 c4	 movups	 xmm0, XMMWORD PTR _kWorkVertex$3[ebp]
  00481	0f 11 07	 movups	 XMMWORD PTR [edi], xmm0
  00484	0f 10 45 d4	 movups	 xmm0, XMMWORD PTR _kWorkVertex$3[ebp+16]
  00488	0f 11 47 10	 movups	 XMMWORD PTR [edi+16], xmm0
  0048c	0f 10 45 e4	 movups	 xmm0, XMMWORD PTR _kWorkVertex$3[ebp+32]
  00490	0f 11 47 20	 movups	 XMMWORD PTR [edi+32], xmm0
  00494	0f 57 c0	 xorps	 xmm0, xmm0
  00497	0f 14 c1	 unpcklps xmm0, xmm1
  0049a	66 0f d6 47 30	 movq	 QWORD PTR [edi+48], xmm0
  0049f	83 c7 38	 add	 edi, 56			; 00000038H
  004a2	83 ad 6c ff ff
	ff 01		 sub	 DWORD PTR tv962[ebp], 1
  004a9	66 0f d6 45 f4	 movq	 QWORD PTR _kWorkVertex$3[ebp+48], xmm0
  004ae	0f 85 cc fe ff
	ff		 jne	 $LL7@SoftwareTr
$LN39@SoftwareTr:

; 658  : 		}
; 659  : 	}
; 660  : 
; 661  : 	if (isDynamicShadow)

  004b4	80 7d 20 00	 cmp	 BYTE PTR _isDynamicShadow$[ebp], 0
  004b8	8b b5 68 ff ff
	ff		 mov	 esi, DWORD PTR _rkTPRS$GSCopy$1$[ebp]
  004be	8b bd 34 ff ff
	ff		 mov	 edi, DWORD PTR _akSrcVertex$1$[ebp]
  004c4	74 70		 je	 SHORT $LN9@SoftwareTr

; 662  : 	{
; 663  : 		D3DXMATRIX m4DynamicShadow=rkTPRS.m_m4DynamicShadow;

  004c6	0f 10 86 80 00
	00 00		 movups	 xmm0, XMMWORD PTR [esi+128]
  004cd	c7 85 68 ff ff
	ff 21 01 00 00	 mov	 DWORD PTR tv960[ebp], 289 ; 00000121H
  004d7	0f 11 45 bc	 movups	 XMMWORD PTR _m4DynamicShadow$2[ebp], xmm0
  004db	0f 10 86 90 00
	00 00		 movups	 xmm0, XMMWORD PTR [esi+144]
  004e2	0f 11 45 cc	 movups	 XMMWORD PTR _m4DynamicShadow$2[ebp+16], xmm0
  004e6	0f 10 86 a0 00
	00 00		 movups	 xmm0, XMMWORD PTR [esi+160]
  004ed	0f 11 45 dc	 movups	 XMMWORD PTR _m4DynamicShadow$2[ebp+32], xmm0
  004f1	0f 10 86 b0 00
	00 00		 movups	 xmm0, XMMWORD PTR [esi+176]
  004f8	8b b5 60 ff ff
	ff		 mov	 esi, DWORD PTR _akTransVertex$GSCopy$1$[ebp]
  004fe	83 c6 34	 add	 esi, 52			; 00000034H
  00501	0f 11 45 ec	 movups	 XMMWORD PTR _m4DynamicShadow$2[ebp+48], xmm0
$LL10@SoftwareTr:

; 664  : 
; 665  : 		D3DXVECTOR3 v3Shadow;
; 666  : 		for (UINT uIndex=0; uIndex!=CTerrainPatch::TERRAIN_VERTEX_COUNT; ++uIndex)
; 667  : 		{
; 668  : 			D3DXVec3TransformCoord(&v3Shadow, &akSrcVertex[uIndex].kPosition, &m4DynamicShadow);

  00505	8d 45 bc	 lea	 eax, DWORD PTR _m4DynamicShadow$2[ebp]
  00508	50		 push	 eax
  00509	57		 push	 edi
  0050a	8d 45 b0	 lea	 eax, DWORD PTR _v3Shadow$1[ebp]
  0050d	50		 push	 eax
  0050e	e8 00 00 00 00	 call	 _D3DXVec3TransformCoord@12

; 669  : 			akTransVertex[uIndex].kTexDynamicShadow.x=v3Shadow.x;

  00513	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _v3Shadow$1[ebp]
  00518	8d 76 38	 lea	 esi, DWORD PTR [esi+56]
  0051b	f3 0f 11 46 c4	 movss	 DWORD PTR [esi-60], xmm0
  00520	83 c7 1c	 add	 edi, 28			; 0000001cH
  00523	83 ad 68 ff ff
	ff 01		 sub	 DWORD PTR tv960[ebp], 1

; 670  : 			akTransVertex[uIndex].kTexDynamicShadow.y=v3Shadow.y;

  0052a	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _v3Shadow$1[ebp+4]
  0052f	f3 0f 11 46 c8	 movss	 DWORD PTR [esi-56], xmm0
  00534	75 cf		 jne	 SHORT $LL10@SoftwareTr
$LN9@SoftwareTr:

; 671  : 		}
; 672  : 	}
; 673  : 
; 674  : 	return true;
; 675  : }

  00536	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00539	b0 01		 mov	 al, 1
  0053b	5f		 pop	 edi
  0053c	33 cd		 xor	 ecx, ebp
  0053e	5e		 pop	 esi
  0053f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00544	8b e5		 mov	 esp, ebp
  00546	5d		 pop	 ebp
  00547	c2 1c 00	 ret	 28			; 0000001cH
?__SoftwareTransformPatch_SetTransform@CMapOutdoor@@IAE_NAAUSoftwareTransformPatch_SRenderState@1@PAUSoftwareTransformPatch_STLVertex@1@AAVCTerrainPatchProxy@@II_N3@Z ENDP ; CMapOutdoor::__SoftwareTransformPatch_SetTransform
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
;	COMDAT ?__SoftwareTransformPatch_BuildPipeline@CMapOutdoor@@IAEXAAUSoftwareTransformPatch_SRenderState@1@@Z
_TEXT	SEGMENT
_dwR$1$ = -248						; size = 4
_this$GSCopy$1$ = -244					; size = 4
$T1 = -244						; size = 4
_dwB$1$ = -240						; size = 4
_uScreenWidth$ = -240					; size = 4
_dwG$1$ = -236						; size = 4
_uScreenHeight$ = -236					; size = 4
_m4View$ = -232						; size = 64
$T2 = -168						; size = 64
_m4Proj$ = -104						; size = 64
_kFogFarVector$ = -40					; size = 12
_kFogNearVector$ = -28					; size = 12
$T3 = -16						; size = 12
$T4 = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_rkTPRS$ = 8						; size = 4
?__SoftwareTransformPatch_BuildPipeline@CMapOutdoor@@IAEXAAUSoftwareTransformPatch_SRenderState@1@@Z PROC ; CMapOutdoor::__SoftwareTransformPatch_BuildPipeline, COMDAT
; _this$ = ecx

; 501  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f8 00 00
	00		 sub	 esp, 248		; 000000f8H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi
  00014	8b 75 08	 mov	 esi, DWORD PTR _rkTPRS$[ebp]
  00017	57		 push	 edi

; 502  : 	memset(&rkTPRS, 0, sizeof(rkTPRS));

  00018	68 98 01 00 00	 push	 408			; 00000198H
  0001d	8b f9		 mov	 edi, ecx
  0001f	6a 00		 push	 0
  00021	56		 push	 esi
  00022	89 bd 0c ff ff
	ff		 mov	 DWORD PTR _this$GSCopy$1$[ebp], edi
  00028	e8 00 00 00 00	 call	 _memset

; 503  : 
; 504  : 	if (mc_pEnvironmentData)

  0002d	8b 7f 3c	 mov	 edi, DWORD PTR [edi+60]
  00030	83 c4 0c	 add	 esp, 12			; 0000000cH
  00033	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000
  0003b	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@3f000000
  00043	85 ff		 test	 edi, edi
  00045	0f 84 6e 01 00
	00		 je	 $LN2@SoftwareTr
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 931  :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  0004b	f3 0f 10 87 2c
	01 00 00	 movss	 xmm0, DWORD PTR [edi+300]
  00053	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@437f0000
  0005b	0f 2f c1	 comiss	 xmm0, xmm1
  0005e	0f 57 c9	 xorps	 xmm1, xmm1
  00061	72 0c		 jb	 SHORT $LN9@SoftwareTr
  00063	c7 85 08 ff ff
	ff ff 00 00 00	 mov	 DWORD PTR _dwR$1$[ebp], 255 ; 000000ffH
  0006d	eb 37		 jmp	 SHORT $LN8@SoftwareTr
$LN9@SoftwareTr:
  0006f	0f 2f c8	 comiss	 xmm1, xmm0
  00072	72 0c		 jb	 SHORT $LN7@SoftwareTr
  00074	c7 85 08 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _dwR$1$[ebp], 0
  0007e	eb 26		 jmp	 SHORT $LN8@SoftwareTr
$LN7@SoftwareTr:
  00080	f3 0f 59 c3	 mulss	 xmm0, xmm3
  00084	f3 0f 58 c2	 addss	 xmm0, xmm2
  00088	e8 00 00 00 00	 call	 __ftol3
  0008d	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@3f000000
  00095	0f 57 c9	 xorps	 xmm1, xmm1
  00098	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@437f0000
  000a0	89 85 08 ff ff
	ff		 mov	 DWORD PTR _dwR$1$[ebp], eax
$LN8@SoftwareTr:

; 932  :     DWORD dwG = g >= 1.0f ? 0xff : g <= 0.0f ? 0x00 : (DWORD) (g * 255.0f + 0.5f);

  000a6	f3 0f 10 87 30
	01 00 00	 movss	 xmm0, DWORD PTR [edi+304]
  000ae	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  000b5	72 0c		 jb	 SHORT $LN13@SoftwareTr
  000b7	c7 85 14 ff ff
	ff ff 00 00 00	 mov	 DWORD PTR _dwG$1$[ebp], 255 ; 000000ffH
  000c1	eb 24		 jmp	 SHORT $LN12@SoftwareTr
$LN13@SoftwareTr:
  000c3	0f 2f c8	 comiss	 xmm1, xmm0
  000c6	72 0c		 jb	 SHORT $LN11@SoftwareTr
  000c8	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _dwG$1$[ebp], 0
  000d2	eb 13		 jmp	 SHORT $LN12@SoftwareTr
$LN11@SoftwareTr:
  000d4	f3 0f 59 c3	 mulss	 xmm0, xmm3
  000d8	f3 0f 58 c2	 addss	 xmm0, xmm2
  000dc	e8 00 00 00 00	 call	 __ftol3
  000e1	89 85 14 ff ff
	ff		 mov	 DWORD PTR _dwG$1$[ebp], eax
$LN12@SoftwareTr:

; 933  :     DWORD dwB = b >= 1.0f ? 0xff : b <= 0.0f ? 0x00 : (DWORD) (b * 255.0f + 0.5f);

  000e7	f3 0f 10 87 34
	01 00 00	 movss	 xmm0, DWORD PTR [edi+308]
  000ef	0f 57 c9	 xorps	 xmm1, xmm1
  000f2	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  000f9	72 0c		 jb	 SHORT $LN17@SoftwareTr
  000fb	c7 85 10 ff ff
	ff ff 00 00 00	 mov	 DWORD PTR _dwB$1$[ebp], 255 ; 000000ffH
  00105	eb 2f		 jmp	 SHORT $LN16@SoftwareTr
$LN17@SoftwareTr:
  00107	0f 2f c8	 comiss	 xmm1, xmm0
  0010a	72 0c		 jb	 SHORT $LN15@SoftwareTr
  0010c	c7 85 10 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _dwB$1$[ebp], 0
  00116	eb 1e		 jmp	 SHORT $LN16@SoftwareTr
$LN15@SoftwareTr:
  00118	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  00120	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  00128	e8 00 00 00 00	 call	 __ftol3
  0012d	89 85 10 ff ff
	ff		 mov	 DWORD PTR _dwB$1$[ebp], eax
  00133	0f 57 c9	 xorps	 xmm1, xmm1
$LN16@SoftwareTr:

; 934  :     DWORD dwA = a >= 1.0f ? 0xff : a <= 0.0f ? 0x00 : (DWORD) (a * 255.0f + 0.5f);

  00136	f3 0f 10 87 38
	01 00 00	 movss	 xmm0, DWORD PTR [edi+312]
  0013e	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  00145	72 07		 jb	 SHORT $LN21@SoftwareTr
  00147	b8 ff 00 00 00	 mov	 eax, 255		; 000000ffH
  0014c	eb 1e		 jmp	 SHORT $LN20@SoftwareTr
$LN21@SoftwareTr:
  0014e	0f 2f c8	 comiss	 xmm1, xmm0
  00151	72 04		 jb	 SHORT $LN19@SoftwareTr
  00153	33 c0		 xor	 eax, eax
  00155	eb 15		 jmp	 SHORT $LN20@SoftwareTr
$LN19@SoftwareTr:
  00157	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  0015f	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  00167	e8 00 00 00 00	 call	 __ftol3
$LN20@SoftwareTr:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp

; 507  : 		rkTPRS.m_fFogNearDistance = mc_pEnvironmentData->GetFogNearDistance();

  0016c	8b bd 0c ff ff
	ff		 mov	 edi, DWORD PTR _this$GSCopy$1$[ebp]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 936  :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  00172	c1 e0 08	 shl	 eax, 8
  00175	0b 85 08 ff ff
	ff		 or	 eax, DWORD PTR _dwR$1$[ebp]
  0017b	c1 e0 08	 shl	 eax, 8
  0017e	0b 85 14 ff ff
	ff		 or	 eax, DWORD PTR _dwG$1$[ebp]
  00184	c1 e0 08	 shl	 eax, 8
  00187	0b 85 10 ff ff
	ff		 or	 eax, DWORD PTR _dwB$1$[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp

; 506  : 		rkTPRS.m_dwFogColor = mc_pEnvironmentData->FogColor;

  0018d	89 86 78 01 00
	00		 mov	 DWORD PTR [esi+376], eax

; 507  : 		rkTPRS.m_fFogNearDistance = mc_pEnvironmentData->GetFogNearDistance();

  00193	8b 4f 3c	 mov	 ecx, DWORD PTR [edi+60]
  00196	e8 00 00 00 00	 call	 ?GetFogNearDistance@SEnvironmentData@@QBEMXZ ; SEnvironmentData::GetFogNearDistance
  0019b	d9 9e 84 01 00
	00		 fstp	 DWORD PTR [esi+388]

; 508  : 		rkTPRS.m_fFogFarDistance = mc_pEnvironmentData->GetFogFarDistance();

  001a1	8b 4f 3c	 mov	 ecx, DWORD PTR [edi+60]
  001a4	e8 00 00 00 00	 call	 ?GetFogFarDistance@SEnvironmentData@@QBEMXZ ; SEnvironmentData::GetFogFarDistance
  001a9	d9 9d 0c ff ff
	ff		 fstp	 DWORD PTR $T1[ebp]

; 509  : 	}

  001af	f3 0f 10 85 0c
	ff ff ff	 movss	 xmm0, DWORD PTR $T1[ebp]
  001b7	eb 22		 jmp	 SHORT $LN3@SoftwareTr
$LN2@SoftwareTr:

; 510  : 	else
; 511  : 	{
; 512  : 		rkTPRS.m_dwFogColor = 0xffffffff;
; 513  : 		rkTPRS.m_fFogNearDistance = 5000.0f;
; 514  : 		rkTPRS.m_fFogFarDistance = 10000.0f;

  001b9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@461c4000
  001c1	8b bd 0c ff ff
	ff		 mov	 edi, DWORD PTR _this$GSCopy$1$[ebp]
  001c7	c7 86 78 01 00
	00 ff ff ff ff	 mov	 DWORD PTR [esi+376], -1
  001d1	c7 86 84 01 00
	00 00 40 9c 45	 mov	 DWORD PTR [esi+388], 1167867904 ; 459c4000H
$LN3@SoftwareTr:

; 515  : 	}
; 516  : 
; 517  : 	UINT uScreenWidth;
; 518  : 	UINT uScreenHeight;
; 519  : 	CScreen::GetBackBufferSize(&uScreenWidth, &uScreenHeight);

  001db	8d 85 14 ff ff
	ff		 lea	 eax, DWORD PTR _uScreenHeight$[ebp]
  001e1	f3 0f 11 86 88
	01 00 00	 movss	 DWORD PTR [esi+392], xmm0
  001e9	50		 push	 eax
  001ea	8d 85 10 ff ff
	ff		 lea	 eax, DWORD PTR _uScreenWidth$[ebp]
  001f0	50		 push	 eax
  001f1	e8 00 00 00 00	 call	 ?GetBackBufferSize@CGraphicBase@@SAXPAI0@Z ; CGraphicBase::GetBackBufferSize

; 520  : 
; 521  : 	rkTPRS.m_fScreenHalfWidth = +float(uScreenWidth) / 2.0f;

  001f6	8b 85 10 ff ff
	ff		 mov	 eax, DWORD PTR _uScreenWidth$[ebp]
  001fc	83 c4 08	 add	 esp, 8
  001ff	66 0f 6e c0	 movd	 xmm0, eax
  00203	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  00207	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0020a	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]

; 522  : 	rkTPRS.m_fScreenHalfHeight = -float(uScreenHeight) / 2.0f;

  00213	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR _uScreenHeight$[ebp]
  00219	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  0021d	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
  00225	f3 0f 11 86 7c
	01 00 00	 movss	 DWORD PTR [esi+380], xmm0
  0022d	66 0f 6e c0	 movd	 xmm0, eax
  00231	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  00235	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00238	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]

; 523  : 
; 524  : 	STATEMANAGER.GetLight(0, &rkTPRS.m_kLight);

  00241	8d 86 c0 00 00
	00		 lea	 eax, DWORD PTR [esi+192]
  00247	50		 push	 eax
  00248	6a 00		 push	 0
  0024a	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  0024e	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00255	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
  0025d	f3 0f 11 86 80
	01 00 00	 movss	 DWORD PTR [esi+384], xmm0
  00265	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0026b	e8 00 00 00 00	 call	 ?GetLight@CStateManager@@QAEXKPAU_D3DLIGHT8@@@Z ; CStateManager::GetLight

; 525  : 	STATEMANAGER.GetMaterial(&rkTPRS.m_kMtrl);

  00270	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00276	8d 86 28 01 00
	00		 lea	 eax, DWORD PTR [esi+296]
  0027c	50		 push	 eax
  0027d	e8 00 00 00 00	 call	 ?GetMaterial@CStateManager@@QAEXPAU_D3DMATERIAL8@@@Z ; CStateManager::GetMaterial

; 526  : 
; 527  : 	D3DXMATRIX m4View;STATEMANAGER.GetTransform(D3DTS_VIEW, &m4View);

  00282	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00288	8d 85 18 ff ff
	ff		 lea	 eax, DWORD PTR _m4View$[ebp]
  0028e	50		 push	 eax
  0028f	6a 02		 push	 2
  00291	e8 00 00 00 00	 call	 ?GetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PAU_D3DMATRIX@@@Z ; CStateManager::GetTransform

; 528  : 	D3DXMATRIX m4Proj;STATEMANAGER.GetTransform(D3DTS_PROJECTION, &m4Proj);

  00296	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0029c	8d 45 98	 lea	 eax, DWORD PTR _m4Proj$[ebp]
  0029f	50		 push	 eax
  002a0	6a 03		 push	 3
  002a2	e8 00 00 00 00	 call	 ?GetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PAU_D3DMATRIX@@@Z ; CStateManager::GetTransform

; 529  : 
; 530  : 	D3DXMatrixMultiply(&rkTPRS.m_m4Frustum, &m4View, &m4Proj);

  002a7	8d 45 98	 lea	 eax, DWORD PTR _m4Proj$[ebp]
  002aa	50		 push	 eax
  002ab	8d 85 18 ff ff
	ff		 lea	 eax, DWORD PTR _m4View$[ebp]
  002b1	50		 push	 eax
  002b2	8d 46 40	 lea	 eax, DWORD PTR [esi+64]
  002b5	50		 push	 eax
  002b6	e8 00 00 00 00	 call	 _D3DXMatrixMultiply@12

; 531  : 
; 532  : 	rkTPRS.m_v3Player.x = +m_v3Player.x;

  002bb	8b 87 a8 0e 00
	00		 mov	 eax, DWORD PTR [edi+3752]
  002c1	89 86 6c 01 00
	00		 mov	 DWORD PTR [esi+364], eax

; 533  : 	rkTPRS.m_v3Player.y = -m_v3Player.y;

  002c7	f3 0f 10 87 ac
	0e 00 00	 movss	 xmm0, DWORD PTR [edi+3756]
  002cf	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  002d6	f3 0f 11 86 70
	01 00 00	 movss	 DWORD PTR [esi+368], xmm0

; 534  : 	rkTPRS.m_v3Player.z = +m_v3Player.z;

  002de	8b 87 b0 0e 00
	00		 mov	 eax, DWORD PTR [edi+3760]

; 536  : 	rkTPRS.m_m4Proj = m4Proj;

  002e4	0f 10 45 98	 movups	 xmm0, XMMWORD PTR _m4Proj$[ebp]
  002e8	89 86 74 01 00
	00		 mov	 DWORD PTR [esi+372], eax

; 537  : 	rkTPRS.m_m4DynamicShadow = m_matLightView * m_matDynamicShadowScale;

  002ee	8d 87 88 08 00
	00		 lea	 eax, DWORD PTR [edi+2184]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 580  :     D3DXMatrixMultiply(&matT, this, &mat);

  002f4	50		 push	 eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp

; 536  : 	rkTPRS.m_m4Proj = m4Proj;

  002f5	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0

; 537  : 	rkTPRS.m_m4DynamicShadow = m_matLightView * m_matDynamicShadowScale;

  002f8	8d 87 c8 08 00
	00		 lea	 eax, DWORD PTR [edi+2248]
  002fe	0f 10 45 a8	 movups	 xmm0, XMMWORD PTR _m4Proj$[ebp+16]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 580  :     D3DXMatrixMultiply(&matT, this, &mat);

  00302	50		 push	 eax
  00303	8d 85 58 ff ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp

; 536  : 	rkTPRS.m_m4Proj = m4Proj;

  00309	0f 11 46 10	 movups	 XMMWORD PTR [esi+16], xmm0
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 580  :     D3DXMatrixMultiply(&matT, this, &mat);

  0030d	50		 push	 eax
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp

; 536  : 	rkTPRS.m_m4Proj = m4Proj;

  0030e	0f 10 45 b8	 movups	 xmm0, XMMWORD PTR _m4Proj$[ebp+32]
  00312	0f 11 46 20	 movups	 XMMWORD PTR [esi+32], xmm0
  00316	0f 10 45 c8	 movups	 xmm0, XMMWORD PTR _m4Proj$[ebp+48]
  0031a	0f 11 46 30	 movups	 XMMWORD PTR [esi+48], xmm0
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 580  :     D3DXMatrixMultiply(&matT, this, &mat);

  0031e	e8 00 00 00 00	 call	 _D3DXMatrixMultiply@12
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp

; 537  : 	rkTPRS.m_m4DynamicShadow = m_matLightView * m_matDynamicShadowScale;

  00323	0f 10 85 58 ff
	ff ff		 movups	 xmm0, XMMWORD PTR $T2[ebp]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 180  :     x = fx;

  0032a	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T4[ebp], 0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp

; 537  : 	rkTPRS.m_m4DynamicShadow = m_matLightView * m_matDynamicShadowScale;

  00331	0f 11 86 80 00
	00 00		 movups	 XMMWORD PTR [esi+128], xmm0
  00338	0f 10 85 68 ff
	ff ff		 movups	 xmm0, XMMWORD PTR $T2[ebp+16]
  0033f	0f 11 86 90 00
	00 00		 movups	 XMMWORD PTR [esi+144], xmm0
  00346	0f 10 85 78 ff
	ff ff		 movups	 xmm0, XMMWORD PTR $T2[ebp+32]
  0034d	0f 11 86 a0 00
	00 00		 movups	 XMMWORD PTR [esi+160], xmm0
  00354	0f 10 45 88	 movups	 xmm0, XMMWORD PTR $T2[ebp+48]
  00358	0f 11 86 b0 00
	00 00		 movups	 XMMWORD PTR [esi+176], xmm0

; 540  : 	D3DXVec3TransformCoord(&kFogNearVector, &D3DXVECTOR3(0.0f, 0.0f, -rkTPRS.m_fFogNearDistance), &rkTPRS.m_m4Proj);

  0035f	f3 0f 10 86 84
	01 00 00	 movss	 xmm0, DWORD PTR [esi+388]
  00367	8d 45 f0	 lea	 eax, DWORD PTR $T4[ebp]
  0036a	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00371	56		 push	 esi
  00372	50		 push	 eax
  00373	8d 45 e4	 lea	 eax, DWORD PTR _kFogNearVector$[ebp]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 181  :     y = fy;

  00376	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+4], 0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp

; 540  : 	D3DXVec3TransformCoord(&kFogNearVector, &D3DXVECTOR3(0.0f, 0.0f, -rkTPRS.m_fFogNearDistance), &rkTPRS.m_m4Proj);

  0037d	50		 push	 eax
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 182  :     z = fz;

  0037e	f3 0f 11 45 f8	 movss	 DWORD PTR $T4[ebp+8], xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp

; 540  : 	D3DXVec3TransformCoord(&kFogNearVector, &D3DXVECTOR3(0.0f, 0.0f, -rkTPRS.m_fFogNearDistance), &rkTPRS.m_m4Proj);

  00383	e8 00 00 00 00	 call	 _D3DXVec3TransformCoord@12

; 543  : 	D3DXVec3TransformCoord(&kFogFarVector, &D3DXVECTOR3(0.0f, 0.0f, -rkTPRS.m_fFogFarDistance), &rkTPRS.m_m4Proj);

  00388	f3 0f 10 86 88
	01 00 00	 movss	 xmm0, DWORD PTR [esi+392]
  00390	8d 45 f0	 lea	 eax, DWORD PTR $T3[ebp]
  00393	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0039a	56		 push	 esi
  0039b	50		 push	 eax
  0039c	8d 45 d8	 lea	 eax, DWORD PTR _kFogFarVector$[ebp]
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 180  :     x = fx;

  0039f	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T3[ebp], 0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp

; 543  : 	D3DXVec3TransformCoord(&kFogFarVector, &D3DXVECTOR3(0.0f, 0.0f, -rkTPRS.m_fFogFarDistance), &rkTPRS.m_m4Proj);

  003a6	50		 push	 eax
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 181  :     y = fy;

  003a7	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+4], 0

; 182  :     z = fz;

  003ae	f3 0f 11 45 f8	 movss	 DWORD PTR $T3[ebp+8], xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp

; 543  : 	D3DXVec3TransformCoord(&kFogFarVector, &D3DXVECTOR3(0.0f, 0.0f, -rkTPRS.m_fFogFarDistance), &rkTPRS.m_m4Proj);

  003b3	e8 00 00 00 00	 call	 _D3DXVec3TransformCoord@12

; 544  : 
; 545  : 	float fFogNear = kFogNearVector.z;
; 546  : 	float fFogFar = kFogFarVector.z;
; 547  : 	float fFogLenInv = 1.0f / (fFogFar-fFogNear);
; 548  : 
; 549  : 	rkTPRS.m_fFogNearTransZ = fFogNear;

  003b8	f3 0f 10 4d ec	 movss	 xmm1, DWORD PTR _kFogNearVector$[ebp+8]

; 550  : 	rkTPRS.m_fFogFarTransZ = fFogFar;

  003bd	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _kFogFarVector$[ebp+8]
  003c2	f3 0f 11 86 90
	01 00 00	 movss	 DWORD PTR [esi+400], xmm0
  003ca	f3 0f 5c c1	 subss	 xmm0, xmm1
  003ce	f3 0f 11 8e 8c
	01 00 00	 movss	 DWORD PTR [esi+396], xmm1
  003d6	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000

; 551  : 	rkTPRS.m_fFogLenInv = fFogLenInv;
; 552  : 
; 553  : }

  003de	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  003e1	5f		 pop	 edi
  003e2	f3 0f 5e c8	 divss	 xmm1, xmm0
  003e6	33 cd		 xor	 ecx, ebp
  003e8	f3 0f 11 8e 94
	01 00 00	 movss	 DWORD PTR [esi+404], xmm1
  003f0	5e		 pop	 esi
  003f1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003f6	8b e5		 mov	 esp, ebp
  003f8	5d		 pop	 ebp
  003f9	c2 04 00	 ret	 4
?__SoftwareTransformPatch_BuildPipeline@CMapOutdoor@@IAEXAAUSoftwareTransformPatch_SRenderState@1@@Z ENDP ; CMapOutdoor::__SoftwareTransformPatch_BuildPipeline
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
;	COMDAT ?__SoftwareTransformPatch_Destroy@CMapOutdoor@@IAEXXZ
_TEXT	SEGMENT
?__SoftwareTransformPatch_Destroy@CMapOutdoor@@IAEXXZ PROC ; CMapOutdoor::__SoftwareTransformPatch_Destroy, COMDAT
; _this$ = ecx

; 784  : {

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx
  00003	56		 push	 esi
  00004	57		 push	 edi

; 785  : 	{
; 786  : 		for (UINT uIndex=0; uIndex!=SoftwareTransformPatch_SData::SPLAT_VB_NUM; ++uIndex)

  00005	bf 08 00 00 00	 mov	 edi, 8
  0000a	8d b3 c0 09 00
	00		 lea	 esi, DWORD PTR [ebx+2496]
$LL4@SoftwareTr:

; 787  : 		{
; 788  : 			if (m_kSTPD.m_pkVBSplat[uIndex])

  00010	8b 16		 mov	 edx, DWORD PTR [esi]
  00012	85 d2		 test	 edx, edx
  00014	74 06		 je	 SHORT $LN2@SoftwareTr

; 789  : 				m_kSTPD.m_pkVBSplat[uIndex]->Release();

  00016	8b 02		 mov	 eax, DWORD PTR [edx]
  00018	52		 push	 edx
  00019	ff 50 08	 call	 DWORD PTR [eax+8]
$LN2@SoftwareTr:

; 785  : 	{
; 786  : 		for (UINT uIndex=0; uIndex!=SoftwareTransformPatch_SData::SPLAT_VB_NUM; ++uIndex)

  0001c	83 c6 04	 add	 esi, 4
  0001f	83 ef 01	 sub	 edi, 1
  00022	75 ec		 jne	 SHORT $LL4@SoftwareTr

; 790  : 		}
; 791  : 	}
; 792  : 
; 793  : 	{
; 794  : 		for (UINT uIndex=0; uIndex!=SoftwareTransformPatch_SData::NONE_VB_NUM; ++uIndex)

  00024	8d b3 e0 09 00
	00		 lea	 esi, DWORD PTR [ebx+2528]
  0002a	bf 08 00 00 00	 mov	 edi, 8
  0002f	90		 npad	 1
$LL7@SoftwareTr:

; 795  : 		{
; 796  : 			if (m_kSTPD.m_pkVBNone[uIndex])

  00030	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00032	85 c9		 test	 ecx, ecx
  00034	74 06		 je	 SHORT $LN5@SoftwareTr

; 797  : 				m_kSTPD.m_pkVBNone[uIndex]->Release();

  00036	8b 01		 mov	 eax, DWORD PTR [ecx]
  00038	51		 push	 ecx
  00039	ff 50 08	 call	 DWORD PTR [eax+8]
$LN5@SoftwareTr:

; 790  : 		}
; 791  : 	}
; 792  : 
; 793  : 	{
; 794  : 		for (UINT uIndex=0; uIndex!=SoftwareTransformPatch_SData::NONE_VB_NUM; ++uIndex)

  0003c	83 c6 04	 add	 esi, 4
  0003f	83 ef 01	 sub	 edi, 1
  00042	75 ec		 jne	 SHORT $LL7@SoftwareTr

; 798  : 		}
; 799  : 	}
; 800  : 	__SoftwareTransformPatch_Initialize();

  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	8b cb		 mov	 ecx, ebx
  00048	5b		 pop	 ebx
  00049	e9 00 00 00 00	 jmp	 ?__SoftwareTransformPatch_Initialize@CMapOutdoor@@IAEXXZ ; CMapOutdoor::__SoftwareTransformPatch_Initialize
?__SoftwareTransformPatch_Destroy@CMapOutdoor@@IAEXXZ ENDP ; CMapOutdoor::__SoftwareTransformPatch_Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
;	COMDAT ?__SoftwareTransformPatch_Create@CMapOutdoor@@IAE_NXZ
_TEXT	SEGMENT
?__SoftwareTransformPatch_Create@CMapOutdoor@@IAE_NXZ PROC ; CMapOutdoor::__SoftwareTransformPatch_Create, COMDAT
; _this$ = ecx

; 748  : {

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx
  00003	56		 push	 esi
  00004	57		 push	 edi

; 749  : 	{
; 750  : 		for (UINT uIndex=0; uIndex!=SoftwareTransformPatch_SData::SPLAT_VB_NUM; ++uIndex)

  00005	33 f6		 xor	 esi, esi
  00007	8d bb c0 09 00
	00		 lea	 edi, DWORD PTR [ebx+2496]
  0000d	0f 1f 00	 npad	 3
$LL4@SoftwareTr:

; 751  : 		{
; 752  : 			assert(NULL==m_kSTPD.m_pkVBSplat[uIndex]);
; 753  : 			if (FAILED(

  00010	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  00015	57		 push	 edi
  00016	6a 02		 push	 2
  00018	68 c4 02 00 00	 push	 708			; 000002c4H
  0001d	8b 10		 mov	 edx, DWORD PTR [eax]
  0001f	68 08 02 00 00	 push	 520			; 00000208H
  00024	68 28 2d 00 00	 push	 11560			; 00002d28H
  00029	50		 push	 eax
  0002a	ff 52 5c	 call	 DWORD PTR [edx+92]
  0002d	85 c0		 test	 eax, eax
  0002f	78 3e		 js	 SHORT $LN14@SoftwareTr

; 749  : 	{
; 750  : 		for (UINT uIndex=0; uIndex!=SoftwareTransformPatch_SData::SPLAT_VB_NUM; ++uIndex)

  00031	46		 inc	 esi
  00032	83 c7 04	 add	 edi, 4
  00035	83 fe 08	 cmp	 esi, 8
  00038	75 d6		 jne	 SHORT $LL4@SoftwareTr

; 754  : 				ms_lpd3dDevice->CreateVertexBuffer(
; 755  : 					sizeof(SoftwareTransformPatch_SSplatVertex)*CTerrainPatch::TERRAIN_VERTEX_COUNT,
; 756  : 					D3DUSAGE_DYNAMIC|D3DUSAGE_WRITEONLY,
; 757  : 					D3DFVF_XYZRHW|D3DFVF_DIFFUSE|D3DFVF_SPECULAR|D3DFVF_TEX2,
; 758  : 					D3DPOOL_SYSTEMMEM,
; 759  : 					&m_kSTPD.m_pkVBSplat[uIndex]
; 760  : 				)
; 761  : 			)) return false;
; 762  : 		}
; 763  : 	}
; 764  : 
; 765  : 	{
; 766  : 		for (UINT uIndex=0; uIndex!=SoftwareTransformPatch_SData::NONE_VB_NUM; ++uIndex)

  0003a	33 f6		 xor	 esi, esi
  0003c	8d bb e0 09 00
	00		 lea	 edi, DWORD PTR [ebx+2528]
$LL7@SoftwareTr:

; 767  : 		{
; 768  : 			assert(NULL==m_kSTPD.m_pkVBNone[uIndex]);
; 769  : 			if (FAILED(

  00042	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  00047	57		 push	 edi
  00048	6a 02		 push	 2
  0004a	6a 04		 push	 4
  0004c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004e	68 08 02 00 00	 push	 520			; 00000208H
  00053	68 10 12 00 00	 push	 4624			; 00001210H
  00058	50		 push	 eax
  00059	ff 51 5c	 call	 DWORD PTR [ecx+92]
  0005c	85 c0		 test	 eax, eax
  0005e	78 0f		 js	 SHORT $LN14@SoftwareTr

; 754  : 				ms_lpd3dDevice->CreateVertexBuffer(
; 755  : 					sizeof(SoftwareTransformPatch_SSplatVertex)*CTerrainPatch::TERRAIN_VERTEX_COUNT,
; 756  : 					D3DUSAGE_DYNAMIC|D3DUSAGE_WRITEONLY,
; 757  : 					D3DFVF_XYZRHW|D3DFVF_DIFFUSE|D3DFVF_SPECULAR|D3DFVF_TEX2,
; 758  : 					D3DPOOL_SYSTEMMEM,
; 759  : 					&m_kSTPD.m_pkVBSplat[uIndex]
; 760  : 				)
; 761  : 			)) return false;
; 762  : 		}
; 763  : 	}
; 764  : 
; 765  : 	{
; 766  : 		for (UINT uIndex=0; uIndex!=SoftwareTransformPatch_SData::NONE_VB_NUM; ++uIndex)

  00060	46		 inc	 esi
  00061	83 c7 04	 add	 edi, 4
  00064	83 fe 08	 cmp	 esi, 8
  00067	75 d9		 jne	 SHORT $LL7@SoftwareTr

; 770  : 				ms_lpd3dDevice->CreateVertexBuffer(
; 771  : 					sizeof(SoftwareTransformPatch_STVertex)*CTerrainPatch::TERRAIN_VERTEX_COUNT,
; 772  : 					D3DUSAGE_DYNAMIC|D3DUSAGE_WRITEONLY,
; 773  : 					D3DFVF_XYZRHW,
; 774  : 					D3DPOOL_SYSTEMMEM,
; 775  : 					&m_kSTPD.m_pkVBNone[uIndex]
; 776  : 				)
; 777  : 			)) return false;
; 778  : 		}
; 779  : 	}
; 780  : 	return true;
; 781  : }

  00069	5f		 pop	 edi
  0006a	5e		 pop	 esi
  0006b	b0 01		 mov	 al, 1
  0006d	5b		 pop	 ebx
  0006e	c3		 ret	 0
$LN14@SoftwareTr:
  0006f	5f		 pop	 edi
  00070	5e		 pop	 esi
  00071	32 c0		 xor	 al, al
  00073	5b		 pop	 ebx
  00074	c3		 ret	 0
?__SoftwareTransformPatch_Create@CMapOutdoor@@IAE_NXZ ENDP ; CMapOutdoor::__SoftwareTransformPatch_Create
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
;	COMDAT ?__SoftwareTransformPatch_Initialize@CMapOutdoor@@IAEXXZ
_TEXT	SEGMENT
?__SoftwareTransformPatch_Initialize@CMapOutdoor@@IAEXXZ PROC ; CMapOutdoor::__SoftwareTransformPatch_Initialize, COMDAT
; _this$ = ecx

; 732  : {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 733  : 	{
; 734  : 		for (UINT uIndex=0; uIndex!=SoftwareTransformPatch_SData::SPLAT_VB_NUM; ++uIndex)

  00003	0f 11 81 c0 09
	00 00		 movups	 XMMWORD PTR [ecx+2496], xmm0
  0000a	0f 11 81 d0 09
	00 00		 movups	 XMMWORD PTR [ecx+2512], xmm0

; 735  : 			m_kSTPD.m_pkVBSplat[uIndex]=NULL;
; 736  : 		m_kSTPD.m_dwSplatPos=0;

  00011	c7 81 00 0a 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+2560], 0
  0001b	0f 11 81 e0 09
	00 00		 movups	 XMMWORD PTR [ecx+2528], xmm0
  00022	0f 11 81 f0 09
	00 00		 movups	 XMMWORD PTR [ecx+2544], xmm0

; 737  : 	}
; 738  : 
; 739  : 	{
; 740  : 		for (UINT uIndex=0; uIndex!=SoftwareTransformPatch_SData::NONE_VB_NUM; ++uIndex)
; 741  : 			m_kSTPD.m_pkVBNone[uIndex]=NULL;
; 742  : 		m_kSTPD.m_dwNonePos=0;

  00029	c7 81 04 0a 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+2564], 0

; 743  : 	}
; 744  : }

  00033	c3		 ret	 0
?__SoftwareTransformPatch_Initialize@CMapOutdoor@@IAEXXZ ENDP ; CMapOutdoor::__SoftwareTransformPatch_Initialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
;	COMDAT ?__SoftwareTransformPatch_RestoreRenderState@CMapOutdoor@@IAEXK@Z
_TEXT	SEGMENT
$T1 = 8							; size = 1
_dwFogEnable$ = 8					; size = 4
?__SoftwareTransformPatch_RestoreRenderState@CMapOutdoor@@IAEXK@Z PROC ; CMapOutdoor::__SoftwareTransformPatch_RestoreRenderState, COMDAT
; _this$ = ecx

; 469  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 470  : 	STATEMANAGER.SetRenderState(D3DRS_LIGHTING, TRUE);

  00004	6a 01		 push	 1
  00006	8b f1		 mov	 esi, ecx
  00008	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0000e	68 89 00 00 00	 push	 137			; 00000089H
  00013	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 471  : 
; 472  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG1, D3DTA_TEXTURE);

  00018	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0001e	6a 02		 push	 2
  00020	6a 02		 push	 2
  00022	6a 00		 push	 0
  00024	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 473  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG2, D3DTA_CURRENT);

  00029	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0002f	6a 01		 push	 1
  00031	6a 03		 push	 3
  00033	6a 00		 push	 0
  00035	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 474  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP,   D3DTOP_MODULATE);

  0003a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00040	6a 04		 push	 4
  00042	6a 01		 push	 1
  00044	6a 00		 push	 0
  00046	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 475  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAARG1, D3DTA_TEXTURE);

  0004b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00051	6a 02		 push	 2
  00053	6a 05		 push	 5
  00055	6a 00		 push	 0
  00057	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 476  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAOP,   D3DTOP_SELECTARG1);

  0005c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00062	6a 02		 push	 2
  00064	6a 04		 push	 4
  00066	6a 00		 push	 0
  00068	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 477  : 
; 478  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_COLORARG1, D3DTA_CURRENT);

  0006d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00073	6a 01		 push	 1
  00075	6a 02		 push	 2
  00077	6a 01		 push	 1
  00079	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 479  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_COLOROP,   D3DTOP_SELECTARG1);

  0007e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00084	6a 02		 push	 2
  00086	6a 01		 push	 1
  00088	6a 01		 push	 1
  0008a	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 480  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAARG1, D3DTA_TEXTURE);

  0008f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00095	6a 02		 push	 2
  00097	6a 05		 push	 5
  00099	6a 01		 push	 1
  0009b	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 481  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAOP,   D3DTOP_SELECTARG1);

  000a0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000a6	6a 02		 push	 2
  000a8	6a 04		 push	 4
  000aa	6a 01		 push	 1
  000ac	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 482  : 
; 483  : 	STATEMANAGER.SetRenderState(D3DRS_FOGENABLE, dwFogEnable);

  000b1	ff 75 08	 push	 DWORD PTR _dwFogEnable$[ebp]
  000b4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000ba	6a 1c		 push	 28			; 0000001cH
  000bc	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000c1	8b 8e 94 09 00
	00		 mov	 ecx, DWORD PTR [esi+2452]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8067 :     _Sort_unchecked(_UFirst, _ULast, _ULast - _UFirst, _Pass_fn(_Pred));

  000c7	8b c1		 mov	 eax, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000c9	8b 96 90 09 00
	00		 mov	 edx, DWORD PTR [esi+2448]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8067 :     _Sort_unchecked(_UFirst, _ULast, _ULast - _UFirst, _Pass_fn(_Pred));

  000cf	2b c2		 sub	 eax, edx
  000d1	c6 45 08 00	 mov	 BYTE PTR $T1[ebp], 0
  000d5	ff 75 08	 push	 DWORD PTR $T1[ebp]
  000d8	c1 f8 02	 sar	 eax, 2
  000db	50		 push	 eax
  000dc	51		 push	 ecx
  000dd	52		 push	 edx
  000de	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAHU?$less@X@std@@@std@@YAXPAH0HU?$less@X@0@@Z ; std::_Sort_unchecked<int *,std::less<void> >
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp

; 487  : 	STATEMANAGER.RestoreRenderState(D3DRS_TEXTUREFACTOR);

  000e3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8067 :     _Sort_unchecked(_UFirst, _ULast, _ULast - _UFirst, _Pass_fn(_Pred));

  000e9	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp

; 487  : 	STATEMANAGER.RestoreRenderState(D3DRS_TEXTUREFACTOR);

  000ec	6a 3c		 push	 60			; 0000003cH
  000ee	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 488  : 
; 489  : 	STATEMANAGER.RestoreRenderState(D3DRS_ALPHABLENDENABLE);

  000f3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000f9	6a 1b		 push	 27			; 0000001bH
  000fb	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 490  : 	STATEMANAGER.RestoreRenderState(D3DRS_ALPHATESTENABLE);

  00100	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00106	6a 0f		 push	 15			; 0000000fH
  00108	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 491  : 	STATEMANAGER.RestoreRenderState(D3DRS_ALPHAREF);

  0010d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00113	6a 18		 push	 24			; 00000018H
  00115	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 492  : 	STATEMANAGER.RestoreRenderState(D3DRS_ALPHAFUNC);

  0011a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00120	6a 19		 push	 25			; 00000019H
  00122	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 493  : 
; 494  : 	STATEMANAGER.RestoreRenderState(D3DRS_SOFTWAREVERTEXPROCESSING);

  00127	5e		 pop	 esi
  00128	c7 45 08 99 00
	00 00		 mov	 DWORD PTR _dwFogEnable$[ebp], 153 ; 00000099H
  0012f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton

; 495  : 
; 496  : 	// Render State & TextureStageState
; 497  : 	//////////////////////////////////////////////////////////////////////////
; 498  : }

  00135	5d		 pop	 ebp

; 493  : 
; 494  : 	STATEMANAGER.RestoreRenderState(D3DRS_SOFTWAREVERTEXPROCESSING);

  00136	e9 00 00 00 00	 jmp	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState
?__SoftwareTransformPatch_RestoreRenderState@CMapOutdoor@@IAEXK@Z ENDP ; CMapOutdoor::__SoftwareTransformPatch_RestoreRenderState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
;	COMDAT ?__SoftwareTransformPatch_ApplyRenderState@CMapOutdoor@@IAEXXZ
_TEXT	SEGMENT
_dwB$1$ = -12						; size = 4
_dwG$1$ = -8						; size = 4
_dwR$1$ = -4						; size = 4
?__SoftwareTransformPatch_ApplyRenderState@CMapOutdoor@@IAEXXZ PROC ; CMapOutdoor::__SoftwareTransformPatch_ApplyRenderState, COMDAT
; _this$ = ecx

; 414  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx

; 415  : 	DWORD dwFogColor=0xffffffff;

  0000b	83 ce ff	 or	 esi, -1

; 416  : 	if (mc_pEnvironmentData)

  0000e	8b 5f 3c	 mov	 ebx, DWORD PTR [edi+60]
  00011	85 db		 test	 ebx, ebx
  00013	0f 84 26 01 00
	00		 je	 $LN2@SoftwareTr
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.inl

; 931  :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  00019	f3 0f 10 83 2c
	01 00 00	 movss	 xmm0, DWORD PTR [ebx+300]
  00021	0f 57 c9	 xorps	 xmm1, xmm1
  00024	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  0002b	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@437f0000
  00033	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR __real@3f000000
  0003b	72 09		 jb	 SHORT $LN36@SoftwareTr
  0003d	c7 45 fc ff 00
	00 00		 mov	 DWORD PTR _dwR$1$[ebp], 255 ; 000000ffH
  00044	eb 31		 jmp	 SHORT $LN35@SoftwareTr
$LN36@SoftwareTr:
  00046	0f 2f c8	 comiss	 xmm1, xmm0
  00049	72 09		 jb	 SHORT $LN34@SoftwareTr
  0004b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _dwR$1$[ebp], 0
  00052	eb 23		 jmp	 SHORT $LN35@SoftwareTr
$LN34@SoftwareTr:
  00054	f3 0f 59 c3	 mulss	 xmm0, xmm3
  00058	f3 0f 58 c4	 addss	 xmm0, xmm4
  0005c	e8 00 00 00 00	 call	 __ftol3
  00061	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@437f0000
  00069	0f 57 c9	 xorps	 xmm1, xmm1
  0006c	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR __real@3f000000
  00074	89 45 fc	 mov	 DWORD PTR _dwR$1$[ebp], eax
$LN35@SoftwareTr:

; 932  :     DWORD dwG = g >= 1.0f ? 0xff : g <= 0.0f ? 0x00 : (DWORD) (g * 255.0f + 0.5f);

  00077	f3 0f 10 83 30
	01 00 00	 movss	 xmm0, DWORD PTR [ebx+304]
  0007f	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  00086	72 09		 jb	 SHORT $LN40@SoftwareTr
  00088	c7 45 f8 ff 00
	00 00		 mov	 DWORD PTR _dwG$1$[ebp], 255 ; 000000ffH
  0008f	eb 1e		 jmp	 SHORT $LN39@SoftwareTr
$LN40@SoftwareTr:
  00091	0f 2f c8	 comiss	 xmm1, xmm0
  00094	72 09		 jb	 SHORT $LN38@SoftwareTr
  00096	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _dwG$1$[ebp], 0
  0009d	eb 10		 jmp	 SHORT $LN39@SoftwareTr
$LN38@SoftwareTr:
  0009f	f3 0f 59 c3	 mulss	 xmm0, xmm3
  000a3	f3 0f 58 c4	 addss	 xmm0, xmm4
  000a7	e8 00 00 00 00	 call	 __ftol3
  000ac	89 45 f8	 mov	 DWORD PTR _dwG$1$[ebp], eax
$LN39@SoftwareTr:

; 933  :     DWORD dwB = b >= 1.0f ? 0xff : b <= 0.0f ? 0x00 : (DWORD) (b * 255.0f + 0.5f);

  000af	f3 0f 10 83 34
	01 00 00	 movss	 xmm0, DWORD PTR [ebx+308]
  000b7	0f 57 c9	 xorps	 xmm1, xmm1
  000ba	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  000c1	72 09		 jb	 SHORT $LN44@SoftwareTr
  000c3	c7 45 f4 ff 00
	00 00		 mov	 DWORD PTR _dwB$1$[ebp], 255 ; 000000ffH
  000ca	eb 29		 jmp	 SHORT $LN43@SoftwareTr
$LN44@SoftwareTr:
  000cc	0f 2f c8	 comiss	 xmm1, xmm0
  000cf	72 09		 jb	 SHORT $LN42@SoftwareTr
  000d1	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _dwB$1$[ebp], 0
  000d8	eb 1b		 jmp	 SHORT $LN43@SoftwareTr
$LN42@SoftwareTr:
  000da	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  000e2	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  000ea	e8 00 00 00 00	 call	 __ftol3
  000ef	89 45 f4	 mov	 DWORD PTR _dwB$1$[ebp], eax
  000f2	0f 57 c9	 xorps	 xmm1, xmm1
$LN43@SoftwareTr:

; 934  :     DWORD dwA = a >= 1.0f ? 0xff : a <= 0.0f ? 0x00 : (DWORD) (a * 255.0f + 0.5f);

  000f5	f3 0f 10 83 38
	01 00 00	 movss	 xmm0, DWORD PTR [ebx+312]
  000fd	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  00104	72 07		 jb	 SHORT $LN48@SoftwareTr
  00106	be ff 00 00 00	 mov	 esi, 255		; 000000ffH
  0010b	eb 20		 jmp	 SHORT $LN47@SoftwareTr
$LN48@SoftwareTr:
  0010d	0f 2f c8	 comiss	 xmm1, xmm0
  00110	72 04		 jb	 SHORT $LN46@SoftwareTr
  00112	33 f6		 xor	 esi, esi
  00114	eb 17		 jmp	 SHORT $LN47@SoftwareTr
$LN46@SoftwareTr:
  00116	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  0011e	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  00126	e8 00 00 00 00	 call	 __ftol3
  0012b	8b f0		 mov	 esi, eax
$LN47@SoftwareTr:

; 935  : 
; 936  :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  0012d	c1 e6 08	 shl	 esi, 8
  00130	0b 75 fc	 or	 esi, DWORD PTR _dwR$1$[ebp]
  00133	c1 e6 08	 shl	 esi, 8
  00136	0b 75 f8	 or	 esi, DWORD PTR _dwG$1$[ebp]
  00139	c1 e6 08	 shl	 esi, 8
  0013c	0b 75 f4	 or	 esi, DWORD PTR _dwB$1$[ebp]
$LN2@SoftwareTr:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp

; 420  : 	if (!IsTLVertexClipping())

  0013f	e8 00 00 00 00	 call	 ?IsTLVertexClipping@CGraphicBase@@SA_NXZ ; CGraphicBase::IsTLVertexClipping

; 421  : 		isSoftwareVertexClipping=TRUE;
; 422  : 
; 423  : 	STATEMANAGER.SaveRenderState(D3DRS_SOFTWAREVERTEXPROCESSING, isSoftwareVertexClipping);

  00144	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0014a	0f b6 c0	 movzx	 eax, al
  0014d	83 f0 01	 xor	 eax, 1
  00150	50		 push	 eax
  00151	68 99 00 00 00	 push	 153			; 00000099H
  00156	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 424  : 
; 425  : 	STATEMANAGER.SaveRenderState(D3DRS_ALPHABLENDENABLE, TRUE);

  0015b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00161	6a 01		 push	 1
  00163	6a 1b		 push	 27			; 0000001bH
  00165	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 426  : 	STATEMANAGER.SaveRenderState(D3DRS_ALPHATESTENABLE, TRUE);

  0016a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00170	6a 01		 push	 1
  00172	6a 0f		 push	 15			; 0000000fH
  00174	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 427  : 	STATEMANAGER.SaveRenderState(D3DRS_ALPHAREF, 0x00000000);

  00179	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0017f	6a 00		 push	 0
  00181	6a 18		 push	 24			; 00000018H
  00183	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 428  : 	STATEMANAGER.SaveRenderState(D3DRS_ALPHAFUNC, D3DCMP_GREATER);

  00188	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0018e	6a 05		 push	 5
  00190	6a 19		 push	 25			; 00000019H
  00192	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 429  : 
; 430  : 	STATEMANAGER.SaveRenderState(D3DRS_TEXTUREFACTOR, dwFogColor);

  00197	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0019d	56		 push	 esi
  0019e	6a 3c		 push	 60			; 0000003cH
  001a0	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 431  : 	STATEMANAGER.SetRenderState(D3DRS_LIGHTING, FALSE);

  001a5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001ab	6a 00		 push	 0
  001ad	68 89 00 00 00	 push	 137			; 00000089H
  001b2	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 432  : 	STATEMANAGER.SetRenderState(D3DRS_FOGENABLE, FALSE);

  001b7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001bd	6a 00		 push	 0
  001bf	6a 1c		 push	 28			; 0000001cH
  001c1	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 433  : 
; 434  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG1, D3DTA_TEXTURE);

  001c6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001cc	6a 02		 push	 2
  001ce	6a 02		 push	 2
  001d0	6a 00		 push	 0
  001d2	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 435  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG2, D3DTA_DIFFUSE);

  001d7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001dd	6a 00		 push	 0
  001df	6a 03		 push	 3
  001e1	6a 00		 push	 0
  001e3	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 436  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP,   D3DTOP_SELECTARG1);

  001e8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001ee	6a 02		 push	 2
  001f0	6a 01		 push	 1
  001f2	6a 00		 push	 0
  001f4	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 437  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAARG1, D3DTA_TEXTURE);

  001f9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001ff	6a 02		 push	 2
  00201	6a 05		 push	 5
  00203	6a 00		 push	 0
  00205	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 438  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAOP,   D3DTOP_SELECTARG1);

  0020a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00210	6a 02		 push	 2
  00212	6a 04		 push	 4
  00214	6a 00		 push	 0
  00216	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 439  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_ADDRESSU,  D3DTADDRESS_WRAP);

  0021b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00221	6a 01		 push	 1
  00223	6a 0d		 push	 13			; 0000000dH
  00225	6a 00		 push	 0
  00227	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 440  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_ADDRESSV,  D3DTADDRESS_WRAP);

  0022c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00232	6a 01		 push	 1
  00234	6a 0e		 push	 14			; 0000000eH
  00236	6a 00		 push	 0
  00238	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 441  : 	STATEMANAGER.SetBestFiltering(0);

  0023d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00243	6a 00		 push	 0
  00245	e8 00 00 00 00	 call	 ?SetBestFiltering@CStateManager@@QAEXK@Z ; CStateManager::SetBestFiltering

; 442  : 
; 443  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_COLORARG1, D3DTA_CURRENT);

  0024a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00250	6a 01		 push	 1
  00252	6a 02		 push	 2
  00254	6a 01		 push	 1
  00256	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 444  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_COLORARG2, D3DTA_TEXTURE);

  0025b	6a 02		 push	 2
  0025d	6a 03		 push	 3
  0025f	6a 01		 push	 1
  00261	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00267	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 445  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_COLOROP,   D3DTOP_SELECTARG1);

  0026c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00272	6a 02		 push	 2
  00274	6a 01		 push	 1
  00276	6a 01		 push	 1
  00278	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 446  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAARG1, D3DTA_TEXTURE);

  0027d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00283	6a 02		 push	 2
  00285	6a 05		 push	 5
  00287	6a 01		 push	 1
  00289	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 447  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAARG2, D3DTA_CURRENT);

  0028e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00294	6a 01		 push	 1
  00296	6a 06		 push	 6
  00298	6a 01		 push	 1
  0029a	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 448  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAOP,   D3DTOP_SELECTARG1);

  0029f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  002a5	6a 02		 push	 2
  002a7	6a 04		 push	 4
  002a9	6a 01		 push	 1
  002ab	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 449  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ADDRESSU,  D3DTADDRESS_CLAMP);

  002b0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  002b6	6a 03		 push	 3
  002b8	6a 0d		 push	 13			; 0000000dH
  002ba	6a 01		 push	 1
  002bc	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 450  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ADDRESSV,  D3DTADDRESS_CLAMP);

  002c1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  002c7	6a 03		 push	 3
  002c9	6a 0e		 push	 14			; 0000000eH
  002cb	6a 01		 push	 1
  002cd	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 451  : 	STATEMANAGER.SetBestFiltering(1);

  002d2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  002d8	6a 01		 push	 1
  002da	e8 00 00 00 00	 call	 ?SetBestFiltering@CStateManager@@QAEXK@Z ; CStateManager::SetBestFiltering

; 452  : 
; 453  : 	CSpeedTreeWrapper::ms_bSelfShadowOn = true;

  002df	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?ms_bSelfShadowOn@CSpeedTreeWrapper@@2_NA, 1 ; CSpeedTreeWrapper::ms_bSelfShadowOn

; 454  : 
; 455  : 	// Render State & TextureStageState
; 456  : 	//////////////////////////////////////////////////////////////////////////
; 457  : 
; 458  : 	m_iRenderedSplatNumSqSum = 0;

  002e6	c7 87 84 09 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+2436], 0

; 459  : 	m_iRenderedPatchNum = 0;

  002f0	c7 87 8c 09 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+2444], 0

; 460  : 	m_iRenderedSplatNum = 0;

  002fa	c7 87 88 09 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+2440], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00304	8b 87 90 09 00
	00		 mov	 eax, DWORD PTR [edi+2448]
  0030a	3b 87 94 09 00
	00		 cmp	 eax, DWORD PTR [edi+2452]
  00310	74 06		 je	 SHORT $LN29@SoftwareTr

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

  00312	89 87 94 09 00
	00		 mov	 DWORD PTR [edi+2452], eax
$LN29@SoftwareTr:
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp

; 465  : 	STATEMANAGER.SetTransform(D3DTS_WORLD, &m_matWorldForCommonUse);

  00318	8d 87 48 07 00
	00		 lea	 eax, DWORD PTR [edi+1864]
  0031e	c7 87 78 07 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+1912], 0
  00328	50		 push	 eax
  00329	c7 87 7c 07 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+1916], 0
  00333	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00339	68 00 01 00 00	 push	 256			; 00000100H
  0033e	e8 00 00 00 00	 call	 ?SetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; CStateManager::SetTransform
  00343	5f		 pop	 edi
  00344	5e		 pop	 esi
  00345	5b		 pop	 ebx

; 466  : }

  00346	8b e5		 mov	 esp, ebp
  00348	5d		 pop	 ebp
  00349	c3		 ret	 0
?__SoftwareTransformPatch_ApplyRenderState@CMapOutdoor@@IAEXXZ ENDP ; CMapOutdoor::__SoftwareTransformPatch_ApplyRenderState
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0SoftwareTransformPatch_STLVertex@CMapOutdoor@@QAE@XZ
_TEXT	SEGMENT
??0SoftwareTransformPatch_STLVertex@CMapOutdoor@@QAE@XZ PROC ; CMapOutdoor::SoftwareTransformPatch_STLVertex::SoftwareTransformPatch_STLVertex, COMDAT
; _this$ = ecx
  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0SoftwareTransformPatch_STLVertex@CMapOutdoor@@QAE@XZ ENDP ; CMapOutdoor::SoftwareTransformPatch_STLVertex::SoftwareTransformPatch_STLVertex
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0SoftwareTransformPatch_STVertex@CMapOutdoor@@QAE@XZ
_TEXT	SEGMENT
??0SoftwareTransformPatch_STVertex@CMapOutdoor@@QAE@XZ PROC ; CMapOutdoor::SoftwareTransformPatch_STVertex::SoftwareTransformPatch_STVertex, COMDAT
; _this$ = ecx
  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0SoftwareTransformPatch_STVertex@CMapOutdoor@@QAE@XZ ENDP ; CMapOutdoor::SoftwareTransformPatch_STVertex::SoftwareTransformPatch_STVertex
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp
;	COMDAT ?__RenderTerrain_RenderSoftwareTransformPatch@CMapOutdoor@@IAEXXZ
_TEXT	SEGMENT
_dwFogEnable$1$ = -452					; size = 4
_far_it$ = -448						; size = 4
_fog_far$ = -444					; size = 8
_near_it$ = -440					; size = 4
_fog_near$ = -436					; size = 8
_fLODLevel2Distance$ = -432				; size = 4
_fLODLevel1Distance$ = -428				; size = 4
_wPrimitiveCount$ = -424				; size = 2
_ePrimitiveType$ = -420					; size = 4
_byCUrrentLODLevel$1$ = -413				; size = 1
_kTPRS$ = -412						; size = 408
__$ArrayPad$ = -4					; size = 4
?__RenderTerrain_RenderSoftwareTransformPatch@CMapOutdoor@@IAEXXZ PROC ; CMapOutdoor::__RenderTerrain_RenderSoftwareTransformPatch, COMDAT
; _this$ = ecx

; 21   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 01 00
	00		 sub	 esp, 452		; 000001c4H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	8b d9		 mov	 ebx, ecx

; 22   : 	SoftwareTransformPatch_SRenderState kTPRS;
; 23   : 
; 24   : 	DWORD dwFogEnable = STATEMANAGER.GetRenderState(D3DRS_FOGENABLE);

  00018	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0001e	6a 1c		 push	 28			; 0000001cH
  00020	e8 00 00 00 00	 call	 ?GetRenderState@CStateManager@@QAEKW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::GetRenderState

; 25   : 
; 26   : 	__SoftwareTransformPatch_ApplyRenderState();

  00025	8b cb		 mov	 ecx, ebx
  00027	89 85 3c fe ff
	ff		 mov	 DWORD PTR _dwFogEnable$1$[ebp], eax
  0002d	e8 00 00 00 00	 call	 ?__SoftwareTransformPatch_ApplyRenderState@CMapOutdoor@@IAEXXZ ; CMapOutdoor::__SoftwareTransformPatch_ApplyRenderState

; 27   : 
; 28   : 	__SoftwareTransformPatch_BuildPipeline(kTPRS);

  00032	8d 85 64 fe ff
	ff		 lea	 eax, DWORD PTR _kTPRS$[ebp]
  00038	8b cb		 mov	 ecx, ebx
  0003a	50		 push	 eax
  0003b	e8 00 00 00 00	 call	 ?__SoftwareTransformPatch_BuildPipeline@CMapOutdoor@@IAEXAAUSoftwareTransformPatch_SRenderState@1@@Z ; CMapOutdoor::__SoftwareTransformPatch_BuildPipeline

; 29   : 
; 30   : 	std::pair<float, long> fog_far(kTPRS.m_fFogFarDistance+800.0f, 0);

  00040	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _kTPRS$[ebp+392]

; 33   : 	std::vector<std::pair<float ,long> >::iterator far_it = std::upper_bound(m_PatchVector.begin(),m_PatchVector.end(),fog_far);

  00045	8d 85 44 fe ff
	ff		 lea	 eax, DWORD PTR _fog_far$[ebp]
  0004b	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@44480000
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00053	8b b3 1c 01 00
	00		 mov	 esi, DWORD PTR [ebx+284]
  00059	8b bb 18 01 00
	00		 mov	 edi, DWORD PTR [ebx+280]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp

; 33   : 	std::vector<std::pair<float ,long> >::iterator far_it = std::upper_bound(m_PatchVector.begin(),m_PatchVector.end(),fog_far);

  0005f	50		 push	 eax
  00060	56		 push	 esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

  00061	f3 0f 11 85 44
	fe ff ff	 movss	 DWORD PTR _fog_far$[ebp], xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp

; 33   : 	std::vector<std::pair<float ,long> >::iterator far_it = std::upper_bound(m_PatchVector.begin(),m_PatchVector.end(),fog_far);

  00069	8d 85 40 fe ff
	ff		 lea	 eax, DWORD PTR _far_it$[ebp]
  0006f	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _kTPRS$[ebp+388]
  00074	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@45480000
  0007c	57		 push	 edi
  0007d	50		 push	 eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

  0007e	c7 85 48 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _fog_far$[ebp+4], 0
  00088	c7 85 50 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _fog_near$[ebp+4], 0
  00092	f3 0f 11 85 4c
	fe ff ff	 movss	 DWORD PTR _fog_near$[ebp], xmm0
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp

; 33   : 	std::vector<std::pair<float ,long> >::iterator far_it = std::upper_bound(m_PatchVector.begin(),m_PatchVector.end(),fog_far);

  0009a	e8 00 00 00 00	 call	 ??$upper_bound@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@MJ@std@@@std@@@std@@@std@@U?$pair@MJ@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@MJ@std@@@std@@@std@@@0@V10@0ABU?$pair@MJ@0@@Z ; std::upper_bound<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::pair<float,long> > > >,std::pair<float,long> >

; 34   : 	std::vector<std::pair<float ,long> >::iterator near_it = std::upper_bound(m_PatchVector.begin(),m_PatchVector.end(),fog_near);

  0009f	8d 85 4c fe ff
	ff		 lea	 eax, DWORD PTR _fog_near$[ebp]
  000a5	50		 push	 eax
  000a6	56		 push	 esi
  000a7	8d 85 48 fe ff
	ff		 lea	 eax, DWORD PTR _near_it$[ebp]
  000ad	57		 push	 edi
  000ae	50		 push	 eax
  000af	e8 00 00 00 00	 call	 ??$upper_bound@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@MJ@std@@@std@@@std@@@std@@U?$pair@MJ@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@MJ@std@@@std@@@std@@@0@V10@0ABU?$pair@MJ@0@@Z ; std::upper_bound<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::pair<float,long> > > >,std::pair<float,long> >
  000b4	83 c4 20	 add	 esp, 32			; 00000020H

; 35   : 
; 36   : 	WORD wPrimitiveCount;
; 37   : 	D3DPRIMITIVETYPE ePrimitiveType;
; 38   : 
; 39   : 	BYTE byCUrrentLODLevel = 0;

  000b7	c6 85 63 fe ff
	ff 00		 mov	 BYTE PTR _byCUrrentLODLevel$1$[ebp], 0

; 40   : 
; 41   : 	float fLODLevel1Distance = __GetNoFogDistance();

  000be	8b cb		 mov	 ecx, ebx
  000c0	e8 00 00 00 00	 call	 ?__GetNoFogDistance@CMapOutdoor@@IAEMXZ ; CMapOutdoor::__GetNoFogDistance
  000c5	d9 9d 54 fe ff
	ff		 fstp	 DWORD PTR _fLODLevel1Distance$[ebp]

; 42   : 	float fLODLevel2Distance = __GetFogDistance();

  000cb	8b cb		 mov	 ecx, ebx
  000cd	e8 00 00 00 00	 call	 ?__GetFogDistance@CMapOutdoor@@IAEMXZ ; CMapOutdoor::__GetFogDistance

; 43   : 
; 44   : 	SelectIndexBuffer(0, &wPrimitiveCount, &ePrimitiveType);

  000d2	8d 85 5c fe ff
	ff		 lea	 eax, DWORD PTR _ePrimitiveType$[ebp]
  000d8	8b cb		 mov	 ecx, ebx
  000da	50		 push	 eax
  000db	8d 85 58 fe ff
	ff		 lea	 eax, DWORD PTR _wPrimitiveCount$[ebp]
  000e1	50		 push	 eax
  000e2	6a 00		 push	 0
  000e4	d9 9d 50 fe ff
	ff		 fstp	 DWORD PTR _fLODLevel2Distance$[ebp]
  000ea	e8 00 00 00 00	 call	 ?SelectIndexBuffer@CMapOutdoor@@IAEXEPAGPAW4_D3DPRIMITIVETYPE@@@Z ; CMapOutdoor::SelectIndexBuffer

; 45   : 
; 46   : 	STATEMANAGER.SetVertexShader(D3DFVF_XYZRHW|D3DFVF_DIFFUSE|D3DFVF_SPECULAR|D3DFVF_TEX2);

  000ef	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000f5	68 c4 02 00 00	 push	 708			; 000002c4H
  000fa	e8 00 00 00 00	 call	 ?SetVertexShader@CStateManager@@QAEXK@Z ; CStateManager::SetVertexShader
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000ff	8b bb 18 01 00
	00		 mov	 edi, DWORD PTR [ebx+280]

; 163  :         return _Ptr == _Right._Ptr;

  00105	8b b5 48 fe ff
	ff		 mov	 esi, DWORD PTR _near_it$[ebp]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp

; 50   : 	for( ; it != near_it; ++it)

  0010b	f3 0f 10 8d 54
	fe ff ff	 movss	 xmm1, DWORD PTR _fLODLevel1Distance$[ebp]
  00113	f3 0f 10 95 50
	fe ff ff	 movss	 xmm2, DWORD PTR _fLODLevel2Distance$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 163  :         return _Ptr == _Right._Ptr;

  0011b	3b fe		 cmp	 edi, esi
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp

; 50   : 	for( ; it != near_it; ++it)

  0011d	0f 84 af 00 00
	00		 je	 $LN110@RenderTerr
$LL142@RenderTerr:

; 51   : 	{
; 52   : 		if (byCUrrentLODLevel == 0 && fLODLevel1Distance <= it->first)

  00123	8a 85 63 fe ff
	ff		 mov	 al, BYTE PTR _byCUrrentLODLevel$1$[ebp]
  00129	84 c0		 test	 al, al
  0012b	75 22		 jne	 SHORT $LN119@RenderTerr
  0012d	f3 0f 10 07	 movss	 xmm0, DWORD PTR [edi]
  00131	0f 2f c1	 comiss	 xmm0, xmm1
  00134	72 44		 jb	 SHORT $LN13@RenderTerr

; 53   : 		{
; 54   : 			byCUrrentLODLevel = 1;
; 55   : 			SelectIndexBuffer(1, &wPrimitiveCount, &ePrimitiveType);

  00136	8d 85 5c fe ff
	ff		 lea	 eax, DWORD PTR _ePrimitiveType$[ebp]
  0013c	c6 85 63 fe ff
	ff 01		 mov	 BYTE PTR _byCUrrentLODLevel$1$[ebp], 1
  00143	50		 push	 eax
  00144	8d 85 58 fe ff
	ff		 lea	 eax, DWORD PTR _wPrimitiveCount$[ebp]
  0014a	50		 push	 eax
  0014b	6a 01		 push	 1

; 56   : 		}

  0014d	eb 24		 jmp	 SHORT $LN145@RenderTerr
$LN119@RenderTerr:

; 57   : 		else if (byCUrrentLODLevel == 1 && fLODLevel2Distance <= it->first)

  0014f	3c 01		 cmp	 al, 1
  00151	75 27		 jne	 SHORT $LN13@RenderTerr
  00153	f3 0f 10 07	 movss	 xmm0, DWORD PTR [edi]
  00157	0f 2f c2	 comiss	 xmm0, xmm2
  0015a	72 1e		 jb	 SHORT $LN13@RenderTerr

; 58   : 		{
; 59   : 			byCUrrentLODLevel = 2;
; 60   : 			SelectIndexBuffer(2, &wPrimitiveCount, &ePrimitiveType);

  0015c	8d 85 5c fe ff
	ff		 lea	 eax, DWORD PTR _ePrimitiveType$[ebp]
  00162	c6 85 63 fe ff
	ff 02		 mov	 BYTE PTR _byCUrrentLODLevel$1$[ebp], 2
  00169	50		 push	 eax
  0016a	8d 85 58 fe ff
	ff		 lea	 eax, DWORD PTR _wPrimitiveCount$[ebp]
  00170	50		 push	 eax
  00171	6a 02		 push	 2
$LN145@RenderTerr:

; 61   : 		}
; 62   : 
; 63   : 		__SoftwareTransformPatch_RenderPatchSplat(kTPRS, it->second, wPrimitiveCount, ePrimitiveType, false);

  00173	8b cb		 mov	 ecx, ebx
  00175	e8 00 00 00 00	 call	 ?SelectIndexBuffer@CMapOutdoor@@IAEXEPAGPAW4_D3DPRIMITIVETYPE@@@Z ; CMapOutdoor::SelectIndexBuffer
$LN13@RenderTerr:
  0017a	6a 00		 push	 0
  0017c	ff b5 5c fe ff
	ff		 push	 DWORD PTR _ePrimitiveType$[ebp]
  00182	8d 85 64 fe ff
	ff		 lea	 eax, DWORD PTR _kTPRS$[ebp]
  00188	8b cb		 mov	 ecx, ebx
  0018a	ff b5 58 fe ff
	ff		 push	 DWORD PTR _wPrimitiveCount$[ebp]
  00190	ff 77 04	 push	 DWORD PTR [edi+4]
  00193	50		 push	 eax
  00194	e8 00 00 00 00	 call	 ?__SoftwareTransformPatch_RenderPatchSplat@CMapOutdoor@@IAEXAAUSoftwareTransformPatch_SRenderState@1@JGW4_D3DPRIMITIVETYPE@@_N@Z ; CMapOutdoor::__SoftwareTransformPatch_RenderPatchSplat

; 64   : 		if (m_iRenderedSplatNum >= m_iSplatLimit)

  00199	8b 83 88 09 00
	00		 mov	 eax, DWORD PTR [ebx+2440]
  0019f	3b 83 9c 09 00
	00		 cmp	 eax, DWORD PTR [ebx+2460]
  001a5	7d 1b		 jge	 SHORT $LN124@RenderTerr

; 50   : 	for( ; it != near_it; ++it)

  001a7	f3 0f 10 8d 54
	fe ff ff	 movss	 xmm1, DWORD PTR _fLODLevel1Distance$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 79   :         ++_Ptr;

  001af	83 c7 08	 add	 edi, 8
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp

; 50   : 	for( ; it != near_it; ++it)

  001b2	f3 0f 10 95 50
	fe ff ff	 movss	 xmm2, DWORD PTR _fLODLevel2Distance$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 163  :         return _Ptr == _Right._Ptr;

  001ba	3b fe		 cmp	 edi, esi
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp

; 50   : 	for( ; it != near_it; ++it)

  001bc	0f 85 61 ff ff
	ff		 jne	 $LL142@RenderTerr
$LN124@RenderTerr:
  001c2	f3 0f 10 8d 54
	fe ff ff	 movss	 xmm1, DWORD PTR _fLODLevel1Distance$[ebp]
  001ca	f3 0f 10 95 50
	fe ff ff	 movss	 xmm2, DWORD PTR _fLODLevel2Distance$[ebp]
$LN110@RenderTerr:

; 65   : 			break;
; 66   : 
; 67   : 	}
; 68   : 
; 69   : 	if (m_iRenderedSplatNum < m_iSplatLimit)

  001d2	8b 83 88 09 00
	00		 mov	 eax, DWORD PTR [ebx+2440]
  001d8	8b bd 40 fe ff
	ff		 mov	 edi, DWORD PTR _far_it$[ebp]
  001de	3b 83 9c 09 00
	00		 cmp	 eax, DWORD PTR [ebx+2460]
  001e4	0f 8d a7 00 00
	00		 jge	 $LN125@RenderTerr

; 71   : 		for(it = near_it; it != far_it; ++it)

  001ea	3b f7		 cmp	 esi, edi
  001ec	0f 84 9f 00 00
	00		 je	 $LN125@RenderTerr
$LL143@RenderTerr:

; 72   : 		{
; 73   : 			if (byCUrrentLODLevel == 0 && fLODLevel1Distance <= it->first)

  001f2	8a 85 63 fe ff
	ff		 mov	 al, BYTE PTR _byCUrrentLODLevel$1$[ebp]
  001f8	84 c0		 test	 al, al
  001fa	75 22		 jne	 SHORT $LN120@RenderTerr
  001fc	f3 0f 10 06	 movss	 xmm0, DWORD PTR [esi]
  00200	0f 2f c1	 comiss	 xmm0, xmm1
  00203	72 44		 jb	 SHORT $LN18@RenderTerr

; 74   : 			{
; 75   : 				byCUrrentLODLevel = 1;
; 76   : 				SelectIndexBuffer(1, &wPrimitiveCount, &ePrimitiveType);

  00205	8d 85 5c fe ff
	ff		 lea	 eax, DWORD PTR _ePrimitiveType$[ebp]
  0020b	c6 85 63 fe ff
	ff 01		 mov	 BYTE PTR _byCUrrentLODLevel$1$[ebp], 1
  00212	50		 push	 eax
  00213	8d 85 58 fe ff
	ff		 lea	 eax, DWORD PTR _wPrimitiveCount$[ebp]
  00219	50		 push	 eax
  0021a	6a 01		 push	 1

; 77   : 			}

  0021c	eb 24		 jmp	 SHORT $LN146@RenderTerr
$LN120@RenderTerr:

; 78   : 			else if (byCUrrentLODLevel == 1 && fLODLevel2Distance <= it->first)

  0021e	3c 01		 cmp	 al, 1
  00220	75 27		 jne	 SHORT $LN18@RenderTerr
  00222	f3 0f 10 06	 movss	 xmm0, DWORD PTR [esi]
  00226	0f 2f c2	 comiss	 xmm0, xmm2
  00229	72 1e		 jb	 SHORT $LN18@RenderTerr

; 79   : 			{
; 80   : 				byCUrrentLODLevel = 2;
; 81   : 				SelectIndexBuffer(2, &wPrimitiveCount, &ePrimitiveType);

  0022b	8d 85 5c fe ff
	ff		 lea	 eax, DWORD PTR _ePrimitiveType$[ebp]
  00231	c6 85 63 fe ff
	ff 02		 mov	 BYTE PTR _byCUrrentLODLevel$1$[ebp], 2
  00238	50		 push	 eax
  00239	8d 85 58 fe ff
	ff		 lea	 eax, DWORD PTR _wPrimitiveCount$[ebp]
  0023f	50		 push	 eax
  00240	6a 02		 push	 2
$LN146@RenderTerr:

; 82   : 			}
; 83   : 
; 84   : 			__SoftwareTransformPatch_RenderPatchSplat(kTPRS, it->second, wPrimitiveCount, ePrimitiveType, true);

  00242	8b cb		 mov	 ecx, ebx
  00244	e8 00 00 00 00	 call	 ?SelectIndexBuffer@CMapOutdoor@@IAEXEPAGPAW4_D3DPRIMITIVETYPE@@@Z ; CMapOutdoor::SelectIndexBuffer
$LN18@RenderTerr:
  00249	6a 01		 push	 1
  0024b	ff b5 5c fe ff
	ff		 push	 DWORD PTR _ePrimitiveType$[ebp]
  00251	8d 85 64 fe ff
	ff		 lea	 eax, DWORD PTR _kTPRS$[ebp]
  00257	8b cb		 mov	 ecx, ebx
  00259	ff b5 58 fe ff
	ff		 push	 DWORD PTR _wPrimitiveCount$[ebp]
  0025f	ff 76 04	 push	 DWORD PTR [esi+4]
  00262	50		 push	 eax
  00263	e8 00 00 00 00	 call	 ?__SoftwareTransformPatch_RenderPatchSplat@CMapOutdoor@@IAEXAAUSoftwareTransformPatch_SRenderState@1@JGW4_D3DPRIMITIVETYPE@@_N@Z ; CMapOutdoor::__SoftwareTransformPatch_RenderPatchSplat

; 85   : 
; 86   : 			if (m_iRenderedSplatNum >= m_iSplatLimit)

  00268	8b 83 88 09 00
	00		 mov	 eax, DWORD PTR [ebx+2440]
  0026e	3b 83 9c 09 00
	00		 cmp	 eax, DWORD PTR [ebx+2460]
  00274	7d 1b		 jge	 SHORT $LN125@RenderTerr

; 71   : 		for(it = near_it; it != far_it; ++it)

  00276	f3 0f 10 8d 54
	fe ff ff	 movss	 xmm1, DWORD PTR _fLODLevel1Distance$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 79   :         ++_Ptr;

  0027e	83 c6 08	 add	 esi, 8
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp

; 71   : 		for(it = near_it; it != far_it; ++it)

  00281	f3 0f 10 95 50
	fe ff ff	 movss	 xmm2, DWORD PTR _fLODLevel2Distance$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 163  :         return _Ptr == _Right._Ptr;

  00289	3b f7		 cmp	 esi, edi
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp

; 71   : 		for(it = near_it; it != far_it; ++it)

  0028b	0f 85 61 ff ff
	ff		 jne	 $LL143@RenderTerr
$LN125@RenderTerr:

; 87   : 				break;
; 88   : 
; 89   : 		}
; 90   : 	}
; 91   : 
; 92   : 
; 93   : 	STATEMANAGER.SetTexture(0, NULL);

  00291	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00297	6a 00		 push	 0
  00299	6a 00		 push	 0
  0029b	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 94   : 	STATEMANAGER.SetTexture(1, NULL);

  002a0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  002a6	6a 00		 push	 0
  002a8	6a 01		 push	 1
  002aa	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 95   : 
; 96   : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG1, D3DTA_TFACTOR);

  002af	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  002b5	6a 03		 push	 3
  002b7	6a 02		 push	 2
  002b9	6a 00		 push	 0
  002bb	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 97   : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP,   D3DTOP_SELECTARG1);

  002c0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  002c6	6a 02		 push	 2
  002c8	6a 01		 push	 1
  002ca	6a 00		 push	 0
  002cc	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 98   : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAOP,   D3DTOP_DISABLE);

  002d1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  002d7	6a 01		 push	 1
  002d9	6a 04		 push	 4
  002db	6a 00		 push	 0
  002dd	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 99   : 
; 100  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_COLOROP,   D3DTOP_DISABLE);

  002e2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  002e8	6a 01		 push	 1
  002ea	6a 01		 push	 1
  002ec	6a 01		 push	 1
  002ee	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 101  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAOP,   D3DTOP_DISABLE);

  002f3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  002f9	6a 01		 push	 1
  002fb	6a 04		 push	 4
  002fd	6a 01		 push	 1
  002ff	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 102  : 
; 103  : 	STATEMANAGER.SetVertexShader(D3DFVF_XYZRHW);

  00304	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0030a	6a 04		 push	 4
  0030c	e8 00 00 00 00	 call	 ?SetVertexShader@CStateManager@@QAEXK@Z ; CStateManager::SetVertexShader

; 104  : 
; 105  : 	if (IsFastTNL())

  00311	e8 00 00 00 00	 call	 ?IsFastTNL@CGraphicBase@@SA_NXZ ; CGraphicBase::IsFastTNL
  00316	84 c0		 test	 al, al
  00318	74 6c		 je	 SHORT $LN126@RenderTerr

; 106  : 	{
; 107  : 		if (byCUrrentLODLevel != 2)

  0031a	80 bd 63 fe ff
	ff 02		 cmp	 BYTE PTR _byCUrrentLODLevel$1$[ebp], 2
  00321	74 17		 je	 SHORT $LN21@RenderTerr

; 108  : 		{
; 109  : 			byCUrrentLODLevel = 2;
; 110  : 			SelectIndexBuffer(2, &wPrimitiveCount, &ePrimitiveType);

  00323	8d 85 5c fe ff
	ff		 lea	 eax, DWORD PTR _ePrimitiveType$[ebp]
  00329	8b cb		 mov	 ecx, ebx
  0032b	50		 push	 eax
  0032c	8d 85 58 fe ff
	ff		 lea	 eax, DWORD PTR _wPrimitiveCount$[ebp]
  00332	50		 push	 eax
  00333	6a 02		 push	 2
  00335	e8 00 00 00 00	 call	 ?SelectIndexBuffer@CMapOutdoor@@IAEXEPAGPAW4_D3DPRIMITIVETYPE@@@Z ; CMapOutdoor::SelectIndexBuffer
$LN21@RenderTerr:

; 111  : 		}
; 112  : 
; 113  : 		if (m_iRenderedSplatNum < m_iSplatLimit)

  0033a	8b 83 88 09 00
	00		 mov	 eax, DWORD PTR [ebx+2440]
  00340	3b 83 9c 09 00
	00		 cmp	 eax, DWORD PTR [ebx+2460]
  00346	7d 3e		 jge	 SHORT $LN126@RenderTerr
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00348	3b bb 1c 01 00
	00		 cmp	 edi, DWORD PTR [ebx+284]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp

; 115  : 			for(it = far_it; it != m_PatchVector.end(); ++it)

  0034e	74 36		 je	 SHORT $LN126@RenderTerr
$LL144@RenderTerr:

; 116  : 			{
; 117  : 				__SoftwareTransformPatch_RenderPatchNone(kTPRS, it->second, wPrimitiveCount, ePrimitiveType);

  00350	ff b5 5c fe ff
	ff		 push	 DWORD PTR _ePrimitiveType$[ebp]
  00356	8d 85 64 fe ff
	ff		 lea	 eax, DWORD PTR _kTPRS$[ebp]
  0035c	8b cb		 mov	 ecx, ebx
  0035e	ff b5 58 fe ff
	ff		 push	 DWORD PTR _wPrimitiveCount$[ebp]
  00364	ff 77 04	 push	 DWORD PTR [edi+4]
  00367	50		 push	 eax
  00368	e8 00 00 00 00	 call	 ?__SoftwareTransformPatch_RenderPatchNone@CMapOutdoor@@IAEXAAUSoftwareTransformPatch_SRenderState@1@JGW4_D3DPRIMITIVETYPE@@@Z ; CMapOutdoor::__SoftwareTransformPatch_RenderPatchNone

; 118  : 
; 119  : 				if (m_iRenderedSplatNum >= m_iSplatLimit)

  0036d	8b 83 88 09 00
	00		 mov	 eax, DWORD PTR [ebx+2440]
  00373	3b 83 9c 09 00
	00		 cmp	 eax, DWORD PTR [ebx+2460]
  00379	7d 0b		 jge	 SHORT $LN126@RenderTerr
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 79   :         ++_Ptr;

  0037b	83 c7 08	 add	 edi, 8

; 163  :         return _Ptr == _Right._Ptr;

  0037e	3b bb 1c 01 00
	00		 cmp	 edi, DWORD PTR [ebx+284]
; File C:\Marty 5.5\Src-Client\Client\GameLib\MapOutdoorRenderSTP.cpp

; 115  : 			for(it = far_it; it != m_PatchVector.end(); ++it)

  00384	75 ca		 jne	 SHORT $LL144@RenderTerr
$LN126@RenderTerr:

; 120  : 					break;
; 121  : 
; 122  : 			}
; 123  : 		}
; 124  : 	}
; 125  : 
; 126  : 
; 127  : 	//////////////////////////////////////////////////////////////////////////
; 128  : 	// Render State & TextureStageState
; 129  : 	__SoftwareTransformPatch_RestoreRenderState(dwFogEnable);

  00386	ff b5 3c fe ff
	ff		 push	 DWORD PTR _dwFogEnable$1$[ebp]
  0038c	8b cb		 mov	 ecx, ebx
  0038e	e8 00 00 00 00	 call	 ?__SoftwareTransformPatch_RestoreRenderState@CMapOutdoor@@IAEXK@Z ; CMapOutdoor::__SoftwareTransformPatch_RestoreRenderState

; 130  : }

  00393	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00396	5f		 pop	 edi
  00397	5e		 pop	 esi
  00398	33 cd		 xor	 ecx, ebp
  0039a	5b		 pop	 ebx
  0039b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003a0	8b e5		 mov	 esp, ebp
  003a2	5d		 pop	 ebp
  003a3	c3		 ret	 0
?__RenderTerrain_RenderSoftwareTransformPatch@CMapOutdoor@@IAEXXZ ENDP ; CMapOutdoor::__RenderTerrain_RenderSoftwareTransformPatch
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ PROC ; std::vector<int,std::allocator<int> >::_Xlength, COMDAT

; 2138 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ ENDP ; std::vector<int,std::allocator<int> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 137  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 138  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 139  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 140  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 87   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 141  :         _Throw_bad_array_new_length(); // add overflow
; 142  :     }
; 143  : 
; 144  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 87   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 146  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 147  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 148  : 
; 149  : #ifdef _DEBUG
; 150  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 151  : #endif // _DEBUG
; 152  :     return _Ptr;
; 153  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 331  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 332  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.h
;	COMDAT ??0D3DXMATRIX@@QAE@XZ
_TEXT	SEGMENT
??0D3DXMATRIX@@QAE@XZ PROC				; D3DXMATRIX::D3DXMATRIX, COMDAT
; _this$ = ecx

; 177  :     D3DXMATRIX() {};

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0D3DXMATRIX@@QAE@XZ ENDP				; D3DXMATRIX::D3DXMATRIX
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\extern\include\d3dx8math.h
;	COMDAT ??0D3DXVECTOR4@@QAE@XZ
_TEXT	SEGMENT
??0D3DXVECTOR4@@QAE@XZ PROC				; D3DXVECTOR4::D3DXVECTOR4, COMDAT
; _this$ = ecx

; 133  :     D3DXVECTOR4() {};

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0D3DXVECTOR4@@QAE@XZ ENDP				; D3DXVECTOR4::D3DXVECTOR4
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END

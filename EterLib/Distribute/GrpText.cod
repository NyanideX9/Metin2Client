; Listing generated by Microsoft (R) Optimizing Compiler Version 19.43.34808.0 

	TITLE	C:\Marty 5.5\Src-Client\Client\EterLib\Distribute\GrpText.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?Type@CGraphicText@@SAKXZ			; CGraphicText::Type
PUBLIC	??0CGraphicText@@QAE@PBD@Z			; CGraphicText::CGraphicText
PUBLIC	??1CGraphicText@@UAE@XZ				; CGraphicText::~CGraphicText
PUBLIC	?CreateDeviceObjects@CGraphicText@@UAE_NXZ	; CGraphicText::CreateDeviceObjects
PUBLIC	?DestroyDeviceObjects@CGraphicText@@UAEXXZ	; CGraphicText::DestroyDeviceObjects
PUBLIC	?GetFontTexturePointer@CGraphicText@@QAEPAVCGraphicFontTexture@@XZ ; CGraphicText::GetFontTexturePointer
PUBLIC	?OnLoad@CGraphicText@@MAE_NHPBX@Z		; CGraphicText::OnLoad
PUBLIC	?OnClear@CGraphicText@@MAEXXZ			; CGraphicText::OnClear
PUBLIC	?OnIsEmpty@CGraphicText@@MBE_NXZ		; CGraphicText::OnIsEmpty
PUBLIC	?OnIsType@CGraphicText@@MAE_NK@Z		; CGraphicText::OnIsType
PUBLIC	??_GCGraphicText@@UAEPAXI@Z			; CGraphicText::`scalar deleting destructor'
PUBLIC	??_7CGraphicText@@6B@				; CGraphicText::`vftable'
PUBLIC	??_C@_0N@JPGFHJCC@CGraphicText@			; `string'
PUBLIC	??_R4CGraphicText@@6B@				; CGraphicText::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCGraphicText@@@8			; CGraphicText `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicText@@8				; CGraphicText::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicText@@8				; CGraphicText::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGraphicText@@8			; CGraphicText::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CResource@@8			; CResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCResource@@@8				; CResource `RTTI Type Descriptor'
PUBLIC	??_R3CResource@@8				; CResource::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CResource@@8				; CResource::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CReferenceObject@@8		; CReferenceObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCReferenceObject@@@8			; CReferenceObject `RTTI Type Descriptor'
PUBLIC	??_R3CReferenceObject@@8			; CReferenceObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CReferenceObject@@8			; CReferenceObject::`RTTI Base Class Array'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	___report_rangecheckfailure:PROC
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_abort:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	__atoi64:PROC
EXTRN	_isdigit:PROC
EXTRN	_strrchr:PROC
EXTRN	_strncpy:PROC
EXTRN	?MIN@@YAHHH@Z:PROC				; MIN
EXTRN	?StringToType@CResource@@SAKPBD@Z:PROC		; CResource::StringToType
EXTRN	??0CResource@@QAE@PBD@Z:PROC			; CResource::CResource
EXTRN	??1CResource@@UAE@XZ:PROC			; CResource::~CResource
EXTRN	?OnIsType@CResource@@MAE_NK@Z:PROC		; CResource::OnIsType
EXTRN	?OnConstruct@CResource@@MAEXXZ:PROC		; CResource::OnConstruct
EXTRN	?OnSelfDestruct@CResource@@MAEXXZ:PROC		; CResource::OnSelfDestruct
EXTRN	??0CGraphicFontTexture@@QAE@XZ:PROC		; CGraphicFontTexture::CGraphicFontTexture
EXTRN	??1CGraphicFontTexture@@UAE@XZ:PROC		; CGraphicFontTexture::~CGraphicFontTexture
EXTRN	?Destroy@CGraphicFontTexture@@QAEXXZ:PROC	; CGraphicFontTexture::Destroy
EXTRN	?Create@CGraphicFontTexture@@QAE_NPBDH_N1@Z:PROC ; CGraphicFontTexture::Create
EXTRN	?CreateDeviceObjects@CGraphicFontTexture@@QAE_NXZ:PROC ; CGraphicFontTexture::CreateDeviceObjects
EXTRN	?DestroyDeviceObjects@CGraphicFontTexture@@QAEXXZ:PROC ; CGraphicFontTexture::DestroyDeviceObjects
EXTRN	??_ECGraphicText@@UAEPAXI@Z:PROC		; CGraphicText::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
;	COMDAT ?s_type@?1??Type@CGraphicText@@SAKXZ@4KA
_BSS	SEGMENT
?s_type@?1??Type@CGraphicText@@SAKXZ@4KA DD 01H DUP (?)	; `CGraphicText::Type'::`2'::s_type
_BSS	ENDS
;	COMDAT ?$TSS0@?1??Type@CGraphicText@@SAKXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??Type@CGraphicText@@SAKXZ@4HA DD 01H DUP (?)	; `CGraphicText::Type'::`2'::$TSS0
_BSS	ENDS
;	COMDAT ??_R2CReferenceObject@@8
rdata$r	SEGMENT
??_R2CReferenceObject@@8 DD FLAT:??_R1A@?0A@EA@CReferenceObject@@8 ; CReferenceObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CReferenceObject@@8
rdata$r	SEGMENT
??_R3CReferenceObject@@8 DD 00H				; CReferenceObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CReferenceObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCReferenceObject@@@8
data$rs	SEGMENT
??_R0?AVCReferenceObject@@@8 DD FLAT:??_7type_info@@6B@	; CReferenceObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCReferenceObject@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CReferenceObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CReferenceObject@@8 DD FLAT:??_R0?AVCReferenceObject@@@8 ; CReferenceObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CReferenceObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CResource@@8
rdata$r	SEGMENT
??_R2CResource@@8 DD FLAT:??_R1A@?0A@EA@CResource@@8	; CResource::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CReferenceObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CResource@@8
rdata$r	SEGMENT
??_R3CResource@@8 DD 00H				; CResource::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CResource@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCResource@@@8
data$rs	SEGMENT
??_R0?AVCResource@@@8 DD FLAT:??_7type_info@@6B@	; CResource `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCResource@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CResource@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CResource@@8 DD FLAT:??_R0?AVCResource@@@8 ; CResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CResource@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicText@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicText@@8 DD FLAT:??_R0?AVCGraphicText@@@8 ; CGraphicText::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicText@@8
rdata$r	ENDS
;	COMDAT ??_R2CGraphicText@@8
rdata$r	SEGMENT
??_R2CGraphicText@@8 DD FLAT:??_R1A@?0A@EA@CGraphicText@@8 ; CGraphicText::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CResource@@8
	DD	FLAT:??_R1A@?0A@EA@CReferenceObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CGraphicText@@8
rdata$r	SEGMENT
??_R3CGraphicText@@8 DD 00H				; CGraphicText::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CGraphicText@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicText@@@8
data$rs	SEGMENT
??_R0?AVCGraphicText@@@8 DD FLAT:??_7type_info@@6B@	; CGraphicText `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicText@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CGraphicText@@6B@
rdata$r	SEGMENT
??_R4CGraphicText@@6B@ DD 00H				; CGraphicText::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCGraphicText@@@8
	DD	FLAT:??_R3CGraphicText@@8
rdata$r	ENDS
;	COMDAT ??_C@_0N@JPGFHJCC@CGraphicText@
CONST	SEGMENT
??_C@_0N@JPGFHJCC@CGraphicText@ DB 'CGraphicText', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CGraphicText@@6B@
CONST	SEGMENT
??_7CGraphicText@@6B@ DD FLAT:??_R4CGraphicText@@6B@	; CGraphicText::`vftable'
	DD	FLAT:??_ECGraphicText@@UAEPAXI@Z
	DD	FLAT:?OnConstruct@CResource@@MAEXXZ
	DD	FLAT:?OnSelfDestruct@CResource@@MAEXXZ
	DD	FLAT:?CreateDeviceObjects@CGraphicText@@UAE_NXZ
	DD	FLAT:?DestroyDeviceObjects@CGraphicText@@UAEXXZ
	DD	FLAT:?OnLoad@CGraphicText@@MAE_NHPBX@Z
	DD	FLAT:?OnClear@CGraphicText@@MAEXXZ
	DD	FLAT:?OnIsEmpty@CGraphicText@@MBE_NXZ
	DD	FLAT:?OnIsType@CGraphicText@@MAE_NK@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CGraphicText@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CGraphicText@@QAE@PBD@Z$0
__ehfuncinfo$??0CGraphicText@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CGraphicText@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Type@CGraphicText@@SAKXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Type@CGraphicText@@SAKXZ$0
__ehfuncinfo$?Type@CGraphicText@@SAKXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Type@CGraphicText@@SAKXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCGraphicText@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCGraphicText@@UAEPAXI@Z PROC			; CGraphicText::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CGraphicText@@UAE@XZ	; CGraphicText::~CGraphicText
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN5@scalar
  00011	68 e0 00 00 00	 push	 224			; 000000e0H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN5@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCGraphicText@@UAEPAXI@Z ENDP			; CGraphicText::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\EterLib\GrpText.cpp
;	COMDAT ?OnIsType@CGraphicText@@MAE_NK@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
?OnIsType@CGraphicText@@MAE_NK@Z PROC			; CGraphicText::OnIsType, COMDAT
; _this$ = ecx

; 116  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 117  : 	if (CGraphicText::Type() == type)

  00006	e8 00 00 00 00	 call	 ?Type@CGraphicText@@SAKXZ ; CGraphicText::Type
  0000b	8b 55 08	 mov	 edx, DWORD PTR _type$[ebp]
  0000e	3b c2		 cmp	 eax, edx
  00010	75 07		 jne	 SHORT $LN2@OnIsType

; 118  : 		return true;

  00012	b0 01		 mov	 al, 1
  00014	5e		 pop	 esi

; 121  : }

  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
$LN2@OnIsType:

; 119  : 
; 120  : 	return CResource::OnIsType(type);

  00019	52		 push	 edx
  0001a	8b ce		 mov	 ecx, esi
  0001c	e8 00 00 00 00	 call	 ?OnIsType@CResource@@MAE_NK@Z ; CResource::OnIsType
  00021	5e		 pop	 esi

; 121  : }

  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
?OnIsType@CGraphicText@@MAE_NK@Z ENDP			; CGraphicText::OnIsType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\EterLib\GrpText.cpp
;	COMDAT ?OnIsEmpty@CGraphicText@@MBE_NXZ
_TEXT	SEGMENT
?OnIsEmpty@CGraphicText@@MBE_NXZ PROC			; CGraphicText::OnIsEmpty, COMDAT
; _this$ = ecx

; 112  : 	return m_fontTexture.IsEmpty();

  00000	8b 41 2c	 mov	 eax, DWORD PTR [ecx+44]
  00003	83 c1 2c	 add	 ecx, 44			; 0000002cH
  00006	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00009	ff e0		 jmp	 eax
?OnIsEmpty@CGraphicText@@MBE_NXZ ENDP			; CGraphicText::OnIsEmpty
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\EterLib\GrpText.cpp
;	COMDAT ?OnClear@CGraphicText@@MAEXXZ
_TEXT	SEGMENT
?OnClear@CGraphicText@@MAEXXZ PROC			; CGraphicText::OnClear, COMDAT
; _this$ = ecx

; 107  : 	m_fontTexture.Destroy();

  00000	83 c1 2c	 add	 ecx, 44			; 0000002cH
  00003	e9 00 00 00 00	 jmp	 ?Destroy@CGraphicFontTexture@@QAEXXZ ; CGraphicFontTexture::Destroy
?OnClear@CGraphicText@@MAEXXZ ENDP			; CGraphicText::OnClear
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\EterLib\GrpText.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File C:\Marty 5.5\Src-Client\Client\EterLib\GrpText.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File C:\Marty 5.5\Src-Client\Client\EterLib\GrpText.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File C:\Marty 5.5\Src-Client\Client\EterLib\GrpText.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File C:\Marty 5.5\Src-Client\Client\EterLib\GrpText.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File C:\Marty 5.5\Src-Client\Client\EterLib\GrpText.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File C:\Marty 5.5\Src-Client\Client\EterLib\GrpText.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File C:\Marty 5.5\Src-Client\Client\EterLib\GrpText.cpp
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring
; File C:\Marty 5.5\Src-Client\Client\EterLib\GrpText.cpp
;	COMDAT ?OnLoad@CGraphicText@@MAE_NHPBX@Z
_TEXT	SEGMENT
_bItalic$ = -52						; size = 1
_bBold$ = -48						; size = 1
_strName$ = -44						; size = 32
_num$1 = -12						; size = 8
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?OnLoad@CGraphicText@@MAE_NHPBX@Z PROC			; CGraphicText::OnLoad, COMDAT
; _this$ = ecx

; 35   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	8b f9		 mov	 edi, ecx

; 36   : #ifdef ENABLE_DYNAMIC_FONTS
; 37   : 	char strName[32];
; 38   : #else
; 39   : 	static char strName[32];
; 40   : #endif
; 41   : 	int size;
; 42   : 	bool bItalic = false;

  00015	c6 45 cc 00	 mov	 BYTE PTR _bItalic$[ebp], 0
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 434  :         return _Myres > _Small_string_capacity;

  00019	83 7f 20 0f	 cmp	 DWORD PTR [edi+32], 15	; 0000000fH

; 2328 :         return _Mypair._Myval2._Myptr();

  0001d	8d 77 0c	 lea	 esi, DWORD PTR [edi+12]
; File C:\Marty 5.5\Src-Client\Client\EterLib\GrpText.cpp

; 43   : 	bool bBold = false; //@natanek155

  00020	c6 45 d0 00	 mov	 BYTE PTR _bBold$[ebp], 0
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 425  :         const value_type* _Result = _Bx._Buf;

  00024	8b c6		 mov	 eax, esi

; 426  :         if (_Large_mode_engaged()) {

  00026	76 02		 jbe	 SHORT $LN96@OnLoad

; 427  :             _Result = _Unfancy(_Bx._Ptr);

  00028	8b 06		 mov	 eax, DWORD PTR [esi]
$LN96@OnLoad:
; File C:\Marty 5.5\Src-Client\Client\EterLib\GrpText.cpp

; 49   : 	const char * p = strrchr(GetFileName(), ':');

  0002a	6a 3a		 push	 58			; 0000003aH
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 _strrchr
  00032	8b d8		 mov	 ebx, eax
  00034	83 c4 08	 add	 esp, 8

; 50   : 
; 51   : 	if (p)

  00037	85 db		 test	 ebx, ebx
  00039	0f 84 8b 00 00
	00		 je	 $LN4@OnLoad
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 434  :         return _Myres > _Small_string_capacity;

  0003f	83 7e 14 0f	 cmp	 DWORD PTR [esi+20], 15	; 0000000fH

; 425  :         const value_type* _Result = _Bx._Buf;

  00043	8b ce		 mov	 ecx, esi

; 426  :         if (_Large_mode_engaged()) {

  00045	76 02		 jbe	 SHORT $LN97@OnLoad

; 427  :             _Result = _Unfancy(_Bx._Ptr);

  00047	8b 0e		 mov	 ecx, DWORD PTR [esi]
$LN97@OnLoad:
; File C:\Marty 5.5\Src-Client\Client\EterLib\GrpText.cpp

; 53   : 		strncpy(strName, GetFileName(), MIN(31, p - GetFileName()));

  00049	8b c3		 mov	 eax, ebx
  0004b	2b c1		 sub	 eax, ecx
  0004d	50		 push	 eax
  0004e	6a 1f		 push	 31			; 0000001fH
  00050	e8 00 00 00 00	 call	 ?MIN@@YAHHH@Z		; MIN
  00055	83 c4 08	 add	 esp, 8
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 434  :         return _Myres > _Small_string_capacity;

  00058	83 7e 14 0f	 cmp	 DWORD PTR [esi+20], 15	; 0000000fH

; 426  :         if (_Large_mode_engaged()) {

  0005c	76 02		 jbe	 SHORT $LN46@OnLoad

; 427  :             _Result = _Unfancy(_Bx._Ptr);

  0005e	8b 36		 mov	 esi, DWORD PTR [esi]
$LN46@OnLoad:
; File C:\Marty 5.5\Src-Client\Client\EterLib\GrpText.cpp

; 53   : 		strncpy(strName, GetFileName(), MIN(31, p - GetFileName()));

  00060	50		 push	 eax
  00061	8d 45 d4	 lea	 eax, DWORD PTR _strName$[ebp]
  00064	56		 push	 esi
  00065	50		 push	 eax
  00066	e8 00 00 00 00	 call	 _strncpy

; 54   : 		++p;
; 55   : 
; 56   : #ifdef ENABLE_DYNAMIC_FONTS
; 57   : 		char num[8];
; 58   : #else
; 59   : 		static char num[8];
; 60   : #endif
; 61   : 
; 62   : 		int i = 0;
; 63   : 		while (*p && isdigit(*p))

  0006b	8a 43 01	 mov	 al, BYTE PTR [ebx+1]
  0006e	43		 inc	 ebx
  0006f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00072	33 f6		 xor	 esi, esi
  00074	84 c0		 test	 al, al
  00076	74 2f		 je	 SHORT $LN100@OnLoad
  00078	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL2@OnLoad:
  00080	0f be c0	 movsx	 eax, al
  00083	50		 push	 eax
  00084	e8 00 00 00 00	 call	 _isdigit
  00089	83 c4 04	 add	 esp, 4
  0008c	85 c0		 test	 eax, eax
  0008e	74 0e		 je	 SHORT $LN3@OnLoad

; 64   : 		{
; 65   : 			num[i++] = *(p++);

  00090	8a 03		 mov	 al, BYTE PTR [ebx]
  00092	43		 inc	 ebx
  00093	88 44 35 f4	 mov	 BYTE PTR _num$1[ebp+esi], al
  00097	46		 inc	 esi
  00098	8a 03		 mov	 al, BYTE PTR [ebx]
  0009a	84 c0		 test	 al, al
  0009c	75 e2		 jne	 SHORT $LL2@OnLoad
$LN3@OnLoad:

; 66   : 		}
; 67   : 
; 68   : 		num[i] = '\0';

  0009e	83 fe 08	 cmp	 esi, 8
  000a1	0f 83 a2 00 00
	00		 jae	 $LN114@OnLoad
$LN100@OnLoad:

; 69   : 	//@natanek155
; 70   : 		if(*p == 'b')

  000a7	8a 1b		 mov	 bl, BYTE PTR [ebx]

; 71   : 			bBold = true;
; 72   : 	//@natanek155
; 73   : 		if (*p == 'i')
; 74   : 		{
; 75   : 			bItalic = true;
; 76   : 		}
; 77   : 		size = atoi(num);

  000a9	8d 45 f4	 lea	 eax, DWORD PTR _num$1[ebp]
  000ac	50		 push	 eax
  000ad	c6 44 35 f4 00	 mov	 BYTE PTR _num$1[ebp+esi], 0
  000b2	e8 00 00 00 00	 call	 __atoi64
  000b7	83 c4 04	 add	 esp, 4
  000ba	80 fb 62	 cmp	 bl, 98			; 00000062H
  000bd	0f 94 45 d0	 sete	 BYTE PTR _bBold$[ebp]
  000c1	80 fb 69	 cmp	 bl, 105			; 00000069H
  000c4	0f 94 45 cc	 sete	 BYTE PTR _bItalic$[ebp]

; 78   : 	}

  000c8	eb 54		 jmp	 SHORT $LN5@OnLoad
$LN4@OnLoad:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 434  :         return _Myres > _Small_string_capacity;

  000ca	83 7e 14 0f	 cmp	 DWORD PTR [esi+20], 15	; 0000000fH

; 426  :         if (_Large_mode_engaged()) {

  000ce	76 02		 jbe	 SHORT $LN98@OnLoad

; 427  :             _Result = _Unfancy(_Bx._Ptr);

  000d0	8b 36		 mov	 esi, DWORD PTR [esi]
$LN98@OnLoad:
; File C:\Marty 5.5\Src-Client\Client\EterLib\GrpText.cpp

; 81   : 		p = strrchr(GetFileName(), '.');

  000d2	6a 2e		 push	 46			; 0000002eH
  000d4	56		 push	 esi
  000d5	e8 00 00 00 00	 call	 _strrchr
  000da	8b c8		 mov	 ecx, eax
  000dc	83 c4 08	 add	 esp, 8

; 82   : 
; 83   : 		if (!p)

  000df	85 c9		 test	 ecx, ecx
  000e1	75 05		 jne	 SHORT $LN8@OnLoad

; 84   : 		{
; 85   : 			assert(!"CGraphicText::OnLoadFromFile there is no extension (ie: .fnt)");
; 86   : 			strName[0] = '\0';

  000e3	88 45 d4	 mov	 BYTE PTR _strName$[ebp], al

; 87   : 		}

  000e6	eb 31		 jmp	 SHORT $LN9@OnLoad
$LN8@OnLoad:
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 434  :         return _Myres > _Small_string_capacity;

  000e8	83 7f 20 0f	 cmp	 DWORD PTR [edi+32], 15	; 0000000fH

; 2328 :         return _Mypair._Myval2._Myptr();

  000ec	8d 47 0c	 lea	 eax, DWORD PTR [edi+12]

; 426  :         if (_Large_mode_engaged()) {

  000ef	76 02		 jbe	 SHORT $LN99@OnLoad

; 427  :             _Result = _Unfancy(_Bx._Ptr);

  000f1	8b 00		 mov	 eax, DWORD PTR [eax]
$LN99@OnLoad:
; File C:\Marty 5.5\Src-Client\Client\EterLib\GrpText.cpp

; 90   : 			strncpy(strName, GetFileName(), MIN(31, p - GetFileName()));

  000f3	2b c8		 sub	 ecx, eax
  000f5	51		 push	 ecx
  000f6	6a 1f		 push	 31			; 0000001fH
  000f8	e8 00 00 00 00	 call	 ?MIN@@YAHHH@Z		; MIN
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 2328 :         return _Mypair._Myval2._Myptr();

  000fd	8d 4f 0c	 lea	 ecx, DWORD PTR [edi+12]
; File C:\Marty 5.5\Src-Client\Client\EterLib\GrpText.cpp

; 90   : 			strncpy(strName, GetFileName(), MIN(31, p - GetFileName()));

  00100	83 c4 08	 add	 esp, 8
; File D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xstring

; 434  :         return _Myres > _Small_string_capacity;

  00103	83 79 14 0f	 cmp	 DWORD PTR [ecx+20], 15	; 0000000fH

; 426  :         if (_Large_mode_engaged()) {

  00107	76 02		 jbe	 SHORT $LN82@OnLoad

; 427  :             _Result = _Unfancy(_Bx._Ptr);

  00109	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN82@OnLoad:
; File C:\Marty 5.5\Src-Client\Client\EterLib\GrpText.cpp

; 90   : 			strncpy(strName, GetFileName(), MIN(31, p - GetFileName()));

  0010b	50		 push	 eax
  0010c	51		 push	 ecx
  0010d	8d 45 d4	 lea	 eax, DWORD PTR _strName$[ebp]
  00110	50		 push	 eax
  00111	e8 00 00 00 00	 call	 _strncpy
  00116	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN9@OnLoad:

; 91   : 		}
; 92   : 
; 93   : 		size = 12;

  00119	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
$LN5@OnLoad:

; 94   : 	}
; 95   : 
; 96   : //	if (!m_fontTexture.Create(strName, size, bItalic))
; 97   : 	if (!m_fontTexture.Create(strName, size, bItalic, bBold)) //@natanek155

  0011e	ff 75 d0	 push	 DWORD PTR _bBold$[ebp]
  00121	8d 4f 2c	 lea	 ecx, DWORD PTR [edi+44]
  00124	ff 75 cc	 push	 DWORD PTR _bItalic$[ebp]
  00127	50		 push	 eax
  00128	8d 45 d4	 lea	 eax, DWORD PTR _strName$[ebp]
  0012b	50		 push	 eax
  0012c	e8 00 00 00 00	 call	 ?Create@CGraphicFontTexture@@QAE_NPBDH_N1@Z ; CGraphicFontTexture::Create

; 98   : 	{
; 99   : 		return false;
; 100  : 	}
; 101  : 
; 102  : 	return true;
; 103  : }

  00131	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00134	84 c0		 test	 al, al
  00136	5f		 pop	 edi
  00137	0f 95 c0	 setne	 al
  0013a	33 cd		 xor	 ecx, ebp
  0013c	5e		 pop	 esi
  0013d	5b		 pop	 ebx
  0013e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00143	8b e5		 mov	 esp, ebp
  00145	5d		 pop	 ebp
  00146	c2 08 00	 ret	 8
$LN114@OnLoad:

; 66   : 		}
; 67   : 
; 68   : 		num[i] = '\0';

  00149	e8 00 00 00 00	 call	 ___report_rangecheckfailure
$LN112@OnLoad:
  0014e	cc		 int	 3
?OnLoad@CGraphicText@@MAE_NHPBX@Z ENDP			; CGraphicText::OnLoad
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\EterLib\GrpText.cpp
;	COMDAT ?GetFontTexturePointer@CGraphicText@@QAEPAVCGraphicFontTexture@@XZ
_TEXT	SEGMENT
?GetFontTexturePointer@CGraphicText@@QAEPAVCGraphicFontTexture@@XZ PROC ; CGraphicText::GetFontTexturePointer, COMDAT
; _this$ = ecx

; 25   : 	return &m_fontTexture;

  00000	8d 41 2c	 lea	 eax, DWORD PTR [ecx+44]

; 26   : }

  00003	c3		 ret	 0
?GetFontTexturePointer@CGraphicText@@QAEPAVCGraphicFontTexture@@XZ ENDP ; CGraphicText::GetFontTexturePointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\EterLib\GrpText.cpp
;	COMDAT ?DestroyDeviceObjects@CGraphicText@@UAEXXZ
_TEXT	SEGMENT
?DestroyDeviceObjects@CGraphicText@@UAEXXZ PROC		; CGraphicText::DestroyDeviceObjects, COMDAT
; _this$ = ecx

; 20   : 	m_fontTexture.DestroyDeviceObjects();

  00000	83 c1 2c	 add	 ecx, 44			; 0000002cH
  00003	e9 00 00 00 00	 jmp	 ?DestroyDeviceObjects@CGraphicFontTexture@@QAEXXZ ; CGraphicFontTexture::DestroyDeviceObjects
?DestroyDeviceObjects@CGraphicText@@UAEXXZ ENDP		; CGraphicText::DestroyDeviceObjects
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\EterLib\GrpText.cpp
;	COMDAT ?CreateDeviceObjects@CGraphicText@@UAE_NXZ
_TEXT	SEGMENT
?CreateDeviceObjects@CGraphicText@@UAE_NXZ PROC		; CGraphicText::CreateDeviceObjects, COMDAT
; _this$ = ecx

; 15   : 	return m_fontTexture.CreateDeviceObjects();

  00000	83 c1 2c	 add	 ecx, 44			; 0000002cH
  00003	e9 00 00 00 00	 jmp	 ?CreateDeviceObjects@CGraphicFontTexture@@QAE_NXZ ; CGraphicFontTexture::CreateDeviceObjects
?CreateDeviceObjects@CGraphicText@@UAE_NXZ ENDP		; CGraphicText::CreateDeviceObjects
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\EterLib\GrpText.cpp
;	COMDAT ??1CGraphicText@@UAE@XZ
_TEXT	SEGMENT
??1CGraphicText@@UAE@XZ PROC				; CGraphicText::~CGraphicText, COMDAT
; _this$ = ecx

; 10   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 11   : }

  00003	8d 4e 2c	 lea	 ecx, DWORD PTR [esi+44]
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CGraphicText@@6B@
  0000c	e8 00 00 00 00	 call	 ??1CGraphicFontTexture@@UAE@XZ ; CGraphicFontTexture::~CGraphicFontTexture
  00011	8b ce		 mov	 ecx, esi
  00013	5e		 pop	 esi
  00014	e9 00 00 00 00	 jmp	 ??1CResource@@UAE@XZ	; CResource::~CResource
??1CGraphicText@@UAE@XZ ENDP				; CGraphicText::~CGraphicText
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\EterLib\GrpText.cpp
;	COMDAT ??0CGraphicText@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_c_szFileName$ = 8					; size = 4
??0CGraphicText@@QAE@PBD@Z PROC				; CGraphicText::CGraphicText, COMDAT
; _this$ = ecx

; 6    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CGraphicText@@QAE@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi

; 5    : CGraphicText::CGraphicText(const char* c_szFileName) : CResource(c_szFileName)

  00029	ff 75 08	 push	 DWORD PTR _c_szFileName$[ebp]
  0002c	e8 00 00 00 00	 call	 ??0CResource@@QAE@PBD@Z	; CResource::CResource

; 6    : {

  00031	8d 4e 2c	 lea	 ecx, DWORD PTR [esi+44]
  00034	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003b	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CGraphicText@@6B@
  00041	e8 00 00 00 00	 call	 ??0CGraphicFontTexture@@QAE@XZ ; CGraphicFontTexture::CGraphicFontTexture

; 7    : }

  00046	8b c6		 mov	 eax, esi
  00048	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00052	59		 pop	 ecx
  00053	5e		 pop	 esi
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CGraphicText@@QAE@PBD@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CResource@@UAE@XZ	; CResource::~CResource
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??0CGraphicText@@QAE@PBD@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CGraphicText@@QAE@PBD@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CGraphicText@@QAE@PBD@Z ENDP				; CGraphicText::CGraphicText
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\EterLib\GrpText.cpp
;	COMDAT ?Type@CGraphicText@@SAKXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?Type@CGraphicText@@SAKXZ PROC				; CGraphicText::Type, COMDAT

; 29   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Type@CGraphicText@@SAKXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 30   : 	static TType s_type = StringToType("CGraphicText");

  00022	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0002e	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??Type@CGraphicText@@SAKXZ@4HA
  00036	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  0003c	7f 14		 jg	 SHORT $LN9@Type
$LN5@Type:

; 31   : 	return s_type;
; 32   : }

  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_type@?1??Type@CGraphicText@@SAKXZ@4KA
  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
$LN9@Type:

; 30   : 	static TType s_type = StringToType("CGraphicText");

  00052	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CGraphicText@@SAKXZ@4HA
  00057	e8 00 00 00 00	 call	 __Init_thread_header
  0005c	83 c4 04	 add	 esp, 4
  0005f	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??Type@CGraphicText@@SAKXZ@4HA, -1
  00066	75 d6		 jne	 SHORT $LN5@Type
  00068	68 00 00 00 00	 push	 OFFSET ??_C@_0N@JPGFHJCC@CGraphicText@
  0006d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00074	e8 00 00 00 00	 call	 ?StringToType@CResource@@SAKPBD@Z ; CResource::StringToType
  00079	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CGraphicText@@SAKXZ@4HA
  0007e	a3 00 00 00 00	 mov	 DWORD PTR ?s_type@?1??Type@CGraphicText@@SAKXZ@4KA, eax
  00083	e8 00 00 00 00	 call	 __Init_thread_footer
  00088	83 c4 08	 add	 esp, 8
  0008b	eb b1		 jmp	 SHORT $LN5@Type
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Type@CGraphicText@@SAKXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CGraphicText@@SAKXZ@4HA
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$?Type@CGraphicText@@SAKXZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Type@CGraphicText@@SAKXZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Type@CGraphicText@@SAKXZ ENDP				; CGraphicText::Type
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.43.34808.0 

	TITLE	C:\Marty 5.5\Src-Client\Client\EterBase\Distribute\Timer.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??1?$CSingleton@VCTimer@@@@UAE@XZ		; CSingleton<CTimer>::~CSingleton<CTimer>
PUBLIC	??_G?$CSingleton@VCTimer@@@@UAEPAXI@Z		; CSingleton<CTimer>::`scalar deleting destructor'
PUBLIC	??0CTimer@@QAE@XZ				; CTimer::CTimer
PUBLIC	??1CTimer@@UAE@XZ				; CTimer::~CTimer
PUBLIC	?Advance@CTimer@@QAEXXZ				; CTimer::Advance
PUBLIC	?Adjust@CTimer@@QAEXH@Z				; CTimer::Adjust
PUBLIC	?SetBaseTime@CTimer@@QAEXXZ			; CTimer::SetBaseTime
PUBLIC	?GetCurrentSecond@CTimer@@QAEMXZ		; CTimer::GetCurrentSecond
PUBLIC	?GetCurrentMillisecond@CTimer@@QAEKXZ		; CTimer::GetCurrentMillisecond
PUBLIC	?GetElapsedSecond@CTimer@@QAEMXZ		; CTimer::GetElapsedSecond
PUBLIC	?GetElapsedMilliecond@CTimer@@QAEKXZ		; CTimer::GetElapsedMilliecond
PUBLIC	?UseCustomTime@CTimer@@QAEXXZ			; CTimer::UseCustomTime
PUBLIC	??_GCTimer@@UAEPAXI@Z				; CTimer::`scalar deleting destructor'
PUBLIC	?ELTimer_Init@@YAHXZ				; ELTimer_Init
PUBLIC	?ELTimer_GetMSec@@YAKXZ				; ELTimer_GetMSec
PUBLIC	?ELTimer_SetServerMSec@@YAXK@Z			; ELTimer_SetServerMSec
PUBLIC	?ELTimer_GetServerMSec@@YAKXZ			; ELTimer_GetServerMSec
PUBLIC	?ELTimer_SetFrameMSec@@YAXXZ			; ELTimer_SetFrameMSec
PUBLIC	?ELTimer_GetFrameMSec@@YAKXZ			; ELTimer_GetFrameMSec
PUBLIC	?ELTimer_GetServerFrameMSec@@YAKXZ		; ELTimer_GetServerFrameMSec
PUBLIC	?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
PUBLIC	??_7?$CSingleton@VCTimer@@@@6B@			; CSingleton<CTimer>::`vftable'
PUBLIC	??_7CTimer@@6B@					; CTimer::`vftable'
PUBLIC	??_R4CTimer@@6B@				; CTimer::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCTimer@@@8				; CTimer `RTTI Type Descriptor'
PUBLIC	??_R3CTimer@@8					; CTimer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CTimer@@8					; CTimer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CTimer@@8				; CTimer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$CSingleton@VCTimer@@@@8		; CSingleton<CTimer>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$CSingleton@VCTimer@@@@@8		; CSingleton<CTimer> `RTTI Type Descriptor'
PUBLIC	??_R3?$CSingleton@VCTimer@@@@8			; CSingleton<CTimer>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CSingleton@VCTimer@@@@8			; CSingleton<CTimer>::`RTTI Base Class Array'
PUBLIC	??_R4?$CSingleton@VCTimer@@@@6B@		; CSingleton<CTimer>::`RTTI Complete Object Locator'
PUBLIC	__real@447a0000
PUBLIC	__xmm@41f00000000000000000000000000000
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__imp__timeGetTime@0:PROC
EXTRN	??_E?$CSingleton@VCTimer@@@@UAEPAXI@Z:PROC	; CSingleton<CTimer>::`vector deleting destructor'
EXTRN	??_ECTimer@@UAEPAXI@Z:PROC			; CTimer::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	__fltused:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A DD 01H DUP (?) ; CSingleton<CTimer>::ms_singleton
_BSS	ENDS
_BSS	SEGMENT
?gs_dwBaseTime@@3KA DD 01H DUP (?)			; gs_dwBaseTime
?gs_dwServerTime@@3KA DD 01H DUP (?)			; gs_dwServerTime
?gs_dwClientTime@@3KA DD 01H DUP (?)			; gs_dwClientTime
?gs_dwFrameTime@@3KA DD 01H DUP (?)			; gs_dwFrameTime
_BSS	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@447a0000
CONST	SEGMENT
__real@447a0000 DD 0447a0000r			; 1000
CONST	ENDS
;	COMDAT ??_R4?$CSingleton@VCTimer@@@@6B@
rdata$r	SEGMENT
??_R4?$CSingleton@VCTimer@@@@6B@ DD 00H			; CSingleton<CTimer>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CSingleton@VCTimer@@@@@8
	DD	FLAT:??_R3?$CSingleton@VCTimer@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CSingleton@VCTimer@@@@8
rdata$r	SEGMENT
??_R2?$CSingleton@VCTimer@@@@8 DD FLAT:??_R1A@?0A@EA@?$CSingleton@VCTimer@@@@8 ; CSingleton<CTimer>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CSingleton@VCTimer@@@@8
rdata$r	SEGMENT
??_R3?$CSingleton@VCTimer@@@@8 DD 00H			; CSingleton<CTimer>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CSingleton@VCTimer@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CSingleton@VCTimer@@@@@8
data$rs	SEGMENT
??_R0?AV?$CSingleton@VCTimer@@@@@8 DD FLAT:??_7type_info@@6B@ ; CSingleton<CTimer> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CSingleton@VCTimer@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CSingleton@VCTimer@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CSingleton@VCTimer@@@@8 DD FLAT:??_R0?AV?$CSingleton@VCTimer@@@@@8 ; CSingleton<CTimer>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CSingleton@VCTimer@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CTimer@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CTimer@@8 DD FLAT:??_R0?AVCTimer@@@8	; CTimer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CTimer@@8
rdata$r	ENDS
;	COMDAT ??_R2CTimer@@8
rdata$r	SEGMENT
??_R2CTimer@@8 DD FLAT:??_R1A@?0A@EA@CTimer@@8		; CTimer::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$CSingleton@VCTimer@@@@8
rdata$r	ENDS
;	COMDAT ??_R3CTimer@@8
rdata$r	SEGMENT
??_R3CTimer@@8 DD 00H					; CTimer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CTimer@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCTimer@@@8
data$rs	SEGMENT
??_R0?AVCTimer@@@8 DD FLAT:??_7type_info@@6B@		; CTimer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCTimer@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CTimer@@6B@
rdata$r	SEGMENT
??_R4CTimer@@6B@ DD 00H					; CTimer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCTimer@@@8
	DD	FLAT:??_R3CTimer@@8
rdata$r	ENDS
;	COMDAT ??_7CTimer@@6B@
CONST	SEGMENT
??_7CTimer@@6B@ DD FLAT:??_R4CTimer@@6B@		; CTimer::`vftable'
	DD	FLAT:??_ECTimer@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CSingleton@VCTimer@@@@6B@
CONST	SEGMENT
??_7?$CSingleton@VCTimer@@@@6B@ DD FLAT:??_R4?$CSingleton@VCTimer@@@@6B@ ; CSingleton<CTimer>::`vftable'
	DD	FLAT:??_E?$CSingleton@VCTimer@@@@UAEPAXI@Z
CONST	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\EterBase\Timer.cpp
;	COMDAT ?ELTimer_GetServerFrameMSec@@YAKXZ
_TEXT	SEGMENT
?ELTimer_GetServerFrameMSec@@YAKXZ PROC			; ELTimer_GetServerFrameMSec, COMDAT

; 44   : 	return ELTimer_GetFrameMSec() - gs_dwClientTime + gs_dwServerTime;

  00000	e8 00 00 00 00	 call	 ?ELTimer_GetFrameMSec@@YAKXZ ; ELTimer_GetFrameMSec
  00005	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gs_dwServerTime@@3KA
  0000b	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?gs_dwClientTime@@3KA
  00011	03 c1		 add	 eax, ecx

; 45   : }

  00013	c3		 ret	 0
?ELTimer_GetServerFrameMSec@@YAKXZ ENDP			; ELTimer_GetServerFrameMSec
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\EterBase\Timer.cpp
;	COMDAT ?ELTimer_GetFrameMSec@@YAKXZ
_TEXT	SEGMENT
?ELTimer_GetFrameMSec@@YAKXZ PROC			; ELTimer_GetFrameMSec, COMDAT

; 39   : 	return gs_dwFrameTime;

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gs_dwFrameTime@@3KA

; 40   : }

  00005	c3		 ret	 0
?ELTimer_GetFrameMSec@@YAKXZ ENDP			; ELTimer_GetFrameMSec
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\EterBase\Timer.cpp
;	COMDAT ?ELTimer_SetFrameMSec@@YAXXZ
_TEXT	SEGMENT
?ELTimer_SetFrameMSec@@YAXXZ PROC			; ELTimer_SetFrameMSec, COMDAT

; 49   : 	gs_dwFrameTime = ELTimer_GetMSec();

  00000	e8 00 00 00 00	 call	 ?ELTimer_GetMSec@@YAKXZ	; ELTimer_GetMSec
  00005	a3 00 00 00 00	 mov	 DWORD PTR ?gs_dwFrameTime@@3KA, eax

; 50   : }

  0000a	c3		 ret	 0
?ELTimer_SetFrameMSec@@YAXXZ ENDP			; ELTimer_SetFrameMSec
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\EterBase\Timer.cpp
;	COMDAT ?ELTimer_GetServerMSec@@YAKXZ
_TEXT	SEGMENT
?ELTimer_GetServerMSec@@YAKXZ PROC			; ELTimer_GetServerMSec, COMDAT

; 34   : 	return CTimer::instance().GetCurrentMillisecond() - gs_dwClientTime + gs_dwServerTime;

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
  00006	56		 push	 esi
  00007	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?gs_dwServerTime@@3KA
  0000d	2b 35 00 00 00
	00		 sub	 esi, DWORD PTR ?gs_dwClientTime@@3KA
  00013	e8 00 00 00 00	 call	 ?GetCurrentMillisecond@CTimer@@QAEKXZ ; CTimer::GetCurrentMillisecond
  00018	03 c6		 add	 eax, esi
  0001a	5e		 pop	 esi

; 35   : }

  0001b	c3		 ret	 0
?ELTimer_GetServerMSec@@YAKXZ ENDP			; ELTimer_GetServerMSec
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\EterBase\Timer.cpp
;	COMDAT ?ELTimer_SetServerMSec@@YAXK@Z
_TEXT	SEGMENT
_dwServerTime$ = 8					; size = 4
?ELTimer_SetServerMSec@@YAXK@Z PROC			; ELTimer_SetServerMSec, COMDAT

; 24   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 25   : 	if (0 != dwServerTime)

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwServerTime$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 15		 je	 SHORT $LN2@ELTimer_Se

; 26   : 	{
; 27   : 		gs_dwServerTime = dwServerTime;
; 28   : 		gs_dwClientTime = CTimer::instance().GetCurrentMillisecond();

  0000a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
  00010	a3 00 00 00 00	 mov	 DWORD PTR ?gs_dwServerTime@@3KA, eax
  00015	e8 00 00 00 00	 call	 ?GetCurrentMillisecond@CTimer@@QAEKXZ ; CTimer::GetCurrentMillisecond
  0001a	a3 00 00 00 00	 mov	 DWORD PTR ?gs_dwClientTime@@3KA, eax
$LN2@ELTimer_Se:

; 29   : 	}
; 30   : }

  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?ELTimer_SetServerMSec@@YAXK@Z ENDP			; ELTimer_SetServerMSec
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\EterBase\Timer.cpp
;	COMDAT ?ELTimer_GetMSec@@YAKXZ
_TEXT	SEGMENT
?ELTimer_GetMSec@@YAKXZ PROC				; ELTimer_GetMSec, COMDAT

; 20   : 	return timeGetTime() - gs_dwBaseTime;

  00000	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__timeGetTime@0
  00006	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?gs_dwBaseTime@@3KA

; 21   : }

  0000c	c3		 ret	 0
?ELTimer_GetMSec@@YAKXZ ENDP				; ELTimer_GetMSec
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\EterBase\Timer.cpp
;	COMDAT ?ELTimer_Init@@YAHXZ
_TEXT	SEGMENT
?ELTimer_Init@@YAHXZ PROC				; ELTimer_Init, COMDAT

; 14   : 	gs_dwBaseTime = timeGetTime();

  00000	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__timeGetTime@0
  00006	a3 00 00 00 00	 mov	 DWORD PTR ?gs_dwBaseTime@@3KA, eax

; 15   : 	return 1;

  0000b	b8 01 00 00 00	 mov	 eax, 1

; 16   : }

  00010	c3		 ret	 0
?ELTimer_Init@@YAHXZ ENDP				; ELTimer_Init
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCTimer@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTimer@@UAEPAXI@Z PROC				; CTimer::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CTimer@@UAE@XZ	; CTimer::~CTimer
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN5@scalar
  00011	6a 1c		 push	 28			; 0000001cH
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN5@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCTimer@@UAEPAXI@Z ENDP				; CTimer::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\EterBase\Timer.cpp
;	COMDAT ?UseCustomTime@CTimer@@QAEXXZ
_TEXT	SEGMENT
?UseCustomTime@CTimer@@QAEXXZ PROC			; CTimer::UseCustomTime, COMDAT
; _this$ = ecx

; 137  : 	m_bUseRealTime = false;

  00000	c6 41 04 00	 mov	 BYTE PTR [ecx+4], 0

; 138  : }

  00004	c3		 ret	 0
?UseCustomTime@CTimer@@QAEXXZ ENDP			; CTimer::UseCustomTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\EterBase\Timer.cpp
;	COMDAT ?GetElapsedMilliecond@CTimer@@QAEKXZ
_TEXT	SEGMENT
?GetElapsedMilliecond@CTimer@@QAEKXZ PROC		; CTimer::GetElapsedMilliecond, COMDAT
; _this$ = ecx

; 129  : 	if (!m_bUseRealTime)

  00000	80 79 04 00	 cmp	 BYTE PTR [ecx+4], 0
  00004	75 0a		 jne	 SHORT $LN2@GetElapsed

; 130  : 		return 16 + (m_index & 1);

  00006	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00009	83 e0 01	 and	 eax, 1
  0000c	83 c0 10	 add	 eax, 16			; 00000010H

; 133  : }

  0000f	c3		 ret	 0
$LN2@GetElapsed:

; 131  : 
; 132  : 	return m_dwElapsedTime;

  00010	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]

; 133  : }

  00013	c3		 ret	 0
?GetElapsedMilliecond@CTimer@@QAEKXZ ENDP		; CTimer::GetElapsedMilliecond
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\EterBase\Timer.cpp
;	COMDAT ?GetElapsedSecond@CTimer@@QAEMXZ
_TEXT	SEGMENT
tv78 = -4						; size = 4
?GetElapsedSecond@CTimer@@QAEMXZ PROC			; CTimer::GetElapsedSecond, COMDAT
; _this$ = ecx

; 123  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 124  : 	return GetElapsedMilliecond() / 1000.0f;

  00004	e8 00 00 00 00	 call	 ?GetElapsedMilliecond@CTimer@@QAEKXZ ; CTimer::GetElapsedMilliecond
  00009	66 0f 6e c0	 movd	 xmm0, eax
  0000d	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  00011	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00014	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  0001d	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00021	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@447a0000
  00029	f3 0f 11 45 fc	 movss	 DWORD PTR tv78[ebp], xmm0
  0002e	d9 45 fc	 fld	 DWORD PTR tv78[ebp]

; 125  : }

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
?GetElapsedSecond@CTimer@@QAEMXZ ENDP			; CTimer::GetElapsedSecond
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\EterBase\Timer.cpp
;	COMDAT ?GetCurrentMillisecond@CTimer@@QAEKXZ
_TEXT	SEGMENT
?GetCurrentMillisecond@CTimer@@QAEKXZ PROC		; CTimer::GetCurrentMillisecond, COMDAT
; _this$ = ecx

; 116  : 	if (m_bUseRealTime)

  00000	80 79 04 00	 cmp	 BYTE PTR [ecx+4], 0
  00004	0f 85 00 00 00
	00		 jne	 ?ELTimer_GetMSec@@YAKXZ	; ELTimer_GetMSec

; 117  : 		return ELTimer_GetMSec();
; 118  : 
; 119  : 	return m_dwCurrentTime;

  0000a	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]

; 120  : }

  0000d	c3		 ret	 0
?GetCurrentMillisecond@CTimer@@QAEKXZ ENDP		; CTimer::GetCurrentMillisecond
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\EterBase\Timer.cpp
;	COMDAT ?GetCurrentSecond@CTimer@@QAEMXZ
_TEXT	SEGMENT
tv72 = -4						; size = 4
?GetCurrentSecond@CTimer@@QAEMXZ PROC			; CTimer::GetCurrentSecond, COMDAT
; _this$ = ecx

; 107  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 108  : 	if (m_bUseRealTime)

  00004	80 79 04 00	 cmp	 BYTE PTR [ecx+4], 0
  00008	74 31		 je	 SHORT $LN2@GetCurrent

; 109  : 		return ELTimer_GetMSec() / 1000.0f;

  0000a	e8 00 00 00 00	 call	 ?ELTimer_GetMSec@@YAKXZ	; ELTimer_GetMSec
  0000f	66 0f 6e c0	 movd	 xmm0, eax
  00013	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  00017	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0001a	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  00023	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00027	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@447a0000
  0002f	f3 0f 11 45 fc	 movss	 DWORD PTR tv72[ebp], xmm0
  00034	d9 45 fc	 fld	 DWORD PTR tv72[ebp]

; 112  : }

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
$LN2@GetCurrent:

; 110  : 
; 111  : 	return m_fCurrentTime;

  0003b	d9 41 10	 fld	 DWORD PTR [ecx+16]

; 112  : }

  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
?GetCurrentSecond@CTimer@@QAEMXZ ENDP			; CTimer::GetCurrentSecond
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\EterBase\Timer.cpp
;	COMDAT ?SetBaseTime@CTimer@@QAEXXZ
_TEXT	SEGMENT
?SetBaseTime@CTimer@@QAEXXZ PROC			; CTimer::SetBaseTime, COMDAT
; _this$ = ecx

; 74   : 	m_dwCurrentTime = 0;

  00000	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0

; 75   : }

  00007	c3		 ret	 0
?SetBaseTime@CTimer@@QAEXXZ ENDP			; CTimer::SetBaseTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\EterBase\Timer.cpp
;	COMDAT ?Adjust@CTimer@@QAEXH@Z
_TEXT	SEGMENT
_iTimeGap$ = 8						; size = 4
?Adjust@CTimer@@QAEXH@Z PROC				; CTimer::Adjust, COMDAT
; _this$ = ecx

; 102  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 103  : 	m_dwCurrentTime += iTimeGap;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iTimeGap$[ebp]
  00006	01 41 0c	 add	 DWORD PTR [ecx+12], eax

; 104  : }

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?Adjust@CTimer@@QAEXH@Z ENDP				; CTimer::Adjust
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\EterBase\Timer.cpp
;	COMDAT ?Advance@CTimer@@QAEXXZ
_TEXT	SEGMENT
?Advance@CTimer@@QAEXXZ PROC				; CTimer::Advance, COMDAT
; _this$ = ecx

; 78   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 79   : 	if (!m_bUseRealTime)

  00003	80 7e 04 00	 cmp	 BYTE PTR [esi+4], 0
  00007	75 4d		 jne	 SHORT $LN2@Advance

; 80   : 	{
; 81   : 		++m_index;

  00009	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  0000c	41		 inc	 ecx
  0000d	89 4e 18	 mov	 DWORD PTR [esi+24], ecx

; 82   : 
; 83   : 		if (m_index == 1)

  00010	83 f9 01	 cmp	 ecx, 1
  00013	75 0a		 jne	 SHORT $LN4@Advance

; 84   : 			m_index = -1;

  00015	c7 46 18 ff ff
	ff ff		 mov	 DWORD PTR [esi+24], -1
  0001c	83 c9 ff	 or	 ecx, -1
$LN4@Advance:

; 85   : 
; 86   : 		m_dwCurrentTime += 16 + (m_index & 1);

  0001f	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00022	83 e1 01	 and	 ecx, 1
  00025	83 c0 10	 add	 eax, 16			; 00000010H
  00028	03 c8		 add	 ecx, eax

; 87   : 		m_fCurrentTime = m_dwCurrentTime / 1000.0f;

  0002a	8b c1		 mov	 eax, ecx
  0002c	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0002f	66 0f 6e c1	 movd	 xmm0, ecx
  00033	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  00037	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  00040	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00044	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@447a0000
  0004c	f3 0f 11 46 10	 movss	 DWORD PTR [esi+16], xmm0

; 97   : 		m_dwCurrentTime = currentTime;
; 98   : 	}
; 99   : }

  00051	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx
  00054	5e		 pop	 esi
  00055	c3		 ret	 0
$LN2@Advance:

; 88   : 	}
; 89   : 	else
; 90   : 	{
; 91   : 		DWORD currentTime = ELTimer_GetMSec();

  00056	e8 00 00 00 00	 call	 ?ELTimer_GetMSec@@YAKXZ	; ELTimer_GetMSec

; 92   : 
; 93   : 		if (m_dwCurrentTime == 0)

  0005b	8b 56 0c	 mov	 edx, DWORD PTR [esi+12]
  0005e	8b c8		 mov	 ecx, eax
  00060	85 d2		 test	 edx, edx
  00062	75 05		 jne	 SHORT $LN5@Advance

; 94   : 			m_dwCurrentTime = currentTime;

  00064	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx
  00067	8b d1		 mov	 edx, ecx
$LN5@Advance:

; 95   : 
; 96   : 		m_dwElapsedTime = currentTime - m_dwCurrentTime;

  00069	2b c2		 sub	 eax, edx
  0006b	89 46 14	 mov	 DWORD PTR [esi+20], eax

; 97   : 		m_dwCurrentTime = currentTime;
; 98   : 	}
; 99   : }

  0006e	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx
  00071	5e		 pop	 esi
  00072	c3		 ret	 0
?Advance@CTimer@@QAEXXZ ENDP				; CTimer::Advance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\EterBase\Timer.cpp
; File C:\Marty 5.5\Src-Client\Client\EterBase\Singleton.h
; File C:\Marty 5.5\Src-Client\Client\EterBase\Timer.cpp
;	COMDAT ??1CTimer@@UAE@XZ
_TEXT	SEGMENT
??1CTimer@@UAE@XZ PROC					; CTimer::~CTimer, COMDAT
; _this$ = ecx
; File C:\Marty 5.5\Src-Client\Client\EterBase\Singleton.h

; 19   : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CSingleton@VCTimer@@@@6B@

; 20   : 		assert(ms_singleton);
; 21   : 		ms_singleton = 0;

  00006	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A, 0 ; CSingleton<CTimer>::ms_singleton
; File C:\Marty 5.5\Src-Client\Client\EterBase\Timer.cpp

; 70   : }

  00010	c3		 ret	 0
??1CTimer@@UAE@XZ ENDP					; CTimer::~CTimer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\EterBase\Timer.cpp
; File C:\Marty 5.5\Src-Client\Client\EterBase\Singleton.h
; File C:\Marty 5.5\Src-Client\Client\EterBase\Timer.cpp
;	COMDAT ??0CTimer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CTimer@@QAE@XZ PROC					; CTimer::CTimer, COMDAT
; _this$ = ecx

; 53   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
; File C:\Marty 5.5\Src-Client\Client\EterBase\Singleton.h

; 15   : 		ms_singleton = (T*) ((int) this + offset);

  00007	89 35 00 00 00
	00		 mov	 DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A, esi ; CSingleton<CTimer>::ms_singleton
; File C:\Marty 5.5\Src-Client\Client\EterBase\Timer.cpp

; 53   : {

  0000d	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  00010	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CTimer@@6B@

; 54   : 	ELTimer_Init();

  00016	e8 00 00 00 00	 call	 ?ELTimer_Init@@YAHXZ	; ELTimer_Init

; 55   : 
; 56   : 	if (this)
; 57   : 	{
; 58   : 		m_dwCurrentTime = 0;

  0001b	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0

; 59   : 		m_bUseRealTime = true;
; 60   : 		m_index = 0;
; 61   : 
; 62   : 		m_dwElapsedTime = 0;
; 63   : 
; 64   : 		m_fCurrentTime = 0.0f;
; 65   : 	}
; 66   : }

  00022	8b c6		 mov	 eax, esi
  00024	c6 46 04 01	 mov	 BYTE PTR [esi+4], 1
  00028	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
  0002f	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00036	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  0003d	5e		 pop	 esi
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
??0CTimer@@QAE@XZ ENDP					; CTimer::CTimer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\EterBase\Singleton.h
;	COMDAT ??_G?$CSingleton@VCTimer@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CSingleton@VCTimer@@@@UAEPAXI@Z PROC		; CSingleton<CTimer>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1

; 19   : 	{

  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CSingleton@VCTimer@@@@6B@

; 20   : 		assert(ms_singleton);
; 21   : 		ms_singleton = 0;

  00010	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A, 0 ; CSingleton<CTimer>::ms_singleton
  0001a	74 0b		 je	 SHORT $LN8@scalar
  0001c	6a 04		 push	 4
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00024	83 c4 08	 add	 esp, 8
$LN8@scalar:
  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_G?$CSingleton@VCTimer@@@@UAEPAXI@Z ENDP		; CSingleton<CTimer>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Marty 5.5\Src-Client\Client\EterBase\Singleton.h
;	COMDAT ??1?$CSingleton@VCTimer@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CSingleton@VCTimer@@@@UAE@XZ PROC			; CSingleton<CTimer>::~CSingleton<CTimer>, COMDAT
; _this$ = ecx

; 19   : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CSingleton@VCTimer@@@@6B@

; 20   : 		assert(ms_singleton);
; 21   : 		ms_singleton = 0;

  00006	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A, 0 ; CSingleton<CTimer>::ms_singleton

; 22   : 	}

  00010	c3		 ret	 0
??1?$CSingleton@VCTimer@@@@UAE@XZ ENDP			; CSingleton<CTimer>::~CSingleton<CTimer>
_TEXT	ENDS
END
